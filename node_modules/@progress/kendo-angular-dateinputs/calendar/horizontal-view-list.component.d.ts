/**-----------------------------------------------------------------------------------------
* Copyright © 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ChangeDetectorRef, EventEmitter, OnChanges, TemplateRef, OnDestroy, ElementRef, Renderer2, AfterViewInit } from '@angular/core';
import { BusViewService } from './services/bus-view.service';
import { ViewService } from './models/view-service.interface';
import { WeekNamesService } from './services/weeknames.service';
import { IntlService } from '@progress/kendo-angular-intl';
import { SelectionRangeEnd } from './models/selection-range-end.type';
import { SelectionRange } from './models/selection-range.interface';
import { Action } from './models/navigation-action.enum';
import { CalendarViewEnum } from './models/view.enum';
import { CalendarOrientation } from './models/orientation';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
export declare class HorizontalViewListComponent implements OnChanges, AfterViewInit, OnDestroy {
    private bus;
    intl: IntlService;
    private weekService;
    private cdr;
    private element;
    private renderer;
    handleMultiViewCalendarFocus(): void;
    handleMultiViewCalendarBlur(event: any): void;
    cellTemplateRef: TemplateRef<any>;
    weekNumberTemplateRef: TemplateRef<any>;
    activeRangeEnd: SelectionRangeEnd;
    activeView: CalendarViewEnum;
    cellUID: string;
    focusedDate: Date;
    isActive: boolean;
    min: Date;
    max: Date;
    selectionRange: SelectionRange;
    selectedDates: Date[];
    views: number;
    showViewHeader: boolean;
    animateNavigation: boolean;
    orientation: CalendarOrientation;
    activeDescendant: string;
    tabIndex: number;
    disabled: boolean;
    id: string;
    get weekNumber(): boolean;
    set weekNumber(showWeekNumbers: boolean);
    cellClick: EventEmitter<any>;
    weekNumberCellClick: EventEmitter<Date[]>;
    cellEnter: EventEmitter<Date>;
    cellLeave: EventEmitter<Date>;
    activeDateChange: EventEmitter<Date>;
    focusCalendar: EventEmitter<void>;
    blurCalendar: EventEmitter<any>;
    focusedCellChange: EventEmitter<string>;
    getComponentClass: boolean;
    get horizontalHostClass(): boolean;
    get verticalHostClass(): boolean;
    get getComponentMonthClass(): boolean;
    get getComponentYearClass(): boolean;
    get getComponentDecadeClass(): boolean;
    get getComponentCenturyClass(): boolean;
    get role(): string;
    get getActiveDescendant(): string;
    get getTabIndex(): number;
    service: ViewService;
    weekNames: string[];
    wideWeekNames: string[];
    activeDate: Date;
    dates: Date[];
    skip: number;
    total: number;
    nextAnimationDate: Date;
    prevAnimationDate: Date;
    private showWeekNumbers;
    private intlSubscription;
    private animation;
    constructor(bus: BusViewService, intl: IntlService, weekService: WeekNamesService, cdr: ChangeDetectorRef, element: ElementRef<HTMLElement>, renderer: Renderer2);
    ngOnChanges(changes: any): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    initService(): void;
    isMonthView(): boolean;
    getCaptionTitle(date: Date): string;
    getCaptionClass(): string;
    handleClassicCalendarFocus(): void;
    handleClassicCalendarBlur(event: any): void;
    animateView(action: Action): void;
    navigate(action: Action): Date;
    canNavigate(action: Action): boolean;
    private getWeekNames;
    private setTableMinWidth;
    private intlChange;
    private clampDate;
    private move;
    private isListInRange;
    private isInDates;
    private getTake;
    private setAriaActivedescendant;
    static ɵfac: i0.ɵɵFactoryDeclaration<HorizontalViewListComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<HorizontalViewListComponent, "kendo-calendar-horizontal", never, { "cellTemplateRef": "cellTemplateRef"; "weekNumberTemplateRef": "weekNumberTemplateRef"; "activeRangeEnd": "activeRangeEnd"; "activeView": "activeView"; "cellUID": "cellUID"; "focusedDate": "focusedDate"; "isActive": "isActive"; "min": "min"; "max": "max"; "selectionRange": "selectionRange"; "selectedDates": "selectedDates"; "views": "views"; "showViewHeader": "showViewHeader"; "animateNavigation": "animateNavigation"; "orientation": "orientation"; "activeDescendant": "activeDescendant"; "tabIndex": "tabIndex"; "disabled": "disabled"; "id": "id"; "weekNumber": "weekNumber"; }, { "cellClick": "cellClick"; "weekNumberCellClick": "weekNumberCellClick"; "cellEnter": "cellEnter"; "cellLeave": "cellLeave"; "activeDateChange": "activeDateChange"; "focusCalendar": "focusCalendar"; "blurCalendar": "blurCalendar"; "focusedCellChange": "focusedCellChange"; }, never, never>;
}
