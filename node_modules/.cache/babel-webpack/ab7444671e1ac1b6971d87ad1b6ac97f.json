{"ast":null,"code":"/**-----------------------------------------------------------------------------------------\n* Copyright © 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { isDevMode, Directive, Optional, EventEmitter, ElementRef, Component, Input, Output, HostBinding, ViewChild, ContentChild, ViewChildren, forwardRef, Inject, Injectable, HostListener, NgModule, ViewContainerRef, ContentChildren, ChangeDetectionStrategy } from '@angular/core';\nimport { NgControl, NG_VALUE_ACCESSOR, NG_VALIDATORS, RadioControlValueAccessor } from '@angular/forms';\nimport { Subscription, fromEvent, interval, merge, BehaviorSubject, Subject } from 'rxjs';\nimport { take, filter, concatMap, startWith, takeUntil, skip, debounceTime, throttleTime } from 'rxjs/operators';\nimport * as i1 from '@progress/kendo-angular-l10n';\nimport { ComponentMessages, LocalizationService, L10N_PREFIX, RTL } from '@progress/kendo-angular-l10n';\nimport * as i3 from '@progress/kendo-angular-common';\nimport { Keys, guid, hasObservers, anyChanged, isDocumentAvailable, KendoInput, isChanged, DraggableModule, EventsModule, ResizeSensorModule, PreventableEvent, findFocusableChild, closest as closest$1 } from '@progress/kendo-angular-common';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport * as i1$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { browser, mobileOS, detectDesktopBrowser, detectMobileOS } from '@progress/kendo-common';\nimport * as i1$2 from '@progress/kendo-angular-intl';\nimport * as i1$3 from '@progress/kendo-angular-popup';\nimport { PopupModule } from '@progress/kendo-angular-popup';\nimport { parseColor as parseColor$1, Color, namedColors } from '@progress/kendo-drawing';\nimport * as i5 from '@progress/kendo-angular-buttons';\nimport { ButtonModule } from '@progress/kendo-angular-buttons';\nimport * as i2 from '@progress/kendo-angular-dialog';\nimport { DialogsModule } from '@progress/kendo-angular-dialog';\nimport { __awaiter } from 'tslib';\nimport { SignaturePad } from '@progress/kendo-inputs-common';\n/**\n * @hidden\n *\n * Checks if the value is `null` or `undefined`. Falsy values like '', 0, false, NaN, etc. are regarded as present.\n */\n\nconst _c0 = [\"wrap\"];\nconst _c1 = [\"track\"];\nconst _c2 = [\"sliderSelection\"];\nconst _c3 = [\"ticks\"];\nconst _c4 = [\"tickElement\"];\nconst _c5 = [\"kendoSliderTicks\", \"\"];\n\nfunction SliderTicksComponent_li_0_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵelementContainer(1, 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tick_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n\n    const _r1 = i0.ɵɵreference(2);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.labelTemplate || _r1)(\"ngTemplateOutletContext\", tick_r3);\n  }\n}\n\nfunction SliderTicksComponent_li_0_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"\\xA0\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction SliderTicksComponent_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 2, 3);\n    i0.ɵɵelementContainerStart(2, 4);\n    i0.ɵɵtemplate(3, SliderTicksComponent_li_0_span_3_Template, 2, 2, \"span\", 5);\n    i0.ɵɵtemplate(4, SliderTicksComponent_li_0_ng_container_4_Template, 2, 0, \"ng-container\", 6);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tick_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r0.tickTitle(tick_r3.value));\n    i0.ɵɵproperty(\"ngClass\", tick_r3.classes);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngSwitch\", tick_r3.large);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", false);\n  }\n}\n\nfunction SliderTicksComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const value_r8 = ctx.value;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.tickTitle(value_r8), \" \");\n  }\n}\n\nconst _c6 = [\"draghandle\"];\nconst _c7 = [\"decreaseButton\"];\nconst _c8 = [\"increaseButton\"];\n\nfunction SliderComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 14, 15);\n    i0.ɵɵelement(2, \"span\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"title\", ctx_r1.decrementMessage);\n    i0.ɵɵattribute(\"tabindex\", -1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"k-i-caret-alt-left\", !ctx_r1.vertical)(\"k-i-caret-alt-down\", ctx_r1.vertical);\n  }\n}\n\nfunction SliderComponent_ul_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ul\", 17, 18);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"tickTitle\", ctx_r2.title)(\"vertical\", ctx_r2.vertical)(\"step\", ctx_r2.smallStep)(\"largeStep\", ctx_r2.largeStep)(\"min\", ctx_r2.min)(\"max\", ctx_r2.max)(\"labelTemplate\", ctx_r2.labelTemplate == null ? null : ctx_r2.labelTemplate.templateRef);\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\n\nfunction SliderComponent_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 19, 20);\n    i0.ɵɵlistener(\"click\", function SliderComponent_button_12_Template_button_click_0_listener($event) {\n      return $event.preventDefault();\n    });\n    i0.ɵɵelement(2, \"span\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"title\", ctx_r6.incrementMessage);\n    i0.ɵɵattribute(\"tabindex\", -1)(\"aria-label\", ctx_r6.currentValue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"k-i-caret-alt-right\", !ctx_r6.vertical)(\"k-i-caret-alt-up\", ctx_r6.vertical);\n  }\n}\n\nconst _c15 = function (a0, a1) {\n  return {\n    click: a0,\n    keydown: a1\n  };\n};\n\nconst _c16 = [\"draghandleStart\"];\nconst _c17 = [\"draghandleEnd\"];\n\nfunction RangeSliderComponent_ul_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ul\", 13, 14);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"tickTitle\", ctx_r1.title)(\"vertical\", ctx_r1.vertical)(\"step\", ctx_r1.smallStep)(\"largeStep\", ctx_r1.largeStep)(\"min\", ctx_r1.min)(\"max\", ctx_r1.max)(\"labelTemplate\", ctx_r1.labelTemplate == null ? null : ctx_r1.labelTemplate.templateRef);\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\n\nconst _c22 = [\"thumb\"];\n\nconst _c27 = function (a0, a1, a2) {\n  return {\n    keydown: a0,\n    focus: a1,\n    blur: a2\n  };\n};\n\nconst _c28 = [\"numericInput\"];\n\nconst _c33 = function (a0, a1) {\n  return {\n    mouseup: a0,\n    mouseleave: a1\n  };\n};\n\nconst _c34 = function (a0) {\n  return {\n    mousedown: a0\n  };\n};\n\nfunction NumericTextBoxComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵelementStart(1, \"button\", 5);\n    i0.ɵɵelement(2, \"span\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 7);\n    i0.ɵɵelement(4, \"span\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction2(13, _c33, ctx_r1.releaseArrow, ctx_r1.releaseArrow));\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"k-active\", ctx_r1.arrowDirection === ctx_r1.ArrowDirection.Up);\n    i0.ɵɵproperty(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction1(16, _c34, ctx_r1.increasePress))(\"title\", ctx_r1.incrementTitle);\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"aria-label\", ctx_r1.incrementTitle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"k-active\", ctx_r1.arrowDirection === ctx_r1.ArrowDirection.Down);\n    i0.ɵɵproperty(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction1(18, _c34, ctx_r1.decreasePress))(\"title\", ctx_r1.decrementTitle);\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"aria-label\", ctx_r1.decrementTitle);\n  }\n}\n\nconst _c35 = function (a0, a1, a2, a3, a4, a5, a6) {\n  return {\n    mousedown: a0,\n    dragenter: a1,\n    keydown: a2,\n    input: a3,\n    focus: a4,\n    blur: a5,\n    paste: a6\n  };\n};\n\nconst _c36 = [\"input\"];\n\nconst _c37 = function (a0, a1, a2, a3, a4) {\n  return {\n    focus: a0,\n    blur: a1,\n    click: a2,\n    dragstart: a3,\n    drop: a4\n  };\n};\n\nfunction TextBoxComponent_2_ng_template_0_Template(rf, ctx) {}\n\nfunction TextBoxComponent_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TextBoxComponent_2_ng_template_0_Template, 0, 0, \"ng-template\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.prefixTemplate == null ? null : ctx_r0.prefixTemplate.templateRef);\n  }\n}\n\nfunction TextBoxComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵlistener(\"click\", function TextBoxComponent_span_5_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.clearValue();\n    })(\"mousedown\", function TextBoxComponent_span_5_Template_span_mousedown_0_listener($event) {\n      return $event.preventDefault();\n    })(\"keydown.enter\", function TextBoxComponent_span_5_Template_span_keydown_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.clearValue($event);\n    })(\"keydown.space\", function TextBoxComponent_span_5_Template_span_keydown_space_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.clearValue($event);\n    });\n    i0.ɵɵelement(1, \"span\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"tabindex\", ctx_r2.tabIndex)(\"title\", ctx_r2.clearTitle());\n    i0.ɵɵattribute(\"aria-label\", ctx_r2.clearTitle());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r2.clearButtonClasses);\n  }\n}\n\nfunction TextBoxComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r3.errorIconClasses);\n  }\n}\n\nfunction TextBoxComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r4.successIconClasses);\n  }\n}\n\nfunction TextBoxComponent_9_ng_template_0_Template(rf, ctx) {}\n\nfunction TextBoxComponent_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TextBoxComponent_9_ng_template_0_Template, 0, 0, \"ng-template\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.suffixTemplate == null ? null : ctx_r5.suffixTemplate.templateRef);\n  }\n}\n\nconst _c40 = function (a0, a1, a2) {\n  return {\n    focus: a0,\n    blur: a1,\n    input: a2\n  };\n};\n\nconst _c41 = [[[\"kendo-textarea-suffix\"]]];\nconst _c42 = [\"kendo-textarea-suffix\"];\nconst _c43 = [\"*\"];\nconst _c44 = [\"clearButton\"];\nconst _c45 = [\"viewButtons\"];\nconst _c46 = [\"kendoFlatColorPickerHeader\", \"\"];\n\nfunction FlatColorPickerHeaderComponent_div_1_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 7, 8);\n    i0.ɵɵlistener(\"click\", function FlatColorPickerHeaderComponent_div_1_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const view_r4 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.onViewButtonClick(view_r4);\n    })(\"keydown.shift.tab\", function FlatColorPickerHeaderComponent_div_1_button_1_Template_button_keydown_shift_tab_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const i_r5 = restoredCtx.index;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return ctx_r9.onHeaderTabOut($event, i_r5);\n    });\n    i0.ɵɵelement(2, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const view_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"tabindex\", ctx_r3.innerTabIndex.toString())(\"ngClass\", ctx_r3.activeView === view_r4 ? \"k-selected\" : \"\");\n    i0.ɵɵattribute(\"title\", ctx_r3.getText(view_r4 === \"gradient\" ? \"gradientView\" : \"paletteView\"))(\"aria-label\", ctx_r3.getText(view_r4 === \"gradient\" ? \"gradientView\" : \"paletteView\"))(\"aria-pressed\", ctx_r3.activeView === view_r4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r3.getViewButtonIcon(view_r4));\n  }\n}\n\nfunction FlatColorPickerHeaderComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtemplate(1, FlatColorPickerHeaderComponent_div_1_button_1_Template, 3, 6, \"button\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.views);\n  }\n}\n\nfunction FlatColorPickerHeaderComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 10, 11);\n    i0.ɵɵlistener(\"click\", function FlatColorPickerHeaderComponent_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.clearButtonClick.emit();\n    });\n    i0.ɵɵelement(2, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"tabindex\", ctx_r1.innerTabIndex.toString());\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.getText(\"clearButton\"))(\"title\", ctx_r1.getText(\"clearButton\"));\n  }\n}\n\nfunction FlatColorPickerHeaderComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelement(1, \"span\", 14);\n    i0.ɵɵelementStart(2, \"span\", 15);\n    i0.ɵɵlistener(\"click\", function FlatColorPickerHeaderComponent_div_5_Template_span_click_2_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.valuePaneClick.emit($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"background-color\", ctx_r2.selection);\n    i0.ɵɵattribute(\"title\", ctx_r2.getText(\"previewColor\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"background-color\", ctx_r2.value);\n    i0.ɵɵattribute(\"title\", ctx_r2.getText(\"revertSelection\"));\n  }\n}\n\nconst _c47 = [\"kendoColorContrastSvg\", \"\"];\n\nfunction ColorContrastSvgComponent__svg_path_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\", 1);\n  }\n\n  if (rf & 2) {\n    const path_r1 = ctx.$implicit;\n    i0.ɵɵattribute(\"d\", path_r1);\n  }\n}\n\nconst _c48 = [\"opacityInput\"];\nconst _c49 = [\"hexInput\"];\nconst _c50 = [\"blueInput\"];\nconst _c51 = [\"toggleFormatButton\"];\n\nfunction ColorInputComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵelementStart(1, \"input\", 6, 7);\n    i0.ɵɵlistener(\"blur\", function ColorInputComponent_div_4_Template_input_blur_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.handleHexInputBlur();\n    })(\"input\", function ColorInputComponent_div_4_Template_input_input_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n\n      const _r3 = i0.ɵɵreference(2);\n\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.handleHexValueChange(_r3.value);\n    })(\"keydown.tab\", function ColorInputComponent_div_4_Template_input_keydown_tab_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      $event.preventDefault();\n      return ctx_r7.tabOut.emit();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 8);\n    i0.ɵɵtext(4, \"HEX\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", ctx_r1.focusableId)(\"disabled\", ctx_r1.disabled)(\"readonly\", ctx_r1.readonly)(\"value\", ctx_r1.hex || \"\")(\"tabindex\", ctx_r1.tabindex.toString());\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"for\", ctx_r1.focusableId);\n  }\n}\n\nfunction ColorInputComponent_ng_container_5_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵelementStart(1, \"kendo-numerictextbox\", 15, 16);\n    i0.ɵɵlistener(\"valueChange\", function ColorInputComponent_ng_container_5_div_16_Template_kendo_numerictextbox_valueChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.rgba.a = $event;\n    })(\"blur\", function ColorInputComponent_ng_container_5_div_16_Template_kendo_numerictextbox_blur_1_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return ctx_r16.handleRgbaInputBlur();\n    })(\"valueChange\", function ColorInputComponent_ng_container_5_div_16_Template_kendo_numerictextbox_valueChange_1_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return ctx_r17.handleRgbaValueChange();\n    })(\"keydown.tab\", function ColorInputComponent_ng_container_5_div_16_Template_kendo_numerictextbox_keydown_tab_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      $event.preventDefault();\n      return ctx_r18.tabOut.emit();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\", 8);\n    i0.ɵɵtext(5, \"A\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r13 = i0.ɵɵreference(3);\n\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"localizationService\", ctx_r11.localizationService)(\"disabled\", ctx_r11.disabled)(\"readonly\", ctx_r11.readonly)(\"tabindex\", ctx_r11.tabindex)(\"min\", 0)(\"max\", 1)(\"value\", ctx_r11.rgba.a)(\"autoCorrect\", true)(\"spinners\", false)(\"step\", 0.01)(\"format\", \"n2\")(\"decimals\", 2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"for\", _r13.focusableId);\n  }\n}\n\nfunction ColorInputComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 0);\n    i0.ɵɵelementStart(2, \"kendo-numerictextbox\", 9, 10);\n    i0.ɵɵlistener(\"valueChange\", function ColorInputComponent_ng_container_5_Template_kendo_numerictextbox_valueChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.rgba.r = $event;\n    })(\"blur\", function ColorInputComponent_ng_container_5_Template_kendo_numerictextbox_blur_2_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.handleRgbaInputBlur();\n    })(\"valueChange\", function ColorInputComponent_ng_container_5_Template_kendo_numerictextbox_valueChange_2_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.handleRgbaValueChange();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\", 8);\n    i0.ɵɵtext(5, \"R\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 0);\n    i0.ɵɵelementStart(7, \"kendo-numerictextbox\", 11, 12);\n    i0.ɵɵlistener(\"valueChange\", function ColorInputComponent_ng_container_5_Template_kendo_numerictextbox_valueChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.rgba.g = $event;\n    })(\"blur\", function ColorInputComponent_ng_container_5_Template_kendo_numerictextbox_blur_7_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.handleRgbaInputBlur();\n    })(\"valueChange\", function ColorInputComponent_ng_container_5_Template_kendo_numerictextbox_valueChange_7_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.handleRgbaValueChange();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"label\", 8);\n    i0.ɵɵtext(10, \"G\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 0);\n    i0.ɵɵelementStart(12, \"kendo-numerictextbox\", 13, 14);\n    i0.ɵɵlistener(\"valueChange\", function ColorInputComponent_ng_container_5_Template_kendo_numerictextbox_valueChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.rgba.b = $event;\n    })(\"blur\", function ColorInputComponent_ng_container_5_Template_kendo_numerictextbox_blur_12_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return ctx_r27.handleRgbaInputBlur();\n    })(\"valueChange\", function ColorInputComponent_ng_container_5_Template_kendo_numerictextbox_valueChange_12_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return ctx_r28.handleRgbaValueChange();\n    })(\"keydown.tab\", function ColorInputComponent_ng_container_5_Template_kendo_numerictextbox_keydown_tab_12_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return ctx_r29.onTab();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"label\", 8);\n    i0.ɵɵtext(15, \"B\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(16, ColorInputComponent_ng_container_5_div_16_Template, 6, 13, \"div\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r8 = i0.ɵɵreference(3);\n\n    const _r9 = i0.ɵɵreference(8);\n\n    const _r10 = i0.ɵɵreference(13);\n\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"localizationService\", ctx_r2.localizationService)(\"disabled\", ctx_r2.disabled)(\"readonly\", ctx_r2.readonly)(\"tabindex\", ctx_r2.tabindex)(\"min\", 0)(\"max\", 255)(\"value\", ctx_r2.rgba.r)(\"autoCorrect\", true)(\"spinners\", false)(\"format\", \"n\")(\"decimals\", 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"for\", _r8.focusableId);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"localizationService\", ctx_r2.localizationService)(\"disabled\", ctx_r2.disabled)(\"readonly\", ctx_r2.readonly)(\"tabindex\", ctx_r2.tabindex)(\"min\", 0)(\"max\", 255)(\"value\", ctx_r2.rgba.g)(\"autoCorrect\", true)(\"spinners\", false)(\"format\", \"n\")(\"decimals\", 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"for\", _r9.focusableId);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"localizationService\", ctx_r2.localizationService)(\"disabled\", ctx_r2.disabled)(\"readonly\", ctx_r2.readonly)(\"tabindex\", ctx_r2.tabindex)(\"min\", 0)(\"max\", 255)(\"value\", ctx_r2.rgba.b)(\"autoCorrect\", true)(\"spinners\", false)(\"format\", \"n\")(\"decimals\", 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"for\", _r10.focusableId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.opacity);\n  }\n}\n\nconst _c52 = [\"kendoContrastValidation\", \"\"];\n\nfunction ContrastValidationComponent_ng_container_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"span\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.passMessage, \" \");\n  }\n}\n\nfunction ContrastValidationComponent_ng_container_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"span\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.failMessage, \" \");\n  }\n}\n\nfunction ContrastValidationComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ContrastValidationComponent_ng_container_2_span_1_Template, 3, 1, \"span\", 1);\n    i0.ɵɵtemplate(2, ContrastValidationComponent_ng_container_2_span_2_Template, 3, 1, \"span\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.pass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.pass);\n  }\n}\n\nconst _c53 = [\"kendoContrastTool\", \"\"];\n\nfunction ContrastComponent_ng_container_3_span_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n}\n\nfunction ContrastComponent_ng_container_3_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵelement(1, \"span\", 8);\n    i0.ɵɵtemplate(2, ContrastComponent_ng_container_3_span_1_span_2_Template, 1, 0, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.satisfiesAAACondition);\n  }\n}\n\nfunction ContrastComponent_ng_container_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵelement(1, \"span\", 11);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContrastComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ContrastComponent_ng_container_3_span_1_Template, 3, 1, \"span\", 5);\n    i0.ɵɵtemplate(2, ContrastComponent_ng_container_3_span_2_Template, 2, 0, \"span\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.satisfiesAACondition);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.satisfiesAACondition);\n  }\n}\n\nconst _c54 = [\"gradientDragHandle\"];\nconst _c55 = [\"inputs\"];\nconst _c56 = [\"alphaSlider\"];\nconst _c57 = [\"gradientWrapper\"];\nconst _c58 = [\"hsvRectangle\"];\n\nfunction ColorGradientComponent__svg_svg_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"svg\", 15);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n\n    const _r1 = i0.ɵɵreference(5);\n\n    i0.ɵɵproperty(\"wrapper\", _r1 ? _r1 : undefined)(\"hsva\", ctx_r3.hsva)(\"backgroundColor\", ctx_r3.contrastTool);\n  }\n}\n\nfunction ColorGradientComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵlistener(\"click\", function ColorGradientComponent_span_10_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.reset();\n    })(\"keydown.enter\", function ColorGradientComponent_span_10_Template_span_keydown_enter_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.reset();\n    })(\"keydown.space\", function ColorGradientComponent_span_10_Template_span_keydown_space_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.reset();\n    });\n    i0.ɵɵelement(1, \"span\", 17);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"tabindex\", ctx_r4.innerTabIndex.toString());\n    i0.ɵɵattribute(\"aria-label\", ctx_r4.clearButtonTitle)(\"title\", ctx_r4.clearButtonTitle);\n  }\n}\n\nconst _c93 = function (a0) {\n  return {\n    \"k-align-self-end\": a0\n  };\n};\n\nfunction ColorGradientComponent_kendo_slider_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-slider\", 18, 19);\n    i0.ɵɵlistener(\"valueChange\", function ColorGradientComponent_kendo_slider_12_Template_kendo_slider_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.handleAlphaSliderChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"tabindex\", ctx_r5.innerTabIndex)(\"ngClass\", i0.ɵɵpureFunction1(12, _c93, ctx_r5.clearButton))(\"dragHandleTitle\", ctx_r5.opacitySliderTitle)(\"disabled\", ctx_r5.disabled)(\"readonly\", ctx_r5.readonly)(\"showButtons\", false)(\"vertical\", true)(\"min\", 0)(\"max\", 100)(\"smallStep\", 1)(\"largeStep\", 10)(\"value\", ctx_r5.alphaSliderValue);\n  }\n}\n\nfunction ColorGradientComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 20);\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", ctx_r7.value)(\"ratio\", ctx_r7.contrastTool);\n  }\n}\n\nconst _c96 = function (a0, a1, a2, a3) {\n  return {\n    backgroundColor: a0,\n    width: a1,\n    height: a2,\n    minWidth: a3\n  };\n};\n\nfunction ColorPaletteComponent_tr_4_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵlistener(\"click\", function ColorPaletteComponent_tr_4_td_1_Template_td_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const color_r4 = restoredCtx.$implicit;\n      const colIndex_r5 = restoredCtx.index;\n      const rowIndex_r2 = i0.ɵɵnextContext().index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.handleCellSelection(color_r4, {\n        row: rowIndex_r2,\n        col: colIndex_r5\n      });\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const color_r4 = ctx.$implicit;\n    const colIndex_r5 = ctx.index;\n    const rowIndex_r2 = i0.ɵɵnextContext().index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"k-selected\", (ctx_r3.selectedCell == null ? null : ctx_r3.selectedCell.row) === rowIndex_r2 && (ctx_r3.selectedCell == null ? null : ctx_r3.selectedCell.col) === colIndex_r5)(\"k-focus\", ctx_r3.focusInComponent && (ctx_r3.focusedCell == null ? null : ctx_r3.focusedCell.row) === rowIndex_r2 && (ctx_r3.focusedCell == null ? null : ctx_r3.focusedCell.col) === colIndex_r5);\n    i0.ɵɵproperty(\"id\", \"k-\" + rowIndex_r2 + \"-\" + colIndex_r5 + \"-\" + ctx_r3.uniqueId)(\"ngStyle\", i0.ɵɵpureFunction4(9, _c96, color_r4, ctx_r3.tileLayout.width + \"px\", ctx_r3.tileLayout.height + \"px\", ctx_r3.tileLayout.width + \"px\"));\n    i0.ɵɵattribute(\"aria-selected\", (ctx_r3.selectedCell == null ? null : ctx_r3.selectedCell.row) === rowIndex_r2 && (ctx_r3.selectedCell == null ? null : ctx_r3.selectedCell.col) === colIndex_r5)(\"aria-label\", color_r4)(\"value\", color_r4);\n  }\n}\n\nfunction ColorPaletteComponent_tr_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 4);\n    i0.ɵɵtemplate(1, ColorPaletteComponent_tr_4_td_1_Template, 1, 14, \"td\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r1);\n  }\n}\n\nconst _c97 = [\"first\"];\nconst _c98 = [\"last\"];\nconst _c99 = [\"kendoFlatColorPickerActionButtons\", \"\"];\nconst _c100 = [\"header\"];\nconst _c101 = [\"gradient\"];\nconst _c102 = [\"palette\"];\nconst _c103 = [\"footer\"];\n\nfunction FlatColorPickerComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 6, 7);\n    i0.ɵɵlistener(\"clearButtonClick\", function FlatColorPickerComponent_div_1_Template_div_clearButtonClick_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onClearButtonClick();\n    })(\"viewChange\", function FlatColorPickerComponent_div_1_Template_div_viewChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onViewChange($event);\n    })(\"valuePaneClick\", function FlatColorPickerComponent_div_1_Template_div_valuePaneClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.resetSelection($event);\n    })(\"tabOut\", function FlatColorPickerComponent_div_1_Template_div_tabOut_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.lastFocusable.focus();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerTabIndex\", ctx_r0.innerTabIndex)(\"clearButton\", ctx_r0.clearButton)(\"activeView\", ctx_r0.activeView)(\"views\", ctx_r0.views)(\"value\", ctx_r0.value)(\"selection\", ctx_r0.selection)(\"preview\", ctx_r0.preview);\n  }\n}\n\nfunction FlatColorPickerComponent_kendo_colorgradient_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-colorgradient\", 8, 9);\n    i0.ɵɵlistener(\"valueChange\", function FlatColorPickerComponent_kendo_colorgradient_3_Template_kendo_colorgradient_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.handleValueChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"tabindex\", ctx_r1.innerTabIndex)(\"value\", ctx_r1.selection)(\"format\", ctx_r1.format)(\"opacity\", ctx_r1.gradientSettings.opacity)(\"delay\", ctx_r1.gradientSettings.delay)(\"contrastTool\", ctx_r1.gradientSettings.contrastTool)(\"gradientSliderSmallStep\", ctx_r1.gradientSettings.gradientSliderSmallStep)(\"gradientSliderStep\", ctx_r1.gradientSettings.gradientSliderStep)(\"readonly\", ctx_r1.readonly);\n  }\n}\n\nfunction FlatColorPickerComponent_kendo_colorpalette_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-colorpalette\", 10, 11);\n    i0.ɵɵlistener(\"valueChange\", function FlatColorPickerComponent_kendo_colorpalette_4_Template_kendo_colorpalette_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.handleValueChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"tabindex\", ctx_r2.innerTabIndex)(\"palette\", ctx_r2.paletteSettings.palette)(\"columns\", ctx_r2.paletteSettings.columns)(\"tileSize\", ctx_r2.paletteSettings.tileSize)(\"format\", ctx_r2.format)(\"value\", ctx_r2.selection)(\"readonly\", ctx_r2.readonly);\n  }\n}\n\nfunction FlatColorPickerComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 12, 13);\n    i0.ɵɵlistener(\"actionButtonClick\", function FlatColorPickerComponent_div_5_Template_div_actionButtonClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.onAction($event);\n    })(\"tabOut\", function FlatColorPickerComponent_div_5_Template_div_tabOut_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.firstFocusable.focus();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerTabIndex\", ctx_r3.innerTabIndex)(\"ngClass\", \"k-justify-content-\" + ctx_r3.actionsLayout);\n  }\n}\n\nconst _c150 = [\"container\"];\nconst _c151 = [\"activeColor\"];\nconst _c152 = [\"popupTemplate\"];\nconst _c153 = [\"flatColorPicker\"];\n\nfunction ColorPickerComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.iconStyles);\n  }\n}\n\nfunction ColorPickerComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-flatcolorpicker\", 11, 12);\n    i0.ɵɵlistener(\"cancel\", function ColorPickerComponent_ng_template_8_Template_kendo_flatcolorpicker_cancel_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.handleCancelEvent($event);\n    })(\"focusout\", function ColorPickerComponent_ng_template_8_Template_kendo_flatcolorpicker_focusout_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.handlePopupBlur($event);\n    })(\"valueChange\", function ColorPickerComponent_ng_template_8_Template_kendo_flatcolorpicker_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.handleValueChange($event);\n    })(\"keydown\", function ColorPickerComponent_ng_template_8_Template_kendo_flatcolorpicker_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.handlePopupKeyDown($event);\n    })(\"activeViewChange\", function ColorPickerComponent_ng_template_8_Template_kendo_flatcolorpicker_activeViewChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.activeViewChange.emit($event);\n    })(\"actionButtonClick\", function ColorPickerComponent_ng_template_8_Template_kendo_flatcolorpicker_actionButtonClick_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.togglePopup();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", ctx_r3.value)(\"format\", ctx_r3.format)(\"views\", ctx_r3.views)(\"activeView\", ctx_r3.activeView)(\"actionsLayout\", ctx_r3.actionsLayout)(\"preview\", ctx_r3.preview)(\"gradientSettings\", ctx_r3.gradientSettings)(\"paletteSettings\", ctx_r3.paletteSettings)(\"clearButton\", ctx_r3.clearButton);\n  }\n}\n\nconst _c202 = function (a0, a1) {\n  return {\n    \"k-icon-color-preview\": a0,\n    \"k-no-color\": a1\n  };\n};\n\nfunction FormFieldComponent_ng_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2, [\"*ngIf\", \"hasHints\"]);\n  }\n}\n\nfunction FormFieldComponent_ng_content_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 3, [\"*ngIf\", \"hasErrors\"]);\n  }\n}\n\nconst _c203 = [[[\"label\"], [\"kendo-label\"]], \"*\", [[\"kendo-formhint\"]], [[\"kendo-formerror\"]]];\nconst _c204 = [\"label, kendo-label\", \"*\", \"kendo-formhint\", \"kendo-formerror\"];\nconst _c205 = [\"maximizeButton\"];\nconst _c206 = [\"canvas\"];\n\nfunction SignatureComponent_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 10, 11);\n    i0.ɵɵlistener(\"click\", function SignatureComponent_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onMaximize();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"size\", ctx_r0.size)(\"title\", ctx_r0.maximizeTitle);\n    i0.ɵɵattribute(\"aria-label\", ctx_r0.maximizeTitle);\n  }\n}\n\nfunction SignatureComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function SignatureComponent_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onMinimize();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"size\", ctx_r1.size)(\"title\", ctx_r1.minimizeTitle);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.minimizeTitle);\n  }\n}\n\nfunction SignatureComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 13);\n  }\n}\n\nfunction SignatureComponent_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function SignatureComponent_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onClear();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"size\", ctx_r4.size)(\"title\", ctx_r4.clearTitle);\n    i0.ɵɵattribute(\"aria-label\", ctx_r4.clearTitle);\n  }\n}\n\nfunction SignatureComponent_kendo_dialog_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-dialog\", 15);\n    i0.ɵɵlistener(\"click\", function SignatureComponent_kendo_dialog_9_Template_kendo_dialog_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.onDialogClick($event);\n    })(\"keydown\", function SignatureComponent_kendo_dialog_9_Template_kendo_dialog_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.onDialogKeydown($event);\n    });\n    i0.ɵɵelementStart(1, \"kendo-signature\", 16);\n    i0.ɵɵlistener(\"valueChange\", function SignatureComponent_kendo_dialog_9_Template_kendo_signature_valueChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.onDialogValueChange($event);\n    })(\"minimize\", function SignatureComponent_kendo_dialog_9_Template_kendo_signature_minimize_1_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.onDialogClose();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"k-signature-maximized\", true);\n    i0.ɵɵproperty(\"readonly\", ctx_r5.readonly)(\"disabled\", ctx_r5.disabled)(\"size\", ctx_r5.size)(\"rounded\", ctx_r5.rounded)(\"fillMode\", ctx_r5.fillMode)(\"color\", ctx_r5.color)(\"backgroundColor\", ctx_r5.backgroundColor)(\"strokeWidth\", ctx_r5.strokeWidth)(\"smooth\", ctx_r5.smooth)(\"value\", ctx_r5.popupValue)(\"hideLine\", ctx_r5.hideLine)(\"maximized\", true)(\"width\", ctx_r5.popupWidth)(\"height\", ctx_r5.popupHeight)(\"popupScale\", ctx_r5.popupScale)(\"parentLocalization\", ctx_r5.localization);\n  }\n}\n\nconst isPresent = value => value !== null && value !== undefined;\n/**\n * @hidden\n */\n\n\nconst areSame = (value1, value2) => value1 === value2 || value1 === null && value2 === undefined || value1 === undefined && value2 === null;\n/**\n * @hidden\n */\n\n\nconst requiresZoneOnBlur = ngControl => ngControl && (!ngControl.touched || ngControl.control && ngControl.control.updateOn === 'blur');\n/**\n * @hidden\n *\n * Fits the contender number into the specified bounds. If the number is NaN or null, the min is returned.\n *\n * @param contender Represents the number you want to fit into specified bounds.\n * @param min The inclusive lower bound number.\n * @param max The inclusive upper bound number.\n */\n\n\nconst fitIntoBounds = (contender, min, max) => {\n  if (!isPresent(contender) || isNaN(contender)) {\n    return min;\n  }\n\n  return contender <= min ? min : contender >= max ? max : contender;\n};\n/**\n * @hidden\n */\n\n\nconst SIZE_MAP = {\n  small: 'sm',\n  medium: 'md',\n  large: 'lg'\n};\n/**\n * @hidden\n */\n\nconst ROUNDED_MAP = {\n  small: 'sm',\n  medium: 'md',\n  large: 'lg',\n  full: 'full'\n};\n/**\n * @hidden\n */\n\nconst isNone = style => style === 'none';\n/**\n * @hidden\n *\n * Returns the styling classes to be added and removed\n */\n\n\nconst getStylingClasses = (componentType, stylingOption, previousValue, newValue) => {\n  switch (stylingOption) {\n    case 'size':\n      return {\n        toRemove: `k-${componentType}-${SIZE_MAP[previousValue]}`,\n        toAdd: newValue !== 'none' ? `k-${componentType}-${SIZE_MAP[newValue]}` : ''\n      };\n\n    case 'rounded':\n      return {\n        toRemove: `k-rounded-${ROUNDED_MAP[previousValue]}`,\n        toAdd: newValue !== 'none' ? `k-rounded-${ROUNDED_MAP[newValue]}` : ''\n      };\n\n    case 'fillMode':\n      return {\n        toRemove: `k-${componentType}-${previousValue}`,\n        toAdd: newValue !== 'none' ? `k-${componentType}-${newValue}` : ''\n      };\n\n    default:\n      break;\n  }\n};\n/**\n * @hidden\n */\n\n\nconst MAX_PRECISION = 20;\n/**\n * @hidden\n */\n\nconst limitPrecision = precision => Math.min(precision, MAX_PRECISION);\n/**\n * @hidden\n */\n\n\nconst fractionLength = value => {\n  return (String(value).split('.')[1] || \"\").length;\n};\n\nconst maxFractionLength = (value1, value2) => {\n  return Math.max(fractionLength(value1), fractionLength(value2));\n};\n/**\n * @hidden\n */\n\n\nconst toFixedPrecision = (value, precision) => {\n  const maxPrecision = limitPrecision(precision);\n  return parseFloat(value.toFixed(maxPrecision));\n};\n/**\n * @hidden\n */\n\n\nconst add = (value1, value2) => {\n  const maxPrecision = maxFractionLength(value1, value2);\n  return toFixedPrecision(value1 + value2, maxPrecision);\n};\n/**\n * @hidden\n */\n\n\nconst subtract = (value1, value2) => {\n  return add(value1, -value2);\n};\n/**\n * @hidden\n */\n\n\nconst multiply = (value1, value2) => {\n  const maxPrecision = fractionLength(value1) + fractionLength(value2);\n  return toFixedPrecision(value1 * value2, maxPrecision);\n};\n/**\n * @hidden\n */\n\n\nconst divide = (dividend, divisor) => {\n  if (divisor === 0) {\n    return NaN;\n  }\n\n  const power = maxFractionLength(dividend, divisor);\n  const correctionValue = Math.pow(10, power);\n  return correctionValue * dividend / (correctionValue * divisor);\n};\n/**\n * @hidden\n */\n\n\nconst remainder = (dividend, divisor) => {\n  return Math.abs(subtract(dividend, multiply(divisor, Math.floor(divide(dividend, divisor)))));\n};\n/**\n * @hidden\n */\n\n\nconst calculateFixedTrackSize = ({\n  max,\n  min,\n  smallStep,\n  fixedTickWidth\n}) => (max - min) / smallStep * fixedTickWidth;\n/**\n * @hidden\n */\n\n\nconst calculateTrackSize = (wrapperWidth, offset, showButtons = true) => {\n  const BUTTONS_COUNT = 2;\n  const trackOffset = showButtons ? parseFloat(offset) * BUTTONS_COUNT : 0;\n  const trackWidth = wrapperWidth - trackOffset;\n  return Math.floor(trackWidth);\n};\n/**\n * @hidden\n */\n\n\nconst calculateTicksCount = (min = 0, max = 0, smallStep = 1) => {\n  if (smallStep <= 0) {\n    throw new Error('Invalid argument: smallStep must be a positive number');\n  }\n\n  const adjustedRange = Math.abs(subtract(max, min));\n  const adjustedRatio = Math.floor(divide(adjustedRange, smallStep));\n  const result = add(adjustedRatio, 1);\n  return result;\n};\n/**\n * @hidden\n */\n\n\nconst calculateValueFromTick = (index, {\n  max,\n  min,\n  smallStep,\n  reverse,\n  vertical\n}) => {\n  const value = add(min, multiply(index, smallStep));\n  return vertical || reverse ? Math.abs(subtract(value, max)) : value;\n};\n/**\n * @hidden\n */\n\n\nconst calculateHandlePosition = ({\n  trackWidth,\n  min,\n  max,\n  reverse,\n  value\n}) => {\n  const step = trackWidth / Math.abs(max - min);\n  let pos = isPresent(value) ? step * (value - min) : min;\n\n  if (reverse) {\n    pos = trackWidth - pos;\n  }\n\n  return Math.floor(pos);\n};\n/**\n * @hidden\n */\n\n\nconst decreaseValueToStep = (value, {\n  max,\n  min,\n  smallStep,\n  largeStep\n}, large = false) => {\n  const step = large && largeStep ? multiply(smallStep, largeStep) : smallStep;\n  const stepValue = subtract(value, min);\n  let result;\n  const stepRemainder = remainder(stepValue, step);\n\n  if (stepRemainder === 0) {\n    result = subtract(stepValue, step);\n  } else {\n    result = subtract(stepValue, stepRemainder);\n  }\n\n  return limitValue(add(result, min), min, max);\n};\n/**\n * @hidden\n */\n\n\nconst increaseValueToStep = (value, {\n  max,\n  min,\n  smallStep,\n  largeStep\n}, large = false) => {\n  const step = large && largeStep ? multiply(smallStep, largeStep) : smallStep;\n  const stepValue = subtract(value, min);\n  const stepRemainder = remainder(stepValue, step);\n  const result = add(subtract(stepValue, stepRemainder), step);\n  return limitValue(add(result, min), min, max);\n};\n/**\n * @hidden\n */\n\n\nconst isStartHandle = dragHandle => dragHandle.id.indexOf('k-start-handle') > -1;\n/**\n * @hidden\n */\n\n\nconst snapValue = (value, options) => {\n  const {\n    smallStep,\n    min,\n    max\n  } = options;\n  const limited = limitValue(value, min, max);\n\n  if (value !== limited) {\n    return limited;\n  }\n\n  const left = decreaseValueToStep(value, options);\n  const right = increaseValueToStep(value, options);\n\n  if ((value - min) % smallStep === 0) {\n    return value;\n  }\n\n  if (right - value <= (right - left) / 2) {\n    return right;\n  }\n\n  return left;\n};\n/**\n * @hidden\n */\n\n\nconst trimValue = (max, min, value) => {\n  if (value > max) {\n    return max;\n  }\n\n  if (value < min) {\n    return min;\n  }\n\n  return value;\n};\n/**\n * @hidden\n */\n\n\nconst trimValueRange = (max, min, value) => {\n  return value ? [trimValue(max, min, value[0]), trimValue(max, min, value[1])] : [min, min];\n};\n/**\n * @hidden\n */\n\n\nconst identity = value => value;\n/**\n * @hidden\n */\n\n\nconst isSameRange = (value1, value2) => areSame(value1[0], value2[0]) && areSame(value1[1], value2[1]);\n/**\n * @hidden\n */\n\n\nconst elementOffset = element => {\n  const box = element.getBoundingClientRect();\n  const documentElement = document.documentElement;\n  return {\n    left: box.left + (window.pageXOffset || documentElement.scrollLeft) - (documentElement.clientLeft || 0),\n    top: box.top + (window.pageYOffset || documentElement.scrollTop) - (documentElement.clientTop || 0)\n  };\n};\n/**\n * @hidden\n */\n\n\nconst limitValue = (value, min, max) => {\n  return Math.max(Math.min(value, max), min);\n};\n/**\n * @hidden\n */\n\n\nconst eventValue = (eventArgs, scaleElement, options) => {\n  const {\n    min,\n    max,\n    vertical,\n    rtl\n  } = options;\n  const trackOffset = elementOffset(scaleElement);\n  const offset = vertical ? eventArgs.pageY - trackOffset.top : eventArgs.pageX - trackOffset.left;\n  const scale = (max - min) / (vertical ? scaleElement.clientHeight : scaleElement.clientWidth);\n  const offsetValue = offset * scale;\n  let value = rtl || vertical ? max - offsetValue : min + offsetValue;\n  const stepFractionLength = fractionLength(options.smallStep);\n  value = toFixedPrecision(value, stepFractionLength + 1);\n  return snapValue(value, options);\n};\n/**\n * @hidden\n */\n\n\nconst isButton = element => {\n  return element.className.indexOf('k-button-increase') >= 0 || element.className.indexOf('k-button-decrease') >= 0;\n};\n/**\n * @hidden\n */\n\n\nconst increment = options => {\n  return increaseValueToStep(options.value, options);\n};\n/**\n * @hidden\n */\n\n\nconst decrement = options => {\n  return decreaseValueToStep(options.value, options);\n};\n/**\n * @hidden\n */\n\n\nconst incrementLarge = options => {\n  return increaseValueToStep(options.value, options, true);\n};\n/**\n * @hidden\n */\n\n\nconst decrementLarge = options => {\n  return decreaseValueToStep(options.value, options, true);\n};\n/**\n * @hidden\n */\n\n\nconst validateValue = value => {\n  if (isDevMode && value && value[0] > value[1]) {\n    throw new Error('[RangeSlider] The start value should not be greater than the end value.');\n  }\n};\n/**\n * @hidden\n */\n\n\nvar slidersUtil = {\n  calculateFixedTrackSize,\n  calculateValueFromTick,\n  calculateTrackSize,\n  calculateTicksCount,\n  calculateHandlePosition,\n  decreaseValueToStep,\n  decrement,\n  decrementLarge,\n  eventValue,\n  identity,\n  increment,\n  incrementLarge,\n  isButton,\n  isSameRange,\n  isStartHandle,\n  increaseValueToStep,\n  trimValue,\n  trimValueRange,\n  snapValue,\n  validateValue\n};\n/**\n * @hidden\n */\n\nclass SliderModelBase {\n  constructor(props, wrapper, track, renderer) {\n    this.props = props;\n    this.wrapper = wrapper;\n    this.track = track;\n    this.renderer = renderer;\n    this.props = props;\n    this.wrapper = wrapper;\n    this.track = track;\n    this.tickSizes = this.getTickSizes();\n  }\n\n  resizeTrack() {\n    const orientation = this.props.vertical ? 'height' : 'width';\n    const altOrientation = this.props.vertical ? 'width' : 'height';\n    const trackWidth = this.trackWidth();\n    this.track.parentElement.style[orientation] = `${trackWidth}px`;\n    this.track.parentElement.style[altOrientation] = '';\n  }\n\n  resizeTicks(ticksContainer, ticks) {\n    const dimension = this.props.vertical ? \"height\" : \"width\";\n    [...ticks].map((tick, index) => tick.style[dimension] = `${this.tickSizes[index]}px`);\n\n    if (this.props.vertical) {\n      this.adjustPadding(ticksContainer);\n    }\n  }\n\n  resizeWrapper() {\n    const dimension = this.props.vertical ? \"height\" : \"width\";\n    const fixedTrackWidth = calculateFixedTrackSize(this.props);\n    const wrapperParentEl = this.wrapper.parentElement;\n\n    if (fixedTrackWidth) {\n      wrapperParentEl.style[dimension] = \"auto\";\n    }\n  }\n\n  trackWidth() {\n    if (this.props.fixedTickWidth) {\n      return calculateFixedTrackSize(this.props);\n    }\n\n    return this.elementSize(this.track.parentElement);\n  }\n\n  getTickSizes() {\n    const {\n      min,\n      max,\n      smallStep\n    } = this.props;\n    const count = calculateTicksCount(min, max, smallStep);\n    const trackSize = this.trackWidth();\n    const distStep = trackSize / subtract(max, min);\n    const result = [];\n    let usedSpace = 0;\n    let endPoint = 0;\n\n    for (let i = 0; i < count; i++) {\n      if (i === 0 || i === count - 1) {\n        endPoint += smallStep / 2 * distStep;\n      } else {\n        endPoint += smallStep * distStep;\n      } // ensure that the sum of the tick sizes does not exceed the track width\n\n\n      endPoint = +endPoint.toFixed(2) - 0.01;\n      const size = Math.round(endPoint - usedSpace);\n      result.push(size);\n      usedSpace += size;\n    }\n\n    if (usedSpace >= trackSize) {\n      result[result.length - 1] -= 1;\n    }\n\n    return result;\n  }\n\n  adjustPadding(ticksContainer) {\n    const totalTickSize = this.tickSizes.reduce((prev, curr) => prev + curr, 0);\n    const trackWidth = this.trackWidth();\n    const reminder = trackWidth - totalTickSize;\n\n    if (reminder !== 0) {\n      const padding = reminder + this.elementOffset(this.track);\n      ticksContainer.style.paddingTop = `${padding}px`;\n    }\n  }\n\n  elementOffset(element) {\n    const {\n      vertical\n    } = this.props;\n    const style = getComputedStyle(element);\n    return parseInt(vertical ? style.bottom : style.left, 10);\n  }\n\n  elementSize(element) {\n    const {\n      vertical\n    } = this.props;\n    return vertical ? element.clientHeight : element.clientWidth;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass SliderModel extends SliderModelBase {\n  positionHandle(dragHandle) {\n    const {\n      max,\n      min,\n      reverse,\n      vertical\n    } = this.props;\n    const position = vertical ? 'bottom' : 'left';\n    const trackWidth = this.trackWidth();\n    const value = trimValue(max, min, this.props.value);\n    this.handlePosition = calculateHandlePosition({\n      min,\n      max,\n      reverse,\n      value,\n      trackWidth\n    });\n    this.renderer.setStyle(dragHandle, position, `${this.handlePosition}px`);\n  }\n\n  positionSelection(selection) {\n    const {\n      reverse,\n      vertical\n    } = this.props;\n    const dimension = vertical ? 'height' : 'width';\n    let size = this.handlePosition;\n\n    if (reverse) {\n      size = this.trackWidth() - size;\n    }\n\n    this.renderer.setStyle(selection, dimension, `${size}px`);\n  }\n\n}\n\nconst UNTOUCHED = 'ng-untouched';\n\nconst toClassList = classNames => String(classNames).trim().split(' ');\n/**\n * @hidden\n */\n\n\nconst hasClass = (element, className) => Boolean(toClassList(element.className).find(name => name === className));\n/**\n * @hidden\n */\n\n\nfunction invokeElementMethod(element, name, ...args) {\n  if (element && element.nativeElement) {\n    return element.nativeElement[name].apply(element.nativeElement, args);\n  }\n}\n/**\n * @hidden\n */\n\n\nconst isUntouched = element => element && element.nativeElement && hasClass(element.nativeElement, UNTOUCHED);\n/**\n * @hidden\n */\n\n\nconst containsFocus = (hostElement, contender) => hostElement && contender && (hostElement === contender || hostElement.contains(contender));\n/**\n * @hidden\n */\n\n\nconst closest = (node, predicate) => {\n  while (node && !predicate(node)) {\n    node = node.parentNode;\n  }\n\n  return node;\n};\n/**\n * @hidden\n */\n\n\nconst packageMetadata = {\n  name: '@progress/kendo-angular-inputs',\n  productName: 'Kendo UI for Angular',\n  productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n  publishDate: 1668698223,\n  version: '',\n  licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/?utm_medium=product&utm_source=kendoangular&utm_campaign=kendo-ui-angular-purchase-license-keys-warning'\n};\n/**\n * Represents the template for the labels of the Slider.\n * To define the labels template, nest an `<ng-template>` tag with the `kendoSliderLabelTemplate` directive inside\n * the `<kendo-slider>` tag. The template context is passed to the `label` value.\n *\n * @example\n * ```ts-no-run\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-slider [largeStep]=\"2\">\n *           <ng-template kendoSliderLabelTemplate let-value=\"value\">\n *             <b>{{value}}</b>\n *           </ng-template>\n *         </kendo-slider>\n *     `\n * })\n *\n * class AppComponent {\n * }\n *\n * ```\n */\n\nclass LabelTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nLabelTemplateDirective.ɵfac = function LabelTemplateDirective_Factory(t) {\n  return new (t || LabelTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nLabelTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LabelTemplateDirective,\n  selectors: [[\"\", \"kendoSliderLabelTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LabelTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoSliderLabelTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass SliderBase {\n  constructor(localizationService, injector, renderer, ngZone, changeDetector, hostElement) {\n    this.localizationService = localizationService;\n    this.injector = injector;\n    this.renderer = renderer;\n    this.ngZone = ngZone;\n    this.changeDetector = changeDetector;\n    this.hostElement = hostElement;\n    /**\n     * Defines the title of the ticks ([see example]({% slug ticks_slider %}#toc-titles)). The default title\n     * for each tick is its Slider value. If you use a callback function, the function accepts an argument\n     * that holds the value of the component and returns a string with the new title.\n     */\n\n    this.title = identity;\n    /**\n     * Denotes the location of the tick marks in the Slider ([see example]({% slug ticks_slider %}#toc-placement)).\n     *\n     * The available options are:\n     * * `before`&mdash;The tick marks are located to the top side of the horizontal track or to the left side of a vertical track.\n     * * `after`&mdash;The tick marks are located to the bottom side of the horizontal track or to the right side of the vertical track.\n     * * `both`&mdash; (Default) The tick marks are located on both sides of the track.\n     * * `none`&mdash;The tick marks are not visible. The actual elements are not added to the DOM tree.\n     */\n\n    this.tickPlacement = 'both';\n    /**\n     * If `vertical` is set to `true`, the orientation of the Slider changes from horizontal to vertical\n     * ([see example]({% slug orientation_slider %})).\n     */\n\n    this.vertical = false;\n    /**\n     * The minimum value of the Slider ([see example]({% slug predefinedsteps_slider %}#toc-small-steps)).\n     * The attribute accepts both integers and floating-point numbers.\n     */\n\n    this.min = 0;\n    /**\n     * The maximum value of the Slider ([see example]({% slug predefinedsteps_slider %}#toc-small-steps)).\n     * The attribute accepts both integers and floating-point numbers.\n     */\n\n    this.max = 10;\n    /**\n     * The step value of the Slider ([see example]({% slug predefinedsteps_slider %}#toc-small-steps)).\n     * Accepts positive values only. Can be an integer or a floating-point number.\n     */\n\n    this.smallStep = 1;\n    /**\n     * Specifies that every n<sup>th</sup> tick will be large and will have a label\n     * ([see example]({% slug predefinedsteps_slider %}#toc-large-steps)).\n     * Accepts positive integer values only.\n     */\n\n    this.largeStep = null;\n    /**\n     * Determines whether the Slider is disabled ([see example]({% slug disabledstate_slider %})).\n     */\n\n    this.disabled = false;\n    /**\n     * Determines whether the Slider is in its read-only state ([see example]({% slug readonly_slider %})).\n     */\n\n    this.readonly = false;\n    /**\n     * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the Slider.\n     */\n\n    this.tabindex = 0;\n    /**\n     * Fires each time the user focuses the component.\n     */\n\n    this.onFocus = new EventEmitter();\n    /**\n     * Fires each time the component is blurred.\n     */\n\n    this.onBlur = new EventEmitter();\n    /**\n     * Fires each time the user selects a new value.\n     */\n\n    this.valueChange = new EventEmitter();\n    this.sliderClass = true;\n    this.subscriptions = new Subscription();\n    /**\n     * @hidden\n     */\n\n    this.ifEnabled = (callback, event) => {\n      if (!this.isDisabled) {\n        callback.call(this, event);\n      }\n    };\n\n    validatePackage(packageMetadata);\n    this.direction = localizationService.rtl ? 'rtl' : 'ltr';\n  }\n\n  get horizontalClass() {\n    return !this.vertical;\n  }\n\n  get verticalClass() {\n    return this.vertical;\n  }\n\n  get disabledClass() {\n    return this.disabled;\n  }\n  /**\n   * @hidden\n   * Called when the status of the component changes to or from `disabled`.\n   * Depending on the value, it enables or disables the appropriate DOM element.\n   *\n   * @param isDisabled\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.changeDetector.markForCheck();\n    this.disabled = isDisabled;\n  }\n\n  ngOnInit() {\n    this.subscriptions.add(this.localizationService.changes.subscribe(({\n      rtl\n    }) => {\n      this.direction = rtl ? 'rtl' : 'ltr';\n      this.sizeComponent();\n    }));\n\n    if (this.hostElement) {\n      this.renderer.removeAttribute(this.hostElement.nativeElement, \"tabindex\");\n    }\n\n    this.control = this.injector.get(NgControl, null);\n  }\n  /**\n   * @hidden\n   */\n\n\n  get isDisabled() {\n    return this.disabled || this.readonly;\n  }\n  /**\n   * @hidden\n   * Used by the FloatingLabel to determine if the component is empty.\n   */\n\n\n  isEmpty() {\n    return false;\n  }\n\n  get reverse() {\n    return this.localizationService.rtl && !this.vertical;\n  }\n\n  get keyBinding() {\n    const reverse = this.reverse;\n    return {\n      [Keys.ArrowLeft]: reverse ? increment : decrement,\n      [Keys.ArrowRight]: reverse ? decrement : increment,\n      [Keys.ArrowDown]: decrement,\n      [Keys.ArrowUp]: increment,\n      [Keys.PageUp]: incrementLarge,\n      [Keys.PageDown]: decrementLarge,\n      [Keys.Home]: ({\n        min\n      }) => min,\n      [Keys.End]: ({\n        max\n      }) => max\n    };\n  }\n\n  resetStyles(elements) {\n    elements.forEach(el => {\n      if (el) {\n        if (this.vertical) {\n          this.renderer.removeStyle(el, 'width');\n          this.renderer.removeStyle(el, 'left');\n          this.renderer.removeStyle(el, 'right');\n        } else {\n          this.renderer.removeStyle(el, 'height');\n          this.renderer.removeStyle(el, 'bottom');\n        }\n\n        this.renderer.removeStyle(el, 'padding-top');\n      }\n    });\n  }\n\n}\n\nSliderBase.ɵfac = function SliderBase_Factory(t) {\n  return new (t || SliderBase)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nSliderBase.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SliderBase,\n  selectors: [[\"kendo-slider-base\"]],\n  contentQueries: function SliderBase_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, LabelTemplateDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.labelTemplate = _t.first);\n    }\n  },\n  viewQuery: function SliderBase_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n      i0.ɵɵviewQuery(_c1, 7);\n      i0.ɵɵviewQuery(_c2, 7);\n      i0.ɵɵviewQuery(_c3, 5, ElementRef);\n      i0.ɵɵviewQuery(_c3, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.wrapper = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.track = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sliderSelection = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksContainer = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticks = _t.first);\n    }\n  },\n  hostVars: 9,\n  hostBindings: function SliderBase_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx.direction);\n      i0.ɵɵclassProp(\"k-slider-horizontal\", ctx.horizontalClass)(\"k-slider-vertical\", ctx.verticalClass)(\"k-slider\", ctx.sliderClass)(\"k-disabled\", ctx.disabledClass);\n    }\n  },\n  inputs: {\n    title: \"title\",\n    tickPlacement: \"tickPlacement\",\n    vertical: \"vertical\",\n    min: \"min\",\n    max: \"max\",\n    smallStep: \"smallStep\",\n    largeStep: \"largeStep\",\n    fixedTickWidth: \"fixedTickWidth\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    tabindex: \"tabindex\"\n  },\n  outputs: {\n    onFocus: \"focus\",\n    onBlur: \"blur\",\n    valueChange: \"valueChange\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function SliderBase_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SliderBase, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-slider-base',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    title: [{\n      type: Input\n    }],\n    tickPlacement: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    smallStep: [{\n      type: Input\n    }],\n    largeStep: [{\n      type: Input\n    }],\n    fixedTickWidth: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    direction: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    horizontalClass: [{\n      type: HostBinding,\n      args: ['class.k-slider-horizontal']\n    }],\n    verticalClass: [{\n      type: HostBinding,\n      args: ['class.k-slider-vertical']\n    }],\n    sliderClass: [{\n      type: HostBinding,\n      args: ['class.k-slider']\n    }],\n    disabledClass: [{\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }],\n    wrapper: [{\n      type: ViewChild,\n      args: ['wrap', {\n        static: true\n      }]\n    }],\n    track: [{\n      type: ViewChild,\n      args: ['track', {\n        static: true\n      }]\n    }],\n    sliderSelection: [{\n      type: ViewChild,\n      args: ['sliderSelection', {\n        static: true\n      }]\n    }],\n    ticksContainer: [{\n      type: ViewChild,\n      args: ['ticks', {\n        read: ElementRef,\n        static: false\n      }]\n    }],\n    ticks: [{\n      type: ViewChild,\n      args: ['ticks', {\n        static: false\n      }]\n    }],\n    labelTemplate: [{\n      type: ContentChild,\n      args: [LabelTemplateDirective, {\n        static: false\n      }]\n    }]\n  });\n})();\n/* eslint-disable @angular-eslint/component-selector */\n\n/**\n * @hidden\n */\n\n\nclass SliderTick {\n  constructor(value) {\n    this.value = value;\n    this.classes = {\n      'k-tick': true\n    };\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass SliderTicksComponent {\n  constructor() {\n    this.wrapperClasses = 'k-reset k-slider-items';\n    this.ticks = [];\n  }\n\n  ngOnChanges(_) {\n    this.createTicks();\n  }\n\n  createTicks() {\n    const count = calculateTicksCount(this.min, this.max, this.step);\n    const largeStep = this.largeStep;\n    const tickValueProps = {\n      max: this.max,\n      min: this.min,\n      smallStep: this.step\n    };\n    let result = [];\n\n    for (let i = 0; i < count; i++) {\n      result.push(new SliderTick(calculateValueFromTick(i, tickValueProps)));\n\n      if (largeStep && i % largeStep === 0) {\n        result[i].large = true;\n        result[i].classes['k-tick-large'] = true;\n      }\n    }\n\n    if (result.length > 0) {\n      Object.assign(result[0].classes, this.endTickClasses(true));\n      Object.assign(result[result.length - 1].classes, this.endTickClasses(false));\n    }\n\n    this.ticks = result;\n  }\n\n  endTickClasses(first) {\n    return {\n      'k-first': first && !this.vertical || !first && this.vertical,\n      'k-last': !first && !this.vertical || first && this.vertical\n    };\n  }\n\n}\n\nSliderTicksComponent.ɵfac = function SliderTicksComponent_Factory(t) {\n  return new (t || SliderTicksComponent)();\n};\n\nSliderTicksComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SliderTicksComponent,\n  selectors: [[\"\", \"kendoSliderTicks\", \"\"]],\n  viewQuery: function SliderTicksComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c4, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tickElements = _t);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function SliderTicksComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.wrapperClasses);\n    }\n  },\n  inputs: {\n    tickTitle: \"tickTitle\",\n    vertical: \"vertical\",\n    step: \"step\",\n    largeStep: \"largeStep\",\n    min: \"min\",\n    max: \"max\",\n    labelTemplate: \"labelTemplate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c5,\n  decls: 3,\n  vars: 1,\n  consts: [[\"role\", \"presentation\", 3, \"ngClass\", \"title\", 4, \"ngFor\", \"ngForOf\"], [\"defaultLabel\", \"\"], [\"role\", \"presentation\", 3, \"ngClass\", \"title\"], [\"tickElement\", \"\"], [3, \"ngSwitch\"], [\"class\", \"k-label\", 4, \"ngSwitchCase\"], [4, \"ngSwitchCase\"], [1, \"k-label\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function SliderTicksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, SliderTicksComponent_li_0_Template, 5, 5, \"li\", 0);\n      i0.ɵɵtemplate(1, SliderTicksComponent_ng_template_1_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n    }\n  },\n  directives: [i1$1.NgForOf, i1$1.NgClass, i1$1.NgSwitch, i1$1.NgSwitchCase, i1$1.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SliderTicksComponent, [{\n    type: Component,\n    args: [{\n      selector: '[kendoSliderTicks]',\n      template: `\n    <li #tickElement *ngFor=\"let tick of ticks;\"\n        [ngClass]=\"tick.classes\"\n        title=\"{{ tickTitle(tick.value) }}\"\n        role=\"presentation\"\n     >\n         <ng-container [ngSwitch]=\"tick.large\">\n            <span class=\"k-label\" *ngSwitchCase=\"true\">\n                <ng-container [ngTemplateOutlet]=\"labelTemplate || defaultLabel\" [ngTemplateOutletContext]=\"tick\">\n                </ng-container>\n            </span>\n            <ng-container *ngSwitchCase=\"false\">&nbsp;</ng-container>\n         </ng-container>\n     </li>\n\n     <ng-template #defaultLabel let-value=\"value\">\n        {{ tickTitle(value) }}\n     </ng-template>\n  `\n    }]\n  }], null, {\n    wrapperClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    tickTitle: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    largeStep: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    labelTemplate: [{\n      type: Input\n    }],\n    tickElements: [{\n      type: ViewChildren,\n      args: ['tickElement']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass SliderMessages extends ComponentMessages {}\n\nSliderMessages.ɵfac = /* @__PURE__ */function () {\n  let ɵSliderMessages_BaseFactory;\n  return function SliderMessages_Factory(t) {\n    return (ɵSliderMessages_BaseFactory || (ɵSliderMessages_BaseFactory = i0.ɵɵgetInheritedFactory(SliderMessages)))(t || SliderMessages);\n  };\n}();\n\nSliderMessages.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: SliderMessages,\n  selectors: [[\"kendo-slider-messages-base\"]],\n  inputs: {\n    decrement: \"decrement\",\n    increment: \"increment\",\n    dragHandle: \"dragHandle\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SliderMessages, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: 'kendo-slider-messages-base'\n    }]\n  }], null, {\n    decrement: [{\n      type: Input\n    }],\n    increment: [{\n      type: Input\n    }],\n    dragHandle: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass LocalizedSliderMessagesDirective extends SliderMessages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n}\n\nLocalizedSliderMessagesDirective.ɵfac = function LocalizedSliderMessagesDirective_Factory(t) {\n  return new (t || LocalizedSliderMessagesDirective)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nLocalizedSliderMessagesDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LocalizedSliderMessagesDirective,\n  selectors: [[\"\", \"kendoSliderLocalizedMessages\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: SliderMessages,\n    useExisting: forwardRef(() => LocalizedSliderMessagesDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LocalizedSliderMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: SliderMessages,\n        useExisting: forwardRef(() => LocalizedSliderMessagesDirective)\n      }],\n      selector: '[kendoSliderLocalizedMessages]'\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n\nconst PRESSED$1 = 'k-pressed';\n/**\n * Represents the [Kendo UI Slider component for Angular]({% slug overview_slider %}).\n */\n\nclass SliderComponent extends SliderBase {\n  constructor(localization, injector, renderer, ngZone, changeDetector, hostElement) {\n    super(localization, injector, renderer, ngZone, changeDetector, hostElement);\n    this.localization = localization;\n    this.injector = injector;\n    this.renderer = renderer;\n    this.ngZone = ngZone;\n    this.changeDetector = changeDetector;\n    this.hostElement = hostElement;\n    /**\n     * @hidden\n     */\n\n    this.focusableId = `k-${guid()}`;\n    /**\n     * Determines if the animation will be played on value change.\n     * Regardless of this setting, no animation will be played during the initial rendering.\n     */\n\n    this.animate = true;\n    /**\n     * Renders the arrow side buttons of the Slider ([see example]({% slug sidebuttons_slider %}#toc-hidden-state)).\n     * When `showButtons` is set to `false`, the buttons are not displayed.\n     */\n\n    this.showButtons = true;\n    /**\n     * The current value of the Slider when it is initially displayed.\n     * The component can use either NgModel or the `value` binding but not both of them at the same time.\n     */\n\n    this.value = this.min;\n    this.focusChangedProgrammatically = false;\n    /**\n     * @hidden\n     */\n\n    this.onWrapClick = args => {\n      const target = args.target;\n\n      if (!this.isDisabled && !(isButton(target) || isButton(target.parentNode))) {\n        const value = eventValue(args, this.track.nativeElement, this.getProps());\n        this.changeValue(value);\n      }\n\n      invokeElementMethod(this.draghandle, 'focus');\n    };\n    /**\n     * @hidden\n     */\n\n\n    this.onKeyDown = e => {\n      const options = this.getProps();\n      const {\n        max,\n        min\n      } = options;\n      const handler = this.keyBinding[e.keyCode];\n\n      if (this.isDisabled || !handler) {\n        return;\n      }\n\n      const value = handler(options);\n      this.changeValue(trimValue(max, min, value));\n      e.preventDefault();\n    };\n\n    this.ngChange = _ => {};\n\n    this.ngTouched = () => {};\n\n    this.decreaseValue = () => {\n      this.changeValue(decreaseValueToStep(this.value, this.getProps()));\n    };\n\n    this.increaseValue = () => {\n      this.changeValue(increaseValueToStep(this.value, this.getProps()));\n    };\n\n    this.handleBlur = () => {\n      this.changeDetector.markForCheck();\n      this.focused = false;\n\n      if (hasObservers(this.onBlur) || requiresZoneOnBlur(this.control)) {\n        this.ngZone.run(() => {\n          this.ngTouched();\n\n          if (!this.focusChangedProgrammatically) {\n            this.onBlur.emit();\n          }\n        });\n      }\n    };\n  }\n  /**\n   * @hidden\n   */\n\n\n  set tabIndex(tabIndex) {\n    this.tabindex = tabIndex;\n  }\n\n  get tabIndex() {\n    return this.tabindex;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get currentValue() {\n    return isPresent(this.value) ? this.value.toString() : '';\n  }\n  /**\n   * Focuses the Slider.\n   *\n   * @example\n   * ```ts-no-run\n   * _@Component({\n   * selector: 'my-app',\n   * template: `\n   *  <button (click)=\"slider.focus()\">Focus</button>\n   *  <kendo-slider #slider></kendo-slider>\n   * `\n   * })\n   * class AppComponent { }\n   * ```\n   */\n\n\n  focus() {\n    if (!this.disabled) {\n      this.focusChangedProgrammatically = true;\n      invokeElementMethod(this.draghandle, 'focus');\n      this.focusChangedProgrammatically = false;\n    }\n  }\n  /**\n   * Blurs the Slider.\n   */\n\n\n  blur() {\n    this.focusChangedProgrammatically = true;\n    invokeElementMethod(this.draghandle, 'blur');\n    this.handleBlur();\n    this.focusChangedProgrammatically = false;\n  }\n\n  ngOnChanges(changes) {\n    if (anyChanged(['value', 'fixedTickWidth', 'tickPlacement'], changes, true)) {\n      this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        this.sizeComponent(false);\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    if (!isDocumentAvailable()) {\n      return;\n    }\n\n    if (this.showButtons) {\n      this.setValueChangeInterval(this.increaseButton.nativeElement, () => this.increaseValue());\n      this.setValueChangeInterval(this.decreaseButton.nativeElement, () => this.decreaseValue());\n    }\n\n    this.sizeComponent(false);\n\n    if (this.ticks) {\n      this.ticks.tickElements.changes.subscribe(() => this.sizeComponent(false));\n    }\n\n    this.attachElementEventHandlers();\n    this.isSliderInvalid();\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  get incrementMessage() {\n    return this.incrementTitle || this.localizationService.get('increment');\n  }\n  /**\n   * @hidden\n   */\n\n\n  get decrementMessage() {\n    return this.decrementTitle || this.localizationService.get('decrement');\n  }\n  /**\n   * @hidden\n   */\n\n\n  get dragHandleMessage() {\n    return this.dragHandleTitle || this.localizationService.get('dragHandle');\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleDragPress(args) {\n    if (args.originalEvent) {\n      args.originalEvent.preventDefault();\n    }\n\n    this.renderer.removeClass(this.hostElement.nativeElement, 'k-slider-transitions');\n  }\n  /**\n   * @hidden\n   */\n\n\n  onHandleDrag(args) {\n    this.dragging = true;\n    this.changeValue(eventValue(args, this.track.nativeElement, this.getProps()));\n  }\n  /**\n   * @hidden\n   */\n\n\n  onHandleRelease() {\n    this.dragging = false; //needed for animation\n\n    this.renderer.addClass(this.hostElement.nativeElement, 'k-slider-transitions');\n  } //ngModel binding\n\n  /**\n   * @hidden\n   */\n\n\n  writeValue(value) {\n    this.changeDetector.markForCheck();\n    this.value = value;\n    this.sizeComponent(this.animate);\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnChange(fn) {\n    this.ngChange = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnTouched(fn) {\n    this.ngTouched = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  changeValue(value) {\n    if (!areSame(this.value, value)) {\n      this.ngZone.run(() => {\n        this.value = value;\n        this.ngChange(value);\n        this.valueChange.emit(value);\n        this.sizeComponent(this.animate);\n        this.changeDetector.markForCheck();\n      });\n    }\n\n    this.isSliderInvalid();\n  }\n  /**\n   * @hidden\n   */\n\n\n  sizeComponent(animate) {\n    if (!isDocumentAvailable()) {\n      return;\n    }\n\n    const wrapper = this.wrapper.nativeElement;\n    const track = this.track.nativeElement;\n    const selectionEl = this.sliderSelection.nativeElement;\n    const dragHandleEl = this.draghandle.nativeElement;\n    const ticks = this.ticks ? this.ticksContainer.nativeElement : null;\n\n    if (!animate) {\n      this.renderer.removeClass(this.hostElement.nativeElement, 'k-slider-transitions');\n    }\n\n    this.resetStyles([track, selectionEl, dragHandleEl, ticks, this.hostElement.nativeElement]);\n    const props = this.getProps();\n    const model = new SliderModel(props, wrapper, track, this.renderer);\n    model.resizeTrack();\n\n    if (this.ticks) {\n      //for case when tickPlacement: none\n      model.resizeTicks(this.ticksContainer.nativeElement, this.ticks.tickElements.map(element => element.nativeElement));\n    }\n\n    model.positionHandle(dragHandleEl);\n    model.positionSelection(selectionEl);\n\n    if (!animate) {\n      this.hostElement.nativeElement.getBoundingClientRect();\n      this.renderer.addClass(this.hostElement.nativeElement, 'k-slider-transitions');\n    }\n\n    if (this.fixedTickWidth) {\n      model.resizeWrapper();\n    }\n  }\n\n  set focused(value) {\n    if (this.isFocused !== value && this.hostElement) {\n      this.isFocused = value;\n    }\n  }\n\n  set dragging(value) {\n    if (this.isDragged !== value && this.sliderSelection && this.draghandle) {\n      const sliderSelection = this.sliderSelection.nativeElement;\n      const draghandle = this.draghandle.nativeElement;\n\n      if (value) {\n        this.renderer.addClass(sliderSelection, PRESSED$1);\n        this.renderer.addClass(draghandle, PRESSED$1);\n      } else {\n        this.renderer.removeClass(sliderSelection, PRESSED$1);\n        this.renderer.removeClass(draghandle, PRESSED$1);\n      }\n\n      this.isDragged = value;\n    }\n  }\n\n  setValueChangeInterval(element, callback) {\n    this.ngZone.runOutsideAngular(() => {\n      const mousedown = fromEvent(element, 'mousedown');\n      const mouseup = fromEvent(element, 'mouseup');\n      const mouseout = fromEvent(element, 'mouseout');\n      const subscription = mousedown.pipe(filter(e => e.button === 0 && !this.isDisabled), concatMap(() => interval(150).pipe(startWith(-1), takeUntil(merge(mouseup, mouseout))))).subscribe(() => {\n        if (!this.isFocused) {\n          invokeElementMethod(this.draghandle, 'focus');\n        }\n\n        callback();\n      });\n      this.subscriptions.add(subscription);\n    });\n  }\n\n  getProps() {\n    return {\n      buttons: this.showButtons,\n      disabled: this.disabled,\n      fixedTickWidth: this.fixedTickWidth,\n      largeStep: this.largeStep,\n      max: this.max,\n      min: this.min,\n      readonly: this.readonly,\n      reverse: this.reverse,\n      rtl: this.localizationService.rtl,\n      smallStep: this.smallStep,\n      value: trimValue(this.max, this.min, this.value),\n      vertical: this.vertical\n    };\n  }\n\n  isSliderInvalid() {\n    const sliderClasses = this.hostElement.nativeElement.classList;\n    this.isInvalid = sliderClasses.contains('ng-invalid') ? true : false;\n    this.renderer.setAttribute(this.draghandle.nativeElement, 'aria-invalid', `${this.isInvalid}`);\n  }\n\n  attachElementEventHandlers() {\n    const hostElement = this.hostElement.nativeElement;\n    let tabbing = false;\n    let cursorInsideWrapper = false;\n    this.ngZone.runOutsideAngular(() => {\n      // focusIn and focusOut are relative to the host element\n      this.subscriptions.add(this.renderer.listen(hostElement, 'focusin', () => {\n        if (!this.isFocused) {\n          this.ngZone.run(() => {\n            if (!this.focusChangedProgrammatically) {\n              this.onFocus.emit();\n            }\n\n            this.focused = true;\n          });\n        }\n      }));\n      this.subscriptions.add(this.renderer.listen(hostElement, 'focusout', args => {\n        if (!this.isFocused) {\n          return;\n        }\n\n        if (tabbing) {\n          if (args.relatedTarget !== this.draghandle.nativeElement) {\n            this.handleBlur();\n          }\n\n          tabbing = false;\n        } else {\n          if (!cursorInsideWrapper) {\n            this.handleBlur();\n          }\n        }\n      }));\n      this.subscriptions.add(this.renderer.listen(hostElement, 'mouseenter', () => {\n        cursorInsideWrapper = true;\n      }));\n      this.subscriptions.add(this.renderer.listen(hostElement, 'mouseleave', () => {\n        cursorInsideWrapper = false;\n      }));\n      this.subscriptions.add(this.renderer.listen(hostElement, 'keydown', args => {\n        if (args.keyCode === Keys.Tab) {\n          tabbing = true;\n        } else {\n          tabbing = false;\n        }\n      }));\n    });\n  }\n\n}\n\nSliderComponent.ɵfac = function SliderComponent_Factory(t) {\n  return new (t || SliderComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nSliderComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SliderComponent,\n  selectors: [[\"kendo-slider\"]],\n  viewQuery: function SliderComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c6, 7);\n      i0.ɵɵviewQuery(_c7, 5);\n      i0.ɵɵviewQuery(_c8, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.draghandle = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.decreaseButton = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.increaseButton = _t.first);\n    }\n  },\n  inputs: {\n    focusableId: \"focusableId\",\n    dragHandleTitle: \"dragHandleTitle\",\n    incrementTitle: \"incrementTitle\",\n    animate: \"animate\",\n    decrementTitle: \"decrementTitle\",\n    showButtons: \"showButtons\",\n    value: \"value\",\n    tabIndex: \"tabIndex\"\n  },\n  exportAs: [\"kendoSlider\"],\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.slider'\n  }, {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SliderComponent)\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(() => SliderComponent)\n  }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 14,\n  vars: 25,\n  consts: function () {\n    let i18n_9;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the **Increase** button of the Slider.\n       * @meaning kendo.slider.increment\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_10 = goog.getMsg(\"increment\");\n      i18n_9 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_10;\n    } else {\n      i18n_9 = $localize`:kendo.slider.increment|The title of the **Increase** button of the Slider.:increment`;\n    }\n\n    let i18n_11;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the **Decrease** button of the Slider.\n       * @meaning kendo.slider.decrement\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_12 = goog.getMsg(\"decrement\");\n      i18n_11 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_12;\n    } else {\n      i18n_11 = $localize`:kendo.slider.decrement|The title of the **Decrease** button of the Slider.:decrement`;\n    }\n\n    let i18n_13;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the drag handle of the Slider.\n       * @meaning kendo.slider.dragHandle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_14 = goog.getMsg(\"Drag\");\n      i18n_13 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_14;\n    } else {\n      i18n_13 = $localize`:kendo.slider.dragHandle|The title of the drag handle of the Slider.:Drag`;\n    }\n\n    return [[\"kendoSliderLocalizedMessages\", \"\", \"increment\", i18n_9, \"decrement\", i18n_11, \"dragHandle\", i18n_13], [1, \"k-slider-wrap\", 3, \"kendoEventsOutsideAngular\"], [\"wrap\", \"\"], [\"type\", \"button\", \"class\", \"k-button-decrease k-button k-button-md k-rounded-full k-button-rectangle k-button-solid k-button-solid-base k-icon-button\", \"role\", \"presentation\", 3, \"title\", 4, \"ngIf\"], [1, \"k-slider-track-wrap\"], [\"kendoSliderTicks\", \"\", 3, \"tickTitle\", \"vertical\", \"step\", \"largeStep\", \"min\", \"max\", \"labelTemplate\", 4, \"ngIf\"], [1, \"k-slider-track\"], [\"track\", \"\"], [1, \"k-slider-selection\"], [\"sliderSelection\", \"\"], [\"role\", \"slider\", \"kendoDraggable\", \"\", 1, \"k-draghandle\", 3, \"title\", \"id\", \"kendoPress\", \"kendoDrag\", \"kendoRelease\"], [\"draghandle\", \"\"], [\"type\", \"button\", \"class\", \"k-button-increase k-button k-button-md k-rounded-full k-button-rectangle k-button-solid k-button-solid-base k-icon-button\", \"role\", \"presentation\", 3, \"title\", \"click\", 4, \"ngIf\"], [3, \"resize\"], [\"type\", \"button\", \"role\", \"presentation\", 1, \"k-button-decrease\", \"k-button\", \"k-button-md\", \"k-rounded-full\", \"k-button-rectangle\", \"k-button-solid\", \"k-button-solid-base\", \"k-icon-button\", 3, \"title\"], [\"decreaseButton\", \"\"], [1, \"k-button-icon\", \"k-icon\"], [\"kendoSliderTicks\", \"\", 3, \"tickTitle\", \"vertical\", \"step\", \"largeStep\", \"min\", \"max\", \"labelTemplate\"], [\"ticks\", \"\"], [\"type\", \"button\", \"role\", \"presentation\", 1, \"k-button-increase\", \"k-button\", \"k-button-md\", \"k-rounded-full\", \"k-button-rectangle\", \"k-button-solid\", \"k-button-solid-base\", \"k-icon-button\", 3, \"title\", \"click\"], [\"increaseButton\", \"\"]];\n  },\n  template: function SliderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainerStart(0, 0);\n      i0.ɵɵelementStart(1, \"div\", 1, 2);\n      i0.ɵɵtemplate(3, SliderComponent_button_3_Template, 3, 6, \"button\", 3);\n      i0.ɵɵelementStart(4, \"div\", 4);\n      i0.ɵɵtemplate(5, SliderComponent_ul_5_Template, 2, 8, \"ul\", 5);\n      i0.ɵɵelementStart(6, \"div\", 6, 7);\n      i0.ɵɵelement(8, \"div\", 8, 9);\n      i0.ɵɵelementStart(10, \"span\", 10, 11);\n      i0.ɵɵlistener(\"kendoPress\", function SliderComponent_Template_span_kendoPress_10_listener($event) {\n        return ctx.ifEnabled(ctx.handleDragPress, $event);\n      })(\"kendoDrag\", function SliderComponent_Template_span_kendoDrag_10_listener($event) {\n        return ctx.ifEnabled(ctx.onHandleDrag, $event);\n      })(\"kendoRelease\", function SliderComponent_Template_span_kendoRelease_10_listener($event) {\n        return ctx.ifEnabled(ctx.onHandleRelease, $event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, SliderComponent_button_12_Template, 3, 7, \"button\", 12);\n      i0.ɵɵelementStart(13, \"kendo-resize-sensor\", 13);\n      i0.ɵɵlistener(\"resize\", function SliderComponent_Template_kendo_resize_sensor_resize_13_listener() {\n        return ctx.sizeComponent(false);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementContainerEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"k-slider-buttons\", ctx.showButtons)(\"k-slider-topleft\", ctx.tickPlacement === \"before\")(\"k-slider-bottomright\", ctx.tickPlacement === \"after\");\n      i0.ɵɵproperty(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction2(22, _c15, ctx.onWrapClick, ctx.onKeyDown));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showButtons);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.tickPlacement !== \"none\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵstyleProp(\"touch-action\", ctx.isDisabled ? \"\" : \"none\");\n      i0.ɵɵproperty(\"title\", ctx.dragHandleMessage)(\"id\", ctx.focusableId);\n      i0.ɵɵattribute(\"aria-valuemin\", ctx.min)(\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx.currentValue)(\"aria-valuetext\", ctx.currentValue)(\"aria-disabled\", ctx.disabled ? true : undefined)(\"aria-readonly\", ctx.readonly ? true : undefined)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\")(\"tabindex\", ctx.disabled ? \"-1\" : ctx.tabIndex);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showButtons);\n    }\n  },\n  directives: [LocalizedSliderMessagesDirective, i3.EventsOutsideAngularDirective, i1$1.NgIf, i3.DraggableDirective, i3.ResizeSensorComponent, SliderTicksComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SliderComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoSlider',\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.slider'\n      }, {\n        multi: true,\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => SliderComponent)\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(() => SliderComponent)\n      }],\n      selector: 'kendo-slider',\n      template: `\n        <ng-container kendoSliderLocalizedMessages\n            i18n-increment=\"kendo.slider.increment|The title of the **Increase** button of the Slider.\"\n            increment=\"increment\"\n            i18n-decrement=\"kendo.slider.decrement|The title of the **Decrease** button of the Slider.\"\n            decrement=\"decrement\"\n            i18n-dragHandle=\"kendo.slider.dragHandle|The title of the drag handle of the Slider.\"\n            dragHandle=\"Drag\"\n        >\n        <div class=\"k-slider-wrap\" #wrap\n            [class.k-slider-buttons]=\"showButtons\"\n            [class.k-slider-topleft]=\"tickPlacement === 'before'\"\n            [class.k-slider-bottomright]=\"tickPlacement === 'after'\"\n            [kendoEventsOutsideAngular]=\"{ click: onWrapClick, keydown: onKeyDown }\"\n            >\n            <button *ngIf=\"showButtons\" type=\"button\" #decreaseButton\n                class=\"k-button-decrease k-button k-button-md k-rounded-full k-button-rectangle k-button-solid k-button-solid-base k-icon-button\"\n                [title]=\"decrementMessage\"\n                [attr.tabindex]=\"-1\"\n                role=\"presentation\">\n                    <span class=\"k-button-icon k-icon\"\n                        [class.k-i-caret-alt-left]=\"!vertical\"\n                        [class.k-i-caret-alt-down]=\"vertical\">\n                    </span>\n            </button>\n            <div class=\"k-slider-track-wrap\">\n                <ul kendoSliderTicks\n                    #ticks\n                    *ngIf=\"tickPlacement !== 'none'\"\n                    [tickTitle]=\"title\"\n                    [vertical]=\"vertical\"\n                    [step]=\"smallStep\"\n                    [largeStep]=\"largeStep\"\n                    [min]=\"min\"\n                    [max]=\"max\"\n                    [labelTemplate]=\"labelTemplate?.templateRef\"\n                    [attr.aria-hidden]=\"true\"\n                >\n                </ul>\n                <div #track class=\"k-slider-track\">\n                    <div #sliderSelection class=\"k-slider-selection\">\n                    </div>\n                    <span #draghandle\n                        role=\"slider\"\n                        [attr.aria-valuemin]=\"min\"\n                        [attr.aria-valuemax]=\"max\"\n                        [attr.aria-valuenow]=\"currentValue\"\n                        [attr.aria-valuetext]=\"currentValue\"\n                        [attr.aria-disabled]=\"disabled ? true : undefined\"\n                        [attr.aria-readonly]=\"readonly ? true : undefined\"\n                        [attr.aria-orientation]=\"vertical ? 'vertical' : 'horizontal'\"\n                        [style.touch-action]=\"isDisabled ? '' : 'none'\"\n                        class=\"k-draghandle\"\n                        [title]=\"dragHandleMessage\"\n                        [attr.tabindex]=\"disabled ? '-1' : tabIndex\"\n                        [id]=\"focusableId\"\n                        kendoDraggable\n                        (kendoPress)=\"ifEnabled(handleDragPress, $event)\"\n                        (kendoDrag)=\"ifEnabled(onHandleDrag, $event)\"\n                        (kendoRelease)=\"ifEnabled(onHandleRelease, $event)\"\n                    ></span>\n                </div>\n            </div>\n            <button *ngIf=\"showButtons\" type=\"button\" #increaseButton\n                class=\"k-button-increase k-button k-button-md k-rounded-full k-button-rectangle k-button-solid k-button-solid-base k-icon-button\"\n                [title]=\"incrementMessage\"\n                (click)=\"$event.preventDefault()\"\n                [attr.tabindex]=\"-1\"\n                [attr.aria-label]=\"currentValue\"\n                role=\"presentation\">\n                    <span class=\"k-button-icon k-icon\"\n                        [class.k-i-caret-alt-right]=\"!vertical\"\n                        [class.k-i-caret-alt-up]=\"vertical\">\n                    </span>\n            </button>\n            <kendo-resize-sensor (resize)=\"sizeComponent(false)\"></kendo-resize-sensor>\n        </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    focusableId: [{\n      type: Input\n    }],\n    dragHandleTitle: [{\n      type: Input\n    }],\n    incrementTitle: [{\n      type: Input\n    }],\n    animate: [{\n      type: Input\n    }],\n    decrementTitle: [{\n      type: Input\n    }],\n    showButtons: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    draghandle: [{\n      type: ViewChild,\n      args: ['draghandle', {\n        static: true\n      }]\n    }],\n    decreaseButton: [{\n      type: ViewChild,\n      args: ['decreaseButton', {\n        static: false\n      }]\n    }],\n    increaseButton: [{\n      type: ViewChild,\n      args: ['increaseButton', {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass RangeSliderModel extends SliderModelBase {\n  positionHandle(dragHandle) {\n    if (!dragHandle.id) {\n      return;\n    }\n\n    const {\n      max,\n      min,\n      reverse,\n      vertical\n    } = this.props;\n    const position = vertical ? 'bottom' : 'left';\n    const trackWidth = this.trackWidth();\n    const value = isStartHandle(dragHandle) ? trimValueRange(max, min, this.props.value)[0] : trimValueRange(max, min, this.props.value)[1];\n\n    if (isStartHandle(dragHandle)) {\n      this.startHandlePosition = calculateHandlePosition({\n        min,\n        max,\n        reverse,\n        value,\n        trackWidth\n      });\n      this.renderer.setStyle(dragHandle, position, `${this.startHandlePosition}px`);\n    } else {\n      this.endHandlePosition = calculateHandlePosition({\n        min,\n        max,\n        reverse,\n        value,\n        trackWidth\n      });\n      this.renderer.setStyle(dragHandle, position, `${this.endHandlePosition}px`);\n    }\n  }\n\n  positionSelection(dragHandle, selection) {\n    const {\n      reverse,\n      vertical\n    } = this.props;\n    const dimension = vertical ? 'height' : 'width';\n    const position = vertical ? 'bottom' : reverse ? 'right' : 'left';\n    const size = Math.abs(this.endHandlePosition - this.startHandlePosition);\n    const currentSelectionPosition = vertical ? dragHandle.style.bottom : dragHandle.style.left;\n    this.renderer.setStyle(selection, dimension, `${size}px`);\n    this.renderer.setStyle(selection, position, reverse ? this.trackWidth() - parseFloat(currentSelectionPosition) + 'px' : parseFloat(currentSelectionPosition) + 'px');\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass RangeSliderMessages extends ComponentMessages {}\n\nRangeSliderMessages.ɵfac = /* @__PURE__ */function () {\n  let ɵRangeSliderMessages_BaseFactory;\n  return function RangeSliderMessages_Factory(t) {\n    return (ɵRangeSliderMessages_BaseFactory || (ɵRangeSliderMessages_BaseFactory = i0.ɵɵgetInheritedFactory(RangeSliderMessages)))(t || RangeSliderMessages);\n  };\n}();\n\nRangeSliderMessages.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: RangeSliderMessages,\n  selectors: [[\"kendo-rangeslider-messages-base\"]],\n  inputs: {\n    dragHandleStart: \"dragHandleStart\",\n    dragHandleEnd: \"dragHandleEnd\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RangeSliderMessages, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: 'kendo-rangeslider-messages-base'\n    }]\n  }], null, {\n    dragHandleStart: [{\n      type: Input\n    }],\n    dragHandleEnd: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass LocalizedRangeSliderMessagesDirective extends RangeSliderMessages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n}\n\nLocalizedRangeSliderMessagesDirective.ɵfac = function LocalizedRangeSliderMessagesDirective_Factory(t) {\n  return new (t || LocalizedRangeSliderMessagesDirective)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nLocalizedRangeSliderMessagesDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LocalizedRangeSliderMessagesDirective,\n  selectors: [[\"\", \"kendoSliderLocalizedMessages\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: RangeSliderMessages,\n    useExisting: forwardRef(() => LocalizedRangeSliderMessagesDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LocalizedRangeSliderMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: RangeSliderMessages,\n        useExisting: forwardRef(() => LocalizedRangeSliderMessagesDirective)\n      }],\n      selector: '[kendoSliderLocalizedMessages]'\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n\nconst PRESSED = 'k-pressed';\n/**\n * Represents the [Kendo UI RangeSlider component for Angular]({% slug overview_rangeslider %}).\n */\n\nclass RangeSliderComponent extends SliderBase {\n  constructor(localization, injector, renderer, ngZone, changeDetector, hostElement) {\n    super(localization, injector, renderer, ngZone, changeDetector, hostElement);\n    this.localization = localization;\n    this.injector = injector;\n    this.renderer = renderer;\n    this.ngZone = ngZone;\n    this.changeDetector = changeDetector;\n    this.hostElement = hostElement;\n    /**\n     * @hidden\n     */\n\n    this.startHandleId = `k-start-handle-${guid()}`;\n    /**\n     * @hidden\n     */\n\n    this.endHandleId = `k-end-handle-${guid()}`;\n    /**\n     * @hidden\n     */\n\n    this.focusableId = this.startHandleId;\n    this.activeHandle = 'startHandle';\n    this.focusChangedProgrammatically = false;\n    /**\n     * @hidden\n     */\n\n    this.onWrapClick = args => {\n      if (!this.isDisabled) {\n        this.value = this.value || [this.min, this.min];\n        const trackValue = eventValue(args, this.track.nativeElement, this.getProps());\n        let newRangeValue;\n        const [startValue, endValue] = newRangeValue = this.value;\n\n        if (trackValue <= startValue) {\n          newRangeValue = [trackValue, endValue];\n          this.activeHandle = 'startHandle';\n        } else if (startValue < trackValue && trackValue < endValue) {\n          if (trackValue < (startValue + endValue) / 2) {\n            newRangeValue = [trackValue, endValue];\n            this.activeHandle = 'startHandle';\n          } else {\n            newRangeValue = [startValue, trackValue];\n            this.activeHandle = 'endHandle';\n          }\n        } else if (trackValue >= endValue) {\n          newRangeValue = [startValue, trackValue];\n          this.activeHandle = 'endHandle';\n        }\n\n        const activeHandle = this.activeHandle === 'startHandle' ? this.draghandleStart : this.draghandleEnd;\n        invokeElementMethod(activeHandle, 'focus');\n        this.changeValue(newRangeValue);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    this.onKeyDown = e => {\n      this.value = this.value || [this.min, this.min];\n      const options = this.getProps();\n      const {\n        max,\n        min\n      } = options;\n      const handler = this.keyBinding[e.keyCode];\n\n      if (this.isDisabled || !handler) {\n        return;\n      }\n\n      const startHandleIsActive = isStartHandle(e.target);\n      const nonDraggedHandle = startHandleIsActive ? this.draghandleEnd.nativeElement : this.draghandleStart.nativeElement;\n      this.renderer.removeStyle(nonDraggedHandle, 'zIndex');\n      this.renderer.setStyle(e.target, 'zIndex', 1);\n      const value = handler(Object.assign(Object.assign({}, options), {\n        value: startHandleIsActive ? this.value[0] : this.value[1]\n      }));\n\n      if (startHandleIsActive) {\n        if (value > this.value[1]) {\n          this.value[1] = value;\n        }\n      } else {\n        if (value < this.value[0]) {\n          this.value[0] = value;\n        }\n      }\n\n      const trimmedValue = trimValue(max, min, value);\n      const newValue = startHandleIsActive ? [trimmedValue, this.value[1]] : [this.value[0], trimmedValue];\n      this.changeValue(newValue);\n      e.preventDefault();\n    };\n\n    this.ngChange = _ => {};\n\n    this.ngTouched = () => {};\n\n    this.handleBlur = () => {\n      this.changeDetector.markForCheck();\n      this.focused = false;\n\n      if (hasObservers(this.onBlur) || requiresZoneOnBlur(this.control)) {\n        this.ngZone.run(() => {\n          this.ngTouched();\n\n          if (!this.focusChangedProgrammatically) {\n            this.onBlur.emit();\n          }\n        });\n      }\n    };\n  }\n  /**\n   * Focuses the RangeSlider.\n   *\n   * @example\n   * ```ts-no-run\n   * _@Component({\n   * selector: 'my-app',\n   * template: `\n   *     <div>\n   *         <button class=\"k-button\" (click)=\"slider.focus()\">Focus</button>\n   *     </div>\n   *     <kendo-rangeslider #slider></kendo-rangeslider>\n   * `\n   * })\n   * class AppComponent { }\n   * ```\n   */\n\n\n  focus() {\n    this.focusChangedProgrammatically = true;\n    invokeElementMethod(this.draghandleStart, 'focus');\n    this.focusChangedProgrammatically = false;\n  }\n  /**\n   * Blurs the RangeSlider.\n   */\n\n\n  blur() {\n    this.focusChangedProgrammatically = true;\n    const activeHandle = this.activeHandle === 'startHandle' ? this.draghandleStart : this.draghandleEnd;\n    invokeElementMethod(activeHandle, 'blur');\n    this.handleBlur();\n    this.focusChangedProgrammatically = false;\n  }\n\n  ngOnInit() {\n    if (!this.value) {\n      this.value = [this.min, this.max];\n    }\n\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes) {\n    if (anyChanged(['value', 'fixedTickWidth', 'tickPlacement'], changes, true)) {\n      if (changes.value && changes.value.currentValue) {\n        validateValue(changes.value.currentValue);\n      }\n\n      this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        this.sizeComponent();\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    if (!isDocumentAvailable()) {\n      return;\n    }\n\n    this.sizeComponent();\n\n    if (this.ticks) {\n      this.ticks.tickElements.changes.subscribe(() => this.sizeComponent());\n    }\n\n    this.isRangeSliderInvalid();\n    this.attachElementEventHandlers();\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  textFor(key) {\n    return this.localization.get(key);\n  }\n  /**\n   * @hidden\n   */\n\n\n  get valueText() {\n    return this.value ? `${this.value[0]} - ${this.value[1]}` : '';\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleDragPress(args) {\n    if (args.originalEvent) {\n      args.originalEvent.preventDefault();\n    }\n\n    const target = args.originalEvent.target;\n    this.draggedHandle = target;\n    const nonDraggedHandle = this.draghandleStart.nativeElement === this.draggedHandle ? this.draghandleEnd.nativeElement : this.draghandleStart.nativeElement;\n    this.renderer.removeStyle(nonDraggedHandle, 'zIndex');\n    this.renderer.setStyle(target, 'zIndex', 1);\n  }\n  /**\n   * @hidden\n   */\n\n\n  onHandleDrag(args) {\n    this.value = this.value || [this.min, this.min];\n    const target = args.originalEvent.target;\n    const lastCoords = this.draggedHandle.getBoundingClientRect();\n    this.lastHandlePosition = {\n      x: lastCoords.left,\n      y: lastCoords.top\n    };\n    this.dragging = {\n      value: true,\n      target\n    };\n    const mousePos = {\n      x: args.pageX - 0.5 - lastCoords.width / 2,\n      y: args.pageY - lastCoords.width / 2\n    };\n    const left = mousePos.x < this.lastHandlePosition.x;\n    const right = mousePos.x > this.lastHandlePosition.x;\n    const up = mousePos.y > this.lastHandlePosition.y;\n\n    const moveStartHandle = () => this.changeValue([eventValue(args, this.track.nativeElement, this.getProps()), this.value[1]]);\n\n    const moveEndHandle = () => this.changeValue([this.value[0], eventValue(args, this.track.nativeElement, this.getProps())]);\n\n    const moveBothHandles = () => this.changeValue([eventValue(args, this.track.nativeElement, this.getProps()), eventValue(args, this.track.nativeElement, this.getProps())]);\n\n    const activeStartHandle = isStartHandle(this.draggedHandle);\n    const vertical = this.vertical;\n    const horizontal = !vertical;\n    const forward = vertical && up || (this.reverse ? horizontal && right : horizontal && left);\n    const incorrectValueState = this.value[0] > this.value[1];\n\n    if (this.value[0] === this.value[1] || incorrectValueState) {\n      if (forward) {\n        // eslint-disable-next-line no-unused-expressions\n        activeStartHandle ? moveStartHandle() : moveBothHandles();\n      } else {\n        // eslint-disable-next-line no-unused-expressions\n        activeStartHandle ? moveBothHandles() : moveEndHandle();\n      }\n    } else {\n      // eslint-disable-next-line no-unused-expressions\n      activeStartHandle ? moveStartHandle() : moveEndHandle();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  onHandleRelease(args) {\n    this.dragging = {\n      value: false,\n      target: args.originalEvent.target\n    }; //needed for animation\n\n    this.draggedHandle = undefined;\n  } //ngModel binding\n\n  /**\n   * @hidden\n   */\n\n\n  writeValue(value) {\n    validateValue(value);\n    this.value = value;\n    this.sizeComponent();\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnChange(fn) {\n    this.ngChange = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnTouched(fn) {\n    this.ngTouched = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  changeValue(value) {\n    if (!this.value || !isSameRange(this.value, value)) {\n      this.ngZone.run(() => {\n        this.value = value;\n        this.ngChange(value);\n\n        if (this.value) {\n          this.valueChange.emit(value);\n        }\n\n        this.sizeComponent();\n      });\n    }\n\n    this.isRangeSliderInvalid();\n  }\n  /**\n   * @hidden\n   */\n\n\n  sizeComponent() {\n    if (!isDocumentAvailable()) {\n      return;\n    }\n\n    const wrapper = this.wrapper.nativeElement;\n    const track = this.track.nativeElement;\n    const selectionEl = this.sliderSelection.nativeElement;\n    const dragHandleStartEl = this.draghandleStart.nativeElement;\n    const dragHandleEndEl = this.draghandleEnd.nativeElement;\n    const ticks = this.ticks ? this.ticksContainer.nativeElement : null;\n    this.resetStyles([track, selectionEl, dragHandleStartEl, dragHandleEndEl, ticks, this.hostElement.nativeElement]);\n    const props = this.getProps();\n    const model = new RangeSliderModel(props, wrapper, track, this.renderer);\n    model.resizeTrack();\n\n    if (this.ticks) {\n      //for case when tickPlacement: none\n      model.resizeTicks(this.ticksContainer.nativeElement, this.ticks.tickElements.map(element => element.nativeElement));\n    }\n\n    model.positionHandle(dragHandleStartEl);\n    model.positionHandle(dragHandleEndEl);\n    model.positionSelection(dragHandleStartEl, selectionEl);\n\n    if (this.fixedTickWidth) {\n      model.resizeWrapper();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  get isDisabled() {\n    return this.disabled || this.readonly;\n  }\n  /**\n   * @hidden\n   * Used by the FloatingLabel to determine if the component is empty.\n   */\n\n\n  isEmpty() {\n    return false;\n  }\n\n  set focused(value) {\n    if (this.isFocused !== value && this.hostElement) {\n      this.isFocused = value;\n    }\n  }\n\n  set dragging(data) {\n    if (this.isDragged !== data.value && this.sliderSelection && this.draghandleStart && this.draghandleEnd) {\n      const sliderSelection = this.sliderSelection.nativeElement;\n      const draghandle = data.target;\n\n      if (data.value) {\n        this.renderer.addClass(sliderSelection, PRESSED);\n        this.renderer.addClass(draghandle, PRESSED);\n      } else {\n        this.renderer.removeClass(sliderSelection, PRESSED);\n        this.renderer.removeClass(draghandle, PRESSED);\n      }\n\n      this.isDragged = data.value;\n    }\n  }\n\n  getProps() {\n    return {\n      disabled: this.disabled,\n      fixedTickWidth: this.fixedTickWidth,\n      largeStep: this.largeStep,\n      max: this.max,\n      min: this.min,\n      readonly: this.readonly,\n      reverse: this.reverse,\n      rtl: this.localizationService.rtl,\n      smallStep: this.smallStep,\n      value: trimValueRange(this.max, this.min, this.value),\n      vertical: this.vertical,\n      buttons: false\n    };\n  }\n\n  isRangeSliderInvalid() {\n    const rangeSliderClasses = this.hostElement.nativeElement.classList;\n    this.isInvalid = rangeSliderClasses.contains('ng-invalid') ? true : false;\n    this.renderer.setAttribute(this.draghandleStart.nativeElement, 'aria-invalid', `${this.isInvalid}`);\n    this.renderer.setAttribute(this.draghandleEnd.nativeElement, 'aria-invalid', `${this.isInvalid}`);\n  }\n\n  attachElementEventHandlers() {\n    const hostElement = this.hostElement.nativeElement;\n    let tabbing = false;\n    let cursorInsideWrapper = false;\n    this.ngZone.runOutsideAngular(() => {\n      // focusIn and focusOut are relative to the host element\n      this.subscriptions.add(this.renderer.listen(hostElement, 'focusin', () => {\n        if (!this.isFocused) {\n          this.ngZone.run(() => {\n            if (!this.focusChangedProgrammatically) {\n              this.onFocus.emit();\n            }\n\n            this.focused = true;\n          });\n        }\n      }));\n      this.subscriptions.add(this.renderer.listen(hostElement, 'focusout', args => {\n        if (!this.isFocused) {\n          return;\n        }\n\n        if (tabbing) {\n          if (args.relatedTarget !== this.draghandleStart.nativeElement && args.relatedTarget !== this.draghandleEnd.nativeElement) {\n            this.handleBlur();\n          }\n\n          tabbing = false;\n        } else {\n          if (!cursorInsideWrapper) {\n            this.handleBlur();\n          }\n        }\n      }));\n      this.subscriptions.add(this.renderer.listen(hostElement, 'mouseenter', () => {\n        cursorInsideWrapper = true;\n      }));\n      this.subscriptions.add(this.renderer.listen(hostElement, 'mouseleave', () => {\n        cursorInsideWrapper = false;\n      }));\n      this.subscriptions.add(this.renderer.listen(hostElement, 'keydown', args => {\n        if (args.keyCode === Keys.Tab) {\n          tabbing = true;\n        } else {\n          tabbing = false;\n        }\n      }));\n    });\n  }\n\n}\n\nRangeSliderComponent.ɵfac = function RangeSliderComponent_Factory(t) {\n  return new (t || RangeSliderComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nRangeSliderComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RangeSliderComponent,\n  selectors: [[\"kendo-rangeslider\"]],\n  viewQuery: function RangeSliderComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c16, 7);\n      i0.ɵɵviewQuery(_c17, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.draghandleStart = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.draghandleEnd = _t.first);\n    }\n  },\n  inputs: {\n    value: \"value\"\n  },\n  exportAs: [\"kendoRangeSlider\"],\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.rangeslider'\n  }, {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeSliderComponent)\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(() => RangeSliderComponent)\n  }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 14,\n  vars: 33,\n  consts: function () {\n    let i18n_18;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the **Start** drag handle of the Slider.\n       * @meaning kendo.rangeslider.dragHandleStart\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_19 = goog.getMsg(\"Drag\");\n      i18n_18 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_19;\n    } else {\n      i18n_18 = $localize`:kendo.rangeslider.dragHandleStart|The title of the **Start** drag handle of the Slider.:Drag`;\n    }\n\n    let i18n_20;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the **End** drag handle of the Slider.\n       * @meaning kendo.rangeslider.dragHandleEnd\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_21 = goog.getMsg(\"Drag\");\n      i18n_20 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_21;\n    } else {\n      i18n_20 = $localize`:kendo.rangeslider.dragHandleEnd|The title of the **End** drag handle of the Slider.:Drag`;\n    }\n\n    return [[\"kendoSliderLocalizedMessages\", \"\", \"dragHandleStart\", i18n_18, \"dragHandleEnd\", i18n_20], [1, \"k-slider-wrap\", 3, \"kendoEventsOutsideAngular\"], [\"wrap\", \"\"], [1, \"k-slider-track-wrap\"], [\"kendoSliderTicks\", \"\", 3, \"tickTitle\", \"vertical\", \"step\", \"largeStep\", \"min\", \"max\", \"labelTemplate\", 4, \"ngIf\"], [1, \"k-slider-track\"], [\"track\", \"\"], [1, \"k-slider-selection\"], [\"sliderSelection\", \"\"], [\"role\", \"slider\", \"kendoDraggable\", \"\", 1, \"k-draghandle\", 3, \"id\", \"title\", \"kendoPress\", \"kendoDrag\", \"kendoRelease\"], [\"draghandleStart\", \"\"], [\"draghandleEnd\", \"\"], [3, \"resize\"], [\"kendoSliderTicks\", \"\", 3, \"tickTitle\", \"vertical\", \"step\", \"largeStep\", \"min\", \"max\", \"labelTemplate\"], [\"ticks\", \"\"]];\n  },\n  template: function RangeSliderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainerStart(0, 0);\n      i0.ɵɵelementStart(1, \"div\", 1, 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtemplate(4, RangeSliderComponent_ul_4_Template, 2, 8, \"ul\", 4);\n      i0.ɵɵelementStart(5, \"div\", 5, 6);\n      i0.ɵɵelement(7, \"div\", 7, 8);\n      i0.ɵɵelementStart(9, \"span\", 9, 10);\n      i0.ɵɵlistener(\"kendoPress\", function RangeSliderComponent_Template_span_kendoPress_9_listener($event) {\n        return ctx.ifEnabled(ctx.handleDragPress, $event);\n      })(\"kendoDrag\", function RangeSliderComponent_Template_span_kendoDrag_9_listener($event) {\n        return ctx.ifEnabled(ctx.onHandleDrag, $event);\n      })(\"kendoRelease\", function RangeSliderComponent_Template_span_kendoRelease_9_listener($event) {\n        return ctx.ifEnabled(ctx.onHandleRelease, $event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"span\", 9, 11);\n      i0.ɵɵlistener(\"kendoPress\", function RangeSliderComponent_Template_span_kendoPress_11_listener($event) {\n        return ctx.ifEnabled(ctx.handleDragPress, $event);\n      })(\"kendoDrag\", function RangeSliderComponent_Template_span_kendoDrag_11_listener($event) {\n        return ctx.ifEnabled(ctx.onHandleDrag, $event);\n      })(\"kendoRelease\", function RangeSliderComponent_Template_span_kendoRelease_11_listener($event) {\n        return ctx.ifEnabled(ctx.onHandleRelease, $event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"kendo-resize-sensor\", 12);\n      i0.ɵɵlistener(\"resize\", function RangeSliderComponent_Template_kendo_resize_sensor_resize_13_listener() {\n        return ctx.sizeComponent();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementContainerEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"k-slider-topleft\", ctx.tickPlacement === \"before\")(\"k-slider-bottomright\", ctx.tickPlacement === \"after\");\n      i0.ɵɵproperty(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction2(30, _c15, ctx.onWrapClick, ctx.onKeyDown));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.tickPlacement !== \"none\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵstyleProp(\"touch-action\", ctx.isDisabled ? \"\" : \"none\");\n      i0.ɵɵproperty(\"id\", ctx.startHandleId)(\"title\", ctx.textFor(\"dragHandleStart\"));\n      i0.ɵɵattribute(\"tabindex\", ctx.disabled ? undefined : ctx.tabindex)(\"aria-valuemin\", ctx.min)(\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx.value ? ctx.value[0] : null)(\"aria-valuetext\", ctx.valueText)(\"aria-disabled\", ctx.disabled ? true : undefined)(\"aria-readonly\", ctx.readonly ? true : undefined)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵstyleProp(\"touch-action\", ctx.isDisabled ? \"\" : \"none\");\n      i0.ɵɵproperty(\"id\", ctx.endHandleId)(\"title\", ctx.textFor(\"dragHandleEnd\"));\n      i0.ɵɵattribute(\"tabindex\", ctx.disabled ? undefined : ctx.tabindex)(\"aria-valuemin\", ctx.min)(\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx.value ? ctx.value[1] : null)(\"aria-valuetext\", ctx.valueText)(\"aria-disabled\", ctx.disabled ? true : undefined)(\"aria-readonly\", ctx.readonly ? true : undefined)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n    }\n  },\n  directives: [LocalizedRangeSliderMessagesDirective, i3.EventsOutsideAngularDirective, i1$1.NgIf, i3.DraggableDirective, i3.ResizeSensorComponent, SliderTicksComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RangeSliderComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoRangeSlider',\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.rangeslider'\n      }, {\n        multi: true,\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => RangeSliderComponent)\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(() => RangeSliderComponent)\n      }],\n      selector: 'kendo-rangeslider',\n      template: `\n        <ng-container kendoSliderLocalizedMessages\n            i18n-dragHandleStart=\"kendo.rangeslider.dragHandleStart|The title of the **Start** drag handle of the Slider.\"\n            dragHandleStart=\"Drag\"\n            i18n-dragHandleEnd=\"kendo.rangeslider.dragHandleEnd|The title of the **End** drag handle of the Slider.\"\n            dragHandleEnd=\"Drag\"\n        >\n\n        <div class=\"k-slider-wrap\" #wrap\n            [class.k-slider-topleft]=\"tickPlacement === 'before'\"\n            [class.k-slider-bottomright]=\"tickPlacement === 'after'\"\n            [kendoEventsOutsideAngular]=\"{ click: onWrapClick, keydown: onKeyDown }\"\n            >\n            <div class=\"k-slider-track-wrap\">\n                <ul kendoSliderTicks\n                    #ticks\n                    *ngIf=\"tickPlacement !== 'none'\"\n                    [tickTitle]=\"title\"\n                    [vertical]=\"vertical\"\n                    [step]=\"smallStep\"\n                    [largeStep]=\"largeStep\"\n                    [min]=\"min\"\n                    [max]=\"max\"\n                    [labelTemplate]=\"labelTemplate?.templateRef\"\n                    [attr.aria-hidden]=\"true\"\n                >\n                </ul>\n                <div #track class=\"k-slider-track\">\n                    <div #sliderSelection class=\"k-slider-selection\">\n                    </div>\n                    <span #draghandleStart\n                        role=\"slider\"\n                        [id]=\"startHandleId\"\n                        [attr.tabindex]=\"disabled ? undefined : tabindex\"\n                        [attr.aria-valuemin]=\"min\"\n                        [attr.aria-valuemax]=\"max\"\n                        [attr.aria-valuenow]=\"value ? value[0] : null\"\n                        [attr.aria-valuetext]=\"valueText\"\n                        [attr.aria-disabled]=\"disabled ? true : undefined\"\n                        [attr.aria-readonly]=\"readonly ? true : undefined\"\n                        [attr.aria-orientation]=\"vertical ? 'vertical' : 'horizontal'\"\n                        [style.touch-action]=\"isDisabled ? '' : 'none'\"\n                        class=\"k-draghandle\"\n                        [title]=\"textFor('dragHandleStart')\"\n                        kendoDraggable\n                        (kendoPress)=\"ifEnabled(handleDragPress ,$event)\"\n                        (kendoDrag)=\"ifEnabled(onHandleDrag ,$event)\"\n                        (kendoRelease)=\"ifEnabled(onHandleRelease, $event)\"\n                    ></span>\n                    <span #draghandleEnd\n                        role=\"slider\"\n                        [id]=\"endHandleId\"\n                        [attr.tabindex]=\"disabled ? undefined : tabindex\"\n                        [attr.aria-valuemin]=\"min\"\n                        [attr.aria-valuemax]=\"max\"\n                        [attr.aria-valuenow]=\"value ? value[1] : null\"\n                        [attr.aria-valuetext]=\"valueText\"\n                        [attr.aria-disabled]=\"disabled ? true : undefined\"\n                        [attr.aria-readonly]=\"readonly ? true : undefined\"\n                        [attr.aria-orientation]=\"vertical ? 'vertical' : 'horizontal'\"\n                        [style.touch-action]=\"isDisabled ? '' : 'none'\"\n                        class=\"k-draghandle\"\n                        [title]=\"textFor('dragHandleEnd')\"\n                        kendoDraggable\n                        (kendoPress)=\"ifEnabled(handleDragPress ,$event)\"\n                        (kendoDrag)=\"ifEnabled(onHandleDrag ,$event)\"\n                        (kendoRelease)=\"ifEnabled(onHandleRelease, $event)\"\n                    ></span>\n                </div>\n            </div>\n            <kendo-resize-sensor (resize)=\"sizeComponent()\"></kendo-resize-sensor>\n        </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    draghandleStart: [{\n      type: ViewChild,\n      args: ['draghandleStart', {\n        static: true\n      }]\n    }],\n    draghandleEnd: [{\n      type: ViewChild,\n      args: ['draghandleEnd', {\n        static: true\n      }]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass Messages extends ComponentMessages {}\n\nMessages.ɵfac = /* @__PURE__ */function () {\n  let ɵMessages_BaseFactory;\n  return function Messages_Factory(t) {\n    return (ɵMessages_BaseFactory || (ɵMessages_BaseFactory = i0.ɵɵgetInheritedFactory(Messages)))(t || Messages);\n  };\n}();\n\nMessages.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: Messages,\n  selectors: [[\"kendo-switch-messages-base\"]],\n  inputs: {\n    on: \"on\",\n    off: \"off\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Messages, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: 'kendo-switch-messages-base'\n    }]\n  }], null, {\n    on: [{\n      type: Input\n    }],\n    off: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass LocalizedSwitchMessagesDirective extends Messages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n}\n\nLocalizedSwitchMessagesDirective.ɵfac = function LocalizedSwitchMessagesDirective_Factory(t) {\n  return new (t || LocalizedSwitchMessagesDirective)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nLocalizedSwitchMessagesDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LocalizedSwitchMessagesDirective,\n  selectors: [[\"\", \"kendoSwitchLocalizedMessages\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: Messages,\n    useExisting: forwardRef(() => LocalizedSwitchMessagesDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LocalizedSwitchMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: Messages,\n        useExisting: forwardRef(() => LocalizedSwitchMessagesDirective)\n      }],\n      selector: '[kendoSwitchLocalizedMessages]'\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n\nconst FOCUSED$4 = 'k-focus';\nconst DEFAULT_SIZE$8 = 'medium';\nconst DEFAULT_THUMB_ROUNDED = 'full';\nconst DEFAULT_TRACK_ROUNDED = 'full';\n/**\n * Represents the [Kendo UI Switch component for Angular]({% slug overview_switch %}).\n */\n\nclass SwitchComponent {\n  constructor(renderer, hostElement, localizationService, injector, changeDetector, ngZone) {\n    this.renderer = renderer;\n    this.hostElement = hostElement;\n    this.localizationService = localizationService;\n    this.injector = injector;\n    this.changeDetector = changeDetector;\n    this.ngZone = ngZone;\n    /**\n     * @hidden\n     */\n\n    this.focusableId = `k-${guid()}`;\n    /**\n     * Determines whether the Switch is disabled ([see example]({% slug disabled_switch %})).\n     */\n\n    this.disabled = false;\n    /**\n     * Determines whether the Switch is in its read-only state ([see example]({% slug readonly_switch %})).\n     */\n\n    this.readonly = false;\n    /**\n     * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the Switch.\n     */\n\n    this.tabindex = 0;\n    /**\n     * Fires each time the user focuses the `input` element.\n     */\n\n    this.onFocus = new EventEmitter();\n    /**\n     * Fires each time the `input` element gets blurred.\n     */\n\n    this.onBlur = new EventEmitter();\n    /**\n     * Fires each time the user selects a new value.\n     */\n\n    this.valueChange = new EventEmitter();\n    this.hostClasses = true;\n    /**\n     * @hidden\n     */\n\n    this.initialized = false;\n    this.hostClickSubscription = new Subscription();\n    this._checked = false;\n    this._size = 'medium';\n    this._trackRounded = 'full';\n    this._thumbRounded = 'full';\n\n    this.ngChange = _ => {};\n\n    this.ngTouched = () => {};\n    /**\n     * @hidden\n     */\n\n\n    this.handleFocus = () => {\n      if (this.isFocused) {\n        return;\n      }\n\n      this.focused = true;\n\n      if (hasObservers(this.onFocus)) {\n        this.ngZone.run(() => {\n          this.onFocus.emit();\n        });\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    this.handleBlur = event => {\n      const relatedTarget = event && event.relatedTarget;\n\n      if (this.hostElement.nativeElement.contains(relatedTarget)) {\n        return;\n      }\n\n      this.changeDetector.markForCheck();\n      this.focused = false;\n\n      if (hasObservers(this.onBlur) || requiresZoneOnBlur(this.control)) {\n        this.ngZone.run(() => {\n          this.ngTouched();\n          this.onBlur.emit();\n        });\n      }\n    };\n\n    validatePackage(packageMetadata);\n    this.direction = localizationService.rtl ? 'rtl' : 'ltr';\n    this.keyDownHandler = this.keyDownHandler.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n  /**\n   * Sets the value of the Switch when it is initially displayed.\n   */\n\n\n  set checked(value) {\n    this.setHostClasses(value);\n    this._checked = value;\n  }\n\n  get checked() {\n    return this._checked;\n  }\n  /**\n   * Specifies the width and height of the Switch.\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `none`\n   */\n\n\n  set size(size) {\n    const newSize = size ? size : DEFAULT_SIZE$8;\n    this.handleClasses(newSize, 'size');\n    this._size = newSize;\n  }\n\n  get size() {\n    return this._size;\n  }\n  /**\n   * Specifies the border radius of the Switch thumb.\n   *\n   * The possible values are:\n   * * `full` (default)\n   * * `small`\n   * * `medium`\n   * * `large`\n   * * `none`\n   */\n\n\n  set thumbRounded(thumbRounded) {\n    const newThumbRounded = thumbRounded ? thumbRounded : DEFAULT_THUMB_ROUNDED;\n    this.handleThumbClasses(newThumbRounded);\n    this._thumbRounded = newThumbRounded;\n  }\n\n  get thumbRounded() {\n    return this._thumbRounded;\n  }\n  /**\n   * Specifies the border radius of the Switch track.\n   *\n   * The possible values are:\n   * * `full` (default)\n   * * `small`\n   * * `medium`\n   * * `large`\n   * * `none`\n   */\n\n\n  set trackRounded(trackRounded) {\n    const newTrackRounded = trackRounded ? trackRounded : DEFAULT_TRACK_ROUNDED;\n    this.handleTrackClasses(newTrackRounded);\n    this._trackRounded = newTrackRounded;\n  }\n\n  get trackRounded() {\n    return this._trackRounded;\n  }\n  /**\n   * @hidden\n   */\n\n\n  set tabIndex(tabIndex) {\n    this.tabindex = tabIndex;\n  }\n\n  get tabIndex() {\n    return this.tabindex;\n  }\n\n  get ieClass() {\n    return browser && browser.msie;\n  }\n\n  get ariaDisabled() {\n    return this.disabled ? true : undefined;\n  }\n\n  get ariaReadonly() {\n    return this.readonly;\n  }\n\n  get disabledClass() {\n    return this.disabled;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get onLabelMessage() {\n    return this.onLabel || this.localizationService.get('on');\n  }\n  /**\n   * @hidden\n   */\n\n\n  get offLabelMessage() {\n    return this.offLabel || this.localizationService.get('off');\n  }\n\n  get isEnabled() {\n    return !this.disabled && !this.readonly;\n  }\n\n  ngOnInit() {\n    if (this.hostElement) {\n      const wrapper = this.hostElement.nativeElement;\n      this.renderer.removeAttribute(wrapper, \"tabindex\");\n    }\n\n    this.localizationChangeSubscription = this.localizationService.changes.pipe(skip(1)).subscribe(({\n      rtl\n    }) => {\n      this.direction = rtl ? 'rtl' : 'ltr';\n    });\n    this.control = this.injector.get(NgControl, null);\n    this.ngZone.onStable.pipe(take(1)).subscribe(() => this.initialized = true);\n  }\n\n  ngAfterViewInit() {\n    const wrapper = this.hostElement.nativeElement;\n    this.attachHostClickHandler();\n\n    if (!this.checked && !wrapper.classList.contains('k-switch-off')) {\n      this.renderer.addClass(wrapper, 'k-switch-off');\n    }\n\n    this.handleClasses(this.size, 'size');\n    this.handleTrackClasses(this.trackRounded);\n    this.handleThumbClasses(this.thumbRounded);\n  }\n\n  ngOnDestroy() {\n    if (this.localizationChangeSubscription) {\n      this.localizationChangeSubscription.unsubscribe();\n    }\n\n    if (this.hostClickSubscription) {\n      this.hostClickSubscription.unsubscribe();\n    }\n  }\n  /**\n   * Focuses the Switch.\n   *\n   * @example\n   * ```ts-no-run\n   * _@Component({\n   * selector: 'my-app',\n   * template: `\n   *  <button (click)=\"switch.focus()\">Focus</button>\n   *  <kendo-switch #switch></kendo-switch>\n   * `\n   * })\n   * class AppComponent { }\n   * ```\n   */\n\n\n  focus() {\n    if (!this.track) {\n      return;\n    }\n\n    this.track.nativeElement.focus();\n  }\n  /**\n   * Blurs the Switch.\n   */\n\n\n  blur() {\n    if (!this.track) {\n      return;\n    }\n\n    this.track.nativeElement.blur();\n  }\n  /**\n   * @hidden\n   * Called when the status of the component changes to or from `disabled`.\n   * Depending on the value, it enables or disables the appropriate DOM element.\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this.changeDetector.markForCheck();\n  }\n  /**\n   * @hidden\n   */\n\n\n  get isControlInvalid() {\n    return this.control && this.control.touched && !this.control.valid;\n  }\n  /**\n   * @hidden\n   */\n\n\n  writeValue(value) {\n    this.checked = value === null ? false : value;\n    this.changeDetector.markForCheck();\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnChange(fn) {\n    this.ngChange = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnTouched(fn) {\n    this.ngTouched = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  keyDownHandler(e) {\n    const keyCode = e.keyCode;\n\n    if (this.isEnabled && (keyCode === Keys.Space || keyCode === Keys.Enter)) {\n      this.changeValue(!this.checked);\n      e.preventDefault();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  clickHandler() {\n    if (this.isEnabled) {\n      this.changeValue(!this.checked);\n    }\n  }\n  /**\n   * @hidden\n   * Used by the FloatingLabel to determine if the component is empty.\n   */\n\n\n  isEmpty() {\n    return false;\n  }\n\n  changeValue(value) {\n    if (this.checked !== value) {\n      this.ngZone.run(() => {\n        this.checked = value;\n        this.ngChange(value);\n        this.valueChange.emit(value);\n        this.changeDetector.markForCheck();\n      });\n    }\n  }\n\n  set focused(value) {\n    if (this.isFocused !== value && this.hostElement) {\n      const wrapper = this.hostElement.nativeElement;\n\n      if (value) {\n        this.renderer.addClass(wrapper, FOCUSED$4);\n      } else {\n        this.renderer.removeClass(wrapper, FOCUSED$4);\n      }\n\n      this.isFocused = value;\n    }\n  }\n\n  attachHostClickHandler() {\n    this.ngZone.runOutsideAngular(() => {\n      this.hostClickSubscription.add(this.renderer.listen(this.hostElement.nativeElement, 'click', this.clickHandler));\n    });\n  }\n\n  setHostClasses(value) {\n    const wrapper = this.hostElement.nativeElement;\n\n    if (value) {\n      this.renderer.removeClass(wrapper, 'k-switch-off');\n      this.renderer.addClass(wrapper, 'k-switch-on');\n    } else {\n      this.renderer.removeClass(wrapper, 'k-switch-on');\n      this.renderer.addClass(wrapper, 'k-switch-off');\n    }\n  }\n\n  handleClasses(value, input) {\n    const elem = this.hostElement.nativeElement;\n    const classes = getStylingClasses('switch', input, this[input], value);\n\n    if (classes.toRemove) {\n      this.renderer.removeClass(elem, classes.toRemove);\n    }\n\n    if (classes.toAdd) {\n      this.renderer.addClass(elem, classes.toAdd);\n    }\n  }\n\n  handleTrackClasses(value) {\n    var _a, _b;\n\n    const elem = (_a = this.hostElement) === null || _a === void 0 ? void 0 : _a.nativeElement;\n    const track = (_b = this.track) === null || _b === void 0 ? void 0 : _b.nativeElement;\n\n    if (!elem || !track) {\n      return;\n    }\n\n    const classes = getStylingClasses('switch', 'rounded', this.trackRounded, value);\n\n    if (classes.toRemove) {\n      this.renderer.removeClass(elem, classes.toRemove);\n      this.renderer.removeClass(track, classes.toRemove);\n    }\n\n    if (classes.toAdd) {\n      this.renderer.addClass(elem, classes.toAdd);\n      this.renderer.addClass(track, classes.toAdd);\n    }\n  }\n\n  handleThumbClasses(value) {\n    var _a;\n\n    const thumb = (_a = this.thumb) === null || _a === void 0 ? void 0 : _a.nativeElement;\n\n    if (!thumb) {\n      return;\n    }\n\n    const classes = getStylingClasses('switch', 'rounded', this.thumbRounded, value);\n\n    if (classes.toRemove) {\n      this.renderer.removeClass(thumb, classes.toRemove);\n    }\n\n    if (classes.toAdd) {\n      this.renderer.addClass(thumb, classes.toAdd);\n    }\n  }\n\n}\n\nSwitchComponent.ɵfac = function SwitchComponent_Factory(t) {\n  return new (t || SwitchComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nSwitchComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SwitchComponent,\n  selectors: [[\"kendo-switch\"]],\n  viewQuery: function SwitchComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c1, 7);\n      i0.ɵɵviewQuery(_c22, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.track = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.thumb = _t.first);\n    }\n  },\n  hostVars: 9,\n  hostBindings: function SwitchComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx.direction)(\"aria-disabled\", ctx.ariaDisabled)(\"aria-readonly\", ctx.ariaReadonly);\n      i0.ɵɵclassProp(\"k-ie\", ctx.ieClass)(\"k-switch\", ctx.hostClasses)(\"k-disabled\", ctx.disabledClass);\n    }\n  },\n  inputs: {\n    focusableId: \"focusableId\",\n    onLabel: \"onLabel\",\n    offLabel: \"offLabel\",\n    checked: \"checked\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    tabindex: \"tabindex\",\n    size: \"size\",\n    thumbRounded: \"thumbRounded\",\n    trackRounded: \"trackRounded\",\n    tabIndex: \"tabIndex\"\n  },\n  outputs: {\n    onFocus: \"focus\",\n    onBlur: \"blur\",\n    valueChange: \"valueChange\"\n  },\n  exportAs: [\"kendoSwitch\"],\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.switch'\n  }, {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SwitchComponent)\n    /* eslint-disable-line*/\n\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(() => SwitchComponent)\n  }])],\n  decls: 10,\n  vars: 23,\n  consts: function () {\n    let i18n_23;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The **On** label of the Switch.\n       * @meaning kendo.switch.on\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_24 = goog.getMsg(\"ON\");\n      i18n_23 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_24;\n    } else {\n      i18n_23 = $localize`:kendo.switch.on|The **On** label of the Switch.:ON`;\n    }\n\n    let i18n_25;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The **Off** label of the Switch.\n       * @meaning kendo.switch.off\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_26 = goog.getMsg(\"OFF\");\n      i18n_25 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_26;\n    } else {\n      i18n_25 = $localize`:kendo.switch.off|The **Off** label of the Switch.:OFF`;\n    }\n\n    return [[\"kendoSwitchLocalizedMessages\", \"\", \"on\", i18n_23, \"off\", i18n_25], [\"role\", \"switch\", 1, \"k-switch-track\", 3, \"id\", \"kendoEventsOutsideAngular\"], [\"track\", \"\"], [1, \"k-switch-label-on\"], [1, \"k-switch-label-off\"], [\"tabindex\", \"-1\", 1, \"k-switch-thumb-wrap\", 3, \"kendoEventsOutsideAngular\"], [1, \"k-switch-thumb\"], [\"thumb\", \"\"]];\n  },\n  template: function SwitchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainerStart(0, 0);\n      i0.ɵɵelementStart(1, \"span\", 1, 2);\n      i0.ɵɵelementStart(3, \"span\", 3);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"span\", 4);\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"span\", 5);\n      i0.ɵɵelement(8, \"span\", 6, 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementContainerEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"transition-duration\", ctx.initialized ? \"200ms\" : \"0ms\");\n      i0.ɵɵproperty(\"id\", ctx.focusableId)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction3(15, _c27, ctx.keyDownHandler, ctx.handleFocus, ctx.handleBlur));\n      i0.ɵɵattribute(\"aria-checked\", ctx.checked)(\"tabindex\", ctx.disabled ? undefined : ctx.tabIndex)(\"aria-disabled\", ctx.disabled)(\"aria-invalid\", ctx.isControlInvalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"aria-hidden\", true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.onLabelMessage);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-hidden\", true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.offLabelMessage);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"transition-duration\", ctx.initialized ? \"200ms\" : \"0ms\");\n      i0.ɵɵproperty(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction3(19, _c27, ctx.keyDownHandler, ctx.handleFocus, ctx.handleBlur));\n    }\n  },\n  directives: [LocalizedSwitchMessagesDirective, i3.EventsOutsideAngularDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SwitchComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoSwitch',\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.switch'\n      }, {\n        multi: true,\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => SwitchComponent)\n        /* eslint-disable-line*/\n\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(() => SwitchComponent)\n      }],\n      selector: 'kendo-switch',\n      template: `\n        <ng-container kendoSwitchLocalizedMessages\n            i18n-on=\"kendo.switch.on|The **On** label of the Switch.\"\n            on=\"ON\"\n            i18n-off=\"kendo.switch.off|The **Off** label of the Switch.\"\n            off=\"OFF\"\n        >\n\n        <span\n            #track\n            class=\"k-switch-track\"\n            [id]=\"focusableId\"\n            role=\"switch\"\n            [style.transitionDuration]=\"initialized ? '200ms' : '0ms'\"\n            [attr.aria-checked]=\"checked\"\n            [attr.tabindex]=\"(disabled ? undefined : tabIndex)\"\n            [attr.aria-disabled]=\"disabled\"\n            [attr.aria-invalid]=\"isControlInvalid\"\n            [kendoEventsOutsideAngular]=\"{ keydown: keyDownHandler, focus: handleFocus, blur: handleBlur }\"\n        >\n            <span class=\"k-switch-label-on\" [attr.aria-hidden]=\"true\" >{{onLabelMessage}}</span>\n            <span class=\"k-switch-label-off\" [attr.aria-hidden]=\"true\">{{offLabelMessage}}</span>\n        </span>\n        <span\n            class=\"k-switch-thumb-wrap\"\n            tabindex=\"-1\"\n            [style.transitionDuration]=\"initialized ? '200ms' : '0ms'\" [kendoEventsOutsideAngular]=\"{\n                keydown: keyDownHandler,\n                focus: handleFocus,\n                blur: handleBlur\n            }\">\n            <span #thumb class=\"k-switch-thumb\"></span>\n        </span>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    focusableId: [{\n      type: Input\n    }],\n    onLabel: [{\n      type: Input\n    }],\n    offLabel: [{\n      type: Input\n    }],\n    checked: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    thumbRounded: [{\n      type: Input\n    }],\n    trackRounded: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    direction: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    ieClass: [{\n      type: HostBinding,\n      args: ['class.k-ie']\n    }],\n    ariaDisabled: [{\n      type: HostBinding,\n      args: ['attr.aria-disabled']\n    }],\n    ariaReadonly: [{\n      type: HostBinding,\n      args: ['attr.aria-readonly']\n    }],\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-switch']\n    }],\n    disabledClass: [{\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }],\n    track: [{\n      type: ViewChild,\n      args: ['track', {\n        static: true\n      }]\n    }],\n    thumb: [{\n      type: ViewChild,\n      args: ['thumb', {\n        static: true\n      }]\n    }]\n  });\n})();\n/**\n * Represents the [Kendo UI TextBox directive]({% slug overview_textbox %}) for the Inputs components for Angular.\n * Used to style the textbox of any `input` element.\n *\n * @example\n * ```ts-no-run\n * <input kendoTextBox />\n * <input kendoTextBox type=\"email\" />\n * <input kendoTextBox type=\"password\" />\n * ```\n */\n\n\nclass TextBoxDirective {\n  constructor(renderer, inputElement, ngZone) {\n    this.renderer = renderer;\n    this.inputElement = inputElement;\n    this.ngZone = ngZone;\n    this.hostClasses = true;\n    /**\n     * @hidden\n     */\n\n    this.onFocus = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.onBlur = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.onValueChange = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.autoFillStart = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.autoFillEnd = new EventEmitter();\n    this.listeners = [];\n  }\n  /**\n   * @hidden\n   */\n\n\n  set value(text) {\n    if (!this.inputElement) {\n      return;\n    }\n\n    this.inputElement.nativeElement.value = text === undefined || text === null ? '' : text;\n    this.onValueChange.emit();\n  }\n  /**\n   * @hidden\n   */\n\n\n  get value() {\n    return this.inputElement.nativeElement.value;\n  }\n\n  get id() {\n    return this.inputElement.nativeElement.id;\n  }\n\n  set id(id) {\n    this.renderer.setAttribute(this.inputElement.nativeElement, 'id', id);\n  }\n\n  ngAfterViewInit() {\n    const input = this.inputElement.nativeElement;\n    this.listeners = [this.renderer.listen(input, 'focus', () => this.onFocus.emit()), this.renderer.listen(input, 'blur', () => this.onBlur.emit())];\n    this.ngZone.runOutsideAngular(() => {\n      this.renderer.listen(input, 'animationstart', e => {\n        if (e.animationName === 'autoFillStart') {\n          this.autoFillStart.emit();\n        } else if (e.animationName === 'autoFillEnd') {\n          this.autoFillEnd.emit();\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.listeners.forEach(listener => listener());\n  }\n\n}\n\nTextBoxDirective.ɵfac = function TextBoxDirective_Factory(t) {\n  return new (t || TextBoxDirective)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nTextBoxDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TextBoxDirective,\n  selectors: [[\"input\", \"kendoTextBox\", \"\"]],\n  hostVars: 10,\n  hostBindings: function TextBoxDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-textbox\", ctx.hostClasses)(\"k-input\", ctx.hostClasses)(\"k-input-md\", ctx.hostClasses)(\"k-rounded-md\", ctx.hostClasses)(\"k-input-solid\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    value: \"value\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: KendoInput,\n    useExisting: forwardRef(() => TextBoxDirective)\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextBoxDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'input[kendoTextBox]',\n      providers: [{\n        provide: KendoInput,\n        useExisting: forwardRef(() => TextBoxDirective)\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-textbox']\n    }, {\n      type: HostBinding,\n      args: ['class.k-input']\n    }, {\n      type: HostBinding,\n      args: ['class.k-input-md']\n    }, {\n      type: HostBinding,\n      args: ['class.k-rounded-md']\n    }, {\n      type: HostBinding,\n      args: ['class.k-input-solid']\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents the [Kendo UI TextArea directive for the Inputs components for Angular]({% slug overview_textarea %}).\n * Provides floating labels to `textarea` elements.\n *\n * @example\n * ```ts-no-run\n * <textarea kendoTextArea></textarea>\n * ```\n */\n\n\nclass TextAreaDirective {\n  constructor(renderer, element, zone, changeDetector, injector, rtl) {\n    this.renderer = renderer;\n    this.element = element;\n    this.zone = zone;\n    this.changeDetector = changeDetector;\n    this.injector = injector;\n    this.elementClasses = true;\n    this.autofillClass = true;\n    /**\n     * Fires each time the textarea value is changed.\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Specifies if the `textarea` element will resize its height automatically\n     * ([see example]({% slug overview_textarea %}#toc-auto-resizing)).\n     *\n     * @default false\n     */\n\n    this.autoSize = false;\n    /**\n     * @hidden\n     */\n\n    this.onFocus = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.onBlur = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.onValueChange = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.autoFillStart = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.autoFillEnd = new EventEmitter();\n    this.listeners = [];\n\n    this.ngChange = _ => {};\n\n    this.ngTouched = () => {};\n\n    this.direction = rtl ? 'rtl' : 'ltr';\n  }\n\n  get id() {\n    return this.element.nativeElement.id;\n  }\n\n  set id(id) {\n    this.renderer.setAttribute(this.element.nativeElement, 'id', id);\n  }\n  /**\n   * @hidden\n   */\n\n\n  writeValue(value) {\n    this.elementValue = value;\n    this.resize();\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnChange(fn) {\n    this.ngChange = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnTouched(fn) {\n    this.ngTouched = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.setElementProperty('disabled', isDisabled);\n  }\n\n  ngOnInit() {\n    const element = this.element.nativeElement;\n    this.zone.runOutsideAngular(() => {\n      this.listeners = [this.renderer.listen(element, 'focus', this.handleFocus.bind(this)), this.renderer.listen(element, 'blur', this.handleBlur.bind(this)), this.renderer.listen(element, 'animationstart', e => {\n        if (e.animationName === 'autoFillStart') {\n          this.autoFillStart.emit();\n        } else if (e.animationName === 'autoFillEnd') {\n          this.autoFillEnd.emit();\n        }\n      })];\n\n      if (isDocumentAvailable() && this.autoSize) {\n        this.resizeSubscription = fromEvent(window, 'resize').pipe(debounceTime(50)).subscribe(() => this.resize());\n      }\n\n      this.inputSubscription = fromEvent(element, 'input').subscribe(this.handleInput.bind(this));\n    });\n    this.control = this.injector.get(NgControl, null);\n  }\n\n  ngOnChanges(changes) {\n    const element = this.element.nativeElement;\n\n    if (changes.value) {\n      this.elementValue = this.value;\n    }\n\n    if (changes.autoSize) {\n      if (this.autoSize) {\n        this.initialHeight = element.offsetHeight;\n        this.renderer.setStyle(element, 'resize', 'none');\n      } else {\n        this.renderer.setStyle(element, 'overflow-y', 'auto');\n        this.renderer.setStyle(element, 'resize', 'both');\n        element.style.height = `${this.initialHeight}px`;\n      }\n    }\n\n    this.zone.onStable.pipe(take(1)).subscribe(() => this.resize());\n  }\n\n  ngOnDestroy() {\n    this.listeners.forEach(listener => listener());\n\n    if (this.inputSubscription) {\n      this.inputSubscription.unsubscribe();\n    }\n\n    if (this.resizeSubscription) {\n      this.resizeSubscription.unsubscribe();\n    }\n  }\n\n  get elementValue() {\n    if (this.element) {\n      return this.element.nativeElement.value;\n    }\n\n    return '';\n  }\n\n  set elementValue(value) {\n    this.setElementProperty('value', value === undefined || value === null ? '' : value);\n  }\n\n  setElementProperty(name, value) {\n    if (this.element) {\n      this.renderer.setProperty(this.element.nativeElement, name, value);\n    }\n  }\n\n  resize() {\n    if (!this.autoSize) {\n      return;\n    }\n\n    const element = this.element.nativeElement;\n    this.renderer.setStyle(element, 'overflow-y', 'hidden');\n    element.style.height = `${this.initialHeight}px`;\n    const scrollHeight = element.scrollHeight;\n\n    if (scrollHeight > this.initialHeight) {\n      element.style.height = `${scrollHeight}px`;\n    }\n  }\n\n  handleInput() {\n    const value = this.elementValue;\n    this.value = value;\n\n    if (this.control || hasObservers(this.onValueChange) || hasObservers(this.valueChange)) {\n      this.zone.run(() => {\n        this.ngChange(value);\n        this.onValueChange.emit(value);\n        this.valueChange.emit(value);\n        this.changeDetector.markForCheck();\n      });\n    }\n\n    this.resize();\n  }\n\n  handleFocus() {\n    if (hasObservers(this.onFocus)) {\n      this.zone.run(() => {\n        this.onFocus.emit();\n      });\n    }\n  }\n\n  handleBlur() {\n    if (hasObservers(this.onBlur) || requiresZoneOnBlur(this.control)) {\n      this.zone.run(() => {\n        this.ngTouched();\n        this.onBlur.emit();\n        this.changeDetector.markForCheck();\n      });\n    }\n  }\n\n}\n\nTextAreaDirective.ɵfac = function TextAreaDirective_Factory(t) {\n  return new (t || TextAreaDirective)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(RTL, 8));\n};\n\nTextAreaDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TextAreaDirective,\n  selectors: [[\"textarea\", \"kendoTextArea\", \"\"]],\n  hostVars: 13,\n  hostBindings: function TextAreaDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx.direction);\n      i0.ɵɵclassProp(\"k-textarea\", ctx.elementClasses)(\"k-input\", ctx.elementClasses)(\"k-input-md\", ctx.elementClasses)(\"k-rounded-md\", ctx.elementClasses)(\"k-input-solid\", ctx.elementClasses)(\"k-autofill\", ctx.autofillClass);\n    }\n  },\n  inputs: {\n    autoSize: \"autoSize\",\n    value: \"value\"\n  },\n  outputs: {\n    valueChange: \"valueChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TextAreaDirective),\n    multi: true\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(() => TextAreaDirective)\n  }]), i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextAreaDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => TextAreaDirective),\n        multi: true\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(() => TextAreaDirective)\n      }],\n      selector: 'textarea[kendoTextArea]'\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [RTL]\n      }]\n    }];\n  }, {\n    elementClasses: [{\n      type: HostBinding,\n      args: ['class.k-textarea']\n    }, {\n      type: HostBinding,\n      args: ['class.k-input']\n    }, {\n      type: HostBinding,\n      args: ['class.k-input-md']\n    }, {\n      type: HostBinding,\n      args: ['class.k-rounded-md']\n    }, {\n      type: HostBinding,\n      args: ['class.k-input-solid']\n    }],\n    autofillClass: [{\n      type: HostBinding,\n      args: ['class.k-autofill']\n    }],\n    direction: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    autoSize: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nconst createMaxValidator = maxValue => {\n  return c => {\n    if (!isPresent(maxValue) || !isPresent(c.value) || c.value <= maxValue) {\n      return null;\n    }\n\n    return {\n      maxError: {\n        maxValue: maxValue,\n        value: c.value\n      }\n    };\n  };\n};\n/**\n * @hidden\n */\n\n\nconst createMinValidator = minValue => {\n  return c => {\n    if (!isPresent(minValue) || !isPresent(c.value) || c.value >= minValue) {\n      return null;\n    }\n\n    return {\n      minError: {\n        minValue: minValue,\n        value: c.value\n      }\n    };\n  };\n};\n/**\n * @hidden\n */\n\n\nconst MIN_DOC_LINK = 'http://www.telerik.com/kendo-angular-ui/components/inputs/api/NumericTextBoxComponent/#toc-min';\n/**\n * @hidden\n */\n\nconst MAX_DOC_LINK = 'http://www.telerik.com/kendo-angular-ui/components/inputs/api/NumericTextBoxComponent/#toc-max';\n/**\n * @hidden\n */\n\nconst POINT = \".\";\n/**\n * @hidden\n */\n\nconst INITIAL_SPIN_DELAY = 500;\n/**\n * @hidden\n */\n\nconst SPIN_DELAY = 50;\n/**\n * @hidden\n */\n\nconst EXPONENT_REGEX = /[eE][\\-+]?([0-9]+)/;\n/**\n * @hidden\n */\n\nconst numericRegex = options => {\n  const {\n    autoCorrect,\n    decimals,\n    min\n  } = options;\n  let separator = options.separator;\n\n  if (separator === POINT) {\n    separator = '\\\\' + separator;\n  }\n\n  const signPattern = autoCorrect && min !== null && min >= 0 ? '' : '-?';\n  let numberPattern;\n\n  if (decimals === 0) {\n    numberPattern = '\\\\d*';\n  } else {\n    numberPattern = `(?:(?:\\\\d+(${separator}\\\\d*)?)|(?:${separator}\\\\d*))?`;\n  }\n\n  return new RegExp(`^${signPattern}${numberPattern}$`);\n};\n/**\n * @hidden\n */\n\n\nconst decimalPart = value => {\n  return value >= 0 ? Math.floor(value) : Math.ceil(value);\n};\n/**\n * @hidden\n */\n\n\nconst noop$1 = _ => {}; // eslint-disable-line no-empty\n\n/**\n * @hidden\n */\n\n\nconst defined = value => {\n  return typeof value !== 'undefined';\n};\n/**\n * @hidden\n */\n\n\nconst isNumber = value => {\n  return !isNaN(value) && value !== null;\n};\n/**\n * @hidden\n */\n\n\nfunction pad(value, digits) {\n  const count = digits - String(value).length;\n  let result = value;\n\n  if (count > 0) {\n    const padString = new Array(count + 1).join(\"0\");\n    result = parseFloat(value + padString);\n  }\n\n  return result;\n}\n/**\n * @hidden\n */\n\n\nconst getDeltaFromMouseWheel = e => {\n  let delta = 0;\n\n  if (e.wheelDelta) {\n    delta = e.wheelDelta / 120;\n    delta = delta > 0 ? Math.ceil(delta) : Math.floor(delta);\n  } else if (e.detail) {\n    delta = Math.round(-e.detail / 3);\n  }\n\n  return delta;\n};\n/**\n * @hidden\n */\n\n\nconst getCaretPosition = element => element.selectionStart;\n/**\n * @hidden\n */\n\n\nconst extractSignificantNumericChars = (formattedString, separator) => {\n  const significantCharacters = `${separator}0123456789-`;\n  return formattedString.split('').reduce((acc, curr) => significantCharacters.includes(curr) ? ++acc : acc, 0);\n};\n/**\n * @hidden\n */\n\n\nconst isRightClick = event => {\n  const isRightClickIE = event.button && event.button === 2;\n  const isRightClickOther = event.which && event.which === 3;\n  return isRightClickIE || isRightClickOther;\n};\n/**\n * @hidden\n */\n\n\nvar ArrowDirection;\n\n(function (ArrowDirection) {\n  ArrowDirection[ArrowDirection[\"Down\"] = -1] = \"Down\";\n  ArrowDirection[ArrowDirection[\"None\"] = 0] = \"None\";\n  ArrowDirection[ArrowDirection[\"Up\"] = 1] = \"Up\";\n})(ArrowDirection || (ArrowDirection = {}));\n/**\n * @hidden\n */\n\n\nclass NumericTextBoxMessages extends ComponentMessages {}\n\nNumericTextBoxMessages.ɵfac = /* @__PURE__ */function () {\n  let ɵNumericTextBoxMessages_BaseFactory;\n  return function NumericTextBoxMessages_Factory(t) {\n    return (ɵNumericTextBoxMessages_BaseFactory || (ɵNumericTextBoxMessages_BaseFactory = i0.ɵɵgetInheritedFactory(NumericTextBoxMessages)))(t || NumericTextBoxMessages);\n  };\n}();\n\nNumericTextBoxMessages.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NumericTextBoxMessages,\n  selectors: [[\"kendo-numerictextbox-messages-base\"]],\n  inputs: {\n    decrement: \"decrement\",\n    increment: \"increment\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumericTextBoxMessages, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: 'kendo-numerictextbox-messages-base'\n    }]\n  }], null, {\n    decrement: [{\n      type: Input\n    }],\n    increment: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass LocalizedNumericTextBoxMessagesDirective extends NumericTextBoxMessages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n}\n\nLocalizedNumericTextBoxMessagesDirective.ɵfac = function LocalizedNumericTextBoxMessagesDirective_Factory(t) {\n  return new (t || LocalizedNumericTextBoxMessagesDirective)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nLocalizedNumericTextBoxMessagesDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LocalizedNumericTextBoxMessagesDirective,\n  selectors: [[\"\", \"kendoNumericTextBoxLocalizedMessages\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NumericTextBoxMessages,\n    useExisting: forwardRef(() => LocalizedNumericTextBoxMessagesDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LocalizedNumericTextBoxMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: NumericTextBoxMessages,\n        useExisting: forwardRef(() => LocalizedNumericTextBoxMessagesDirective)\n      }],\n      selector: '[kendoNumericTextBoxLocalizedMessages]'\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n\nconst PARSABLE_OPTIONS = ['min', 'max', 'step', 'decimals'];\nconst PARSABLE_DEFAULTS = {\n  decimals: null,\n  max: null,\n  min: null,\n  step: 1\n};\nconst FOCUSED$3 = 'k-focus';\nconst DEFAULT_SIZE$7 = 'medium';\nconst DEFAULT_ROUNDED$6 = 'medium';\nconst DEFAULT_FILL_MODE$5 = 'solid';\n/**\n * Represents the [Kendo UI NumericTextBox component for Angular]({% slug overview_numerictextbox %}).\n */\n\nclass NumericTextBoxComponent {\n  constructor(intl, renderer, localizationService, injector, ngZone, changeDetector, hostElement) {\n    this.intl = intl;\n    this.renderer = renderer;\n    this.localizationService = localizationService;\n    this.injector = injector;\n    this.ngZone = ngZone;\n    this.changeDetector = changeDetector;\n    this.hostElement = hostElement;\n    /**\n     * @hidden\n     */\n\n    this.focusableId = `k-${guid()}`;\n    /**\n     * Determines whether the NumericTextBox is disabled ([see example]({% slug disabled_numerictextbox %})).\n     */\n\n    this.disabled = false;\n    /**\n     * Determines whether the NumericTextBox is in its read-only state ([see example]({% slug readonly_numerictextbox %})).\n     */\n\n    this.readonly = false;\n    /**\n     * Sets the title of the `input` element of the NumericTextBox.\n     */\n\n    this.title = '';\n    /**\n     * Specifies whether the value will be auto-corrected based on the minimum and maximum values\n     * ([see example]({% slug precision_numerictextbox %})).\n     */\n\n    this.autoCorrect = false;\n    /**\n     * Specifies the number of decimals that the user can enter when the input is focused\n     * ([see example]({% slug precision_numerictextbox %})).\n     */\n\n    this.decimals = null;\n    /**\n     * Specifies the value that is used to increment or decrement the component value\n     * ([see example]({% slug predefinedsteps_numerictextbox %})).\n     */\n\n    this.step = 1;\n    /**\n     * Specifies whether the **Up** and **Down** spin buttons will be rendered\n     * ([see example]({% slug spinbuttons_numerictextbox %})).\n     */\n\n    this.spinners = true;\n    /**\n     * Determines whether the built-in minimum or maximum validators are enforced when a form is validated.\n     *\n     * > The 4.2.0 Angular version introduces the `min` and `max` validation directives. As a result, even if you set `rangeValidation`\n     * to `false`, the built-in Angular validators will be executed.\n     */\n\n    this.rangeValidation = true;\n    /**\n     * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n\n    this.tabindex = 0;\n    /**\n     * Determines whether the value of the NumericTextBox will be changed via scrolling. Defaults to `true`.\n     *\n     * @default true\n     */\n\n    this.changeValueOnScroll = true;\n    /**\n     * Determines whether the whole value will be selected when the NumericTextBox is clicked. Defaults to `true`.\n     */\n\n    this.selectOnFocus = true;\n    /**\n     * Specifies the value of the NumericTextBox\n     * ([see example]({% slug formats_numerictextbox %})).\n     */\n\n    this.value = null;\n    /**\n     * Fires each time the user selects a new value ([see example]({% slug overview_numerictextbox %}#toc-events)).\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires each time the user focuses the `input` element ([see example]({% slug overview_numerictextbox %}#toc-events)).\n     */\n\n    this.onFocus = new EventEmitter();\n    /**\n     * Fires each time the `input` element gets blurred ([see example]({% slug overview_numerictextbox %}#toc-events)).\n     */\n\n    this.onBlur = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.ArrowDirection = ArrowDirection;\n    /**\n     * @hidden\n     */\n\n    this.arrowDirection = ArrowDirection.None;\n    this.hostClasses = true;\n    this.inputValue = '';\n    this.minValidateFn = noop$1;\n    this.maxValidateFn = noop$1;\n    this._format = \"n2\";\n    this.isPasted = false;\n    this.mouseDown = false;\n    this._size = 'medium';\n    this._rounded = 'medium';\n    this._fillMode = 'solid';\n    this.ngChange = noop$1;\n    this.ngTouched = noop$1;\n    this.ngValidatorChange = noop$1;\n    this.domEvents = [];\n    /**\n     * @hidden\n     */\n\n    this.increasePress = e => {\n      this.arrowPress(ArrowDirection.Up, e);\n    };\n    /**\n     * @hidden\n     */\n\n\n    this.decreasePress = e => {\n      this.arrowPress(ArrowDirection.Down, e);\n    };\n    /**\n     * @hidden\n     */\n\n\n    this.releaseArrow = () => {\n      clearTimeout(this.spinTimeout);\n\n      if (this.arrowDirection !== ArrowDirection.None) {\n        this.arrowDirection = ArrowDirection.None;\n        this.changeDetector.detectChanges();\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    this.handlePaste = () => {\n      this.isPasted = true;\n    };\n    /**\n     * @hidden\n     */\n\n\n    this.handleInput = () => {\n      const input = this.numericInput.nativeElement;\n      let {\n        selectionStart,\n        selectionEnd,\n        value: inputValue\n      } = input;\n\n      if (this.pressedKey === Keys.NumpadDecimal) {\n        inputValue = this.replaceNumpadDotValue();\n      }\n\n      if (this.isPasted) {\n        inputValue = this.formatInputValue(this.intl.parseNumber(inputValue));\n      }\n\n      if (!this.isValid(inputValue)) {\n        input.value = this.inputValue;\n        this.setSelection(selectionStart - 1, selectionEnd - 1);\n        return;\n      }\n\n      const parsedValue = this.intl.parseNumber(inputValue);\n      let value = this.restrictDecimals(parsedValue);\n\n      if (this.autoCorrect) {\n        const limited = this.limitInputValue(value);\n        value = limited.value;\n        selectionStart = limited.selectionStart;\n        selectionEnd = limited.selectionEnd;\n      }\n\n      if (parsedValue !== value || this.hasTrailingZeros(inputValue) || !this.focused) {\n        this.setInputValue(value);\n        this.setSelection(selectionStart, selectionEnd);\n      } else {\n        this.inputValue = inputValue;\n      }\n\n      if (this.isPasted) {\n        input.value = this.inputValue;\n      }\n\n      this.updateValue(value);\n      this.previousSelection = null;\n      this.isPasted = false;\n    };\n    /**\n     * @hidden\n     */\n\n\n    this.handleDragEnter = () => {\n      if (!this.focused && !this.isDisabled) {\n        this.setInputValue(this.value, true);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    this.handleMouseDown = () => {\n      this.mouseDown = true;\n    };\n    /**\n     * @hidden\n     */\n\n\n    this.handleFocus = () => {\n      if (!this.focused) {\n        this.focused = true;\n\n        if (!this.isDisabled) {\n          const shouldSelectAll = this.selectOnFocus || !this.mouseDown;\n          this.ngZone.runOutsideAngular(() => {\n            setTimeout(() => {\n              if (shouldSelectAll) {\n                this.selectAll();\n              } else {\n                this.selectCaret();\n              }\n            }, 0);\n          });\n        }\n      }\n\n      this.mouseDown = false;\n\n      if (hasObservers(this.onFocus)) {\n        this.ngZone.run(() => {\n          this.onFocus.emit();\n        });\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    this.handleBlur = () => {\n      this.changeDetector.markForCheck();\n      this.focused = false; //blur is thrown before input when dragging the input text in IE\n\n      if (this.inputValue !== this.elementValue) {\n        this.handleInput();\n      }\n\n      this.setInputValue();\n\n      if (hasObservers(this.onBlur) || requiresZoneOnBlur(this.control)) {\n        this.ngZone.run(() => {\n          this.ngTouched();\n          this.onBlur.emit();\n        });\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    this.handleKeyDown = e => {\n      if (this.isDisabled) {\n        return;\n      }\n\n      let step;\n\n      if (e.keyCode === Keys.ArrowDown) {\n        step = -1;\n      } else if (e.keyCode === Keys.ArrowUp) {\n        step = 1;\n      }\n\n      if (step && this.step) {\n        e.preventDefault();\n        this.addStep(step);\n      }\n\n      const input = this.numericInput.nativeElement;\n      this.previousSelection = {\n        end: input.selectionEnd,\n        start: input.selectionStart\n      };\n      this.pressedKey = e.keyCode;\n    };\n    /**\n     * @hidden\n     */\n\n\n    this.handleWheel = e => {\n      if (this.focused && !this.isDisabled && this.changeValueOnScroll) {\n        e.preventDefault();\n        const delta = getDeltaFromMouseWheel(e);\n        this.addStep(delta);\n      }\n    };\n\n    validatePackage(packageMetadata);\n    this.direction = localizationService.rtl ? 'rtl' : 'ltr';\n  }\n  /**\n   * Specifies the number format which is used when the NumericTextBox is not focused\n   * ([see example]({% slug formats_numerictextbox %})).\n   * If `format` is set to `null` or `undefined`, the default format will be used.\n   */\n\n\n  get format() {\n    const format = this._format;\n    return format !== null && format !== undefined ? format : 'n2';\n  }\n\n  set format(value) {\n    this._format = value;\n  }\n  /**\n   * @hidden\n   */\n\n\n  set tabIndex(tabIndex) {\n    this.tabindex = tabIndex;\n  }\n\n  get tabIndex() {\n    return this.tabindex;\n  }\n  /**\n   * The size property specifies padding of the NumericTextBox internal input element\n   * ([see example]({% slug appearance_numerictextbox %}#toc-size)).\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `none`\n   */\n\n\n  set size(size) {\n    const newSize = size ? size : DEFAULT_SIZE$7;\n    this.handleClasses(newSize, 'size');\n    this._size = newSize;\n  }\n\n  get size() {\n    return this._size;\n  }\n  /**\n   * The rounded property specifies the border radius of the NumericTextBox\n   * ([see example]({% slug appearance_numerictextbox %}#toc-rounded)).\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `none`\n   */\n\n\n  set rounded(rounded) {\n    const newRounded = rounded ? rounded : DEFAULT_ROUNDED$6;\n    this.handleClasses(newRounded, 'rounded');\n    this._rounded = newRounded;\n  }\n\n  get rounded() {\n    return this._rounded;\n  }\n  /**\n   * The fillMode property specifies the background and border styles of the NumericTextBox\n   * ([see example]({% slug appearance_numerictextbox %}#toc-fillMode)).\n   * The possible values are:\n   * * `flat`\n   * * `solid` (default)\n   * * `outline`\n   * * `none`\n   */\n\n\n  set fillMode(fillMode) {\n    const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$5;\n    this.handleClasses(newFillMode, 'fillMode');\n    this._fillMode = newFillMode;\n  }\n\n  get fillMode() {\n    return this._fillMode;\n  }\n\n  get disableClass() {\n    return this.disabled;\n  }\n\n  ngOnInit() {\n    this.subscriptions = this.localizationService.changes.subscribe(({\n      rtl\n    }) => {\n      this.direction = rtl ? 'rtl' : 'ltr';\n    });\n    this.subscriptions.add(this.intl.changes.subscribe(this.intlChange.bind(this)));\n\n    if (this.hostElement) {\n      this.renderer.removeAttribute(this.hostElement.nativeElement, \"tabindex\");\n    }\n\n    this.control = this.injector.get(NgControl, null);\n    this.ngZone.runOutsideAngular(() => {\n      this.domEvents.push(this.renderer.listen(this.hostElement.nativeElement, 'mousewheel', this.handleWheel.bind(this)));\n      this.domEvents.push(this.renderer.listen(this.hostElement.nativeElement, 'DOMMouseScroll', this.handleWheel.bind(this)));\n    });\n  }\n\n  ngAfterViewInit() {\n    const stylingInputs = ['size', 'rounded', 'fillMode'];\n    stylingInputs.forEach(input => {\n      this.handleClasses(this[input], input);\n    });\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngOnChanges(changes) {\n    if (anyChanged(PARSABLE_OPTIONS, changes, false)) {\n      this.parseOptions(PARSABLE_OPTIONS.filter(option => changes[option]));\n    }\n\n    this.verifySettings();\n\n    if (anyChanged(['min', 'max', 'rangeValidation'], changes, false)) {\n      this.minValidateFn = this.rangeValidation ? createMinValidator(this.min) : noop$1;\n      this.maxValidateFn = this.rangeValidation ? createMaxValidator(this.max) : noop$1;\n      this.ngValidatorChange();\n    }\n\n    if (anyChanged(['autoCorrect', 'decimals', 'min'], changes)) {\n      delete this.numericRegex;\n    }\n\n    if (anyChanged(['value', 'format'], changes, false)) {\n      this.verifyValue(this.value);\n      this.value = this.restrictModelValue(this.value);\n\n      if (!this.focused || this.intl.parseNumber(this.elementValue) !== this.value) {\n        this.setInputValue();\n      }\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n\n    clearTimeout(this.spinTimeout);\n    this.domEvents.forEach(unbindHandler => unbindHandler());\n  }\n  /**\n   * @hidden\n   */\n\n\n  validate(control) {\n    return this.minValidateFn(control) || this.maxValidateFn(control);\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnValidatorChange(fn) {\n    this.ngValidatorChange = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  writeValue(value) {\n    this.verifyValue(value);\n    let restrictedValue = this.restrictModelValue(value);\n    this.value = restrictedValue;\n    this.setInputValue();\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnChange(fn) {\n    this.ngChange = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnTouched(fn) {\n    this.ngTouched = fn;\n  }\n  /**\n   * @hidden\n   * Called when the status of the component changes to or from `disabled`.\n   * Depending on the value, it enables or disables the appropriate DOM element.\n   *\n   * @param isDisabled\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.changeDetector.markForCheck();\n    this.disabled = isDisabled;\n  }\n  /**\n   * Focuses the NumericTextBox.\n   *\n   * @example\n   * ```ts-no-run\n   * _@Component({\n   * selector: 'my-app',\n   * template: `\n   *  <button (click)=\"numerictextbox.focus()\">Focus NumericTextBox</button>\n   *  <kendo-numerictextbox #numerictextbox></kendo-numerictextbox>\n   * `\n   * })\n   * class AppComponent { }\n   * ```\n   */\n\n\n  focus() {\n    invokeElementMethod(this.numericInput, 'focus');\n  }\n  /**\n   * Blurs the NumericTextBox.\n   */\n\n\n  blur() {\n    invokeElementMethod(this.numericInput, 'blur');\n  }\n  /**\n   * Notifies the `NumericTextBoxComponent` that the input value should be changed.\n   * Can be used to update the input after setting the component properties directly.\n   */\n\n\n  notifyValueChange() {\n    this.setInputValue();\n  }\n  /**\n   * @hidden\n   */\n\n\n  get incrementTitle() {\n    return this.localizationService.get('increment');\n  }\n  /**\n   * @hidden\n   */\n\n\n  get decrementTitle() {\n    return this.localizationService.get('decrement');\n  }\n  /**\n   * @hidden\n   */\n\n\n  get isControlInvalid() {\n    return this.control && this.control.touched && !this.control.valid;\n  }\n\n  get decimalSeparator() {\n    const numberSymbols = this.intl.numberSymbols();\n    return numberSymbols.decimal;\n  }\n\n  get elementValue() {\n    return this.numericInput.nativeElement.value;\n  }\n\n  set elementValue(value) {\n    this.renderer.setProperty(this.numericInput.nativeElement, 'value', value);\n  }\n\n  get focused() {\n    return this.isFocused;\n  }\n\n  get hasDecimals() {\n    return this.decimals !== null && this.decimals >= 0;\n  }\n\n  set focused(value) {\n    if (this.isFocused !== value && this.hostElement) {\n      const wrap = this.hostElement.nativeElement;\n\n      if (value) {\n        this.renderer.addClass(wrap, FOCUSED$3);\n      } else {\n        this.renderer.removeClass(wrap, FOCUSED$3);\n      }\n\n      this.isFocused = value;\n    }\n  }\n\n  get isDisabled() {\n    return this.disabled || this.readonly;\n  }\n\n  arrowPress(direction, e) {\n    e.preventDefault();\n\n    if (this.isDisabled || isRightClick(e)) {\n      return;\n    }\n\n    if (!mobileOS) {\n      this.focused = true;\n      this.focus();\n    }\n\n    if (this.arrowDirection !== direction) {\n      this.arrowDirection = direction;\n      this.changeDetector.detectChanges();\n    }\n\n    if (this.step) {\n      this.spin(direction, INITIAL_SPIN_DELAY);\n    } else {\n      this.setInputValue();\n    }\n  }\n\n  updateValue(value) {\n    if (!areSame(this.value, value)) {\n      this.ngZone.run(() => {\n        this.value = value;\n        this.ngChange(value);\n        this.valueChange.emit(value);\n        this.changeDetector.markForCheck();\n      });\n    }\n  }\n\n  replaceNumpadDotValue() {\n    let value = this.inputValue || \"\";\n\n    if (this.previousSelection) {\n      const input = this.numericInput.nativeElement;\n      const {\n        selectionStart,\n        selectionEnd\n      } = input;\n      const {\n        start,\n        end\n      } = this.previousSelection;\n      input.value = value = value.substring(0, start) + this.decimalSeparator + value.substring(end);\n      this.setSelection(selectionStart, selectionEnd);\n    }\n\n    return value;\n  }\n\n  isValid(value) {\n    if (!this.numericRegex) {\n      this.numericRegex = numericRegex({\n        autoCorrect: this.autoCorrect,\n        decimals: this.decimals,\n        min: this.min,\n        separator: this.decimalSeparator\n      });\n    }\n\n    return this.numericRegex.test(value);\n  }\n\n  spin(step, timeout) {\n    clearTimeout(this.spinTimeout);\n    this.spinTimeout = window.setTimeout(() => {\n      this.spin(step, SPIN_DELAY);\n    }, timeout);\n    this.addStep(step);\n  }\n\n  addStep(step) {\n    let value = add(this.value || 0, this.step * step);\n    value = this.limitValue(value);\n    value = this.restrictDecimals(value);\n    this.setInputValue(value);\n    this.updateValue(value);\n  }\n\n  setSelection(start, end) {\n    if (this.focused) {\n      invokeElementMethod(this.numericInput, 'setSelectionRange', start, end);\n    }\n  }\n\n  limitValue(value) {\n    let result = value;\n\n    if (!this.isInRange(value)) {\n      if (isNumber(this.max) && value > this.max) {\n        result = this.max;\n      }\n\n      if (isNumber(this.min) && value < this.min) {\n        result = this.min;\n      }\n    }\n\n    return result;\n  }\n\n  limitInputValue(value) {\n    let {\n      selectionStart,\n      selectionEnd,\n      value: enteredValue\n    } = this.numericInput.nativeElement;\n    let limitedValue = value;\n    let selectToEnd = false;\n\n    if (!this.isInRange(value)) {\n      const lengthChange = enteredValue.length - String(this.inputValue).length;\n      const {\n        min,\n        max\n      } = this;\n      const hasMax = isNumber(max);\n      const hasMin = isNumber(min);\n      let padLimit, replaceNext;\n      let correctedValue = value;\n\n      if (selectionStart === 0 && this.inputValue.substr(1) === enteredValue) {\n        return {\n          selectionEnd: selectionEnd,\n          selectionStart: selectionStart,\n          value: null\n        };\n      }\n\n      if (hasMax && value > max) {\n        if (value > 0) {\n          replaceNext = true;\n        } else {\n          padLimit = max;\n        }\n      } else if (hasMin && value < min) {\n        if (value > 0) {\n          padLimit = min;\n        } else {\n          replaceNext = true;\n        }\n      }\n\n      if (padLimit) {\n        const paddedValue = this.tryPadValue(value, padLimit);\n\n        if (paddedValue && decimalPart(value) !== decimalPart(padLimit)) {\n          correctedValue = paddedValue;\n          selectToEnd = true;\n        }\n      } else if (replaceNext) {\n        if (this.inputValue && selectionStart !== enteredValue.length) {\n          correctedValue = parseFloat(enteredValue.substr(0, selectionStart) + enteredValue.substr(selectionStart + lengthChange));\n        }\n      }\n\n      limitedValue = this.limitValue(correctedValue);\n      selectToEnd = (selectToEnd || limitedValue !== correctedValue) && this.previousSelection && this.previousSelection.end - this.previousSelection.start + lengthChange > 0;\n    }\n\n    return {\n      selectionEnd: selectToEnd ? String(limitedValue).length : selectionEnd,\n      selectionStart: selectionStart,\n      value: limitedValue\n    };\n  }\n\n  tryPadValue(value, limit) {\n    const limitLength = String(Math.floor(limit)).length;\n    const zeroPadded = pad(value, limitLength);\n    const zeroPaddedNext = pad(value, limitLength + 1);\n    let result;\n\n    if (this.isInRange(zeroPadded)) {\n      result = zeroPadded;\n    } else if (this.isInRange(zeroPaddedNext)) {\n      result = zeroPaddedNext;\n    }\n\n    return result;\n  }\n\n  isInRange(value) {\n    return !isNumber(value) || (!isNumber(this.min) || this.min <= value) && (!isNumber(this.max) || value <= this.max);\n  }\n\n  restrictModelValue(value) {\n    let result = this.restrictDecimals(value, true);\n\n    if (this.autoCorrect && this.limitValue(result) !== result) {\n      result = null;\n    }\n\n    return result;\n  }\n\n  restrictDecimals(value, round) {\n    let result = value;\n\n    if (value && this.hasDecimals) {\n      const decimals = this.decimals;\n      const stringValue = String(value);\n\n      if (round || EXPONENT_REGEX.test(stringValue)) {\n        result = toFixedPrecision(value, decimals);\n      } else {\n        const parts = stringValue.split(POINT);\n        let fraction = parts[1];\n\n        if (fraction && fraction.length > decimals) {\n          fraction = fraction.substr(0, decimals);\n          result = parseFloat(`${parts[0]}${POINT}${fraction}`);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  formatInputValue(value) {\n    let stringValue = Object.is(value, -0) ? '-0' : String(value);\n    const exponentMatch = EXPONENT_REGEX.exec(stringValue);\n\n    if (exponentMatch) {\n      stringValue = value.toFixed(limitPrecision(parseInt(exponentMatch[1], 10)));\n    }\n\n    return stringValue.replace(POINT, this.decimalSeparator);\n  }\n\n  formatValue(value, focused) {\n    let formattedValue;\n\n    if (value === null || !defined(value) || value === '') {\n      formattedValue = '';\n    } else if (focused && !this.readonly) {\n      formattedValue = this.formatInputValue(value);\n    } else {\n      formattedValue = this.intl.formatNumber(value, this.format);\n    }\n\n    return formattedValue;\n  }\n\n  setInputValue(value = this.value, focused = this.focused) {\n    const formattedValue = this.formatValue(value, focused);\n    this.elementValue = formattedValue;\n    this.inputValue = formattedValue;\n  }\n\n  verifySettings() {\n    if (!isDevMode()) {\n      return;\n    }\n\n    if (this.min !== null && this.max !== null && this.min > this.max) {\n      throw new Error(`The max value should be bigger than the min. See ${MIN_DOC_LINK} and ${MAX_DOC_LINK}.`);\n    }\n  }\n\n  verifyValue(value) {\n    if (isDevMode() && value && typeof value !== 'number') {\n      throw new Error(`The NumericTextBox component requires value of type Number and ${JSON.stringify(value)} was set.`);\n    }\n  }\n\n  parseOptions(options) {\n    for (let idx = 0; idx < options.length; idx++) {\n      const name = options[idx];\n      const value = this[name];\n\n      if (typeof value === 'string') {\n        const parsed = parseFloat(value);\n        const valid = !isNaN(parsed);\n\n        if (isDevMode() && !valid && value !== '') {\n          throw new Error('The NumericTextBox component requires value of type Number or a String representing ' + `a number for the ${name} property and ${JSON.stringify(value)} was set.`);\n        }\n\n        this[name] = valid ? parsed : PARSABLE_DEFAULTS[name];\n      }\n    }\n  }\n\n  intlChange() {\n    delete this.numericRegex;\n\n    if (this.numericInput && (!this.focused || !this.isValid(this.elementValue))) {\n      this.setInputValue();\n    }\n  }\n\n  hasTrailingZeros(inputValue) {\n    if (this.hasDecimals && this.focused) {\n      const fraction = inputValue.split(this.decimalSeparator)[1];\n      return fraction && fraction.length > this.decimals && fraction.lastIndexOf('0') === fraction.length - 1;\n    }\n  }\n\n  selectAll() {\n    this.setInputValue();\n    this.setSelection(0, this.inputValue.length);\n  }\n\n  selectCaret() {\n    const caretPosition = getCaretPosition(this.numericInput.nativeElement);\n    const formattedValue = this.elementValue;\n    const partialValue = formattedValue.substring(0, caretPosition);\n    this.setInputValue();\n\n    if (partialValue.length) {\n      const significantCharsInFormattedValue = extractSignificantNumericChars(partialValue, this.decimalSeparator);\n      const adjustedSignificantChars = this.adjustSignificantChars(formattedValue, significantCharsInFormattedValue);\n      this.setSelection(adjustedSignificantChars, adjustedSignificantChars);\n    } else {\n      this.setSelection(0, 0);\n    }\n  }\n\n  numberOfLeadingZeroes(formattedValue) {\n    const separatorIndex = formattedValue.indexOf(this.decimalSeparator);\n    const matchedLeadingZeroes = formattedValue.match(/^[^1-9]*?(0+)/);\n\n    if (matchedLeadingZeroes) {\n      const lengthOfMatch = matchedLeadingZeroes[0].length;\n      const lengthOfLeadingZeroesMatch = matchedLeadingZeroes[1].length;\n      return lengthOfMatch === separatorIndex ? lengthOfLeadingZeroesMatch - 1 : lengthOfLeadingZeroesMatch;\n    }\n\n    return 0;\n  }\n\n  adjustSignificantChars(formattedValue, significantChars) {\n    const leadingZeroes = this.numberOfLeadingZeroes(formattedValue);\n\n    if (leadingZeroes > 0) {\n      return Math.max(0, significantChars - leadingZeroes);\n    }\n\n    return significantChars;\n  }\n\n  handleClasses(value, input) {\n    const elem = this.hostElement.nativeElement;\n    const classes = getStylingClasses('input', input, this[input], value);\n\n    if (classes.toRemove) {\n      this.renderer.removeClass(elem, classes.toRemove);\n    }\n\n    if (classes.toAdd) {\n      this.renderer.addClass(elem, classes.toAdd);\n    }\n  }\n\n}\n\nNumericTextBoxComponent.ɵfac = function NumericTextBoxComponent_Factory(t) {\n  return new (t || NumericTextBoxComponent)(i0.ɵɵdirectiveInject(i1$2.IntlService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNumericTextBoxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NumericTextBoxComponent,\n  selectors: [[\"kendo-numerictextbox\"]],\n  viewQuery: function NumericTextBoxComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c28, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.numericInput = _t.first);\n    }\n  },\n  hostVars: 7,\n  hostBindings: function NumericTextBoxComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx.direction);\n      i0.ɵɵclassProp(\"k-disabled\", ctx.disableClass)(\"k-input\", ctx.hostClasses)(\"k-numerictextbox\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    focusableId: \"focusableId\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    title: \"title\",\n    autoCorrect: \"autoCorrect\",\n    format: \"format\",\n    max: \"max\",\n    min: \"min\",\n    decimals: \"decimals\",\n    placeholder: \"placeholder\",\n    step: \"step\",\n    spinners: \"spinners\",\n    rangeValidation: \"rangeValidation\",\n    tabindex: \"tabindex\",\n    tabIndex: \"tabIndex\",\n    changeValueOnScroll: \"changeValueOnScroll\",\n    selectOnFocus: \"selectOnFocus\",\n    value: \"value\",\n    maxlength: \"maxlength\",\n    size: \"size\",\n    rounded: \"rounded\",\n    fillMode: \"fillMode\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    onFocus: \"focus\",\n    onBlur: \"blur\"\n  },\n  exportAs: [\"kendoNumericTextBox\"],\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.numerictextbox'\n  }, {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumericTextBoxComponent),\n    multi: true\n  }, {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => NumericTextBoxComponent),\n    multi: true\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(() => NumericTextBoxComponent)\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 4,\n  vars: 21,\n  consts: function () {\n    let i18n_29;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title for the **Increment** button in the NumericTextBox\n       * @meaning kendo.numerictextbox.increment\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_30 = goog.getMsg(\"Increase value\");\n      i18n_29 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_30;\n    } else {\n      i18n_29 = $localize`:kendo.numerictextbox.increment|The title for the **Increment** button in the NumericTextBox:Increase value`;\n    }\n\n    let i18n_31;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title for the **Decrement** button in the NumericTextBox\n       * @meaning kendo.numerictextbox.decrement\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_32 = goog.getMsg(\"Decrease value\");\n      i18n_31 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_32;\n    } else {\n      i18n_31 = $localize`:kendo.numerictextbox.decrement|The title for the **Decrement** button in the NumericTextBox:Decrease value`;\n    }\n\n    return [[\"kendoNumericTextBoxLocalizedMessages\", \"\", \"increment\", i18n_29, \"decrement\", i18n_31], [\"role\", \"spinbutton\", \"autocomplete\", \"off\", \"autocorrect\", \"off\", 1, \"k-input-inner\", 3, \"id\", \"tabindex\", \"disabled\", \"readonly\", \"kendoEventsOutsideAngular\"], [\"numericInput\", \"\"], [\"class\", \"k-input-spinner k-spin-button\", 3, \"kendoEventsOutsideAngular\", 4, \"ngIf\"], [1, \"k-input-spinner\", \"k-spin-button\", 3, \"kendoEventsOutsideAngular\"], [\"type\", \"button\", \"tabindex\", \"-1\", 1, \"k-spinner-increase\", \"k-button\", \"k-icon-button\", \"k-button-solid\", \"k-button-solid-base\", 3, \"kendoEventsOutsideAngular\", \"title\"], [1, \"k-button-icon\", \"k-icon\", \"k-i-caret-alt-up\"], [\"type\", \"button\", \"tabindex\", \"-1\", 1, \"k-spinner-decrease\", \"k-button\", \"k-icon-button\", \"k-button-solid\", \"k-button-solid-base\", 3, \"kendoEventsOutsideAngular\", \"title\"], [1, \"k-button-icon\", \"k-icon\", \"k-i-caret-alt-down\"]];\n  },\n  template: function NumericTextBoxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵelement(1, \"input\", 1, 2);\n      i0.ɵɵtemplate(3, NumericTextBoxComponent_span_3_Template, 5, 20, \"span\", 3);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"id\", ctx.focusableId)(\"tabindex\", ctx.tabIndex)(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction7(13, _c35, ctx.handleMouseDown, ctx.handleDragEnter, ctx.handleKeyDown, ctx.handleInput, ctx.handleFocus, ctx.handleBlur, ctx.handlePaste));\n      i0.ɵɵattribute(\"aria-valuemin\", ctx.min)(\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx.value)(\"title\", ctx.title)(\"placeholder\", ctx.placeholder)(\"maxLength\", ctx.maxlength)(\"aria-invalid\", ctx.isControlInvalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.spinners);\n    }\n  },\n  directives: [LocalizedNumericTextBoxMessagesDirective, i3.EventsOutsideAngularDirective, i1$1.NgIf],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumericTextBoxComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoNumericTextBox',\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.numerictextbox'\n      }, {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NumericTextBoxComponent),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => NumericTextBoxComponent),\n        multi: true\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(() => NumericTextBoxComponent)\n      }],\n      selector: 'kendo-numerictextbox',\n      template: `\n        <ng-container kendoNumericTextBoxLocalizedMessages\n            i18n-increment=\"kendo.numerictextbox.increment|The title for the **Increment** button in the NumericTextBox\"\n            increment=\"Increase value\"\n            i18n-decrement=\"kendo.numerictextbox.decrement|The title for the **Decrement** button in the NumericTextBox\"\n            decrement=\"Decrease value\"\n        >\n        </ng-container>\n            <input\n                role=\"spinbutton\"\n                class=\"k-input-inner\"\n                autocomplete=\"off\"\n                autocorrect=\"off\"\n                [id]=\"focusableId\"\n                [attr.aria-valuemin]=\"min\"\n                [attr.aria-valuemax]=\"max\"\n                [attr.aria-valuenow]=\"value\"\n                [attr.title]=\"title\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.maxLength]=\"maxlength\"\n                [attr.aria-invalid]=\"isControlInvalid\"\n                [tabindex]=\"tabIndex\"\n                [disabled]=\"disabled\"\n                [readonly]=\"readonly\"\n                [kendoEventsOutsideAngular]=\"{\n                    mousedown: handleMouseDown,\n                    dragenter: handleDragEnter,\n                    keydown: handleKeyDown,\n                    input: handleInput,\n                    focus: handleFocus,\n                    blur: handleBlur,\n                    paste: handlePaste\n                }\"\n                #numericInput />\n            <span\n                class=\"k-input-spinner k-spin-button\" *ngIf=\"spinners\"\n                [kendoEventsOutsideAngular]=\"{ mouseup: releaseArrow, mouseleave: releaseArrow }\"\n            >\n               <button\n                    type=\"button\"\n                    [kendoEventsOutsideAngular]=\"{ mousedown: increasePress }\"\n                    [attr.aria-hidden]=\"true\"\n                    [attr.aria-label]=\"incrementTitle\"\n                    [title]=\"incrementTitle\"\n                    [class.k-active]=\"arrowDirection === ArrowDirection.Up\"\n                    class=\"k-spinner-increase k-button k-icon-button k-button-solid k-button-solid-base\"\n                    tabindex=\"-1\"\n                >\n                    <span class=\"k-button-icon k-icon k-i-caret-alt-up\"></span>\n               </button>\n               <button\n                    type=\"button\"\n                    [kendoEventsOutsideAngular]=\"{ mousedown: decreasePress }\"\n                    [attr.aria-hidden]=\"true\"\n                    [attr.aria-label]=\"decrementTitle\"\n                    [title]=\"decrementTitle\"\n                    [class.k-active]=\"arrowDirection === ArrowDirection.Down\"\n                    class=\"k-spinner-decrease k-button k-icon-button k-button-solid k-button-solid-base\"\n                    tabindex=\"-1\"\n               >\n                    <span class=\"k-button-icon k-icon k-i-caret-alt-down\"></span>\n               </button>\n            </span>\n      `\n    }]\n  }], function () {\n    return [{\n      type: i1$2.IntlService\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    focusableId: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    autoCorrect: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    decimals: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    spinners: [{\n      type: Input\n    }],\n    rangeValidation: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    changeValueOnScroll: [{\n      type: Input\n    }],\n    selectOnFocus: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    maxlength: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    fillMode: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    numericInput: [{\n      type: ViewChild,\n      args: ['numericInput', {\n        static: true\n      }]\n    }],\n    direction: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    disableClass: [{\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }],\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-input']\n    }, {\n      type: HostBinding,\n      args: ['class.k-numerictextbox']\n    }]\n  });\n})();\n/**\n * Custom component messages override default component messages.\n */\n\n\nclass NumericTextBoxCustomMessagesComponent extends NumericTextBoxMessages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n  get override() {\n    return true;\n  }\n\n}\n\nNumericTextBoxCustomMessagesComponent.ɵfac = function NumericTextBoxCustomMessagesComponent_Factory(t) {\n  return new (t || NumericTextBoxCustomMessagesComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nNumericTextBoxCustomMessagesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NumericTextBoxCustomMessagesComponent,\n  selectors: [[\"kendo-numerictextbox-messages\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NumericTextBoxMessages,\n    useExisting: forwardRef(() => NumericTextBoxCustomMessagesComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function NumericTextBoxCustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumericTextBoxCustomMessagesComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: NumericTextBoxMessages,\n        useExisting: forwardRef(() => NumericTextBoxCustomMessagesComponent)\n      }],\n      selector: 'kendo-numerictextbox-messages',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar ResultType;\n\n(function (ResultType) {\n  ResultType[ResultType[\"Literal\"] = 0] = \"Literal\";\n  ResultType[ResultType[\"Mask\"] = 1] = \"Mask\"; // eslint-disable-next-line id-denylist\n\n  ResultType[ResultType[\"Undefined\"] = 2] = \"Undefined\";\n})(ResultType || (ResultType = {}));\n/**\n * @hidden\n */\n\n\nclass Result {\n  constructor(value, rest, type = ResultType.Undefined) {\n    this.value = value;\n    this.rest = rest;\n    this.type = type;\n  } //map :: Functor f => f a ~> (a -> b) -> f b\n\n\n  map(fn) {\n    return new Result(fn(this.value), this.rest);\n  } //chain :: Chain m => m a ~> (a -> m b) -> m b\n\n\n  chain(fn) {\n    return fn(this.value, this.rest);\n  }\n\n  fold(s, _\n  /*we don't need it*/\n  ) {\n    return s(this.value, this.rest);\n  }\n\n  concat(r) {\n    return this.map((vs, _) => r.chain((v, __) => vs.concat([v])));\n  }\n\n  toString() {\n    return `Result({ value: '${this.value}', rest: ${this.rest} })`;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass Stream {\n  constructor(input = [], control = []) {\n    this.input = input;\n    this.control = control;\n    this.inputCursor = 0;\n    this.controlCursor = 0;\n  }\n\n  eof() {\n    return this.inputCursor >= this.input.length;\n  } // Get the first value from the input.\n\n\n  next() {\n    return {\n      char: this.input[this.inputCursor++],\n      control: this.control[this.controlCursor++]\n    };\n  }\n\n  peek() {\n    return {\n      char: this.input[this.inputCursor],\n      control: this.control[this.controlCursor]\n    };\n  }\n\n  eat_input() {\n    this.inputCursor++;\n  }\n\n  eat_control() {\n    this.controlCursor++;\n  }\n\n  eat() {\n    this.inputCursor++;\n    this.controlCursor++;\n  }\n\n}\n\nconst toArray = value => (value || '').split('');\n\nconst ESCAPE_CHARACTER = '\\\\';\n/**\n * @hidden\n */\n\nclass Parser {\n  constructor(parse) {\n    this.parse = parse;\n  }\n\n  run(input, control = '') {\n    if (input instanceof Stream) {\n      return this.parse(input);\n    } else {\n      return this.parse(new Stream(toArray(input), toArray(control)));\n    }\n  } //map :: Functor f => f a ~> (a -> b) -> f b\n\n\n  map(f) {\n    return new Parser(stream => this.parse(stream).map(f));\n  } //chain :: Chain m => m a ~> (a -> m b) -> m b\n\n\n  chain(f) {\n    return new Parser(stream => this.parse(stream).chain((v, s) => f(v).run(s)));\n  }\n\n  isLiteral(c) {\n    return this.run(c).type === ResultType.Literal;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nconst mask = ({\n  prompt,\n  promptPlaceholder\n}) => rule => new Parser(stream => {\n  while (!stream.eof()) {\n    const {\n      char,\n      control\n    } = stream.peek();\n\n    if (char === control && control === prompt) {\n      stream.eat();\n      return new Result(prompt, stream, ResultType.Mask);\n    }\n\n    if (rule.test(char)) {\n      stream.eat();\n      return new Result(char, stream, ResultType.Mask);\n    }\n\n    if (char === promptPlaceholder) {\n      stream.eat();\n      return new Result(prompt, stream, ResultType.Mask);\n    }\n\n    stream.eat_input();\n  }\n\n  stream.eat();\n  return new Result(prompt, stream, ResultType.Mask);\n});\n/**\n * @hidden\n */\n\n\nconst literal = _token => new Parser(stream => {\n  //    let {char, control} = stream.peek();\n  let char = stream.peek().char;\n\n  if (char === _token) {\n    stream.eat();\n    return new Result(_token, stream, ResultType.Literal);\n  } //    if (control === _token) {\n  //        while (!stream.eof() && char !== _token) {\n  //            stream.eat_input();\n  //            char = stream.peek().char;\n  //        }\n  //    }\n  //\n  //    if (control !== undefined) {\n  //        stream.eat();\n  //    }\n\n\n  return new Result(_token, stream, ResultType.Literal);\n});\n/**\n * @hidden\n */\n\n\nconst unmask = prompt => rule => new Parser(stream => {\n  while (!stream.eof()) {\n    const {\n      char,\n      control\n    } = stream.peek();\n\n    if (char === prompt && control === prompt) {\n      stream.eat();\n      return new Result(char, stream);\n    }\n\n    if (rule.test(char)) {\n      stream.eat();\n      return new Result(char, stream);\n    }\n\n    stream.eat_input();\n  }\n\n  stream.eat();\n  return new Result('', stream);\n});\n/**\n * @hidden\n */\n\n\nconst unliteral = _token => new Parser(stream => {\n  if (stream.eof()) {\n    return new Result('', stream);\n  }\n\n  const {\n    char\n  } = stream.peek();\n\n  if (char === _token) {\n    stream.eat();\n  }\n\n  return new Result(_token, stream);\n});\n/**\n * @hidden\n */\n\n\nconst token = (rules, creator) => new Parser(stream => {\n  let {\n    char\n  } = stream.next();\n  const rule = rules[char];\n\n  if (char === ESCAPE_CHARACTER) {\n    char = stream.next().char;\n    return new Result(creator.literal(char), stream);\n  }\n\n  if (!rule) {\n    return new Result(creator.literal(char), stream);\n  }\n\n  return new Result(creator.mask(rule), stream);\n});\n/**\n * @hidden\n */\n\n\nconst rawMask = ({\n  prompt,\n  promptPlaceholder\n}) => new Parser(stream => {\n  let {\n    char\n  } = stream.next();\n\n  if (char === prompt) {\n    return new Result(promptPlaceholder, stream);\n  }\n\n  return new Result(char, stream);\n});\n/**\n * @hidden\n */\n\n\nconst rawLiteral = includeLiterals => new Parser(stream => {\n  let {\n    char\n  } = stream.next();\n\n  if (includeLiterals) {\n    return new Result(char, stream);\n  }\n\n  return new Result('', stream);\n});\n/**\n * @hidden\n */\n\n\nconst always = value => new Parser(stream => new Result(value, stream));\n/**\n * @hidden\n */\n\n\nconst append = (p1, p2) => p1.chain(vs => p2.map(v => vs.concat([v])));\n/**\n * @hidden\n */\n\n\nconst sequence = list => list.reduce((acc, parser) => append(acc, parser), always([]));\n/**\n * @hidden\n */\n\n\nconst greedy = parser => new Parser(stream => {\n  let result = new Result([], stream);\n\n  while (!stream.eof()) {\n    result = result.concat(parser.run(stream));\n  }\n\n  return result;\n});\n/**\n * @hidden\n */\n\n\nclass MaskingService {\n  constructor() {\n    this.rules = {};\n    this.prompt = \"_\";\n    this.mask = \"\";\n    this.promptPlaceholder = \" \";\n    this.includeLiterals = false;\n    this.maskTokens = [];\n    this.unmaskTokens = [];\n    this.rawTokens = [];\n    this.validationTokens = [];\n  }\n\n  update({\n    mask = '',\n    prompt = '',\n    promptPlaceholder = ' ',\n    rules = {},\n    includeLiterals = false\n  }) {\n    this.mask = mask;\n    this.prompt = prompt;\n    this.promptPlaceholder = promptPlaceholder;\n    this.rules = rules;\n    this.includeLiterals = includeLiterals;\n    this.tokenize();\n  }\n\n  validationValue(maskedValue = '') {\n    let value = maskedValue;\n    sequence(this.validationTokens).run(maskedValue).fold(unmasked => {\n      value = unmasked.join('');\n    });\n    return value;\n  }\n\n  rawValue(maskedValue = '') {\n    let value = maskedValue;\n\n    if (!this.rawTokens.length) {\n      return value;\n    }\n\n    sequence(this.rawTokens).run(maskedValue).fold(unmasked => {\n      value = unmasked.join('');\n    });\n    return value;\n  }\n  /**\n   * @hidden\n   */\n\n\n  maskRaw(rawValue = '') {\n    let value = rawValue;\n\n    if (!this.maskTokens.length) {\n      return value;\n    }\n\n    sequence(this.maskTokens).run(rawValue).fold(masked => {\n      value = masked.join('');\n    });\n    return value;\n  }\n\n  maskInput(input, control, splitPoint) {\n    if (input.length < control.length) {\n      return this.maskRemoved(input, control, splitPoint);\n    }\n\n    return this.maskInserted(input, control, splitPoint);\n  }\n\n  maskInRange(pasted, oldValue, start, end) {\n    let value = '';\n    let selection = end;\n    const beforeChange = oldValue.split('').slice(0, start);\n    const afterChange = oldValue.split('').slice(end);\n    sequence(this.maskTokens.slice(start, end)).run(pasted).fold(masked => {\n      value = beforeChange.concat(masked).concat(afterChange).join('');\n    });\n    return {\n      selection,\n      value\n    };\n  }\n\n  maskRemoved(input, control, splitPoint) {\n    let value = '';\n    let selection = splitPoint;\n    const unchanged = input.split('').slice(splitPoint);\n    const changed = input.split('').slice(0, splitPoint).join('');\n    const take = this.maskTokens.length - (input.length - splitPoint);\n    sequence(this.maskTokens.slice(0, take)).run(changed, control).fold(masked => {\n      selection = this.adjustPosition(masked, selection);\n      value = masked.concat(unchanged).join('');\n    });\n    return {\n      selection,\n      value\n    };\n  }\n\n  adjustPosition(input, selection) {\n    const caretChar = input[selection];\n    const isLiteral = this.maskTokens[selection].isLiteral(caretChar);\n\n    if (!isLiteral && caretChar !== this.prompt) {\n      return selection + 1;\n    }\n\n    return selection;\n  }\n\n  maskInserted(input, control, splitPoint) {\n    let value = '';\n    let selection = splitPoint;\n    const changed = input.slice(0, splitPoint);\n    sequence(this.unmaskTokens).run(changed, control).chain(unmasked => {\n      selection = unmasked.join('').length;\n      const unchanged = control.slice(selection);\n      return sequence(this.maskTokens).run(unmasked.join('') + unchanged, control);\n    }).fold(masked => {\n      value = masked.join('');\n    });\n    return {\n      selection,\n      value\n    };\n  }\n\n  get maskTokenCreator() {\n    const {\n      prompt,\n      promptPlaceholder\n    } = this;\n    return {\n      literal: rule => literal(rule),\n      mask: rule => mask({\n        prompt,\n        promptPlaceholder\n      })(rule)\n    };\n  }\n\n  get unmaskTokenCreator() {\n    return {\n      literal: rule => unliteral(rule),\n      mask: rule => unmask(this.prompt)(rule)\n    };\n  }\n\n  get rawTokenCreator() {\n    const {\n      prompt,\n      promptPlaceholder,\n      includeLiterals\n    } = this;\n    return {\n      literal: _ => rawLiteral(includeLiterals),\n      mask: _ => rawMask({\n        prompt,\n        promptPlaceholder\n      })\n    };\n  }\n\n  get validationTokenCreator() {\n    const {\n      prompt\n    } = this;\n    return {\n      literal: _ => rawLiteral(false),\n      mask: _ => rawMask({\n        prompt,\n        promptPlaceholder: ''\n      })\n    };\n  }\n\n  tokenize() {\n    greedy(token(this.rules, this.maskTokenCreator)).run(this.mask).fold((tokens, _) => {\n      this.maskTokens = tokens;\n    });\n    greedy(token(this.rules, this.unmaskTokenCreator)).run(this.mask).fold((tokens, _) => {\n      this.unmaskTokens = tokens;\n    });\n    greedy(token(this.rules, this.rawTokenCreator)).run(this.mask).fold((tokens, _) => {\n      this.rawTokens = tokens;\n    });\n    greedy(token(this.rules, this.validationTokenCreator)).run(this.mask).fold((tokens, _) => {\n      this.validationTokens = tokens;\n    });\n  }\n\n}\n\nMaskingService.ɵfac = function MaskingService_Factory(t) {\n  return new (t || MaskingService)();\n};\n\nMaskingService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MaskingService,\n  factory: MaskingService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MaskingService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nconst resolvedPromise = Promise.resolve(null);\nconst FOCUSED$2 = 'k-focus';\nconst DEFAULT_SIZE$6 = 'medium';\nconst DEFAULT_ROUNDED$5 = 'medium';\nconst DEFAULT_FILL_MODE$4 = 'solid';\n/**\n * Represents the [Kendo UI MaskedTextBox component for Angular]({% slug overview_maskedtextbox %}).\n *\n * @example\n * ```ts-no-run\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *      <kendo-maskedtextbox\n *          [mask]=\"mask\"\n *          [value]=\"value\">\n *      </kendo-maskedtextbox>\n *     `\n * })\n *\n * class AppComponent {\n *  public value: string = \"9580128055807792\";\n *  public mask: string = \"0000-0000-0000-0000\";\n * }\n * ```\n */\n\nclass MaskedTextBoxComponent {\n  constructor(service, renderer, hostElement, ngZone, injector, changeDetector, rtl) {\n    this.service = service;\n    this.renderer = renderer;\n    this.hostElement = hostElement;\n    this.ngZone = ngZone;\n    this.injector = injector;\n    this.changeDetector = changeDetector;\n    /**\n     * @hidden\n     */\n\n    this.focusableId = `k-${guid()}`;\n    /**\n     * Determines whether the MaskedTextBox is disabled ([see example]({% slug disabled_maskedtextbox %})).\n     */\n\n    this.disabled = false;\n    /**\n     * Determines whether the MaskedTextBox is in its read-only state ([see example]({% slug readonly_maskedtextbox %})).\n     */\n\n    this.readonly = false;\n    /**\n     * Represents a prompt character for the masked value.\n     * @default `_`\n     */\n\n    this.prompt = '_';\n    /**\n     * Indicates a character which represents an empty position in the raw value.\n     * @default ' '\n     */\n\n    this.promptPlaceholder = ' ';\n    /**\n     * Indicates whether to include literals in the raw value  ([see example]({% slug value_maskedtextbox %})).\n     * @default false\n     */\n\n    this.includeLiterals = false;\n    /**\n     * Specifies if the mask should be shown on focus for empty value.\n     */\n\n    this.maskOnFocus = false;\n    /**\n     * Determines whether the built-in mask validator is enforced when a form is validated\n     * ([see example]({% slug validation_maskedtextbox %})).\n     * @default true\n     */\n\n    this.maskValidation = true;\n    /**\n     * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n\n    this.tabindex = 0;\n    /**\n     * Fires each time the user focuses the `input` element.\n     *\n     * > To wire the event programmatically, use the `onFocus` property.\n     *\n     * @example\n     * ```ts-no-run\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-maskedtextbox (focus)=\"handleFocus()\"></kendo-maskedtextbox>\n     * `\n     * })\n     * class AppComponent {\n     *   public handleFocus(): void {\n     *      console.log(\"Component is focused\");\n     *   }\n     * }\n     * ```\n     */\n\n    this.onFocus = new EventEmitter();\n    /**\n     * Fires each time the `input` element gets blurred.\n     *\n     * > To wire the event programmatically, use the `onBlur` property.\n     *\n     * @example\n     * ```ts-no-run\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-maskedtextbox (blur)=\"handleBlur()\"></kendo-maskedtextbox>\n     * `\n     * })\n     * class AppComponent {\n     *   public handleBlur(): void {\n     *      console.log(\"Component is blurred\");\n     *   }\n     * }\n     * ```\n     */\n\n    this.onBlur = new EventEmitter();\n    /**\n     * Fires each time the value changes.\n     */\n\n    this.valueChange = new EventEmitter();\n    this.hostClasses = true;\n    this.focusClick = false;\n    this.defaultRules = {\n      \"#\": /[\\d\\s\\+\\-]/,\n      \"&\": /[\\S]/,\n      \"0\": /[\\d]/,\n      \"9\": /[\\d\\s]/,\n      \"?\": /[a-zA-Z\\s]/,\n      \"A\": /[a-zA-Z0-9]/,\n      \"C\": /./,\n      \"L\": /[a-zA-Z]/,\n      \"a\": /[a-zA-Z0-9\\s]/\n    };\n    this.isPasted = false;\n    this.selection = [0, 0];\n    this._size = 'medium';\n    this._rounded = 'medium';\n    this._fillMode = 'solid';\n    /**\n     * @hidden\n     */\n\n    this.handleFocus = () => {\n      this.focused = true;\n\n      if (this.maskOnFocus && this.emptyMask) {\n        this.updateInput(this.service.maskRaw(this.value));\n        this.ngZone.runOutsideAngular(() => {\n          setTimeout(() => {\n            this.setSelection(0, 0);\n          }, 0);\n        });\n      }\n\n      if (hasObservers(this.onFocus)) {\n        this.ngZone.run(() => {\n          this.onFocus.emit();\n        });\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    this.handleClick = () => {\n      if (this.focused && !this.focusClick) {\n        this.focusClick = true;\n        const {\n          selectionStart,\n          selectionEnd\n        } = this.input.nativeElement;\n\n        if (selectionStart === selectionEnd) {\n          this.setFocusSelection();\n        }\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    this.handleBlur = () => {\n      this.changeDetector.markForCheck();\n      this.focused = false;\n      this.focusClick = false;\n\n      if (this.maskOnFocus && this.emptyMask) {\n        this.updateInput(this.maskedValue);\n      }\n\n      if (hasObservers(this.onBlur) || requiresZoneOnBlur(this.control)) {\n        this.ngZone.run(() => {\n          this.onTouched();\n          this.onBlur.emit();\n        });\n      }\n    };\n\n    this.onChange = _ => {};\n\n    this.onTouched = () => {};\n\n    validatePackage(packageMetadata);\n    this.direction = rtl ? 'rtl' : 'ltr';\n    this.updateService();\n  }\n  /**\n   * The size property specifies the padding of the MaskedTextBox internal input element\n   * ([see example]({% slug appearance_maskedtextbox %}#toc-size)).\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `none`\n   */\n\n\n  set size(size) {\n    const newSize = size ? size : DEFAULT_SIZE$6;\n    this.handleClasses(newSize, 'size');\n    this._size = newSize;\n  }\n\n  get size() {\n    return this._size;\n  }\n  /**\n   * The rounded property specifies the border radius of the MaskedTextBox\n   * ([see example]({% slug appearance_maskedtextbox %}#toc-rounded)).\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `none`\n   */\n\n\n  set rounded(rounded) {\n    const newRounded = rounded ? rounded : DEFAULT_ROUNDED$5;\n    this.handleClasses(newRounded, 'rounded');\n    this._rounded = newRounded;\n  }\n\n  get rounded() {\n    return this._rounded;\n  }\n  /**\n   * The fillMode property specifies the background and border styles of the MaskedTexBox\n   * ([see example]({% slug appearance_maskedtextbox %}#toc-fillMode)).\n   * The possible values are:\n   * * `flat`\n   * * `solid` (default)\n   * * `outline`\n   * * `none`\n   */\n\n\n  set fillMode(fillMode) {\n    const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$4;\n    this.handleClasses(newFillMode, 'fillMode');\n    this._fillMode = newFillMode;\n  }\n\n  get fillMode() {\n    return this._fillMode;\n  }\n  /**\n   * Exposes the RegExp-based mask validation array ([see example]({% slug masks_maskedtextbox %})).\n   */\n\n\n  set rules(value) {\n    this._rules = Object.assign({}, this.defaultRules, value);\n  }\n\n  get rules() {\n    return this._rules || this.defaultRules;\n  }\n  /**\n   * @hidden\n   */\n\n\n  set tabIndex(tabIndex) {\n    this.tabindex = tabIndex;\n  }\n\n  get tabIndex() {\n    return this.tabindex;\n  }\n\n  get hostDisabledClass() {\n    return this.disabled;\n  }\n\n  ngOnInit() {\n    if (this.hostElement) {\n      this.renderer.removeAttribute(this.hostElement.nativeElement, \"tabindex\");\n    }\n\n    this.control = this.injector.get(NgControl, null);\n  }\n\n  ngAfterViewInit() {\n    const stylingInputs = ['size', 'rounded', 'fillMode'];\n    stylingInputs.forEach(input => {\n      this.handleClasses(this[input], input);\n    });\n  }\n  /**\n   * @hidden\n   * Used by the FloatingLabel to determine if the MaskedTextBox is empty.\n   */\n\n\n  isEmpty() {\n    if (this.input) {\n      return !Boolean(this.input.nativeElement.value);\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleDragDrop() {\n    return false;\n  }\n  /**\n   * Focuses the MaskedTextBox.\n   *\n   * @example\n   * ```ts-no-run\n   * _@Component({\n   * selector: 'my-app',\n   * template: `\n   *  <button (click)=\"maskedinput.focus()\">Focus the input</button>\n   *  <kendo-maskedtextbox #maskedinput></kendo-maskedtextbox>\n   * `\n   * })\n   * class AppComponent { }\n   * ```\n   */\n\n\n  focus() {\n    if (!this.input) {\n      return;\n    }\n\n    this.input.nativeElement.focus();\n    this.setFocusSelection();\n  }\n  /**\n   * Blurs the MaskedTextBox.\n   */\n\n\n  blur() {\n    if (!this.input) {\n      return;\n    }\n\n    this.input.nativeElement.blur();\n  }\n  /**\n   * @hidden\n   */\n\n\n  pasteHandler(e) {\n    const {\n      selectionStart,\n      selectionEnd\n    } = e.target;\n\n    if (selectionEnd === selectionStart) {\n      return;\n    }\n\n    this.isPasted = true;\n    this.selection = [selectionStart, selectionEnd];\n  }\n  /**\n   * @hidden\n   */\n\n\n  inputHandler(e) {\n    const value = e.target.value;\n    const [start, end] = this.selection;\n\n    if (!this.mask) {\n      this.updateValueWithEvents(value);\n      this.isPasted = false;\n      return;\n    }\n\n    let result;\n\n    if (this.isPasted) {\n      this.isPasted = false;\n      const rightPart = this.maskedValue.length - end;\n      const to = value.length - rightPart;\n      result = this.service.maskInRange(value.slice(start, to), this.maskedValue, start, end);\n    } else {\n      result = this.service.maskInput(value, this.maskedValue || '', e.target.selectionStart);\n    }\n\n    this.updateInput(result.value, result.selection);\n    this.updateValueWithEvents(result.value);\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngOnChanges(changes) {\n    if (changes.value) {\n      this.value = this.normalizeValue();\n    }\n\n    if (!this.mask) {\n      this.updateInput(this.value);\n      return;\n    }\n\n    const next = this.extractChanges(changes);\n    this.updateService(next);\n    const maskedValue = this.service.maskRaw(this.value);\n    this.updateInput(maskedValue, null, true);\n\n    if (changes.includeLiterals || isChanged('promptPlaceholder', changes)) {\n      resolvedPromise.then(() => {\n        this.updateValueWithEvents(this.maskedValue);\n      });\n    }\n  }\n  /**\n   * @hidden\n   * Writes a new value to the element.\n   */\n\n\n  writeValue(value) {\n    this.value = this.normalizeValue(value);\n    this.updateInput(this.service.maskRaw(this.value));\n\n    if (this.includeLiterals) {\n      this.updateValue(this.maskedValue);\n    }\n  }\n  /**\n   * @hidden\n   * Sets the function that will be called when a `change` event is triggered.\n   */\n\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  /**\n   * @hidden\n   * Sets the function that will be called when a `touch` event is triggered.\n   */\n\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * @hidden\n   * Called when the status of the component changes to or from `disabled`.\n   * Depending on the value, it enables or disables the appropriate DOM element.\n   *\n   * @param isDisabled\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.changeDetector.markForCheck();\n    this.disabled = isDisabled;\n  }\n  /**\n   * @hidden\n   */\n\n\n  validate(_) {\n    if (this.maskValidation === false || !this.mask) {\n      return null;\n    }\n\n    if (!this.service.validationValue(this.maskedValue)) {\n      return null;\n    }\n\n    if (this.maskedValue.indexOf(this.prompt) !== -1) {\n      return {\n        patternError: {\n          mask: this.mask,\n          maskedValue: this.maskedValue,\n          value: this.value\n        }\n      };\n    }\n\n    return null;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get isControlInvalid() {\n    return this.control && this.control.touched && !this.control.valid;\n  }\n  /**\n   * @hidden\n   */\n\n\n  updateValueWithEvents(maskedValue) {\n    this.updateValue(maskedValue);\n\n    if (hasObservers(this.valueChange)) {\n      this.valueChange.emit(this.value);\n    }\n  }\n\n  updateValue(value) {\n    if (this.mask && !this.service.validationValue(value) && !this.includeLiterals) {\n      this.value = '';\n    } else {\n      this.value = this.service.rawValue(value);\n    }\n\n    this.onChange(this.value);\n  }\n\n  updateInput(maskedValue = '', selection, isFromOnChanges) {\n    if (isFromOnChanges && maskedValue === this.maskedValue) {\n      return;\n    }\n\n    this.maskedValue = maskedValue;\n    const value = this.maskOnFocus && !this.focused && this.emptyMask ? '' : maskedValue;\n    this.renderer.setProperty(this.input.nativeElement, \"value\", value);\n\n    if (selection !== undefined) {\n      this.setSelection(selection, selection);\n    }\n  }\n\n  extractChanges(changes) {\n    return Object.keys(changes).filter(key => key !== 'rules').reduce((obj, key) => {\n      obj[key] = changes[key].currentValue;\n      return obj;\n    }, {});\n  }\n\n  updateService(extra) {\n    const config = Object.assign({\n      includeLiterals: this.includeLiterals,\n      mask: this.mask,\n      prompt: this.prompt,\n      promptPlaceholder: this.promptPlaceholder,\n      rules: this.rules\n    }, extra);\n    this.service.update(config);\n  }\n\n  setSelection(start = this.selection[0], end = this.selection[1]) {\n    if (this.focused) {\n      invokeElementMethod(this.input, 'setSelectionRange', start, end);\n    }\n  }\n\n  get emptyMask() {\n    return this.service.maskRaw() === this.maskedValue;\n  }\n\n  setFocusSelection() {\n    const selectionStart = this.input.nativeElement.selectionStart;\n    const index = this.maskedValue ? this.maskedValue.indexOf(this.prompt) : 0;\n\n    if (index >= 0 && index < selectionStart) {\n      this.selection = [index, index];\n      this.setSelection();\n    }\n  }\n\n  get focused() {\n    return this.isFocused;\n  }\n\n  set focused(value) {\n    if (this.isFocused !== value && this.hostElement) {\n      const element = this.hostElement.nativeElement;\n\n      if (value) {\n        this.renderer.addClass(element, FOCUSED$2);\n      } else {\n        this.renderer.removeClass(element, FOCUSED$2);\n      }\n\n      this.isFocused = value;\n    }\n  }\n\n  normalizeValue(value = this.value) {\n    const present = isPresent(value);\n\n    if (present && typeof value !== 'string') {\n      if (isDevMode()) {\n        throw new Error('The MaskedTextBox component supports only string values.');\n      }\n\n      return String(value);\n    }\n\n    return present ? value : '';\n  }\n\n  handleClasses(value, input) {\n    const elem = this.hostElement.nativeElement;\n    const classes = getStylingClasses('input', input, this[input], value);\n\n    if (classes.toRemove) {\n      this.renderer.removeClass(elem, classes.toRemove);\n    }\n\n    if (classes.toAdd) {\n      this.renderer.addClass(elem, classes.toAdd);\n    }\n  }\n\n}\n\nMaskedTextBoxComponent.ɵfac = function MaskedTextBoxComponent_Factory(t) {\n  return new (t || MaskedTextBoxComponent)(i0.ɵɵdirectiveInject(MaskingService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(RTL, 8));\n};\n\nMaskedTextBoxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MaskedTextBoxComponent,\n  selectors: [[\"kendo-maskedtextbox\"]],\n  viewQuery: function MaskedTextBoxComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c36, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n    }\n  },\n  hostVars: 7,\n  hostBindings: function MaskedTextBoxComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"paste\", function MaskedTextBoxComponent_paste_HostBindingHandler($event) {\n        return ctx.pasteHandler($event);\n      })(\"input\", function MaskedTextBoxComponent_input_HostBindingHandler($event) {\n        return ctx.inputHandler($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx.direction);\n      i0.ɵɵclassProp(\"k-input\", ctx.hostClasses)(\"k-maskedtextbox\", ctx.hostClasses)(\"k-disabled\", ctx.hostDisabledClass);\n    }\n  },\n  inputs: {\n    focusableId: \"focusableId\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    title: \"title\",\n    size: \"size\",\n    rounded: \"rounded\",\n    fillMode: \"fillMode\",\n    mask: \"mask\",\n    value: \"value\",\n    rules: \"rules\",\n    prompt: \"prompt\",\n    promptPlaceholder: \"promptPlaceholder\",\n    includeLiterals: \"includeLiterals\",\n    maskOnFocus: \"maskOnFocus\",\n    maskValidation: \"maskValidation\",\n    tabindex: \"tabindex\",\n    tabIndex: \"tabIndex\"\n  },\n  outputs: {\n    onFocus: \"focus\",\n    onBlur: \"blur\",\n    valueChange: \"valueChange\"\n  },\n  exportAs: [\"kendoMaskedTextBox\"],\n  features: [i0.ɵɵProvidersFeature([MaskingService, {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MaskedTextBoxComponent)\n    /* eslint-disable-line*/\n\n  }, {\n    multi: true,\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaskedTextBoxComponent)\n    /* eslint-disable-line*/\n\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(() => MaskedTextBoxComponent)\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 14,\n  consts: [[\"type\", \"text\", \"autocomplete\", \"off\", \"autocorrect\", \"off\", \"autocapitalize\", \"off\", \"spellcheck\", \"false\", 1, \"k-input-inner\", 3, \"id\", \"tabindex\", \"disabled\", \"readonly\", \"kendoEventsOutsideAngular\"], [\"input\", \"\"]],\n  template: function MaskedTextBoxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"input\", 0, 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx.focusableId)(\"tabindex\", ctx.tabIndex)(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction5(8, _c37, ctx.handleFocus, ctx.handleBlur, ctx.handleClick, ctx.handleDragDrop, ctx.handleDragDrop));\n      i0.ɵɵattribute(\"title\", ctx.title)(\"aria-placeholder\", ctx.mask)(\"aria-invalid\", ctx.isControlInvalid);\n    }\n  },\n  directives: [i3.EventsOutsideAngularDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MaskedTextBoxComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoMaskedTextBox',\n      providers: [MaskingService, {\n        multi: true,\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => MaskedTextBoxComponent)\n        /* eslint-disable-line*/\n\n      }, {\n        multi: true,\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => MaskedTextBoxComponent)\n        /* eslint-disable-line*/\n\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(() => MaskedTextBoxComponent)\n      }],\n      selector: 'kendo-maskedtextbox',\n      template: `\n        <input type=\"text\"\n            #input\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            spellcheck=\"false\"\n            class=\"k-input-inner\"\n            [id]=\"focusableId\"\n            [tabindex]=\"tabIndex\"\n            [attr.title]=\"title\"\n            [attr.aria-placeholder]=\"mask\"\n            [attr.aria-invalid]=\"isControlInvalid\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [kendoEventsOutsideAngular]=\"{\n                focus: handleFocus,\n                blur: handleBlur,\n                click: handleClick,\n                dragstart: handleDragDrop,\n                drop: handleDragDrop\n            }\"\n        />\n    `\n    }]\n  }], function () {\n    return [{\n      type: MaskingService\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [RTL]\n      }]\n    }];\n  }, {\n    focusableId: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    fillMode: [{\n      type: Input\n    }],\n    mask: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    rules: [{\n      type: Input\n    }],\n    prompt: [{\n      type: Input\n    }],\n    promptPlaceholder: [{\n      type: Input\n    }],\n    includeLiterals: [{\n      type: Input\n    }],\n    maskOnFocus: [{\n      type: Input\n    }],\n    maskValidation: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    direction: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-input']\n    }, {\n      type: HostBinding,\n      args: ['class.k-maskedtextbox']\n    }],\n    hostDisabledClass: [{\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }],\n    input: [{\n      type: ViewChild,\n      args: ['input', {\n        static: true\n      }]\n    }],\n    pasteHandler: [{\n      type: HostListener,\n      args: ['paste', ['$event']]\n    }],\n    inputHandler: [{\n      type: HostListener,\n      args: ['input', ['$event']]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass SlidersCommonModule {}\n\nSlidersCommonModule.ɵfac = function SlidersCommonModule_Factory(t) {\n  return new (t || SlidersCommonModule)();\n};\n\nSlidersCommonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SlidersCommonModule\n});\nSlidersCommonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, DraggableModule, EventsModule, ResizeSensorModule], DraggableModule, EventsModule, ResizeSensorModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SlidersCommonModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [SliderTicksComponent, LabelTemplateDirective],\n      exports: [LabelTemplateDirective, SliderTicksComponent, DraggableModule, EventsModule, ResizeSensorModule],\n      imports: [CommonModule, DraggableModule, EventsModule, ResizeSensorModule]\n    }]\n  }], null, null);\n})();\n/**\n * Custom component messages override default component messages.\n */\n\n\nclass SliderCustomMessagesComponent extends SliderMessages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n  get override() {\n    return true;\n  }\n\n}\n\nSliderCustomMessagesComponent.ɵfac = function SliderCustomMessagesComponent_Factory(t) {\n  return new (t || SliderCustomMessagesComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nSliderCustomMessagesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SliderCustomMessagesComponent,\n  selectors: [[\"kendo-slider-messages\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: SliderMessages,\n    useExisting: forwardRef(() => SliderCustomMessagesComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function SliderCustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SliderCustomMessagesComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: SliderMessages,\n        useExisting: forwardRef(() => SliderCustomMessagesComponent)\n      }],\n      selector: 'kendo-slider-messages',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Slider component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Inputs module\n * import { SliderModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, BrowserAnimationsModule, SliderModule], // import Slider module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\n\nclass SliderModule {}\n\nSliderModule.ɵfac = function SliderModule_Factory(t) {\n  return new (t || SliderModule)();\n};\n\nSliderModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SliderModule\n});\nSliderModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, SlidersCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SliderModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [SliderComponent, SliderCustomMessagesComponent, LocalizedSliderMessagesDirective],\n      exports: [SliderComponent, SliderCustomMessagesComponent, LabelTemplateDirective, LocalizedSliderMessagesDirective],\n      imports: [CommonModule, SlidersCommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * Custom component messages override default component messages.\n */\n\n\nclass RangeSliderCustomMessagesComponent extends RangeSliderMessages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n  get override() {\n    return true;\n  }\n\n}\n\nRangeSliderCustomMessagesComponent.ɵfac = function RangeSliderCustomMessagesComponent_Factory(t) {\n  return new (t || RangeSliderCustomMessagesComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nRangeSliderCustomMessagesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RangeSliderCustomMessagesComponent,\n  selectors: [[\"kendo-rangeslider-messages\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: RangeSliderMessages,\n    useExisting: forwardRef(() => RangeSliderCustomMessagesComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function RangeSliderCustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RangeSliderCustomMessagesComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: RangeSliderMessages,\n        useExisting: forwardRef(() => RangeSliderCustomMessagesComponent)\n      }],\n      selector: 'kendo-rangeslider-messages',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the RangeSlider component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Inputs module\n * import { RangeSliderModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, BrowserAnimationsModule, RangeSliderModule], // import RangeSlider module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\n\nclass RangeSliderModule {}\n\nRangeSliderModule.ɵfac = function RangeSliderModule_Factory(t) {\n  return new (t || RangeSliderModule)();\n};\n\nRangeSliderModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: RangeSliderModule\n});\nRangeSliderModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, SlidersCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RangeSliderModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [RangeSliderComponent, RangeSliderCustomMessagesComponent, LocalizedRangeSliderMessagesDirective],\n      exports: [RangeSliderComponent, RangeSliderCustomMessagesComponent, LocalizedRangeSliderMessagesDirective, LabelTemplateDirective],\n      imports: [CommonModule, SlidersCommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * Custom component messages override default component messages.\n */\n\n\nclass SwitchCustomMessagesComponent extends Messages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n  get override() {\n    return true;\n  }\n\n}\n\nSwitchCustomMessagesComponent.ɵfac = function SwitchCustomMessagesComponent_Factory(t) {\n  return new (t || SwitchCustomMessagesComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nSwitchCustomMessagesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SwitchCustomMessagesComponent,\n  selectors: [[\"kendo-switch-messages\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: Messages,\n    useExisting: forwardRef(() => SwitchCustomMessagesComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function SwitchCustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SwitchCustomMessagesComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: Messages,\n        useExisting: forwardRef(() => SwitchCustomMessagesComponent)\n      }],\n      selector: 'kendo-switch-messages',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Switch component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Switch module\n * import { SwitchModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, SwitchModule], // import Switch module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\n\nclass SwitchModule {}\n\nSwitchModule.ɵfac = function SwitchModule_Factory(t) {\n  return new (t || SwitchModule)();\n};\n\nSwitchModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SwitchModule\n});\nSwitchModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, EventsModule, ResizeSensorModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SwitchModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [SwitchComponent, SwitchCustomMessagesComponent, LocalizedSwitchMessagesDirective],\n      exports: [SwitchComponent, SwitchCustomMessagesComponent, LocalizedSwitchMessagesDirective],\n      imports: [CommonModule, EventsModule, ResizeSensorModule]\n    }]\n  }], null, null);\n})();\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the NumericTextBox component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the NumericTextBox module\n * import { NumericTextBoxModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, NumericTextBoxModule], // import NumericTextBox module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\n\nclass NumericTextBoxModule {}\n\nNumericTextBoxModule.ɵfac = function NumericTextBoxModule_Factory(t) {\n  return new (t || NumericTextBoxModule)();\n};\n\nNumericTextBoxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NumericTextBoxModule\n});\nNumericTextBoxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, EventsModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumericTextBoxModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [LocalizedNumericTextBoxMessagesDirective, NumericTextBoxComponent, NumericTextBoxCustomMessagesComponent],\n      exports: [NumericTextBoxComponent, NumericTextBoxCustomMessagesComponent],\n      imports: [CommonModule, EventsModule]\n    }]\n  }], null, null);\n})();\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the MaskedTextBox component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the MaskedTextBox module\n * import { MaskedTextBoxModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, MaskedTextBoxModule], // import MaskedTextBox module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\n\nclass MaskedTextBoxModule {}\n\nMaskedTextBoxModule.ɵfac = function MaskedTextBoxModule_Factory(t) {\n  return new (t || MaskedTextBoxModule)();\n};\n\nMaskedTextBoxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MaskedTextBoxModule\n});\nMaskedTextBoxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, EventsModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MaskedTextBoxModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [MaskedTextBoxComponent],\n      exports: [MaskedTextBoxComponent],\n      imports: [CommonModule, EventsModule]\n    }]\n  }], null, null);\n})();\n/**\n * @hidden\n *\n * Returns true if the used browser is Safari.\n */\n\n\nconst isSafari = userAgent => {\n  const desktopBrowser = detectDesktopBrowser(userAgent);\n  const mobileOS = detectMobileOS(userAgent);\n  return desktopBrowser && desktopBrowser.safari || mobileOS && mobileOS.browser === 'mobilesafari';\n};\n/**\n * @hidden\n *\n * Checks if input is Japanese IME\n */\n\n\nconst isJapanese = input => {\n  const japaneseRegex = /[\\u3000-\\u303F]|[\\u3040-\\u309F]|[\\u30A0-\\u30FF]|[\\uFF00-\\uFFEF]|[\\u4E00-\\u9FAF]|[\\u2605-\\u2606]|[\\u2190-\\u2195]|\\u203B/g;\n  return japaneseRegex.test(input);\n};\n/**\n * Specifies the adornments in the suffix container ([see examples]({% slug adornments_textbox %}#toc-suffixadornments)).\n * ```ts-no-run\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-textbox>\n *    <ng-template kendoTextBoxSuffixTemplate>\n *        <button kendoButton look=\"clear\" icon=\"image\"></button>\n *    </ng-template>\n *  </kendo-textbox>\n * `\n * })\n * class AppComponent {}\n * ```\n */\n\n\nclass TextBoxSuffixTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nTextBoxSuffixTemplateDirective.ɵfac = function TextBoxSuffixTemplateDirective_Factory(t) {\n  return new (t || TextBoxSuffixTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nTextBoxSuffixTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TextBoxSuffixTemplateDirective,\n  selectors: [[\"\", \"kendoTextBoxSuffixTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextBoxSuffixTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoTextBoxSuffixTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Specifies the adornments in the prefix container ([see examples]({% slug adornments_textbox %}#toc-prefixadornments)).\n * @example\n * ```ts-no-run\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-textbox>\n *    <ng-template kendoTextBoxPrefixTemplate>\n *        <button kendoButton look=\"clear\" icon=\"image\"></button>\n *    </ng-template>\n *  </kendo-textbox>\n * `\n * })\n * class AppComponent {}\n * ```\n */\n\n\nclass TextBoxPrefixTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nTextBoxPrefixTemplateDirective.ɵfac = function TextBoxPrefixTemplateDirective_Factory(t) {\n  return new (t || TextBoxPrefixTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nTextBoxPrefixTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TextBoxPrefixTemplateDirective,\n  selectors: [[\"\", \"kendoTextBoxPrefixTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextBoxPrefixTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoTextBoxPrefixTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass TextBoxMessages extends ComponentMessages {}\n\nTextBoxMessages.ɵfac = /* @__PURE__ */function () {\n  let ɵTextBoxMessages_BaseFactory;\n  return function TextBoxMessages_Factory(t) {\n    return (ɵTextBoxMessages_BaseFactory || (ɵTextBoxMessages_BaseFactory = i0.ɵɵgetInheritedFactory(TextBoxMessages)))(t || TextBoxMessages);\n  };\n}();\n\nTextBoxMessages.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TextBoxMessages,\n  selectors: [[\"kendo-textbox-messages-base\"]],\n  inputs: {\n    clear: \"clear\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextBoxMessages, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: 'kendo-textbox-messages-base'\n    }]\n  }], null, {\n    clear: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass LocalizedTextBoxMessagesDirective extends TextBoxMessages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n}\n\nLocalizedTextBoxMessagesDirective.ɵfac = function LocalizedTextBoxMessagesDirective_Factory(t) {\n  return new (t || LocalizedTextBoxMessagesDirective)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nLocalizedTextBoxMessagesDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LocalizedTextBoxMessagesDirective,\n  selectors: [[\"\", \"kendoTextBoxLocalizedMessages\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: TextBoxMessages,\n    useExisting: forwardRef(() => LocalizedTextBoxMessagesDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LocalizedTextBoxMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: TextBoxMessages,\n        useExisting: forwardRef(() => LocalizedTextBoxMessagesDirective)\n      }],\n      selector: '[kendoTextBoxLocalizedMessages]'\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n\nconst FOCUSED$1 = 'k-focus';\nconst DEFAULT_SIZE$5 = 'medium';\nconst DEFAULT_ROUNDED$4 = 'medium';\nconst DEFAULT_FILL_MODE$3 = 'solid';\n\nclass TextBoxComponent {\n  constructor(localizationService, ngZone, changeDetector, renderer, injector, hostElement) {\n    this.localizationService = localizationService;\n    this.ngZone = ngZone;\n    this.changeDetector = changeDetector;\n    this.renderer = renderer;\n    this.injector = injector;\n    this.hostElement = hostElement;\n    /**\n     * @hidden\n     */\n\n    this.focusableId = `k-${guid()}`;\n    /**\n     * Sets the `title` attribute of the `input` element of the TextBox.\n     */\n\n    this.title = '';\n    /**\n     * Sets the disabled state of the component.\n     *\n     * @default false\n     */\n\n    this.disabled = false;\n    /**\n     * Sets the read-only state of the component.\n     *\n     * @default false\n     */\n\n    this.readonly = false;\n    /**\n     * Specifies the `tabindex` of the TextBox.\n     *\n     * @default 0\n     */\n\n    this.tabindex = 0;\n    /**\n     * Provides a value for the TextBox.\n     */\n\n    this.value = null;\n    /**\n     * Determines whether the whole value will be selected when the TextBox is clicked. Defaults to `false`.\n     *\n     * @default false\n     */\n\n    this.selectOnFocus = false;\n    /**\n     * Specifies when the Success icon will be shown ([see example]({% slug validation_textbox %})).\n     *\n     * The possible values are:\n     *\n     * `boolean`&mdash;The Success icon is displayed, if the condition given by the developer is met.\n     *\n     * `initial`&mdash;The Success icon will be displayed when the component state is neither `invalid` nor `touched` or `dirty`.\n     *\n     * @default false\n     */\n\n    this.showSuccessIcon = false;\n    /**\n     * Specifies when the Error icon will be shown ([see example]({% slug validation_textbox %})).\n     *\n     * The possible values are:\n     *\n     * * `initial`&mdash;The Error icon will be displayed when the component state is\n     * `invalid` and `touched` or `dirty`.\n     * * `boolean`&mdash;The Error icon is displayed, if the condition given by the developer is met.\n     *\n     * @default false\n     */\n\n    this.showErrorIcon = false;\n    /**\n     * Specifies whether a Clear button will be rendered.\n     *\n     * @default false\n     */\n\n    this.clearButton = false;\n    /**\n     * Fires each time the value is changed&mdash;\n     * when the component is blurred or the value is cleared through the **Clear** button\n     * ([see example]({% slug overview_textbox %}#toc-events)).\n     * When the value of the component is programmatically changed to `ngModel` or `formControl`\n     * through its API or form binding, the `valueChange` event is not triggered because it\n     * might cause a mix-up with the built-in `valueChange` mechanisms of the `ngModel` or `formControl` bindings.\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires each time the user focuses the `input` element.\n     */\n\n    this.inputFocus = new EventEmitter();\n    /**\n     * Fires each time the `input` element gets blurred.\n     */\n\n    this.inputBlur = new EventEmitter();\n    /**\n     * Fires each time the user focuses the TextBox component.\n     *\n     * > To wire the event programmatically, use the `onFocus` property.\n     *\n     * @example\n     * ```ts-no-run\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-textbox (focus)=\"handleFocus()\"></kendo-textbox>\n     * `\n     * })\n     * class AppComponent {\n     *   public handleFocus(): void {\n     *      console.log('Component is isFocused');\n     *   }\n     * }\n     * ```\n     */\n\n    this.onFocus = new EventEmitter();\n    /**\n     * Fires each time the TextBox component gets blurred.\n     *\n     * > To wire the event programmatically, use the `onBlur` property.\n     *\n     * @example\n     * ```ts-no-run\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-textbox (blur)=\"handleBlur()\"></kendo-textbox>\n     * `\n     * })\n     * class AppComponent {\n     *   public handleBlur(): void {\n     *      console.log('Component is blurred');\n     *   }\n     * }\n     * ```\n     */\n\n    this.onBlur = new EventEmitter();\n    this.hostClasses = true;\n    this._isFocused = false;\n    this.focusChangedProgrammatically = false;\n    this._size = 'medium';\n    this._rounded = 'medium';\n    this._fillMode = 'solid';\n    /**\n     * @hidden\n     */\n\n    this.handleInputFocus = () => {\n      if (!this.disabled) {\n        if (this.selectOnFocus && this.value) {\n          this.ngZone.run(() => {\n            setTimeout(() => {\n              this.selectAll();\n            });\n          });\n        }\n\n        if (hasObservers(this.onFocus)) {\n          if (!this.isFocused) {\n            this.ngZone.run(() => {\n              this.onFocus.emit();\n            });\n          }\n        }\n\n        if (hasObservers(this.inputFocus)) {\n          if (!this.focusChangedProgrammatically || this.focusChangedProgrammatically && this.clearButtonClicked) {\n            this.ngZone.run(() => {\n              this.inputFocus.emit();\n            });\n          }\n        }\n\n        this.ngZone.run(() => {\n          this.isFocused = true;\n        });\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    this.handleInputBlur = () => {\n      this.changeDetector.markForCheck();\n\n      if (hasObservers(this.inputBlur) || requiresZoneOnBlur(this.control)) {\n        this.ngZone.run(() => {\n          this.ngTouched();\n          this.inputBlur.emit();\n        });\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    this.handleInput = ev => {\n      const target = ev.target;\n      const isBrowserSafari = isSafari(navigator.userAgent);\n      const incomingValue = isBrowserSafari && isJapanese(target.value) ? ev.data : target.value;\n      const [caretStart, caretEnd] = [target.selectionStart, target.selectionEnd];\n      this.updateValue(incomingValue);\n\n      if (isBrowserSafari) {\n        target.setSelectionRange(caretStart, caretEnd);\n      }\n    };\n\n    this.ngChange = _ => {};\n\n    this.ngTouched = () => {};\n\n    validatePackage(packageMetadata);\n    this.direction = localizationService.rtl ? 'rtl' : 'ltr';\n  }\n  /**\n   * The size property specifies the padding of the TextBox internal input element\n   * ([see example]({% slug appearance_textbox %}#toc-size)).\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `none`\n   */\n\n\n  set size(size) {\n    const newSize = size ? size : DEFAULT_SIZE$5;\n    this.handleClasses(newSize, 'size');\n    this._size = newSize;\n  }\n\n  get size() {\n    return this._size;\n  }\n  /**\n   * The rounded property specifies the border radius of the TextBox\n   * ([see example]({% slug appearance_textbox %}#toc-rounded)).\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `full`\n   * * `none`\n   */\n\n\n  set rounded(rounded) {\n    const newRounded = rounded ? rounded : DEFAULT_ROUNDED$4;\n    this.handleClasses(newRounded, 'rounded');\n    this._rounded = newRounded;\n  }\n\n  get rounded() {\n    return this._rounded;\n  }\n  /**\n   * The fillMode property specifies the background and border styles of the TextBox\n   * ([see example]({% slug appearance_textbox %}#toc-fillMode)).\n   *\n   * The possible values are:\n   * * `flat`\n   * * `solid` (default)\n   * * `outline`\n   * * `none`\n   */\n\n\n  set fillMode(fillMode) {\n    const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$3;\n    this.handleClasses(newFillMode, 'fillMode');\n    this._fillMode = newFillMode;\n  }\n\n  get fillMode() {\n    return this._fillMode;\n  }\n  /**\n   * @hidden\n   */\n\n\n  set tabIndex(tabIndex) {\n    this.tabindex = tabIndex;\n  }\n\n  get tabIndex() {\n    return this.tabindex;\n  }\n\n  get disabledClass() {\n    return this.disabled;\n  }\n\n  ngOnInit() {\n    this.control = this.injector.get(NgControl, null);\n    this.checkClearButton();\n    this.subscriptions = this.localizationService.changes.subscribe(({\n      rtl\n    }) => {\n      this.direction = rtl ? 'rtl' : 'ltr';\n    });\n  }\n\n  ngAfterViewInit() {\n    const hostElement = this.hostElement.nativeElement;\n    let cursorInsideWrapper = false;\n    let tabbing = false;\n    this.ngZone.runOutsideAngular(() => {\n      // focusIn and focusOut are relative to the host element\n      this.subscriptions.add(this.renderer.listen(hostElement, 'focusin', () => {\n        if (!this.isFocused) {\n          this.ngZone.run(() => {\n            this.onFocus.emit();\n            this.isFocused = true;\n          });\n        }\n      }));\n      this.subscriptions.add(this.renderer.listen(hostElement, 'focusout', args => {\n        if (!this.isFocused) {\n          return;\n        }\n\n        if (tabbing) {\n          const closestTextbox = closest(args.relatedTarget, element => element === this.hostElement.nativeElement);\n\n          if (!closestTextbox) {\n            this.handleBlur();\n          }\n\n          tabbing = false;\n        } else {\n          if (!cursorInsideWrapper && !this.clearButtonClicked) {\n            this.handleBlur();\n          }\n        }\n      }));\n      this.subscriptions.add(this.renderer.listen(hostElement, 'mouseenter', () => {\n        cursorInsideWrapper = true;\n      }));\n      this.subscriptions.add(this.renderer.listen(hostElement, 'mouseleave', () => {\n        cursorInsideWrapper = false;\n      }));\n      this.subscriptions.add(this.renderer.listen(hostElement, 'keydown', args => {\n        if (args.keyCode === Keys.Tab) {\n          tabbing = true;\n        } else {\n          tabbing = false;\n        }\n      }));\n    });\n    const stylingInputs = ['size', 'rounded', 'fillMode'];\n    stylingInputs.forEach(input => {\n      this.handleClasses(this[input], input);\n    });\n  }\n\n  ngOnChanges(changes) {\n    if (changes.disabled || changes.readonly || changes.value) {\n      this.checkClearButton();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n  }\n  /**\n   * Focuses the TextBox.\n   *\n   * @example\n   * ```ts-no-run\n   * _@Component({\n   * selector: 'my-app',\n   * template: `\n   *  <button (click)=\"input.focus()\">Focus the input</button>\n   *  <kendo-textbox #input></kendo-textbox>\n   * `\n   * })\n   * class AppComponent { }\n   * ```\n   */\n\n\n  focus() {\n    if (!this.input) {\n      return;\n    }\n\n    this.focusChangedProgrammatically = true;\n    this.isFocused = true;\n    this.input.nativeElement.focus();\n    this.focusChangedProgrammatically = false;\n  }\n  /**\n   * Blurs the TextBox.\n   */\n\n\n  blur() {\n    this.focusChangedProgrammatically = true;\n    const isFocusedElement = this.hostElement.nativeElement.querySelector(':focus');\n\n    if (isFocusedElement) {\n      isFocusedElement.blur();\n    }\n\n    this.isFocused = false;\n    this.focusChangedProgrammatically = false;\n  }\n  /**\n   * @hidden\n   */\n\n\n  clearTitle() {\n    return this.localizationService.get('clear');\n  }\n  /**\n   * @hidden\n   */\n\n\n  checkClearButton() {\n    this.showClearButton = !this.disabled && !this.readonly && this.clearButton && !!this.value;\n  }\n  /**\n   * @hidden\n   */\n\n\n  clearValue(ev) {\n    if (ev) {\n      ev.preventDefault();\n    }\n\n    this.clearButtonClicked = true;\n    this.input.nativeElement.value = '';\n    this.input.nativeElement.focus();\n    this.updateValue('');\n    this.checkClearButton();\n    this.clearButtonClicked = false;\n  }\n  /**\n   * @hidden\n   */\n\n\n  writeValue(value) {\n    this.value = value;\n    this.checkClearButton();\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnChange(fn) {\n    this.ngChange = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnTouched(fn) {\n    this.ngTouched = fn;\n  }\n  /**\n   * @hidden\n   * Called when the status of the component changes to or from `disabled`.\n   * Depending on the value, it enables or disables the appropriate DOM element.\n   *\n   * @param isDisabled\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.changeDetector.markForCheck();\n    this.disabled = isDisabled;\n  }\n  /**\n   * @hidden\n   */\n\n\n  showErrorsInitial() {\n    if (!this.control) {\n      return false;\n    }\n\n    const {\n      invalid,\n      dirty,\n      touched\n    } = this.control;\n    return invalid && (dirty || touched);\n  }\n  /**\n   * @hidden\n   */\n\n\n  showSuccessInitial() {\n    if (!this.control) {\n      return false;\n    }\n\n    const {\n      valid,\n      dirty,\n      touched\n    } = this.control;\n    return valid && (dirty || touched);\n  }\n  /**\n   * @hidden\n   */\n\n\n  get isControlInvalid() {\n    return this.control && this.control.touched && !this.control.valid;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get successIconClasses() {\n    return this.successIcon ? `${this.successIcon}` : `k-input-validation-icon k-icon k-i-check`;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get errorIconClasses() {\n    return this.errorIcon ? `${this.errorIcon}` : `k-input-validation-icon k-icon k-i-exclamation-circle`;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get clearButtonClasses() {\n    return this.clearButtonIcon ? this.clearButtonIcon : `k-icon k-i-x`;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hasErrors() {\n    return this.showErrorIcon === 'initial' ? this.showErrorsInitial() : this.showErrorIcon;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get isSuccessful() {\n    return this.showSuccessIcon === 'initial' ? this.showSuccessInitial() : this.showSuccessIcon;\n  }\n\n  setSelection(start, end) {\n    if (this.isFocused) {\n      invokeElementMethod(this.input, 'setSelectionRange', start, end);\n    }\n  }\n\n  selectAll() {\n    if (this.value) {\n      this.setSelection(0, this.value.length);\n    }\n  }\n\n  updateValue(value) {\n    if (!areSame(this.value, value)) {\n      this.ngZone.run(() => {\n        this.value = value;\n        this.ngChange(value);\n        this.valueChange.emit(value);\n        this.checkClearButton();\n        this.changeDetector.markForCheck();\n      });\n    }\n  }\n\n  get isFocused() {\n    return this._isFocused;\n  }\n\n  set isFocused(value) {\n    if (this._isFocused !== value && this.hostElement) {\n      const element = this.hostElement.nativeElement;\n\n      if (value && !this.disabled) {\n        this.renderer.addClass(element, FOCUSED$1);\n      } else {\n        this.renderer.removeClass(element, FOCUSED$1);\n      }\n\n      this._isFocused = value;\n    }\n  }\n\n  handleBlur() {\n    this.ngZone.run(() => {\n      if (!this.focusChangedProgrammatically) {\n        this.onBlur.emit();\n      }\n\n      this.isFocused = false;\n    });\n  }\n\n  handleClasses(value, input) {\n    const elem = this.hostElement.nativeElement;\n    const classes = getStylingClasses('input', input, this[input], value);\n\n    if (classes.toRemove) {\n      this.renderer.removeClass(elem, classes.toRemove);\n    }\n\n    if (classes.toAdd) {\n      this.renderer.addClass(elem, classes.toAdd);\n    }\n  }\n\n}\n\nTextBoxComponent.ɵfac = function TextBoxComponent_Factory(t) {\n  return new (t || TextBoxComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nTextBoxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TextBoxComponent,\n  selectors: [[\"kendo-textbox\"]],\n  contentQueries: function TextBoxComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, TextBoxSuffixTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, TextBoxPrefixTemplateDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.suffixTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.prefixTemplate = _t.first);\n    }\n  },\n  viewQuery: function TextBoxComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c36, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n    }\n  },\n  hostVars: 7,\n  hostBindings: function TextBoxComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx.direction);\n      i0.ɵɵclassProp(\"k-disabled\", ctx.disabledClass)(\"k-textbox\", ctx.hostClasses)(\"k-input\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    focusableId: \"focusableId\",\n    title: \"title\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    tabindex: \"tabindex\",\n    value: \"value\",\n    selectOnFocus: \"selectOnFocus\",\n    showSuccessIcon: \"showSuccessIcon\",\n    showErrorIcon: \"showErrorIcon\",\n    clearButton: \"clearButton\",\n    successIcon: \"successIcon\",\n    errorIcon: \"errorIcon\",\n    clearButtonIcon: \"clearButtonIcon\",\n    size: \"size\",\n    rounded: \"rounded\",\n    fillMode: \"fillMode\",\n    tabIndex: \"tabIndex\",\n    placeholder: \"placeholder\",\n    maxlength: \"maxlength\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    inputFocus: \"inputFocus\",\n    inputBlur: \"inputBlur\",\n    onFocus: \"focus\",\n    onBlur: \"blur\"\n  },\n  exportAs: [\"kendoTextBox\"],\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.textbox'\n  }, {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TextBoxComponent),\n    multi: true\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(() => TextBoxComponent)\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 10,\n  vars: 19,\n  consts: function () {\n    let i18n_38;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title for the **Clear** button in the TextBox.\n       * @meaning kendo.textbox.clear\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_39 = goog.getMsg(\"Clear\");\n      i18n_38 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_39;\n    } else {\n      i18n_38 = $localize`:kendo.textbox.clear|The title for the **Clear** button in the TextBox.:Clear`;\n    }\n\n    return [[\"kendoTextBoxLocalizedMessages\", \"\", \"clear\", i18n_38], [1, \"k-input-prefix\"], [4, \"ngIf\"], [1, \"k-input-inner\", 3, \"id\", \"disabled\", \"readonly\", \"value\", \"kendoEventsOutsideAngular\"], [\"input\", \"\"], [\"role\", \"button\", \"class\", \"k-clear-value\", 3, \"tabindex\", \"title\", \"click\", \"mousedown\", \"keydown.enter\", \"keydown.space\", 4, \"ngIf\"], [3, \"ngClass\", 4, \"ngIf\"], [1, \"k-input-suffix\"], [3, \"ngTemplateOutlet\"], [\"role\", \"button\", 1, \"k-clear-value\", 3, \"tabindex\", \"title\", \"click\", \"mousedown\", \"keydown.enter\", \"keydown.space\"], [3, \"ngClass\"]];\n  },\n  template: function TextBoxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵelementStart(1, \"span\", 1);\n      i0.ɵɵtemplate(2, TextBoxComponent_2_Template, 1, 1, undefined, 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 3, 4);\n      i0.ɵɵtemplate(5, TextBoxComponent_span_5_Template, 2, 4, \"span\", 5);\n      i0.ɵɵtemplate(6, TextBoxComponent_span_6_Template, 1, 1, \"span\", 6);\n      i0.ɵɵtemplate(7, TextBoxComponent_span_7_Template, 1, 1, \"span\", 6);\n      i0.ɵɵelementStart(8, \"span\", 7);\n      i0.ɵɵtemplate(9, TextBoxComponent_9_Template, 1, 1, undefined, 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.prefixTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"id\", ctx.focusableId)(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly)(\"value\", ctx.value)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction3(15, _c40, ctx.handleInputFocus, ctx.handleInputBlur, ctx.handleInput));\n      i0.ɵɵattribute(\"tabindex\", ctx.disabled ? undefined : ctx.tabindex)(\"placeholder\", ctx.placeholder)(\"title\", ctx.title)(\"maxlength\", ctx.maxlength)(\"aria-invalid\", ctx.isControlInvalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showClearButton);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSuccessful);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.suffixTemplate);\n    }\n  },\n  directives: [LocalizedTextBoxMessagesDirective, i1$1.NgIf, i3.EventsOutsideAngularDirective, i1$1.NgTemplateOutlet, i1$1.NgClass],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextBoxComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoTextBox',\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.textbox'\n      }, {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => TextBoxComponent),\n        multi: true\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(() => TextBoxComponent)\n      }],\n      selector: 'kendo-textbox',\n      template: `\n        <ng-container kendoTextBoxLocalizedMessages\n            i18n-clear=\"kendo.textbox.clear|The title for the **Clear** button in the TextBox.\"\n            clear=\"Clear\">\n        </ng-container>\n        <span class=\"k-input-prefix\">\n            <ng-template\n                *ngIf=\"prefixTemplate\"\n                [ngTemplateOutlet]=\"prefixTemplate?.templateRef\">\n            </ng-template>\n        </span>\n        <input #input\n            class=\"k-input-inner\"\n            [id]=\"focusableId\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [attr.tabindex]=\"disabled ? undefined : tabindex\"\n            [value]=\"value\"\n            [attr.placeholder]=\"placeholder\"\n            [attr.title]=\"title\"\n            [attr.maxlength]=\"maxlength\"\n            [attr.aria-invalid]=\"isControlInvalid\"\n            [kendoEventsOutsideAngular]=\"{\n                focus: handleInputFocus,\n                blur: handleInputBlur,\n                input: handleInput}\"\n        />\n        <span\n            role=\"button\"\n            class=\"k-clear-value\"\n            *ngIf=\"showClearButton\"\n            (click)=\"clearValue()\"\n            (mousedown)=\"$event.preventDefault()\"\n            [tabindex]=\"tabIndex\"\n            [attr.aria-label]=\"clearTitle()\"\n            [title]=\"clearTitle()\"\n            (keydown.enter)=\"clearValue($event)\"\n            (keydown.space)=\"clearValue($event)\">\n                <span [ngClass]=\"clearButtonClasses\"></span>\n        </span>\n        <span *ngIf=\"hasErrors\" [ngClass]=\"errorIconClasses\"></span>\n        <span *ngIf=\"isSuccessful\" [ngClass]=\"successIconClasses\"></span>\n        <span class=\"k-input-suffix\">\n            <ng-template\n                *ngIf=\"suffixTemplate\"\n                [ngTemplateOutlet]=\"suffixTemplate?.templateRef\">\n            </ng-template>\n        </span>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    focusableId: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    selectOnFocus: [{\n      type: Input\n    }],\n    showSuccessIcon: [{\n      type: Input\n    }],\n    showErrorIcon: [{\n      type: Input\n    }],\n    clearButton: [{\n      type: Input\n    }],\n    successIcon: [{\n      type: Input\n    }],\n    errorIcon: [{\n      type: Input\n    }],\n    clearButtonIcon: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    fillMode: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    maxlength: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    inputFocus: [{\n      type: Output\n    }],\n    inputBlur: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    input: [{\n      type: ViewChild,\n      args: ['input', {\n        static: true\n      }]\n    }],\n    suffixTemplate: [{\n      type: ContentChild,\n      args: [TextBoxSuffixTemplateDirective, {\n        static: false\n      }]\n    }],\n    prefixTemplate: [{\n      type: ContentChild,\n      args: [TextBoxPrefixTemplateDirective, {\n        static: false\n      }]\n    }],\n    disabledClass: [{\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }],\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-textbox']\n    }, {\n      type: HostBinding,\n      args: ['class.k-input']\n    }],\n    direction: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }]\n  });\n})();\n/**\n * Custom component messages override default component messages.\n */\n\n\nclass TextBoxCustomMessagesComponent extends TextBoxMessages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n  get override() {\n    return true;\n  }\n\n}\n\nTextBoxCustomMessagesComponent.ɵfac = function TextBoxCustomMessagesComponent_Factory(t) {\n  return new (t || TextBoxCustomMessagesComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nTextBoxCustomMessagesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TextBoxCustomMessagesComponent,\n  selectors: [[\"kendo-textbox-messages\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: TextBoxMessages,\n    useExisting: forwardRef(() => TextBoxCustomMessagesComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function TextBoxCustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextBoxCustomMessagesComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: TextBoxMessages,\n        useExisting: forwardRef(() => TextBoxCustomMessagesComponent)\n      }],\n      selector: 'kendo-textbox-messages',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Specifies a separator in the content of components like the TextArea and the TextBox. ([see examples]({% slug adornments_textbox %}#toc-separator)).\n * @example\n * ```ts-no-run\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-textbox>\n *    <ng-template kendoTextBoxSuffixTemplate>\n *        <kendo-input-separator></kendo-input-separator>\n *        <button kendoButton look=\"clear\" icon=\"image\"></button>\n *    </ng-template>\n *  </kendo-textbox>\n * `\n * })\n * class AppComponent {}\n * ```\n */\n\n\nclass InputSeparatorComponent {\n  constructor() {\n    this.hostClass = true;\n  }\n\n}\n\nInputSeparatorComponent.ɵfac = function InputSeparatorComponent_Factory(t) {\n  return new (t || InputSeparatorComponent)();\n};\n\nInputSeparatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: InputSeparatorComponent,\n  selectors: [[\"kendo-input-separator\"], [\"kendo-textbox-separator\"]],\n  hostVars: 2,\n  hostBindings: function InputSeparatorComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-input-separator\", ctx.hostClass);\n    }\n  },\n  decls: 0,\n  vars: 0,\n  template: function InputSeparatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputSeparatorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-input-separator, kendo-textbox-separator',\n      template: ``\n    }]\n  }], null, {\n    hostClass: [{\n      type: HostBinding,\n      args: ['class.k-input-separator']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nconst SHARED_DIRECTIVES = [InputSeparatorComponent, TextAreaDirective];\n/**\n * @hidden\n */\n\nclass SharedModule {}\n\nSharedModule.ɵfac = function SharedModule_Factory(t) {\n  return new (t || SharedModule)();\n};\n\nSharedModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SharedModule\n});\nSharedModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SharedModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [SHARED_DIRECTIVES],\n      exports: [SHARED_DIRECTIVES]\n    }]\n  }], null, null);\n})();\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the TextBox directive.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the TextBox module\n * import { TextBoxModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, TextBoxModule], // import TextBox module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\n\nclass TextBoxModule {}\n\nTextBoxModule.ɵfac = function TextBoxModule_Factory(t) {\n  return new (t || TextBoxModule)();\n};\n\nTextBoxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TextBoxModule\n});\nTextBoxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, EventsModule, SharedModule], EventsModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextBoxModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TextBoxDirective, TextBoxComponent, TextBoxSuffixTemplateDirective, TextBoxPrefixTemplateDirective, TextBoxCustomMessagesComponent, LocalizedTextBoxMessagesDirective],\n      exports: [TextBoxDirective, TextBoxComponent, TextBoxSuffixTemplateDirective, TextBoxPrefixTemplateDirective, EventsModule, TextBoxCustomMessagesComponent, LocalizedTextBoxMessagesDirective, SHARED_DIRECTIVES],\n      imports: [CommonModule, EventsModule, SharedModule]\n    }]\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nclass TextFieldsBase {\n  constructor(localizationService, ngZone, changeDetector, renderer, injector, hostElement) {\n    this.localizationService = localizationService;\n    this.ngZone = ngZone;\n    this.changeDetector = changeDetector;\n    this.renderer = renderer;\n    this.injector = injector;\n    this.hostElement = hostElement;\n    /**\n     * Sets the `title` attribute of the internal textarea input element of the component.\n     */\n\n    this.title = '';\n    /**\n     * Sets the disabled state of the TextArea component.\n     *\n     * @default false\n     */\n\n    this.disabled = false;\n    /**\n     * Sets the read-only state of the TextArea component.\n     *\n     * @default false\n     */\n\n    this.readonly = false;\n    /**\n     * Provides a value for the TextArea component.\n     */\n\n    this.value = null;\n    /**\n     * Determines whether the whole value will be selected when the TextArea is clicked. Defaults to `false`.\n     *\n     * @default false\n     */\n\n    this.selectOnFocus = false;\n    /**\n     * Fires each time the user focuses the internal textarea element of the component.\n     * This event is useful when you need to distinguish between focusing the textarea element and focusing one of its adornments.\n     */\n\n    this.inputFocus = new EventEmitter();\n    /**\n     * Fires each time the internal textarea element gets blurred.\n     * This event is useful when adornments are used, in order to distinguish between blurring the textarea element and blurring the whole TextArea component.\n     */\n\n    this.inputBlur = new EventEmitter();\n    this.subscriptions = new Subscription();\n    this._isFocused = false;\n    this.focusChangedProgrammatically = false;\n    /**\n     * @hidden\n     */\n\n    this.handleInputBlur = () => {\n      this.changeDetector.markForCheck();\n\n      if (hasObservers(this.inputBlur) || requiresZoneOnBlur(this.control)) {\n        this.ngZone.run(() => {\n          this.ngTouched();\n          this.inputBlur.emit();\n        });\n      }\n    };\n\n    this.ngChange = _ => {};\n\n    this.ngTouched = () => {};\n  }\n\n  get disabledClass() {\n    return this.disabled;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n  /**\n   * @hidden\n   * Called when the status of the component changes to or from `disabled`.\n   * Depending on the value, it enables or disables the appropriate DOM element.\n   *\n   * @param isDisabled\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.changeDetector.markForCheck();\n    this.disabled = isDisabled;\n  }\n\n}\n\nTextFieldsBase.ɵfac = function TextFieldsBase_Factory(t) {\n  return new (t || TextFieldsBase)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nTextFieldsBase.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TextFieldsBase,\n  selectors: [[\"kendo-textfield-base\"]],\n  viewQuery: function TextFieldsBase_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c36, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n    }\n  },\n  hostVars: 3,\n  hostBindings: function TextFieldsBase_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx.direction);\n      i0.ɵɵclassProp(\"k-disabled\", ctx.disabledClass);\n    }\n  },\n  inputs: {\n    title: \"title\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    value: \"value\",\n    selectOnFocus: \"selectOnFocus\",\n    placeholder: \"placeholder\"\n  },\n  outputs: {\n    inputFocus: \"inputFocus\",\n    inputBlur: \"inputBlur\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function TextFieldsBase_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextFieldsBase, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-textfield-base',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    title: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    selectOnFocus: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    inputFocus: [{\n      type: Output\n    }],\n    inputBlur: [{\n      type: Output\n    }],\n    input: [{\n      type: ViewChild,\n      args: ['input', {\n        static: true\n      }]\n    }],\n    disabledClass: [{\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }],\n    direction: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }]\n  });\n})();\n\nconst resizeClasses = {\n  'vertical': 'k-resize-vertical',\n  'horizontal': 'k-resize-horizontal',\n  'both': 'k-resize-both',\n  'none': 'k-resize-none',\n  'auto': 'k-resize-none'\n};\nconst FOCUSED = 'k-focus';\nconst DEFAULT_SIZE$4 = 'medium';\nconst DEFAULT_ROUNDED$3 = 'medium';\nconst DEFAULT_FILL_MODE$2 = 'solid';\n/**\n * Represents the [Kendo UI TextArea component for Angular]({% slug overview_textarea %}).\n */\n\nclass TextAreaComponent extends TextFieldsBase {\n  constructor(localizationService, ngZone, changeDetector, renderer, injector, hostElement) {\n    super(localizationService, ngZone, changeDetector, renderer, injector, hostElement);\n    this.localizationService = localizationService;\n    this.ngZone = ngZone;\n    this.changeDetector = changeDetector;\n    this.renderer = renderer;\n    this.injector = injector;\n    this.hostElement = hostElement;\n    /**\n     * @hidden\n     */\n\n    this.focusableId = `k-${guid()}`;\n    this.hostClasses = true;\n    /**\n     * Specifies the flow direction of the TextArea sections. This property is useful when adornments are used, in order to specify\n     * their position in relation to the textarea element.\n     *\n     * The possible values are:\n     * * `vertical`(Default) &mdash;TextArea sections are placed from top to bottom.\n     * * `horizontal`&mdash;TextArea sections are placed from left to right in `ltr`, and from right to left in `rtl` mode.\n     */\n\n    this.flow = 'vertical';\n    /**\n     * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n\n    this.tabindex = 0;\n    /**\n     * Configures the resize behavior of the TextArea.\n     *\n     * The possible values are:\n     * * `vertical`(Default)&mdash;The TextArea component can be resized only vertically.\n     * * `horizontal`&mdash;The TextArea component can be resized only horizontally.\n     * * `both`&mdash;The TextArea component can be resized in both (horizontal and vertical) directions.\n     * * `auto`&mdash;Specifies whether the TextArea component will adjust its height automatically, based on the content.\n     * * `none`&mdash;The TextArea cannot be resized.\n     *\n     */\n\n    this.resizable = 'vertical';\n    /**\n     * Fires each time the user focuses the TextArea component.\n     *\n     * > To wire the event programmatically, use the `onFocus` property.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-textarea (focus)=\"handleFocus()\"></kendo-textarea>\n     * `\n     * })\n     * class AppComponent {\n     *   public handleFocus(): void {\n     *      console.log('Component is focused');\n     *   }\n     * }\n     * ```\n     */\n\n    this.onFocus = new EventEmitter();\n    /**\n     * Fires each time the TextArea component gets blurred.\n     *\n     * > To wire the event programmatically, use the `onBlur` property.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-textarea (blur)=\"handleBlur()\"></kendo-textarea>\n     * `\n     * })\n     * class AppComponent {\n     *   public handleBlur(): void {\n     *      console.log('Component is blurred');\n     *   }\n     * }\n     * ```\n     */\n\n    this.onBlur = new EventEmitter();\n    /**\n     * Fires each time the value is changed or the component is blurred\n     * ([see example]({% slug overview_textarea %}#toc-events)).\n     * When the component value is changed programmatically or via its form control binding, the valueChange event is not emitted.\n     */\n\n    this.valueChange = new EventEmitter();\n    this._size = 'medium';\n    this._rounded = 'medium';\n    this._fillMode = 'solid';\n    /**\n     * @hidden\n     */\n\n    this.handleInput = ev => {\n      let incomingValue = ev.target.value;\n      this.updateValue(incomingValue);\n      this.resize();\n    };\n    /**\n     * @hidden\n     */\n\n\n    this.handleInputFocus = () => {\n      if (!this.disabled) {\n        if (this.selectOnFocus && this.value) {\n          this.ngZone.run(() => {\n            setTimeout(() => {\n              this.selectAll();\n            });\n          });\n        }\n\n        if (hasObservers(this.onFocus)) {\n          if (!this.isFocused) {\n            this.ngZone.run(() => {\n              this.onFocus.emit();\n            });\n          }\n        }\n\n        if (hasObservers(this.inputFocus)) {\n          if (!this.focusChangedProgrammatically) {\n            this.ngZone.run(() => {\n              this.inputFocus.emit();\n            });\n          }\n        }\n\n        this.ngZone.run(() => {\n          this.isFocused = true;\n        });\n      }\n    };\n\n    validatePackage(packageMetadata);\n    this.direction = localizationService.rtl ? 'rtl' : 'ltr';\n  }\n\n  get flowCol() {\n    return this.flow === 'vertical';\n  }\n\n  get flowRow() {\n    return this.flow === 'horizontal';\n  }\n  /**\n   * @hidden\n   */\n\n\n  set tabIndex(tabIndex) {\n    this.tabindex = tabIndex;\n  }\n\n  get tabIndex() {\n    return this.tabindex;\n  }\n  /**\n   * The size property specifies the padding of the internal textarea element\n   * ([see example]({% slug appearance_textarea %}#toc-size)).\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `none`\n   */\n\n\n  set size(size) {\n    const newSize = size ? size : DEFAULT_SIZE$4;\n    this.handleClasses(newSize, 'size');\n    this._size = newSize;\n  }\n\n  get size() {\n    return this._size;\n  }\n  /**\n   * The rounded property specifies the border radius of the TextArea\n   * ([see example]({% slug appearance_textarea %}#toc-rounded)).\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `none`\n   */\n\n\n  set rounded(rounded) {\n    const newRounded = rounded ? rounded : DEFAULT_ROUNDED$3;\n    this.handleClasses(newRounded, 'rounded');\n    this._rounded = newRounded;\n  }\n\n  get rounded() {\n    return this._rounded;\n  }\n  /**\n   * The fillMode property specifies the background and border styles of the TextArea\n   * ([see example]({% slug appearance_textarea %}#toc-fillMode)).\n   *\n   * The possible values are:\n   * * `flat`\n   * * `solid` (default)\n   * * `outline`\n   * * `none`\n   */\n\n\n  set fillMode(fillMode) {\n    const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$2;\n    this.handleClasses(newFillMode, 'fillMode');\n    this._fillMode = newFillMode;\n  }\n\n  get fillMode() {\n    return this._fillMode;\n  }\n\n  ngAfterViewInit() {\n    const hostElement = this.hostElement.nativeElement;\n    let cursorInsideWrapper = false;\n    let tabbing = false;\n    this.ngZone.runOutsideAngular(() => {\n      // focusIn and focusOut are relative to the host element\n      this.subscriptions.add(this.renderer.listen(hostElement, 'focusin', () => {\n        if (!this.isFocused) {\n          this.ngZone.run(() => {\n            this.onFocus.emit();\n            this.isFocused = true;\n          });\n        }\n      }));\n      this.subscriptions.add(this.renderer.listen(hostElement, 'focusout', args => {\n        if (!this.isFocused) {\n          return;\n        }\n\n        if (tabbing) {\n          const closestTextbox = closest(args.relatedTarget, element => element === this.hostElement.nativeElement);\n\n          if (!closestTextbox) {\n            this.handleBlur();\n          }\n\n          tabbing = false;\n        } else {\n          if (!cursorInsideWrapper) {\n            this.handleBlur();\n          }\n        }\n      }));\n      this.subscriptions.add(this.renderer.listen(hostElement, 'mouseenter', () => {\n        cursorInsideWrapper = true;\n      }));\n      this.subscriptions.add(this.renderer.listen(hostElement, 'mouseleave', () => {\n        cursorInsideWrapper = false;\n      }));\n      this.subscriptions.add(this.renderer.listen(hostElement, 'keydown', args => {\n        if (args.keyCode === Keys.Tab) {\n          tabbing = true;\n        } else {\n          tabbing = false;\n        }\n      }));\n      this.handleFlow();\n    });\n    const stylingInputs = ['size', 'rounded', 'fillMode'];\n    stylingInputs.forEach(input => {\n      this.handleClasses(this[input], input);\n    });\n  }\n\n  ngOnInit() {\n    this.control = this.injector.get(NgControl, null);\n\n    if (isDocumentAvailable() && this.resizable === 'auto') {\n      this.resizeSubscription = fromEvent(window, 'resize').pipe(debounceTime(50)).subscribe(() => this.resize());\n    }\n\n    if (this.hostElement) {\n      this.renderer.removeAttribute(this.hostElement.nativeElement, \"tabindex\");\n    }\n\n    this.subscriptions = this.localizationService.changes.subscribe(({\n      rtl\n    }) => {\n      this.direction = rtl ? 'rtl' : 'ltr';\n    });\n  }\n\n  ngOnChanges(changes) {\n    const hostElement = this.hostElement.nativeElement;\n    const element = this.input.nativeElement;\n\n    if (changes.flow) {\n      this.handleFlow();\n    }\n\n    if (changes.resizable) {\n      if (this.resizable === 'auto') {\n        this.renderer.removeClass(element, '\\!k-overflow-y-auto');\n        this.initialHeight = element.offsetHeight;\n      } else {\n        this.renderer.addClass(element, '\\!k-overflow-y-auto');\n        element.style.height = `${this.initialHeight}px`;\n      }\n    }\n\n    if (changes.cols) {\n      if (isPresent(changes.cols.currentValue)) {\n        this.renderer.setStyle(hostElement, 'width', 'auto');\n      } else {\n        this.renderer.removeStyle(hostElement, 'width');\n      }\n    }\n\n    if (changes.value) {\n      this.resize();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  writeValue(value) {\n    this.value = value;\n    this.resize();\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnChange(fn) {\n    this.ngChange = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnTouched(fn) {\n    this.ngTouched = fn;\n  }\n\n  updateValue(value) {\n    if (!areSame(this.value, value)) {\n      this.ngZone.run(() => {\n        this.value = value;\n        this.ngChange(value);\n        this.valueChange.emit(value);\n        this.changeDetector.markForCheck();\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    if (this.resizeSubscription) {\n      this.resizeSubscription.unsubscribe();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  get resizableClass() {\n    return resizeClasses[this.resizable];\n  }\n  /**\n   * @hidden\n   */\n\n\n  get isControlInvalid() {\n    return this.control && this.control.touched && !this.control.valid;\n  }\n  /**\n   * Focuses the TextArea component.\n   *\n   * @example\n   * ```ts\n   * _@Component({\n   * selector: 'my-app',\n   * template: `\n   *  <button (click)=\"textarea.focus()\">Focus the textarea</button>\n   *  <kendo-textarea #textarea></kendo-textarea>\n   * `\n   * })\n   * class AppComponent { }\n   * ```\n   */\n\n\n  focus() {\n    if (!this.input) {\n      return;\n    }\n\n    this.focusChangedProgrammatically = true;\n    this.isFocused = true;\n    this.input.nativeElement.focus();\n    this.focusChangedProgrammatically = false;\n  }\n  /**\n   * Blurs the TextArea component.\n   */\n\n\n  blur() {\n    this.focusChangedProgrammatically = true;\n    const isFocusedElement = this.hostElement.nativeElement.querySelector(':focus');\n\n    if (isFocusedElement) {\n      isFocusedElement.blur();\n    }\n\n    this.isFocused = false;\n    this.focusChangedProgrammatically = false;\n  }\n\n  resize() {\n    if (this.resizable !== 'auto') {\n      return;\n    } // The logic of the resize method, does not depend on Angular and thus moving it outisde of it\n    // We need to ensure that the resizing logic runs after the value is updated thus the setTimout\n\n\n    this.ngZone.runOutsideAngular(() => {\n      setTimeout(() => {\n        const hostElement = this.hostElement.nativeElement;\n        const element = this.input.nativeElement;\n        this.renderer.setStyle(element, 'height', `${this.initialHeight}px`);\n        const scrollHeight = element.scrollHeight;\n        this.renderer.setStyle(hostElement, 'min-height', `${scrollHeight}px`);\n\n        if (scrollHeight > this.initialHeight) {\n          this.renderer.setStyle(element, 'height', `${scrollHeight}px`);\n        }\n      }, 0);\n    });\n  }\n\n  get isFocused() {\n    return this._isFocused;\n  }\n\n  set isFocused(value) {\n    if (this._isFocused !== value && this.hostElement) {\n      const element = this.hostElement.nativeElement;\n\n      if (value && !this.disabled) {\n        this.renderer.addClass(element, FOCUSED);\n      } else {\n        this.renderer.removeClass(element, FOCUSED);\n      }\n\n      this._isFocused = value;\n    }\n  }\n\n  handleBlur() {\n    this.ngZone.run(() => {\n      if (!this.focusChangedProgrammatically) {\n        this.onBlur.emit();\n      }\n\n      this.isFocused = false;\n    });\n  }\n\n  setSelection(start, end) {\n    if (this.isFocused) {\n      invokeElementMethod(this.input, 'setSelectionRange', start, end);\n    }\n  }\n\n  selectAll() {\n    if (this.value) {\n      this.setSelection(0, this.value.length);\n    }\n  }\n\n  handleClasses(value, input) {\n    const elem = this.hostElement.nativeElement;\n    const classes = getStylingClasses('input', input, this[input], value);\n\n    if (classes.toRemove) {\n      this.renderer.removeClass(elem, classes.toRemove);\n    }\n\n    if (classes.toAdd) {\n      this.renderer.addClass(elem, classes.toAdd);\n    }\n  }\n\n  handleFlow() {\n    const isVertical = this.flow === 'vertical';\n    const hostElement = this.hostElement.nativeElement;\n    const element = this.input.nativeElement;\n    const suffix = hostElement.children[1];\n    this.renderer[isVertical ? 'addClass' : 'removeClass'](element, '\\!k-flex-none');\n\n    if (suffix) {\n      this.renderer[isVertical ? 'removeClass' : 'addClass'](suffix, '\\!k-align-items-start');\n    }\n  }\n\n}\n\nTextAreaComponent.ɵfac = function TextAreaComponent_Factory(t) {\n  return new (t || TextAreaComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nTextAreaComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TextAreaComponent,\n  selectors: [[\"kendo-textarea\"]],\n  hostVars: 8,\n  hostBindings: function TextAreaComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-textarea\", ctx.hostClasses)(\"k-input\", ctx.hostClasses)(\"!k-flex-col\", ctx.flowCol)(\"!k-flex-row\", ctx.flowRow);\n    }\n  },\n  inputs: {\n    focusableId: \"focusableId\",\n    flow: \"flow\",\n    rows: \"rows\",\n    cols: \"cols\",\n    maxlength: \"maxlength\",\n    tabindex: \"tabindex\",\n    tabIndex: \"tabIndex\",\n    resizable: \"resizable\",\n    size: \"size\",\n    rounded: \"rounded\",\n    fillMode: \"fillMode\"\n  },\n  outputs: {\n    onFocus: \"focus\",\n    onBlur: \"blur\",\n    valueChange: \"valueChange\"\n  },\n  exportAs: [\"kendoTextArea\"],\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.textarea'\n  }, {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TextAreaComponent),\n    multi: true\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(() => TextAreaComponent)\n  }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c42,\n  decls: 4,\n  vars: 20,\n  consts: [[1, \"k-input-inner\", 3, \"ngClass\", \"id\", \"value\", \"disabled\", \"readonly\", \"kendoEventsOutsideAngular\"], [\"input\", \"\"]],\n  template: function TextAreaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c41);\n      i0.ɵɵelementStart(0, \"textarea\", 0, 1);\n      i0.ɵɵtext(2, \"            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵprojection(3);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.resizableClass)(\"id\", ctx.focusableId)(\"value\", ctx.value)(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction3(16, _c40, ctx.handleInputFocus, ctx.handleInputBlur, ctx.handleInput));\n      i0.ɵɵattribute(\"aria-multiline\", true)(\"aria-disabled\", ctx.disabled ? true : undefined)(\"aria-readonly\", ctx.readonly ? true : undefined)(\"placeholder\", ctx.placeholder)(\"rows\", ctx.rows)(\"cols\", ctx.cols)(\"tabindex\", ctx.tabIndex)(\"title\", ctx.title)(\"maxlength\", ctx.maxlength)(\"aria-invalid\", ctx.isControlInvalid);\n    }\n  },\n  directives: [i1$1.NgClass, i3.EventsOutsideAngularDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextAreaComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoTextArea',\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.textarea'\n      }, {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => TextAreaComponent),\n        multi: true\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(() => TextAreaComponent)\n      }],\n      selector: 'kendo-textarea',\n      template: `\n        <textarea\n            #input\n            [attr.aria-multiline]=\"true\"\n            [attr.aria-disabled]=\"disabled ? true : undefined\"\n            [attr.aria-readonly]=\"readonly ? true : undefined\"\n            class=\"k-input-inner\"\n            [ngClass]=\"resizableClass\"\n            [id]=\"focusableId\"\n            [value]=\"value\"\n            [attr.placeholder]=\"placeholder\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [attr.rows]=\"rows\"\n            [attr.cols]=\"cols\"\n            [attr.tabindex]=\"tabIndex\"\n            [attr.title]=\"title\"\n            [attr.maxlength]=\"maxlength\"\n            [attr.aria-invalid]=\"isControlInvalid\"\n            [kendoEventsOutsideAngular]=\"{\n                focus: handleInputFocus,\n                blur: handleInputBlur,\n                input: handleInput}\">\n            </textarea>\n            <ng-content select=\"kendo-textarea-suffix\"></ng-content>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    focusableId: [{\n      type: Input\n    }],\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-textarea']\n    }, {\n      type: HostBinding,\n      args: ['class.k-input']\n    }],\n    flowCol: [{\n      type: HostBinding,\n      args: ['class.\\!k-flex-col']\n    }],\n    flowRow: [{\n      type: HostBinding,\n      args: ['class.\\!k-flex-row']\n    }],\n    flow: [{\n      type: Input\n    }],\n    rows: [{\n      type: Input\n    }],\n    cols: [{\n      type: Input\n    }],\n    maxlength: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    resizable: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    fillMode: [{\n      type: Input\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    valueChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Specifies the adornments in the suffix container ([see example]({% slug textarea_adornments %})).\n * ```ts-no-run\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-textarea>\n *    <kendo-textarea-suffix>\n *        <button kendoButton look=\"clear\" icon=\"image\"></button>\n *    </kendo-textarea-suffix>\n *  </kendo-textarea>\n * `\n * })\n * class AppComponent {}\n * ```\n */\n\n\nclass TextAreaSuffixComponent {\n  constructor() {\n    this.hostClass = true;\n  }\n\n}\n\nTextAreaSuffixComponent.ɵfac = function TextAreaSuffixComponent_Factory(t) {\n  return new (t || TextAreaSuffixComponent)();\n};\n\nTextAreaSuffixComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TextAreaSuffixComponent,\n  selectors: [[\"kendo-textarea-suffix\"]],\n  hostVars: 2,\n  hostBindings: function TextAreaSuffixComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-input-suffix\", ctx.hostClass);\n    }\n  },\n  exportAs: [\"kendoTextAreaSuffix\"],\n  ngContentSelectors: _c43,\n  decls: 1,\n  vars: 0,\n  template: function TextAreaSuffixComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextAreaSuffixComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoTextAreaSuffix',\n      selector: 'kendo-textarea-suffix',\n      template: `<ng-content></ng-content>`\n    }]\n  }], null, {\n    hostClass: [{\n      type: HostBinding,\n      args: ['class.k-input-suffix']\n    }]\n  });\n})();\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the TextArea component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the TextArea module\n * import { TextAreaModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, TextAreaModule], // import TextArea module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\n\nclass TextAreaModule {}\n\nTextAreaModule.ɵfac = function TextAreaModule_Factory(t) {\n  return new (t || TextAreaModule)();\n};\n\nTextAreaModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TextAreaModule\n});\nTextAreaModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, EventsModule, SharedModule], EventsModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextAreaModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TextAreaComponent, TextAreaSuffixComponent],\n      exports: [TextAreaComponent, EventsModule, TextAreaSuffixComponent, SHARED_DIRECTIVES],\n      imports: [CommonModule, EventsModule, SharedModule]\n    }]\n  }], null, null);\n})(); // eslint-disable max-line-length\n\n/**\n * @hidden\n */\n\n\nconst PALETTEPRESETS = {\n  basic: {\n    colors: '000000,7f7f7f,880015,ed1c24,ff7f27,fff200,22b14c,00a2e8,3f48cc,a349a4,ffffff,c3c3c3,b97a57,ffaec9,ffc90e,efe4b0,b5e61d,99d9ea,7092be,c8bfe7',\n    columns: 10\n  },\n  office: {\n    colors: 'ffffff, 000000, e6e6e6, 435569, 4371c4, ed7e32, a5a4a5, febf04, 5a9bd5, 71ae48, f2f2f3, 7f7f7f, d1cece, d5dde3, dae1f4, fce5d4, deeded, fff2cc, deeaf6, e1efd9, d7d8d8, 585959, aeabab, adbaca, b4c5e7, f6caac, dbdbdb, ffe498, bcd6ee, c5e0b2, bfbfc0, 3f3f3f, 767070, 8595b1, 8fabdb, f5b183, c9c8c9, fed965, 9bc4e5, a8d08d, a5a5a6, 262625, 393939, 334050, 2e5496, c45a11, 7b7b7a, bf9000, 2f75b5, 548235, 7f7f7f, 0b0c0c, 161616, 222a34, 203764, 843d0b, 525252, 7f6000, 1d4d79, 375623',\n    columns: 10\n  },\n  apex: {\n    colors: 'ffffff, 000000, c9c2d1, 69676d, ceb966, 9cb084, 6bb1c9, 6585cf, 7e6bc9, a379bb, f2f2f2, 7f7f7f, f4f2f5, e0e0e2, f5f1e0, ebefe6, e1eff4, e0e6f5, e5e1f4, ece4f1, d8d8d8, 595959, e9e6ec, c2c1c5, ebe3c1, d7dfcd, c3dfe9, c1ceeb, cbc3e9, dac9e3, bfbfbf, 3f3f3f, dedae3, a4a3a8, e1d5a3, c3cfb5, a6d0de, a2b5e2, b1a6de, c7aed6, a5a5a5, 262626, 9688a5, 4e4d51, ae9638, 758c5a, 3d8da9, 365bb0, 533da9, 7d4d99, 7f7f7f, 0c0c0c, 635672, 343336, 746425, 4e5d3c, 295e70, 243c75, 372970, 533366',\n    columns: 10\n  },\n  austin: {\n    colors: 'ffffff, 000000, caf278, 3e3d2d, 94c600, 71685a, ff6700, 909465, 956b43, fea022, f2f2f2, 7f7f7f, f4fce4, dddcd0, efffc0, e3e1dc, ffe0cb, e8e9df, ece1d6, feecd2, d8d8d8, 595959, e9f9c9, bbb9a1, dfff82, c8c3ba, ffc299, d2d4c0, dac3ad, fed9a6, bfbfbf, 3f3f3f, dff7ae, ada598, cfff43, ada598, ffa365, bcbfa1, c8a585, fec67a, a5a5a5, 262626, a9ea25, 2e2d21, 6f9400, 544e43, bf4d00, 6c6f4b, 6f5032, d77b00, 7f7f7f, 0c0c0c, 74a50f, 1f1e16, 4a6300, 38342d, 7f3300, 484a32, 4a3521, 8f5200',\n    columns: 10\n  },\n  clarity: {\n    colors: 'ffffff, 292934, f3f2dc, d2533c, 93a299, ad8f67, 726056, 4c5a6a, 808da0, 79463d, f2f2f2, e7e7ec, e7e5b9, f6dcd8, e9ecea, eee8e0, e4dedb, d8dde3, e5e8ec, e9d6d3, d8d8d8, c4c4d1, d5d185, edbab1, d3d9d6, ded2c2, c9beb8, b2bcc8, ccd1d9, d3aea7, bfbfbf, 8a8aa3, aca73b, e4978a, bec7c1, cdbba3, af9e94, 8c9bac, b2bac6, bd857c, a5a5a5, 56566e, 56531d, a43925, 6b7c72, 866b48, 554840, 39434f, 5c697b, 5a342d, 7f7f7f, 3b3b4b, 22210b, 6d2619, 47534c, 594730, 39302b, 262d35, 3d4652, 3c231e',\n    columns: 10\n  },\n  slipstream: {\n    colors: 'ffffff, 000000, b4dcfa, 212745, 4e67c8, 5eccf3, a7ea52, 5dceaf, ff8021, f14124, f2f2f2, 7f7f7f, 8bc9f7, c7cce4, dbe0f4, def4fc, edfadc, def5ef, ffe5d2, fcd9d3, d8d8d8, 595959, 4facf3, 909aca, b8c2e9, beeafa, dbf6b9, beebdf, ffcca6, f9b3a7, bfbfbf, 3f3f3f, 0d78c9, 5967af, 94a3de, 9ee0f7, caf297, 9de1cf, ffb279, f68d7b, a5a5a5, 262626, 063c64, 181d33, 31479f, 11b2eb, 81d319, 34ac8b, d85c00, c3260c, 7f7f7f, 0c0c0c, 021828, 101322, 202f6a, 0b769c, 568c11, 22725c, 903d00, 821908',\n    columns: 10\n  },\n  metro: {\n    colors: 'ffffff, 000000, d6ecff, 4e5b6f, 7fd13b, ea157a, feb80a, 00addc, 738ac8, 1ab39f, f2f2f2, 7f7f7f, a7d6ff, d9dde4, e5f5d7, fad0e4, fef0cd, c5f2ff, e2e7f4, c9f7f1, d8d8d8, 595959, 60b5ff, b3bcca, cbecb0, f6a1c9, fee29c, 8be6ff, c7d0e9, 94efe3, bfbfbf, 3f3f3f, 007dea, 8d9baf, b2e389, f272af, fed46b, 51d9ff, aab8de, 5fe7d5, a5a5a5, 262626, 003e75, 3a4453, 5ea226, af0f5b, c58c00, 0081a5, 425ea9, 138677, 7f7f7f, 0c0c0c, 00192e, 272d37, 3f6c19, 750a3d, 835d00, 00566e, 2c3f71, 0c594f',\n    columns: 10\n  },\n  flow: {\n    colors: 'ffffff, 000000, dbf5f9, 04617b, 0f6fc6, 009dd9, 0bd0d9, 10cf9b, 7cca62, a5c249, f2f2f2, 7f7f7f, b2e9f2, b4ecfc, c7e2fa, c4eeff, c9fafc, c9faed, e4f4df, edf2da, d8d8d8, 595959, 76d9e8, 6adafa, 90c6f6, 89deff, 93f5f9, 94f6db, cae9c0, dbe6b6, bfbfbf, 3f3f3f, 21b2c8, 20c8f7, 59a9f2, 4fceff, 5df0f6, 5ff2ca, b0dfa0, c9da91, a5a5a5, 262626, 105964, 02485c, 0b5394, 0075a2, 089ca2, 0b9b74, 54a838, 7e9532, 7f7f7f, 0c0c0c, 062328, 01303d, 073763, 004e6c, 05686c, 07674d, 387025, 546321',\n    columns: 10\n  },\n  hardcover: {\n    colors: 'ffffff, 000000, ece9c6, 895d1d, 873624, d6862d, d0be40, 877f6c, 972109, aeb795, f2f2f2, 7f7f7f, e1dca5, f2e0c6, f0d0c9, f6e6d5, f5f2d8, e7e5e1, fbc7bc, eef0e9, d8d8d8, 595959, d0c974, e6c28d, e2a293, eeceaa, ece5b2, cfccc3, f78f7a, dee2d4, bfbfbf, 3f3f3f, a29a36, daa454, d4735e, e6b681, e2d88c, b7b2a5, f35838, ced3bf, a5a5a5, 262626, 514d1b, 664515, 65281a, a2641f, a39428, 655f50, 711806, 879464, 7f7f7f, 0c0c0c, 201e0a, 442e0e, 431b11, 6c4315, 6d621a, 433f35, 4b1004, 5a6243',\n    columns: 10\n  },\n  trek: {\n    colors: 'ffffff, 000000, fbeec9, 4e3b30, f0a22e, a5644e, b58b80, c3986d, a19574, c17529, f2f2f2, 7f7f7f, f7e09e, e1d6cf, fcecd5, eddfda, f0e7e5, f3eae1, ece9e3, f5e3d1, d8d8d8, 595959, f3cc5f, c4ad9f, f9d9ab, dcc0b6, e1d0cc, e7d5c4, d9d4c7, ebc7a3, bfbfbf, 3f3f3f, d29f0f, a78470, f6c781, cba092, d2b9b2, dbc1a7, c6bfab, e1ac76, a5a5a5, 262626, 694f07, 3a2c24, c87d0e, 7b4b3a, 926255, a17242, 7b7153, 90571e, 7f7f7f, 0c0c0c, 2a1f03, 271d18, 855309, 523226, 614138, 6b4c2c, 524b37, 603a14',\n    columns: 10\n  },\n  verve: {\n    colors: 'ffffff, 000000, d2d2d2, 666666, ff388c, e40059, 9c007f, 68007f, 005bd3, 00349e, f2f2f2, 7f7f7f, bdbdbd, e0e0e0, ffd7e8, ffc6dc, ffb8f1, f1b2ff, c3dcff, b8cfff, d8d8d8, 595959, 9d9d9d, c1c1c1, ffafd1, ff8eba, ff71e4, e365ff, 87baff, 72a0ff, bfbfbf, 3f3f3f, 696969, a3a3a3, ff87ba, ff5597, ff2ad7, d519ff, 4b98ff, 2b71ff, a5a5a5, 262626, 343434, 4c4c4c, e90062, ab0042, 75005f, 4e005f, 00449e, 002676, 7f7f7f, 0c0c0c, 151515, 333333, 9b0041, 72002c, 4e003f, 34003f, 002d69, 00194f',\n    columns: 10\n  },\n  monochrome: {\n    colors: '000000, 1a1a1a, 333333, 4d4d4d, 666666, 808080, 999999, b3b3b3, cccccc, e6e6e6, f2f2f2, ffffff',\n    columns: 12\n  },\n  accessible: {\n    colors: 'black, grey, darkred, red, darkorange, gold, green, blue, darkblue, purple, white, darkgrey, saddlebrown, pink, orange, yellow, lightgreen, lightskyblue, lightblue, mediumpurple',\n    columns: 10\n  }\n};\n;\n/**\n * Arguments for the `cancel` event of the ColorPicker and FlatColorPicker components.\n */\n\nclass ColorPickerCancelEvent extends PreventableEvent {\n  constructor(originalEvent) {\n    super();\n    this.originalEvent = originalEvent;\n  }\n\n}\n/**\n * Arguments for the `close` event of the ColorPicker component.\n */\n\n\nclass ColorPickerCloseEvent extends PreventableEvent {}\n/**\n * Arguments for the `open` event of the ColorPicker component.\n */\n\n\nclass ColorPickerOpenEvent extends PreventableEvent {}\n/**\n * Fires each time the left side of the ColorPicker wrapper is clicked.\n * The event is triggered regardless of whether a ColorPicker icon is set or not.\n *\n * Provides information about the current active color and gives the option to prevent the opening of the popup.\n *\n * @example\n *\n * ```ts-no-run\n * _@Component({\n *   selector: 'my-app',\n *   template: `\n *       <kendo-colorpicker\n *           [icon]=\"'edit-tools'\"\n *           [value]=\"'#900'\"\n *           (activeColorClick)=\"handleActiveColorClick($event)\"\n *       >\n *       </kendo-colorpicker>\n *   `\n * })\n * class AppComponent {\n *     public handleActiveColorClick(event: ActiveColorClickEvent): void {\n *         event.preventOpen();\n *\n *         console.log('Open prevented:', event.isOpenPrevented());\n *         console.log('Current color:', event.color);\n *     }\n *  }\n * ```\n */\n\n\nclass ActiveColorClickEvent {\n  /**\n   * @hidden\n   * @param color Represents the current value of the ColorPicker.\n   */\n  constructor(color) {\n    this.color = color;\n    this.openPrevented = false;\n  }\n  /**\n   * Prevents the opening of the popup.\n   */\n\n\n  preventOpen() {\n    this.openPrevented = true;\n  }\n  /**\n   * Returns `true` if the popup opening is prevented by any of its subscribers.\n   *\n   * @returns - Returns `true` if the open action was prevented. Otherwise, returns `false`.\n   */\n\n\n  isOpenPrevented() {\n    return this.openPrevented;\n  }\n\n}\n/**\n * @hidden\n *\n * Returns the hex or rgba string representation of the color.\n */\n\n\nconst parseColor = (value, format, opacityEnabled = false, safe = true) => {\n  const allowedFormats = ['hex', 'rgba', 'name'];\n\n  if (allowedFormats.indexOf(format) === -1) {\n    throw new Error(`Unsupported color output format '${format}'. The available options are 'hex', 'rgba' or 'name'.`);\n  }\n\n  if (!isPresent(value)) {\n    return;\n  }\n\n  if (format === 'name') {\n    return nameFormat(value, safe);\n  }\n\n  const parsedColor = parseColor$1(value.trim(), safe);\n\n  if (!isPresent(parsedColor)) {\n    return;\n  }\n\n  const parsedColorResult = format === 'hex' ? getHexValue(parsedColor, opacityEnabled) : parsedColor.toCssRgba();\n  return parsedColorResult;\n};\n/**\n * @hidden\n *\n * Returns an HSV object representation of the color string.\n */\n\n\nconst getHSV = (value, safe = true) => {\n  const parsed = parseColor$1(value, safe);\n\n  if (!isPresent(parsed)) {\n    return {};\n  }\n\n  return parsed.toHSV();\n};\n/**\n * @hidden\n *\n * Returns an RGBA object representation of the color string.\n */\n\n\nconst getRGBA = (value, safe = true) => {\n  const parsed = parseColor$1(value, safe);\n\n  if (!isPresent(parsed)) {\n    return {};\n  }\n\n  return parsed.toBytes();\n};\n/**\n * @hidden\n *\n * Returns the RGBA string representation of the color.\n */\n\n\nconst getColorFromHSV = (hsva, format = 'rgba', opacityEnabled = false) => {\n  const hue = fitIntoBounds(hsva.h, 0, 359.9);\n  const saturation = fitIntoBounds(hsva.s, 0, 1);\n  const value = fitIntoBounds(hsva.v, 0, 1);\n  const alpha = fitIntoBounds(hsva.a, 0, 1);\n  const color = Color.fromHSV(hue, saturation, value, alpha);\n  return format === 'hex' ? getHexValue(color, opacityEnabled) : color.toCssRgba();\n};\n/**\n * @hidden\n *\n * Returns the HEX value.\n */\n\n\nconst getHexValue = (color, opacity) => {\n  return opacity && color.a < 1 ? color.toCss({\n    alpha: true\n  }) : color.toCss();\n};\n/**\n * @hidden\n *\n * Returns the RGBA string representation of the color based on the `hue`, assuming the `value`, `saturation` and `alpha` have value of `1`.\n */\n\n\nconst getColorFromHue = hue => {\n  return getColorFromHSV({\n    h: hue,\n    s: 1,\n    v: 1,\n    a: 1\n  });\n};\n/**\n * @hidden\n *\n * Returns the RGBA string representation of the color.\n */\n\n\nconst getColorFromRGBA = rgba => {\n  const red = fitIntoBounds(rgba.r, 0, 255);\n  const green = fitIntoBounds(rgba.g, 0, 255);\n  const blue = fitIntoBounds(rgba.b, 0, 255);\n  const alpha = fitIntoBounds(rgba.a, 0, 1);\n  return Color.fromBytes(red, green, blue, alpha).toCssRgba();\n};\n/**\n *\n * @hidden\n */\n\n\nfunction nameFormat(value, safe) {\n  value = value.toLowerCase().trim();\n\n  if (isPresent(namedColors[value])) {\n    return value;\n  }\n\n  if (parseColor$1(value, safe)) {\n    value = parseColor$1(value, safe).toHex();\n  }\n\n  const key = Object.keys(namedColors).find(key => namedColors[key] === value);\n\n  if (!key && !safe) {\n    throw new Error(`The provided color ${value} is not supported for 'format=\"name\"' property.To display ${value} color, the component 'format' property should be set to 'hex' or 'rgba' `);\n  }\n\n  return key;\n}\n/**\n * @hidden\n *\n * Returns the RGB object representation of the color based on the background color.\n */\n\n\nconst getRGBFromRGBA = (foregroundColor, backgroundColor) => {\n  const r1 = fitIntoBounds(foregroundColor.r, 0, 255);\n  const g1 = fitIntoBounds(foregroundColor.g, 0, 255);\n  const b1 = fitIntoBounds(foregroundColor.b, 0, 255);\n  const a1 = fitIntoBounds(foregroundColor.a, 0, 1);\n  const r2 = fitIntoBounds(backgroundColor.r, 0, 255);\n  const g2 = fitIntoBounds(backgroundColor.g, 0, 255);\n  const b2 = fitIntoBounds(backgroundColor.b, 0, 255);\n  return {\n    r: Math.round((1 - a1) * r2 + a1 * r1),\n    g: Math.round((1 - a1) * g2 + a1 * g1),\n    b: Math.round((1 - a1) * b2 + a1 * b1)\n  };\n};\n/**\n * @hidden\n *\n * Returns the relative luminance.\n */\n\n\nconst getLuminance = rgb => {\n  let a = [rgb.r, rgb.g, rgb.b].map(function (v) {\n    v /= 255;\n    return v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n  });\n  return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n};\n/**\n * @hidden\n *\n * Returns the color contrast.\n */\n\n\nconst getContrast = (luminance1, luminance2) => {\n  const brightest = Math.max(luminance1, luminance2);\n  const darkest = Math.min(luminance1, luminance2);\n  return (brightest + 0.05) / (darkest + 0.05);\n};\n/**\n * @hidden\n *\n * Returns the color contrast from two RGBA colors.\n */\n\n\nconst getContrastFromTwoRGBAs = (a, b) => {\n  return getContrast(getLuminance(getRGBFromRGBA(a, b)), getLuminance(getRGBFromRGBA(b, {\n    r: 0,\n    g: 0,\n    b: 0,\n    a: 1\n  })));\n};\n/**\n * @hidden\n */\n\n\nconst bezierCommand = controlPointCalc => (point, i, a) => {\n  // start control point\n  const [cpsX, cpsY] = controlPointCalc(a[i - 1], a[i - 2], point); // end control point\n\n  const [cpeX, cpeY] = controlPointCalc(point, a[i - 1], a[i + 1], true);\n  return `C ${cpsX},${cpsY} ${cpeX},${cpeY} ${point[0]},${point[1]}`;\n};\n/**\n * @hidden\n */\n\n\nconst controlPoint = lineCalc => (current, previous, next, reverse) => {\n  // when 'current' is the first or last point of the array\n  // 'previous' and 'next' are undefined\n  // replace with 'current'\n  const p = previous || current;\n  const n = next || current;\n  const smooth = 0.1; // properties of the line between previous and next\n\n  const l = lineCalc(p, n); // If is end-control-point, add PI to the angle to go backward\n\n  const angle = l.angle + (reverse ? Math.PI : 0);\n  const length = l.length * smooth; // The control point position is relative to the current point\n\n  const x = current[0] + Math.cos(angle) * length;\n  const y = current[1] + Math.sin(angle) * length;\n  return [x, y];\n};\n/**\n * @hidden\n */\n\n\nconst line = (pointA, pointB) => {\n  const lengthX = pointB[0] - pointA[0];\n  const lengthY = pointB[1] - pointA[1];\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  };\n};\n/**\n * @hidden\n */\n\n\nconst d = (points, command) => {\n  if (points.length === 0) {\n    return '';\n  } // build the d attributes by looping over the points\n\n\n  const d = points.reduce((acc, point, i, a) => i === 0 ? // if first point\n  `M ${point[0]},${point[1]}` : // else\n  `${acc} ${command(point, i, a)}`, '');\n  return d;\n};\n/**\n * @hidden\n *\n * Render the svg <path> element.\n *\n * @param points (array) Represents the points coordinates as an array of tuples.\n * @param command (function) The command that is used (bezierCommand, lineCommand).\n *      @param point (array) [x,y] Represents the current point coordinates.\n *      @param i (integer) Represents the index of 'point' in the array 'a'.\n *      @param a (array) Represents the complete array of points coordinates.\n *      @output (string) a svg path command.\n * @output (string) a Svg <path> element\n */\n\n\nconst svgPath = (points, command) => {\n  if (points.length === 0) {\n    return '';\n  } // build the d attributes by looping over the points\n\n\n  const d = points.reduce((acc, point, i, a) => i === 0 ? // if first point\n  `M ${point[0]},${point[1]}` : // else\n  `${acc} ${command(point, i, a)}`, '');\n  return d;\n};\n/**\n * @hidden\n */\n\n\nclass ColorPickerLocalizationService extends LocalizationService {\n  constructor(prefix, messageService, _rtl) {\n    super(prefix, messageService, _rtl);\n  }\n\n}\n\nColorPickerLocalizationService.ɵfac = function ColorPickerLocalizationService_Factory(t) {\n  return new (t || ColorPickerLocalizationService)(i0.ɵɵinject(L10N_PREFIX), i0.ɵɵinject(i1.MessageService, 8), i0.ɵɵinject(RTL, 8));\n};\n\nColorPickerLocalizationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ColorPickerLocalizationService,\n  factory: ColorPickerLocalizationService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColorPickerLocalizationService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [L10N_PREFIX]\n      }]\n    }, {\n      type: i1.MessageService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [RTL]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nconst DEFAULT_OUTPUT_FORMAT = 'rgba';\n/**\n * @hidden\n */\n\nconst DEFAULT_GRADIENT_BACKGROUND_COLOR = 'rgba(255, 0, 0, 1)';\n/**\n * @hidden\n */\n\nconst DRAGHANDLE_MOVE_SPEED = 5;\n/**\n * @hidden\n */\n\nconst DRAGHANDLE_MOVE_SPEED_SMALL_STEP = 2;\n/**\n * @hidden\n */\n\nconst AAA_RATIO = 7.0;\n/**\n * @hidden\n */\n\nconst AA_RATIO = 4.5;\n/**\n * @hidden\n */\n\nconst DEFAULT_PRESET$1 = 'office';\n/**\n * @hidden\n */\n\nconst DEFAULT_ACCESSIBLE_PRESET$1 = 'accessible';\n/**\n * @hidden\n */\n\nconst STEP_COUNT = 16;\n/**\n * @hidden\n */\n\nclass FlatColorPickerLocalizationService extends LocalizationService {\n  constructor(prefix, messageService, _rtl, colorPickerLocalization) {\n    super(prefix, messageService, _rtl);\n    this.colorPickerLocalization = colorPickerLocalization;\n  }\n\n  get(shortKey) {\n    if (this.colorPickerLocalization) {\n      return this.colorPickerLocalization.get(shortKey);\n    }\n\n    return super.get(shortKey);\n  }\n\n}\n\nFlatColorPickerLocalizationService.ɵfac = function FlatColorPickerLocalizationService_Factory(t) {\n  return new (t || FlatColorPickerLocalizationService)(i0.ɵɵinject(L10N_PREFIX), i0.ɵɵinject(i1.MessageService, 8), i0.ɵɵinject(RTL, 8), i0.ɵɵinject(ColorPickerLocalizationService, 8));\n};\n\nFlatColorPickerLocalizationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: FlatColorPickerLocalizationService,\n  factory: FlatColorPickerLocalizationService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FlatColorPickerLocalizationService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [L10N_PREFIX]\n      }]\n    }, {\n      type: i1.MessageService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [RTL]\n      }]\n    }, {\n      type: ColorPickerLocalizationService,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ColorPickerLocalizationService]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass FlatColorPickerService {\n  getPaletteSettings(settings, format) {\n    const defaultPreset = format !== 'name' ? DEFAULT_PRESET$1 : DEFAULT_ACCESSIBLE_PRESET$1;\n    const settingsPalette = settings.palette;\n    const presetColumns = typeof settingsPalette === 'string' && PALETTEPRESETS[settingsPalette] ? PALETTEPRESETS[settingsPalette].columns : undefined;\n    return {\n      palette: settingsPalette || defaultPreset,\n      tileSize: settings.tileSize || 24,\n      columns: settings.columns || presetColumns || 10\n    };\n  }\n\n  paletteTileLayout(tileSize) {\n    if (typeof tileSize === 'number') {\n      return {\n        width: tileSize,\n        height: tileSize\n      };\n    }\n\n    return {\n      width: tileSize.width ? tileSize.width : tileSize.height,\n      height: tileSize.height ? tileSize.height : tileSize.width\n    };\n  }\n\n}\n\nFlatColorPickerService.ɵfac = function FlatColorPickerService_Factory(t) {\n  return new (t || FlatColorPickerService)();\n};\n\nFlatColorPickerService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: FlatColorPickerService,\n  factory: FlatColorPickerService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FlatColorPickerService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nclass FlatColorPickerHeaderComponent {\n  constructor(localizationService) {\n    this.localizationService = localizationService;\n    this.hostClasses = true;\n    this.innerTabIndex = -1;\n    this.viewChange = new EventEmitter();\n    this.valuePaneClick = new EventEmitter();\n    this.clearButtonClick = new EventEmitter();\n    this.tabOut = new EventEmitter();\n  }\n\n  onViewButtonClick(view) {\n    this.activeView = view;\n    this.viewChange.emit(view);\n  }\n\n  get viewButtons() {\n    return this.views && this.views.indexOf('gradient') >= 0 && this.views.indexOf('palette') >= 0;\n  }\n\n  getViewButtonIcon(view) {\n    return view === 'gradient' ? 'k-i-color-canvas' : 'k-i-palette';\n  }\n\n  getText(text) {\n    return this.localizationService.get(text);\n  }\n\n  onHeaderTabOut(ev, index) {\n    if (index === 0) {\n      ev.preventDefault();\n      this.tabOut.emit();\n    }\n  }\n\n}\n\nFlatColorPickerHeaderComponent.ɵfac = function FlatColorPickerHeaderComponent_Factory(t) {\n  return new (t || FlatColorPickerHeaderComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nFlatColorPickerHeaderComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FlatColorPickerHeaderComponent,\n  selectors: [[\"\", \"kendoFlatColorPickerHeader\", \"\"]],\n  viewQuery: function FlatColorPickerHeaderComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c44, 5, ElementRef);\n      i0.ɵɵviewQuery(_c45, 5, ElementRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.clearButtonElement = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.viewButtonsCollection = _t);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function FlatColorPickerHeaderComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-coloreditor-header\", ctx.hostClasses)(\"k-hstack\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    clearButton: \"clearButton\",\n    activeView: \"activeView\",\n    views: \"views\",\n    preview: \"preview\",\n    innerTabIndex: \"innerTabIndex\",\n    value: \"value\",\n    selection: \"selection\"\n  },\n  outputs: {\n    viewChange: \"viewChange\",\n    valuePaneClick: \"valuePaneClick\",\n    clearButtonClick: \"clearButtonClick\",\n    tabOut: \"tabOut\"\n  },\n  attrs: _c46,\n  decls: 6,\n  vars: 3,\n  consts: [[1, \"k-coloreditor-header-actions\", \"k-hstack\"], [\"class\", \"k-button-group k-button-group-flat\", 4, \"ngIf\"], [1, \"k-spacer\"], [\"type\", \"button\", \"class\", \"k-button k-button-md k-button-flat k-button-flat-base k-icon-button k-coloreditor-reset\", 3, \"tabindex\", \"click\", 4, \"ngIf\"], [\"class\", \"k-coloreditor-preview k-vstack\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [1, \"k-button-group\", \"k-button-group-flat\"], [\"type\", \"button\", \"class\", \"k-button k-button-md k-button-flat k-button-flat-base k-icon-button\", 3, \"tabindex\", \"ngClass\", \"click\", \"keydown.shift.tab\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"k-button\", \"k-button-md\", \"k-button-flat\", \"k-button-flat-base\", \"k-icon-button\", 3, \"tabindex\", \"ngClass\", \"click\", \"keydown.shift.tab\"], [\"viewButtons\", \"\"], [1, \"k-button-icon\", \"k-icon\", 3, \"ngClass\"], [\"type\", \"button\", 1, \"k-button\", \"k-button-md\", \"k-button-flat\", \"k-button-flat-base\", \"k-icon-button\", \"k-coloreditor-reset\", 3, \"tabindex\", \"click\"], [\"clearButton\", \"\"], [1, \"k-button-icon\", \"k-icon\", \"k-i-droplet-slash\"], [\"aria-hidden\", \"true\", 1, \"k-coloreditor-preview\", \"k-vstack\"], [1, \"k-coloreditor-preview-color\", \"k-color-preview\"], [1, \"k-coloreditor-current-color\", \"k-color-preview\", 3, \"click\"]],\n  template: function FlatColorPickerHeaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, FlatColorPickerHeaderComponent_div_1_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 0);\n      i0.ɵɵtemplate(4, FlatColorPickerHeaderComponent_button_4_Template, 3, 3, \"button\", 3);\n      i0.ɵɵtemplate(5, FlatColorPickerHeaderComponent_div_5_Template, 3, 6, \"div\", 4);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.viewButtons);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.clearButton);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.preview);\n    }\n  },\n  directives: [i1$1.NgIf, i1$1.NgForOf, i1$1.NgClass],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FlatColorPickerHeaderComponent, [{\n    type: Component,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/component-selector\n      selector: '[kendoFlatColorPickerHeader]',\n      template: `\n        <div class=\"k-coloreditor-header-actions k-hstack\">\n            <div \n                *ngIf=\"viewButtons\" \n                class=\"k-button-group k-button-group-flat\">\n                <button *ngFor=\"let view of views; let i = index;\"\n                    #viewButtons\n                    type=\"button\"\n                    [tabindex]=\"innerTabIndex.toString()\"\n                    (click)=\"onViewButtonClick(view)\"\n                    (keydown.shift.tab)=\"onHeaderTabOut($event, i)\"\n                    class=\"k-button k-button-md k-button-flat k-button-flat-base k-icon-button\"\n                    [attr.title]=\"getText(view === 'gradient' ? 'gradientView' : 'paletteView')\"\n                    [attr.aria-label]=\"getText(view === 'gradient' ? 'gradientView' : 'paletteView')\"\n                    [attr.aria-pressed]=\"activeView === view\"\n                    [ngClass]=\"activeView === view ? 'k-selected' : ''\">\n                    <span\n                        class=\"k-button-icon k-icon\"\n                        [ngClass]=\"getViewButtonIcon(view)\">\n                    </span>\n                </button>\n            </div>\n        </div>\n        <div class=\"k-spacer\"></div>\n        <div class=\"k-coloreditor-header-actions k-hstack\">\n            <button\n                [tabindex]=\"innerTabIndex.toString()\"\n                *ngIf=\"clearButton\"\n                #clearButton\n                type=\"button\"\n                class=\"k-button k-button-md k-button-flat k-button-flat-base k-icon-button k-coloreditor-reset\"\n                [attr.aria-label]=\"getText('clearButton')\"\n                [attr.title]=\"getText('clearButton')\"\n                (click)=\"clearButtonClick.emit()\">\n                    <span class=\"k-button-icon k-icon k-i-droplet-slash\"></span>\n            </button>\n            <div class=\"k-coloreditor-preview k-vstack\" *ngIf=\"preview\" aria-hidden=\"true\">\n                <span\n                    class=\"k-coloreditor-preview-color k-color-preview\"\n                    [attr.title]=\"getText('previewColor')\"\n                    [style.background-color]=\"selection\">\n                </span>\n                <span class=\"k-coloreditor-current-color k-color-preview\"\n                    [style.background-color]=\"value\"\n                    [attr.title]=\"getText('revertSelection')\"\n                    (click)=\"valuePaneClick.emit($event)\">\n                </span>\n            </div>\n        </div>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, {\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-coloreditor-header']\n    }, {\n      type: HostBinding,\n      args: ['class.k-hstack']\n    }],\n    clearButton: [{\n      type: Input\n    }],\n    activeView: [{\n      type: Input\n    }],\n    views: [{\n      type: Input\n    }],\n    preview: [{\n      type: Input\n    }],\n    innerTabIndex: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    selection: [{\n      type: Input\n    }],\n    viewChange: [{\n      type: Output\n    }],\n    valuePaneClick: [{\n      type: Output\n    }],\n    clearButtonClick: [{\n      type: Output\n    }],\n    tabOut: [{\n      type: Output\n    }],\n    viewButtonsCollection: [{\n      type: ViewChildren,\n      args: ['viewButtons', {\n        read: ElementRef\n      }]\n    }],\n    clearButtonElement: [{\n      type: ViewChild,\n      args: ['clearButton', {\n        read: ElementRef\n      }]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass ColorGradientLocalizationService extends LocalizationService {\n  constructor(prefix, messageService, _rtl, flatColorPickerLocalization) {\n    super(prefix, messageService, _rtl);\n    this.flatColorPickerLocalization = flatColorPickerLocalization;\n  }\n\n  get(shortKey) {\n    if (this.flatColorPickerLocalization) {\n      return this.flatColorPickerLocalization.get(shortKey);\n    }\n\n    return super.get(shortKey);\n  }\n\n}\n\nColorGradientLocalizationService.ɵfac = function ColorGradientLocalizationService_Factory(t) {\n  return new (t || ColorGradientLocalizationService)(i0.ɵɵinject(L10N_PREFIX), i0.ɵɵinject(i1.MessageService, 8), i0.ɵɵinject(RTL, 8), i0.ɵɵinject(FlatColorPickerLocalizationService, 8));\n};\n\nColorGradientLocalizationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ColorGradientLocalizationService,\n  factory: ColorGradientLocalizationService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColorGradientLocalizationService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [L10N_PREFIX]\n      }]\n    }, {\n      type: i1.MessageService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [RTL]\n      }]\n    }, {\n      type: FlatColorPickerLocalizationService,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [FlatColorPickerLocalizationService]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass ColorContrastSvgComponent {\n  constructor() {\n    this.hostClass = true;\n  }\n\n  ngAfterViewInit() {\n    this.metrics = this.wrapper.getBoundingClientRect();\n    this.oldA = this.hsva.value.a;\n    this.oldH = this.hsva.value.h;\n    this.hsva.subscribe(value => {\n      if (value.h !== this.oldH || value.a !== this.oldA) {\n        this.oldH = value.h;\n        this.oldA = value.a;\n        this.setPaths();\n      }\n    });\n  }\n\n  ngOnChanges(changes) {\n    if (isPresent(changes.backgroundColor) && this.metrics) {\n      this.setPaths();\n    }\n  }\n\n  setPaths() {\n    const bezierCommandCalc = bezierCommand(controlPoint(line));\n    this.paths = [svgPath(this.getPaths(AA_RATIO, STEP_COUNT), bezierCommandCalc), svgPath(this.getPaths(AA_RATIO, STEP_COUNT, true), bezierCommandCalc), svgPath(this.getPaths(AAA_RATIO, STEP_COUNT), bezierCommandCalc), svgPath(this.getPaths(AAA_RATIO, STEP_COUNT, true), bezierCommandCalc)];\n  }\n\n  findValue(contrast, saturation, low, high, comparer) {\n    const mid = (low + high) / 2;\n    const hsva = Object.assign({}, this.hsva.value, {\n      s: saturation / this.metrics.width,\n      v: 1 - mid / this.metrics.height\n    });\n    const currentContrast = getContrastFromTwoRGBAs(getRGBA(getColorFromHSV(hsva)), getRGBA(this.backgroundColor || ''));\n\n    if (low + 0.5 > high) {\n      if (currentContrast < contrast + 1 && currentContrast > contrast - 1) {\n        return mid;\n      } else {\n        return null;\n      }\n    }\n\n    if (comparer(currentContrast, contrast)) {\n      return this.findValue(contrast, saturation, low, high - (high - low) / 2, comparer);\n    }\n\n    return this.findValue(contrast, saturation, low + (high - low) / 2, high, comparer);\n  }\n\n  getPaths(contrast, stepCount, reversed = false) {\n    const points = [];\n\n    for (let i = 0; i <= this.metrics.width; i += this.metrics.width / stepCount) {\n      const value = this.findValue(contrast, i, 0, this.metrics.height, reversed ? (a, b) => a < b : (a, b) => a > b);\n\n      if (value !== null) {\n        points.push([i, value]);\n      }\n    }\n\n    return points;\n  }\n\n}\n\nColorContrastSvgComponent.ɵfac = function ColorContrastSvgComponent_Factory(t) {\n  return new (t || ColorContrastSvgComponent)();\n};\n\nColorContrastSvgComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColorContrastSvgComponent,\n  selectors: [[\"\", \"kendoColorContrastSvg\", \"\"]],\n  hostVars: 2,\n  hostBindings: function ColorContrastSvgComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-color-contrast-svg\", ctx.hostClass);\n    }\n  },\n  inputs: {\n    wrapper: \"wrapper\",\n    hsva: \"hsva\",\n    backgroundColor: \"backgroundColor\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c47,\n  decls: 1,\n  vars: 1,\n  consts: [[\"fill\", \"none\", \"stroke\", \"white\", \"stroke-width\", \"1\", 4, \"ngFor\", \"ngForOf\"], [\"fill\", \"none\", \"stroke\", \"white\", \"stroke-width\", \"1\"]],\n  template: function ColorContrastSvgComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ColorContrastSvgComponent__svg_path_0_Template, 1, 1, \"path\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.paths);\n    }\n  },\n  directives: [i1$1.NgForOf],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColorContrastSvgComponent, [{\n    type: Component,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/component-selector\n      selector: '[kendoColorContrastSvg]',\n      template: `\n        <svg:path *ngFor=\"let path of paths\" [attr.d]=\"path\" fill=\"none\" stroke=\"white\" stroke-width=\"1\"></svg:path>\n    `\n    }]\n  }], null, {\n    hostClass: [{\n      type: HostBinding,\n      args: ['class.k-color-contrast-svg']\n    }],\n    wrapper: [{\n      type: Input\n    }],\n    hsva: [{\n      type: Input\n    }],\n    backgroundColor: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass NumericLabelDirective {\n  constructor(host) {\n    this.host = host;\n  }\n\n  ngOnInit() {\n    const localizationToken = `${this.kendoAdditionalNumericLabel}ChannelLabel`;\n    this.host.numericInput.nativeElement.setAttribute('aria-label', this.localizationService.get(localizationToken));\n  }\n\n}\n\nNumericLabelDirective.ɵfac = function NumericLabelDirective_Factory(t) {\n  return new (t || NumericLabelDirective)(i0.ɵɵdirectiveInject(NumericTextBoxComponent));\n};\n\nNumericLabelDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NumericLabelDirective,\n  selectors: [[\"\", \"kendoAdditionalNumericLabel\", \"\"]],\n  inputs: {\n    kendoAdditionalNumericLabel: \"kendoAdditionalNumericLabel\",\n    localizationService: \"localizationService\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumericLabelDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoAdditionalNumericLabel]'\n    }]\n  }], function () {\n    return [{\n      type: NumericTextBoxComponent\n    }];\n  }, {\n    kendoAdditionalNumericLabel: [{\n      type: Input\n    }],\n    localizationService: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass ColorInputComponent {\n  constructor(host, renderer, localizationService) {\n    this.host = host;\n    this.renderer = renderer;\n    this.localizationService = localizationService;\n    /**\n     * The id of the hex input.\n     */\n\n    this.focusableId = `k-${guid()}`;\n    /**\n     * The inputs tabindex.\n     */\n\n    this.tabindex = -1;\n    /**\n     * Sets whether the alpha slider will be shown.\n     */\n\n    this.opacity = true;\n    /**\n     * Sets the disabled state of the ColorInput.\n     */\n\n    this.disabled = false;\n    /**\n     * Sets the read-only state of the ColorInput.\n     */\n\n    this.readonly = false;\n    /**\n     * Emits a parsed rgba string color.\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Emits when the user tabs out of the last focusable input.\n     */\n\n    this.tabOut = new EventEmitter();\n    this.colorInputClass = true;\n    /**\n     * The rgba inputs values.\n     */\n\n    this.rgba = {};\n    this.subscriptions = new Subscription();\n  }\n  /**\n   * Indicates whether any of the inputs are focused.\n   */\n\n\n  get isFocused() {\n    if (!(isDocumentAvailable() && isPresent(this.host))) {\n      return false;\n    }\n\n    const activeElement = document.activeElement;\n    return this.host.nativeElement.contains(activeElement);\n  }\n  /**\n   * Indicates whether any of the rgba inputs have value.\n   */\n\n\n  get rgbaInputValid() {\n    return Object.keys(this.rgba).every(key => isPresent(this.rgba[key]));\n  }\n\n  ngAfterViewInit() {\n    this.initDomEvents();\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (isPresent(changes.value) && !this.isFocused) {\n      this.hex = parseColor(this.value, 'hex', this.opacity);\n      this.rgba = getRGBA(this.value);\n      this.rgba.a = parseColor(this.value, 'rgba', this.opacity) ? this.rgba.a : 1;\n    }\n  }\n\n  get formatButtonTitle() {\n    return this.localizationService.get('formatButton');\n  }\n\n  handleRgbaValueChange() {\n    const color = getColorFromRGBA(this.rgba);\n\n    if (!this.rgbaInputValid || color === this.value) {\n      return;\n    }\n\n    this.value = color;\n    this.rgba = getRGBA(this.value);\n    this.hex = parseColor(color, 'hex', this.opacity);\n    this.valueChange.emit(color);\n  }\n\n  handleHexValueChange(hex) {\n    this.hex = hex;\n    const color = parseColor(hex, 'rgba', this.opacity);\n\n    if (!isPresent(color) || color === this.value) {\n      return;\n    }\n\n    this.value = color;\n    this.rgba = getRGBA(color);\n    this.valueChange.emit(color);\n  }\n\n  handleRgbaInputBlur() {\n    if (!this.rgbaInputValid) {\n      this.rgba = getRGBA(this.value);\n    }\n  }\n\n  handleHexInputBlur() {\n    this.hex = parseColor(this.value, 'hex', this.opacity);\n  }\n\n  focusLast() {\n    this.lastInput().focus();\n  }\n\n  onTab() {\n    if (this.opacity) {\n      return;\n    }\n  }\n\n  toggleFormatView() {\n    this.formatView = this.formatView === 'hex' ? 'rgba' : 'hex';\n  }\n\n  initDomEvents() {\n    if (!this.host) {\n      return;\n    }\n\n    this.subscriptions.add(this.renderer.listen(this.toggleFormatButton.nativeElement, 'click', () => this.toggleFormatView()));\n  }\n\n  lastInput() {\n    var _a;\n\n    return ((_a = this.hexInput) === null || _a === void 0 ? void 0 : _a.nativeElement) || this.opacityInput || this.blueInput;\n  }\n\n}\n\nColorInputComponent.ɵfac = function ColorInputComponent_Factory(t) {\n  return new (t || ColorInputComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nColorInputComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColorInputComponent,\n  selectors: [[\"kendo-colorinput\"]],\n  viewQuery: function ColorInputComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c48, 5);\n      i0.ɵɵviewQuery(_c49, 5);\n      i0.ɵɵviewQuery(_c50, 5);\n      i0.ɵɵviewQuery(_c51, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.opacityInput = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.hexInput = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.blueInput = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toggleFormatButton = _t.first);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function ColorInputComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-colorgradient-inputs\", ctx.colorInputClass)(\"k-hstack\", ctx.colorInputClass);\n    }\n  },\n  inputs: {\n    focusableId: \"focusableId\",\n    formatView: \"formatView\",\n    tabindex: \"tabindex\",\n    value: \"value\",\n    opacity: \"opacity\",\n    disabled: \"disabled\",\n    readonly: \"readonly\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    tabOut: \"tabOut\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 6,\n  vars: 6,\n  consts: [[1, \"k-vstack\"], [\"type\", \"button\", 1, \"k-colorgradient-toggle-mode\", \"k-button\", \"k-button-md\", \"k-button-flat\", \"k-button-flat-base\", \"k-icon-button\", 3, \"disabled\", \"tabindex\"], [\"toggleFormatButton\", \"\"], [1, \"k-button-icon\", \"k-icon\", \"k-i-caret-alt-expand\"], [\"class\", \"k-vstack\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"k-input\", \"k-textbox\", \"k-input-solid\", \"k-input-md\", \"k-rounded-md\", \"k-hex-value\", 3, \"id\", \"disabled\", \"readonly\", \"value\", \"tabindex\", \"blur\", \"input\", \"keydown.tab\"], [\"hexInput\", \"\"], [1, \"k-colorgradient-input-label\", 3, \"for\"], [\"kendoAdditionalNumericLabel\", \"red\", 3, \"localizationService\", \"disabled\", \"readonly\", \"tabindex\", \"min\", \"max\", \"value\", \"autoCorrect\", \"spinners\", \"format\", \"decimals\", \"valueChange\", \"blur\"], [\"red\", \"\"], [\"kendoAdditionalNumericLabel\", \"green\", 3, \"localizationService\", \"disabled\", \"readonly\", \"tabindex\", \"min\", \"max\", \"value\", \"autoCorrect\", \"spinners\", \"format\", \"decimals\", \"valueChange\", \"blur\"], [\"green\", \"\"], [\"kendoAdditionalNumericLabel\", \"blue\", 3, \"localizationService\", \"disabled\", \"readonly\", \"tabindex\", \"min\", \"max\", \"value\", \"autoCorrect\", \"spinners\", \"format\", \"decimals\", \"valueChange\", \"blur\", \"keydown.tab\"], [\"blue\", \"\"], [\"kendoAdditionalNumericLabel\", \"alpha\", 3, \"localizationService\", \"disabled\", \"readonly\", \"tabindex\", \"min\", \"max\", \"value\", \"autoCorrect\", \"spinners\", \"step\", \"format\", \"decimals\", \"valueChange\", \"blur\", \"keydown.tab\"], [\"opacityInput\", \"\", \"alpha\", \"\"]],\n  template: function ColorInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"button\", 1, 2);\n      i0.ɵɵelement(3, \"span\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, ColorInputComponent_div_4_Template, 5, 6, \"div\", 4);\n      i0.ɵɵtemplate(5, ColorInputComponent_ng_container_5_Template, 17, 37, \"ng-container\", 5);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"tabindex\", ctx.tabindex.toString());\n      i0.ɵɵattribute(\"aria-label\", ctx.formatButtonTitle)(\"title\", ctx.formatButtonTitle);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.formatView === \"hex\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.formatView === \"rgba\");\n    }\n  },\n  directives: [i1$1.NgIf, NumericTextBoxComponent, NumericLabelDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColorInputComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-colorinput',\n      template: `\n        <div class=\"k-vstack\">\n            <button #toggleFormatButton\n                class=\"k-colorgradient-toggle-mode k-button k-button-md k-button-flat k-button-flat-base k-icon-button\"\n                [attr.aria-label]=\"formatButtonTitle\"\n                [attr.title]=\"formatButtonTitle\"\n                [disabled]=\"disabled\"\n                [tabindex]=\"tabindex.toString()\"\n                type=\"button\"\n            >\n                <span class=\"k-button-icon k-icon k-i-caret-alt-expand\"></span>\n            </button>\n        </div>\n        <div *ngIf=\"formatView === 'hex'\" class=\"k-vstack\">\n            <input\n                #hexInput\n                [id]=\"focusableId\"\n                class=\"k-input k-textbox k-input-solid k-input-md k-rounded-md k-hex-value\"\n                [disabled]=\"disabled\"\n                [readonly]=\"readonly\"\n                [value]=\"hex || ''\"\n                (blur)=\"handleHexInputBlur()\"\n                (input)=\"handleHexValueChange(hexInput.value)\"\n                [tabindex]=\"tabindex.toString()\"\n                (keydown.tab)=\"$event.preventDefault(); tabOut.emit();\"\n            />\n            <label [for]=\"focusableId\" class=\"k-colorgradient-input-label\">HEX</label>\n        </div>\n        <ng-container *ngIf=\"formatView === 'rgba'\">\n            <div class=\"k-vstack\">\n                <kendo-numerictextbox\n                    #red\n                    kendoAdditionalNumericLabel=\"red\"\n                    [localizationService]=\"localizationService\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [tabindex]=\"tabindex\"\n                    [min]=\"0\"\n                    [max]=\"255\"\n                    [(value)]=\"rgba.r\"\n                    [autoCorrect]=\"true\"\n                    [spinners]=\"false\"\n                    [format]=\"'n'\"\n                    [decimals]=\"0\"\n                    (blur)=\"handleRgbaInputBlur()\"\n                    (valueChange)=\"handleRgbaValueChange()\">\n                </kendo-numerictextbox>\n                <label [for]=\"red.focusableId\" class=\"k-colorgradient-input-label\">R</label>\n            </div>\n            <div class=\"k-vstack\">\n                <kendo-numerictextbox\n                    #green\n                    kendoAdditionalNumericLabel=\"green\"\n                    [localizationService]=\"localizationService\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [tabindex]=\"tabindex\"\n                    [min]=\"0\"\n                    [max]=\"255\"\n                    [(value)]=\"rgba.g\"\n                    [autoCorrect]=\"true\"\n                    [spinners]=\"false\"\n                    [format]=\"'n'\"\n                    [decimals]=\"0\"\n                    (blur)=\"handleRgbaInputBlur()\"\n                    (valueChange)=\"handleRgbaValueChange()\">\n                </kendo-numerictextbox>\n                <label [for]=\"green.focusableId\" class=\"k-colorgradient-input-label\">G</label>\n            </div>\n            <div class=\"k-vstack\">\n                <kendo-numerictextbox\n                    #blue\n                    kendoAdditionalNumericLabel=\"blue\"\n                    [localizationService]=\"localizationService\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [tabindex]=\"tabindex\"\n                    [min]=\"0\"\n                    [max]=\"255\"\n                    [(value)]=\"rgba.b\"\n                    [autoCorrect]=\"true\"\n                    [spinners]=\"false\"\n                    [format]=\"'n'\"\n                    [decimals]=\"0\"\n                    (blur)=\"handleRgbaInputBlur()\"\n                    (valueChange)=\"handleRgbaValueChange()\"\n                    (keydown.tab)=\"onTab()\">\n                </kendo-numerictextbox>\n                <label [for]=\"blue.focusableId\" class=\"k-colorgradient-input-label\">B</label>\n            </div>\n            <div class=\"k-vstack\" *ngIf=\"opacity\">\n                <kendo-numerictextbox  #opacityInput\n                    #alpha\n                    kendoAdditionalNumericLabel=\"alpha\"\n                    [localizationService]=\"localizationService\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [tabindex]=\"tabindex\"\n                    [min]=\"0\"\n                    [max]=\"1\"\n                    [(value)]=\"rgba.a\"\n                    [autoCorrect]=\"true\"\n                    [spinners]=\"false\"\n                    [step]=\"0.01\"\n                    [format]=\"'n2'\"\n                    [decimals]=\"2\"\n                    (blur)=\"handleRgbaInputBlur()\"\n                    (valueChange)=\"handleRgbaValueChange()\"\n                    (keydown.tab)=\"$event.preventDefault(); tabOut.emit();\">\n                </kendo-numerictextbox>\n                <label [for]=\"alpha.focusableId\" class=\"k-colorgradient-input-label\">A</label>\n            </div>\n        </ng-container>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.LocalizationService\n    }];\n  }, {\n    focusableId: [{\n      type: Input\n    }],\n    formatView: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    tabOut: [{\n      type: Output\n    }],\n    colorInputClass: [{\n      type: HostBinding,\n      args: ['class.k-colorgradient-inputs']\n    }, {\n      type: HostBinding,\n      args: ['class.k-hstack']\n    }],\n    opacityInput: [{\n      type: ViewChild,\n      args: ['opacityInput']\n    }],\n    hexInput: [{\n      type: ViewChild,\n      args: ['hexInput']\n    }],\n    blueInput: [{\n      type: ViewChild,\n      args: ['blueInput']\n    }],\n    toggleFormatButton: [{\n      type: ViewChild,\n      args: ['toggleFormatButton', {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass ContrastValidationComponent {\n  constructor(localization) {\n    this.localization = localization;\n  }\n\n  get passMessage() {\n    return this.localization.get('passContrast');\n  }\n\n  get failMessage() {\n    return this.localization.get('failContrast');\n  }\n\n  get contrastText() {\n    let ratio = this.type === 'AA' ? AA_RATIO : AAA_RATIO;\n    return `${this.type}: ${ratio.toFixed(1)}`;\n  }\n\n}\n\nContrastValidationComponent.ɵfac = function ContrastValidationComponent_Factory(t) {\n  return new (t || ContrastValidationComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nContrastValidationComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ContrastValidationComponent,\n  selectors: [[\"\", \"kendoContrastValidation\", \"\"]],\n  inputs: {\n    type: \"type\",\n    pass: \"pass\",\n    value: \"value\"\n  },\n  attrs: _c52,\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"class\", \"k-contrast-validation k-text-success\", 4, \"ngIf\"], [\"class\", \"k-contrast-validation k-text-error\", 4, \"ngIf\"], [1, \"k-contrast-validation\", \"k-text-success\"], [1, \"k-icon\", \"k-i-check\"], [1, \"k-contrast-validation\", \"k-text-error\"], [1, \"k-icon\", \"k-i-x\"]],\n  template: function ContrastValidationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ContrastValidationComponent_ng_container_2_Template, 3, 2, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.contrastText);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.value);\n    }\n  },\n  directives: [i1$1.NgIf],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContrastValidationComponent, [{\n    type: Component,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/component-selector\n      selector: '[kendoContrastValidation]',\n      template: `\n        <span>{{contrastText}}</span>\n        <ng-container *ngIf=\"value\">\n            <span class=\"k-contrast-validation k-text-success\" *ngIf=\"pass\">\n                {{passMessage}}\n                <span class=\"k-icon k-i-check\"></span>\n            </span>\n            <span class=\"k-contrast-validation k-text-error\" *ngIf=\"!pass\">\n                {{failMessage}}\n                <span class=\"k-icon k-i-x\"></span>\n            </span>\n        </ng-container>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, {\n    type: [{\n      type: Input\n    }],\n    pass: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass ContrastComponent {\n  constructor(localization) {\n    this.localization = localization;\n  }\n\n  get formatedRatio() {\n    return this.contrastRatio.toFixed(2);\n  }\n\n  get contrastRatioText() {\n    return `${this.localization.get('contrastRatio')}: ${this.value ? this.formatedRatio : 'n/a'}`;\n  }\n\n  get satisfiesAACondition() {\n    return this.contrastRatio >= AA_RATIO;\n  }\n\n  get satisfiesAAACondition() {\n    return this.contrastRatio >= AAA_RATIO;\n  }\n\n  get contrastRatio() {\n    let contrast = getContrastFromTwoRGBAs(getRGBA(this.value), getRGBA(this.ratio));\n    return contrast;\n  }\n\n}\n\nContrastComponent.ɵfac = function ContrastComponent_Factory(t) {\n  return new (t || ContrastComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nContrastComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ContrastComponent,\n  selectors: [[\"\", \"kendoContrastTool\", \"\"]],\n  inputs: {\n    value: \"value\",\n    ratio: \"ratio\"\n  },\n  attrs: _c53,\n  decls: 6,\n  vars: 6,\n  consts: [[1, \"k-contrast-ratio\"], [1, \"k-contrast-ratio-text\"], [4, \"ngIf\"], [\"kendoContrastValidation\", \"\", \"type\", \"AA\", 3, \"value\", \"pass\"], [\"kendoContrastValidation\", \"\", \"type\", \"AAA\", 3, \"value\", \"pass\"], [\"class\", \"k-contrast-validation k-text-success\", 4, \"ngIf\"], [\"class\", \"k-contrast-validation k-text-error\", 4, \"ngIf\"], [1, \"k-contrast-validation\", \"k-text-success\"], [1, \"k-icon\", \"k-i-check\"], [\"class\", \"k-icon k-i-check\", 4, \"ngIf\"], [1, \"k-contrast-validation\", \"k-text-error\"], [1, \"k-icon\", \"k-i-x\"]],\n  template: function ContrastComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"span\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, ContrastComponent_ng_container_3_Template, 3, 2, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"div\", 3);\n      i0.ɵɵelement(5, \"div\", 4);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.contrastRatioText);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.value);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"value\", ctx.value)(\"pass\", ctx.satisfiesAACondition);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"value\", ctx.value)(\"pass\", ctx.satisfiesAAACondition);\n    }\n  },\n  directives: [i1$1.NgIf, ContrastValidationComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContrastComponent, [{\n    type: Component,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/component-selector\n      selector: '[kendoContrastTool]',\n      template: `\n        <div class=\"k-contrast-ratio\">\n            <span class=\"k-contrast-ratio-text\">{{contrastRatioText}}</span>\n            <ng-container *ngIf=\"value\">\n                <span class=\"k-contrast-validation k-text-success\" *ngIf=\"satisfiesAACondition\">\n                    <span class=\"k-icon k-i-check\"></span>\n                    <span class=\"k-icon k-i-check\" *ngIf=\"satisfiesAAACondition\"></span>\n                </span>\n                <span class=\"k-contrast-validation k-text-error\" *ngIf=\"!satisfiesAACondition\">\n                    <span class=\"k-icon k-i-x\"></span>\n                </span>\n            </ng-container>\n        </div>\n        <div kendoContrastValidation\n            type=\"AA\"\n            [value]=\"value\"\n            [pass]=\"satisfiesAACondition\">\n        </div>\n        <div kendoContrastValidation\n            type=\"AAA\"\n            [value]=\"value\"\n            [pass]=\"satisfiesAAACondition\">\n        </div>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    ratio: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass ColorPickerMessages extends ComponentMessages {}\n\nColorPickerMessages.ɵfac = /* @__PURE__ */function () {\n  let ɵColorPickerMessages_BaseFactory;\n  return function ColorPickerMessages_Factory(t) {\n    return (ɵColorPickerMessages_BaseFactory || (ɵColorPickerMessages_BaseFactory = i0.ɵɵgetInheritedFactory(ColorPickerMessages)))(t || ColorPickerMessages);\n  };\n}();\n\nColorPickerMessages.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ColorPickerMessages,\n  selectors: [[\"kendo-colorpicker-messages-base\"]],\n  inputs: {\n    colorPaletteNoColor: \"colorPaletteNoColor\",\n    colorGradientNoColor: \"colorGradientNoColor\",\n    flatColorPickerNoColor: \"flatColorPickerNoColor\",\n    colorPickerNoColor: \"colorPickerNoColor\",\n    colorGradientHandle: \"colorGradientHandle\",\n    clearButton: \"clearButton\",\n    hueSliderHandle: \"hueSliderHandle\",\n    opacitySliderHandle: \"opacitySliderHandle\",\n    hexInputPlaceholder: \"hexInputPlaceholder\",\n    redInputPlaceholder: \"redInputPlaceholder\",\n    greenInputPlaceholder: \"greenInputPlaceholder\",\n    blueInputPlaceholder: \"blueInputPlaceholder\",\n    alphaInputPlaceholder: \"alphaInputPlaceholder\",\n    redChannelLabel: \"redChannelLabel\",\n    greenChannelLabel: \"greenChannelLabel\",\n    blueChannelLabel: \"blueChannelLabel\",\n    alphaChannelLabel: \"alphaChannelLabel\",\n    passContrast: \"passContrast\",\n    failContrast: \"failContrast\",\n    contrastRatio: \"contrastRatio\",\n    previewColor: \"previewColor\",\n    revertSelection: \"revertSelection\",\n    gradientView: \"gradientView\",\n    paletteView: \"paletteView\",\n    formatButton: \"formatButton\",\n    applyButton: \"applyButton\",\n    cancelButton: \"cancelButton\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColorPickerMessages, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: 'kendo-colorpicker-messages-base'\n    }]\n  }], null, {\n    colorPaletteNoColor: [{\n      type: Input\n    }],\n    colorGradientNoColor: [{\n      type: Input\n    }],\n    flatColorPickerNoColor: [{\n      type: Input\n    }],\n    colorPickerNoColor: [{\n      type: Input\n    }],\n    colorGradientHandle: [{\n      type: Input\n    }],\n    clearButton: [{\n      type: Input\n    }],\n    hueSliderHandle: [{\n      type: Input\n    }],\n    opacitySliderHandle: [{\n      type: Input\n    }],\n    hexInputPlaceholder: [{\n      type: Input\n    }],\n    redInputPlaceholder: [{\n      type: Input\n    }],\n    greenInputPlaceholder: [{\n      type: Input\n    }],\n    blueInputPlaceholder: [{\n      type: Input\n    }],\n    alphaInputPlaceholder: [{\n      type: Input\n    }],\n    redChannelLabel: [{\n      type: Input\n    }],\n    greenChannelLabel: [{\n      type: Input\n    }],\n    blueChannelLabel: [{\n      type: Input\n    }],\n    alphaChannelLabel: [{\n      type: Input\n    }],\n    passContrast: [{\n      type: Input\n    }],\n    failContrast: [{\n      type: Input\n    }],\n    contrastRatio: [{\n      type: Input\n    }],\n    previewColor: [{\n      type: Input\n    }],\n    revertSelection: [{\n      type: Input\n    }],\n    gradientView: [{\n      type: Input\n    }],\n    paletteView: [{\n      type: Input\n    }],\n    formatButton: [{\n      type: Input\n    }],\n    applyButton: [{\n      type: Input\n    }],\n    cancelButton: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass LocalizedColorPickerMessagesDirective extends ColorPickerMessages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n}\n\nLocalizedColorPickerMessagesDirective.ɵfac = function LocalizedColorPickerMessagesDirective_Factory(t) {\n  return new (t || LocalizedColorPickerMessagesDirective)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nLocalizedColorPickerMessagesDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LocalizedColorPickerMessagesDirective,\n  selectors: [[\"\", \"kendoColorPickerLocalizedMessages\", \"\"], [\"\", \"kendoFlatColorPickerLocalizedMessages\", \"\"], [\"\", \"kendoColorGradientLocalizedMessages\", \"\"], [\"\", \"kendoColorPaletteLocalizedMessages\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ColorPickerMessages,\n    useExisting: forwardRef(() => LocalizedColorPickerMessagesDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LocalizedColorPickerMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: ColorPickerMessages,\n        useExisting: forwardRef(() => LocalizedColorPickerMessagesDirective)\n      }],\n      selector: '[kendoColorPickerLocalizedMessages], [kendoFlatColorPickerLocalizedMessages], [kendoColorGradientLocalizedMessages], [kendoColorPaletteLocalizedMessages]'\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n\nlet serial$3 = 0;\n/**\n * The ColorGradient component enables smooth color transitions and provides options for selecting specific colors over the drag handle.\n * The ColorGradient is independently used by `kendo-colorpicker` and can be directly added to the page.\n */\n\nclass ColorGradientComponent {\n  constructor(host, ngZone, renderer, cdr, localizationService, injector) {\n    this.host = host;\n    this.ngZone = ngZone;\n    this.renderer = renderer;\n    this.cdr = cdr;\n    this.localizationService = localizationService;\n    this.injector = injector;\n    this.hostClasses = true;\n    this.ariaRole = 'textbox';\n    /**\n     * @hidden\n     */\n\n    this.id = `k-colorgradient-${serial$3++}`;\n    /**\n     * Defines whether the alpha slider will be displayed.\n     *\n     * @default true\n     */\n\n    this.opacity = true;\n    /**\n     * Sets the disabled state of the ColorGradient.\n     *\n     * @default false\n     */\n\n    this.disabled = false;\n    /**\n     * Sets the read-only state of the ColorGradient.\n     *\n     * @default false\n     */\n\n    this.readonly = false;\n    /**\n     * Specifies whether the ColorGradient should display a 'Clear color' button.\n     *\n     * @default false\n     */\n\n    this.clearButton = false;\n    /**\n     * Determines the delay time (in milliseconds) before the value is changed on handle drag. A value of 0 indicates no delay.\n     *\n     * @default 0\n     */\n\n    this.delay = 0;\n    /**\n     * Specifies the output format of the ColorGradientComponent.\n     * The input value may be in a different format, but it will be parsed into the output `format`\n     * after the component processes it.\n     *\n     * The supported values are:\n     * * (Default) `rgba`\n     * * `hex`\n     */\n\n    this.format = DEFAULT_OUTPUT_FORMAT;\n    /**\n     * Fires each time the user selects a new color.\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.backgroundColor = DEFAULT_GRADIENT_BACKGROUND_COLOR;\n    /**\n     * @hidden\n     *\n     * Represents the currently selected `hue`, `saturation`, `value`, and `alpha` values.\n     * The values are initially set in `ngOnInit` or in `ngOnChanges` and are\n     * updated on moving the drag handle or the sliders.\n     */\n\n    this.hsva = new BehaviorSubject({});\n    /**\n     * Determines the step (in pixels) when moving the gradient drag handle using the keyboard arrow keys.\n     *\n     * @default 5\n     */\n\n    this.gradientSliderStep = DRAGHANDLE_MOVE_SPEED;\n    /**\n     * Determines the step (in pixels) when moving the gradient drag handle using the keyboard arrow keys while holding the shift key.\n     *\n     * @default 2\n     */\n\n    this.gradientSliderSmallStep = DRAGHANDLE_MOVE_SPEED_SMALL_STEP;\n    /**\n     * @hidden\n     */\n\n    this.internalNavigation = false;\n    this._tabindex = 0;\n    this.listeners = [];\n    this.hueSliderTouched = false;\n    this.alphaSliderTouched = false;\n    this.updateValues = new Subject();\n    this.hsvHandleCoordinates = {\n      x: 0,\n      y: 0\n    };\n\n    this.notifyNgChanged = () => {};\n\n    this.notifyNgTouched = () => {};\n\n    validatePackage(packageMetadata);\n    this.dynamicRTLSubscription = localizationService.changes.subscribe(({\n      rtl\n    }) => {\n      this.direction = rtl ? 'rtl' : 'ltr';\n    });\n  }\n\n  get readonlyAttribute() {\n    return this.readonly;\n  }\n\n  get disabledClass() {\n    return this.disabled;\n  }\n\n  get gradientId() {\n    return this.id;\n  }\n\n  get hostTabindex() {\n    var _a;\n\n    return ((_a = this.tabindex) === null || _a === void 0 ? void 0 : _a.toString()) || '0';\n  }\n\n  get isControlInvalid() {\n    var _a, _b;\n\n    return (_b = (_a = this.control) === null || _a === void 0 ? void 0 : _a.invalid) === null || _b === void 0 ? void 0 : _b.toString();\n  }\n\n  get isDisabled() {\n    var _a;\n\n    return ((_a = this.disabled) === null || _a === void 0 ? void 0 : _a.toString()) || undefined;\n  }\n  /**\n   * @hidden\n   */\n\n\n  enterHandler(event) {\n    if (event.target !== this.host.nativeElement) {\n      return;\n    }\n\n    this.internalNavigation = true;\n    this.gradientDragHandle.nativeElement.focus();\n  }\n  /**\n   * @hidden\n   */\n\n\n  escapeHandler(event) {\n    if (!this.host.nativeElement.matches(':focus')) {\n      event.stopImmediatePropagation();\n    }\n\n    this.internalNavigation = false;\n    this.host.nativeElement.focus();\n  }\n  /**\n   * @hidden\n   */\n\n\n  focusHandler(ev) {\n    this.internalNavigation = ev.target !== this.host.nativeElement;\n  }\n  /**\n   * Specifies the value of the initially selected color.\n   */\n\n\n  set value(value) {\n    this._value = parseColor(value, this.format, this.opacity);\n  }\n\n  get value() {\n    return this._value;\n  }\n  /**\n   * Enables the color contrast tool. Accepts the background color that will be compared to the selected value.\n   * The tool will calculate the contrast ratio between the two colors.\n   */\n\n\n  set contrastTool(value) {\n    this._contrastTool = parseColor(value, this.format, this.opacity);\n  }\n\n  get contrastTool() {\n    return this._contrastTool;\n  }\n  /**\n   * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n   *\n   * @default 0\n   */\n\n\n  set tabindex(value) {\n    if (isPresent(value)) {\n      const tabindex = Number(value);\n      this._tabindex = !isNaN(tabindex) ? tabindex : 0;\n    } else {\n      // Allows removal of the tabindex attribute\n      this._tabindex = value;\n    }\n  }\n\n  get tabindex() {\n    return !this.disabled ? this._tabindex : undefined;\n  }\n  /**\n   * Indicates whether the ColorGradient or any of its content is focused.\n   */\n\n\n  get isFocused() {\n    if (!(isDocumentAvailable() && isPresent(this.host))) {\n      return false;\n    }\n\n    return this.host.nativeElement === document.activeElement || this.host.nativeElement.contains(document.activeElement);\n  }\n  /**\n   * @hidden\n   */\n\n\n  get alphaSliderValue() {\n    // setting the initial value to undefined to force the slider to recalculate the height of the slider track on the next cdr run\n    if (!(isPresent(this.hsva.value) && isPresent(this.hsva.value.a))) {\n      return;\n    }\n\n    return this.hsva.value.a * 100;\n  }\n\n  get gradientRect() {\n    return this.gradientWrapper.nativeElement.getBoundingClientRect();\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hsvSliderValueText() {\n    return `X: ${this.hsvHandleCoordinates.x} Y: ${this.hsvHandleCoordinates.y}`;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get contrastToolVisible() {\n    return this.contrastTool && this.contrastTool.length > 0;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get innerTabIndex() {\n    return this.internalNavigation ? 0 : -1;\n  }\n\n  ngOnInit() {\n    this.control = this.injector.get(NgControl, null);\n  }\n\n  ngAfterViewInit() {\n    this.updateUI();\n    this.cdr.detectChanges();\n    this.addEventListeners();\n    this.subscribeChanges();\n  }\n\n  ngOnChanges(changes) {\n    if (isChanged('value', changes) && !this.isFocused) {\n      this.updateUI();\n    }\n\n    if (isChanged('delay', changes)) {\n      this.unsubscribeChanges();\n      this.subscribeChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this.listeners.forEach(removeListener => removeListener());\n\n    if (this.dynamicRTLSubscription) {\n      this.dynamicRTLSubscription.unsubscribe();\n    }\n\n    this.unsubscribeChanges();\n  }\n  /**\n   * Focuses the component.\n   */\n\n\n  focus() {\n    if (this.disabled) {\n      return;\n    }\n\n    this.gradientDragHandle.nativeElement.focus();\n  }\n  /**\n   * @hidden\n   */\n\n\n  reset() {\n    this.handleValueChange(undefined);\n    this.updateUI();\n    this.host.nativeElement.focus();\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleDragPress(args) {\n    if (this.disabled || this.readonly || !isPresent(args.originalEvent)) {\n      return;\n    }\n\n    this.focus();\n    args.originalEvent.preventDefault();\n  }\n  /**\n   * @hidden\n   */\n\n\n  onHandleDrag(args) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    this.renderer.addClass(this.gradientWrapper.nativeElement, 'k-dragging');\n    this.changePosition(args);\n  }\n  /**\n   * @hidden\n   */\n\n\n  onHandleRelease() {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    this.renderer.removeClass(this.gradientWrapper.nativeElement, 'k-dragging');\n    this.handleValueChange(getColorFromHSV(this.hsva.value, this.format, this.opacity));\n  }\n  /**\n   * @hidden\n   */\n\n\n  onKeyboardAction(args) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    if (args.key && args.key.indexOf('Arrow') !== -1) {\n      args.preventDefault();\n      const dragHandleElement = this.gradientDragHandle.nativeElement;\n      this.renderer.addClass(this.gradientWrapper.nativeElement, 'k-dragging');\n      let keyboardMoveX = 0;\n      let keyboardMoveY = 0;\n      const shiftKey = args.shiftKey;\n\n      switch (args.key) {\n        case 'ArrowRight':\n          keyboardMoveX = shiftKey ? this.gradientSliderSmallStep : this.gradientSliderStep;\n          break;\n\n        case 'ArrowLeft':\n          keyboardMoveX = shiftKey ? -this.gradientSliderSmallStep : -this.gradientSliderStep;\n          break;\n\n        case 'ArrowUp':\n          keyboardMoveY = shiftKey ? -this.gradientSliderSmallStep : -this.gradientSliderStep;\n          break;\n\n        case 'ArrowDown':\n          keyboardMoveY = shiftKey ? this.gradientSliderSmallStep : this.gradientSliderStep;\n          break;\n\n        default:\n          break;\n      }\n\n      const newY = parseInt(dragHandleElement.style.top, 10) + keyboardMoveY;\n      const newX = parseInt(dragHandleElement.style.left, 10) + keyboardMoveX;\n      this.renderer.setStyle(dragHandleElement, 'top', `${newY}px`);\n      this.renderer.setStyle(dragHandleElement, 'left', `${newX}px`);\n      this.ngZone.run(() => this.moveDragHandle(newX, newY));\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  changePosition(position) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    this.gradientDragHandle.nativeElement.focus();\n    const gradientRect = this.gradientRect;\n    const newX = position.clientX - gradientRect.left;\n    const newY = position.clientY - gradientRect.top;\n    this.ngZone.run(() => this.moveDragHandle(newX, newY));\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleHueSliderChange(hue) {\n    const hsva = this.hsva.value;\n    hsva.h = hue;\n    this.hsva.next(hsva);\n    this.handleValueChange(getColorFromHSV(this.hsva.value, this.format, this.opacity));\n    this.backgroundColor = getColorFromHue(hue);\n    this.setBackgroundColor(this.backgroundColor);\n    this.setAlphaSliderBackground(this.backgroundColor);\n    this.hueSliderTouched = true;\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleAlphaSliderChange(alpha) {\n    const hsva = this.hsva.value;\n    hsva.a = alpha / 100;\n    this.hsva.next(hsva);\n    this.handleValueChange(getColorFromHSV(this.hsva.value, this.format, this.opacity));\n    this.alphaSliderTouched = true;\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleInputsValueChange(color) {\n    const parsed = parseColor(color, this.format, this.opacity);\n\n    if (this.value !== parsed) {\n      this.handleValueChange(parsed);\n      this.updateUI();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  writeValue(value) {\n    this.value = value;\n\n    if (isPresent(this.gradientWrapper)) {\n      this.updateUI();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnChange(fn) {\n    this.notifyNgChanged = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnTouched(fn) {\n    this.notifyNgTouched = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.cdr.markForCheck();\n    this.disabled = isDisabled;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get colorGradientHandleTitle() {\n    return this.localizationService.get('colorGradientHandle');\n  }\n  /**\n   * @hidden\n   */\n\n\n  get colorGradientHandleAriaLabel() {\n    const parsed = parseColor(this.value, this.format, this.opacity);\n    return `${this.value ? parsed : this.localizationService.get('colorGradientNoColor')}`;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hueSliderTitle() {\n    return this.localizationService.get('hueSliderHandle');\n  }\n  /**\n   * @hidden\n   */\n\n\n  get opacitySliderTitle() {\n    return this.localizationService.get('opacitySliderHandle');\n  }\n  /**\n   * @hidden\n   */\n\n\n  get clearButtonTitle() {\n    return this.localizationService.get('clearButton');\n  }\n  /**\n   * @hidden\n   * Used by the FloatingLabel to determine if the component is empty.\n   */\n\n\n  isEmpty() {\n    return false;\n  }\n\n  moveDragHandle(positionX, positionY) {\n    const gradientRect = this.gradientRect;\n    const gradientRectWidth = gradientRect.width;\n    const gradientRectHeight = gradientRect.height;\n    const top = fitIntoBounds(positionY, 0, gradientRectHeight);\n    const left = fitIntoBounds(positionX, 0, gradientRectWidth);\n    this.setDragHandleElementPosition(top, left);\n    const hsva = this.hsva.value;\n    hsva.s = left / gradientRectWidth;\n    hsva.v = 1 - top / gradientRectHeight;\n    this.hsva.next(hsva);\n    this.updateValues.next(getColorFromHSV(this.hsva.value, this.format, this.opacity));\n    this.setAlphaSliderBackground(getColorFromHSV(Object.assign(Object.assign({}, this.hsva.value), {\n      a: 1\n    }), this.format, this.opacity));\n  }\n\n  handleValueChange(color) {\n    if (this.value === color) {\n      return;\n    }\n\n    this.value = color;\n    this.valueChange.emit(color);\n    this.notifyNgChanged(color);\n    this.setHostElementAriaLabel();\n  }\n\n  setDragHandleElementPosition(top, left) {\n    const dragHandle = this.gradientDragHandle.nativeElement;\n    this.hsvHandleCoordinates = {\n      x: left,\n      y: top\n    };\n    this.renderer.setStyle(dragHandle, 'top', `${top}px`);\n    this.renderer.setStyle(dragHandle, 'left', `${left}px`);\n  }\n\n  setAlphaSliderBackground(backgroundColor) {\n    if (!isPresent(this.alphaSlider)) {\n      return;\n    }\n\n    const sliderTrack = this.alphaSlider.track.nativeElement;\n    this.renderer.setStyle(sliderTrack, 'background', `linear-gradient(to top, transparent, ${backgroundColor})`);\n  }\n\n  setHostElementAriaLabel() {\n    const parsed = parseColor(this.value, this.format, this.opacity);\n    this.renderer.setAttribute(this.host.nativeElement, 'aria-label', `${this.value ? parsed : this.localizationService.get('colorGradientNoColor')}`);\n  }\n\n  setBackgroundColor(color) {\n    this.renderer.setStyle(this.hsvRectangle.nativeElement, 'background', color);\n  }\n\n  updateUI() {\n    if (!isDocumentAvailable()) {\n      return;\n    }\n\n    if (this.hueSliderTouched || this.alphaSliderTouched) {\n      this.hueSliderTouched = false;\n      this.alphaSliderTouched = false;\n      return;\n    }\n\n    this.hsva.next(this.value ? getHSV(this.value) : {\n      h: 0,\n      s: 0,\n      v: 1,\n      a: 1\n    });\n    const gradientRect = this.gradientRect;\n    const top = (1 - this.hsva.value.v) * gradientRect.height;\n    const left = this.hsva.value.s * gradientRect.width;\n    this.setDragHandleElementPosition(top, left);\n    this.backgroundColor = getColorFromHue(this.hsva.value.h);\n    this.setBackgroundColor(this.backgroundColor);\n    this.setAlphaSliderBackground(this.backgroundColor);\n    this.setHostElementAriaLabel();\n  }\n\n  addEventListeners() {\n    this.ngZone.runOutsideAngular(() => {\n      const focusOutListener = this.renderer.listen(this.host.nativeElement, 'focusout', event => {\n        if (!containsFocus(this.host.nativeElement, event.relatedTarget) && isUntouched(this.host)) {\n          this.ngZone.run(() => this.notifyNgTouched());\n        }\n      });\n      const keydownListener = this.renderer.listen(this.gradientDragHandle.nativeElement, 'keydown', event => {\n        this.onKeyboardAction(event);\n      });\n      const keyupListener = this.renderer.listen(this.gradientDragHandle.nativeElement, 'keyup', () => {\n        this.renderer.removeClass(this.gradientWrapper.nativeElement, 'k-dragging');\n\n        if (!this.readonly && !this.disabled) {\n          this.ngZone.run(() => this.handleValueChange(getColorFromHSV(this.hsva.value, this.format, this.opacity)));\n        }\n      });\n      const dragHandleFocusInListener = this.renderer.listen(this.gradientDragHandle.nativeElement, 'focusin', () => {\n        this.renderer.addClass(this.gradientDragHandle.nativeElement, 'k-focus');\n      });\n      const dragHandleFocusOutListener = this.renderer.listen(this.gradientDragHandle.nativeElement, 'focusout', () => {\n        this.renderer.removeClass(this.gradientDragHandle.nativeElement, 'k-focus');\n      });\n      this.listeners.push(focusOutListener, keydownListener, keyupListener, dragHandleFocusInListener, dragHandleFocusOutListener);\n    });\n  }\n\n  subscribeChanges() {\n    this.changeRequestsSubscription = this.updateValues.pipe(throttleTime(this.delay)).subscribe(value => {\n      this.handleValueChange(value);\n    });\n  }\n\n  unsubscribeChanges() {\n    if (this.changeRequestsSubscription) {\n      this.changeRequestsSubscription.unsubscribe();\n    }\n  }\n\n}\n\nColorGradientComponent.ɵfac = function ColorGradientComponent_Factory(t) {\n  return new (t || ColorGradientComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.Injector));\n};\n\nColorGradientComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColorGradientComponent,\n  selectors: [[\"kendo-colorgradient\"]],\n  viewQuery: function ColorGradientComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c54, 5);\n      i0.ɵɵviewQuery(_c55, 5);\n      i0.ɵɵviewQuery(_c56, 5);\n      i0.ɵɵviewQuery(_c57, 5);\n      i0.ɵɵviewQuery(_c58, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.gradientDragHandle = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputs = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.alphaSlider = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.gradientWrapper = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.hsvRectangle = _t.first);\n    }\n  },\n  hostVars: 11,\n  hostBindings: function ColorGradientComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown.enter\", function ColorGradientComponent_keydown_enter_HostBindingHandler($event) {\n        return ctx.enterHandler($event);\n      })(\"keydown.escape\", function ColorGradientComponent_keydown_escape_HostBindingHandler($event) {\n        return ctx.escapeHandler($event);\n      })(\"focusin\", function ColorGradientComponent_focusin_HostBindingHandler($event) {\n        return ctx.focusHandler($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-readonly\", ctx.readonlyAttribute)(\"id\", ctx.gradientId)(\"dir\", ctx.direction)(\"tabindex\", ctx.hostTabindex)(\"role\", ctx.ariaRole)(\"aria-invalid\", ctx.isControlInvalid)(\"aria-disabled\", ctx.isDisabled);\n      i0.ɵɵclassProp(\"k-colorgradient\", ctx.hostClasses)(\"k-disabled\", ctx.disabledClass);\n    }\n  },\n  inputs: {\n    id: \"id\",\n    opacity: \"opacity\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    clearButton: \"clearButton\",\n    delay: \"delay\",\n    value: \"value\",\n    contrastTool: \"contrastTool\",\n    tabindex: \"tabindex\",\n    format: \"format\",\n    gradientSliderStep: \"gradientSliderStep\",\n    gradientSliderSmallStep: \"gradientSliderSmallStep\"\n  },\n  outputs: {\n    valueChange: \"valueChange\"\n  },\n  exportAs: [\"kendoColorGradient\"],\n  features: [i0.ɵɵProvidersFeature([{\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ColorGradientComponent)\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(() => ColorGradientComponent)\n  }, ColorGradientLocalizationService, {\n    provide: LocalizationService,\n    useExisting: ColorGradientLocalizationService\n  }, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.colorgradient'\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 16,\n  vars: 35,\n  consts: function () {\n    let i18n_59;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The aria-label applied to the ColorGradient component when the value is empty.\n       * @meaning kendo.colorgradient.colorGradientNoColor\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_60 = goog.getMsg(\"Colorgradient no color chosen\");\n      i18n_59 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_60;\n    } else {\n      i18n_59 = $localize`:kendo.colorgradient.colorGradientNoColor|The aria-label applied to the ColorGradient component when the value is empty.:Colorgradient no color chosen`;\n    }\n\n    let i18n_61;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title for the gradient color drag handle chooser.\n       * @meaning kendo.colorgradient.colorGradientHandle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_62 = goog.getMsg(\"Choose color\");\n      i18n_61 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_62;\n    } else {\n      i18n_61 = $localize`:kendo.colorgradient.colorGradientHandle|The title for the gradient color drag handle chooser.:Choose color`;\n    }\n\n    let i18n_63;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title for the clear button.\n       * @meaning kendo.colorgradient.clearButton\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_64 = goog.getMsg(\"Clear value\");\n      i18n_63 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_64;\n    } else {\n      i18n_63 = $localize`:kendo.colorgradient.clearButton|The title for the clear button.:Clear value`;\n    }\n\n    let i18n_65;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title for the hue slider handle.\n       * @meaning kendo.colorgradient.hueSliderHandle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_66 = goog.getMsg(\"Set hue\");\n      i18n_65 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_66;\n    } else {\n      i18n_65 = $localize`:kendo.colorgradient.hueSliderHandle|The title for the hue slider handle.:Set hue`;\n    }\n\n    let i18n_67;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title for the opacity slider handle.\n       * @meaning kendo.colorgradient.opacitySliderHandle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_68 = goog.getMsg(\"Set opacity\");\n      i18n_67 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_68;\n    } else {\n      i18n_67 = $localize`:kendo.colorgradient.opacitySliderHandle|The title for the opacity slider handle.:Set opacity`;\n    }\n\n    let i18n_69;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The pass message for the contrast tool.\n       * @meaning kendo.colorgradient.passContrast\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_70 = goog.getMsg(\"Pass\");\n      i18n_69 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_70;\n    } else {\n      i18n_69 = $localize`:kendo.colorgradient.passContrast|The pass message for the contrast tool.:Pass`;\n    }\n\n    let i18n_71;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The fail message for the contrast tool.\n       * @meaning kendo.colorgradient.failContrast\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_72 = goog.getMsg(\"Fail\");\n      i18n_71 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_72;\n    } else {\n      i18n_71 = $localize`:kendo.colorgradient.failContrast|The fail message for the contrast tool.:Fail`;\n    }\n\n    let i18n_73;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The contrast ratio message for the contrast tool.\n       * @meaning kendo.colorgradient.contrastRatio\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_74 = goog.getMsg(\"Contrast ratio\");\n      i18n_73 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_74;\n    } else {\n      i18n_73 = $localize`:kendo.colorgradient.contrastRatio|The contrast ratio message for the contrast tool.:Contrast ratio`;\n    }\n\n    let i18n_75;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The message for the input format toggle button.\n       * @meaning kendo.colorgradient.formatButton\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_76 = goog.getMsg(\"Change color format\");\n      i18n_75 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_76;\n    } else {\n      i18n_75 = $localize`:kendo.colorgradient.formatButton|The message for the input format toggle button.:Change color format`;\n    }\n\n    let i18n_77;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the NumericTextBox representing the red color channel.\n       * @meaning kendo.colorgradient.redChannelLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_78 = goog.getMsg(\"Red channel\");\n      i18n_77 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_78;\n    } else {\n      i18n_77 = $localize`:kendo.colorgradient.redChannelLabel|The label of the NumericTextBox representing the red color channel.:Red channel`;\n    }\n\n    let i18n_79;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the NumericTextBox representing the green color channel.\n       * @meaning kendo.colorgradient.greenChannelLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_80 = goog.getMsg(\"Green channel\");\n      i18n_79 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_80;\n    } else {\n      i18n_79 = $localize`:kendo.colorgradient.greenChannelLabel|The label of the NumericTextBox representing the green color channel.:Green channel`;\n    }\n\n    let i18n_81;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the NumericTextBox representing the blue color channel.\n       * @meaning kendo.colorgradient.blueChannelLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_82 = goog.getMsg(\"Blue channel\");\n      i18n_81 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_82;\n    } else {\n      i18n_81 = $localize`:kendo.colorgradient.blueChannelLabel|The label of the NumericTextBox representing the blue color channel.:Blue channel`;\n    }\n\n    let i18n_83;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the NumericTextBox representing the alpha color channel.\n       * @meaning kendo.colorgradient.alphaChannelLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_84 = goog.getMsg(\"Alpha channel\");\n      i18n_83 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_84;\n    } else {\n      i18n_83 = $localize`:kendo.colorgradient.alphaChannelLabel|The label of the NumericTextBox representing the alpha color channel.:Alpha channel`;\n    }\n\n    let i18n_85;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the NumericTextBox representing the red color channel.\n       * @meaning kendo.colorgradient.redChannelLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_86 = goog.getMsg(\"R\");\n      i18n_85 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_86;\n    } else {\n      i18n_85 = $localize`:kendo.colorgradient.redChannelLabel|The label of the NumericTextBox representing the red color channel.:R`;\n    }\n\n    let i18n_87;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The placeholder for the green color input.\n       * @meaning kendo.colorgradient.greenInputPlaceholder\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_88 = goog.getMsg(\"G\");\n      i18n_87 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_88;\n    } else {\n      i18n_87 = $localize`:kendo.colorgradient.greenInputPlaceholder|The placeholder for the green color input.:G`;\n    }\n\n    let i18n_89;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The placeholder for the blue color input.\n       * @meaning kendo.colorgradient.blueInputPlaceholder\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_90 = goog.getMsg(\"B\");\n      i18n_89 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_90;\n    } else {\n      i18n_89 = $localize`:kendo.colorgradient.blueInputPlaceholder|The placeholder for the blue color input.:B`;\n    }\n\n    let i18n_91;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The placeholder for the HEX color input.\n       * @meaning kendo.colorgradient.hexInputPlaceholder\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_92 = goog.getMsg(\"HEX\");\n      i18n_91 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_92;\n    } else {\n      i18n_91 = $localize`:kendo.colorgradient.hexInputPlaceholder|The placeholder for the HEX color input.:HEX`;\n    }\n\n    return [[\"kendoColorGradientLocalizedMessages\", \"\", \"colorGradientNoColor\", i18n_59, \"colorGradientHandle\", i18n_61, \"clearButton\", i18n_63, \"hueSliderHandle\", i18n_65, \"opacitySliderHandle\", i18n_67, \"passContrast\", i18n_69, \"failContrast\", i18n_71, \"contrastRatio\", i18n_73, \"formatButton\", i18n_75, \"redChannelLabel\", i18n_77, \"greenChannelLabel\", i18n_79, \"blueChannelLabel\", i18n_81, \"alphaChannelLabel\", i18n_83, \"redChannelLabel\", i18n_85, \"greenInputPlaceholder\", i18n_87, \"blueInputPlaceholder\", i18n_89, \"hexInputPlaceholder\", i18n_91], [1, \"k-colorgradient-canvas\", \"k-hstack\"], [1, \"k-hsv-rectangle\"], [\"hsvRectangle\", \"\"], [\"kendoDraggable\", \"\", 1, \"k-hsv-gradient\", 3, \"click\", \"kendoPress\", \"kendoDrag\", \"kendoRelease\"], [\"gradientWrapper\", \"\"], [\"role\", \"slider\", 1, \"k-hsv-draghandle\", \"k-draghandle\", 3, \"tabindex\", \"keydown.shift.tab\"], [\"gradientDragHandle\", \"\"], [\"kendoColorContrastSvg\", \"\", \"class\", \"k-color-contrast-svg\", \"xmlns\", \"http://www.w3.org/2000/svg\", 3, \"wrapper\", \"hsva\", \"backgroundColor\", 4, \"ngIf\"], [\"class\", \"k-clear-color k-button k-button-md k-button-flat k-button-flat-base k-button-icon\", \"role\", \"button\", 3, \"tabindex\", \"click\", \"keydown.enter\", \"keydown.space\", 4, \"ngIf\"], [\"tickPlacement\", \"none\", 1, \"k-hue-slider\", \"k-colorgradient-slider\", 3, \"ngClass\", \"dragHandleTitle\", \"tabindex\", \"disabled\", \"readonly\", \"showButtons\", \"vertical\", \"min\", \"max\", \"value\", \"smallStep\", \"largeStep\", \"valueChange\"], [\"class\", \"k-alpha-slider k-colorgradient-slider\", \"tickPlacement\", \"none\", 3, \"tabindex\", \"ngClass\", \"dragHandleTitle\", \"disabled\", \"readonly\", \"showButtons\", \"vertical\", \"min\", \"max\", \"smallStep\", \"largeStep\", \"value\", \"valueChange\", 4, \"ngIf\"], [3, \"tabindex\", \"opacity\", \"formatView\", \"value\", \"disabled\", \"readonly\", \"valueChange\", \"tabOut\"], [\"inputs\", \"\"], [\"class\", \"k-colorgradient-color-contrast k-vbox\", \"kendoContrastTool\", \"\", 3, \"value\", \"ratio\", 4, \"ngIf\"], [\"kendoColorContrastSvg\", \"\", \"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"k-color-contrast-svg\", 3, \"wrapper\", \"hsva\", \"backgroundColor\"], [\"role\", \"button\", 1, \"k-clear-color\", \"k-button\", \"k-button-md\", \"k-button-flat\", \"k-button-flat-base\", \"k-button-icon\", 3, \"tabindex\", \"click\", \"keydown.enter\", \"keydown.space\"], [1, \"k-icon\", \"k-i-droplet-slash\"], [\"tickPlacement\", \"none\", 1, \"k-alpha-slider\", \"k-colorgradient-slider\", 3, \"tabindex\", \"ngClass\", \"dragHandleTitle\", \"disabled\", \"readonly\", \"showButtons\", \"vertical\", \"min\", \"max\", \"smallStep\", \"largeStep\", \"value\", \"valueChange\"], [\"alphaSlider\", \"\"], [\"kendoContrastTool\", \"\", 1, \"k-colorgradient-color-contrast\", \"k-vbox\", 3, \"value\", \"ratio\"]];\n  },\n  template: function ColorGradientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r15 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2, 3);\n      i0.ɵɵelementStart(4, \"div\", 4, 5);\n      i0.ɵɵlistener(\"click\", function ColorGradientComponent_Template_div_click_4_listener($event) {\n        return ctx.changePosition($event);\n      })(\"kendoPress\", function ColorGradientComponent_Template_div_kendoPress_4_listener($event) {\n        return ctx.handleDragPress($event);\n      })(\"kendoDrag\", function ColorGradientComponent_Template_div_kendoDrag_4_listener($event) {\n        return ctx.onHandleDrag($event);\n      })(\"kendoRelease\", function ColorGradientComponent_Template_div_kendoRelease_4_listener() {\n        return ctx.onHandleRelease();\n      });\n      i0.ɵɵelementStart(6, \"div\", 6, 7);\n      i0.ɵɵlistener(\"keydown.shift.tab\", function ColorGradientComponent_Template_div_keydown_shift_tab_6_listener($event) {\n        i0.ɵɵrestoreView(_r15);\n\n        const _r6 = i0.ɵɵreference(14);\n\n        $event.preventDefault();\n        return _r6.focusLast();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, ColorGradientComponent__svg_svg_8_Template, 1, 3, \"svg\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\");\n      i0.ɵɵtemplate(10, ColorGradientComponent_span_10_Template, 2, 3, \"span\", 9);\n      i0.ɵɵelementStart(11, \"kendo-slider\", 10);\n      i0.ɵɵlistener(\"valueChange\", function ColorGradientComponent_Template_kendo_slider_valueChange_11_listener($event) {\n        return ctx.handleHueSliderChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, ColorGradientComponent_kendo_slider_12_Template, 2, 14, \"kendo-slider\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"kendo-colorinput\", 12, 13);\n      i0.ɵɵlistener(\"valueChange\", function ColorGradientComponent_Template_kendo_colorinput_valueChange_13_listener($event) {\n        return ctx.handleInputsValueChange($event);\n      })(\"tabOut\", function ColorGradientComponent_Template_kendo_colorinput_tabOut_13_listener() {\n        i0.ɵɵrestoreView(_r15);\n\n        const _r2 = i0.ɵɵreference(7);\n\n        return _r2.focus();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, ColorGradientComponent_div_15_Template, 1, 2, \"div\", 14);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(5);\n\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"tabindex\", ctx.innerTabIndex.toString());\n      i0.ɵɵattribute(\"title\", ctx.colorGradientHandleTitle)(\"aria-label\", ctx.colorGradientHandleTitle + \" \" + ctx.colorGradientHandleAriaLabel)(\"aria-valuetext\", ctx.hsvSliderValueText)(\"aria-readonly\", ctx.readonly ? ctx.readonly : undefined)(\"aria-disabled\", ctx.disabled ? ctx.disabled : undefined)(\"aria-orientation\", \"undefined\")(\"aria-valuenow\", \"0\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.contrastToolVisible && _r1);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMapInterpolate1(\"k-hsv-controls k-hstack \", ctx.clearButton ? \"k-sliders-wrap-clearable\" : \"\", \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.clearButton);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(33, _c93, ctx.clearButton))(\"dragHandleTitle\", ctx.hueSliderTitle)(\"tabindex\", ctx.innerTabIndex)(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly)(\"showButtons\", false)(\"vertical\", true)(\"min\", 0)(\"max\", 360)(\"value\", ctx.hsva.value.h)(\"smallStep\", 5)(\"largeStep\", 10);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.opacity);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"tabindex\", ctx.innerTabIndex)(\"opacity\", ctx.opacity)(\"formatView\", ctx.format)(\"value\", ctx.value)(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.contrastToolVisible);\n    }\n  },\n  directives: [LocalizedColorPickerMessagesDirective, i3.DraggableDirective, i1$1.NgIf, SliderComponent, i1$1.NgClass, ColorInputComponent, ColorContrastSvgComponent, ContrastComponent],\n  styles: [\".k-clear-color[_ngcontent-%COMP%] {\\n            position: absolute;\\n            top: 0;\\n            left: 50%;\\n            transform: translateX(-50%);\\n        }\\n        .k-colorgradient-slider.k-align-self-end[_ngcontent-%COMP%] {\\n            height: 140px;\\n        }\\n\\n        .k-color-contrast-svg[_ngcontent-%COMP%] {\\n            position: absolute;\\n            overflow: visible;\\n            pointer-events: none;\\n            left: 0px;\\n            top: 0px;\\n        }\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColorGradientComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoColorGradient',\n      selector: 'kendo-colorgradient',\n      providers: [{\n        multi: true,\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => ColorGradientComponent)\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(() => ColorGradientComponent)\n      }, ColorGradientLocalizationService, {\n        provide: LocalizationService,\n        useExisting: ColorGradientLocalizationService\n      }, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.colorgradient'\n      }],\n      template: `\n        <ng-container kendoColorGradientLocalizedMessages\n            i18n-colorGradientNoColor=\"kendo.colorgradient.colorGradientNoColor|The aria-label applied to the ColorGradient component when the value is empty.\"\n            colorGradientNoColor=\"Colorgradient no color chosen\"\n            i18n-colorGradientHandle=\"kendo.colorgradient.colorGradientHandle|The title for the gradient color drag handle chooser.\"\n            colorGradientHandle=\"Choose color\"\n            i18n-clearButton=\"kendo.colorgradient.clearButton|The title for the clear button.\"\n            clearButton=\"Clear value\"\n            i18n-hueSliderHandle=\"kendo.colorgradient.hueSliderHandle|The title for the hue slider handle.\"\n            hueSliderHandle=\"Set hue\"\n            i18n-opacitySliderHandle=\"kendo.colorgradient.opacitySliderHandle|The title for the opacity slider handle.\"\n            opacitySliderHandle=\"Set opacity\"\n            i18n-passContrast=\"kendo.colorgradient.passContrast|The pass message for the contrast tool.\"\n            passContrast=\"Pass\"\n            i18n-failContrast=\"kendo.colorgradient.failContrast|The fail message for the contrast tool.\"\n            failContrast=\"Fail\"\n            i18n-contrastRatio=\"kendo.colorgradient.contrastRatio|The contrast ratio message for the contrast tool.\"\n            contrastRatio=\"Contrast ratio\"\n            i18n-formatButton=\"kendo.colorgradient.formatButton|The message for the input format toggle button.\"\n            formatButton=\"Change color format\"\n            i18n-redChannelLabel=\"kendo.colorgradient.redChannelLabel|The label of the NumericTextBox representing the red color channel.\"\n            redChannelLabel=\"Red channel\"\n            i18n-greenChannelLabel=\"kendo.colorgradient.greenChannelLabel|The label of the NumericTextBox representing the green color channel.\"\n            greenChannelLabel=\"Green channel\"\n            i18n-blueChannelLabel=\"kendo.colorgradient.blueChannelLabel|The label of the NumericTextBox representing the blue color channel.\"\n            blueChannelLabel=\"Blue channel\"\n            i18n-alphaChannelLabel=\"kendo.colorgradient.alphaChannelLabel|The label of the NumericTextBox representing the alpha color channel.\"\n            alphaChannelLabel=\"Alpha channel\"\n            i18n-redInputPlaceholder=\"kendo.colorgradient.redInputPlaceholder|The placeholder for the red color input.\"\n            redChannelLabel=\"R\"\n            i18n-greenInputPlaceholder=\"kendo.colorgradient.greenInputPlaceholder|The placeholder for the green color input.\"\n            greenInputPlaceholder=\"G\"\n            i18n-blueInputPlaceholder=\"kendo.colorgradient.blueInputPlaceholder|The placeholder for the blue color input.\"\n            blueInputPlaceholder=\"B\"\n            i18n-hexInputPlaceholder=\"kendo.colorgradient.hexInputPlaceholder|The placeholder for the HEX color input.\"\n            hexInputPlaceholder=\"HEX\">\n        </ng-container>\n        <div class=\"k-colorgradient-canvas k-hstack\">\n            <div class=\"k-hsv-rectangle\" #hsvRectangle>\n                <div\n                    #gradientWrapper\n                    kendoDraggable\n                    class=\"k-hsv-gradient\"\n                    (click)=\"changePosition($event)\"\n                    (kendoPress)=\"handleDragPress($event)\"\n                    (kendoDrag)=\"onHandleDrag($event)\"\n                    (kendoRelease)=\"onHandleRelease()\">\n                    <div\n                        #gradientDragHandle\n                        class=\"k-hsv-draghandle k-draghandle\"\n                        [tabindex]=\"innerTabIndex.toString()\"\n                        [attr.title]=\"colorGradientHandleTitle\"\n                        [attr.aria-label]=\"colorGradientHandleTitle + ' ' + colorGradientHandleAriaLabel\"\n                        role=\"slider\"\n                        [attr.aria-valuetext]=\"hsvSliderValueText\"\n                        [attr.aria-readonly]=\"readonly ? readonly : undefined\"\n                        [attr.aria-disabled]=\"disabled ? disabled : undefined\"\n                        [attr.aria-orientation]=\"'undefined'\"\n                        [attr.aria-valuenow]=\"'0'\"\n                        (keydown.shift.tab)=\"$event.preventDefault(); inputs.focusLast();\">\n                    </div>\n                </div>\n                <svg kendoColorContrastSvg\n                    *ngIf=\"contrastToolVisible && gradientWrapper\"\n                    class=\"k-color-contrast-svg\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    [wrapper]=\"gradientWrapper ? gradientWrapper : undefined\"\n                    [hsva]=\"hsva\"\n                    [backgroundColor]=\"contrastTool\">\n                </svg>\n            </div>\n            <div class=\"k-hsv-controls k-hstack {{ clearButton ? 'k-sliders-wrap-clearable' : '' }}\">\n                <span class=\"k-clear-color k-button k-button-md k-button-flat k-button-flat-base k-button-icon\"\n                    *ngIf=\"clearButton\"\n                    role=\"button\"\n                    (click)=\"reset()\"\n                    (keydown.enter)=\"reset()\"\n                    (keydown.space)=\"reset()\"\n                    [attr.aria-label]=\"clearButtonTitle\"\n                    [attr.title]=\"clearButtonTitle\"\n                    [tabindex]=\"innerTabIndex.toString()\">\n                    <span class=\"k-icon k-i-droplet-slash\"></span>\n                </span>\n                <kendo-slider\n                    [ngClass]=\"{'k-align-self-end': clearButton}\"\n                    class=\"k-hue-slider k-colorgradient-slider\"\n                    [dragHandleTitle]=\"hueSliderTitle\"\n                    [tabindex]=\"innerTabIndex\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [showButtons]=\"false\"\n                    tickPlacement=\"none\"\n                    [vertical]=\"true\"\n                    [min]=\"0\"\n                    [max]=\"360\"\n                    [value]=\"hsva.value.h\"\n                    [smallStep]=\"5\"\n                    [largeStep]=\"10\"\n                    (valueChange)=\"handleHueSliderChange($event)\"\n                >\n                </kendo-slider>\n                <kendo-slider\n                    *ngIf=\"opacity\"\n                    #alphaSlider\n                    [tabindex]=\"innerTabIndex\"\n                    [ngClass]=\"{'k-align-self-end': clearButton}\"\n                    class=\"k-alpha-slider k-colorgradient-slider\"\n                    [dragHandleTitle]=\"opacitySliderTitle\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [showButtons]=\"false\"\n                    tickPlacement=\"none\"\n                    [vertical]=\"true\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [smallStep]=\"1\"\n                    [largeStep]=\"10\"\n                    [value]=\"alphaSliderValue\"\n                    (valueChange)=\"handleAlphaSliderChange($event)\"\n                >\n                </kendo-slider>\n            </div>\n        </div>\n        <kendo-colorinput  #inputs\n            [tabindex]=\"innerTabIndex\"\n            [opacity]=\"opacity\"\n            [formatView]=\"format\"\n            [value]=\"value\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            (valueChange)=\"handleInputsValueChange($event)\"\n            (tabOut)=\"gradientDragHandle.focus()\"\n        >\n        </kendo-colorinput>\n        <div class=\"k-colorgradient-color-contrast k-vbox\"\n            *ngIf=\"contrastToolVisible\"\n            kendoContrastTool\n            [value]=\"value\"\n            [ratio]=\"contrastTool\">\n        </div>\n    `,\n      styles: [`\n        .k-clear-color {\n            position: absolute;\n            top: 0;\n            left: 50%;\n            transform: translateX(-50%);\n        }\n        .k-colorgradient-slider.k-align-self-end {\n            height: 140px;\n        }\n\n        .k-color-contrast-svg {\n            position: absolute;\n            overflow: visible;\n            pointer-events: none;\n            left: 0px;\n            top: 0px;\n        }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.Injector\n    }];\n  }, {\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-colorgradient']\n    }],\n    readonlyAttribute: [{\n      type: HostBinding,\n      args: ['attr.aria-readonly']\n    }],\n    disabledClass: [{\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }],\n    gradientId: [{\n      type: HostBinding,\n      args: ['attr.id']\n    }],\n    direction: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    hostTabindex: [{\n      type: HostBinding,\n      args: ['attr.tabindex']\n    }],\n    ariaRole: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    isControlInvalid: [{\n      type: HostBinding,\n      args: ['attr.aria-invalid']\n    }],\n    isDisabled: [{\n      type: HostBinding,\n      args: ['attr.aria-disabled']\n    }],\n    enterHandler: [{\n      type: HostListener,\n      args: ['keydown.enter', ['$event']]\n    }],\n    escapeHandler: [{\n      type: HostListener,\n      args: ['keydown.escape', ['$event']]\n    }],\n    focusHandler: [{\n      type: HostListener,\n      args: ['focusin', ['$event']]\n    }],\n    id: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    clearButton: [{\n      type: Input\n    }],\n    delay: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    contrastTool: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    gradientSliderStep: [{\n      type: Input\n    }],\n    gradientSliderSmallStep: [{\n      type: Input\n    }],\n    gradientDragHandle: [{\n      type: ViewChild,\n      args: ['gradientDragHandle']\n    }],\n    inputs: [{\n      type: ViewChild,\n      args: ['inputs']\n    }],\n    alphaSlider: [{\n      type: ViewChild,\n      args: ['alphaSlider']\n    }],\n    gradientWrapper: [{\n      type: ViewChild,\n      args: ['gradientWrapper']\n    }],\n    hsvRectangle: [{\n      type: ViewChild,\n      args: ['hsvRectangle']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass ColorPaletteLocalizationService extends LocalizationService {\n  constructor(prefix, messageService, _rtl, flatColorPickerLocalization) {\n    super(prefix, messageService, _rtl);\n    this.flatColorPickerLocalization = flatColorPickerLocalization;\n  }\n\n  get(shortKey) {\n    if (this.flatColorPickerLocalization) {\n      return this.flatColorPickerLocalization.get(shortKey);\n    }\n\n    return super.get(shortKey);\n  }\n\n}\n\nColorPaletteLocalizationService.ɵfac = function ColorPaletteLocalizationService_Factory(t) {\n  return new (t || ColorPaletteLocalizationService)(i0.ɵɵinject(L10N_PREFIX), i0.ɵɵinject(i1.MessageService, 8), i0.ɵɵinject(RTL, 8), i0.ɵɵinject(FlatColorPickerLocalizationService, 8));\n};\n\nColorPaletteLocalizationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ColorPaletteLocalizationService,\n  factory: ColorPaletteLocalizationService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColorPaletteLocalizationService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [L10N_PREFIX]\n      }]\n    }, {\n      type: i1.MessageService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [RTL]\n      }]\n    }, {\n      type: FlatColorPickerLocalizationService,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [FlatColorPickerLocalizationService]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass ColorPaletteService {\n  constructor() {\n    this.colorRows = [];\n  }\n\n  setColorMatrix(palette, columns) {\n    this.colorRows = [];\n\n    if (!(isPresent(palette) && palette.length)) {\n      return;\n    }\n\n    columns = columns || palette.length;\n\n    for (let start = 0; start < palette.length; start += columns) {\n      const row = palette.slice(start, columns + start);\n      this.colorRows.push(row);\n    }\n  }\n\n  getCellCoordsFor(color) {\n    if (!isPresent(color)) {\n      return;\n    }\n\n    for (let row = 0; row < this.colorRows.length; row++) {\n      for (let col = 0; col < this.colorRows[row].length; col++) {\n        if (this.colorRows[row][col] === color) {\n          return {\n            row,\n            col\n          };\n        }\n      }\n    }\n  }\n\n  getColorAt(cellCoords) {\n    if (!(isPresent(cellCoords) && isPresent(this.colorRows[cellCoords.row]))) {\n      return;\n    }\n\n    return this.colorRows[cellCoords.row][cellCoords.col];\n  }\n\n  getNextCell(current, horizontalStep, verticalStep) {\n    if (!(isPresent(current) && isPresent(current.row) && isPresent(current.col))) {\n      return {\n        row: 0,\n        col: 0\n      };\n    }\n\n    const row = this.clampIndex(current.row + verticalStep, this.colorRows.length - 1);\n    const col = this.clampIndex(current.col + horizontalStep, this.colorRows[row].length - 1);\n    return {\n      row,\n      col\n    };\n  }\n\n  clampIndex(index, max) {\n    const minArrayIndex = 0;\n\n    if (index < minArrayIndex) {\n      return minArrayIndex;\n    }\n\n    if (index > max) {\n      return max;\n    }\n\n    return index;\n  }\n\n}\n\nColorPaletteService.ɵfac = function ColorPaletteService_Factory(t) {\n  return new (t || ColorPaletteService)();\n};\n\nColorPaletteService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ColorPaletteService,\n  factory: ColorPaletteService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColorPaletteService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nconst DEFAULT_TILE_SIZE = 24;\nconst DEFAULT_COLUMNS_COUNT = 10;\nconst DEFAULT_PRESET = 'office';\nconst DEFAULT_ACCESSIBLE_PRESET = 'accessible';\nlet serial$2 = 0;\n/**\n * The ColorPalette component provides a set of predefined palette presets and enables you to implement a custom color palette.\n * The ColorPalette is independently used by `kendo-colorpicker` and can be directly added to the page.\n */\n\nclass ColorPaletteComponent {\n  constructor(host, service, cdr, renderer, localizationService, ngZone) {\n    this.host = host;\n    this.service = service;\n    this.cdr = cdr;\n    this.renderer = renderer;\n    this.localizationService = localizationService;\n    this.ngZone = ngZone;\n    /**\n     * @hidden\n     */\n\n    this.role = 'grid';\n    /**\n     * @hidden\n     */\n\n    this.id = `k-colorpalette-${serial$2++}`;\n    /**\n     * Specifies the output format of the ColorPaletteComponent.\n     * The input value may be in a different format. However, it will be parsed into the output `format`\n     * after the component processes it.\n     *\n     * The supported values are:\n     * * (Default) `hex`\n     * * `rgba`\n     * * `name`\n     */\n\n    this.format = 'hex';\n    /**\n     * Sets the disabled state of the ColorPalette.\n     */\n\n    this.disabled = false;\n    /**\n     * Sets the read-only state of the ColorPalette.\n     */\n\n    this.readonly = false;\n    /**\n     * Specifies the size of a color cell.\n     *\n     * The possible values are:\n     * * (Default) `tileSize = 24`\n     * * `{ width: number, height: number }`\n     */\n\n    this.tileSize = {\n      width: DEFAULT_TILE_SIZE,\n      height: DEFAULT_TILE_SIZE\n    };\n    /**\n     * Fires each time the color selection is changed.\n     */\n\n    this.selectionChange = new EventEmitter();\n    /**\n     * Fires each time the value is changed.\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires each time the user selects a cell with the mouse or presses `Enter`.\n     *\n     * @hidden\n     */\n\n    this.cellSelection = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.hostClasses = true;\n    /**\n     * @hidden\n     */\n\n    this.uniqueId = guid();\n    this._tabindex = 0;\n\n    this.notifyNgTouched = () => {};\n\n    this.notifyNgChanged = () => {};\n\n    validatePackage(packageMetadata);\n    this.dynamicRTLSubscription = localizationService.changes.subscribe(({\n      rtl\n    }) => {\n      this.direction = rtl ? 'rtl' : 'ltr';\n    });\n  }\n  /**\n   * @hidden\n   */\n\n\n  get activeDescendant() {\n    return this.activeCellId;\n  }\n\n  /**\n   * @hidden\n   */\n  get paletteId() {\n    return this.id;\n  }\n  /**\n   * Specifies the value of the initially selected color.\n   */\n\n\n  set value(value) {\n    this._value = parseColor(value, this.format);\n  }\n\n  get value() {\n    return this._value;\n  }\n  /**\n   * Specifies the number of columns that will be displayed.\n   * Defaults to `10`.\n   */\n\n\n  set columns(value) {\n    const minColumnsCount = 1;\n    this._columns = value > minColumnsCount ? value : minColumnsCount;\n  }\n\n  get columns() {\n    return this._columns;\n  }\n  /**\n   * The color palette that will be displayed.\n   *\n   * The supported values are:\n   * * The name of the predefined palette preset (for example, `office`, `basic`, and `apex`).\n   * * A string with comma-separated colors.\n   * * A string array.\n   */\n\n\n  set palette(value) {\n    if (!isPresent(value)) {\n      value = DEFAULT_PRESET;\n    }\n\n    if (typeof value === 'string' && isPresent(PALETTEPRESETS[value])) {\n      this.columns = this.columns || PALETTEPRESETS[value].columns;\n      value = PALETTEPRESETS[value].colors;\n    }\n\n    const colors = typeof value === 'string' ? value.split(',') : value;\n    this._palette = colors.map(color => parseColor(color, this.format, false, false));\n  }\n\n  get palette() {\n    return this._palette;\n  }\n  /**\n   * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n   */\n\n\n  set tabindex(value) {\n    const tabindex = Number(value);\n    const defaultValue = 0;\n    this._tabindex = !isNaN(tabindex) ? tabindex : defaultValue;\n  }\n\n  get tabindex() {\n    return !this.disabled ? this._tabindex : undefined;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get tileLayout() {\n    if (typeof this.tileSize !== 'number') {\n      return this.tileSize;\n    }\n\n    return {\n      width: this.tileSize,\n      height: this.tileSize\n    };\n  }\n  /**\n   * @hidden\n   */\n\n\n  get colorRows() {\n    return this.service.colorRows;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hostTabindex() {\n    return this.tabindex;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get disabledClass() {\n    return this.disabled;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get readonlyAttribute() {\n    return this.readonly;\n  }\n\n  ngOnInit() {\n    if (this.colorRows.length === 0) {\n      const defaultPreset = this.format !== 'name' ? DEFAULT_PRESET : DEFAULT_ACCESSIBLE_PRESET;\n      this.palette = this.palette || defaultPreset;\n      this.setRows();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.setHostElementAriaLabel();\n\n    if (this.value) {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => {\n        this.selectCell(this.value);\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.dynamicRTLSubscription) {\n      this.dynamicRTLSubscription.unsubscribe();\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.palette || changes.columns) {\n      this.setRows();\n    }\n\n    if (changes.palette || changes.value || changes.columns) {\n      this.selectCell(this.value);\n      this.setHostElementAriaLabel();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleKeydown(event) {\n    const isRTL = this.direction === 'rtl';\n\n    switch (event.keyCode) {\n      case Keys.ArrowDown:\n        this.handleCellNavigation(0, 1);\n        break;\n\n      case Keys.ArrowUp:\n        this.handleCellNavigation(0, -1);\n        break;\n\n      case Keys.ArrowRight:\n        this.handleCellNavigation(isRTL ? -1 : 1, 0);\n        break;\n\n      case Keys.ArrowLeft:\n        this.handleCellNavigation(isRTL ? 1 : -1, 0);\n        break;\n\n      case Keys.Enter:\n        this.handleEnter();\n        break;\n\n      default:\n        return;\n    }\n\n    event.preventDefault();\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleFocus() {\n    if (!this.focusInComponent) {\n      this.focus();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleHostBlur() {\n    this.notifyNgTouched();\n    this.handleCellFocusOnBlur();\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleCellSelection(value, focusedCell) {\n    if (this.readonly) {\n      return;\n    }\n\n    this.selectedCell = focusedCell;\n    this.focusedCell = this.selectedCell;\n    this.focusInComponent = true;\n    const parsedColor = parseColor(value, this.format, false, false);\n    this.cellSelection.emit(parsedColor);\n    this.handleValueChange(parsedColor);\n\n    if (this.selection !== parsedColor) {\n      this.selection = parsedColor;\n      this.selectionChange.emit(parsedColor);\n    }\n\n    if (focusedCell) {\n      this.activeCellId = `k-${this.selectedCell.row}-${this.selectedCell.col}-${this.uniqueId}`;\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  writeValue(value) {\n    this.value = value;\n    this.selectCell(value);\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnChange(fn) {\n    this.notifyNgChanged = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnTouched(fn) {\n    this.notifyNgTouched = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.cdr.markForCheck();\n    this.disabled = isDisabled;\n  }\n  /**\n   * @hidden\n   */\n\n\n  focus() {\n    this.host.nativeElement.focus();\n\n    if (!this.focusedCell && !this.readonly && !this.disabled) {\n      this.focusedCell = {\n        row: 0,\n        col: 0\n      };\n    }\n  }\n  /**\n   * @hidden\n   * Used by the FloatingLabel to determine if the component is empty.\n   */\n\n\n  isEmpty() {\n    return false;\n  }\n  /**\n   * Clears the color value of the ColorPalette.\n   */\n\n\n  reset() {\n    this.focusedCell = null;\n\n    if (isPresent(this.value)) {\n      this.handleValueChange(undefined);\n    }\n\n    this.selectedCell = undefined;\n  }\n\n  handleValueChange(color) {\n    if (this.value === color) {\n      return;\n    }\n\n    this.value = color;\n    this.valueChange.emit(color);\n    this.notifyNgChanged(color);\n    this.setHostElementAriaLabel();\n  }\n\n  handleCellFocusOnBlur() {\n    this.focusInComponent = false;\n    this.focusedCell = this.selectedCell;\n  }\n\n  selectCell(value) {\n    this.selectedCell = this.service.getCellCoordsFor(value);\n    this.focusedCell = this.selectedCell;\n  }\n\n  setRows() {\n    if (!isPresent(this.palette)) {\n      return;\n    }\n\n    this.columns = this.columns || DEFAULT_COLUMNS_COUNT;\n    this.service.setColorMatrix(this.palette, this.columns);\n  }\n\n  handleCellNavigation(horizontalStep, verticalStep) {\n    if (this.readonly) {\n      return;\n    }\n\n    this.focusedCell = this.service.getNextCell(this.focusedCell, horizontalStep, verticalStep);\n    this.focusInComponent = true;\n  }\n\n  setHostElementAriaLabel() {\n    const parsed = parseColor(this.value, this.format);\n    this.renderer.setAttribute(this.host.nativeElement, 'aria-label', `${this.value ? parsed : this.localizationService.get('colorPaletteNoColor')}`);\n  }\n\n  handleEnter() {\n    if (!isPresent(this.focusedCell)) {\n      return;\n    }\n\n    const selectedColor = this.service.getColorAt(this.focusedCell);\n    this.handleCellSelection(selectedColor, this.focusedCell);\n  }\n\n}\n\nColorPaletteComponent.ɵfac = function ColorPaletteComponent_Factory(t) {\n  return new (t || ColorPaletteComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ColorPaletteService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nColorPaletteComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColorPaletteComponent,\n  selectors: [[\"kendo-colorpalette\"]],\n  hostVars: 11,\n  hostBindings: function ColorPaletteComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function ColorPaletteComponent_keydown_HostBindingHandler($event) {\n        return ctx.handleKeydown($event);\n      })(\"focus\", function ColorPaletteComponent_focus_HostBindingHandler($event) {\n        return ctx.handleFocus($event);\n      })(\"blur\", function ColorPaletteComponent_blur_HostBindingHandler() {\n        return ctx.handleHostBlur();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx.direction)(\"role\", ctx.role)(\"aria-activedescendant\", ctx.activeDescendant)(\"id\", ctx.paletteId)(\"tabindex\", ctx.hostTabindex)(\"aria-disabled\", ctx.disabledClass)(\"aria-readonly\", ctx.readonlyAttribute);\n      i0.ɵɵclassProp(\"k-colorpalette\", ctx.hostClasses)(\"k-disabled\", ctx.disabledClass);\n    }\n  },\n  inputs: {\n    id: \"id\",\n    format: \"format\",\n    value: \"value\",\n    columns: \"columns\",\n    palette: \"palette\",\n    tabindex: \"tabindex\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    tileSize: \"tileSize\"\n  },\n  outputs: {\n    selectionChange: \"selectionChange\",\n    valueChange: \"valueChange\",\n    cellSelection: \"cellSelection\"\n  },\n  exportAs: [\"kendoColorPalette\"],\n  features: [i0.ɵɵProvidersFeature([{\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ColorPaletteComponent)\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(() => ColorPaletteComponent)\n  }, ColorPaletteService, ColorPaletteLocalizationService, {\n    provide: LocalizationService,\n    useExisting: ColorPaletteLocalizationService\n  }, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.colorpalette'\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 1,\n  consts: function () {\n    let i18n_94;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The aria-label applied to the ColorPalette component when the value is empty.\n       * @meaning kendo.colorpalette.colorPaletteNoColor\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_95 = goog.getMsg(\"Colorpalette no color chosen\");\n      i18n_94 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_95;\n    } else {\n      i18n_94 = $localize`:kendo.colorpalette.colorPaletteNoColor|The aria-label applied to the ColorPalette component when the value is empty.:Colorpalette no color chosen`;\n    }\n\n    return [[\"kendoColorPaletteLocalizedMessages\", \"\", \"colorPaletteNoColor\", i18n_94], [1, \"k-colorpalette-table-wrap\"], [\"role\", \"presentation\", 1, \"k-colorpalette-table\", \"k-palette\"], [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"row\"], [\"role\", \"gridcell\", \"class\", \"k-colorpalette-tile\", 3, \"k-selected\", \"k-focus\", \"id\", \"ngStyle\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"gridcell\", 1, \"k-colorpalette-tile\", 3, \"id\", \"ngStyle\", \"click\"]];\n  },\n  template: function ColorPaletteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"table\", 2);\n      i0.ɵɵelementStart(3, \"tbody\");\n      i0.ɵɵtemplate(4, ColorPaletteComponent_tr_4_Template, 2, 1, \"tr\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.colorRows);\n    }\n  },\n  directives: [LocalizedColorPickerMessagesDirective, i1$1.NgForOf, i1$1.NgStyle],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColorPaletteComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoColorPalette',\n      selector: 'kendo-colorpalette',\n      providers: [{\n        multi: true,\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => ColorPaletteComponent)\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(() => ColorPaletteComponent)\n      }, ColorPaletteService, ColorPaletteLocalizationService, {\n        provide: LocalizationService,\n        useExisting: ColorPaletteLocalizationService\n      }, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.colorpalette'\n      }],\n      template: `\n        <ng-container kendoColorPaletteLocalizedMessages\n            i18n-colorPaletteNoColor=\"kendo.colorpalette.colorPaletteNoColor|The aria-label applied to the ColorPalette component when the value is empty.\"\n            colorPaletteNoColor=\"Colorpalette no color chosen\">\n        </ng-container>\n        <div class=\"k-colorpalette-table-wrap\">\n            <table role=\"presentation\" class=\"k-colorpalette-table k-palette\">\n                <tbody>\n                    <tr *ngFor=\"let row of colorRows; let rowIndex = index\" role=\"row\">\n                        <td *ngFor=\"let color of row; let colIndex = index\"\n                            role=\"gridcell\"\n                            [class.k-selected]=\"selectedCell?.row === rowIndex && selectedCell?.col === colIndex\"\n                            [class.k-focus]=\"focusInComponent && focusedCell?.row === rowIndex && focusedCell?.col === colIndex\"\n                            [attr.aria-selected]=\"selectedCell?.row === rowIndex && selectedCell?.col === colIndex\"\n                            [attr.aria-label]=\"color\"\n                            class=\"k-colorpalette-tile\"\n                            [id]=\"'k-' + rowIndex + '-' + colIndex + '-' + uniqueId\"\n                            [attr.value]=\"color\"\n                            (click)=\"handleCellSelection(color, { row: rowIndex, col: colIndex })\"\n                            [ngStyle]=\"{\n                                backgroundColor: color,\n                                width: tileLayout.width + 'px',\n                                height: tileLayout.height + 'px',\n                                minWidth: tileLayout.width + 'px'\n                            }\">\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: ColorPaletteService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    direction: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    role: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    activeDescendant: [{\n      type: HostBinding,\n      args: ['attr.aria-activedescendant']\n    }],\n    paletteId: [{\n      type: HostBinding,\n      args: ['attr.id']\n    }],\n    id: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    palette: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    tileSize: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    cellSelection: [{\n      type: Output\n    }],\n    hostTabindex: [{\n      type: HostBinding,\n      args: ['attr.tabindex']\n    }],\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-colorpalette']\n    }],\n    disabledClass: [{\n      type: HostBinding,\n      args: ['attr.aria-disabled']\n    }, {\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }],\n    readonlyAttribute: [{\n      type: HostBinding,\n      args: ['attr.aria-readonly']\n    }],\n    handleKeydown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }],\n    handleFocus: [{\n      type: HostListener,\n      args: ['focus', ['$event']]\n    }],\n    handleHostBlur: [{\n      type: HostListener,\n      args: ['blur']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass FlatColorPickerActionButtonsComponent {\n  constructor(localizationService) {\n    this.localizationService = localizationService;\n    this.hostClasses = true;\n    this.innerTabIndex = -1;\n    this.actionButtonClick = new EventEmitter();\n    this.tabOut = new EventEmitter();\n  }\n\n  getText(text) {\n    return this.localizationService.get(text);\n  }\n\n  onActionButtonClick(type, ev) {\n    let args = {\n      target: type,\n      originalEvent: ev\n    };\n    this.actionButtonClick.emit(args);\n  }\n\n}\n\nFlatColorPickerActionButtonsComponent.ɵfac = function FlatColorPickerActionButtonsComponent_Factory(t) {\n  return new (t || FlatColorPickerActionButtonsComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nFlatColorPickerActionButtonsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FlatColorPickerActionButtonsComponent,\n  selectors: [[\"\", \"kendoFlatColorPickerActionButtons\", \"\"]],\n  viewQuery: function FlatColorPickerActionButtonsComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c97, 5, ElementRef);\n      i0.ɵɵviewQuery(_c98, 5, ElementRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.firstButton = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.lastButton = _t.first);\n    }\n  },\n  hostVars: 6,\n  hostBindings: function FlatColorPickerActionButtonsComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-coloreditor-footer\", ctx.hostClasses)(\"k-actions\", ctx.hostClasses)(\"k-hstack\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    innerTabIndex: \"innerTabIndex\"\n  },\n  outputs: {\n    actionButtonClick: \"actionButtonClick\",\n    tabOut: \"tabOut\"\n  },\n  attrs: _c99,\n  decls: 6,\n  vars: 6,\n  consts: [[\"type\", \"button\", 1, \"k-coloreditor-cancel\", \"k-button\", \"k-button-md\", \"k-button-solid\", \"k-button-solid-base\", 3, \"tabindex\", \"click\"], [\"first\", \"\"], [\"type\", \"button\", 1, \"k-coloreditor-apply\", \"k-button\", \"k-button-md\", \"k-button-solid\", \"k-button-solid-primary\", 3, \"tabindex\", \"click\", \"keydown.tab\"], [\"last\", \"\"]],\n  template: function FlatColorPickerActionButtonsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0, 1);\n      i0.ɵɵlistener(\"click\", function FlatColorPickerActionButtonsComponent_Template_button_click_0_listener($event) {\n        return ctx.onActionButtonClick(\"cancel\", $event);\n      });\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 2, 3);\n      i0.ɵɵlistener(\"click\", function FlatColorPickerActionButtonsComponent_Template_button_click_3_listener($event) {\n        return ctx.onActionButtonClick(\"apply\", $event);\n      })(\"keydown.tab\", function FlatColorPickerActionButtonsComponent_Template_button_keydown_tab_3_listener($event) {\n        $event.preventDefault();\n        return ctx.tabOut.emit();\n      });\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"tabindex\", ctx.innerTabIndex.toString());\n      i0.ɵɵattribute(\"title\", ctx.getText(\"cancelButton\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.getText(\"cancelButton\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"tabindex\", ctx.innerTabIndex.toString());\n      i0.ɵɵattribute(\"title\", ctx.getText(\"applyButton\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.getText(\"applyButton\"));\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FlatColorPickerActionButtonsComponent, [{\n    type: Component,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/component-selector\n      selector: '[kendoFlatColorPickerActionButtons]',\n      template: `\n        <button #first\n            class=\"k-coloreditor-cancel k-button k-button-md k-button-solid k-button-solid-base\"\n            [attr.title]=\"getText('cancelButton')\"\n            (click)=\"onActionButtonClick('cancel', $event)\"\n            type=\"button\"\n            [tabindex]=\"innerTabIndex.toString()\"\n        >{{getText('cancelButton')}}</button>\n        <button #last\n            class=\"k-coloreditor-apply k-button k-button-md k-button-solid k-button-solid-primary\"\n            [attr.title]=\"getText('applyButton')\"\n            (click)=\"onActionButtonClick('apply', $event)\"\n            type=\"button\"\n            [tabindex]=\"innerTabIndex.toString()\"\n            (keydown.tab)=\"$event.preventDefault(); tabOut.emit();\"\n        >{{getText('applyButton')}}</button>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, {\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-coloreditor-footer']\n    }, {\n      type: HostBinding,\n      args: ['class.k-actions']\n    }, {\n      type: HostBinding,\n      args: ['class.k-hstack']\n    }],\n    innerTabIndex: [{\n      type: Input\n    }],\n    actionButtonClick: [{\n      type: Output\n    }],\n    tabOut: [{\n      type: Output\n    }],\n    firstButton: [{\n      type: ViewChild,\n      args: ['first', {\n        read: ElementRef\n      }]\n    }],\n    lastButton: [{\n      type: ViewChild,\n      args: ['last', {\n        read: ElementRef\n      }]\n    }]\n  });\n})();\n/* eslint-disable no-unused-expressions */\n\n/**\n * Represents the [Kendo UI FlatColorPicker component for Angular]({% slug overview_flatcolorpicker %}).\n *\n * The FlatColorPicker is a powerful tool which allows the user to choose colors through palettes with predefined sets of colors and\n * through a gradient that renders an hsv canvas. It supports previewing the selected color, reverting it to its previous state or clearing it completely.\n */\n\n\nclass FlatColorPickerComponent {\n  constructor(host, service, localizationService, cdr, renderer, ngZone, injector) {\n    this.host = host;\n    this.service = service;\n    this.localizationService = localizationService;\n    this.cdr = cdr;\n    this.renderer = renderer;\n    this.ngZone = ngZone;\n    this.injector = injector;\n    this.hostClasses = true;\n    this.ariaRole = 'textbox';\n    /**\n     * Sets the read-only state of the FlatColorPicker.\n     *\n     * @default false\n     */\n\n    this.readonly = false;\n    /**\n     * Sets the disabled state of the FlatColorPicker.\n     *\n     * @default false\n     */\n\n    this.disabled = false;\n    /**\n     * Specifies the output format of the FlatColorPicker.\n     *\n     * If the input value is in a different format, it will be parsed into the specified output `format`.\n     *\n     * The supported values are:\n     * * `rgba` (default)\n     * * `hex`\n     */\n\n    this.format = 'rgba';\n    /**\n     * Specifies whether the FlatColorPicker should display a 'Clear color' button.\n     *\n     * @default true\n     */\n\n    this.clearButton = true;\n    /**\n     * Displays `Apply` and `Cancel` action buttons and a color preview pane.\n     *\n     * When enabled, the component value will not change immediately upon\n     * color selection, but only after the `Apply` button is clicked.\n     *\n     * The `Cancel` button reverts the current selection to its\n     * initial state i.e. to the current value.\n     *\n     * @default true\n     */\n\n    this.preview = true;\n    /**\n     * Configures the layout of the `Apply` and `Cancel` action buttons.\n     * * `start`\n     * * `center`\n     * * `end` (default)\n     * * `stretch`\n     */\n\n    this.actionsLayout = 'end';\n    /**\n     * Specifies the views that will be rendered. Default value is gradient and palette.\n     */\n\n    this.views = ['gradient', 'palette'];\n    /**\n     * Fires each time the component value is changed.\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires when the user cancels the current color selection.\n     *\n     * The event is emitted on preview pane or on 'Cancel' button click.\n     */\n\n    this.cancel = new EventEmitter();\n    /**\n     * Fires each time the view is about to change.\n     * Used to provide a two-way binding for the `activeView` property.\n     */\n\n    this.activeViewChange = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.actionButtonClick = new EventEmitter();\n    this._tabindex = 0;\n    this._gradientSettings = {\n      opacity: true,\n      delay: 0,\n      gradientSliderStep: DRAGHANDLE_MOVE_SPEED,\n      gradientSliderSmallStep: DRAGHANDLE_MOVE_SPEED_SMALL_STEP\n    };\n    this._paletteSettings = {};\n    this.subscriptions = new Subscription();\n    this.internalNavigation = false;\n\n    this.notifyNgChanged = () => {};\n\n    this.notifyNgTouched = () => {};\n\n    validatePackage(packageMetadata);\n    this.dynamicRTLSubscription = this.localizationService.changes.subscribe(({\n      rtl\n    }) => {\n      this.direction = rtl ? 'rtl' : 'ltr';\n    });\n  }\n\n  get disabledClass() {\n    return this.disabled;\n  }\n\n  get ariaReadonly() {\n    return this.readonly;\n  }\n\n  get hostTabindex() {\n    var _a;\n\n    return ((_a = this.tabindex) === null || _a === void 0 ? void 0 : _a.toString()) || '0';\n  }\n\n  get isControlInvalid() {\n    var _a, _b;\n\n    return (_b = (_a = this.control) === null || _a === void 0 ? void 0 : _a.invalid) === null || _b === void 0 ? void 0 : _b.toString();\n  }\n\n  get isDisabled() {\n    var _a;\n\n    return ((_a = this.disabled) === null || _a === void 0 ? void 0 : _a.toString()) || undefined;\n  }\n  /**\n   * @hidden\n   */\n\n\n  enterHandler(event) {\n    if (event.target !== this.host.nativeElement) {\n      return;\n    }\n\n    event.preventDefault();\n    this.internalNavigation = true;\n    this.ngZone.onStable.pipe(take(1)).subscribe(() => {\n      var _a;\n\n      return (_a = this.firstFocusable) === null || _a === void 0 ? void 0 : _a.focus();\n    });\n  }\n  /**\n   * @hidden\n   */\n\n\n  escapeHandler() {\n    this.internalNavigation = false;\n    this.host.nativeElement.focus();\n  }\n  /**\n   * @hidden\n   */\n\n\n  focusHandler(ev) {\n    this.internalNavigation = ev.target !== this.host.nativeElement;\n  }\n  /**\n   * Specifies the initially selected color.\n   */\n\n\n  set value(value) {\n    this._value = parseColor(value, this.format, this.gradientSettings.opacity);\n  }\n\n  get value() {\n    return this._value;\n  }\n  /**\n   * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n   *\n   * @default 0\n   */\n\n\n  set tabindex(value) {\n    if (isPresent(value)) {\n      const tabindex = Number(value);\n      this._tabindex = !isNaN(tabindex) ? tabindex : 0;\n    } else {\n      // Allows removal of the tabindex attribute\n      this._tabindex = value;\n    }\n  }\n\n  get tabindex() {\n    return !this.disabled ? this._tabindex : undefined;\n  }\n  /**\n   * Configures the gradient view.\n   */\n\n\n  set gradientSettings(value) {\n    Object.assign(this._gradientSettings, value);\n  }\n\n  get gradientSettings() {\n    return this._gradientSettings;\n  }\n  /**\n   * Configures the palette view.\n   */\n\n\n  set paletteSettings(value) {\n    Object.assign(this._paletteSettings, value);\n  }\n\n  get paletteSettings() {\n    return this._paletteSettings;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get innerTabIndex() {\n    return this.internalNavigation ? 0 : -1;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get firstFocusable() {\n    if (this.headerHasContent) {\n      return this.headerElement.nativeElement.querySelector('.k-button');\n    }\n\n    return this.activeView === 'gradient' ? this.gradient : this.palette;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get lastFocusable() {\n    if (this.preview) {\n      return this.footer.lastButton.nativeElement;\n    }\n\n    return this.activeView === 'gradient' ? this.gradient : this.palette;\n  }\n\n  ngOnInit() {\n    this.selection = this.value;\n    this.control = this.injector.get(NgControl, null);\n    this._paletteSettings = this.service.getPaletteSettings(this._paletteSettings, this.format);\n    this.setActiveView();\n  }\n\n  ngAfterViewInit() {\n    this.setHostElementAriaLabel();\n    this.initDomEvents();\n    this.setSizingVariables();\n    this.removeGradientAttributes();\n  }\n\n  ngOnChanges(changes) {\n    if (isChanged('value', changes)) {\n      this.selection = this.value;\n      this.setHostElementAriaLabel();\n    }\n\n    if (isChanged('paletteSettings', changes)) {\n      this.setSizingVariables();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.dynamicRTLSubscription) {\n      this.dynamicRTLSubscription.unsubscribe();\n    }\n\n    this.subscriptions.unsubscribe();\n  }\n  /**\n   * @hidden\n   */\n\n\n  onTab(ev) {\n    const {\n      shiftKey\n    } = ev;\n    const nextTabStop = this.preview ? this.footer.firstButton.nativeElement : this.headerHasContent ? findFocusableChild(this.headerElement.nativeElement) : null;\n    const previousTabStop = this.headerHasContent ? findFocusableChild(this.headerElement.nativeElement) : this.preview ? this.footer.lastButton.nativeElement : null;\n\n    if (!nextTabStop && !previousTabStop) {\n      return;\n    }\n\n    ev.preventDefault(); // eslint-disable-next-line no-unused-expressions\n\n    shiftKey ? previousTabStop === null || previousTabStop === void 0 ? void 0 : previousTabStop.focus() : nextTabStop === null || nextTabStop === void 0 ? void 0 : nextTabStop.focus();\n  }\n  /**\n   * @hidden\n   */\n\n\n  get headerHasContent() {\n    return this.preview || this.views.length > 1 || this.clearButton;\n  }\n  /**\n   * @hidden\n   * Used by the FloatingLabel to determine if the component is empty.\n   */\n\n\n  isEmpty() {\n    return false;\n  }\n  /**\n   * Focuses the wrapper of the FlatColorPicker.\n   */\n\n\n  focus() {\n    if (this.disabled || this.focused) {\n      return;\n    }\n\n    this.host.nativeElement.focus();\n    this.focused = true;\n  }\n  /**\n   * Blurs the wrapper of the FlatColorPicker.\n   */\n\n\n  blur() {\n    if (!this.focused) {\n      return;\n    }\n\n    this.notifyNgTouched();\n    this.host.nativeElement.blur();\n    this.focused = false;\n  }\n  /**\n   * Clears the value of the FlatColorPicker.\n   */\n\n\n  reset() {\n    if (!isPresent(this.value)) {\n      return;\n    }\n\n    this.value = undefined;\n    this.notifyNgChanged(undefined);\n    this.setHostElementAriaLabel();\n  }\n  /**\n   * @hidden\n   */\n\n\n  onViewChange(view) {\n    if (this.activeView === view) {\n      return;\n    }\n\n    this.activeView = view;\n    this.activeViewChange.emit(view);\n    this.ngZone.runOutsideAngular(() => {\n      setTimeout(() => {\n        var _a;\n\n        (_a = this[this.activeView]) === null || _a === void 0 ? void 0 : _a.focus();\n      });\n    });\n\n    if (this.activeView === 'gradient') {\n      this.removeGradientAttributes();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  onClearButtonClick() {\n    this.resetInnerComponentValue();\n    this.internalNavigation = false;\n    this.host.nativeElement.focus();\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleValueChange(color) {\n    // eslint-disable-next-line no-unused-expressions\n    this.preview ? this.changeCurrentValue(color) : this.setFlatColorPickerValue(color);\n  }\n  /**\n   * @hidden\n   */\n\n\n  onAction(ev) {\n    // eslint-disable-next-line no-unused-expressions\n    ev.target === 'apply' ? this.setFlatColorPickerValue(this.selection) : this.resetSelection(ev.originalEvent);\n    this.actionButtonClick.emit();\n  }\n  /**\n   * @hidden\n   */\n\n\n  writeValue(value) {\n    this.value = value;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnChange(fn) {\n    this.notifyNgChanged = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnTouched(fn) {\n    this.notifyNgTouched = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.cdr.markForCheck();\n    this.disabled = isDisabled;\n  }\n  /**\n   * @hidden\n   */\n\n\n  resetSelection(ev) {\n    const eventArgs = new ColorPickerCancelEvent(ev);\n    this.cancel.emit(eventArgs);\n\n    if (!eventArgs.isDefaultPrevented()) {\n      this.selection = this.value;\n    }\n\n    this.notifyNgTouched();\n  }\n\n  setHostElementAriaLabel() {\n    const parsed = parseColor(this.value, this.format, this.gradientSettings.opacity);\n    const ariaLabelValue = `${this.value ? parsed : this.localizationService.get('flatColorPickerNoColor')}`;\n    this.renderer.setAttribute(this.host.nativeElement, 'aria-label', ariaLabelValue);\n  }\n\n  setSizingVariables() {\n    const paletteTileSize = this.service.paletteTileLayout(this.paletteSettings.tileSize);\n    const value = `--kendo-color-preview-columns: ${this.paletteSettings.columns};\n            --kendo-color-preview-width: ${paletteTileSize.width}px;\n            --kendo-color-preview-height: ${paletteTileSize.height}px;`;\n    this.host.nativeElement.querySelector('.k-coloreditor-views.k-vstack').setAttribute('style', value);\n  }\n\n  changeCurrentValue(color) {\n    this.selection = color;\n    this.notifyNgTouched();\n  }\n\n  resetInnerComponentValue() {\n    this.selection = null;\n\n    if (this.gradient) {\n      this.gradient.reset();\n      return;\n    }\n\n    this.palette.reset();\n  }\n\n  setFlatColorPickerValue(color) {\n    if (this.value === color) {\n      return;\n    }\n\n    this.value = color;\n    this.valueChange.emit(color);\n    this.notifyNgChanged(color);\n    this.setHostElementAriaLabel();\n  }\n\n  setActiveView() {\n    if (!isPresent(this.activeView)) {\n      this.activeView = this.views[0];\n      return;\n    }\n\n    if (isDevMode() && this.views.indexOf(this.activeView) === -1) {\n      throw new Error(\"Invalid configuration: The current activeView is not present in the views collection\");\n    }\n  }\n\n  initDomEvents() {\n    if (!this.host) {\n      return;\n    }\n\n    let hostElement = this.host.nativeElement;\n    this.ngZone.runOutsideAngular(() => {\n      this.subscriptions.add(this.renderer.listen(hostElement, 'focus', () => {\n        this.focused = true;\n      }));\n      this.subscriptions.add(this.renderer.listen(hostElement, 'blur', () => {\n        this.focused = false;\n        this.notifyNgTouched();\n      }));\n    });\n  }\n\n  removeGradientAttributes() {\n    this.gradientElement && this.renderer.removeAttribute(this.gradientElement.nativeElement, 'role');\n    this.gradientElement && this.renderer.removeAttribute(this.gradientElement.nativeElement, 'aria-label');\n  }\n\n}\n\nFlatColorPickerComponent.ɵfac = function FlatColorPickerComponent_Factory(t) {\n  return new (t || FlatColorPickerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(FlatColorPickerService), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Injector));\n};\n\nFlatColorPickerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FlatColorPickerComponent,\n  selectors: [[\"kendo-flatcolorpicker\"]],\n  viewQuery: function FlatColorPickerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c100, 5);\n      i0.ɵɵviewQuery(_c100, 5, ElementRef);\n      i0.ɵɵviewQuery(_c101, 5);\n      i0.ɵɵviewQuery(_c101, 5, ElementRef);\n      i0.ɵɵviewQuery(_c102, 5);\n      i0.ɵɵviewQuery(_c103, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.header = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerElement = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.gradient = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.gradientElement = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.palette = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footer = _t.first);\n    }\n  },\n  hostVars: 12,\n  hostBindings: function FlatColorPickerComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown.enter\", function FlatColorPickerComponent_keydown_enter_HostBindingHandler($event) {\n        return ctx.enterHandler($event);\n      })(\"keydown.escape\", function FlatColorPickerComponent_keydown_escape_HostBindingHandler() {\n        return ctx.escapeHandler();\n      })(\"focusin\", function FlatColorPickerComponent_focusin_HostBindingHandler($event) {\n        return ctx.focusHandler($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-disabled\", ctx.isDisabled)(\"aria-readonly\", ctx.ariaReadonly)(\"dir\", ctx.direction)(\"tabindex\", ctx.hostTabindex)(\"role\", ctx.ariaRole)(\"aria-invalid\", ctx.isControlInvalid);\n      i0.ɵɵclassProp(\"k-flatcolorpicker\", ctx.hostClasses)(\"k-coloreditor\", ctx.hostClasses)(\"k-disabled\", ctx.disabledClass);\n    }\n  },\n  inputs: {\n    readonly: \"readonly\",\n    disabled: \"disabled\",\n    format: \"format\",\n    value: \"value\",\n    tabindex: \"tabindex\",\n    clearButton: \"clearButton\",\n    preview: \"preview\",\n    actionsLayout: \"actionsLayout\",\n    activeView: \"activeView\",\n    views: \"views\",\n    gradientSettings: \"gradientSettings\",\n    paletteSettings: \"paletteSettings\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    cancel: \"cancel\",\n    activeViewChange: \"activeViewChange\",\n    actionButtonClick: \"actionButtonClick\"\n  },\n  exportAs: [\"kendoFlatColorPicker\"],\n  features: [i0.ɵɵProvidersFeature([{\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => FlatColorPickerComponent)\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(() => FlatColorPickerComponent)\n  }, FlatColorPickerService, FlatColorPickerLocalizationService, {\n    provide: LocalizationService,\n    useExisting: FlatColorPickerLocalizationService\n  }, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.flatcolorpicker'\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 6,\n  vars: 4,\n  consts: function () {\n    let i18n_104;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The aria-label applied to the FlatColorPicker component when the value is empty.\n       * @meaning kendo.flatcolorpicker.flatColorPickerNoColor\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_105 = goog.getMsg(\"Flatcolorpicker no color chosen\");\n      i18n_104 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_105;\n    } else {\n      i18n_104 = $localize`:kendo.flatcolorpicker.flatColorPickerNoColor|The aria-label applied to the FlatColorPicker component when the value is empty.:Flatcolorpicker no color chosen`;\n    }\n\n    let i18n_106;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The aria-label applied to the ColorGradient component when the value is empty.\n       * @meaning kendo.flatcolorpicker.colorGradientNoColor\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_107 = goog.getMsg(\"Colorgradient no color chosen\");\n      i18n_106 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_107;\n    } else {\n      i18n_106 = $localize`:kendo.flatcolorpicker.colorGradientNoColor|The aria-label applied to the ColorGradient component when the value is empty.:Colorgradient no color chosen`;\n    }\n\n    let i18n_108;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The aria-label applied to the ColorPalette component when the value is empty.\n       * @meaning kendo.flatcolorpicker.colorPaletteNoColor\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_109 = goog.getMsg(\"Colorpalette no color chosen\");\n      i18n_108 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_109;\n    } else {\n      i18n_108 = $localize`:kendo.flatcolorpicker.colorPaletteNoColor|The aria-label applied to the ColorPalette component when the value is empty.:Colorpalette no color chosen`;\n    }\n\n    let i18n_110;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title for the gradient color drag handle chooser.\n       * @meaning kendo.flatcolorpicker.colorGradientHandle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_111 = goog.getMsg(\"Choose color\");\n      i18n_110 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_111;\n    } else {\n      i18n_110 = $localize`:kendo.flatcolorpicker.colorGradientHandle|The title for the gradient color drag handle chooser.:Choose color`;\n    }\n\n    let i18n_112;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title for the clear button.\n       * @meaning kendo.flatcolorpicker.clearButton\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_113 = goog.getMsg(\"Clear value\");\n      i18n_112 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_113;\n    } else {\n      i18n_112 = $localize`:kendo.flatcolorpicker.clearButton|The title for the clear button.:Clear value`;\n    }\n\n    let i18n_114;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title for the hue slider handle.\n       * @meaning kendo.flatcolorpicker.hueSliderHandle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_115 = goog.getMsg(\"Set hue\");\n      i18n_114 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_115;\n    } else {\n      i18n_114 = $localize`:kendo.flatcolorpicker.hueSliderHandle|The title for the hue slider handle.:Set hue`;\n    }\n\n    let i18n_116;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title for the opacity slider handle.\n       * @meaning kendo.flatcolorpicker.opacitySliderHandle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_117 = goog.getMsg(\"Set opacity\");\n      i18n_116 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_117;\n    } else {\n      i18n_116 = $localize`:kendo.flatcolorpicker.opacitySliderHandle|The title for the opacity slider handle.:Set opacity`;\n    }\n\n    let i18n_118;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The contrast ratio message for the contrast tool.\n       * @meaning kendo.flatcolorpicker.contrastRatio\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_119 = goog.getMsg(\"Contrast ratio\");\n      i18n_118 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_119;\n    } else {\n      i18n_118 = $localize`:kendo.flatcolorpicker.contrastRatio|The contrast ratio message for the contrast tool.:Contrast ratio`;\n    }\n\n    let i18n_120;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The message for the color preview pane.\n       * @meaning kendo.flatcolorpicker.previewColor\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_121 = goog.getMsg(\"Color preview\");\n      i18n_120 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_121;\n    } else {\n      i18n_120 = $localize`:kendo.flatcolorpicker.previewColor|The message for the color preview pane.:Color preview`;\n    }\n\n    let i18n_122;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The message for the selected color pane.\n       * @meaning kendo.flatcolorpicker.revertSelection\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_123 = goog.getMsg(\"Revert selection\");\n      i18n_122 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_123;\n    } else {\n      i18n_122 = $localize`:kendo.flatcolorpicker.revertSelection|The message for the selected color pane.:Revert selection`;\n    }\n\n    let i18n_124;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The message for the gradient view button.\n       * @meaning kendo.flatcolorpicker.gradientView\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_125 = goog.getMsg(\"Gradient view\");\n      i18n_124 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_125;\n    } else {\n      i18n_124 = $localize`:kendo.flatcolorpicker.gradientView|The message for the gradient view button.:Gradient view`;\n    }\n\n    let i18n_126;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The message for the palette view button.\n       * @meaning kendo.flatcolorpicker.paletteView\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_127 = goog.getMsg(\"Palette view\");\n      i18n_126 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_127;\n    } else {\n      i18n_126 = $localize`:kendo.flatcolorpicker.paletteView|The message for the palette view button.:Palette view`;\n    }\n\n    let i18n_128;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The message for the input format toggle button.\n       * @meaning kendo.flatcolorpicker.formatButton\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_129 = goog.getMsg(\"Change color format\");\n      i18n_128 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_129;\n    } else {\n      i18n_128 = $localize`:kendo.flatcolorpicker.formatButton|The message for the input format toggle button.:Change color format`;\n    }\n\n    let i18n_130;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The message for the Apply action button.\n       * @meaning kendo.flatcolorpicker.applyButton\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_131 = goog.getMsg(\"Apply\");\n      i18n_130 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_131;\n    } else {\n      i18n_130 = $localize`:kendo.flatcolorpicker.applyButton|The message for the Apply action button.:Apply`;\n    }\n\n    let i18n_132;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The message for the Cancel action button.\n       * @meaning kendo.flatcolorpicker.cancelButton\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_133 = goog.getMsg(\"Cancel\");\n      i18n_132 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_133;\n    } else {\n      i18n_132 = $localize`:kendo.flatcolorpicker.cancelButton|The message for the Cancel action button.:Cancel`;\n    }\n\n    let i18n_134;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the NumericTextBox representing the red color channel.\n       * @meaning kendo.flatcolorpicker.redChannelLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_135 = goog.getMsg(\"Red channel\");\n      i18n_134 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_135;\n    } else {\n      i18n_134 = $localize`:kendo.flatcolorpicker.redChannelLabel|The label of the NumericTextBox representing the red color channel.:Red channel`;\n    }\n\n    let i18n_136;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the NumericTextBox representing the green color channel.\n       * @meaning kendo.flatcolorpicker.greenChannelLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_137 = goog.getMsg(\"Green channel\");\n      i18n_136 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_137;\n    } else {\n      i18n_136 = $localize`:kendo.flatcolorpicker.greenChannelLabel|The label of the NumericTextBox representing the green color channel.:Green channel`;\n    }\n\n    let i18n_138;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the NumericTextBox representing the blue color channel.\n       * @meaning kendo.flatcolorpicker.blueChannelLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_139 = goog.getMsg(\"Blue channel\");\n      i18n_138 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_139;\n    } else {\n      i18n_138 = $localize`:kendo.flatcolorpicker.blueChannelLabel|The label of the NumericTextBox representing the blue color channel.:Blue channel`;\n    }\n\n    let i18n_140;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the NumericTextBox representing the alpha color channel.\n       * @meaning kendo.flatcolorpicker.alphaChannelLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_141 = goog.getMsg(\"Alpha channel\");\n      i18n_140 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_141;\n    } else {\n      i18n_140 = $localize`:kendo.flatcolorpicker.alphaChannelLabel|The label of the NumericTextBox representing the alpha color channel.:Alpha channel`;\n    }\n\n    let i18n_142;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the NumericTextBox representing the red color channel.\n       * @meaning kendo.flatcolorpicker.redChannelLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_143 = goog.getMsg(\"R\");\n      i18n_142 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_143;\n    } else {\n      i18n_142 = $localize`:kendo.flatcolorpicker.redChannelLabel|The label of the NumericTextBox representing the red color channel.:R`;\n    }\n\n    let i18n_144;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The placeholder for the green color input.\n       * @meaning kendo.flatcolorpicker.greenInputPlaceholder\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_145 = goog.getMsg(\"G\");\n      i18n_144 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_145;\n    } else {\n      i18n_144 = $localize`:kendo.flatcolorpicker.greenInputPlaceholder|The placeholder for the green color input.:G`;\n    }\n\n    let i18n_146;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The placeholder for the blue color input.\n       * @meaning kendo.flatcolorpicker.blueInputPlaceholder\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_147 = goog.getMsg(\"B\");\n      i18n_146 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_147;\n    } else {\n      i18n_146 = $localize`:kendo.flatcolorpicker.blueInputPlaceholder|The placeholder for the blue color input.:B`;\n    }\n\n    let i18n_148;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The placeholder for the HEX color input.\n       * @meaning kendo.flatcolorpicker.hexInputPlaceholder\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_149 = goog.getMsg(\"HEX\");\n      i18n_148 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_149;\n    } else {\n      i18n_148 = $localize`:kendo.flatcolorpicker.hexInputPlaceholder|The placeholder for the HEX color input.:HEX`;\n    }\n\n    return [[\"kendoFlatColorPickerLocalizedMessages\", \"\", \"flatColorPickerNoColor\", i18n_104, \"colorGradientNoColor\", i18n_106, \"colorPaletteNoColor\", i18n_108, \"colorGradientHandle\", i18n_110, \"clearButton\", i18n_112, \"hueSliderHandle\", i18n_114, \"opacitySliderHandle\", i18n_116, \"contrastRatio\", i18n_118, \"previewColor\", i18n_120, \"revertSelection\", i18n_122, \"gradientView\", i18n_124, \"paletteView\", i18n_126, \"formatButton\", i18n_128, \"applyButton\", i18n_130, \"cancelButton\", i18n_132, \"redChannelLabel\", i18n_134, \"greenChannelLabel\", i18n_136, \"blueChannelLabel\", i18n_138, \"alphaChannelLabel\", i18n_140, \"redChannelLabel\", i18n_142, \"greenInputPlaceholder\", i18n_144, \"blueInputPlaceholder\", i18n_146, \"hexInputPlaceholder\", i18n_148], [\"kendoFlatColorPickerHeader\", \"\", 3, \"innerTabIndex\", \"clearButton\", \"activeView\", \"views\", \"value\", \"selection\", \"preview\", \"clearButtonClick\", \"viewChange\", \"valuePaneClick\", \"tabOut\", 4, \"ngIf\"], [1, \"k-coloreditor-views\", \"k-vstack\"], [3, \"tabindex\", \"value\", \"format\", \"opacity\", \"delay\", \"contrastTool\", \"gradientSliderSmallStep\", \"gradientSliderStep\", \"readonly\", \"valueChange\", 4, \"ngIf\"], [3, \"tabindex\", \"palette\", \"columns\", \"tileSize\", \"format\", \"value\", \"readonly\", \"valueChange\", 4, \"ngIf\"], [\"kendoFlatColorPickerActionButtons\", \"\", 3, \"innerTabIndex\", \"ngClass\", \"actionButtonClick\", \"tabOut\", 4, \"ngIf\"], [\"kendoFlatColorPickerHeader\", \"\", 3, \"innerTabIndex\", \"clearButton\", \"activeView\", \"views\", \"value\", \"selection\", \"preview\", \"clearButtonClick\", \"viewChange\", \"valuePaneClick\", \"tabOut\"], [\"header\", \"\"], [3, \"tabindex\", \"value\", \"format\", \"opacity\", \"delay\", \"contrastTool\", \"gradientSliderSmallStep\", \"gradientSliderStep\", \"readonly\", \"valueChange\"], [\"gradient\", \"\"], [3, \"tabindex\", \"palette\", \"columns\", \"tileSize\", \"format\", \"value\", \"readonly\", \"valueChange\"], [\"palette\", \"\"], [\"kendoFlatColorPickerActionButtons\", \"\", 3, \"innerTabIndex\", \"ngClass\", \"actionButtonClick\", \"tabOut\"], [\"footer\", \"\"]];\n  },\n  template: function FlatColorPickerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵtemplate(1, FlatColorPickerComponent_div_1_Template, 2, 7, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵtemplate(3, FlatColorPickerComponent_kendo_colorgradient_3_Template, 2, 9, \"kendo-colorgradient\", 3);\n      i0.ɵɵtemplate(4, FlatColorPickerComponent_kendo_colorpalette_4_Template, 2, 7, \"kendo-colorpalette\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, FlatColorPickerComponent_div_5_Template, 2, 2, \"div\", 5);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.headerHasContent);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.activeView === \"gradient\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.activeView === \"palette\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.preview);\n    }\n  },\n  directives: [LocalizedColorPickerMessagesDirective, i1$1.NgIf, FlatColorPickerHeaderComponent, ColorGradientComponent, ColorPaletteComponent, FlatColorPickerActionButtonsComponent, i1$1.NgClass],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FlatColorPickerComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoFlatColorPicker',\n      selector: 'kendo-flatcolorpicker',\n      providers: [{\n        multi: true,\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => FlatColorPickerComponent)\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(() => FlatColorPickerComponent)\n      }, FlatColorPickerService, FlatColorPickerLocalizationService, {\n        provide: LocalizationService,\n        useExisting: FlatColorPickerLocalizationService\n      }, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.flatcolorpicker'\n      }],\n      template: `\n        <ng-container kendoFlatColorPickerLocalizedMessages\n            i18n-flatColorPickerNoColor=\"kendo.flatcolorpicker.flatColorPickerNoColor|The aria-label applied to the FlatColorPicker component when the value is empty.\"\n            flatColorPickerNoColor=\"Flatcolorpicker no color chosen\"\n            i18n-colorGradientNoColor=\"kendo.flatcolorpicker.colorGradientNoColor|The aria-label applied to the ColorGradient component when the value is empty.\"\n            colorGradientNoColor=\"Colorgradient no color chosen\"\n            i18n-colorPaletteNoColor=\"kendo.flatcolorpicker.colorPaletteNoColor|The aria-label applied to the ColorPalette component when the value is empty.\"\n            colorPaletteNoColor=\"Colorpalette no color chosen\"\n            i18n-colorGradientHandle=\"kendo.flatcolorpicker.colorGradientHandle|The title for the gradient color drag handle chooser.\"\n            colorGradientHandle=\"Choose color\"\n            i18n-clearButton=\"kendo.flatcolorpicker.clearButton|The title for the clear button.\"\n            clearButton=\"Clear value\"\n            i18n-hueSliderHandle=\"kendo.flatcolorpicker.hueSliderHandle|The title for the hue slider handle.\"\n            hueSliderHandle=\"Set hue\"\n            i18n-opacitySliderHandle=\"kendo.flatcolorpicker.opacitySliderHandle|The title for the opacity slider handle.\"\n            opacitySliderHandle=\"Set opacity\"\n            i18n-contrastRatio=\"kendo.flatcolorpicker.contrastRatio|The contrast ratio message for the contrast tool.\"\n            contrastRatio=\"Contrast ratio\"\n            i18n-previewColor=\"kendo.flatcolorpicker.previewColor|The message for the color preview pane.\"\n            previewColor=\"Color preview\"\n            i18n-revertSelection=\"kendo.flatcolorpicker.revertSelection|The message for the selected color pane.\"\n            revertSelection=\"Revert selection\"\n            i18n-gradientView=\"kendo.flatcolorpicker.gradientView|The message for the gradient view button.\"\n            gradientView=\"Gradient view\"\n            i18n-paletteView=\"kendo.flatcolorpicker.paletteView|The message for the palette view button.\"\n            paletteView=\"Palette view\"\n            i18n-formatButton=\"kendo.flatcolorpicker.formatButton|The message for the input format toggle button.\"\n            formatButton=\"Change color format\"\n            i18n-applyButton=\"kendo.flatcolorpicker.applyButton|The message for the Apply action button.\"\n            applyButton=\"Apply\"\n            i18n-cancelButton=\"kendo.flatcolorpicker.cancelButton|The message for the Cancel action button.\"\n            cancelButton=\"Cancel\"\n            i18n-redChannelLabel=\"kendo.flatcolorpicker.redChannelLabel|The label of the NumericTextBox representing the red color channel.\"\n            redChannelLabel=\"Red channel\"\n            i18n-greenChannelLabel=\"kendo.flatcolorpicker.greenChannelLabel|The label of the NumericTextBox representing the green color channel.\"\n            greenChannelLabel=\"Green channel\"\n            i18n-blueChannelLabel=\"kendo.flatcolorpicker.blueChannelLabel|The label of the NumericTextBox representing the blue color channel.\"\n            blueChannelLabel=\"Blue channel\"\n            i18n-alphaChannelLabel=\"kendo.flatcolorpicker.alphaChannelLabel|The label of the NumericTextBox representing the alpha color channel.\"\n            alphaChannelLabel=\"Alpha channel\"\n            i18n-redInputPlaceholder=\"kendo.flatcolorpicker.redInputPlaceholder|The placeholder for the red color input.\"\n            redChannelLabel=\"R\"\n            i18n-greenInputPlaceholder=\"kendo.flatcolorpicker.greenInputPlaceholder|The placeholder for the green color input.\"\n            greenInputPlaceholder=\"G\"\n            i18n-blueInputPlaceholder=\"kendo.flatcolorpicker.blueInputPlaceholder|The placeholder for the blue color input.\"\n            blueInputPlaceholder=\"B\"\n            i18n-hexInputPlaceholder=\"kendo.flatcolorpicker.hexInputPlaceholder|The placeholder for the HEX color input.\"\n            hexInputPlaceholder=\"HEX\">\n        </ng-container>\n        <div kendoFlatColorPickerHeader\n            [innerTabIndex]=\"this.innerTabIndex\"\n            *ngIf=\"headerHasContent\"\n            #header\n            [clearButton]=\"clearButton\"\n            [activeView]=\"activeView\"\n            [views]=\"views\"\n            [value]=\"value\"\n            [selection]=\"selection\"\n            [preview]=\"preview\"\n            (clearButtonClick)=\"onClearButtonClick()\"\n            (viewChange)=\"onViewChange($event)\"\n            (valuePaneClick)=\"resetSelection($event)\"\n            (tabOut)=\"lastFocusable.focus()\"></div>\n        <div class=\"k-coloreditor-views k-vstack\">\n            <kendo-colorgradient #gradient\n                [tabindex]=\"innerTabIndex\"\n                *ngIf=\"activeView === 'gradient'\"\n                [value]=\"selection\"\n                [format]=\"format\"\n                [opacity]=\"gradientSettings.opacity\"\n                [delay]=\"gradientSettings.delay\"\n                [contrastTool]=\"gradientSettings.contrastTool\"\n                [gradientSliderSmallStep]=\"gradientSettings.gradientSliderSmallStep\"\n                [gradientSliderStep]=\"gradientSettings.gradientSliderStep\"\n                [readonly]=\"readonly\"\n                (valueChange)=\"handleValueChange($event)\"\n            ></kendo-colorgradient>\n            <kendo-colorpalette #palette\n                [tabindex]=\"innerTabIndex\"\n                *ngIf=\"activeView === 'palette'\"\n                [palette]=\"paletteSettings.palette\"\n                [columns]=\"paletteSettings.columns\"\n                [tileSize]=\"paletteSettings.tileSize\"\n                [format]=\"format\"\n                [value]=\"selection\"\n                [readonly]=\"readonly\"\n                (valueChange)=\"handleValueChange($event)\"\n            ></kendo-colorpalette>\n        </div>\n        <div kendoFlatColorPickerActionButtons \n            [innerTabIndex]=\"innerTabIndex\"\n            *ngIf=\"preview\"\n            #footer\n            [ngClass]=\"'k-justify-content-' + actionsLayout\"\n            (actionButtonClick)=\"onAction($event)\"\n            (tabOut)=\"firstFocusable.focus()\"></div>\n`\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: FlatColorPickerService\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.Injector\n    }];\n  }, {\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-flatcolorpicker']\n    }, {\n      type: HostBinding,\n      args: ['class.k-coloreditor']\n    }],\n    disabledClass: [{\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }, {\n      type: HostBinding,\n      args: ['attr.aria-disabled']\n    }],\n    ariaReadonly: [{\n      type: HostBinding,\n      args: ['attr.aria-readonly']\n    }],\n    direction: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    hostTabindex: [{\n      type: HostBinding,\n      args: ['attr.tabindex']\n    }],\n    ariaRole: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    isControlInvalid: [{\n      type: HostBinding,\n      args: ['attr.aria-invalid']\n    }],\n    isDisabled: [{\n      type: HostBinding,\n      args: ['attr.aria-disabled']\n    }],\n    enterHandler: [{\n      type: HostListener,\n      args: ['keydown.enter', ['$event']]\n    }],\n    escapeHandler: [{\n      type: HostListener,\n      args: ['keydown.escape']\n    }],\n    focusHandler: [{\n      type: HostListener,\n      args: ['focusin', ['$event']]\n    }],\n    readonly: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    clearButton: [{\n      type: Input\n    }],\n    preview: [{\n      type: Input\n    }],\n    actionsLayout: [{\n      type: Input\n    }],\n    activeView: [{\n      type: Input\n    }],\n    views: [{\n      type: Input\n    }],\n    gradientSettings: [{\n      type: Input\n    }],\n    paletteSettings: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    cancel: [{\n      type: Output\n    }],\n    activeViewChange: [{\n      type: Output\n    }],\n    actionButtonClick: [{\n      type: Output\n    }],\n    header: [{\n      type: ViewChild,\n      args: ['header']\n    }],\n    headerElement: [{\n      type: ViewChild,\n      args: ['header', {\n        read: ElementRef\n      }]\n    }],\n    gradient: [{\n      type: ViewChild,\n      args: ['gradient']\n    }],\n    gradientElement: [{\n      type: ViewChild,\n      args: ['gradient', {\n        read: ElementRef\n      }]\n    }],\n    palette: [{\n      type: ViewChild,\n      args: ['palette']\n    }],\n    footer: [{\n      type: ViewChild,\n      args: ['footer']\n    }]\n  });\n})();\n\nconst DOM_FOCUS_EVENTS = ['focus', 'blur'];\nconst DEFAULT_SIZE$3 = 'medium';\nconst DEFAULT_ROUNDED$2 = 'medium';\nconst DEFAULT_FILL_MODE$1 = 'solid';\n/**\n * @hidden\n */\n\nlet nextColorPickerId = 0;\n/**\n * Represents the [Kendo UI ColorPicker component for Angular]({% slug overview_colorpicker %}).\n *\n * The ColorPicker is a powerful tool for choosing colors from Gradient and Palette views\n * which are rendered in its popup. It supports previewing the selected color, reverting it to its previous state or clearing it completely.\n */\n\nclass ColorPickerComponent {\n  constructor(host, popupService, cdr, localizationService, ngZone, renderer, injector) {\n    this.host = host;\n    this.popupService = popupService;\n    this.cdr = cdr;\n    this.localizationService = localizationService;\n    this.ngZone = ngZone;\n    this.renderer = renderer;\n    this.injector = injector;\n    this.hostClasses = true;\n    this.role = 'combobox';\n    this.hasPopup = 'dialog';\n    /**\n     * Specifies the views that will be rendered in the popup.\n     * By default both the gradient and palette views will be rendered.\n     */\n\n    this.views = ['gradient', 'palette'];\n    /**\n     * Sets the read-only state of the ColorPicker.\n     *\n     * @default false\n     */\n\n    this.readonly = false;\n    /**\n     * Sets the disabled state of the ColorPicker.\n     *\n     * @default false\n     */\n\n    this.disabled = false;\n    /**\n     * Specifies the output format of the ColorPicker.\n     *\n     * If the input value is in a different format, it will be parsed into the specified output `format`.\n     *\n     * The supported values are:\n     * * `rgba` (default)\n     * * `hex`\n     */\n\n    this.format = 'rgba';\n    /**\n     * Specifies whether the ColorPicker should display a 'Clear color' button.\n     *\n     * @default true\n     */\n\n    this.clearButton = true;\n    /**\n     * Displays `Apply` and `Cancel` action buttons and color preview panes.\n     *\n     * When enabled, the component value will not change immediately upon\n     * color selection, but only after the `Apply` button is clicked.\n     *\n     * The `Cancel` button reverts the current selection to its\n     * previous state i.e. to the current value.\n     *\n     * @default false\n     */\n\n    this.preview = false;\n    /**\n     * Configures the layout of the `Apply` and `Cancel` action buttons.\n     *\n     * The possible values are:\n     * * `start`\n     * * `center`\n     * * `end` (default)\n     * * `stretch`\n     */\n\n    this.actionsLayout = 'end';\n    /**\n     * Fires each time the value is changed.\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires each time the popup is about to open.\n     * This event is preventable. If you cancel it, the popup will remain closed.\n     */\n\n    this.open = new EventEmitter();\n    /**\n     * Fires each time the popup is about to close.\n     * This event is preventable. If you cancel it, the popup will remain open.\n     */\n\n    this.close = new EventEmitter();\n    /**\n     * Fires each time ColorPicker is focused.\n     */\n\n    this.onFocus = new EventEmitter();\n    /**\n     * Fires each time the ColorPicker is blurred.\n     */\n\n    this.onBlur = new EventEmitter();\n    /**\n     * Fires when the user cancels the current color selection.\n     *\n     * Fires on preview pane or 'Cancel' button click.\n     */\n\n    this.cancel = new EventEmitter();\n    /**\n     * Fires each time the left side of the ColorPicker wrapper is clicked.\n     * The event is triggered regardless of whether a ColorPicker icon is set or not.\n     *\n     * The [ActiveColorClickEvent]({% slug api_inputs_activecolorclickevent %}) event provides the option to prevent the popup opening.\n     */\n\n    this.activeColorClick = new EventEmitter();\n    /**\n     * Fires each time the view is about to change.\n     * Used to provide a two-way binding for the `activeView` property.\n     */\n\n    this.activeViewChange = new EventEmitter();\n    /**\n     * Indicates whether the ColorPicker wrapper is focused.\n     */\n\n    this.isFocused = false;\n    this._tabindex = 0;\n    this._popupSettings = {\n      animate: true\n    };\n    this._paletteSettings = {};\n    this._gradientSettings = {\n      opacity: true,\n      delay: 0\n    };\n    this._size = 'medium';\n    this._rounded = 'medium';\n    this._fillMode = 'solid';\n    this.subscriptions = new Subscription();\n    this.popupSubs = new Subscription();\n\n    this.notifyNgTouched = () => {};\n\n    this.notifyNgChanged = () => {};\n\n    this.domFocusListener = event => event.stopImmediatePropagation();\n\n    validatePackage(packageMetadata);\n    this.dynamicRTLSubscription = this.localizationService.changes.subscribe(({\n      rtl\n    }) => {\n      this.direction = rtl ? 'rtl' : 'ltr';\n    });\n    this.colorPickerId = nextColorPickerId++;\n  }\n\n  get focusedClass() {\n    return this.isFocused;\n  }\n\n  get disabledClass() {\n    return this.disabled;\n  }\n\n  get ariaReadonly() {\n    return this.readonly;\n  }\n\n  get ariaExpanded() {\n    return this.isOpen;\n  }\n\n  get hostTabindex() {\n    return this.tabindex;\n  }\n\n  get isControlInvalid() {\n    var _a, _b;\n\n    return (_b = (_a = this.control) === null || _a === void 0 ? void 0 : _a.invalid) === null || _b === void 0 ? void 0 : _b.toString();\n  }\n  /**\n   * @hidden\n   */\n\n\n  set view(view) {\n    this.views = [view];\n  }\n\n  get view() {\n    return this.views && this.views.length > 0 ? this.views[0] : null;\n  }\n  /**\n   * Specifies the value of the initially selected color.\n   */\n\n\n  set value(value) {\n    this._value = parseColor(value, this.format, this.gradientSettings.opacity);\n  }\n\n  get value() {\n    return this._value;\n  }\n  /**\n   * Configures the popup of the ColorPicker.\n   */\n\n\n  set popupSettings(value) {\n    this._popupSettings = Object.assign(this._popupSettings, value);\n  }\n\n  get popupSettings() {\n    return this._popupSettings;\n  }\n  /**\n   * Configures the palette that is displayed in the ColorPicker popup.\n   */\n\n\n  set paletteSettings(value) {\n    this._paletteSettings = Object.assign(this._paletteSettings, value);\n  }\n\n  get paletteSettings() {\n    return this._paletteSettings;\n  }\n  /**\n   * Configures the gradient that is displayed in the ColorPicker popup.\n   */\n\n\n  set gradientSettings(value) {\n    this._gradientSettings = Object.assign(this._gradientSettings, value);\n  }\n\n  get gradientSettings() {\n    return this._gradientSettings;\n  }\n  /**\n   * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n   *\n   * @default 0\n   */\n\n\n  set tabindex(value) {\n    const tabindex = Number(value);\n    const defaultValue = 0;\n    this._tabindex = !isNaN(tabindex) ? tabindex : defaultValue;\n  }\n\n  get tabindex() {\n    return !this.disabled ? this._tabindex : undefined;\n  }\n  /**\n   * The size property specifies the padding of the ColorPicker internal elements\n   * ([see example]({% slug appearance_colorpicker %}#toc-size)).\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `none`\n   */\n\n\n  set size(size) {\n    const newSize = size ? size : DEFAULT_SIZE$3;\n    this.handleClasses(newSize, 'size');\n    this._size = newSize;\n  }\n\n  get size() {\n    return this._size;\n  }\n  /**\n   * The rounded property specifies the border radius of the ColorPicker\n   * ([see example]({% slug appearance_colorpicker %}#toc-rounded)).\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `full`\n   * * `none`\n   */\n\n\n  set rounded(rounded) {\n    const newRounded = rounded ? rounded : DEFAULT_ROUNDED$2;\n    this.handleClasses(newRounded, 'rounded');\n    this._rounded = newRounded;\n  }\n\n  get rounded() {\n    return this._rounded;\n  }\n  /**\n   * The fillMode property specifies the background and border styles of the ColorPicker\n   * ([see example]({% slug appearance_colorpicker %}#toc-fillMode)).\n   *\n   * The possible values are:\n   * * `flat`\n   * * `solid` (default)\n   * * `outline`\n   * * `none`\n   */\n\n\n  set fillMode(fillMode) {\n    const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$1;\n    this.handleClasses(newFillMode, 'fillMode');\n    this._fillMode = newFillMode;\n  }\n\n  get fillMode() {\n    return this._fillMode;\n  }\n  /**\n   * Indicates whether the ColorPicker popup is open.\n   */\n\n\n  get isOpen() {\n    return isPresent(this.popupRef);\n  }\n  /**\n   * @hidden\n   */\n\n\n  get iconStyles() {\n    if (this.iconClass) {\n      return this.iconClass;\n    }\n\n    if (this.icon) {\n      return `k-icon k-i-${this.icon}`;\n    }\n  }\n\n  ngOnInit() {\n    const defaultPreset = this.format !== 'name' ? DEFAULT_PRESET$1 : DEFAULT_ACCESSIBLE_PRESET$1;\n    const settingsPalette = this._paletteSettings.palette;\n    const presetColumns = typeof settingsPalette === 'string' && PALETTEPRESETS[settingsPalette] ? PALETTEPRESETS[settingsPalette].columns : undefined;\n    this._paletteSettings = {\n      palette: settingsPalette || defaultPreset,\n      tileSize: this._paletteSettings.tileSize || 24,\n      columns: this._paletteSettings.columns || presetColumns || 10\n    };\n    this.handleHostId();\n    this.renderer.setAttribute(this.host.nativeElement, 'aria-controls', `k-colorpicker-popup-${this.colorPickerId}`);\n    this.control = this.injector.get(NgControl, null);\n  }\n\n  ngAfterViewInit() {\n    const stylingInputs = ['size', 'rounded', 'fillMode'];\n    stylingInputs.forEach(input => {\n      this.handleClasses(this[input], input);\n    });\n    this.setHostElementAriaLabel();\n    this.initDomEvents();\n  }\n\n  ngOnChanges(changes) {\n    if (changes.format && changes.format.currentValue === 'name') {\n      this.activeView = 'palette';\n    }\n\n    if (this.activeView === 'gradient' && this.gradientSettings.opacity) {\n      this.format = 'rgba';\n      this.value = parseColor(this.value, this.format, this.gradientSettings.opacity);\n    }\n\n    if (isChanged('value', changes)) {\n      this.setHostElementAriaLabel();\n    }\n  }\n\n  ngOnDestroy() {\n    this.closePopup();\n\n    if (this.dynamicRTLSubscription) {\n      this.dynamicRTLSubscription.unsubscribe();\n    }\n\n    this.subscriptions.unsubscribe();\n    this.handleDomEvents('remove', DOM_FOCUS_EVENTS);\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleCancelEvent(ev) {\n    this.cancel.emit(ev);\n  }\n  /**\n   * @hidden\n   */\n\n\n  togglePopup() {\n    this.focus();\n    this.toggleWithEvents(!this.isOpen);\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleWrapperClick(event) {\n    if (this.disabled) {\n      return;\n    }\n\n    this.focus();\n\n    if (closest$1(event.target, element => element === this.activeColor.nativeElement)) {\n      const event = new ActiveColorClickEvent(this.value);\n      this.activeColorClick.emit(event);\n\n      if (!event.isOpenPrevented() || this.isOpen) {\n        this.toggleWithEvents(!this.isOpen);\n      }\n\n      return;\n    }\n\n    this.toggleWithEvents(!this.isOpen);\n  }\n  /**\n   * Focuses the wrapper of the ColorPicker.\n   */\n\n\n  focus() {\n    this.isFocused = true;\n    this.host.nativeElement.focus();\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleWrapperFocus() {\n    if (this.isFocused) {\n      return;\n    }\n\n    this.ngZone.run(() => {\n      this.focus();\n      this.onFocus.emit();\n    });\n  }\n  /**\n   * Blurs the ColorPicker.\n   */\n\n\n  blur() {\n    this.isFocused = false;\n    this.host.nativeElement.blur();\n    this.notifyNgTouched();\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleWrapperBlur() {\n    if (this.isOpen) {\n      return;\n    }\n\n    this.ngZone.run(() => {\n      this.onBlur.emit();\n      this.isFocused = false;\n    });\n  }\n  /**\n   * Clears the value of the ColorPicker.\n   */\n\n\n  reset() {\n    if (!isPresent(this.value)) {\n      return;\n    }\n\n    this._value = undefined;\n    this.setHostElementAriaLabel();\n    this.notifyNgChanged(undefined);\n  }\n  /**\n   * Toggles the popup of the ColorPicker.\n   * Does not trigger the `open` and `close` events of the component.\n   *\n   * @param open An optional parameter. Specifies whether the popup will be opened or closed.\n   */\n\n\n  toggle(open) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    this.cdr.markForCheck();\n    this.closePopup();\n    open = isPresent(open) ? open : !this.isOpen;\n\n    if (open) {\n      this.openPopup();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleValueChange(color) {\n    const parsedColor = parseColor(color, this.format, this.gradientSettings.opacity);\n    const valueChange = parsedColor !== this.value;\n\n    if (valueChange) {\n      this.value = parsedColor;\n      this.valueChange.emit(parsedColor);\n      this.setHostElementAriaLabel();\n      this.notifyNgChanged(parsedColor);\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handlePopupBlur(event) {\n    if (this.popupBlurInvalid(event)) {\n      return;\n    }\n\n    this.isFocused = false;\n    this.onBlur.emit();\n    this.notifyNgTouched();\n    this.toggleWithEvents(false);\n  }\n  /**\n   * @hidden\n   */\n\n\n  writeValue(value) {\n    this.value = value;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnChange(fn) {\n    this.notifyNgChanged = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnTouched(fn) {\n    this.notifyNgTouched = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.cdr.markForCheck();\n    this.disabled = isDisabled;\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleWrapperKeyDown(event) {\n    if (event.keyCode === Keys.ArrowDown || event.keyCode === Keys.Enter) {\n      event.preventDefault();\n      this.ngZone.run(() => {\n        this.toggleWithEvents(true);\n      });\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handlePopupKeyDown(event) {\n    if (event.keyCode === Keys.Escape) {\n      this.toggleWithEvents(false);\n      this.host.nativeElement.focus();\n    }\n\n    if (event.keyCode === Keys.Tab) {\n      const currentElement = event.shiftKey ? this.firstFocusableElement.nativeElement : this.lastFocusableElement.nativeElement;\n      const nextElement = event.shiftKey ? this.lastFocusableElement.nativeElement : this.firstFocusableElement.nativeElement;\n\n      if (event.target === currentElement) {\n        event.preventDefault();\n        nextElement.focus();\n      }\n    }\n  }\n  /**\n   * @hidden\n   * Used by the FloatingLabel to determine if the component is empty.\n   */\n\n\n  isEmpty() {\n    return false;\n  }\n\n  setHostElementAriaLabel() {\n    const ariaLabelValue = `${this.value ? this.value : this.localizationService.get('colorPickerNoColor')}`;\n    this.renderer.setAttribute(this.host.nativeElement, 'aria-label', ariaLabelValue);\n  }\n\n  handleClasses(value, input) {\n    const elem = this.host.nativeElement;\n    const classes = getStylingClasses('picker', input, this[input], value);\n\n    if (classes.toRemove) {\n      this.renderer.removeClass(elem, classes.toRemove);\n    }\n\n    if (classes.toAdd) {\n      this.renderer.addClass(elem, classes.toAdd);\n    }\n  }\n\n  popupBlurInvalid(ev) {\n    const focusInFlatColorPickerElement = this.popupRef.popupElement.contains(ev.relatedTarget);\n    const hostClicked = closest$1(ev.relatedTarget, element => element === this.host.nativeElement);\n    return hostClicked || focusInFlatColorPickerElement;\n  }\n\n  toggleWithEvents(open) {\n    const sameState = this.isOpen === open;\n\n    if (this.disabled || this.readonly || sameState) {\n      return;\n    }\n\n    let eventArgs;\n\n    if (open) {\n      eventArgs = new ColorPickerOpenEvent();\n      this.open.emit(eventArgs);\n    } else {\n      eventArgs = new ColorPickerCloseEvent();\n      this.close.emit(eventArgs);\n    }\n\n    if (!eventArgs.isDefaultPrevented()) {\n      this.toggle(open);\n    }\n\n    if (open) {\n      this.focusFirstElement();\n    }\n  }\n\n  focusFirstElement() {\n    this.ngZone.onStable.pipe(take(1)).subscribe(() => {\n      if (this.flatColorPicker) {\n        const gradient = this.flatColorPicker.gradient;\n        const elementToFocus = gradient ? gradient.gradientDragHandle : this.flatColorPicker.palette.host;\n        elementToFocus.nativeElement.focus();\n      }\n    });\n  }\n\n  openPopup() {\n    const horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n    const anchorPosition = {\n      horizontal: horizontalAlign,\n      vertical: \"bottom\"\n    };\n    const popupPosition = {\n      horizontal: horizontalAlign,\n      vertical: \"top\"\n    };\n    this.popupRef = this.popupService.open({\n      anchor: this.activeColor,\n      animate: this.popupSettings.animate,\n      appendTo: this.popupSettings.appendTo,\n      popupAlign: popupPosition,\n      anchorAlign: anchorPosition,\n      popupClass: 'k-colorpicker-popup',\n      content: this.popupTemplate,\n      positionMode: 'absolute'\n    });\n    this.renderer.setAttribute(this.popupRef.popupElement.querySelector('.k-colorpicker-popup'), 'id', `k-colorpicker-popup-${this.colorPickerId}`);\n    this.popupSubs.add(this.popupRef.popupAnchorViewportLeave.subscribe(() => {\n      this.toggleWithEvents(false);\n\n      if (!this.isOpen) {\n        this.host.nativeElement.focus({\n          preventScroll: true\n        });\n      }\n    }));\n  }\n\n  closePopup() {\n    if (!this.isOpen) {\n      return;\n    }\n\n    this.popupSubs.unsubscribe();\n    this.popupRef.close();\n    this.popupRef = null;\n  }\n\n  get firstFocusableElement() {\n    if (!this.flatColorPicker.header || this.views.length <= 1 && !this.flatColorPicker.clearButton) {\n      const gradient = this.flatColorPicker.gradient;\n      return gradient ? gradient.gradientDragHandle : this.flatColorPicker.palette.host;\n    }\n\n    return this.views.length > 1 ? this.flatColorPicker.header.viewButtonsCollection.toArray()[0] : this.flatColorPicker.header.clearButtonElement;\n  }\n\n  get lastFocusableElement() {\n    if (this.preview) {\n      return this.flatColorPicker.footer.lastButton;\n    }\n\n    if (this.flatColorPicker.palette) {\n      return this.flatColorPicker.palette.host;\n    }\n\n    const gradient = this.flatColorPicker.gradient;\n    const inputs = gradient && gradient.inputs;\n\n    if (gradient && inputs && inputs.formatView === 'hex') {\n      return inputs.hexInput;\n    }\n\n    return this.gradientSettings.opacity ? inputs.opacityInput.numericInput : inputs.blueInput.numericInput;\n  }\n\n  handleDomEvents(action, events) {\n    const hostElement = this.host.nativeElement;\n    events.forEach(ev => hostElement[`${action}EventListener`](ev, this.domFocusListener, true));\n  }\n\n  initDomEvents() {\n    if (!this.host) {\n      return;\n    }\n\n    let hostElement = this.host.nativeElement;\n    this.ngZone.runOutsideAngular(() => {\n      this.subscriptions.add(this.renderer.listen(hostElement, 'focusin', () => {\n        this.handleWrapperFocus();\n      }));\n      this.subscriptions.add(this.renderer.listen(hostElement, 'focusout', event => {\n        const closestPopup = this.popupRef ? closest$1(event.relatedTarget, element => element === this.flatColorPicker.host.nativeElement) : false;\n        const closestWrapper = closest$1(event.relatedTarget, element => element === this.host.nativeElement);\n\n        if (!closestPopup && !closestWrapper) {\n          this.handleWrapperBlur();\n        }\n      }));\n      this.handleDomEvents('add', DOM_FOCUS_EVENTS);\n      this.subscriptions.add(this.renderer.listen(hostElement, 'keydown', event => {\n        this.handleWrapperKeyDown(event);\n      }));\n      this.subscriptions.add(this.renderer.listen(hostElement, 'click', event => {\n        this.ngZone.run(() => {\n          this.handleWrapperClick(event);\n        });\n      }));\n    });\n  }\n\n  handleHostId() {\n    const hostElement = this.host.nativeElement;\n    const existingId = hostElement.getAttribute('id');\n\n    if (existingId) {\n      this.focusableId = existingId;\n    } else {\n      const id = `k-${guid()}`;\n      hostElement.setAttribute('id', id);\n      this.focusableId = id;\n    }\n  }\n\n}\n\nColorPickerComponent.ɵfac = function ColorPickerComponent_Factory(t) {\n  return new (t || ColorPickerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1$3.PopupService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.Injector));\n};\n\nColorPickerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColorPickerComponent,\n  selectors: [[\"kendo-colorpicker\"]],\n  viewQuery: function ColorPickerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c150, 7, ViewContainerRef);\n      i0.ɵɵviewQuery(_c151, 7);\n      i0.ɵɵviewQuery(_c152, 7);\n      i0.ɵɵviewQuery(_c153, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.activeColor = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.flatColorPicker = _t.first);\n    }\n  },\n  hostVars: 18,\n  hostBindings: function ColorPickerComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-disabled\", ctx.disabledClass)(\"aria-readonly\", ctx.ariaReadonly)(\"aria-expanded\", ctx.ariaExpanded)(\"tabindex\", ctx.hostTabindex)(\"dir\", ctx.direction)(\"role\", ctx.role)(\"aria-haspopup\", ctx.hasPopup)(\"aria-invalid\", ctx.isControlInvalid);\n      i0.ɵɵclassProp(\"k-colorpicker\", ctx.hostClasses)(\"k-icon-picker\", ctx.hostClasses)(\"k-picker\", ctx.hostClasses)(\"k-focus\", ctx.focusedClass)(\"k-disabled\", ctx.disabledClass);\n    }\n  },\n  inputs: {\n    views: \"views\",\n    view: \"view\",\n    activeView: \"activeView\",\n    readonly: \"readonly\",\n    disabled: \"disabled\",\n    format: \"format\",\n    value: \"value\",\n    popupSettings: \"popupSettings\",\n    paletteSettings: \"paletteSettings\",\n    gradientSettings: \"gradientSettings\",\n    icon: \"icon\",\n    iconClass: \"iconClass\",\n    clearButton: \"clearButton\",\n    tabindex: \"tabindex\",\n    preview: \"preview\",\n    actionsLayout: \"actionsLayout\",\n    size: \"size\",\n    rounded: \"rounded\",\n    fillMode: \"fillMode\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    open: \"open\",\n    close: \"close\",\n    onFocus: \"focus\",\n    onBlur: \"blur\",\n    cancel: \"cancel\",\n    activeColorClick: \"activeColorClick\",\n    activeViewChange: \"activeViewChange\"\n  },\n  exportAs: [\"kendoColorPicker\"],\n  features: [i0.ɵɵProvidersFeature([{\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ColorPickerComponent)\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(() => ColorPickerComponent)\n  }, ColorPickerLocalizationService, {\n    provide: LocalizationService,\n    useExisting: ColorPickerLocalizationService\n  }, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.colorpicker'\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 12,\n  vars: 7,\n  consts: function () {\n    let i18n_154;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The aria-label applied to the ColorPicker component when the value is empty.\n       * @meaning kendo.colorpicker.colorPickerNoColor\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_155 = goog.getMsg(\"Colorpicker no color chosen\");\n      i18n_154 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_155;\n    } else {\n      i18n_154 = $localize`:kendo.colorpicker.colorPickerNoColor|The aria-label applied to the ColorPicker component when the value is empty.:Colorpicker no color chosen`;\n    }\n\n    let i18n_156;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The aria-label applied to the FlatColorPicker component when the value is empty.\n       * @meaning kendo.colorpicker.flatColorPickerNoColor\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_157 = goog.getMsg(\"Flatcolorpicker no color chosen\");\n      i18n_156 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_157;\n    } else {\n      i18n_156 = $localize`:kendo.colorpicker.flatColorPickerNoColor|The aria-label applied to the FlatColorPicker component when the value is empty.:Flatcolorpicker no color chosen`;\n    }\n\n    let i18n_158;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The aria-label applied to the ColorGradient component when the value is empty.\n       * @meaning kendo.colorpicker.colorGradientNoColor\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_159 = goog.getMsg(\"Colorgradient no color chosen\");\n      i18n_158 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_159;\n    } else {\n      i18n_158 = $localize`:kendo.colorpicker.colorGradientNoColor|The aria-label applied to the ColorGradient component when the value is empty.:Colorgradient no color chosen`;\n    }\n\n    let i18n_160;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The aria-label applied to the ColorPalette component when the value is empty.\n       * @meaning kendo.colorpicker.colorPaletteNoColor\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_161 = goog.getMsg(\"Colorpalette no color chosen\");\n      i18n_160 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_161;\n    } else {\n      i18n_160 = $localize`:kendo.colorpicker.colorPaletteNoColor|The aria-label applied to the ColorPalette component when the value is empty.:Colorpalette no color chosen`;\n    }\n\n    let i18n_162;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title for the gradient color drag handle chooser.\n       * @meaning kendo.colorpicker.colorGradientHandle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_163 = goog.getMsg(\"Choose color\");\n      i18n_162 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_163;\n    } else {\n      i18n_162 = $localize`:kendo.colorpicker.colorGradientHandle|The title for the gradient color drag handle chooser.:Choose color`;\n    }\n\n    let i18n_164;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title for the clear button.\n       * @meaning kendo.colorpicker.clearButton\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_165 = goog.getMsg(\"Clear value\");\n      i18n_164 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_165;\n    } else {\n      i18n_164 = $localize`:kendo.colorpicker.clearButton|The title for the clear button.:Clear value`;\n    }\n\n    let i18n_166;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title for the hue slider handle.\n       * @meaning kendo.colorpicker.hueSliderHandle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_167 = goog.getMsg(\"Set hue\");\n      i18n_166 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_167;\n    } else {\n      i18n_166 = $localize`:kendo.colorpicker.hueSliderHandle|The title for the hue slider handle.:Set hue`;\n    }\n\n    let i18n_168;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title for the opacity slider handle.\n       * @meaning kendo.colorpicker.opacitySliderHandle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_169 = goog.getMsg(\"Set opacity\");\n      i18n_168 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_169;\n    } else {\n      i18n_168 = $localize`:kendo.colorpicker.opacitySliderHandle|The title for the opacity slider handle.:Set opacity`;\n    }\n\n    let i18n_170;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The contrast ratio message for the contrast tool.\n       * @meaning kendo.colorpicker.contrastRatio\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_171 = goog.getMsg(\"Contrast ratio\");\n      i18n_170 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_171;\n    } else {\n      i18n_170 = $localize`:kendo.colorpicker.contrastRatio|The contrast ratio message for the contrast tool.:Contrast ratio`;\n    }\n\n    let i18n_172;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The message for the color preview pane.\n       * @meaning kendo.colorpicker.previewColor\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_173 = goog.getMsg(\"Color preview\");\n      i18n_172 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_173;\n    } else {\n      i18n_172 = $localize`:kendo.colorpicker.previewColor|The message for the color preview pane.:Color preview`;\n    }\n\n    let i18n_174;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The message for the selected color pane.\n       * @meaning kendo.colorpicker.revertSelection\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_175 = goog.getMsg(\"Revert selection\");\n      i18n_174 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_175;\n    } else {\n      i18n_174 = $localize`:kendo.colorpicker.revertSelection|The message for the selected color pane.:Revert selection`;\n    }\n\n    let i18n_176;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The message for the gradient view button.\n       * @meaning kendo.colorpicker.gradientView\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_177 = goog.getMsg(\"Gradient view\");\n      i18n_176 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_177;\n    } else {\n      i18n_176 = $localize`:kendo.colorpicker.gradientView|The message for the gradient view button.:Gradient view`;\n    }\n\n    let i18n_178;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The message for the palette view button.\n       * @meaning kendo.colorpicker.paletteView\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_179 = goog.getMsg(\"Palette view\");\n      i18n_178 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_179;\n    } else {\n      i18n_178 = $localize`:kendo.colorpicker.paletteView|The message for the palette view button.:Palette view`;\n    }\n\n    let i18n_180;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The message for the input format toggle button.\n       * @meaning kendo.colorpicker.formatButton\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_181 = goog.getMsg(\"Change color format\");\n      i18n_180 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_181;\n    } else {\n      i18n_180 = $localize`:kendo.colorpicker.formatButton|The message for the input format toggle button.:Change color format`;\n    }\n\n    let i18n_182;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The message for the Apply action button.\n       * @meaning kendo.colorpicker.applyButton\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_183 = goog.getMsg(\"Apply\");\n      i18n_182 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_183;\n    } else {\n      i18n_182 = $localize`:kendo.colorpicker.applyButton|The message for the Apply action button.:Apply`;\n    }\n\n    let i18n_184;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The message for the Cancel action button.\n       * @meaning kendo.colorpicker.cancelButton\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_185 = goog.getMsg(\"Cancel\");\n      i18n_184 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_185;\n    } else {\n      i18n_184 = $localize`:kendo.colorpicker.cancelButton|The message for the Cancel action button.:Cancel`;\n    }\n\n    let i18n_186;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the NumericTextBox representing the red color channel.\n       * @meaning kendo.colorpicker.redChannelLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_187 = goog.getMsg(\"Red channel\");\n      i18n_186 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_187;\n    } else {\n      i18n_186 = $localize`:kendo.colorpicker.redChannelLabel|The label of the NumericTextBox representing the red color channel.:Red channel`;\n    }\n\n    let i18n_188;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the NumericTextBox representing the green color channel.\n       * @meaning kendo.colorpicker.greenChannelLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_189 = goog.getMsg(\"Green channel\");\n      i18n_188 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_189;\n    } else {\n      i18n_188 = $localize`:kendo.colorpicker.greenChannelLabel|The label of the NumericTextBox representing the green color channel.:Green channel`;\n    }\n\n    let i18n_190;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the NumericTextBox representing the blue color channel.\n       * @meaning kendo.colorpicker.blueChannelLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_191 = goog.getMsg(\"Blue channel\");\n      i18n_190 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_191;\n    } else {\n      i18n_190 = $localize`:kendo.colorpicker.blueChannelLabel|The label of the NumericTextBox representing the blue color channel.:Blue channel`;\n    }\n\n    let i18n_192;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the NumericTextBox representing the alpha color channel.\n       * @meaning kendo.colorpicker.alphaChannelLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_193 = goog.getMsg(\"Alpha channel\");\n      i18n_192 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_193;\n    } else {\n      i18n_192 = $localize`:kendo.colorpicker.alphaChannelLabel|The label of the NumericTextBox representing the alpha color channel.:Alpha channel`;\n    }\n\n    let i18n_194;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the NumericTextBox representing the red color channel.\n       * @meaning kendo.colorpicker.redChannelLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_195 = goog.getMsg(\"R\");\n      i18n_194 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_195;\n    } else {\n      i18n_194 = $localize`:kendo.colorpicker.redChannelLabel|The label of the NumericTextBox representing the red color channel.:R`;\n    }\n\n    let i18n_196;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The placeholder for the green color input.\n       * @meaning kendo.colorpicker.greenInputPlaceholder\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_197 = goog.getMsg(\"G\");\n      i18n_196 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_197;\n    } else {\n      i18n_196 = $localize`:kendo.colorpicker.greenInputPlaceholder|The placeholder for the green color input.:G`;\n    }\n\n    let i18n_198;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The placeholder for the blue color input.\n       * @meaning kendo.colorpicker.blueInputPlaceholder\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_199 = goog.getMsg(\"B\");\n      i18n_198 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_199;\n    } else {\n      i18n_198 = $localize`:kendo.colorpicker.blueInputPlaceholder|The placeholder for the blue color input.:B`;\n    }\n\n    let i18n_200;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The placeholder for the HEX color input.\n       * @meaning kendo.colorpicker.hexInputPlaceholder\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_201 = goog.getMsg(\"HEX\");\n      i18n_200 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_201;\n    } else {\n      i18n_200 = $localize`:kendo.colorpicker.hexInputPlaceholder|The placeholder for the HEX color input.:HEX`;\n    }\n\n    return [[\"kendoColorPickerLocalizedMessages\", \"\", \"colorPickerNoColor\", i18n_154, \"flatColorPickerNoColor\", i18n_156, \"colorGradientNoColor\", i18n_158, \"colorPaletteNoColor\", i18n_160, \"colorGradientHandle\", i18n_162, \"clearButton\", i18n_164, \"hueSliderHandle\", i18n_166, \"opacitySliderHandle\", i18n_168, \"contrastRatio\", i18n_170, \"previewColor\", i18n_172, \"revertSelection\", i18n_174, \"gradientView\", i18n_176, \"paletteView\", i18n_178, \"formatButton\", i18n_180, \"applyButton\", i18n_182, \"cancelButton\", i18n_184, \"redChannelLabel\", i18n_186, \"greenChannelLabel\", i18n_188, \"blueChannelLabel\", i18n_190, \"alphaChannelLabel\", i18n_192, \"redChannelLabel\", i18n_194, \"greenInputPlaceholder\", i18n_196, \"blueInputPlaceholder\", i18n_198, \"hexInputPlaceholder\", i18n_200], [1, \"k-input-inner\"], [\"activeColor\", \"\"], [1, \"k-value-icon\", \"k-color-preview\", 3, \"ngClass\"], [\"class\", \"k-color-preview-icon k-icon\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"k-color-preview-mask\"], [\"tabindex\", \"-1\", \"type\", \"button\", \"role\", \"none\", \"aria-hidden\", \"true\", 1, \"k-input-button\", \"k-button\", \"k-button-md\", \"k-button-solid\", \"k-button-solid-base\", \"k-icon-button\"], [1, \"k-button-icon\", \"k-icon\", \"k-i-caret-alt-down\"], [\"popupTemplate\", \"\"], [\"container\", \"\"], [1, \"k-color-preview-icon\", \"k-icon\", 3, \"ngClass\"], [3, \"value\", \"format\", \"views\", \"activeView\", \"actionsLayout\", \"preview\", \"gradientSettings\", \"paletteSettings\", \"clearButton\", \"cancel\", \"focusout\", \"valueChange\", \"keydown\", \"activeViewChange\", \"actionButtonClick\"], [\"flatColorPicker\", \"\"]];\n  },\n  template: function ColorPickerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵelementStart(1, \"span\", 1, 2);\n      i0.ɵɵelementStart(3, \"span\", 3);\n      i0.ɵɵtemplate(4, ColorPickerComponent_span_4_Template, 1, 1, \"span\", 4);\n      i0.ɵɵelement(5, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 6);\n      i0.ɵɵelement(7, \"span\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, ColorPickerComponent_ng_template_8_Template, 2, 9, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementContainer(10, null, 9);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(4, _c202, ctx.iconStyles, !ctx.value));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.iconClass || ctx.icon);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"background-color\", ctx.value);\n    }\n  },\n  directives: [LocalizedColorPickerMessagesDirective, i1$1.NgClass, i1$1.NgIf, FlatColorPickerComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColorPickerComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoColorPicker',\n      selector: 'kendo-colorpicker',\n      providers: [{\n        multi: true,\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => ColorPickerComponent)\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(() => ColorPickerComponent)\n      }, ColorPickerLocalizationService, {\n        provide: LocalizationService,\n        useExisting: ColorPickerLocalizationService\n      }, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.colorpicker'\n      }],\n      template: `\n        <ng-container kendoColorPickerLocalizedMessages\n            i18n-colorPickerNoColor=\"kendo.colorpicker.colorPickerNoColor|The aria-label applied to the ColorPicker component when the value is empty.\"\n            colorPickerNoColor=\"Colorpicker no color chosen\"\n            i18n-flatColorPickerNoColor=\"kendo.colorpicker.flatColorPickerNoColor|The aria-label applied to the FlatColorPicker component when the value is empty.\"\n            flatColorPickerNoColor=\"Flatcolorpicker no color chosen\"\n            i18n-colorGradientNoColor=\"kendo.colorpicker.colorGradientNoColor|The aria-label applied to the ColorGradient component when the value is empty.\"\n            colorGradientNoColor=\"Colorgradient no color chosen\"\n            i18n-colorPaletteNoColor=\"kendo.colorpicker.colorPaletteNoColor|The aria-label applied to the ColorPalette component when the value is empty.\"\n            colorPaletteNoColor=\"Colorpalette no color chosen\"\n            i18n-colorGradientHandle=\"kendo.colorpicker.colorGradientHandle|The title for the gradient color drag handle chooser.\"\n            colorGradientHandle=\"Choose color\"\n            i18n-clearButton=\"kendo.colorpicker.clearButton|The title for the clear button.\"\n            clearButton=\"Clear value\"\n            i18n-hueSliderHandle=\"kendo.colorpicker.hueSliderHandle|The title for the hue slider handle.\"\n            hueSliderHandle=\"Set hue\"\n            i18n-opacitySliderHandle=\"kendo.colorpicker.opacitySliderHandle|The title for the opacity slider handle.\"\n            opacitySliderHandle=\"Set opacity\"\n            i18n-contrastRatio=\"kendo.colorpicker.contrastRatio|The contrast ratio message for the contrast tool.\"\n            contrastRatio=\"Contrast ratio\"\n            i18n-previewColor=\"kendo.colorpicker.previewColor|The message for the color preview pane.\"\n            previewColor=\"Color preview\"\n            i18n-revertSelection=\"kendo.colorpicker.revertSelection|The message for the selected color pane.\"\n            revertSelection=\"Revert selection\"\n            i18n-gradientView=\"kendo.colorpicker.gradientView|The message for the gradient view button.\"\n            gradientView=\"Gradient view\"\n            i18n-paletteView=\"kendo.colorpicker.paletteView|The message for the palette view button.\"\n            paletteView=\"Palette view\"\n            i18n-formatButton=\"kendo.colorpicker.formatButton|The message for the input format toggle button.\"\n            formatButton=\"Change color format\"\n            i18n-applyButton=\"kendo.colorpicker.applyButton|The message for the Apply action button.\"\n            applyButton=\"Apply\"\n            i18n-cancelButton=\"kendo.colorpicker.cancelButton|The message for the Cancel action button.\"\n            cancelButton=\"Cancel\"\n            i18n-redChannelLabel=\"kendo.colorpicker.redChannelLabel|The label of the NumericTextBox representing the red color channel.\"\n            redChannelLabel=\"Red channel\"\n            i18n-greenChannelLabel=\"kendo.colorpicker.greenChannelLabel|The label of the NumericTextBox representing the green color channel.\"\n            greenChannelLabel=\"Green channel\"\n            i18n-blueChannelLabel=\"kendo.colorpicker.blueChannelLabel|The label of the NumericTextBox representing the blue color channel.\"\n            blueChannelLabel=\"Blue channel\"\n            i18n-alphaChannelLabel=\"kendo.colorpicker.alphaChannelLabel|The label of the NumericTextBox representing the alpha color channel.\"\n            alphaChannelLabel=\"Alpha channel\"\n            i18n-redInputPlaceholder=\"kendo.colorpicker.redInputPlaceholder|The placeholder for the red color input.\"\n            redChannelLabel=\"R\"\n            i18n-greenInputPlaceholder=\"kendo.colorpicker.greenInputPlaceholder|The placeholder for the green color input.\"\n            greenInputPlaceholder=\"G\"\n            i18n-blueInputPlaceholder=\"kendo.colorpicker.blueInputPlaceholder|The placeholder for the blue color input.\"\n            blueInputPlaceholder=\"B\"\n            i18n-hexInputPlaceholder=\"kendo.colorpicker.hexInputPlaceholder|The placeholder for the HEX color input.\"\n            hexInputPlaceholder=\"HEX\">\n        </ng-container>\n        <span #activeColor class=\"k-input-inner\">\n            <span\n                class=\"k-value-icon k-color-preview\"\n                [ngClass]=\"{'k-icon-color-preview': iconStyles, 'k-no-color': !value}\">\n                <span *ngIf=\"iconClass || icon\" class=\"k-color-preview-icon k-icon\" [ngClass]=\"iconStyles\"></span>\n                <span class=\"k-color-preview-mask\" [style.background-color]=\"value\"></span>\n            </span>\n        </span>\n        <button\n            tabindex=\"-1\"\n            type=\"button\"\n            role=\"none\"\n            aria-hidden=\"true\"\n            class=\"k-input-button k-button k-button-md k-button-solid k-button-solid-base k-icon-button\">\n                <span class=\"k-button-icon k-icon k-i-caret-alt-down\"></span>\n        </button>\n        <ng-template #popupTemplate>\n            <kendo-flatcolorpicker\n                #flatColorPicker\n                [value]=\"value\"\n                [format]=\"format\"\n                [views]=\"views\"\n                [activeView]=\"activeView\"\n                [actionsLayout]=\"actionsLayout\"\n                [preview]=\"preview\"\n                [gradientSettings]=\"gradientSettings\"\n                [paletteSettings]=\"paletteSettings\"\n                [clearButton]=\"clearButton\"\n                (cancel)=\"handleCancelEvent($event)\"\n                (focusout)=\"handlePopupBlur($event)\"\n                (valueChange)=\"handleValueChange($event)\"\n                (keydown)=\"handlePopupKeyDown($event)\"\n                (activeViewChange)=\"activeViewChange.emit($event)\"\n                (actionButtonClick)=\"togglePopup()\">\n            </kendo-flatcolorpicker>\n        </ng-template>\n        <ng-container #container></ng-container>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1$3.PopupService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.Injector\n    }];\n  }, {\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-colorpicker']\n    }, {\n      type: HostBinding,\n      args: ['class.k-icon-picker']\n    }, {\n      type: HostBinding,\n      args: ['class.k-picker']\n    }],\n    focusedClass: [{\n      type: HostBinding,\n      args: ['class.k-focus']\n    }],\n    disabledClass: [{\n      type: HostBinding,\n      args: ['attr.aria-disabled']\n    }, {\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }],\n    ariaReadonly: [{\n      type: HostBinding,\n      args: ['attr.aria-readonly']\n    }],\n    ariaExpanded: [{\n      type: HostBinding,\n      args: ['attr.aria-expanded']\n    }],\n    hostTabindex: [{\n      type: HostBinding,\n      args: ['attr.tabindex']\n    }],\n    direction: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    role: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    hasPopup: [{\n      type: HostBinding,\n      args: ['attr.aria-haspopup']\n    }],\n    isControlInvalid: [{\n      type: HostBinding,\n      args: ['attr.aria-invalid']\n    }],\n    views: [{\n      type: Input\n    }],\n    view: [{\n      type: Input\n    }],\n    activeView: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    popupSettings: [{\n      type: Input\n    }],\n    paletteSettings: [{\n      type: Input\n    }],\n    gradientSettings: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    iconClass: [{\n      type: Input\n    }],\n    clearButton: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    preview: [{\n      type: Input\n    }],\n    actionsLayout: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    fillMode: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    open: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    cancel: [{\n      type: Output\n    }],\n    activeColorClick: [{\n      type: Output\n    }],\n    activeViewChange: [{\n      type: Output\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }],\n    activeColor: [{\n      type: ViewChild,\n      args: ['activeColor', {\n        static: true\n      }]\n    }],\n    popupTemplate: [{\n      type: ViewChild,\n      args: ['popupTemplate', {\n        static: true\n      }]\n    }],\n    flatColorPicker: [{\n      type: ViewChild,\n      args: ['flatColorPicker', {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * Custom component messages override default component messages.\n */\n\n\nclass ColorPickerCustomMessagesComponent extends ColorPickerMessages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n  get override() {\n    return true;\n  }\n\n}\n\nColorPickerCustomMessagesComponent.ɵfac = function ColorPickerCustomMessagesComponent_Factory(t) {\n  return new (t || ColorPickerCustomMessagesComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nColorPickerCustomMessagesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColorPickerCustomMessagesComponent,\n  selectors: [[\"kendo-colorpicker-messages\"], [\"kendo-flatcolorpicker-messages\"], [\"kendo-colorgradient-messages\"], [\"kendo-colorpalette-messages\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ColorPickerMessages,\n    useExisting: forwardRef(() => ColorPickerCustomMessagesComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function ColorPickerCustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColorPickerCustomMessagesComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: ColorPickerMessages,\n        useExisting: forwardRef(() => ColorPickerCustomMessagesComponent)\n      }],\n      selector: 'kendo-colorpicker-messages, kendo-flatcolorpicker-messages, kendo-colorgradient-messages, kendo-colorpalette-messages',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass FocusOnDomReadyDirective {\n  constructor(host, ngZone) {\n    this.host = host;\n    this.ngZone = ngZone;\n  }\n\n  ngAfterContentInit() {\n    this.focusOnNextTick();\n  }\n\n  focusOnNextTick() {\n    this.ngZone.runOutsideAngular(() => setTimeout(() => this.host.nativeElement.focus()));\n  }\n\n}\n\nFocusOnDomReadyDirective.ɵfac = function FocusOnDomReadyDirective_Factory(t) {\n  return new (t || FocusOnDomReadyDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nFocusOnDomReadyDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FocusOnDomReadyDirective,\n  selectors: [[\"\", \"kendoFocusOnDomReady\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FocusOnDomReadyDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoFocusOnDomReady]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n\nconst PUBLIC_DIRECTIVES = [ColorPickerComponent, ColorPaletteComponent, ColorGradientComponent, FlatColorPickerComponent, LocalizedColorPickerMessagesDirective, ColorPickerCustomMessagesComponent];\nconst INTERNAL_DIRECTIVES = [NumericLabelDirective, ColorInputComponent, FocusOnDomReadyDirective, ContrastComponent, ContrastValidationComponent, FlatColorPickerHeaderComponent, FlatColorPickerActionButtonsComponent, ColorContrastSvgComponent];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the ColorPicker.\n */\n\nclass ColorPickerModule {}\n\nColorPickerModule.ɵfac = function ColorPickerModule_Factory(t) {\n  return new (t || ColorPickerModule)();\n};\n\nColorPickerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ColorPickerModule\n});\nColorPickerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[SliderModule, NumericTextBoxModule, CommonModule, PopupModule, DraggableModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColorPickerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [PUBLIC_DIRECTIVES, INTERNAL_DIRECTIVES],\n      exports: [PUBLIC_DIRECTIVES],\n      imports: [SliderModule, NumericTextBoxModule, CommonModule, PopupModule, DraggableModule]\n    }]\n  }], null, null);\n})();\n\nconst DEFAULT_SIZE$2 = 'medium';\nconst DEFAULT_ROUNDED$1 = 'medium';\n/**\n * Represents the directive that renders the [Kendo UI CheckBox]({% slug overview_checkbox %}) input component.\n * The directive is placed on input type=\"checkbox\" elements.\n *\n * @example\n * ```ts-no-run\n * <input type=\"checkbox\" kendoCheckBox />\n * ```\n */\n\nclass CheckBoxDirective {\n  constructor(renderer, hostElement) {\n    this.renderer = renderer;\n    this.hostElement = hostElement;\n    this.kendoClass = true;\n    this._size = 'medium';\n    this._rounded = 'medium';\n  }\n  /**\n   * The size property specifies the width and height of the CheckBox\n   * ([see example]({% slug appearance_checkboxdirective %}#toc-size)).\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `none`\n   */\n\n\n  set size(size) {\n    const newSize = size ? size : DEFAULT_SIZE$2;\n    this.handleClasses(newSize, 'size');\n    this._size = newSize;\n  }\n\n  get size() {\n    return this._size;\n  }\n  /**\n   * The rounded property specifies the border radius of the CheckBox\n   * ([see example]({% slug appearance_checkboxdirective %}#toc-rounded)).\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `none`\n   */\n\n\n  set rounded(rounded) {\n    const newRounded = rounded ? rounded : DEFAULT_ROUNDED$1;\n    this.handleClasses(newRounded, 'rounded');\n    this._rounded = newRounded;\n  }\n\n  get rounded() {\n    return this._rounded;\n  }\n\n  ngAfterViewInit() {\n    const stylingInputs = ['size', 'rounded'];\n    stylingInputs.forEach(input => {\n      this.handleClasses(this[input], input);\n    });\n  }\n\n  handleClasses(value, input) {\n    const elem = this.hostElement.nativeElement;\n    const classes = getStylingClasses('checkbox', input, this[input], value);\n\n    if (classes.toRemove) {\n      this.renderer.removeClass(elem, classes.toRemove);\n    }\n\n    if (classes.toAdd) {\n      this.renderer.addClass(elem, classes.toAdd);\n    }\n  }\n\n}\n\nCheckBoxDirective.ɵfac = function CheckBoxDirective_Factory(t) {\n  return new (t || CheckBoxDirective)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nCheckBoxDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CheckBoxDirective,\n  selectors: [[\"input\", \"kendoCheckBox\", \"\"]],\n  hostVars: 2,\n  hostBindings: function CheckBoxDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-checkbox\", ctx.kendoClass);\n    }\n  },\n  inputs: {\n    size: \"size\",\n    rounded: \"rounded\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckBoxDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'input[kendoCheckBox]'\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    kendoClass: [{\n      type: HostBinding,\n      args: ['class.k-checkbox']\n    }],\n    size: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the CheckBox directive.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the CheckBox module\n * import { CheckBoxModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, CheckBoxModule], // import CheckBox module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\n\nclass CheckBoxModule {}\n\nCheckBoxModule.ɵfac = function CheckBoxModule_Factory(t) {\n  return new (t || CheckBoxModule)();\n};\n\nCheckBoxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CheckBoxModule\n});\nCheckBoxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckBoxModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [CheckBoxDirective],\n      exports: [CheckBoxDirective],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n\nconst DEFAULT_SIZE$1 = 'medium';\n/**\n * Represents the directive that renders the [Kendo UI RadioButton]({% slug overview_checkbox %}) input component.\n * The directive is placed on input type=\"radio\" elements.\n *\n * @example\n * ```ts-no-run\n * <input type=\"radio\" kendoRadioButton />\n * ```\n */\n\nclass RadioButtonDirective {\n  constructor(renderer, hostElement) {\n    this.renderer = renderer;\n    this.hostElement = hostElement;\n    this.kendoClass = true;\n    this._size = 'medium';\n    validatePackage(packageMetadata);\n  }\n  /**\n   * The size property specifies the width and height of the RadioButton\n   * ([see example]({% slug appearance_radiobuttondirective %}#toc-size)).\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `none`\n   */\n\n\n  set size(size) {\n    const newSize = size ? size : DEFAULT_SIZE$1;\n    this.handleClasses(newSize, 'size');\n    this._size = newSize;\n  }\n\n  get size() {\n    return this._size;\n  }\n\n  ngAfterViewInit() {\n    // kept in sync with other inputs for easier refactoring\n    // to a common base class\n    const stylingInputs = ['size'];\n    stylingInputs.forEach(input => {\n      this.handleClasses(this[input], input);\n    });\n  }\n\n  handleClasses(value, input) {\n    const elem = this.hostElement.nativeElement;\n    const classes = getStylingClasses('radio', input, this[input], value);\n\n    if (classes.toRemove) {\n      this.renderer.removeClass(elem, classes.toRemove);\n    }\n\n    if (classes.toAdd) {\n      this.renderer.addClass(elem, classes.toAdd);\n    }\n  }\n\n}\n\nRadioButtonDirective.ɵfac = function RadioButtonDirective_Factory(t) {\n  return new (t || RadioButtonDirective)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nRadioButtonDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: RadioButtonDirective,\n  selectors: [[\"input\", \"kendoRadioButton\", \"\"]],\n  hostVars: 2,\n  hostBindings: function RadioButtonDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-radio\", ctx.kendoClass);\n    }\n  },\n  inputs: {\n    size: \"size\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RadioButtonDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'input[kendoRadioButton]'\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    kendoClass: [{\n      type: HostBinding,\n      args: ['class.k-radio']\n    }],\n    size: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the RadioButton directive.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the RadioButton module\n * import { RadioButtonModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, RadioButtonModule], // import RadioButton module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\n\nclass RadioButtonModule {}\n\nRadioButtonModule.ɵfac = function RadioButtonModule_Factory(t) {\n  return new (t || RadioButtonModule)();\n};\n\nRadioButtonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: RadioButtonModule\n});\nRadioButtonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RadioButtonModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [RadioButtonDirective],\n      exports: [RadioButtonDirective],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n\nlet serial$1 = 0;\n/**\n * Represents an error message that will be shown underneath\n * a Kendo control or native HTML form-bound component after a validation.\n */\n\nclass ErrorComponent {\n  constructor() {\n    this.hostClass = true;\n    /**\n     * Specifies the alignment of the Error message.\n     *\n     * The possible values are:\n     * * (Default) `start`\n     * * `end`\n     */\n\n    this.align = 'start';\n    /**\n     * @hidden\n     */\n\n    this.id = `kendo-error-${serial$1++}`;\n    this.roleAttribute = 'alert';\n  }\n\n  get startClass() {\n    return this.align === 'start';\n  }\n\n  get endClass() {\n    return this.align === 'end';\n  }\n\n  get idAttribute() {\n    return this.id;\n  }\n\n}\n\nErrorComponent.ɵfac = function ErrorComponent_Factory(t) {\n  return new (t || ErrorComponent)();\n};\n\nErrorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ErrorComponent,\n  selectors: [[\"kendo-formerror\"]],\n  hostVars: 8,\n  hostBindings: function ErrorComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"role\", ctx.roleAttribute)(\"id\", ctx.idAttribute);\n      i0.ɵɵclassProp(\"k-form-error\", ctx.hostClass)(\"k-text-start\", ctx.startClass)(\"k-text-end\", ctx.endClass);\n    }\n  },\n  inputs: {\n    align: \"align\"\n  },\n  ngContentSelectors: _c43,\n  decls: 1,\n  vars: 0,\n  template: function ErrorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ErrorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-formerror',\n      template: `\n        <ng-content></ng-content>\n    `\n    }]\n  }], null, {\n    hostClass: [{\n      type: HostBinding,\n      args: ['class.k-form-error']\n    }],\n    align: [{\n      type: Input\n    }],\n    roleAttribute: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    startClass: [{\n      type: HostBinding,\n      args: ['class.k-text-start']\n    }],\n    endClass: [{\n      type: HostBinding,\n      args: ['class.k-text-end']\n    }],\n    idAttribute: [{\n      type: HostBinding,\n      args: ['attr.id']\n    }]\n  });\n})();\n\nlet serial = 0;\n/**\n * Represents a hint message that will be shown underneath a form-bound component.\n */\n\nclass HintComponent {\n  constructor() {\n    /**\n     * Specifies the alignment of the Hint message.\n     *\n     * The possible values are:\n     * * (Default) `start`\n     * * `end`\n     */\n    this.align = 'start';\n    /**\n     * @hidden\n     */\n\n    this.id = `kendo-hint-${serial++}`;\n    this.hostClass = true;\n  }\n\n  get startClass() {\n    return this.align === 'start';\n  }\n\n  get endClass() {\n    return this.align === 'end';\n  }\n\n  get idAttribute() {\n    return this.id;\n  }\n\n}\n\nHintComponent.ɵfac = function HintComponent_Factory(t) {\n  return new (t || HintComponent)();\n};\n\nHintComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HintComponent,\n  selectors: [[\"kendo-formhint\"]],\n  hostVars: 7,\n  hostBindings: function HintComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"id\", ctx.idAttribute);\n      i0.ɵɵclassProp(\"k-form-hint\", ctx.hostClass)(\"k-text-start\", ctx.startClass)(\"k-text-end\", ctx.endClass);\n    }\n  },\n  inputs: {\n    align: \"align\"\n  },\n  ngContentSelectors: _c43,\n  decls: 1,\n  vars: 0,\n  template: function HintComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HintComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-formhint',\n      template: `\n        <ng-content></ng-content>\n    `\n    }]\n  }], null, {\n    align: [{\n      type: Input\n    }],\n    hostClass: [{\n      type: HostBinding,\n      args: ['class.k-form-hint']\n    }],\n    startClass: [{\n      type: HostBinding,\n      args: ['class.k-text-start']\n    }],\n    endClass: [{\n      type: HostBinding,\n      args: ['class.k-text-end']\n    }],\n    idAttribute: [{\n      type: HostBinding,\n      args: ['attr.id']\n    }]\n  });\n})();\n/**\n * Specifies a container for form-bound controls (Kendo controls or native HTML controls).\n * Applies styling and behavior rules.\n */\n\n\nclass FormFieldComponent {\n  constructor(renderer, localizationService, hostElement) {\n    this.renderer = renderer;\n    this.localizationService = localizationService;\n    this.hostElement = hostElement;\n    this.hostClass = true;\n    /**\n     *\n     * Specifies when the Hint messages will be shown.\n     *\n     * The possible values are:\n     *\n     * * (Default) `initial`&mdash;Allows displaying hints when the form-bound component state is\n     * `valid` or `untouched` and `pristine`.\n     * * `always`&mdash;Allows full control over the visibility of the hints.\n     *\n     */\n\n    this.showHints = 'initial';\n    /**\n     * Specifies the layout orientation of the form field.\n     *\n     * * The possible values are:\n     *\n     * * (Default) `vertical`\n     * * `horizontal`\n     */\n\n    this.orientation = 'vertical';\n    /**\n     * Specifies when the Error messages will be shown.\n     *\n     * The possible values are:\n     *\n     * * (Default) `initial`&mdash;Allows displaying errors when the form-bound component state is\n     * `invalid` and `touched` or `dirty`.\n     * * `always`&mdash;Allows full control over the visibility of the errors.\n     *\n     */\n\n    this.showErrors = 'initial';\n    this.subscriptions = new Subscription();\n    this.rtl = false;\n    validatePackage(packageMetadata);\n    this.subscriptions.add(this.localizationService.changes.subscribe(({\n      rtl\n    }) => {\n      this.rtl = rtl;\n      this.direction = this.rtl ? 'rtl' : 'ltr';\n    }));\n  }\n\n  get errorClass() {\n    if (!this.control) {\n      return false;\n    }\n\n    return this.control.invalid && (this.control.touched || this.control.dirty);\n  }\n\n  get disabledClass() {\n    if (!this.control) {\n      return false;\n    } // radiobutton group\n\n\n    if (this.isRadioControl(this.control)) {\n      return false;\n    }\n\n    return this.disabledControl() || this.disabledElement() || this.disabledKendoInput();\n  }\n\n  set formControls(formControls) {\n    this.validateFormControl(formControls);\n    this.control = formControls.first;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get horizontal() {\n    return this.orientation === 'horizontal';\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hasHints() {\n    return this.showHints === 'always' ? true : this.showHintsInitial();\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hasErrors() {\n    return this.showErrors === 'always' ? true : this.showErrorsInitial();\n  }\n\n  ngAfterViewInit() {\n    this.setDescription();\n  }\n\n  ngAfterViewChecked() {\n    this.updateDescription();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  disabledKendoInput() {\n    return this.kendoInput && this.kendoInput.disabled;\n  }\n\n  disabledControl() {\n    return this.control.disabled;\n  }\n\n  disabledElement() {\n    const elements = this.controlElementRefs.toArray();\n    return elements.every(e => e.nativeElement.hasAttribute('disabled'));\n  }\n\n  validateFormControl(formControls) {\n    if (isDevMode() && formControls.length !== 1 && !this.isControlGroup(formControls)) {\n      throw new Error('The `kendo-formfield` component should contain ' + 'only one control of type NgControl with a formControlName(https://angular.io/api/forms/FormControlName)' + 'or an ngModel(https://angular.io/api/forms/NgModel) binding.');\n    }\n  }\n\n  isControlGroup(formControls) {\n    if (!formControls.length) {\n      return false;\n    }\n\n    const name = formControls.first.name;\n    return formControls.toArray().every(c => c.name === name && this.isRadioControl(c));\n  }\n\n  isRadioControl(control) {\n    return control.valueAccessor instanceof RadioControlValueAccessor;\n  }\n\n  updateDescription() {\n    const controls = this.findControlElements();\n\n    if (!controls) {\n      return;\n    }\n\n    controls.forEach(control => {\n      if (this.errorChildren.length > 0 || this.hintChildren.length > 0) {\n        const ariaIds = this.generateDescriptionIds(control);\n\n        if (ariaIds !== '') {\n          this.renderer.setAttribute(control, 'aria-describedby', ariaIds);\n        } else {\n          this.renderer.removeAttribute(control, 'aria-describedby');\n        }\n      }\n    });\n  }\n\n  findControlElements() {\n    if (!this.controlElementRefs) {\n      return;\n    } // if the control is KendoInput and has focusableId - dropdowns, dateinputs\n\n\n    if (this.kendoInput && this.kendoInput.focusableId && isDocumentAvailable()) {\n      return [this.hostElement.nativeElement.querySelector(`#${this.kendoInput.focusableId}`)];\n    }\n\n    return this.controlElementRefs.map(el => el.nativeElement);\n  }\n\n  generateDescriptionIds(control) {\n    const ids = new Set();\n    let errorAttribute = '';\n\n    if (control.hasAttribute('aria-describedby')) {\n      const attributes = control.getAttribute('aria-describedby').split(' ');\n      errorAttribute = attributes.filter(attr => attr.includes('kendo-error-'))[0];\n      attributes.forEach(attr => {\n        if (attr.includes('kendo-hint-') || attr.includes('kendo-error-')) {\n          return;\n        }\n\n        ids.add(attr);\n      });\n    }\n\n    this.hintChildren.forEach(hint => {\n      ids.add(hint.id);\n    });\n\n    if (this.hasErrors) {\n      this.errorChildren.forEach(error => {\n        ids.add(error.id);\n      });\n    } else {\n      ids.delete(errorAttribute);\n    }\n\n    return Array.from(ids).join(' ');\n  }\n\n  showHintsInitial() {\n    if (!this.control) {\n      return true;\n    }\n\n    const {\n      valid,\n      untouched,\n      pristine\n    } = this.control;\n    return valid || untouched && pristine;\n  }\n\n  showErrorsInitial() {\n    if (!this.control) {\n      return false;\n    }\n\n    const {\n      invalid,\n      dirty,\n      touched\n    } = this.control;\n    return invalid && (dirty || touched);\n  }\n\n  setDescription() {\n    this.updateDescription();\n    this.subscriptions.add(this.errorChildren.changes.subscribe(() => this.updateDescription()));\n    this.subscriptions.add(this.hintChildren.changes.subscribe(() => this.updateDescription()));\n  }\n\n}\n\nFormFieldComponent.ɵfac = function FormFieldComponent_Factory(t) {\n  return new (t || FormFieldComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nFormFieldComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FormFieldComponent,\n  selectors: [[\"kendo-formfield\"]],\n  contentQueries: function FormFieldComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, KendoInput, 7);\n      i0.ɵɵcontentQuery(dirIndex, NgControl, 5);\n      i0.ɵɵcontentQuery(dirIndex, NgControl, 5, ElementRef);\n      i0.ɵɵcontentQuery(dirIndex, ErrorComponent, 5);\n      i0.ɵɵcontentQuery(dirIndex, HintComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.kendoInput = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formControls = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.controlElementRefs = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.errorChildren = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.hintChildren = _t);\n    }\n  },\n  hostVars: 7,\n  hostBindings: function FormFieldComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx.direction);\n      i0.ɵɵclassProp(\"k-form-field\", ctx.hostClass)(\"k-form-field-error\", ctx.errorClass)(\"k-form-field-disabled\", ctx.disabledClass);\n    }\n  },\n  inputs: {\n    showHints: \"showHints\",\n    orientation: \"orientation\",\n    showErrors: \"showErrors\"\n  },\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.formfield'\n  }])],\n  ngContentSelectors: _c204,\n  decls: 5,\n  vars: 4,\n  consts: [[4, \"ngIf\"]],\n  template: function FormFieldComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c203);\n      i0.ɵɵprojection(0);\n      i0.ɵɵelementStart(1, \"div\");\n      i0.ɵɵprojection(2, 1);\n      i0.ɵɵtemplate(3, FormFieldComponent_ng_content_3_Template, 1, 0, \"ng-content\", 0);\n      i0.ɵɵtemplate(4, FormFieldComponent_ng_content_4_Template, 1, 0, \"ng-content\", 0);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"k-form-field-wrap\", ctx.horizontal);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasHints);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasErrors);\n    }\n  },\n  directives: [i1$1.NgIf],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormFieldComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-formfield',\n      template: `\n        <ng-content select=\"label, kendo-label\"></ng-content>\n        <div [class.k-form-field-wrap]=\"horizontal\">\n            <ng-content></ng-content>\n            <ng-content select=\"kendo-formhint\" *ngIf=\"hasHints\"></ng-content>\n            <ng-content select=\"kendo-formerror\" *ngIf=\"hasErrors\"></ng-content>\n        </div>\n    `,\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.formfield'\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    hostClass: [{\n      type: HostBinding,\n      args: ['class.k-form-field']\n    }],\n    direction: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    errorClass: [{\n      type: HostBinding,\n      args: ['class.k-form-field-error']\n    }],\n    disabledClass: [{\n      type: HostBinding,\n      args: ['class.k-form-field-disabled']\n    }],\n    formControls: [{\n      type: ContentChildren,\n      args: [NgControl, {\n        descendants: true\n      }]\n    }],\n    controlElementRefs: [{\n      type: ContentChildren,\n      args: [NgControl, {\n        read: ElementRef,\n        descendants: true\n      }]\n    }],\n    kendoInput: [{\n      type: ContentChild,\n      args: [KendoInput, {\n        static: true\n      }]\n    }],\n    errorChildren: [{\n      type: ContentChildren,\n      args: [ErrorComponent, {\n        descendants: true\n      }]\n    }],\n    hintChildren: [{\n      type: ContentChildren,\n      args: [HintComponent, {\n        descendants: true\n      }]\n    }],\n    showHints: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    showErrors: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the FormField, Error and Hint components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the FormField module\n * import { FormFieldModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, FormFieldModule], // import FormField module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\n\nclass FormFieldModule {}\n\nFormFieldModule.ɵfac = function FormFieldModule_Factory(t) {\n  return new (t || FormFieldModule)();\n};\n\nFormFieldModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FormFieldModule\n});\nFormFieldModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormFieldModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [HintComponent, ErrorComponent, FormFieldComponent],\n      exports: [HintComponent, ErrorComponent, FormFieldComponent],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nclass SignatureMessages extends ComponentMessages {}\n\nSignatureMessages.ɵfac = /* @__PURE__ */function () {\n  let ɵSignatureMessages_BaseFactory;\n  return function SignatureMessages_Factory(t) {\n    return (ɵSignatureMessages_BaseFactory || (ɵSignatureMessages_BaseFactory = i0.ɵɵgetInheritedFactory(SignatureMessages)))(t || SignatureMessages);\n  };\n}();\n\nSignatureMessages.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: SignatureMessages,\n  selectors: [[\"kendo-signature-messages-base\"]],\n  inputs: {\n    clear: \"clear\",\n    minimize: \"minimize\",\n    maximize: \"maximize\",\n    canvasLabel: \"canvasLabel\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SignatureMessages, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: 'kendo-signature-messages-base'\n    }]\n  }], null, {\n    clear: [{\n      type: Input\n    }],\n    minimize: [{\n      type: Input\n    }],\n    maximize: [{\n      type: Input\n    }],\n    canvasLabel: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Custom component messages override default component messages.\n */\n\n\nclass SignatureCustomMessagesComponent extends SignatureMessages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n  get override() {\n    return true;\n  }\n\n}\n\nSignatureCustomMessagesComponent.ɵfac = function SignatureCustomMessagesComponent_Factory(t) {\n  return new (t || SignatureCustomMessagesComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nSignatureCustomMessagesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SignatureCustomMessagesComponent,\n  selectors: [[\"kendo-signature-messages\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: SignatureMessages,\n    useExisting: forwardRef(() => SignatureCustomMessagesComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function SignatureCustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SignatureCustomMessagesComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: SignatureMessages,\n        useExisting: forwardRef(() => SignatureCustomMessagesComponent)\n      }],\n      selector: 'kendo-signature-messages',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass LocalizedSignatureMessagesDirective extends SignatureMessages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n}\n\nLocalizedSignatureMessagesDirective.ɵfac = function LocalizedSignatureMessagesDirective_Factory(t) {\n  return new (t || LocalizedSignatureMessagesDirective)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nLocalizedSignatureMessagesDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LocalizedSignatureMessagesDirective,\n  selectors: [[\"\", \"kendoSignatureLocalizedMessages\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: SignatureMessages,\n    useExisting: forwardRef(() => LocalizedSignatureMessagesDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LocalizedSignatureMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: SignatureMessages,\n        useExisting: forwardRef(() => LocalizedSignatureMessagesDirective)\n      }],\n      selector: '[kendoSignatureLocalizedMessages]'\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Arguments for the `close` event of the Signature component.\n */\n\n\nclass SignatureCloseEvent extends PreventableEvent {}\n/**\n * Arguments for the `open` event of the Signature component.\n */\n\n\nclass SignatureOpenEvent extends PreventableEvent {}\n\nconst noop = () => {};\n\nconst FOCUSED_CLASS = 'k-focus';\nconst DEFAULT_SIZE = 'medium';\nconst DEFAULT_ROUNDED = 'medium';\nconst DEFAULT_FILL_MODE = 'solid';\nconst DEFAULT_POPUP_SCALE = 3;\nconst DEFAULT_EXPORT_SCALE = 2;\nconst DEFAULT_COLOR = '#000000';\nconst DEFAULT_BACKGROUND_COLOR = '#ffffff';\n/**\n * Represents the [Kendo UI Signature component for Angular]({% slug overview_signature %}).\n *\n * The Signature allows users to add a hand-drawn signature to forms.\n */\n\nclass SignatureComponent {\n  constructor(element, renderer, ngZone, cd, localization) {\n    this.element = element;\n    this.renderer = renderer;\n    this.ngZone = ngZone;\n    this.cd = cd;\n    this.localization = localization;\n    this.staticHostClasses = true;\n    /**\n     * Sets the read-only state of the Signature.\n     *\n     * @default false\n     */\n\n    this.readonly = false;\n    /**\n     * Sets the disabled state of the Signature.\n     *\n     * @default false\n     */\n\n    this.disabled = false;\n    /**\n     * The size property specifies the padding of the Signature internal controls\n     * ([see example]({% slug appearance_signature %}#toc-size)).\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     */\n\n    this.size = DEFAULT_SIZE;\n    /**\n     * The rounded property specifies the border radius of the signature\n     * ([see example]({% slug appearance_signature %}#toc-rounded)).\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `full` (not supported by the Signature)\n     * * `none`\n     */\n\n    this.rounded = DEFAULT_ROUNDED;\n    /**\n     * The fillMode property specifies the background and border styles of the signature\n     * ([see example]({% slug appearance_signature %}#toc-fillMode)).\n     *\n     * The possible values are:\n     * * `flat`\n     * * `solid` (default)\n     * * `outline`\n     * * `none`\n     */\n\n    this.fillMode = DEFAULT_FILL_MODE;\n    /**\n     * The stroke width of the signature.\n     *\n     * @default 1\n     */\n\n    this.strokeWidth = 1;\n    /**\n     * A flag indicating whether to smooth out signature lines.\n     *\n     * @default false\n     */\n\n    this.smooth = false;\n    /**\n     * A flag indicating if the signature can be maximized.\n     *\n     * @default true\n     */\n\n    this.maximizable = true;\n    /**\n     * @hidden\n     */\n\n    this.maximized = false;\n    /**\n     * The scale factor for the popup.\n     *\n     * The Signature width and height will be multiplied by the scale when showing the popup.\n     *\n     * @default 3\n     */\n\n    this.popupScale = DEFAULT_POPUP_SCALE;\n    /**\n     * The scale factor for the exported image.\n     *\n     * The Signature width and height will be multiplied by the scale when converting the signature to an image.\n     *\n     * @default 2\n     */\n\n    this.exportScale = DEFAULT_EXPORT_SCALE;\n    /**\n     * A flag indicating whether the dotted line should be displayed in the background.\n     *\n     * @default false\n     */\n\n    this.hideLine = false;\n    /**\n     * Fires each time the signature value is changed.\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires each time the popup is about to open.\n     * This event is preventable. If you cancel it, the popup will remain closed.\n     */\n\n    this.open = new EventEmitter();\n    /**\n     * Fires each time the popup is about to close.\n     * This event is preventable. If you cancel it, the popup will remain open.\n     */\n\n    this.close = new EventEmitter();\n    /**\n     * Fires each time Signature is focused.\n     */\n\n    this.onFocus = new EventEmitter();\n    /**\n     * Fires each time the Signature is blurred.\n     */\n\n    this.onBlur = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.minimize = new EventEmitter();\n    /**\n     * Indicates whether the Signature wrapper is focused.\n     */\n\n    this.isFocused = false;\n    /**\n     * @hidden\n     */\n\n    this.isDrawing = false;\n    this.notifyNgTouched = noop;\n    this.notifyNgChanged = noop;\n    this._tabindex = 0;\n    this.hostClasses = [];\n    validatePackage(packageMetadata);\n    this.direction = localization.rtl ? 'rtl' : 'ltr';\n  }\n  /**\n   * Gets or sets the value of the signature.\n   *\n   * The value is a Base64-encoded PNG image.\n   */\n\n\n  set value(value) {\n    if (value !== this._value) {\n      this._value = value;\n\n      if (this.instance) {\n        this.instance.loadImage(value);\n      }\n    }\n  }\n\n  get value() {\n    return this._value;\n  }\n  /**\n   * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n   *\n   * @default 0\n   */\n\n\n  set tabindex(value) {\n    const tabindex = Number(value);\n    const defaultValue = 0;\n    this._tabindex = !isNaN(tabindex) ? tabindex : defaultValue;\n  }\n\n  get tabindex() {\n    return !this.disabled ? this._tabindex : undefined;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get isEmpty() {\n    return !this.value;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get canvasLabel() {\n    return this.getMessage('canvasLabel');\n  }\n  /**\n   * @hidden\n   */\n\n\n  get clearTitle() {\n    return this.getMessage('clear');\n  }\n  /**\n   * @hidden\n   */\n\n\n  get minimizeTitle() {\n    return this.getMessage('minimize');\n  }\n  /**\n   * @hidden\n   */\n\n\n  get maximizeTitle() {\n    return this.getMessage('maximize');\n  }\n  /**\n   * @hidden\n   */\n\n\n  get baseWidth() {\n    return this.width || this.element.nativeElement.offsetWidth;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get baseHeight() {\n    return this.height || this.element.nativeElement.offsetHeight;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get popupWidth() {\n    return this.baseWidth * this.popupScale;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get popupHeight() {\n    return this.baseHeight * this.popupScale;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get showMaximize() {\n    return !(this.maximized || this.isDrawing || !this.maximizable || this.disabled);\n  }\n  /**\n   * @hidden\n   */\n\n\n  get showMinimize() {\n    return this.maximized && !this.isDrawing;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get showClear() {\n    return !(this.isEmpty || this.isDrawing || this.readonly || this.disabled);\n  }\n\n  get focused() {\n    return this.isFocused;\n  }\n\n  set focused(value) {\n    if (this.isFocused !== value && this.element) {\n      const wrap = this.element.nativeElement;\n\n      if (value && !this.maximized) {\n        this.renderer.addClass(wrap, FOCUSED_CLASS);\n      } else {\n        this.renderer.removeClass(wrap, FOCUSED_CLASS);\n      }\n\n      this.isFocused = value;\n    }\n  }\n\n  get options() {\n    return {\n      scale: this.maximized ? this.popupScale : 1,\n      color: this.color,\n      backgroundColor: this.backgroundColor,\n      strokeWidth: this.strokeWidth,\n      smooth: this.smooth,\n      readonly: this.readonly\n    };\n  }\n\n  ngOnInit() {\n    this.subscriptions = this.localization.changes.subscribe(({\n      rtl\n    }) => {\n      this.direction = rtl ? 'rtl' : 'ltr';\n    });\n  }\n\n  ngAfterViewInit() {\n    this.applyHostClasses();\n    this.readThemeColors();\n    this.ngZone.runOutsideAngular(() => {\n      const element = this.canvas.nativeElement;\n      this.instance = new SignaturePad(element, Object.assign(Object.assign({}, this.options), {\n        onChange: () => this.onValueChange(),\n        onDraw: () => this.onDraw(),\n        onDrawEnd: () => this.onDrawEnd()\n      }));\n\n      if (this.value) {\n        this.instance.loadImage(this.value);\n      }\n\n      this.addEventListeners();\n    });\n  }\n\n  ngOnChanges(changes) {\n    if (anyChanged(['readonly', 'color', 'backgroundColor', 'strokeWidth', 'smooth'], changes, true)) {\n      this.instance.setOptions(this.options);\n    }\n\n    this.applyHostClasses();\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.instance.destroy();\n      this.instance = null;\n    }\n\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n      this.subscriptions = null;\n    }\n\n    if (this.unsubscribe) {\n      this.unsubscribe();\n      this.unsubscribe = null;\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  onClear() {\n    this.reset();\n    this.valueChange.emit(undefined);\n  }\n  /**\n   * @hidden\n   */\n\n\n  onValueChange() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const value = yield this.instance.exportImage({\n        width: this.baseWidth * this.exportScale,\n        height: this.baseHeight * this.exportScale\n      });\n      this._value = value;\n      this.cd.markForCheck();\n      this.ngZone.run(() => {\n        this.valueChange.emit(value);\n        this.notifyNgChanged(value);\n      });\n    });\n  }\n  /**\n   * @hidden\n   */\n\n\n  onDialogValueChange(value) {\n    this.value = value;\n    this.valueChange.emit(value);\n    this.notifyNgTouched();\n    this.notifyNgChanged(value);\n  }\n  /**\n   * @hidden\n   */\n\n\n  onDialogClick(e) {\n    var _a;\n\n    if (e.target.classList.contains('k-overlay')) {\n      this.isOpen = false;\n      (_a = this.maximizeButton) === null || _a === void 0 ? void 0 : _a.nativeElement.focus();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  onDialogKeydown(e) {\n    var _a;\n\n    if (e.keyCode === Keys.Escape) {\n      this.isOpen = false;\n      this.cd.detectChanges();\n      (_a = this.maximizeButton) === null || _a === void 0 ? void 0 : _a.nativeElement.focus();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  onDialogClose() {\n    var _a;\n\n    const args = new SignatureCloseEvent();\n    this.close.next(args);\n\n    if (!args.isDefaultPrevented()) {\n      this.isOpen = false;\n      (_a = this.maximizeButton) === null || _a === void 0 ? void 0 : _a.nativeElement.focus();\n    }\n  }\n  /**\n   * Clears the value of the Signature.\n   */\n\n\n  reset() {\n    var _a;\n\n    if (!isPresent(this.value)) {\n      return;\n    }\n\n    (_a = this.instance) === null || _a === void 0 ? void 0 : _a.clear();\n    this.value = this._value = undefined;\n    this.notifyNgChanged(undefined);\n  }\n  /**\n   * Toggles the popup of the Signature.\n   * Does not trigger the `open` and `close` events of the component.\n   *\n   * @param open An optional parameter. Specifies whether the popup will be opened or closed.\n   */\n\n\n  toggle(open) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    open = isPresent(open) ? open : !this.isOpen;\n    this.isOpen = open;\n  }\n  /**\n   * @hidden\n   */\n\n\n  onMaximize() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const args = new SignatureOpenEvent();\n      this.open.next(args);\n\n      if (!args.isDefaultPrevented()) {\n        this.popupValue = yield this.instance.exportImage({\n          width: this.popupWidth * this.exportScale,\n          height: this.popupHeight * this.exportScale\n        });\n        this.isOpen = true;\n        this.cd.detectChanges();\n      }\n    });\n  }\n  /**\n   * @hidden\n   */\n\n\n  onMinimize() {\n    this.minimize.next();\n  }\n\n  applyHostClasses() {\n    const classList = this.element.nativeElement.classList;\n    this.hostClasses.forEach(([name]) => classList.remove(name));\n    this.hostClasses = [[`k-signature-${SIZE_MAP[this.size || DEFAULT_SIZE]}`, !isNone(this.size)], [`k-input-${this.fillMode || DEFAULT_FILL_MODE}`, !isNone(this.fillMode)], [`k-rounded-${ROUNDED_MAP[this.rounded || DEFAULT_ROUNDED]}`, !isNone(this.rounded)]];\n    this.hostClasses.forEach(([name, enabled]) => classList.toggle(name, enabled));\n  }\n\n  readThemeColors() {\n    let defaultColor = DEFAULT_COLOR;\n    let defaultBackgroundColor = DEFAULT_BACKGROUND_COLOR;\n\n    if (isDocumentAvailable()) {\n      const el = this.element.nativeElement;\n      defaultColor = getComputedStyle(el).color;\n      defaultBackgroundColor = getComputedStyle(el).backgroundColor;\n    }\n\n    this.color = this.color || defaultColor;\n    this.backgroundColor = this.backgroundColor || defaultBackgroundColor;\n  }\n  /**\n   * Focuses the wrapper of the Signature.\n   */\n\n\n  focus() {\n    this.focused = true;\n    this.element.nativeElement.focus();\n  }\n  /**\n   * @hidden\n   */\n\n\n  onWrapperFocus() {\n    if (this.focused) {\n      return;\n    }\n\n    this.ngZone.run(() => {\n      this.focus();\n      this.onFocus.emit();\n    });\n  }\n  /**\n   * Blurs the Signature.\n   */\n\n\n  blur() {\n    this.focused = false;\n    this.element.nativeElement.blur();\n    this.notifyNgTouched();\n  }\n  /**\n   * @hidden\n   */\n\n\n  onWrapperBlur() {\n    if (this.isOpen) {\n      return;\n    }\n\n    this.ngZone.run(() => {\n      this.onBlur.emit();\n      this.focused = false;\n      this.notifyNgTouched();\n    });\n  }\n  /**\n   * @hidden\n   */\n\n\n  onWrapperClick(_event) {\n    if (this.disabled) {\n      return;\n    }\n\n    this.focus();\n  }\n  /**\n   * @hidden\n   */\n\n\n  writeValue(value) {\n    this.value = value;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnChange(fn) {\n    this.notifyNgChanged = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnTouched(fn) {\n    this.notifyNgTouched = fn;\n  }\n\n  onDraw() {\n    this.isDrawing = true;\n    this.cd.markForCheck();\n  }\n\n  onDrawEnd() {\n    this.isDrawing = false;\n    this.cd.markForCheck();\n  }\n\n  addEventListeners() {\n    const element = this.element.nativeElement;\n    const focusIn = this.renderer.listen(element, 'focusin', () => this.onWrapperFocus());\n    const focusOut = this.renderer.listen(element, 'focusout', e => {\n      const insideWrapper = closest$1(e.relatedTarget, element => element === this.element.nativeElement);\n\n      if (!insideWrapper) {\n        this.onWrapperBlur();\n      }\n    });\n    const click = this.renderer.listen(element, 'click', () => {\n      this.ngZone.run(e => {\n        this.onWrapperClick(e);\n      });\n    });\n\n    this.unsubscribe = () => {\n      focusIn();\n      focusOut();\n      click();\n    };\n  }\n\n  getMessage(key) {\n    if (this.maximized && this.parentLocalization) {\n      return this.parentLocalization.get(key);\n    }\n\n    return this.localization.get(key);\n  }\n\n}\n\nSignatureComponent.ɵfac = function SignatureComponent_Factory(t) {\n  return new (t || SignatureComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nSignatureComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SignatureComponent,\n  selectors: [[\"kendo-signature\"]],\n  viewQuery: function SignatureComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c205, 5, ElementRef);\n      i0.ɵɵviewQuery(_c206, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.maximizeButton = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas = _t.first);\n    }\n  },\n  hostVars: 13,\n  hostBindings: function SignatureComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx.direction);\n      i0.ɵɵstyleProp(\"width\", ctx.width, \"px\")(\"height\", ctx.height, \"px\");\n      i0.ɵɵclassProp(\"k-signature\", ctx.staticHostClasses)(\"k-input\", ctx.staticHostClasses)(\"k-readonly\", ctx.readonly)(\"k-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    readonly: \"readonly\",\n    disabled: \"disabled\",\n    width: \"width\",\n    height: \"height\",\n    value: \"value\",\n    tabindex: \"tabindex\",\n    size: \"size\",\n    rounded: \"rounded\",\n    fillMode: \"fillMode\",\n    color: \"color\",\n    backgroundColor: \"backgroundColor\",\n    strokeWidth: \"strokeWidth\",\n    smooth: \"smooth\",\n    maximizable: \"maximizable\",\n    maximized: \"maximized\",\n    popupScale: \"popupScale\",\n    exportScale: \"exportScale\",\n    parentLocalization: \"parentLocalization\",\n    hideLine: \"hideLine\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    open: \"open\",\n    close: \"close\",\n    onFocus: \"focus\",\n    onBlur: \"blur\",\n    minimize: \"minimize\"\n  },\n  exportAs: [\"kendoSignature\"],\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.signature'\n  }, {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SignatureComponent)\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 10,\n  vars: 7,\n  consts: function () {\n    let i18n_207;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The message for the Clear button.\n       * @meaning kendo.signature.clear\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_208 = goog.getMsg(\"Clear\");\n      i18n_207 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_208;\n    } else {\n      i18n_207 = $localize`:kendo.signature.clear|The message for the Clear button.:Clear`;\n    }\n\n    let i18n_209;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The message for the Maximize button.\n       * @meaning kendo.signature.maximize\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_210 = goog.getMsg(\"Maximize\");\n      i18n_209 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_210;\n    } else {\n      i18n_209 = $localize`:kendo.signature.maximize|The message for the Maximize button.:Maximize`;\n    }\n\n    let i18n_211;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The message for the Minimize button.\n       * @meaning kendo.signature.minimize\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_212 = goog.getMsg(\"Minimize\");\n      i18n_211 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_212;\n    } else {\n      i18n_211 = $localize`:kendo.signature.minimize|The message for the Minimize button.:Minimize`;\n    }\n\n    let i18n_213;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The message for the Canvas element aria-label.\n       * @meaning kendo.signature.canvasLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_214 = goog.getMsg(\"Signature canvas\");\n      i18n_213 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_INPUTS_FESM2015_KENDO_ANGULAR_INPUTS_JS_214;\n    } else {\n      i18n_213 = $localize`:kendo.signature.canvasLabel|The message for the Canvas element aria-label.:Signature canvas`;\n    }\n\n    return [[\"kendoSignatureLocalizedMessages\", \"\", \"clear\", i18n_207, \"maximize\", i18n_209, \"minimize\", i18n_211, \"canvasLabel\", i18n_213], [1, \"k-signature-actions\", \"k-signature-actions-top\"], [\"kendoButton\", \"\", \"class\", \"k-signature-action k-signature-maximize\", \"icon\", \"hyperlink-open\", \"fillMode\", \"flat\", 3, \"size\", \"title\", \"click\", 4, \"ngIf\"], [\"kendoButton\", \"\", \"class\", \"k-signature-action k-signature-minimize k-rotate-180\", \"icon\", \"hyperlink-open\", \"fillMode\", \"flat\", 3, \"size\", \"title\", \"click\", 4, \"ngIf\"], [\"role\", \"img\", 1, \"k-signature-canvas\"], [\"canvas\", \"\"], [\"class\", \"k-signature-line\", 4, \"ngIf\"], [1, \"k-signature-actions\", \"k-signature-actions-bottom\"], [\"kendoButton\", \"\", \"class\", \"k-signature-action k-signature-clear\", \"icon\", \"close\", \"fillMode\", \"flat\", 3, \"size\", \"title\", \"click\", 4, \"ngIf\"], [\"autoFocusedElement\", \".k-signature-action.k-signature-minimize\", 3, \"click\", \"keydown\", 4, \"ngIf\"], [\"kendoButton\", \"\", \"icon\", \"hyperlink-open\", \"fillMode\", \"flat\", 1, \"k-signature-action\", \"k-signature-maximize\", 3, \"size\", \"title\", \"click\"], [\"maximizeButton\", \"\"], [\"kendoButton\", \"\", \"icon\", \"hyperlink-open\", \"fillMode\", \"flat\", 1, \"k-signature-action\", \"k-signature-minimize\", \"k-rotate-180\", 3, \"size\", \"title\", \"click\"], [1, \"k-signature-line\"], [\"kendoButton\", \"\", \"icon\", \"close\", \"fillMode\", \"flat\", 1, \"k-signature-action\", \"k-signature-clear\", 3, \"size\", \"title\", \"click\"], [\"autoFocusedElement\", \".k-signature-action.k-signature-minimize\", 3, \"click\", \"keydown\"], [3, \"readonly\", \"disabled\", \"size\", \"rounded\", \"fillMode\", \"color\", \"backgroundColor\", \"strokeWidth\", \"smooth\", \"value\", \"hideLine\", \"maximized\", \"width\", \"height\", \"popupScale\", \"parentLocalization\", \"valueChange\", \"minimize\"]];\n  },\n  template: function SignatureComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵtemplate(2, SignatureComponent_button_2_Template, 2, 3, \"button\", 2);\n      i0.ɵɵtemplate(3, SignatureComponent_button_3_Template, 1, 3, \"button\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"div\", 4, 5);\n      i0.ɵɵtemplate(6, SignatureComponent_div_6_Template, 1, 0, \"div\", 6);\n      i0.ɵɵelementStart(7, \"div\", 7);\n      i0.ɵɵtemplate(8, SignatureComponent_button_8_Template, 1, 3, \"button\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, SignatureComponent_kendo_dialog_9_Template, 2, 18, \"kendo-dialog\", 9);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMaximize);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMinimize);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"tabindex\", ctx.tabindex)(\"aria-label\", ctx.canvasLabel);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.hideLine);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showClear);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n    }\n  },\n  directives: [LocalizedSignatureMessagesDirective, i1$1.NgIf, i5.ButtonDirective, i2.DialogComponent, SignatureComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SignatureComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoSignature',\n      selector: 'kendo-signature',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.signature'\n      }, {\n        multi: true,\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => SignatureComponent)\n      }],\n      template: `\n        <ng-container kendoSignatureLocalizedMessages\n            i18n-clear=\"kendo.signature.clear|The message for the Clear button.\"\n            clear=\"Clear\"\n            i18n-maximize=\"kendo.signature.maximize|The message for the Maximize button.\"\n            maximize=\"Maximize\"\n            i18n-minimize=\"kendo.signature.minimize|The message for the Minimize button.\"\n            minimize=\"Minimize\"\n            i18n-canvasLabel=\"kendo.signature.canvasLabel|The message for the Canvas element aria-label.\"\n            canvasLabel=\"Signature canvas\">\n        </ng-container>\n\n        <div class=\"k-signature-actions k-signature-actions-top\">\n            <button\n                *ngIf=\"showMaximize\"\n                #maximizeButton\n                kendoButton\n                class=\"k-signature-action k-signature-maximize\"\n                icon=\"hyperlink-open\"\n                fillMode=\"flat\"\n                [size]=\"size\"\n                (click)=\"onMaximize()\"\n                [attr.aria-label]=\"maximizeTitle\"\n                [title]=\"maximizeTitle\">\n            </button>\n            <button\n                *ngIf=\"showMinimize\"\n                kendoButton\n                class=\"k-signature-action k-signature-minimize k-rotate-180\"\n                icon=\"hyperlink-open\"\n                fillMode=\"flat\"\n                [size]=\"size\"\n                (click)=\"onMinimize()\"\n                [attr.aria-label]=\"minimizeTitle\"\n                [title]=\"minimizeTitle\">\n            </button>\n        </div>\n        <div\n            #canvas\n            class=\"k-signature-canvas\"\n            [attr.tabindex]=\"tabindex\"\n            role=\"img\"\n            [attr.aria-label]=\"canvasLabel\"\n        ></div>\n        <div\n            *ngIf=\"!hideLine\"\n            class=\"k-signature-line\"\n        ></div>\n        <div class=\"k-signature-actions k-signature-actions-bottom\">\n            <button\n                *ngIf=\"showClear\"\n                kendoButton\n                class=\"k-signature-action k-signature-clear\"\n                icon=\"close\"\n                fillMode=\"flat\"\n                [size]=\"size\"\n                [attr.aria-label]=\"clearTitle\"\n                [title]=\"clearTitle\"\n                (click)=\"onClear()\" >\n            </button>\n        </div>\n\n        <kendo-dialog\n            *ngIf=\"isOpen\"\n            autoFocusedElement=\".k-signature-action.k-signature-minimize\"\n            (click)=\"onDialogClick($event)\"\n            (keydown)=\"onDialogKeydown($event)\">\n            <kendo-signature\n                [readonly]=\"readonly\"\n                [disabled]=\"disabled\"\n                [size]=\"size\"\n                [rounded]=\"rounded\"\n                [fillMode]=\"fillMode\"\n                [color]=\"color\"\n                [backgroundColor]=\"backgroundColor\"\n                [strokeWidth]=\"strokeWidth\"\n                [smooth]=\"smooth\"\n                [value]=\"popupValue\"\n                (valueChange)=\"onDialogValueChange($event)\"\n                [hideLine]=\"hideLine\"\n                [class.k-signature-maximized]=\"true\"\n                [maximized]=\"true\"\n                (minimize)=\"onDialogClose()\"\n                [width]=\"popupWidth\"\n                [height]=\"popupHeight\"\n                [popupScale]=\"popupScale\"\n                [parentLocalization]=\"localization\">\n            </kendo-signature>\n        </kendo-dialog>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.LocalizationService\n    }];\n  }, {\n    staticHostClasses: [{\n      type: HostBinding,\n      args: ['class.k-signature']\n    }, {\n      type: HostBinding,\n      args: ['class.k-input']\n    }],\n    direction: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    maximizeButton: [{\n      type: ViewChild,\n      args: ['maximizeButton', {\n        read: ElementRef\n      }]\n    }],\n    readonly: [{\n      type: HostBinding,\n      args: ['class.k-readonly']\n    }, {\n      type: Input\n    }],\n    disabled: [{\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }, {\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['style.width.px']\n    }],\n    height: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['style.height.px']\n    }],\n    value: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    fillMode: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    smooth: [{\n      type: Input\n    }],\n    maximizable: [{\n      type: Input\n    }],\n    maximized: [{\n      type: Input\n    }],\n    popupScale: [{\n      type: Input\n    }],\n    exportScale: [{\n      type: Input\n    }],\n    parentLocalization: [{\n      type: Input\n    }],\n    hideLine: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    open: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    minimize: [{\n      type: Output\n    }],\n    canvas: [{\n      type: ViewChild,\n      args: ['canvas']\n    }]\n  });\n})();\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Signature component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Signature module\n * import { SignatureModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, SignatureModule], // import Signature module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\n\nclass SignatureModule {}\n\nSignatureModule.ɵfac = function SignatureModule_Factory(t) {\n  return new (t || SignatureModule)();\n};\n\nSignatureModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SignatureModule\n});\nSignatureModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ButtonModule, CommonModule, DialogsModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SignatureModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [SignatureComponent, SignatureCustomMessagesComponent, LocalizedSignatureMessagesDirective],\n      exports: [SignatureComponent, SignatureCustomMessagesComponent],\n      imports: [ButtonModule, CommonModule, DialogsModule]\n    }]\n  }], null, null);\n})();\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Inputs components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Inputs module\n * import { InputsModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, BrowserAnimationsModule, InputsModule], // import Inputs module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\n\nclass InputsModule {}\n\nInputsModule.ɵfac = function InputsModule_Factory(t) {\n  return new (t || InputsModule)();\n};\n\nInputsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: InputsModule\n});\nInputsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule], TextAreaModule, TextBoxModule, SliderModule, RangeSliderModule, SwitchModule, NumericTextBoxModule, MaskedTextBoxModule, ColorPickerModule, CheckBoxModule, RadioButtonModule, FormFieldModule, SignatureModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputsModule, [{\n    type: NgModule,\n    args: [{\n      exports: [TextAreaModule, TextBoxModule, SliderModule, RangeSliderModule, SwitchModule, NumericTextBoxModule, MaskedTextBoxModule, ColorPickerModule, CheckBoxModule, RadioButtonModule, FormFieldModule, SignatureModule],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ActiveColorClickEvent, CheckBoxDirective, CheckBoxModule, ColorGradientComponent, ColorPaletteComponent, ColorPickerCancelEvent, ColorPickerCloseEvent, ColorPickerComponent, ColorPickerCustomMessagesComponent, ColorPickerModule, ColorPickerOpenEvent, ErrorComponent, FlatColorPickerComponent, FormFieldComponent, FormFieldModule, HintComponent, InputSeparatorComponent, InputsModule, LabelTemplateDirective, LocalizedColorPickerMessagesDirective, LocalizedNumericTextBoxMessagesDirective, LocalizedRangeSliderMessagesDirective, LocalizedSignatureMessagesDirective, LocalizedSliderMessagesDirective, LocalizedSwitchMessagesDirective, LocalizedTextBoxMessagesDirective, MaskedTextBoxComponent, MaskedTextBoxModule, NumericLabelDirective, NumericTextBoxComponent, NumericTextBoxCustomMessagesComponent, NumericTextBoxModule, RadioButtonDirective, RadioButtonModule, RangeSliderComponent, RangeSliderCustomMessagesComponent, RangeSliderModule, SharedModule, SignatureCloseEvent, SignatureComponent, SignatureCustomMessagesComponent, SignatureMessages, SignatureModule, SignatureOpenEvent, SliderComponent, SliderCustomMessagesComponent, SliderModule, SliderTicksComponent, SwitchComponent, SwitchCustomMessagesComponent, SwitchModule, TextAreaComponent, TextAreaDirective, TextAreaModule, TextAreaSuffixComponent, TextBoxComponent, TextBoxCustomMessagesComponent, TextBoxDirective, TextBoxModule, TextBoxPrefixTemplateDirective, TextBoxSuffixTemplateDirective };","map":{"version":3,"sources":["C:/Repos/angular-kendo-grid-reactive/node_modules/@progress/kendo-angular-inputs/fesm2015/kendo-angular-inputs.js"],"names":["i0","isDevMode","Directive","Optional","EventEmitter","ElementRef","Component","Input","Output","HostBinding","ViewChild","ContentChild","ViewChildren","forwardRef","Inject","Injectable","HostListener","NgModule","ViewContainerRef","ContentChildren","ChangeDetectionStrategy","NgControl","NG_VALUE_ACCESSOR","NG_VALIDATORS","RadioControlValueAccessor","Subscription","fromEvent","interval","merge","BehaviorSubject","Subject","take","filter","concatMap","startWith","takeUntil","skip","debounceTime","throttleTime","i1","ComponentMessages","LocalizationService","L10N_PREFIX","RTL","i3","Keys","guid","hasObservers","anyChanged","isDocumentAvailable","KendoInput","isChanged","DraggableModule","EventsModule","ResizeSensorModule","PreventableEvent","findFocusableChild","closest","closest$1","validatePackage","i1$1","CommonModule","browser","mobileOS","detectDesktopBrowser","detectMobileOS","i1$2","i1$3","PopupModule","parseColor","parseColor$1","Color","namedColors","i5","ButtonModule","i2","DialogsModule","__awaiter","SignaturePad","isPresent","value","undefined","areSame","value1","value2","requiresZoneOnBlur","ngControl","touched","control","updateOn","fitIntoBounds","contender","min","max","isNaN","SIZE_MAP","small","medium","large","ROUNDED_MAP","full","isNone","style","getStylingClasses","componentType","stylingOption","previousValue","newValue","toRemove","toAdd","MAX_PRECISION","limitPrecision","precision","Math","fractionLength","String","split","length","maxFractionLength","toFixedPrecision","maxPrecision","parseFloat","toFixed","add","subtract","multiply","divide","dividend","divisor","NaN","power","correctionValue","pow","remainder","abs","floor","calculateFixedTrackSize","smallStep","fixedTickWidth","calculateTrackSize","wrapperWidth","offset","showButtons","BUTTONS_COUNT","trackOffset","trackWidth","calculateTicksCount","Error","adjustedRange","adjustedRatio","result","calculateValueFromTick","index","reverse","vertical","calculateHandlePosition","step","pos","decreaseValueToStep","largeStep","stepValue","stepRemainder","limitValue","increaseValueToStep","isStartHandle","dragHandle","id","indexOf","snapValue","options","limited","left","right","trimValue","trimValueRange","identity","isSameRange","elementOffset","element","box","getBoundingClientRect","documentElement","document","window","pageXOffset","scrollLeft","clientLeft","top","pageYOffset","scrollTop","clientTop","eventValue","eventArgs","scaleElement","rtl","pageY","pageX","scale","clientHeight","clientWidth","offsetValue","stepFractionLength","isButton","className","increment","decrement","incrementLarge","decrementLarge","validateValue","slidersUtil","SliderModelBase","constructor","props","wrapper","track","renderer","tickSizes","getTickSizes","resizeTrack","orientation","altOrientation","parentElement","resizeTicks","ticksContainer","ticks","dimension","map","tick","adjustPadding","resizeWrapper","fixedTrackWidth","wrapperParentEl","elementSize","count","trackSize","distStep","usedSpace","endPoint","i","size","round","push","totalTickSize","reduce","prev","curr","reminder","padding","paddingTop","getComputedStyle","parseInt","bottom","SliderModel","positionHandle","position","handlePosition","setStyle","positionSelection","selection","UNTOUCHED","toClassList","classNames","trim","hasClass","Boolean","find","name","invokeElementMethod","args","nativeElement","apply","isUntouched","containsFocus","hostElement","contains","node","predicate","parentNode","packageMetadata","productName","productCodes","publishDate","version","licensingDocsUrl","LabelTemplateDirective","templateRef","ɵfac","TemplateRef","ɵdir","type","selector","decorators","SliderBase","localizationService","injector","ngZone","changeDetector","title","tickPlacement","disabled","readonly","tabindex","onFocus","onBlur","valueChange","sliderClass","subscriptions","ifEnabled","callback","event","isDisabled","call","direction","horizontalClass","verticalClass","disabledClass","setDisabledState","markForCheck","ngOnInit","changes","subscribe","sizeComponent","removeAttribute","get","isEmpty","keyBinding","ArrowLeft","ArrowRight","ArrowDown","ArrowUp","PageUp","PageDown","Home","End","resetStyles","elements","forEach","el","removeStyle","Injector","Renderer2","NgZone","ChangeDetectorRef","ɵcmp","template","static","sliderSelection","read","labelTemplate","SliderTick","classes","SliderTicksComponent","wrapperClasses","ngOnChanges","_","createTicks","tickValueProps","Object","assign","endTickClasses","first","NgForOf","NgClass","NgSwitch","NgSwitchCase","NgTemplateOutlet","tickTitle","tickElements","SliderMessages","LocalizedSliderMessagesDirective","service","provide","useExisting","providers","PRESSED$1","SliderComponent","localization","focusableId","animate","focusChangedProgrammatically","onWrapClick","target","getProps","changeValue","draghandle","onKeyDown","e","handler","keyCode","preventDefault","ngChange","ngTouched","decreaseValue","increaseValue","handleBlur","focused","run","emit","tabIndex","currentValue","toString","focus","blur","onStable","asObservable","pipe","ngAfterViewInit","setValueChangeInterval","increaseButton","decreaseButton","attachElementEventHandlers","isSliderInvalid","ngOnDestroy","unsubscribe","incrementMessage","incrementTitle","decrementMessage","decrementTitle","dragHandleMessage","dragHandleTitle","handleDragPress","originalEvent","removeClass","onHandleDrag","dragging","onHandleRelease","addClass","writeValue","registerOnChange","fn","registerOnTouched","selectionEl","dragHandleEl","model","isFocused","isDragged","runOutsideAngular","mousedown","mouseup","mouseout","subscription","button","buttons","sliderClasses","classList","isInvalid","setAttribute","tabbing","cursorInsideWrapper","listen","relatedTarget","Tab","useValue","multi","EventsOutsideAngularDirective","NgIf","DraggableDirective","ResizeSensorComponent","exportAs","RangeSliderModel","startHandlePosition","endHandlePosition","currentSelectionPosition","RangeSliderMessages","dragHandleStart","dragHandleEnd","LocalizedRangeSliderMessagesDirective","PRESSED","RangeSliderComponent","startHandleId","endHandleId","activeHandle","trackValue","newRangeValue","startValue","endValue","draghandleStart","draghandleEnd","startHandleIsActive","nonDraggedHandle","trimmedValue","isRangeSliderInvalid","textFor","key","valueText","draggedHandle","lastCoords","lastHandlePosition","x","y","mousePos","width","up","moveStartHandle","moveEndHandle","moveBothHandles","activeStartHandle","horizontal","forward","incorrectValueState","dragHandleStartEl","dragHandleEndEl","data","rangeSliderClasses","Messages","on","off","LocalizedSwitchMessagesDirective","FOCUSED$4","DEFAULT_SIZE$8","DEFAULT_THUMB_ROUNDED","DEFAULT_TRACK_ROUNDED","SwitchComponent","hostClasses","initialized","hostClickSubscription","_checked","_size","_trackRounded","_thumbRounded","handleFocus","keyDownHandler","bind","clickHandler","checked","setHostClasses","newSize","handleClasses","thumbRounded","newThumbRounded","handleThumbClasses","trackRounded","newTrackRounded","handleTrackClasses","ieClass","msie","ariaDisabled","ariaReadonly","onLabelMessage","onLabel","offLabelMessage","offLabel","isEnabled","localizationChangeSubscription","attachHostClickHandler","isControlInvalid","valid","Space","Enter","input","elem","_a","_b","thumb","TextBoxDirective","inputElement","onValueChange","autoFillStart","autoFillEnd","listeners","text","animationName","listener","TextAreaDirective","zone","elementClasses","autofillClass","autoSize","elementValue","resize","setElementProperty","resizeSubscription","inputSubscription","handleInput","initialHeight","offsetHeight","height","setProperty","scrollHeight","createMaxValidator","maxValue","c","maxError","createMinValidator","minValue","minError","MIN_DOC_LINK","MAX_DOC_LINK","POINT","INITIAL_SPIN_DELAY","SPIN_DELAY","EXPONENT_REGEX","numericRegex","autoCorrect","decimals","separator","signPattern","numberPattern","RegExp","decimalPart","ceil","noop$1","defined","isNumber","pad","digits","padString","Array","join","getDeltaFromMouseWheel","delta","wheelDelta","detail","getCaretPosition","selectionStart","extractSignificantNumericChars","formattedString","significantCharacters","acc","includes","isRightClick","isRightClickIE","isRightClickOther","which","ArrowDirection","NumericTextBoxMessages","LocalizedNumericTextBoxMessagesDirective","PARSABLE_OPTIONS","PARSABLE_DEFAULTS","FOCUSED$3","DEFAULT_SIZE$7","DEFAULT_ROUNDED$6","DEFAULT_FILL_MODE$5","NumericTextBoxComponent","intl","spinners","rangeValidation","changeValueOnScroll","selectOnFocus","arrowDirection","None","inputValue","minValidateFn","maxValidateFn","_format","isPasted","mouseDown","_rounded","_fillMode","ngValidatorChange","domEvents","increasePress","arrowPress","Up","decreasePress","Down","releaseArrow","clearTimeout","spinTimeout","detectChanges","handlePaste","numericInput","selectionEnd","pressedKey","NumpadDecimal","replaceNumpadDotValue","formatInputValue","parseNumber","isValid","setSelection","parsedValue","restrictDecimals","limitInputValue","hasTrailingZeros","setInputValue","updateValue","previousSelection","handleDragEnter","handleMouseDown","shouldSelectAll","setTimeout","selectAll","selectCaret","handleKeyDown","addStep","end","start","handleWheel","format","rounded","newRounded","fillMode","newFillMode","disableClass","intlChange","stylingInputs","parseOptions","option","verifySettings","verifyValue","restrictModelValue","unbindHandler","validate","registerOnValidatorChange","restrictedValue","notifyValueChange","decimalSeparator","numberSymbols","decimal","hasDecimals","wrap","spin","substring","test","timeout","isInRange","enteredValue","limitedValue","selectToEnd","lengthChange","hasMax","hasMin","padLimit","replaceNext","correctedValue","substr","paddedValue","tryPadValue","limit","limitLength","zeroPadded","zeroPaddedNext","stringValue","parts","fraction","is","exponentMatch","exec","replace","formatValue","formattedValue","formatNumber","JSON","stringify","idx","parsed","lastIndexOf","caretPosition","partialValue","significantCharsInFormattedValue","adjustedSignificantChars","adjustSignificantChars","numberOfLeadingZeroes","separatorIndex","matchedLeadingZeroes","match","lengthOfMatch","lengthOfLeadingZeroesMatch","significantChars","leadingZeroes","IntlService","placeholder","maxlength","NumericTextBoxCustomMessagesComponent","override","ResultType","Result","rest","Undefined","chain","fold","s","concat","r","vs","v","__","Stream","inputCursor","controlCursor","eof","next","char","peek","eat_input","eat_control","eat","toArray","ESCAPE_CHARACTER","Parser","parse","f","stream","isLiteral","Literal","mask","prompt","promptPlaceholder","rule","Mask","literal","_token","unmask","unliteral","token","rules","creator","rawMask","rawLiteral","includeLiterals","always","append","p1","p2","sequence","list","parser","greedy","MaskingService","maskTokens","unmaskTokens","rawTokens","validationTokens","update","tokenize","validationValue","maskedValue","unmasked","rawValue","maskRaw","masked","maskInput","splitPoint","maskRemoved","maskInserted","maskInRange","pasted","oldValue","beforeChange","slice","afterChange","unchanged","changed","adjustPosition","caretChar","maskTokenCreator","unmaskTokenCreator","rawTokenCreator","validationTokenCreator","tokens","ɵprov","resolvedPromise","Promise","resolve","FOCUSED$2","DEFAULT_SIZE$6","DEFAULT_ROUNDED$5","DEFAULT_FILL_MODE$4","MaskedTextBoxComponent","maskOnFocus","maskValidation","focusClick","defaultRules","emptyMask","updateInput","handleClick","setFocusSelection","onTouched","onChange","updateService","_rules","hostDisabledClass","handleDragDrop","pasteHandler","inputHandler","updateValueWithEvents","rightPart","to","normalizeValue","extractChanges","then","patternError","isFromOnChanges","keys","obj","extra","config","present","SlidersCommonModule","ɵmod","ɵinj","declarations","exports","imports","SliderCustomMessagesComponent","SliderModule","RangeSliderCustomMessagesComponent","RangeSliderModule","SwitchCustomMessagesComponent","SwitchModule","NumericTextBoxModule","MaskedTextBoxModule","isSafari","userAgent","desktopBrowser","safari","isJapanese","japaneseRegex","TextBoxSuffixTemplateDirective","TextBoxPrefixTemplateDirective","TextBoxMessages","clear","LocalizedTextBoxMessagesDirective","FOCUSED$1","DEFAULT_SIZE$5","DEFAULT_ROUNDED$4","DEFAULT_FILL_MODE$3","TextBoxComponent","showSuccessIcon","showErrorIcon","clearButton","inputFocus","inputBlur","_isFocused","handleInputFocus","clearButtonClicked","handleInputBlur","ev","isBrowserSafari","navigator","incomingValue","caretStart","caretEnd","setSelectionRange","checkClearButton","closestTextbox","isFocusedElement","querySelector","clearTitle","showClearButton","clearValue","showErrorsInitial","invalid","dirty","showSuccessInitial","successIconClasses","successIcon","errorIconClasses","errorIcon","clearButtonClasses","clearButtonIcon","hasErrors","isSuccessful","suffixTemplate","prefixTemplate","TextBoxCustomMessagesComponent","InputSeparatorComponent","hostClass","SHARED_DIRECTIVES","SharedModule","TextBoxModule","TextFieldsBase","resizeClasses","FOCUSED","DEFAULT_SIZE$4","DEFAULT_ROUNDED$3","DEFAULT_FILL_MODE$2","TextAreaComponent","flow","resizable","flowCol","flowRow","handleFlow","cols","resizableClass","isVertical","suffix","children","rows","TextAreaSuffixComponent","TextAreaModule","PALETTEPRESETS","basic","colors","columns","office","apex","austin","clarity","slipstream","metro","hardcover","trek","verve","monochrome","accessible","ColorPickerCancelEvent","ColorPickerCloseEvent","ColorPickerOpenEvent","ActiveColorClickEvent","color","openPrevented","preventOpen","isOpenPrevented","opacityEnabled","safe","allowedFormats","nameFormat","parsedColor","parsedColorResult","getHexValue","toCssRgba","getHSV","toHSV","getRGBA","toBytes","getColorFromHSV","hsva","hue","h","saturation","alpha","a","fromHSV","opacity","toCss","getColorFromHue","getColorFromRGBA","rgba","red","green","g","blue","b","fromBytes","toLowerCase","toHex","getRGBFromRGBA","foregroundColor","backgroundColor","r1","g1","b1","a1","r2","g2","b2","getLuminance","rgb","getContrast","luminance1","luminance2","brightest","darkest","getContrastFromTwoRGBAs","bezierCommand","controlPointCalc","point","cpsX","cpsY","cpeX","cpeY","controlPoint","lineCalc","current","previous","p","n","smooth","l","angle","PI","cos","sin","line","pointA","pointB","lengthX","lengthY","sqrt","atan2","d","points","command","svgPath","ColorPickerLocalizationService","prefix","messageService","_rtl","MessageService","DEFAULT_OUTPUT_FORMAT","DEFAULT_GRADIENT_BACKGROUND_COLOR","DRAGHANDLE_MOVE_SPEED","DRAGHANDLE_MOVE_SPEED_SMALL_STEP","AAA_RATIO","AA_RATIO","DEFAULT_PRESET$1","DEFAULT_ACCESSIBLE_PRESET$1","STEP_COUNT","FlatColorPickerLocalizationService","colorPickerLocalization","shortKey","FlatColorPickerService","getPaletteSettings","settings","defaultPreset","settingsPalette","palette","presetColumns","tileSize","paletteTileLayout","FlatColorPickerHeaderComponent","innerTabIndex","viewChange","valuePaneClick","clearButtonClick","tabOut","onViewButtonClick","view","activeView","viewButtons","views","getViewButtonIcon","getText","onHeaderTabOut","preview","viewButtonsCollection","clearButtonElement","ColorGradientLocalizationService","flatColorPickerLocalization","ColorContrastSvgComponent","metrics","oldA","oldH","setPaths","bezierCommandCalc","paths","getPaths","findValue","contrast","low","high","comparer","mid","currentContrast","stepCount","reversed","NumericLabelDirective","host","localizationToken","kendoAdditionalNumericLabel","ColorInputComponent","colorInputClass","activeElement","rgbaInputValid","every","initDomEvents","hex","formatButtonTitle","handleRgbaValueChange","handleHexValueChange","handleRgbaInputBlur","handleHexInputBlur","focusLast","lastInput","onTab","toggleFormatView","formatView","toggleFormatButton","hexInput","opacityInput","blueInput","ContrastValidationComponent","passMessage","failMessage","contrastText","ratio","pass","ContrastComponent","formatedRatio","contrastRatio","contrastRatioText","satisfiesAACondition","satisfiesAAACondition","ColorPickerMessages","colorPaletteNoColor","colorGradientNoColor","flatColorPickerNoColor","colorPickerNoColor","colorGradientHandle","hueSliderHandle","opacitySliderHandle","hexInputPlaceholder","redInputPlaceholder","greenInputPlaceholder","blueInputPlaceholder","alphaInputPlaceholder","redChannelLabel","greenChannelLabel","blueChannelLabel","alphaChannelLabel","passContrast","failContrast","previewColor","revertSelection","gradientView","paletteView","formatButton","applyButton","cancelButton","LocalizedColorPickerMessagesDirective","serial$3","ColorGradientComponent","cdr","ariaRole","delay","gradientSliderStep","gradientSliderSmallStep","internalNavigation","_tabindex","hueSliderTouched","alphaSliderTouched","updateValues","hsvHandleCoordinates","notifyNgChanged","notifyNgTouched","dynamicRTLSubscription","readonlyAttribute","gradientId","hostTabindex","enterHandler","gradientDragHandle","escapeHandler","matches","stopImmediatePropagation","focusHandler","_value","contrastTool","_contrastTool","Number","alphaSliderValue","gradientRect","gradientWrapper","hsvSliderValueText","contrastToolVisible","updateUI","addEventListeners","subscribeChanges","unsubscribeChanges","removeListener","reset","handleValueChange","changePosition","onKeyboardAction","dragHandleElement","keyboardMoveX","keyboardMoveY","shiftKey","newY","newX","moveDragHandle","clientX","clientY","handleHueSliderChange","setBackgroundColor","setAlphaSliderBackground","handleAlphaSliderChange","handleInputsValueChange","colorGradientHandleTitle","colorGradientHandleAriaLabel","hueSliderTitle","opacitySliderTitle","clearButtonTitle","positionX","positionY","gradientRectWidth","gradientRectHeight","setDragHandleElementPosition","setHostElementAriaLabel","alphaSlider","sliderTrack","hsvRectangle","focusOutListener","keydownListener","keyupListener","dragHandleFocusInListener","dragHandleFocusOutListener","changeRequestsSubscription","styles","inputs","ColorPaletteLocalizationService","ColorPaletteService","colorRows","setColorMatrix","row","getCellCoordsFor","col","getColorAt","cellCoords","getNextCell","horizontalStep","verticalStep","clampIndex","minArrayIndex","DEFAULT_TILE_SIZE","DEFAULT_COLUMNS_COUNT","DEFAULT_PRESET","DEFAULT_ACCESSIBLE_PRESET","serial$2","ColorPaletteComponent","role","selectionChange","cellSelection","uniqueId","activeDescendant","activeCellId","paletteId","minColumnsCount","_columns","_palette","defaultValue","tileLayout","setRows","selectCell","handleKeydown","isRTL","handleCellNavigation","handleEnter","focusInComponent","handleHostBlur","handleCellFocusOnBlur","handleCellSelection","focusedCell","selectedCell","selectedColor","NgStyle","FlatColorPickerActionButtonsComponent","actionButtonClick","onActionButtonClick","firstButton","lastButton","FlatColorPickerComponent","actionsLayout","cancel","activeViewChange","_gradientSettings","_paletteSettings","firstFocusable","gradientSettings","paletteSettings","headerHasContent","headerElement","gradient","lastFocusable","footer","setActiveView","setSizingVariables","removeGradientAttributes","nextTabStop","previousTabStop","onViewChange","onClearButtonClick","resetInnerComponentValue","changeCurrentValue","setFlatColorPickerValue","onAction","resetSelection","isDefaultPrevented","ariaLabelValue","paletteTileSize","gradientElement","header","DOM_FOCUS_EVENTS","DEFAULT_SIZE$3","DEFAULT_ROUNDED$2","DEFAULT_FILL_MODE$1","nextColorPickerId","ColorPickerComponent","popupService","hasPopup","open","close","activeColorClick","_popupSettings","popupSubs","domFocusListener","colorPickerId","focusedClass","ariaExpanded","isOpen","popupSettings","popupRef","iconStyles","iconClass","icon","handleHostId","closePopup","handleDomEvents","handleCancelEvent","togglePopup","toggleWithEvents","handleWrapperClick","activeColor","handleWrapperFocus","handleWrapperBlur","toggle","openPopup","handlePopupBlur","popupBlurInvalid","handleWrapperKeyDown","handlePopupKeyDown","Escape","currentElement","firstFocusableElement","lastFocusableElement","nextElement","focusInFlatColorPickerElement","popupElement","hostClicked","sameState","focusFirstElement","flatColorPicker","elementToFocus","horizontalAlign","anchorPosition","popupPosition","anchor","appendTo","popupAlign","anchorAlign","popupClass","content","popupTemplate","positionMode","popupAnchorViewportLeave","preventScroll","action","events","closestPopup","closestWrapper","existingId","getAttribute","PopupService","container","ColorPickerCustomMessagesComponent","FocusOnDomReadyDirective","ngAfterContentInit","focusOnNextTick","PUBLIC_DIRECTIVES","INTERNAL_DIRECTIVES","ColorPickerModule","DEFAULT_SIZE$2","DEFAULT_ROUNDED$1","CheckBoxDirective","kendoClass","CheckBoxModule","DEFAULT_SIZE$1","RadioButtonDirective","RadioButtonModule","serial$1","ErrorComponent","align","roleAttribute","startClass","endClass","idAttribute","serial","HintComponent","FormFieldComponent","showHints","showErrors","errorClass","isRadioControl","disabledControl","disabledElement","disabledKendoInput","formControls","validateFormControl","hasHints","showHintsInitial","setDescription","ngAfterViewChecked","updateDescription","kendoInput","controlElementRefs","hasAttribute","isControlGroup","valueAccessor","controls","findControlElements","errorChildren","hintChildren","ariaIds","generateDescriptionIds","ids","Set","errorAttribute","attributes","attr","hint","error","delete","from","untouched","pristine","descendants","FormFieldModule","SignatureMessages","minimize","maximize","canvasLabel","SignatureCustomMessagesComponent","LocalizedSignatureMessagesDirective","SignatureCloseEvent","SignatureOpenEvent","noop","FOCUSED_CLASS","DEFAULT_SIZE","DEFAULT_ROUNDED","DEFAULT_FILL_MODE","DEFAULT_POPUP_SCALE","DEFAULT_EXPORT_SCALE","DEFAULT_COLOR","DEFAULT_BACKGROUND_COLOR","SignatureComponent","cd","staticHostClasses","strokeWidth","maximizable","maximized","popupScale","exportScale","hideLine","isDrawing","instance","loadImage","getMessage","minimizeTitle","maximizeTitle","baseWidth","offsetWidth","baseHeight","popupWidth","popupHeight","showMaximize","showMinimize","showClear","applyHostClasses","readThemeColors","canvas","onDraw","onDrawEnd","setOptions","destroy","onClear","exportImage","onDialogValueChange","onDialogClick","maximizeButton","onDialogKeydown","onDialogClose","onMaximize","popupValue","onMinimize","remove","enabled","defaultColor","defaultBackgroundColor","onWrapperFocus","onWrapperBlur","onWrapperClick","_event","focusIn","focusOut","insideWrapper","click","parentLocalization","ButtonDirective","DialogComponent","changeDetection","OnPush","SignatureModule","InputsModule"],"mappings":"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,MAAAA,QAAQ,EAAE,oBADX;AAECxK,MAAAA,QAAQ,EAAE,qBAFX;AAGCmF,MAAAA,SAAS,EAAE,CACP;AACIgF,QAAAA,KAAK,EAAE,IADX;AAEIlF,QAAAA,OAAO,EAAE7V,iBAFb;AAGI8V,QAAAA,WAAW,EAAEvW,UAAU,CAAC,MAAM+qC,sBAAP;AAH3B,OADO,EAMP;AACIz0B,QAAAA,OAAO,EAAEjU,UADb;AAEIkU,QAAAA,WAAW,EAAEvW,UAAU,CAAC,MAAM+qC,sBAAP;AAF3B,OANO,EAUPpF,gCAVO,EAWP;AACIrvB,QAAAA,OAAO,EAAE1U,mBADb;AAEI2U,QAAAA,WAAW,EAAEovB;AAFjB,OAXO,EAeP;AACIrvB,QAAAA,OAAO,EAAEzU,WADb;AAEI0Z,QAAAA,QAAQ,EAAE;AAFd,OAfO,CAHZ;AAuBC5G,MAAAA,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAnKmB;AAoKCg7B,MAA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","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright © 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { isDevMode, Directive, Optional, EventEmitter, ElementRef, Component, Input, Output, HostBinding, ViewChild, ContentChild, ViewChildren, forwardRef, Inject, Injectable, HostListener, NgModule, ViewContainerRef, ContentChildren, ChangeDetectionStrategy } from '@angular/core';\nimport { NgControl, NG_VALUE_ACCESSOR, NG_VALIDATORS, RadioControlValueAccessor } from '@angular/forms';\nimport { Subscription, fromEvent, interval, merge, BehaviorSubject, Subject } from 'rxjs';\nimport { take, filter, concatMap, startWith, takeUntil, skip, debounceTime, throttleTime } from 'rxjs/operators';\nimport * as i1 from '@progress/kendo-angular-l10n';\nimport { ComponentMessages, LocalizationService, L10N_PREFIX, RTL } from '@progress/kendo-angular-l10n';\nimport * as i3 from '@progress/kendo-angular-common';\nimport { Keys, guid, hasObservers, anyChanged, isDocumentAvailable, KendoInput, isChanged, DraggableModule, EventsModule, ResizeSensorModule, PreventableEvent, findFocusableChild, closest as closest$1 } from '@progress/kendo-angular-common';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport * as i1$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { browser, mobileOS, detectDesktopBrowser, detectMobileOS } from '@progress/kendo-common';\nimport * as i1$2 from '@progress/kendo-angular-intl';\nimport * as i1$3 from '@progress/kendo-angular-popup';\nimport { PopupModule } from '@progress/kendo-angular-popup';\nimport { parseColor as parseColor$1, Color, namedColors } from '@progress/kendo-drawing';\nimport * as i5 from '@progress/kendo-angular-buttons';\nimport { ButtonModule } from '@progress/kendo-angular-buttons';\nimport * as i2 from '@progress/kendo-angular-dialog';\nimport { DialogsModule } from '@progress/kendo-angular-dialog';\nimport { __awaiter } from 'tslib';\nimport { SignaturePad } from '@progress/kendo-inputs-common';\n\n/**\n * @hidden\n *\n * Checks if the value is `null` or `undefined`. Falsy values like '', 0, false, NaN, etc. are regarded as present.\n */\nconst isPresent = (value) => value !== null && value !== undefined;\n/**\n * @hidden\n */\nconst areSame = (value1, value2) => value1 === value2 || (value1 === null && value2 === undefined) || (value1 === undefined && value2 === null);\n/**\n * @hidden\n */\nconst requiresZoneOnBlur = (ngControl) => ngControl &&\n    (!ngControl.touched || (ngControl.control && ngControl.control.updateOn === 'blur'));\n/**\n * @hidden\n *\n * Fits the contender number into the specified bounds. If the number is NaN or null, the min is returned.\n *\n * @param contender Represents the number you want to fit into specified bounds.\n * @param min The inclusive lower bound number.\n * @param max The inclusive upper bound number.\n */\nconst fitIntoBounds = (contender, min, max) => {\n    if (!isPresent(contender) || isNaN(contender)) {\n        return min;\n    }\n    return contender <= min ? min : contender >= max ? max : contender;\n};\n/**\n * @hidden\n */\nconst SIZE_MAP = {\n    small: 'sm',\n    medium: 'md',\n    large: 'lg'\n};\n/**\n * @hidden\n */\nconst ROUNDED_MAP = {\n    small: 'sm',\n    medium: 'md',\n    large: 'lg',\n    full: 'full'\n};\n/**\n * @hidden\n */\nconst isNone = (style) => style === 'none';\n/**\n * @hidden\n *\n * Returns the styling classes to be added and removed\n */\nconst getStylingClasses = (componentType, stylingOption, previousValue, newValue) => {\n    switch (stylingOption) {\n        case 'size':\n            return {\n                toRemove: `k-${componentType}-${SIZE_MAP[previousValue]}`,\n                toAdd: newValue !== 'none' ? `k-${componentType}-${SIZE_MAP[newValue]}` : ''\n            };\n        case 'rounded':\n            return {\n                toRemove: `k-rounded-${ROUNDED_MAP[previousValue]}`,\n                toAdd: newValue !== 'none' ? `k-rounded-${ROUNDED_MAP[newValue]}` : ''\n            };\n        case 'fillMode':\n            return {\n                toRemove: `k-${componentType}-${previousValue}`,\n                toAdd: newValue !== 'none' ? `k-${componentType}-${newValue}` : ''\n            };\n        default:\n            break;\n    }\n};\n\n/**\n * @hidden\n */\nconst MAX_PRECISION = 20;\n/**\n * @hidden\n */\nconst limitPrecision = (precision) => Math.min(precision, MAX_PRECISION);\n/**\n * @hidden\n */\nconst fractionLength = (value) => {\n    return (String(value).split('.')[1] || \"\").length;\n};\nconst maxFractionLength = (value1, value2) => {\n    return Math.max(fractionLength(value1), fractionLength(value2));\n};\n/**\n * @hidden\n */\nconst toFixedPrecision = (value, precision) => {\n    const maxPrecision = limitPrecision(precision);\n    return parseFloat(value.toFixed(maxPrecision));\n};\n/**\n * @hidden\n */\nconst add = (value1, value2) => {\n    const maxPrecision = maxFractionLength(value1, value2);\n    return toFixedPrecision(value1 + value2, maxPrecision);\n};\n/**\n * @hidden\n */\nconst subtract = (value1, value2) => {\n    return add(value1, -value2);\n};\n/**\n * @hidden\n */\nconst multiply = (value1, value2) => {\n    const maxPrecision = fractionLength(value1) + fractionLength(value2);\n    return toFixedPrecision(value1 * value2, maxPrecision);\n};\n/**\n * @hidden\n */\nconst divide = (dividend, divisor) => {\n    if (divisor === 0) {\n        return NaN;\n    }\n    const power = maxFractionLength(dividend, divisor);\n    const correctionValue = Math.pow(10, power);\n    return ((correctionValue * dividend) / (correctionValue * divisor));\n};\n/**\n * @hidden\n */\nconst remainder = (dividend, divisor) => {\n    return Math.abs(subtract(dividend, multiply(divisor, Math.floor(divide(dividend, divisor)))));\n};\n\n/**\n * @hidden\n */\nconst calculateFixedTrackSize = ({ max, min, smallStep, fixedTickWidth }) => ((max - min) / smallStep) * fixedTickWidth;\n/**\n * @hidden\n */\nconst calculateTrackSize = (wrapperWidth, offset, showButtons = true) => {\n    const BUTTONS_COUNT = 2;\n    const trackOffset = showButtons ? parseFloat(offset) * BUTTONS_COUNT : 0;\n    const trackWidth = wrapperWidth - trackOffset;\n    return Math.floor(trackWidth);\n};\n/**\n * @hidden\n */\nconst calculateTicksCount = (min = 0, max = 0, smallStep = 1) => {\n    if (smallStep <= 0) {\n        throw new Error('Invalid argument: smallStep must be a positive number');\n    }\n    const adjustedRange = Math.abs(subtract(max, min));\n    const adjustedRatio = Math.floor(divide(adjustedRange, smallStep));\n    const result = add(adjustedRatio, 1);\n    return result;\n};\n/**\n * @hidden\n */\nconst calculateValueFromTick = (index, { max, min, smallStep, reverse, vertical }) => {\n    const value = add(min, multiply(index, smallStep));\n    return vertical || reverse ? Math.abs(subtract(value, max)) : value;\n};\n/**\n * @hidden\n */\nconst calculateHandlePosition = ({ trackWidth, min, max, reverse, value }) => {\n    const step = trackWidth / Math.abs(max - min);\n    let pos = isPresent(value) ? step * (value - min) : min;\n    if (reverse) {\n        pos = trackWidth - pos;\n    }\n    return Math.floor(pos);\n};\n/**\n * @hidden\n */\nconst decreaseValueToStep = (value, { max, min, smallStep, largeStep }, large = false) => {\n    const step = large && largeStep ? multiply(smallStep, largeStep) : smallStep;\n    const stepValue = subtract(value, min);\n    let result;\n    const stepRemainder = remainder(stepValue, step);\n    if (stepRemainder === 0) {\n        result = subtract(stepValue, step);\n    }\n    else {\n        result = subtract(stepValue, stepRemainder);\n    }\n    return limitValue(add(result, min), min, max);\n};\n/**\n * @hidden\n */\nconst increaseValueToStep = (value, { max, min, smallStep, largeStep }, large = false) => {\n    const step = large && largeStep ? multiply(smallStep, largeStep) : smallStep;\n    const stepValue = subtract(value, min);\n    const stepRemainder = remainder(stepValue, step);\n    const result = add(subtract(stepValue, stepRemainder), step);\n    return limitValue(add(result, min), min, max);\n};\n/**\n * @hidden\n */\nconst isStartHandle = (dragHandle) => dragHandle.id.indexOf('k-start-handle') > -1;\n/**\n * @hidden\n */\nconst snapValue = (value, options) => {\n    const { smallStep, min, max } = options;\n    const limited = limitValue(value, min, max);\n    if (value !== limited) {\n        return limited;\n    }\n    const left = decreaseValueToStep(value, options);\n    const right = increaseValueToStep(value, options);\n    if ((value - min) % smallStep === 0) {\n        return value;\n    }\n    if (right - value <= (right - left) / 2) {\n        return right;\n    }\n    return left;\n};\n/**\n * @hidden\n */\nconst trimValue = (max, min, value) => {\n    if (value > max) {\n        return max;\n    }\n    if (value < min) {\n        return min;\n    }\n    return value;\n};\n/**\n * @hidden\n */\nconst trimValueRange = (max, min, value) => {\n    return value ? [trimValue(max, min, value[0]), trimValue(max, min, value[1])] : [min, min];\n};\n/**\n * @hidden\n */\nconst identity = (value) => value;\n/**\n * @hidden\n */\nconst isSameRange = (value1, value2) => areSame(value1[0], value2[0]) && areSame(value1[1], value2[1]);\n/**\n * @hidden\n */\nconst elementOffset = (element) => {\n    const box = element.getBoundingClientRect();\n    const documentElement = document.documentElement;\n    return {\n        left: box.left + (window.pageXOffset || documentElement.scrollLeft) - (documentElement.clientLeft || 0),\n        top: box.top + (window.pageYOffset || documentElement.scrollTop) - (documentElement.clientTop || 0)\n    };\n};\n/**\n * @hidden\n */\nconst limitValue = (value, min, max) => {\n    return Math.max(Math.min(value, max), min);\n};\n/**\n * @hidden\n */\nconst eventValue = (eventArgs, scaleElement, options) => {\n    const { min, max, vertical, rtl } = options;\n    const trackOffset = elementOffset(scaleElement);\n    const offset = vertical ? eventArgs.pageY - trackOffset.top : eventArgs.pageX - trackOffset.left;\n    const scale = (max - min) / (vertical ? scaleElement.clientHeight : scaleElement.clientWidth);\n    const offsetValue = offset * scale;\n    let value = rtl || vertical ? max - offsetValue : min + offsetValue;\n    const stepFractionLength = fractionLength(options.smallStep);\n    value = toFixedPrecision(value, stepFractionLength + 1);\n    return snapValue(value, options);\n};\n/**\n * @hidden\n */\nconst isButton = (element) => {\n    return element.className.indexOf('k-button-increase') >= 0 || element.className.indexOf('k-button-decrease') >= 0;\n};\n/**\n * @hidden\n */\nconst increment = (options) => {\n    return increaseValueToStep(options.value, options);\n};\n/**\n * @hidden\n */\nconst decrement = (options) => {\n    return decreaseValueToStep(options.value, options);\n};\n/**\n * @hidden\n */\nconst incrementLarge = (options) => {\n    return increaseValueToStep(options.value, options, true);\n};\n/**\n * @hidden\n */\nconst decrementLarge = (options) => {\n    return decreaseValueToStep(options.value, options, true);\n};\n/**\n * @hidden\n */\nconst validateValue = (value) => {\n    if (isDevMode && value && value[0] > value[1]) {\n        throw new Error('[RangeSlider] The start value should not be greater than the end value.');\n    }\n};\n/**\n * @hidden\n */\nvar slidersUtil = {\n    calculateFixedTrackSize,\n    calculateValueFromTick,\n    calculateTrackSize,\n    calculateTicksCount,\n    calculateHandlePosition,\n    decreaseValueToStep,\n    decrement,\n    decrementLarge,\n    eventValue,\n    identity,\n    increment,\n    incrementLarge,\n    isButton,\n    isSameRange,\n    isStartHandle,\n    increaseValueToStep,\n    trimValue,\n    trimValueRange,\n    snapValue,\n    validateValue\n};\n\n/**\n * @hidden\n */\nclass SliderModelBase {\n    constructor(props, wrapper, track, renderer) {\n        this.props = props;\n        this.wrapper = wrapper;\n        this.track = track;\n        this.renderer = renderer;\n        this.props = props;\n        this.wrapper = wrapper;\n        this.track = track;\n        this.tickSizes = this.getTickSizes();\n    }\n    resizeTrack() {\n        const orientation = this.props.vertical ? 'height' : 'width';\n        const altOrientation = this.props.vertical ? 'width' : 'height';\n        const trackWidth = this.trackWidth();\n        this.track.parentElement.style[orientation] = `${trackWidth}px`;\n        this.track.parentElement.style[altOrientation] = '';\n    }\n    resizeTicks(ticksContainer, ticks) {\n        const dimension = this.props.vertical ? \"height\" : \"width\";\n        [...ticks].map((tick, index) => tick.style[dimension] = `${this.tickSizes[index]}px`);\n        if (this.props.vertical) {\n            this.adjustPadding(ticksContainer);\n        }\n    }\n    resizeWrapper() {\n        const dimension = this.props.vertical ? \"height\" : \"width\";\n        const fixedTrackWidth = calculateFixedTrackSize(this.props);\n        const wrapperParentEl = this.wrapper.parentElement;\n        if (fixedTrackWidth) {\n            wrapperParentEl.style[dimension] = \"auto\";\n        }\n    }\n    trackWidth() {\n        if (this.props.fixedTickWidth) {\n            return calculateFixedTrackSize(this.props);\n        }\n        return this.elementSize(this.track.parentElement);\n    }\n    getTickSizes() {\n        const { min, max, smallStep } = this.props;\n        const count = calculateTicksCount(min, max, smallStep);\n        const trackSize = this.trackWidth();\n        const distStep = trackSize / subtract(max, min);\n        const result = [];\n        let usedSpace = 0;\n        let endPoint = 0;\n        for (let i = 0; i < count; i++) {\n            if (i === 0 || i === count - 1) {\n                endPoint += (smallStep / 2) * distStep;\n            }\n            else {\n                endPoint += smallStep * distStep;\n            }\n            // ensure that the sum of the tick sizes does not exceed the track width\n            endPoint = +endPoint.toFixed(2) - 0.01;\n            const size = Math.round(endPoint - usedSpace);\n            result.push(size);\n            usedSpace += size;\n        }\n        if (usedSpace >= trackSize) {\n            result[result.length - 1] -= 1;\n        }\n        return result;\n    }\n    adjustPadding(ticksContainer) {\n        const totalTickSize = this.tickSizes.reduce((prev, curr) => prev + curr, 0);\n        const trackWidth = this.trackWidth();\n        const reminder = trackWidth - totalTickSize;\n        if (reminder !== 0) {\n            const padding = reminder + this.elementOffset(this.track);\n            ticksContainer.style.paddingTop = `${padding}px`;\n        }\n    }\n    elementOffset(element) {\n        const { vertical } = this.props;\n        const style = getComputedStyle(element);\n        return parseInt(vertical ? style.bottom : style.left, 10);\n    }\n    elementSize(element) {\n        const { vertical } = this.props;\n        return vertical ? element.clientHeight : element.clientWidth;\n    }\n}\n\n/**\n * @hidden\n */\nclass SliderModel extends SliderModelBase {\n    positionHandle(dragHandle) {\n        const { max, min, reverse, vertical } = this.props;\n        const position = vertical ? 'bottom' : 'left';\n        const trackWidth = this.trackWidth();\n        const value = trimValue(max, min, this.props.value);\n        this.handlePosition = calculateHandlePosition({\n            min,\n            max,\n            reverse,\n            value,\n            trackWidth\n        });\n        this.renderer.setStyle(dragHandle, position, `${this.handlePosition}px`);\n    }\n    positionSelection(selection) {\n        const { reverse, vertical } = this.props;\n        const dimension = vertical ? 'height' : 'width';\n        let size = this.handlePosition;\n        if (reverse) {\n            size = this.trackWidth() - size;\n        }\n        this.renderer.setStyle(selection, dimension, `${size}px`);\n    }\n}\n\nconst UNTOUCHED = 'ng-untouched';\nconst toClassList = (classNames) => String(classNames).trim().split(' ');\n/**\n * @hidden\n */\nconst hasClass = (element, className) => Boolean(toClassList(element.className).find((name) => name === className));\n/**\n * @hidden\n */\nfunction invokeElementMethod(element, name, ...args) {\n    if (element && element.nativeElement) {\n        return element.nativeElement[name].apply(element.nativeElement, args);\n    }\n}\n/**\n * @hidden\n */\nconst isUntouched = (element) => element && element.nativeElement && hasClass(element.nativeElement, UNTOUCHED);\n/**\n * @hidden\n */\nconst containsFocus = (hostElement, contender) => hostElement && contender && (hostElement === contender || hostElement.contains(contender));\n/**\n * @hidden\n */\nconst closest = (node, predicate) => {\n    while (node && !predicate(node)) {\n        node = node.parentNode;\n    }\n    return node;\n};\n\n/**\n * @hidden\n */\nconst packageMetadata = {\n    name: '@progress/kendo-angular-inputs',\n    productName: 'Kendo UI for Angular',\n    productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n    publishDate: 1668698223,\n    version: '',\n    licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/?utm_medium=product&utm_source=kendoangular&utm_campaign=kendo-ui-angular-purchase-license-keys-warning'\n};\n\n/**\n * Represents the template for the labels of the Slider.\n * To define the labels template, nest an `<ng-template>` tag with the `kendoSliderLabelTemplate` directive inside\n * the `<kendo-slider>` tag. The template context is passed to the `label` value.\n *\n * @example\n * ```ts-no-run\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-slider [largeStep]=\"2\">\n *           <ng-template kendoSliderLabelTemplate let-value=\"value\">\n *             <b>{{value}}</b>\n *           </ng-template>\n *         </kendo-slider>\n *     `\n * })\n *\n * class AppComponent {\n * }\n *\n * ```\n */\nclass LabelTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nLabelTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LabelTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nLabelTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LabelTemplateDirective, selector: \"[kendoSliderLabelTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LabelTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoSliderLabelTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * @hidden\n */\nclass SliderBase {\n    constructor(localizationService, injector, renderer, ngZone, changeDetector, hostElement) {\n        this.localizationService = localizationService;\n        this.injector = injector;\n        this.renderer = renderer;\n        this.ngZone = ngZone;\n        this.changeDetector = changeDetector;\n        this.hostElement = hostElement;\n        /**\n         * Defines the title of the ticks ([see example]({% slug ticks_slider %}#toc-titles)). The default title\n         * for each tick is its Slider value. If you use a callback function, the function accepts an argument\n         * that holds the value of the component and returns a string with the new title.\n         */\n        this.title = identity;\n        /**\n         * Denotes the location of the tick marks in the Slider ([see example]({% slug ticks_slider %}#toc-placement)).\n         *\n         * The available options are:\n         * * `before`&mdash;The tick marks are located to the top side of the horizontal track or to the left side of a vertical track.\n         * * `after`&mdash;The tick marks are located to the bottom side of the horizontal track or to the right side of the vertical track.\n         * * `both`&mdash; (Default) The tick marks are located on both sides of the track.\n         * * `none`&mdash;The tick marks are not visible. The actual elements are not added to the DOM tree.\n         */\n        this.tickPlacement = 'both';\n        /**\n         * If `vertical` is set to `true`, the orientation of the Slider changes from horizontal to vertical\n         * ([see example]({% slug orientation_slider %})).\n         */\n        this.vertical = false;\n        /**\n         * The minimum value of the Slider ([see example]({% slug predefinedsteps_slider %}#toc-small-steps)).\n         * The attribute accepts both integers and floating-point numbers.\n         */\n        this.min = 0;\n        /**\n         * The maximum value of the Slider ([see example]({% slug predefinedsteps_slider %}#toc-small-steps)).\n         * The attribute accepts both integers and floating-point numbers.\n         */\n        this.max = 10;\n        /**\n         * The step value of the Slider ([see example]({% slug predefinedsteps_slider %}#toc-small-steps)).\n         * Accepts positive values only. Can be an integer or a floating-point number.\n         */\n        this.smallStep = 1;\n        /**\n         * Specifies that every n<sup>th</sup> tick will be large and will have a label\n         * ([see example]({% slug predefinedsteps_slider %}#toc-large-steps)).\n         * Accepts positive integer values only.\n         */\n        this.largeStep = null;\n        /**\n         * Determines whether the Slider is disabled ([see example]({% slug disabledstate_slider %})).\n         */\n        this.disabled = false;\n        /**\n         * Determines whether the Slider is in its read-only state ([see example]({% slug readonly_slider %})).\n         */\n        this.readonly = false;\n        /**\n         * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the Slider.\n         */\n        this.tabindex = 0;\n        /**\n         * Fires each time the user focuses the component.\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * Fires each time the component is blurred.\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * Fires each time the user selects a new value.\n         */\n        this.valueChange = new EventEmitter();\n        this.sliderClass = true;\n        this.subscriptions = new Subscription();\n        /**\n         * @hidden\n         */\n        this.ifEnabled = (callback, event) => {\n            if (!this.isDisabled) {\n                callback.call(this, event);\n            }\n        };\n        validatePackage(packageMetadata);\n        this.direction = localizationService.rtl ? 'rtl' : 'ltr';\n    }\n    get horizontalClass() {\n        return !this.vertical;\n    }\n    get verticalClass() {\n        return this.vertical;\n    }\n    get disabledClass() {\n        return this.disabled;\n    }\n    /**\n     * @hidden\n     * Called when the status of the component changes to or from `disabled`.\n     * Depending on the value, it enables or disables the appropriate DOM element.\n     *\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.changeDetector.markForCheck();\n        this.disabled = isDisabled;\n    }\n    ngOnInit() {\n        this.subscriptions.add(this.localizationService\n            .changes\n            .subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n            this.sizeComponent();\n        }));\n        if (this.hostElement) {\n            this.renderer.removeAttribute(this.hostElement.nativeElement, \"tabindex\");\n        }\n        this.control = this.injector.get(NgControl, null);\n    }\n    /**\n     * @hidden\n     */\n    get isDisabled() {\n        return this.disabled || this.readonly;\n    }\n    /**\n     * @hidden\n     * Used by the FloatingLabel to determine if the component is empty.\n     */\n    isEmpty() {\n        return false;\n    }\n    get reverse() {\n        return this.localizationService.rtl && !this.vertical;\n    }\n    get keyBinding() {\n        const reverse = this.reverse;\n        return {\n            [Keys.ArrowLeft]: reverse ? increment : decrement,\n            [Keys.ArrowRight]: reverse ? decrement : increment,\n            [Keys.ArrowDown]: decrement,\n            [Keys.ArrowUp]: increment,\n            [Keys.PageUp]: incrementLarge,\n            [Keys.PageDown]: decrementLarge,\n            [Keys.Home]: ({ min }) => min,\n            [Keys.End]: ({ max }) => max\n        };\n    }\n    resetStyles(elements) {\n        elements.forEach(el => {\n            if (el) {\n                if (this.vertical) {\n                    this.renderer.removeStyle(el, 'width');\n                    this.renderer.removeStyle(el, 'left');\n                    this.renderer.removeStyle(el, 'right');\n                }\n                else {\n                    this.renderer.removeStyle(el, 'height');\n                    this.renderer.removeStyle(el, 'bottom');\n                }\n                this.renderer.removeStyle(el, 'padding-top');\n            }\n        });\n    }\n}\nSliderBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SliderBase, deps: [{ token: i1.LocalizationService }, { token: i0.Injector }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nSliderBase.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: SliderBase, selector: \"kendo-slider-base\", inputs: { title: \"title\", tickPlacement: \"tickPlacement\", vertical: \"vertical\", min: \"min\", max: \"max\", smallStep: \"smallStep\", largeStep: \"largeStep\", fixedTickWidth: \"fixedTickWidth\", disabled: \"disabled\", readonly: \"readonly\", tabindex: \"tabindex\" }, outputs: { onFocus: \"focus\", onBlur: \"blur\", valueChange: \"valueChange\" }, host: { properties: { \"attr.dir\": \"this.direction\", \"class.k-slider-horizontal\": \"this.horizontalClass\", \"class.k-slider-vertical\": \"this.verticalClass\", \"class.k-slider\": \"this.sliderClass\", \"class.k-disabled\": \"this.disabledClass\" } }, queries: [{ propertyName: \"labelTemplate\", first: true, predicate: LabelTemplateDirective, descendants: true }], viewQueries: [{ propertyName: \"wrapper\", first: true, predicate: [\"wrap\"], descendants: true, static: true }, { propertyName: \"track\", first: true, predicate: [\"track\"], descendants: true, static: true }, { propertyName: \"sliderSelection\", first: true, predicate: [\"sliderSelection\"], descendants: true, static: true }, { propertyName: \"ticksContainer\", first: true, predicate: [\"ticks\"], descendants: true, read: ElementRef }, { propertyName: \"ticks\", first: true, predicate: [\"ticks\"], descendants: true }], ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SliderBase, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-slider-base',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: i0.Injector }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { title: [{\n                type: Input\n            }], tickPlacement: [{\n                type: Input\n            }], vertical: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], smallStep: [{\n                type: Input\n            }], largeStep: [{\n                type: Input\n            }], fixedTickWidth: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], onFocus: [{\n                type: Output,\n                args: ['focus']\n            }], onBlur: [{\n                type: Output,\n                args: ['blur']\n            }], valueChange: [{\n                type: Output\n            }], direction: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], horizontalClass: [{\n                type: HostBinding,\n                args: ['class.k-slider-horizontal']\n            }], verticalClass: [{\n                type: HostBinding,\n                args: ['class.k-slider-vertical']\n            }], sliderClass: [{\n                type: HostBinding,\n                args: ['class.k-slider']\n            }], disabledClass: [{\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }], wrapper: [{\n                type: ViewChild,\n                args: ['wrap', { static: true }]\n            }], track: [{\n                type: ViewChild,\n                args: ['track', { static: true }]\n            }], sliderSelection: [{\n                type: ViewChild,\n                args: ['sliderSelection', { static: true }]\n            }], ticksContainer: [{\n                type: ViewChild,\n                args: ['ticks', { read: ElementRef, static: false }]\n            }], ticks: [{\n                type: ViewChild,\n                args: ['ticks', { static: false }]\n            }], labelTemplate: [{\n                type: ContentChild,\n                args: [LabelTemplateDirective, { static: false }]\n            }] } });\n\n/* eslint-disable @angular-eslint/component-selector */\n/**\n * @hidden\n */\nclass SliderTick {\n    constructor(value) {\n        this.value = value;\n        this.classes = {\n            'k-tick': true\n        };\n    }\n}\n/**\n * @hidden\n */\nclass SliderTicksComponent {\n    constructor() {\n        this.wrapperClasses = 'k-reset k-slider-items';\n        this.ticks = [];\n    }\n    ngOnChanges(_) {\n        this.createTicks();\n    }\n    createTicks() {\n        const count = calculateTicksCount(this.min, this.max, this.step);\n        const largeStep = this.largeStep;\n        const tickValueProps = {\n            max: this.max,\n            min: this.min,\n            smallStep: this.step\n        };\n        let result = [];\n        for (let i = 0; i < count; i++) {\n            result.push(new SliderTick(calculateValueFromTick(i, tickValueProps)));\n            if (largeStep && i % largeStep === 0) {\n                result[i].large = true;\n                result[i].classes['k-tick-large'] = true;\n            }\n        }\n        if (result.length > 0) {\n            Object.assign(result[0].classes, this.endTickClasses(true));\n            Object.assign(result[result.length - 1].classes, this.endTickClasses(false));\n        }\n        this.ticks = result;\n    }\n    endTickClasses(first) {\n        return {\n            'k-first': (first && !this.vertical) || (!first && this.vertical),\n            'k-last': (!first && !this.vertical) || (first && this.vertical)\n        };\n    }\n}\nSliderTicksComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SliderTicksComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSliderTicksComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: SliderTicksComponent, selector: \"[kendoSliderTicks]\", inputs: { tickTitle: \"tickTitle\", vertical: \"vertical\", step: \"step\", largeStep: \"largeStep\", min: \"min\", max: \"max\", labelTemplate: \"labelTemplate\" }, host: { properties: { \"class\": \"this.wrapperClasses\" } }, viewQueries: [{ propertyName: \"tickElements\", predicate: [\"tickElement\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <li #tickElement *ngFor=\"let tick of ticks;\"\n        [ngClass]=\"tick.classes\"\n        title=\"{{ tickTitle(tick.value) }}\"\n        role=\"presentation\"\n     >\n         <ng-container [ngSwitch]=\"tick.large\">\n            <span class=\"k-label\" *ngSwitchCase=\"true\">\n                <ng-container [ngTemplateOutlet]=\"labelTemplate || defaultLabel\" [ngTemplateOutletContext]=\"tick\">\n                </ng-container>\n            </span>\n            <ng-container *ngSwitchCase=\"false\">&nbsp;</ng-container>\n         </ng-container>\n     </li>\n\n     <ng-template #defaultLabel let-value=\"value\">\n        {{ tickTitle(value) }}\n     </ng-template>\n  `, isInline: true, directives: [{ type: i1$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1$1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i1$1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i1$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SliderTicksComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[kendoSliderTicks]',\n                    template: `\n    <li #tickElement *ngFor=\"let tick of ticks;\"\n        [ngClass]=\"tick.classes\"\n        title=\"{{ tickTitle(tick.value) }}\"\n        role=\"presentation\"\n     >\n         <ng-container [ngSwitch]=\"tick.large\">\n            <span class=\"k-label\" *ngSwitchCase=\"true\">\n                <ng-container [ngTemplateOutlet]=\"labelTemplate || defaultLabel\" [ngTemplateOutletContext]=\"tick\">\n                </ng-container>\n            </span>\n            <ng-container *ngSwitchCase=\"false\">&nbsp;</ng-container>\n         </ng-container>\n     </li>\n\n     <ng-template #defaultLabel let-value=\"value\">\n        {{ tickTitle(value) }}\n     </ng-template>\n  `\n                }]\n        }], propDecorators: { wrapperClasses: [{\n                type: HostBinding,\n                args: ['class']\n            }], tickTitle: [{\n                type: Input\n            }], vertical: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], largeStep: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], labelTemplate: [{\n                type: Input\n            }], tickElements: [{\n                type: ViewChildren,\n                args: ['tickElement']\n            }] } });\n\n/**\n * @hidden\n */\nclass SliderMessages extends ComponentMessages {\n}\nSliderMessages.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SliderMessages, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nSliderMessages.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: SliderMessages, selector: \"kendo-slider-messages-base\", inputs: { decrement: \"decrement\", increment: \"increment\", dragHandle: \"dragHandle\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SliderMessages, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: 'kendo-slider-messages-base'\n                }]\n        }], propDecorators: { decrement: [{\n                type: Input\n            }], increment: [{\n                type: Input\n            }], dragHandle: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass LocalizedSliderMessagesDirective extends SliderMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nLocalizedSliderMessagesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalizedSliderMessagesDirective, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Directive });\nLocalizedSliderMessagesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LocalizedSliderMessagesDirective, selector: \"[kendoSliderLocalizedMessages]\", providers: [\n        {\n            provide: SliderMessages,\n            useExisting: forwardRef(() => LocalizedSliderMessagesDirective)\n        }\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalizedSliderMessagesDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    providers: [\n                        {\n                            provide: SliderMessages,\n                            useExisting: forwardRef(() => LocalizedSliderMessagesDirective)\n                        }\n                    ],\n                    selector: '[kendoSliderLocalizedMessages]'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\nconst PRESSED$1 = 'k-pressed';\n/**\n * Represents the [Kendo UI Slider component for Angular]({% slug overview_slider %}).\n */\nclass SliderComponent extends SliderBase {\n    constructor(localization, injector, renderer, ngZone, changeDetector, hostElement) {\n        super(localization, injector, renderer, ngZone, changeDetector, hostElement);\n        this.localization = localization;\n        this.injector = injector;\n        this.renderer = renderer;\n        this.ngZone = ngZone;\n        this.changeDetector = changeDetector;\n        this.hostElement = hostElement;\n        /**\n         * @hidden\n         */\n        this.focusableId = `k-${guid()}`;\n        /**\n         * Determines if the animation will be played on value change.\n         * Regardless of this setting, no animation will be played during the initial rendering.\n         */\n        this.animate = true;\n        /**\n         * Renders the arrow side buttons of the Slider ([see example]({% slug sidebuttons_slider %}#toc-hidden-state)).\n         * When `showButtons` is set to `false`, the buttons are not displayed.\n         */\n        this.showButtons = true;\n        /**\n         * The current value of the Slider when it is initially displayed.\n         * The component can use either NgModel or the `value` binding but not both of them at the same time.\n         */\n        this.value = this.min;\n        this.focusChangedProgrammatically = false;\n        /**\n         * @hidden\n         */\n        this.onWrapClick = (args) => {\n            const target = args.target;\n            if (!this.isDisabled && !(isButton(target) || isButton(target.parentNode))) {\n                const value = eventValue(args, this.track.nativeElement, this.getProps());\n                this.changeValue(value);\n            }\n            invokeElementMethod(this.draghandle, 'focus');\n        };\n        /**\n         * @hidden\n         */\n        this.onKeyDown = (e) => {\n            const options = this.getProps();\n            const { max, min } = options;\n            const handler = this.keyBinding[e.keyCode];\n            if (this.isDisabled || !handler) {\n                return;\n            }\n            const value = handler(options);\n            this.changeValue(trimValue(max, min, value));\n            e.preventDefault();\n        };\n        this.ngChange = (_) => { };\n        this.ngTouched = () => { };\n        this.decreaseValue = () => {\n            this.changeValue(decreaseValueToStep(this.value, this.getProps()));\n        };\n        this.increaseValue = () => {\n            this.changeValue(increaseValueToStep(this.value, this.getProps()));\n        };\n        this.handleBlur = () => {\n            this.changeDetector.markForCheck();\n            this.focused = false;\n            if (hasObservers(this.onBlur) || requiresZoneOnBlur(this.control)) {\n                this.ngZone.run(() => {\n                    this.ngTouched();\n                    if (!this.focusChangedProgrammatically) {\n                        this.onBlur.emit();\n                    }\n                });\n            }\n        };\n    }\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n        this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n        return this.tabindex;\n    }\n    /**\n     * @hidden\n     */\n    get currentValue() {\n        return isPresent(this.value) ? this.value.toString() : '';\n    }\n    /**\n     * Focuses the Slider.\n     *\n     * @example\n     * ```ts-no-run\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"slider.focus()\">Focus</button>\n     *  <kendo-slider #slider></kendo-slider>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n    focus() {\n        if (!this.disabled) {\n            this.focusChangedProgrammatically = true;\n            invokeElementMethod(this.draghandle, 'focus');\n            this.focusChangedProgrammatically = false;\n        }\n    }\n    /**\n     * Blurs the Slider.\n     */\n    blur() {\n        this.focusChangedProgrammatically = true;\n        invokeElementMethod(this.draghandle, 'blur');\n        this.handleBlur();\n        this.focusChangedProgrammatically = false;\n    }\n    ngOnChanges(changes) {\n        if (anyChanged(['value', 'fixedTickWidth', 'tickPlacement'], changes, true)) {\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                this.sizeComponent(false);\n            });\n        }\n    }\n    ngAfterViewInit() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        if (this.showButtons) {\n            this.setValueChangeInterval(this.increaseButton.nativeElement, () => this.increaseValue());\n            this.setValueChangeInterval(this.decreaseButton.nativeElement, () => this.decreaseValue());\n        }\n        this.sizeComponent(false);\n        if (this.ticks) {\n            this.ticks.tickElements\n                .changes\n                .subscribe(() => this.sizeComponent(false));\n        }\n        this.attachElementEventHandlers();\n        this.isSliderInvalid();\n    }\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n    }\n    /**\n     * @hidden\n     */\n    get incrementMessage() {\n        return this.incrementTitle || this.localizationService.get('increment');\n    }\n    /**\n     * @hidden\n     */\n    get decrementMessage() {\n        return this.decrementTitle || this.localizationService.get('decrement');\n    }\n    /**\n     * @hidden\n     */\n    get dragHandleMessage() {\n        return this.dragHandleTitle || this.localizationService.get('dragHandle');\n    }\n    /**\n     * @hidden\n     */\n    handleDragPress(args) {\n        if (args.originalEvent) {\n            args.originalEvent.preventDefault();\n        }\n        this.renderer.removeClass(this.hostElement.nativeElement, 'k-slider-transitions');\n    }\n    /**\n     * @hidden\n     */\n    onHandleDrag(args) {\n        this.dragging = true;\n        this.changeValue(eventValue(args, this.track.nativeElement, this.getProps()));\n    }\n    /**\n     * @hidden\n     */\n    onHandleRelease() {\n        this.dragging = false; //needed for animation\n        this.renderer.addClass(this.hostElement.nativeElement, 'k-slider-transitions');\n    }\n    //ngModel binding\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.changeDetector.markForCheck();\n        this.value = value;\n        this.sizeComponent(this.animate);\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.ngChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.ngTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n    changeValue(value) {\n        if (!areSame(this.value, value)) {\n            this.ngZone.run(() => {\n                this.value = value;\n                this.ngChange(value);\n                this.valueChange.emit(value);\n                this.sizeComponent(this.animate);\n                this.changeDetector.markForCheck();\n            });\n        }\n        this.isSliderInvalid();\n    }\n    /**\n     * @hidden\n     */\n    sizeComponent(animate) {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        const wrapper = this.wrapper.nativeElement;\n        const track = this.track.nativeElement;\n        const selectionEl = this.sliderSelection.nativeElement;\n        const dragHandleEl = this.draghandle.nativeElement;\n        const ticks = this.ticks ? this.ticksContainer.nativeElement : null;\n        if (!animate) {\n            this.renderer.removeClass(this.hostElement.nativeElement, 'k-slider-transitions');\n        }\n        this.resetStyles([track, selectionEl, dragHandleEl, ticks, this.hostElement.nativeElement]);\n        const props = this.getProps();\n        const model = new SliderModel(props, wrapper, track, this.renderer);\n        model.resizeTrack();\n        if (this.ticks) { //for case when tickPlacement: none\n            model.resizeTicks(this.ticksContainer.nativeElement, this.ticks.tickElements.map(element => element.nativeElement));\n        }\n        model.positionHandle(dragHandleEl);\n        model.positionSelection(selectionEl);\n        if (!animate) {\n            this.hostElement.nativeElement.getBoundingClientRect();\n            this.renderer.addClass(this.hostElement.nativeElement, 'k-slider-transitions');\n        }\n        if (this.fixedTickWidth) {\n            model.resizeWrapper();\n        }\n    }\n    set focused(value) {\n        if (this.isFocused !== value && this.hostElement) {\n            this.isFocused = value;\n        }\n    }\n    set dragging(value) {\n        if (this.isDragged !== value && this.sliderSelection && this.draghandle) {\n            const sliderSelection = this.sliderSelection.nativeElement;\n            const draghandle = this.draghandle.nativeElement;\n            if (value) {\n                this.renderer.addClass(sliderSelection, PRESSED$1);\n                this.renderer.addClass(draghandle, PRESSED$1);\n            }\n            else {\n                this.renderer.removeClass(sliderSelection, PRESSED$1);\n                this.renderer.removeClass(draghandle, PRESSED$1);\n            }\n            this.isDragged = value;\n        }\n    }\n    setValueChangeInterval(element, callback) {\n        this.ngZone.runOutsideAngular(() => {\n            const mousedown = fromEvent(element, 'mousedown');\n            const mouseup = fromEvent(element, 'mouseup');\n            const mouseout = fromEvent(element, 'mouseout');\n            const subscription = mousedown.pipe(filter((e) => e.button === 0 && !this.isDisabled), concatMap(() => interval(150).pipe(startWith(-1), takeUntil(merge(mouseup, mouseout))))).subscribe(() => {\n                if (!this.isFocused) {\n                    invokeElementMethod(this.draghandle, 'focus');\n                }\n                callback();\n            });\n            this.subscriptions.add(subscription);\n        });\n    }\n    getProps() {\n        return {\n            buttons: this.showButtons,\n            disabled: this.disabled,\n            fixedTickWidth: this.fixedTickWidth,\n            largeStep: this.largeStep,\n            max: this.max,\n            min: this.min,\n            readonly: this.readonly,\n            reverse: this.reverse,\n            rtl: this.localizationService.rtl,\n            smallStep: this.smallStep,\n            value: trimValue(this.max, this.min, this.value),\n            vertical: this.vertical\n        };\n    }\n    isSliderInvalid() {\n        const sliderClasses = this.hostElement.nativeElement.classList;\n        this.isInvalid = sliderClasses.contains('ng-invalid') ? true : false;\n        this.renderer.setAttribute(this.draghandle.nativeElement, 'aria-invalid', `${this.isInvalid}`);\n    }\n    attachElementEventHandlers() {\n        const hostElement = this.hostElement.nativeElement;\n        let tabbing = false;\n        let cursorInsideWrapper = false;\n        this.ngZone.runOutsideAngular(() => {\n            // focusIn and focusOut are relative to the host element\n            this.subscriptions.add(this.renderer.listen(hostElement, 'focusin', () => {\n                if (!this.isFocused) {\n                    this.ngZone.run(() => {\n                        if (!this.focusChangedProgrammatically) {\n                            this.onFocus.emit();\n                        }\n                        this.focused = true;\n                    });\n                }\n            }));\n            this.subscriptions.add(this.renderer.listen(hostElement, 'focusout', (args) => {\n                if (!this.isFocused) {\n                    return;\n                }\n                if (tabbing) {\n                    if (args.relatedTarget !== this.draghandle.nativeElement) {\n                        this.handleBlur();\n                    }\n                    tabbing = false;\n                }\n                else {\n                    if (!cursorInsideWrapper) {\n                        this.handleBlur();\n                    }\n                }\n            }));\n            this.subscriptions.add(this.renderer.listen(hostElement, 'mouseenter', () => {\n                cursorInsideWrapper = true;\n            }));\n            this.subscriptions.add(this.renderer.listen(hostElement, 'mouseleave', () => {\n                cursorInsideWrapper = false;\n            }));\n            this.subscriptions.add(this.renderer.listen(hostElement, 'keydown', (args) => {\n                if (args.keyCode === Keys.Tab) {\n                    tabbing = true;\n                }\n                else {\n                    tabbing = false;\n                }\n            }));\n        });\n    }\n}\nSliderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SliderComponent, deps: [{ token: i1.LocalizationService }, { token: i0.Injector }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nSliderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: SliderComponent, selector: \"kendo-slider\", inputs: { focusableId: \"focusableId\", dragHandleTitle: \"dragHandleTitle\", incrementTitle: \"incrementTitle\", animate: \"animate\", decrementTitle: \"decrementTitle\", showButtons: \"showButtons\", value: \"value\", tabIndex: \"tabIndex\" }, providers: [\n        LocalizationService,\n        { provide: L10N_PREFIX, useValue: 'kendo.slider' },\n        { multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SliderComponent) },\n        { provide: KendoInput, useExisting: forwardRef(() => SliderComponent) }\n    ], viewQueries: [{ propertyName: \"draghandle\", first: true, predicate: [\"draghandle\"], descendants: true, static: true }, { propertyName: \"decreaseButton\", first: true, predicate: [\"decreaseButton\"], descendants: true }, { propertyName: \"increaseButton\", first: true, predicate: [\"increaseButton\"], descendants: true }], exportAs: [\"kendoSlider\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `\n        <ng-container kendoSliderLocalizedMessages\n            i18n-increment=\"kendo.slider.increment|The title of the **Increase** button of the Slider.\"\n            increment=\"increment\"\n            i18n-decrement=\"kendo.slider.decrement|The title of the **Decrease** button of the Slider.\"\n            decrement=\"decrement\"\n            i18n-dragHandle=\"kendo.slider.dragHandle|The title of the drag handle of the Slider.\"\n            dragHandle=\"Drag\"\n        >\n        <div class=\"k-slider-wrap\" #wrap\n            [class.k-slider-buttons]=\"showButtons\"\n            [class.k-slider-topleft]=\"tickPlacement === 'before'\"\n            [class.k-slider-bottomright]=\"tickPlacement === 'after'\"\n            [kendoEventsOutsideAngular]=\"{ click: onWrapClick, keydown: onKeyDown }\"\n            >\n            <button *ngIf=\"showButtons\" type=\"button\" #decreaseButton\n                class=\"k-button-decrease k-button k-button-md k-rounded-full k-button-rectangle k-button-solid k-button-solid-base k-icon-button\"\n                [title]=\"decrementMessage\"\n                [attr.tabindex]=\"-1\"\n                role=\"presentation\">\n                    <span class=\"k-button-icon k-icon\"\n                        [class.k-i-caret-alt-left]=\"!vertical\"\n                        [class.k-i-caret-alt-down]=\"vertical\">\n                    </span>\n            </button>\n            <div class=\"k-slider-track-wrap\">\n                <ul kendoSliderTicks\n                    #ticks\n                    *ngIf=\"tickPlacement !== 'none'\"\n                    [tickTitle]=\"title\"\n                    [vertical]=\"vertical\"\n                    [step]=\"smallStep\"\n                    [largeStep]=\"largeStep\"\n                    [min]=\"min\"\n                    [max]=\"max\"\n                    [labelTemplate]=\"labelTemplate?.templateRef\"\n                    [attr.aria-hidden]=\"true\"\n                >\n                </ul>\n                <div #track class=\"k-slider-track\">\n                    <div #sliderSelection class=\"k-slider-selection\">\n                    </div>\n                    <span #draghandle\n                        role=\"slider\"\n                        [attr.aria-valuemin]=\"min\"\n                        [attr.aria-valuemax]=\"max\"\n                        [attr.aria-valuenow]=\"currentValue\"\n                        [attr.aria-valuetext]=\"currentValue\"\n                        [attr.aria-disabled]=\"disabled ? true : undefined\"\n                        [attr.aria-readonly]=\"readonly ? true : undefined\"\n                        [attr.aria-orientation]=\"vertical ? 'vertical' : 'horizontal'\"\n                        [style.touch-action]=\"isDisabled ? '' : 'none'\"\n                        class=\"k-draghandle\"\n                        [title]=\"dragHandleMessage\"\n                        [attr.tabindex]=\"disabled ? '-1' : tabIndex\"\n                        [id]=\"focusableId\"\n                        kendoDraggable\n                        (kendoPress)=\"ifEnabled(handleDragPress, $event)\"\n                        (kendoDrag)=\"ifEnabled(onHandleDrag, $event)\"\n                        (kendoRelease)=\"ifEnabled(onHandleRelease, $event)\"\n                    ></span>\n                </div>\n            </div>\n            <button *ngIf=\"showButtons\" type=\"button\" #increaseButton\n                class=\"k-button-increase k-button k-button-md k-rounded-full k-button-rectangle k-button-solid k-button-solid-base k-icon-button\"\n                [title]=\"incrementMessage\"\n                (click)=\"$event.preventDefault()\"\n                [attr.tabindex]=\"-1\"\n                [attr.aria-label]=\"currentValue\"\n                role=\"presentation\">\n                    <span class=\"k-button-icon k-icon\"\n                        [class.k-i-caret-alt-right]=\"!vertical\"\n                        [class.k-i-caret-alt-up]=\"vertical\">\n                    </span>\n            </button>\n            <kendo-resize-sensor (resize)=\"sizeComponent(false)\"></kendo-resize-sensor>\n        </div>\n  `, isInline: true, components: [{ type: SliderTicksComponent, selector: \"[kendoSliderTicks]\", inputs: [\"tickTitle\", \"vertical\", \"step\", \"largeStep\", \"min\", \"max\", \"labelTemplate\"] }, { type: i3.ResizeSensorComponent, selector: \"kendo-resize-sensor\", inputs: [\"rateLimit\"], outputs: [\"resize\"] }], directives: [{ type: LocalizedSliderMessagesDirective, selector: \"[kendoSliderLocalizedMessages]\" }, { type: i3.EventsOutsideAngularDirective, selector: \"[kendoEventsOutsideAngular]\", inputs: [\"kendoEventsOutsideAngular\", \"scope\"] }, { type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.DraggableDirective, selector: \"[kendoDraggable]\", inputs: [\"enableDrag\"], outputs: [\"kendoPress\", \"kendoDrag\", \"kendoRelease\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SliderComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoSlider',\n                    providers: [\n                        LocalizationService,\n                        { provide: L10N_PREFIX, useValue: 'kendo.slider' },\n                        { multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SliderComponent) },\n                        { provide: KendoInput, useExisting: forwardRef(() => SliderComponent) }\n                    ],\n                    selector: 'kendo-slider',\n                    template: `\n        <ng-container kendoSliderLocalizedMessages\n            i18n-increment=\"kendo.slider.increment|The title of the **Increase** button of the Slider.\"\n            increment=\"increment\"\n            i18n-decrement=\"kendo.slider.decrement|The title of the **Decrease** button of the Slider.\"\n            decrement=\"decrement\"\n            i18n-dragHandle=\"kendo.slider.dragHandle|The title of the drag handle of the Slider.\"\n            dragHandle=\"Drag\"\n        >\n        <div class=\"k-slider-wrap\" #wrap\n            [class.k-slider-buttons]=\"showButtons\"\n            [class.k-slider-topleft]=\"tickPlacement === 'before'\"\n            [class.k-slider-bottomright]=\"tickPlacement === 'after'\"\n            [kendoEventsOutsideAngular]=\"{ click: onWrapClick, keydown: onKeyDown }\"\n            >\n            <button *ngIf=\"showButtons\" type=\"button\" #decreaseButton\n                class=\"k-button-decrease k-button k-button-md k-rounded-full k-button-rectangle k-button-solid k-button-solid-base k-icon-button\"\n                [title]=\"decrementMessage\"\n                [attr.tabindex]=\"-1\"\n                role=\"presentation\">\n                    <span class=\"k-button-icon k-icon\"\n                        [class.k-i-caret-alt-left]=\"!vertical\"\n                        [class.k-i-caret-alt-down]=\"vertical\">\n                    </span>\n            </button>\n            <div class=\"k-slider-track-wrap\">\n                <ul kendoSliderTicks\n                    #ticks\n                    *ngIf=\"tickPlacement !== 'none'\"\n                    [tickTitle]=\"title\"\n                    [vertical]=\"vertical\"\n                    [step]=\"smallStep\"\n                    [largeStep]=\"largeStep\"\n                    [min]=\"min\"\n                    [max]=\"max\"\n                    [labelTemplate]=\"labelTemplate?.templateRef\"\n                    [attr.aria-hidden]=\"true\"\n                >\n                </ul>\n                <div #track class=\"k-slider-track\">\n                    <div #sliderSelection class=\"k-slider-selection\">\n                    </div>\n                    <span #draghandle\n                        role=\"slider\"\n                        [attr.aria-valuemin]=\"min\"\n                        [attr.aria-valuemax]=\"max\"\n                        [attr.aria-valuenow]=\"currentValue\"\n                        [attr.aria-valuetext]=\"currentValue\"\n                        [attr.aria-disabled]=\"disabled ? true : undefined\"\n                        [attr.aria-readonly]=\"readonly ? true : undefined\"\n                        [attr.aria-orientation]=\"vertical ? 'vertical' : 'horizontal'\"\n                        [style.touch-action]=\"isDisabled ? '' : 'none'\"\n                        class=\"k-draghandle\"\n                        [title]=\"dragHandleMessage\"\n                        [attr.tabindex]=\"disabled ? '-1' : tabIndex\"\n                        [id]=\"focusableId\"\n                        kendoDraggable\n                        (kendoPress)=\"ifEnabled(handleDragPress, $event)\"\n                        (kendoDrag)=\"ifEnabled(onHandleDrag, $event)\"\n                        (kendoRelease)=\"ifEnabled(onHandleRelease, $event)\"\n                    ></span>\n                </div>\n            </div>\n            <button *ngIf=\"showButtons\" type=\"button\" #increaseButton\n                class=\"k-button-increase k-button k-button-md k-rounded-full k-button-rectangle k-button-solid k-button-solid-base k-icon-button\"\n                [title]=\"incrementMessage\"\n                (click)=\"$event.preventDefault()\"\n                [attr.tabindex]=\"-1\"\n                [attr.aria-label]=\"currentValue\"\n                role=\"presentation\">\n                    <span class=\"k-button-icon k-icon\"\n                        [class.k-i-caret-alt-right]=\"!vertical\"\n                        [class.k-i-caret-alt-up]=\"vertical\">\n                    </span>\n            </button>\n            <kendo-resize-sensor (resize)=\"sizeComponent(false)\"></kendo-resize-sensor>\n        </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: i0.Injector }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { focusableId: [{\n                type: Input\n            }], dragHandleTitle: [{\n                type: Input\n            }], incrementTitle: [{\n                type: Input\n            }], animate: [{\n                type: Input\n            }], decrementTitle: [{\n                type: Input\n            }], showButtons: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], draghandle: [{\n                type: ViewChild,\n                args: ['draghandle', { static: true }]\n            }], decreaseButton: [{\n                type: ViewChild,\n                args: ['decreaseButton', { static: false }]\n            }], increaseButton: [{\n                type: ViewChild,\n                args: ['increaseButton', { static: false }]\n            }] } });\n\n/**\n * @hidden\n */\nclass RangeSliderModel extends SliderModelBase {\n    positionHandle(dragHandle) {\n        if (!dragHandle.id) {\n            return;\n        }\n        const { max, min, reverse, vertical } = this.props;\n        const position = vertical ? 'bottom' : 'left';\n        const trackWidth = this.trackWidth();\n        const value = isStartHandle(dragHandle) ? trimValueRange(max, min, this.props.value)[0]\n            : trimValueRange(max, min, this.props.value)[1];\n        if (isStartHandle(dragHandle)) {\n            this.startHandlePosition = calculateHandlePosition({\n                min,\n                max,\n                reverse,\n                value,\n                trackWidth\n            });\n            this.renderer.setStyle(dragHandle, position, `${this.startHandlePosition}px`);\n        }\n        else {\n            this.endHandlePosition = calculateHandlePosition({\n                min,\n                max,\n                reverse,\n                value,\n                trackWidth\n            });\n            this.renderer.setStyle(dragHandle, position, `${this.endHandlePosition}px`);\n        }\n    }\n    positionSelection(dragHandle, selection) {\n        const { reverse, vertical } = this.props;\n        const dimension = vertical ? 'height' : 'width';\n        const position = vertical ? 'bottom' : reverse ? 'right' : 'left';\n        const size = Math.abs(this.endHandlePosition - this.startHandlePosition);\n        const currentSelectionPosition = vertical ? dragHandle.style.bottom : dragHandle.style.left;\n        this.renderer.setStyle(selection, dimension, `${size}px`);\n        this.renderer.setStyle(selection, position, reverse ? this.trackWidth() - parseFloat(currentSelectionPosition) + 'px'\n            : parseFloat(currentSelectionPosition) + 'px');\n    }\n}\n\n/**\n * @hidden\n */\nclass RangeSliderMessages extends ComponentMessages {\n}\nRangeSliderMessages.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RangeSliderMessages, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nRangeSliderMessages.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: RangeSliderMessages, selector: \"kendo-rangeslider-messages-base\", inputs: { dragHandleStart: \"dragHandleStart\", dragHandleEnd: \"dragHandleEnd\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RangeSliderMessages, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: 'kendo-rangeslider-messages-base'\n                }]\n        }], propDecorators: { dragHandleStart: [{\n                type: Input\n            }], dragHandleEnd: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass LocalizedRangeSliderMessagesDirective extends RangeSliderMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nLocalizedRangeSliderMessagesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalizedRangeSliderMessagesDirective, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Directive });\nLocalizedRangeSliderMessagesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LocalizedRangeSliderMessagesDirective, selector: \"[kendoSliderLocalizedMessages]\", providers: [\n        {\n            provide: RangeSliderMessages,\n            useExisting: forwardRef(() => LocalizedRangeSliderMessagesDirective)\n        }\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalizedRangeSliderMessagesDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    providers: [\n                        {\n                            provide: RangeSliderMessages,\n                            useExisting: forwardRef(() => LocalizedRangeSliderMessagesDirective)\n                        }\n                    ],\n                    selector: '[kendoSliderLocalizedMessages]'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\nconst PRESSED = 'k-pressed';\n/**\n * Represents the [Kendo UI RangeSlider component for Angular]({% slug overview_rangeslider %}).\n */\nclass RangeSliderComponent extends SliderBase {\n    constructor(localization, injector, renderer, ngZone, changeDetector, hostElement) {\n        super(localization, injector, renderer, ngZone, changeDetector, hostElement);\n        this.localization = localization;\n        this.injector = injector;\n        this.renderer = renderer;\n        this.ngZone = ngZone;\n        this.changeDetector = changeDetector;\n        this.hostElement = hostElement;\n        /**\n         * @hidden\n         */\n        this.startHandleId = `k-start-handle-${guid()}`;\n        /**\n         * @hidden\n         */\n        this.endHandleId = `k-end-handle-${guid()}`;\n        /**\n         * @hidden\n         */\n        this.focusableId = this.startHandleId;\n        this.activeHandle = 'startHandle';\n        this.focusChangedProgrammatically = false;\n        /**\n         * @hidden\n         */\n        this.onWrapClick = (args) => {\n            if (!this.isDisabled) {\n                this.value = this.value || [this.min, this.min];\n                const trackValue = eventValue(args, this.track.nativeElement, this.getProps());\n                let newRangeValue;\n                const [startValue, endValue] = newRangeValue = this.value;\n                if (trackValue <= startValue) {\n                    newRangeValue = [trackValue, endValue];\n                    this.activeHandle = 'startHandle';\n                }\n                else if (startValue < trackValue && trackValue < endValue) {\n                    if (trackValue < (startValue + endValue) / 2) {\n                        newRangeValue = [trackValue, endValue];\n                        this.activeHandle = 'startHandle';\n                    }\n                    else {\n                        newRangeValue = [startValue, trackValue];\n                        this.activeHandle = 'endHandle';\n                    }\n                }\n                else if (trackValue >= endValue) {\n                    newRangeValue = [startValue, trackValue];\n                    this.activeHandle = 'endHandle';\n                }\n                const activeHandle = this.activeHandle === 'startHandle' ? this.draghandleStart : this.draghandleEnd;\n                invokeElementMethod(activeHandle, 'focus');\n                this.changeValue(newRangeValue);\n            }\n        };\n        /**\n         * @hidden\n         */\n        this.onKeyDown = (e) => {\n            this.value = this.value || [this.min, this.min];\n            const options = this.getProps();\n            const { max, min } = options;\n            const handler = this.keyBinding[e.keyCode];\n            if (this.isDisabled || !handler) {\n                return;\n            }\n            const startHandleIsActive = isStartHandle(e.target);\n            const nonDraggedHandle = startHandleIsActive ? this.draghandleEnd.nativeElement : this.draghandleStart.nativeElement;\n            this.renderer.removeStyle(nonDraggedHandle, 'zIndex');\n            this.renderer.setStyle(e.target, 'zIndex', 1);\n            const value = handler(Object.assign(Object.assign({}, options), { value: startHandleIsActive ? this.value[0] : this.value[1] }));\n            if (startHandleIsActive) {\n                if (value > this.value[1]) {\n                    this.value[1] = value;\n                }\n            }\n            else {\n                if (value < this.value[0]) {\n                    this.value[0] = value;\n                }\n            }\n            const trimmedValue = trimValue(max, min, value);\n            const newValue = startHandleIsActive ? [trimmedValue, this.value[1]]\n                : [this.value[0], trimmedValue];\n            this.changeValue(newValue);\n            e.preventDefault();\n        };\n        this.ngChange = (_) => { };\n        this.ngTouched = () => { };\n        this.handleBlur = () => {\n            this.changeDetector.markForCheck();\n            this.focused = false;\n            if (hasObservers(this.onBlur) || requiresZoneOnBlur(this.control)) {\n                this.ngZone.run(() => {\n                    this.ngTouched();\n                    if (!this.focusChangedProgrammatically) {\n                        this.onBlur.emit();\n                    }\n                });\n            }\n        };\n    }\n    /**\n     * Focuses the RangeSlider.\n     *\n     * @example\n     * ```ts-no-run\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *     <div>\n     *         <button class=\"k-button\" (click)=\"slider.focus()\">Focus</button>\n     *     </div>\n     *     <kendo-rangeslider #slider></kendo-rangeslider>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n    focus() {\n        this.focusChangedProgrammatically = true;\n        invokeElementMethod(this.draghandleStart, 'focus');\n        this.focusChangedProgrammatically = false;\n    }\n    /**\n     * Blurs the RangeSlider.\n     */\n    blur() {\n        this.focusChangedProgrammatically = true;\n        const activeHandle = this.activeHandle === 'startHandle' ? this.draghandleStart : this.draghandleEnd;\n        invokeElementMethod(activeHandle, 'blur');\n        this.handleBlur();\n        this.focusChangedProgrammatically = false;\n    }\n    ngOnInit() {\n        if (!this.value) {\n            this.value = [this.min, this.max];\n        }\n        super.ngOnInit();\n    }\n    ngOnChanges(changes) {\n        if (anyChanged(['value', 'fixedTickWidth', 'tickPlacement'], changes, true)) {\n            if (changes.value && changes.value.currentValue) {\n                validateValue(changes.value.currentValue);\n            }\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                this.sizeComponent();\n            });\n        }\n    }\n    ngAfterViewInit() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        this.sizeComponent();\n        if (this.ticks) {\n            this.ticks.tickElements\n                .changes\n                .subscribe(() => this.sizeComponent());\n        }\n        this.isRangeSliderInvalid();\n        this.attachElementEventHandlers();\n    }\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n    }\n    /**\n     * @hidden\n     */\n    textFor(key) {\n        return this.localization.get(key);\n    }\n    /**\n     * @hidden\n     */\n    get valueText() {\n        return this.value ? `${this.value[0]} - ${this.value[1]}` : '';\n    }\n    /**\n     * @hidden\n     */\n    handleDragPress(args) {\n        if (args.originalEvent) {\n            args.originalEvent.preventDefault();\n        }\n        const target = args.originalEvent.target;\n        this.draggedHandle = target;\n        const nonDraggedHandle = this.draghandleStart.nativeElement === this.draggedHandle ? this.draghandleEnd.nativeElement : this.draghandleStart.nativeElement;\n        this.renderer.removeStyle(nonDraggedHandle, 'zIndex');\n        this.renderer.setStyle(target, 'zIndex', 1);\n    }\n    /**\n     * @hidden\n     */\n    onHandleDrag(args) {\n        this.value = this.value || [this.min, this.min];\n        const target = args.originalEvent.target;\n        const lastCoords = this.draggedHandle.getBoundingClientRect();\n        this.lastHandlePosition = { x: lastCoords.left, y: lastCoords.top };\n        this.dragging = { value: true, target };\n        const mousePos = {\n            x: (args.pageX - 0.5) - (lastCoords.width / 2),\n            y: (args.pageY - (lastCoords.width / 2))\n        };\n        const left = mousePos.x < this.lastHandlePosition.x;\n        const right = mousePos.x > this.lastHandlePosition.x;\n        const up = mousePos.y > this.lastHandlePosition.y;\n        const moveStartHandle = () => this.changeValue([eventValue(args, this.track.nativeElement, this.getProps()), this.value[1]]);\n        const moveEndHandle = () => this.changeValue([this.value[0], eventValue(args, this.track.nativeElement, this.getProps())]);\n        const moveBothHandles = () => this.changeValue([eventValue(args, this.track.nativeElement, this.getProps()), eventValue(args, this.track.nativeElement, this.getProps())]);\n        const activeStartHandle = isStartHandle(this.draggedHandle);\n        const vertical = this.vertical;\n        const horizontal = !vertical;\n        const forward = (vertical && up) || (this.reverse ? horizontal && right : horizontal && left);\n        const incorrectValueState = this.value[0] > this.value[1];\n        if (this.value[0] === this.value[1] || incorrectValueState) {\n            if (forward) {\n                // eslint-disable-next-line no-unused-expressions\n                activeStartHandle ? moveStartHandle() : moveBothHandles();\n            }\n            else {\n                // eslint-disable-next-line no-unused-expressions\n                activeStartHandle ? moveBothHandles() : moveEndHandle();\n            }\n        }\n        else {\n            // eslint-disable-next-line no-unused-expressions\n            activeStartHandle ? moveStartHandle() : moveEndHandle();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onHandleRelease(args) {\n        this.dragging = { value: false, target: args.originalEvent.target }; //needed for animation\n        this.draggedHandle = undefined;\n    }\n    //ngModel binding\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        validateValue(value);\n        this.value = value;\n        this.sizeComponent();\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.ngChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.ngTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n    changeValue(value) {\n        if (!this.value || !isSameRange(this.value, value)) {\n            this.ngZone.run(() => {\n                this.value = value;\n                this.ngChange(value);\n                if (this.value) {\n                    this.valueChange.emit(value);\n                }\n                this.sizeComponent();\n            });\n        }\n        this.isRangeSliderInvalid();\n    }\n    /**\n     * @hidden\n     */\n    sizeComponent() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        const wrapper = this.wrapper.nativeElement;\n        const track = this.track.nativeElement;\n        const selectionEl = this.sliderSelection.nativeElement;\n        const dragHandleStartEl = this.draghandleStart.nativeElement;\n        const dragHandleEndEl = this.draghandleEnd.nativeElement;\n        const ticks = this.ticks ? this.ticksContainer.nativeElement : null;\n        this.resetStyles([track, selectionEl, dragHandleStartEl, dragHandleEndEl, ticks, this.hostElement.nativeElement]);\n        const props = this.getProps();\n        const model = new RangeSliderModel(props, wrapper, track, this.renderer);\n        model.resizeTrack();\n        if (this.ticks) { //for case when tickPlacement: none\n            model.resizeTicks(this.ticksContainer.nativeElement, this.ticks.tickElements.map(element => element.nativeElement));\n        }\n        model.positionHandle(dragHandleStartEl);\n        model.positionHandle(dragHandleEndEl);\n        model.positionSelection(dragHandleStartEl, selectionEl);\n        if (this.fixedTickWidth) {\n            model.resizeWrapper();\n        }\n    }\n    /**\n     * @hidden\n     */\n    get isDisabled() {\n        return this.disabled || this.readonly;\n    }\n    /**\n     * @hidden\n     * Used by the FloatingLabel to determine if the component is empty.\n     */\n    isEmpty() {\n        return false;\n    }\n    set focused(value) {\n        if (this.isFocused !== value && this.hostElement) {\n            this.isFocused = value;\n        }\n    }\n    set dragging(data) {\n        if (this.isDragged !== data.value && this.sliderSelection && this.draghandleStart && this.draghandleEnd) {\n            const sliderSelection = this.sliderSelection.nativeElement;\n            const draghandle = data.target;\n            if (data.value) {\n                this.renderer.addClass(sliderSelection, PRESSED);\n                this.renderer.addClass(draghandle, PRESSED);\n            }\n            else {\n                this.renderer.removeClass(sliderSelection, PRESSED);\n                this.renderer.removeClass(draghandle, PRESSED);\n            }\n            this.isDragged = data.value;\n        }\n    }\n    getProps() {\n        return {\n            disabled: this.disabled,\n            fixedTickWidth: this.fixedTickWidth,\n            largeStep: this.largeStep,\n            max: this.max,\n            min: this.min,\n            readonly: this.readonly,\n            reverse: this.reverse,\n            rtl: this.localizationService.rtl,\n            smallStep: this.smallStep,\n            value: trimValueRange(this.max, this.min, this.value),\n            vertical: this.vertical,\n            buttons: false\n        };\n    }\n    isRangeSliderInvalid() {\n        const rangeSliderClasses = this.hostElement.nativeElement.classList;\n        this.isInvalid = rangeSliderClasses.contains('ng-invalid') ? true : false;\n        this.renderer.setAttribute(this.draghandleStart.nativeElement, 'aria-invalid', `${this.isInvalid}`);\n        this.renderer.setAttribute(this.draghandleEnd.nativeElement, 'aria-invalid', `${this.isInvalid}`);\n    }\n    attachElementEventHandlers() {\n        const hostElement = this.hostElement.nativeElement;\n        let tabbing = false;\n        let cursorInsideWrapper = false;\n        this.ngZone.runOutsideAngular(() => {\n            // focusIn and focusOut are relative to the host element\n            this.subscriptions.add(this.renderer.listen(hostElement, 'focusin', () => {\n                if (!this.isFocused) {\n                    this.ngZone.run(() => {\n                        if (!this.focusChangedProgrammatically) {\n                            this.onFocus.emit();\n                        }\n                        this.focused = true;\n                    });\n                }\n            }));\n            this.subscriptions.add(this.renderer.listen(hostElement, 'focusout', (args) => {\n                if (!this.isFocused) {\n                    return;\n                }\n                if (tabbing) {\n                    if (args.relatedTarget !== this.draghandleStart.nativeElement && args.relatedTarget !== this.draghandleEnd.nativeElement) {\n                        this.handleBlur();\n                    }\n                    tabbing = false;\n                }\n                else {\n                    if (!cursorInsideWrapper) {\n                        this.handleBlur();\n                    }\n                }\n            }));\n            this.subscriptions.add(this.renderer.listen(hostElement, 'mouseenter', () => {\n                cursorInsideWrapper = true;\n            }));\n            this.subscriptions.add(this.renderer.listen(hostElement, 'mouseleave', () => {\n                cursorInsideWrapper = false;\n            }));\n            this.subscriptions.add(this.renderer.listen(hostElement, 'keydown', (args) => {\n                if (args.keyCode === Keys.Tab) {\n                    tabbing = true;\n                }\n                else {\n                    tabbing = false;\n                }\n            }));\n        });\n    }\n}\nRangeSliderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RangeSliderComponent, deps: [{ token: i1.LocalizationService }, { token: i0.Injector }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nRangeSliderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: RangeSliderComponent, selector: \"kendo-rangeslider\", inputs: { value: \"value\" }, providers: [\n        LocalizationService,\n        { provide: L10N_PREFIX, useValue: 'kendo.rangeslider' },\n        { multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => RangeSliderComponent) },\n        { provide: KendoInput, useExisting: forwardRef(() => RangeSliderComponent) }\n    ], viewQueries: [{ propertyName: \"draghandleStart\", first: true, predicate: [\"draghandleStart\"], descendants: true, static: true }, { propertyName: \"draghandleEnd\", first: true, predicate: [\"draghandleEnd\"], descendants: true, static: true }], exportAs: [\"kendoRangeSlider\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `\n        <ng-container kendoSliderLocalizedMessages\n            i18n-dragHandleStart=\"kendo.rangeslider.dragHandleStart|The title of the **Start** drag handle of the Slider.\"\n            dragHandleStart=\"Drag\"\n            i18n-dragHandleEnd=\"kendo.rangeslider.dragHandleEnd|The title of the **End** drag handle of the Slider.\"\n            dragHandleEnd=\"Drag\"\n        >\n\n        <div class=\"k-slider-wrap\" #wrap\n            [class.k-slider-topleft]=\"tickPlacement === 'before'\"\n            [class.k-slider-bottomright]=\"tickPlacement === 'after'\"\n            [kendoEventsOutsideAngular]=\"{ click: onWrapClick, keydown: onKeyDown }\"\n            >\n            <div class=\"k-slider-track-wrap\">\n                <ul kendoSliderTicks\n                    #ticks\n                    *ngIf=\"tickPlacement !== 'none'\"\n                    [tickTitle]=\"title\"\n                    [vertical]=\"vertical\"\n                    [step]=\"smallStep\"\n                    [largeStep]=\"largeStep\"\n                    [min]=\"min\"\n                    [max]=\"max\"\n                    [labelTemplate]=\"labelTemplate?.templateRef\"\n                    [attr.aria-hidden]=\"true\"\n                >\n                </ul>\n                <div #track class=\"k-slider-track\">\n                    <div #sliderSelection class=\"k-slider-selection\">\n                    </div>\n                    <span #draghandleStart\n                        role=\"slider\"\n                        [id]=\"startHandleId\"\n                        [attr.tabindex]=\"disabled ? undefined : tabindex\"\n                        [attr.aria-valuemin]=\"min\"\n                        [attr.aria-valuemax]=\"max\"\n                        [attr.aria-valuenow]=\"value ? value[0] : null\"\n                        [attr.aria-valuetext]=\"valueText\"\n                        [attr.aria-disabled]=\"disabled ? true : undefined\"\n                        [attr.aria-readonly]=\"readonly ? true : undefined\"\n                        [attr.aria-orientation]=\"vertical ? 'vertical' : 'horizontal'\"\n                        [style.touch-action]=\"isDisabled ? '' : 'none'\"\n                        class=\"k-draghandle\"\n                        [title]=\"textFor('dragHandleStart')\"\n                        kendoDraggable\n                        (kendoPress)=\"ifEnabled(handleDragPress ,$event)\"\n                        (kendoDrag)=\"ifEnabled(onHandleDrag ,$event)\"\n                        (kendoRelease)=\"ifEnabled(onHandleRelease, $event)\"\n                    ></span>\n                    <span #draghandleEnd\n                        role=\"slider\"\n                        [id]=\"endHandleId\"\n                        [attr.tabindex]=\"disabled ? undefined : tabindex\"\n                        [attr.aria-valuemin]=\"min\"\n                        [attr.aria-valuemax]=\"max\"\n                        [attr.aria-valuenow]=\"value ? value[1] : null\"\n                        [attr.aria-valuetext]=\"valueText\"\n                        [attr.aria-disabled]=\"disabled ? true : undefined\"\n                        [attr.aria-readonly]=\"readonly ? true : undefined\"\n                        [attr.aria-orientation]=\"vertical ? 'vertical' : 'horizontal'\"\n                        [style.touch-action]=\"isDisabled ? '' : 'none'\"\n                        class=\"k-draghandle\"\n                        [title]=\"textFor('dragHandleEnd')\"\n                        kendoDraggable\n                        (kendoPress)=\"ifEnabled(handleDragPress ,$event)\"\n                        (kendoDrag)=\"ifEnabled(onHandleDrag ,$event)\"\n                        (kendoRelease)=\"ifEnabled(onHandleRelease, $event)\"\n                    ></span>\n                </div>\n            </div>\n            <kendo-resize-sensor (resize)=\"sizeComponent()\"></kendo-resize-sensor>\n        </div>\n  `, isInline: true, components: [{ type: SliderTicksComponent, selector: \"[kendoSliderTicks]\", inputs: [\"tickTitle\", \"vertical\", \"step\", \"largeStep\", \"min\", \"max\", \"labelTemplate\"] }, { type: i3.ResizeSensorComponent, selector: \"kendo-resize-sensor\", inputs: [\"rateLimit\"], outputs: [\"resize\"] }], directives: [{ type: LocalizedRangeSliderMessagesDirective, selector: \"[kendoSliderLocalizedMessages]\" }, { type: i3.EventsOutsideAngularDirective, selector: \"[kendoEventsOutsideAngular]\", inputs: [\"kendoEventsOutsideAngular\", \"scope\"] }, { type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.DraggableDirective, selector: \"[kendoDraggable]\", inputs: [\"enableDrag\"], outputs: [\"kendoPress\", \"kendoDrag\", \"kendoRelease\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RangeSliderComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoRangeSlider',\n                    providers: [\n                        LocalizationService,\n                        { provide: L10N_PREFIX, useValue: 'kendo.rangeslider' },\n                        { multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => RangeSliderComponent) },\n                        { provide: KendoInput, useExisting: forwardRef(() => RangeSliderComponent) }\n                    ],\n                    selector: 'kendo-rangeslider',\n                    template: `\n        <ng-container kendoSliderLocalizedMessages\n            i18n-dragHandleStart=\"kendo.rangeslider.dragHandleStart|The title of the **Start** drag handle of the Slider.\"\n            dragHandleStart=\"Drag\"\n            i18n-dragHandleEnd=\"kendo.rangeslider.dragHandleEnd|The title of the **End** drag handle of the Slider.\"\n            dragHandleEnd=\"Drag\"\n        >\n\n        <div class=\"k-slider-wrap\" #wrap\n            [class.k-slider-topleft]=\"tickPlacement === 'before'\"\n            [class.k-slider-bottomright]=\"tickPlacement === 'after'\"\n            [kendoEventsOutsideAngular]=\"{ click: onWrapClick, keydown: onKeyDown }\"\n            >\n            <div class=\"k-slider-track-wrap\">\n                <ul kendoSliderTicks\n                    #ticks\n                    *ngIf=\"tickPlacement !== 'none'\"\n                    [tickTitle]=\"title\"\n                    [vertical]=\"vertical\"\n                    [step]=\"smallStep\"\n                    [largeStep]=\"largeStep\"\n                    [min]=\"min\"\n                    [max]=\"max\"\n                    [labelTemplate]=\"labelTemplate?.templateRef\"\n                    [attr.aria-hidden]=\"true\"\n                >\n                </ul>\n                <div #track class=\"k-slider-track\">\n                    <div #sliderSelection class=\"k-slider-selection\">\n                    </div>\n                    <span #draghandleStart\n                        role=\"slider\"\n                        [id]=\"startHandleId\"\n                        [attr.tabindex]=\"disabled ? undefined : tabindex\"\n                        [attr.aria-valuemin]=\"min\"\n                        [attr.aria-valuemax]=\"max\"\n                        [attr.aria-valuenow]=\"value ? value[0] : null\"\n                        [attr.aria-valuetext]=\"valueText\"\n                        [attr.aria-disabled]=\"disabled ? true : undefined\"\n                        [attr.aria-readonly]=\"readonly ? true : undefined\"\n                        [attr.aria-orientation]=\"vertical ? 'vertical' : 'horizontal'\"\n                        [style.touch-action]=\"isDisabled ? '' : 'none'\"\n                        class=\"k-draghandle\"\n                        [title]=\"textFor('dragHandleStart')\"\n                        kendoDraggable\n                        (kendoPress)=\"ifEnabled(handleDragPress ,$event)\"\n                        (kendoDrag)=\"ifEnabled(onHandleDrag ,$event)\"\n                        (kendoRelease)=\"ifEnabled(onHandleRelease, $event)\"\n                    ></span>\n                    <span #draghandleEnd\n                        role=\"slider\"\n                        [id]=\"endHandleId\"\n                        [attr.tabindex]=\"disabled ? undefined : tabindex\"\n                        [attr.aria-valuemin]=\"min\"\n                        [attr.aria-valuemax]=\"max\"\n                        [attr.aria-valuenow]=\"value ? value[1] : null\"\n                        [attr.aria-valuetext]=\"valueText\"\n                        [attr.aria-disabled]=\"disabled ? true : undefined\"\n                        [attr.aria-readonly]=\"readonly ? true : undefined\"\n                        [attr.aria-orientation]=\"vertical ? 'vertical' : 'horizontal'\"\n                        [style.touch-action]=\"isDisabled ? '' : 'none'\"\n                        class=\"k-draghandle\"\n                        [title]=\"textFor('dragHandleEnd')\"\n                        kendoDraggable\n                        (kendoPress)=\"ifEnabled(handleDragPress ,$event)\"\n                        (kendoDrag)=\"ifEnabled(onHandleDrag ,$event)\"\n                        (kendoRelease)=\"ifEnabled(onHandleRelease, $event)\"\n                    ></span>\n                </div>\n            </div>\n            <kendo-resize-sensor (resize)=\"sizeComponent()\"></kendo-resize-sensor>\n        </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: i0.Injector }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { value: [{\n                type: Input\n            }], draghandleStart: [{\n                type: ViewChild,\n                args: ['draghandleStart', { static: true }]\n            }], draghandleEnd: [{\n                type: ViewChild,\n                args: ['draghandleEnd', { static: true }]\n            }] } });\n\n/**\n * @hidden\n */\nclass Messages extends ComponentMessages {\n}\nMessages.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: Messages, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMessages.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: Messages, selector: \"kendo-switch-messages-base\", inputs: { on: \"on\", off: \"off\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: Messages, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: 'kendo-switch-messages-base'\n                }]\n        }], propDecorators: { on: [{\n                type: Input\n            }], off: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass LocalizedSwitchMessagesDirective extends Messages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nLocalizedSwitchMessagesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalizedSwitchMessagesDirective, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Directive });\nLocalizedSwitchMessagesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LocalizedSwitchMessagesDirective, selector: \"[kendoSwitchLocalizedMessages]\", providers: [\n        {\n            provide: Messages,\n            useExisting: forwardRef(() => LocalizedSwitchMessagesDirective)\n        }\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalizedSwitchMessagesDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    providers: [\n                        {\n                            provide: Messages,\n                            useExisting: forwardRef(() => LocalizedSwitchMessagesDirective)\n                        }\n                    ],\n                    selector: '[kendoSwitchLocalizedMessages]'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\nconst FOCUSED$4 = 'k-focus';\nconst DEFAULT_SIZE$8 = 'medium';\nconst DEFAULT_THUMB_ROUNDED = 'full';\nconst DEFAULT_TRACK_ROUNDED = 'full';\n/**\n * Represents the [Kendo UI Switch component for Angular]({% slug overview_switch %}).\n */\nclass SwitchComponent {\n    constructor(renderer, hostElement, localizationService, injector, changeDetector, ngZone) {\n        this.renderer = renderer;\n        this.hostElement = hostElement;\n        this.localizationService = localizationService;\n        this.injector = injector;\n        this.changeDetector = changeDetector;\n        this.ngZone = ngZone;\n        /**\n         * @hidden\n         */\n        this.focusableId = `k-${guid()}`;\n        /**\n         * Determines whether the Switch is disabled ([see example]({% slug disabled_switch %})).\n         */\n        this.disabled = false;\n        /**\n         * Determines whether the Switch is in its read-only state ([see example]({% slug readonly_switch %})).\n         */\n        this.readonly = false;\n        /**\n         * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the Switch.\n         */\n        this.tabindex = 0;\n        /**\n         * Fires each time the user focuses the `input` element.\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * Fires each time the `input` element gets blurred.\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * Fires each time the user selects a new value.\n         */\n        this.valueChange = new EventEmitter();\n        this.hostClasses = true;\n        /**\n         * @hidden\n         */\n        this.initialized = false;\n        this.hostClickSubscription = new Subscription;\n        this._checked = false;\n        this._size = 'medium';\n        this._trackRounded = 'full';\n        this._thumbRounded = 'full';\n        this.ngChange = (_) => { };\n        this.ngTouched = () => { };\n        /**\n         * @hidden\n         */\n        this.handleFocus = () => {\n            if (this.isFocused) {\n                return;\n            }\n            this.focused = true;\n            if (hasObservers(this.onFocus)) {\n                this.ngZone.run(() => {\n                    this.onFocus.emit();\n                });\n            }\n        };\n        /**\n         * @hidden\n         */\n        this.handleBlur = (event) => {\n            const relatedTarget = event && event.relatedTarget;\n            if (this.hostElement.nativeElement.contains(relatedTarget)) {\n                return;\n            }\n            this.changeDetector.markForCheck();\n            this.focused = false;\n            if (hasObservers(this.onBlur) || requiresZoneOnBlur(this.control)) {\n                this.ngZone.run(() => {\n                    this.ngTouched();\n                    this.onBlur.emit();\n                });\n            }\n        };\n        validatePackage(packageMetadata);\n        this.direction = localizationService.rtl ? 'rtl' : 'ltr';\n        this.keyDownHandler = this.keyDownHandler.bind(this);\n        this.clickHandler = this.clickHandler.bind(this);\n    }\n    /**\n     * Sets the value of the Switch when it is initially displayed.\n     */\n    set checked(value) {\n        this.setHostClasses(value);\n        this._checked = value;\n    }\n    get checked() {\n        return this._checked;\n    }\n    /**\n     * Specifies the width and height of the Switch.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     */\n    set size(size) {\n        const newSize = size ? size : DEFAULT_SIZE$8;\n        this.handleClasses(newSize, 'size');\n        this._size = newSize;\n    }\n    get size() {\n        return this._size;\n    }\n    /**\n     * Specifies the border radius of the Switch thumb.\n     *\n     * The possible values are:\n     * * `full` (default)\n     * * `small`\n     * * `medium`\n     * * `large`\n     * * `none`\n     */\n    set thumbRounded(thumbRounded) {\n        const newThumbRounded = thumbRounded ? thumbRounded : DEFAULT_THUMB_ROUNDED;\n        this.handleThumbClasses(newThumbRounded);\n        this._thumbRounded = newThumbRounded;\n    }\n    get thumbRounded() {\n        return this._thumbRounded;\n    }\n    /**\n     * Specifies the border radius of the Switch track.\n     *\n     * The possible values are:\n     * * `full` (default)\n     * * `small`\n     * * `medium`\n     * * `large`\n     * * `none`\n     */\n    set trackRounded(trackRounded) {\n        const newTrackRounded = trackRounded ? trackRounded : DEFAULT_TRACK_ROUNDED;\n        this.handleTrackClasses(newTrackRounded);\n        this._trackRounded = newTrackRounded;\n    }\n    get trackRounded() {\n        return this._trackRounded;\n    }\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n        this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n        return this.tabindex;\n    }\n    get ieClass() {\n        return browser && browser.msie;\n    }\n    get ariaDisabled() {\n        return this.disabled ? true : undefined;\n    }\n    get ariaReadonly() {\n        return this.readonly;\n    }\n    get disabledClass() {\n        return this.disabled;\n    }\n    /**\n     * @hidden\n     */\n    get onLabelMessage() {\n        return this.onLabel || this.localizationService.get('on');\n    }\n    /**\n     * @hidden\n     */\n    get offLabelMessage() {\n        return this.offLabel || this.localizationService.get('off');\n    }\n    get isEnabled() {\n        return !this.disabled && !this.readonly;\n    }\n    ngOnInit() {\n        if (this.hostElement) {\n            const wrapper = this.hostElement.nativeElement;\n            this.renderer.removeAttribute(wrapper, \"tabindex\");\n        }\n        this.localizationChangeSubscription = this.localizationService\n            .changes\n            .pipe(skip(1))\n            .subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n        });\n        this.control = this.injector.get(NgControl, null);\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.initialized = true);\n    }\n    ngAfterViewInit() {\n        const wrapper = this.hostElement.nativeElement;\n        this.attachHostClickHandler();\n        if (!this.checked && !wrapper.classList.contains('k-switch-off')) {\n            this.renderer.addClass(wrapper, 'k-switch-off');\n        }\n        this.handleClasses(this.size, 'size');\n        this.handleTrackClasses(this.trackRounded);\n        this.handleThumbClasses(this.thumbRounded);\n    }\n    ngOnDestroy() {\n        if (this.localizationChangeSubscription) {\n            this.localizationChangeSubscription.unsubscribe();\n        }\n        if (this.hostClickSubscription) {\n            this.hostClickSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Focuses the Switch.\n     *\n     * @example\n     * ```ts-no-run\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"switch.focus()\">Focus</button>\n     *  <kendo-switch #switch></kendo-switch>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n    focus() {\n        if (!this.track) {\n            return;\n        }\n        this.track.nativeElement.focus();\n    }\n    /**\n     * Blurs the Switch.\n     */\n    blur() {\n        if (!this.track) {\n            return;\n        }\n        this.track.nativeElement.blur();\n    }\n    /**\n     * @hidden\n     * Called when the status of the component changes to or from `disabled`.\n     * Depending on the value, it enables or disables the appropriate DOM element.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.changeDetector.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    get isControlInvalid() {\n        return this.control && this.control.touched && !this.control.valid;\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.checked = value === null ? false : value;\n        this.changeDetector.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.ngChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.ngTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n    keyDownHandler(e) {\n        const keyCode = e.keyCode;\n        if (this.isEnabled && (keyCode === Keys.Space || keyCode === Keys.Enter)) {\n            this.changeValue(!this.checked);\n            e.preventDefault();\n        }\n    }\n    /**\n     * @hidden\n     */\n    clickHandler() {\n        if (this.isEnabled) {\n            this.changeValue(!this.checked);\n        }\n    }\n    /**\n     * @hidden\n     * Used by the FloatingLabel to determine if the component is empty.\n     */\n    isEmpty() {\n        return false;\n    }\n    changeValue(value) {\n        if (this.checked !== value) {\n            this.ngZone.run(() => {\n                this.checked = value;\n                this.ngChange(value);\n                this.valueChange.emit(value);\n                this.changeDetector.markForCheck();\n            });\n        }\n    }\n    set focused(value) {\n        if (this.isFocused !== value && this.hostElement) {\n            const wrapper = this.hostElement.nativeElement;\n            if (value) {\n                this.renderer.addClass(wrapper, FOCUSED$4);\n            }\n            else {\n                this.renderer.removeClass(wrapper, FOCUSED$4);\n            }\n            this.isFocused = value;\n        }\n    }\n    attachHostClickHandler() {\n        this.ngZone.runOutsideAngular(() => {\n            this.hostClickSubscription.add(this.renderer.listen(this.hostElement.nativeElement, 'click', this.clickHandler));\n        });\n    }\n    setHostClasses(value) {\n        const wrapper = this.hostElement.nativeElement;\n        if (value) {\n            this.renderer.removeClass(wrapper, 'k-switch-off');\n            this.renderer.addClass(wrapper, 'k-switch-on');\n        }\n        else {\n            this.renderer.removeClass(wrapper, 'k-switch-on');\n            this.renderer.addClass(wrapper, 'k-switch-off');\n        }\n    }\n    handleClasses(value, input) {\n        const elem = this.hostElement.nativeElement;\n        const classes = getStylingClasses('switch', input, this[input], value);\n        if (classes.toRemove) {\n            this.renderer.removeClass(elem, classes.toRemove);\n        }\n        if (classes.toAdd) {\n            this.renderer.addClass(elem, classes.toAdd);\n        }\n    }\n    handleTrackClasses(value) {\n        var _a, _b;\n        const elem = (_a = this.hostElement) === null || _a === void 0 ? void 0 : _a.nativeElement;\n        const track = (_b = this.track) === null || _b === void 0 ? void 0 : _b.nativeElement;\n        if (!elem || !track) {\n            return;\n        }\n        const classes = getStylingClasses('switch', 'rounded', this.trackRounded, value);\n        if (classes.toRemove) {\n            this.renderer.removeClass(elem, classes.toRemove);\n            this.renderer.removeClass(track, classes.toRemove);\n        }\n        if (classes.toAdd) {\n            this.renderer.addClass(elem, classes.toAdd);\n            this.renderer.addClass(track, classes.toAdd);\n        }\n    }\n    handleThumbClasses(value) {\n        var _a;\n        const thumb = (_a = this.thumb) === null || _a === void 0 ? void 0 : _a.nativeElement;\n        if (!thumb) {\n            return;\n        }\n        const classes = getStylingClasses('switch', 'rounded', this.thumbRounded, value);\n        if (classes.toRemove) {\n            this.renderer.removeClass(thumb, classes.toRemove);\n        }\n        if (classes.toAdd) {\n            this.renderer.addClass(thumb, classes.toAdd);\n        }\n    }\n}\nSwitchComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SwitchComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i1.LocalizationService }, { token: i0.Injector }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nSwitchComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: SwitchComponent, selector: \"kendo-switch\", inputs: { focusableId: \"focusableId\", onLabel: \"onLabel\", offLabel: \"offLabel\", checked: \"checked\", disabled: \"disabled\", readonly: \"readonly\", tabindex: \"tabindex\", size: \"size\", thumbRounded: \"thumbRounded\", trackRounded: \"trackRounded\", tabIndex: \"tabIndex\" }, outputs: { onFocus: \"focus\", onBlur: \"blur\", valueChange: \"valueChange\" }, host: { properties: { \"attr.dir\": \"this.direction\", \"class.k-ie\": \"this.ieClass\", \"attr.aria-disabled\": \"this.ariaDisabled\", \"attr.aria-readonly\": \"this.ariaReadonly\", \"class.k-switch\": \"this.hostClasses\", \"class.k-disabled\": \"this.disabledClass\" } }, providers: [\n        LocalizationService,\n        { provide: L10N_PREFIX, useValue: 'kendo.switch' },\n        {\n            multi: true,\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SwitchComponent) /* eslint-disable-line*/\n        },\n        {\n            provide: KendoInput,\n            useExisting: forwardRef(() => SwitchComponent)\n        }\n    ], viewQueries: [{ propertyName: \"track\", first: true, predicate: [\"track\"], descendants: true, static: true }, { propertyName: \"thumb\", first: true, predicate: [\"thumb\"], descendants: true, static: true }], exportAs: [\"kendoSwitch\"], ngImport: i0, template: `\n        <ng-container kendoSwitchLocalizedMessages\n            i18n-on=\"kendo.switch.on|The **On** label of the Switch.\"\n            on=\"ON\"\n            i18n-off=\"kendo.switch.off|The **Off** label of the Switch.\"\n            off=\"OFF\"\n        >\n\n        <span\n            #track\n            class=\"k-switch-track\"\n            [id]=\"focusableId\"\n            role=\"switch\"\n            [style.transitionDuration]=\"initialized ? '200ms' : '0ms'\"\n            [attr.aria-checked]=\"checked\"\n            [attr.tabindex]=\"(disabled ? undefined : tabIndex)\"\n            [attr.aria-disabled]=\"disabled\"\n            [attr.aria-invalid]=\"isControlInvalid\"\n            [kendoEventsOutsideAngular]=\"{ keydown: keyDownHandler, focus: handleFocus, blur: handleBlur }\"\n        >\n            <span class=\"k-switch-label-on\" [attr.aria-hidden]=\"true\" >{{onLabelMessage}}</span>\n            <span class=\"k-switch-label-off\" [attr.aria-hidden]=\"true\">{{offLabelMessage}}</span>\n        </span>\n        <span\n            class=\"k-switch-thumb-wrap\"\n            tabindex=\"-1\"\n            [style.transitionDuration]=\"initialized ? '200ms' : '0ms'\" [kendoEventsOutsideAngular]=\"{\n                keydown: keyDownHandler,\n                focus: handleFocus,\n                blur: handleBlur\n            }\">\n            <span #thumb class=\"k-switch-thumb\"></span>\n        </span>\n  `, isInline: true, directives: [{ type: LocalizedSwitchMessagesDirective, selector: \"[kendoSwitchLocalizedMessages]\" }, { type: i3.EventsOutsideAngularDirective, selector: \"[kendoEventsOutsideAngular]\", inputs: [\"kendoEventsOutsideAngular\", \"scope\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SwitchComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoSwitch',\n                    providers: [\n                        LocalizationService,\n                        { provide: L10N_PREFIX, useValue: 'kendo.switch' },\n                        {\n                            multi: true,\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => SwitchComponent) /* eslint-disable-line*/\n                        },\n                        {\n                            provide: KendoInput,\n                            useExisting: forwardRef(() => SwitchComponent)\n                        }\n                    ],\n                    selector: 'kendo-switch',\n                    template: `\n        <ng-container kendoSwitchLocalizedMessages\n            i18n-on=\"kendo.switch.on|The **On** label of the Switch.\"\n            on=\"ON\"\n            i18n-off=\"kendo.switch.off|The **Off** label of the Switch.\"\n            off=\"OFF\"\n        >\n\n        <span\n            #track\n            class=\"k-switch-track\"\n            [id]=\"focusableId\"\n            role=\"switch\"\n            [style.transitionDuration]=\"initialized ? '200ms' : '0ms'\"\n            [attr.aria-checked]=\"checked\"\n            [attr.tabindex]=\"(disabled ? undefined : tabIndex)\"\n            [attr.aria-disabled]=\"disabled\"\n            [attr.aria-invalid]=\"isControlInvalid\"\n            [kendoEventsOutsideAngular]=\"{ keydown: keyDownHandler, focus: handleFocus, blur: handleBlur }\"\n        >\n            <span class=\"k-switch-label-on\" [attr.aria-hidden]=\"true\" >{{onLabelMessage}}</span>\n            <span class=\"k-switch-label-off\" [attr.aria-hidden]=\"true\">{{offLabelMessage}}</span>\n        </span>\n        <span\n            class=\"k-switch-thumb-wrap\"\n            tabindex=\"-1\"\n            [style.transitionDuration]=\"initialized ? '200ms' : '0ms'\" [kendoEventsOutsideAngular]=\"{\n                keydown: keyDownHandler,\n                focus: handleFocus,\n                blur: handleBlur\n            }\">\n            <span #thumb class=\"k-switch-thumb\"></span>\n        </span>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i1.LocalizationService }, { type: i0.Injector }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }]; }, propDecorators: { focusableId: [{\n                type: Input\n            }], onLabel: [{\n                type: Input\n            }], offLabel: [{\n                type: Input\n            }], checked: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], thumbRounded: [{\n                type: Input\n            }], trackRounded: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], onFocus: [{\n                type: Output,\n                args: ['focus']\n            }], onBlur: [{\n                type: Output,\n                args: ['blur']\n            }], valueChange: [{\n                type: Output\n            }], direction: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], ieClass: [{\n                type: HostBinding,\n                args: ['class.k-ie']\n            }], ariaDisabled: [{\n                type: HostBinding,\n                args: ['attr.aria-disabled']\n            }], ariaReadonly: [{\n                type: HostBinding,\n                args: ['attr.aria-readonly']\n            }], hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-switch']\n            }], disabledClass: [{\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }], track: [{\n                type: ViewChild,\n                args: ['track', { static: true }]\n            }], thumb: [{\n                type: ViewChild,\n                args: ['thumb', { static: true }]\n            }] } });\n\n/**\n * Represents the [Kendo UI TextBox directive]({% slug overview_textbox %}) for the Inputs components for Angular.\n * Used to style the textbox of any `input` element.\n *\n * @example\n * ```ts-no-run\n * <input kendoTextBox />\n * <input kendoTextBox type=\"email\" />\n * <input kendoTextBox type=\"password\" />\n * ```\n */\nclass TextBoxDirective {\n    constructor(renderer, inputElement, ngZone) {\n        this.renderer = renderer;\n        this.inputElement = inputElement;\n        this.ngZone = ngZone;\n        this.hostClasses = true;\n        /**\n         * @hidden\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.onValueChange = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.autoFillStart = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.autoFillEnd = new EventEmitter();\n        this.listeners = [];\n    }\n    /**\n     * @hidden\n     */\n    set value(text) {\n        if (!this.inputElement) {\n            return;\n        }\n        this.inputElement.nativeElement.value = (text === undefined || text === null) ? '' : text;\n        this.onValueChange.emit();\n    }\n    /**\n     * @hidden\n     */\n    get value() {\n        return this.inputElement.nativeElement.value;\n    }\n    get id() {\n        return this.inputElement.nativeElement.id;\n    }\n    set id(id) {\n        this.renderer.setAttribute(this.inputElement.nativeElement, 'id', id);\n    }\n    ngAfterViewInit() {\n        const input = this.inputElement.nativeElement;\n        this.listeners = [\n            this.renderer.listen(input, 'focus', () => this.onFocus.emit()),\n            this.renderer.listen(input, 'blur', () => this.onBlur.emit())\n        ];\n        this.ngZone.runOutsideAngular(() => {\n            this.renderer.listen(input, 'animationstart', (e) => {\n                if (e.animationName === 'autoFillStart') {\n                    this.autoFillStart.emit();\n                }\n                else if (e.animationName === 'autoFillEnd') {\n                    this.autoFillEnd.emit();\n                }\n            });\n        });\n    }\n    ngOnDestroy() {\n        this.listeners.forEach(listener => listener());\n    }\n}\nTextBoxDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextBoxDirective, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nTextBoxDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TextBoxDirective, selector: \"input[kendoTextBox]\", inputs: { value: \"value\" }, host: { properties: { \"class.k-textbox\": \"this.hostClasses\", \"class.k-input\": \"this.hostClasses\", \"class.k-input-md\": \"this.hostClasses\", \"class.k-rounded-md\": \"this.hostClasses\", \"class.k-input-solid\": \"this.hostClasses\" } }, providers: [{\n            provide: KendoInput,\n            useExisting: forwardRef(() => TextBoxDirective)\n        }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextBoxDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[kendoTextBox]',\n                    providers: [{\n                            provide: KendoInput,\n                            useExisting: forwardRef(() => TextBoxDirective)\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-textbox']\n            }, {\n                type: HostBinding,\n                args: ['class.k-input']\n            }, {\n                type: HostBinding,\n                args: ['class.k-input-md']\n            }, {\n                type: HostBinding,\n                args: ['class.k-rounded-md']\n            }, {\n                type: HostBinding,\n                args: ['class.k-input-solid']\n            }], value: [{\n                type: Input\n            }] } });\n\n/**\n * Represents the [Kendo UI TextArea directive for the Inputs components for Angular]({% slug overview_textarea %}).\n * Provides floating labels to `textarea` elements.\n *\n * @example\n * ```ts-no-run\n * <textarea kendoTextArea></textarea>\n * ```\n */\nclass TextAreaDirective {\n    constructor(renderer, element, zone, changeDetector, injector, rtl) {\n        this.renderer = renderer;\n        this.element = element;\n        this.zone = zone;\n        this.changeDetector = changeDetector;\n        this.injector = injector;\n        this.elementClasses = true;\n        this.autofillClass = true;\n        /**\n         * Fires each time the textarea value is changed.\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Specifies if the `textarea` element will resize its height automatically\n         * ([see example]({% slug overview_textarea %}#toc-auto-resizing)).\n         *\n         * @default false\n         */\n        this.autoSize = false;\n        /**\n         * @hidden\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.onValueChange = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.autoFillStart = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.autoFillEnd = new EventEmitter();\n        this.listeners = [];\n        this.ngChange = (_) => { };\n        this.ngTouched = () => { };\n        this.direction = rtl ? 'rtl' : 'ltr';\n    }\n    get id() {\n        return this.element.nativeElement.id;\n    }\n    set id(id) {\n        this.renderer.setAttribute(this.element.nativeElement, 'id', id);\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.elementValue = value;\n        this.resize();\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.ngChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.ngTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n        this.setElementProperty('disabled', isDisabled);\n    }\n    ngOnInit() {\n        const element = this.element.nativeElement;\n        this.zone.runOutsideAngular(() => {\n            this.listeners = [\n                this.renderer.listen(element, 'focus', this.handleFocus.bind(this)),\n                this.renderer.listen(element, 'blur', this.handleBlur.bind(this)),\n                this.renderer.listen(element, 'animationstart', (e) => {\n                    if (e.animationName === 'autoFillStart') {\n                        this.autoFillStart.emit();\n                    }\n                    else if (e.animationName === 'autoFillEnd') {\n                        this.autoFillEnd.emit();\n                    }\n                })\n            ];\n            if (isDocumentAvailable() && this.autoSize) {\n                this.resizeSubscription = fromEvent(window, 'resize')\n                    .pipe((debounceTime(50)))\n                    .subscribe(() => this.resize());\n            }\n            this.inputSubscription = fromEvent(element, 'input')\n                .subscribe(this.handleInput.bind(this));\n        });\n        this.control = this.injector.get(NgControl, null);\n    }\n    ngOnChanges(changes) {\n        const element = this.element.nativeElement;\n        if (changes.value) {\n            this.elementValue = this.value;\n        }\n        if (changes.autoSize) {\n            if (this.autoSize) {\n                this.initialHeight = element.offsetHeight;\n                this.renderer.setStyle(element, 'resize', 'none');\n            }\n            else {\n                this.renderer.setStyle(element, 'overflow-y', 'auto');\n                this.renderer.setStyle(element, 'resize', 'both');\n                element.style.height = `${this.initialHeight}px`;\n            }\n        }\n        this.zone.onStable.pipe(take(1)).subscribe(() => this.resize());\n    }\n    ngOnDestroy() {\n        this.listeners.forEach(listener => listener());\n        if (this.inputSubscription) {\n            this.inputSubscription.unsubscribe();\n        }\n        if (this.resizeSubscription) {\n            this.resizeSubscription.unsubscribe();\n        }\n    }\n    get elementValue() {\n        if (this.element) {\n            return this.element.nativeElement.value;\n        }\n        return '';\n    }\n    set elementValue(value) {\n        this.setElementProperty('value', (value === undefined || value === null) ? '' : value);\n    }\n    setElementProperty(name, value) {\n        if (this.element) {\n            this.renderer.setProperty(this.element.nativeElement, name, value);\n        }\n    }\n    resize() {\n        if (!this.autoSize) {\n            return;\n        }\n        const element = this.element.nativeElement;\n        this.renderer.setStyle(element, 'overflow-y', 'hidden');\n        element.style.height = `${this.initialHeight}px`;\n        const scrollHeight = element.scrollHeight;\n        if (scrollHeight > this.initialHeight) {\n            element.style.height = `${scrollHeight}px`;\n        }\n    }\n    handleInput() {\n        const value = this.elementValue;\n        this.value = value;\n        if (this.control || hasObservers(this.onValueChange) || hasObservers(this.valueChange)) {\n            this.zone.run(() => {\n                this.ngChange(value);\n                this.onValueChange.emit(value);\n                this.valueChange.emit(value);\n                this.changeDetector.markForCheck();\n            });\n        }\n        this.resize();\n    }\n    handleFocus() {\n        if (hasObservers(this.onFocus)) {\n            this.zone.run(() => {\n                this.onFocus.emit();\n            });\n        }\n    }\n    handleBlur() {\n        if (hasObservers(this.onBlur) || requiresZoneOnBlur(this.control)) {\n            this.zone.run(() => {\n                this.ngTouched();\n                this.onBlur.emit();\n                this.changeDetector.markForCheck();\n            });\n        }\n    }\n}\nTextAreaDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextAreaDirective, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.Injector }, { token: RTL, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nTextAreaDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TextAreaDirective, selector: \"textarea[kendoTextArea]\", inputs: { autoSize: \"autoSize\", value: \"value\" }, outputs: { valueChange: \"valueChange\" }, host: { properties: { \"class.k-textarea\": \"this.elementClasses\", \"class.k-input\": \"this.elementClasses\", \"class.k-input-md\": \"this.elementClasses\", \"class.k-rounded-md\": \"this.elementClasses\", \"class.k-input-solid\": \"this.elementClasses\", \"class.k-autofill\": \"this.autofillClass\", \"attr.dir\": \"this.direction\" } }, providers: [{\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TextAreaDirective),\n            multi: true\n        }, {\n            provide: KendoInput,\n            useExisting: forwardRef(() => TextAreaDirective)\n        }], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextAreaDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    providers: [{\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => TextAreaDirective),\n                            multi: true\n                        }, {\n                            provide: KendoInput,\n                            useExisting: forwardRef(() => TextAreaDirective)\n                        }],\n                    selector: 'textarea[kendoTextArea]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.Injector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [RTL]\n                }] }]; }, propDecorators: { elementClasses: [{\n                type: HostBinding,\n                args: ['class.k-textarea']\n            }, {\n                type: HostBinding,\n                args: ['class.k-input']\n            }, {\n                type: HostBinding,\n                args: ['class.k-input-md']\n            }, {\n                type: HostBinding,\n                args: ['class.k-rounded-md']\n            }, {\n                type: HostBinding,\n                args: ['class.k-input-solid']\n            }], autofillClass: [{\n                type: HostBinding,\n                args: ['class.k-autofill']\n            }], direction: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], valueChange: [{\n                type: Output\n            }], autoSize: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nconst createMaxValidator = (maxValue) => {\n    return (c) => {\n        if (!isPresent(maxValue) || !isPresent(c.value) || c.value <= maxValue) {\n            return null;\n        }\n        return {\n            maxError: {\n                maxValue: maxValue,\n                value: c.value\n            }\n        };\n    };\n};\n\n/**\n * @hidden\n */\nconst createMinValidator = (minValue) => {\n    return (c) => {\n        if (!isPresent(minValue) || !isPresent(c.value) || c.value >= minValue) {\n            return null;\n        }\n        return {\n            minError: {\n                minValue: minValue,\n                value: c.value\n            }\n        };\n    };\n};\n\n/**\n * @hidden\n */\nconst MIN_DOC_LINK = 'http://www.telerik.com/kendo-angular-ui/components/inputs/api/NumericTextBoxComponent/#toc-min';\n/**\n * @hidden\n */\nconst MAX_DOC_LINK = 'http://www.telerik.com/kendo-angular-ui/components/inputs/api/NumericTextBoxComponent/#toc-max';\n/**\n * @hidden\n */\nconst POINT = \".\";\n/**\n * @hidden\n */\nconst INITIAL_SPIN_DELAY = 500;\n/**\n * @hidden\n */\nconst SPIN_DELAY = 50;\n/**\n * @hidden\n */\nconst EXPONENT_REGEX = /[eE][\\-+]?([0-9]+)/;\n\n/**\n * @hidden\n */\nconst numericRegex = (options) => {\n    const { autoCorrect, decimals, min } = options;\n    let separator = options.separator;\n    if (separator === POINT) {\n        separator = '\\\\' + separator;\n    }\n    const signPattern = autoCorrect && min !== null && min >= 0 ? '' : '-?';\n    let numberPattern;\n    if (decimals === 0) {\n        numberPattern = '\\\\d*';\n    }\n    else {\n        numberPattern = `(?:(?:\\\\d+(${separator}\\\\d*)?)|(?:${separator}\\\\d*))?`;\n    }\n    return new RegExp(`^${signPattern}${numberPattern}$`);\n};\n/**\n * @hidden\n */\nconst decimalPart = (value) => {\n    return value >= 0 ? Math.floor(value) : Math.ceil(value);\n};\n/**\n * @hidden\n */\nconst noop$1 = (_) => { }; // eslint-disable-line no-empty\n/**\n * @hidden\n */\nconst defined = (value) => {\n    return typeof value !== 'undefined';\n};\n/**\n * @hidden\n */\nconst isNumber = (value) => {\n    return !isNaN(value) && value !== null;\n};\n/**\n * @hidden\n */\nfunction pad(value, digits) {\n    const count = digits - String(value).length;\n    let result = value;\n    if (count > 0) {\n        const padString = new Array(count + 1).join(\"0\");\n        result = parseFloat(value + padString);\n    }\n    return result;\n}\n/**\n * @hidden\n */\nconst getDeltaFromMouseWheel = (e) => {\n    let delta = 0;\n    if (e.wheelDelta) {\n        delta = e.wheelDelta / 120;\n        delta = delta > 0 ? Math.ceil(delta) : Math.floor(delta);\n    }\n    else if (e.detail) {\n        delta = Math.round(-e.detail / 3);\n    }\n    return delta;\n};\n/**\n * @hidden\n */\nconst getCaretPosition = (element) => element.selectionStart;\n/**\n * @hidden\n */\nconst extractSignificantNumericChars = (formattedString, separator) => {\n    const significantCharacters = `${separator}0123456789-`;\n    return formattedString.split('').reduce((acc, curr) => significantCharacters.includes(curr) ? ++acc : acc, 0);\n};\n/**\n * @hidden\n */\nconst isRightClick = (event) => {\n    const isRightClickIE = event.button && event.button === 2;\n    const isRightClickOther = event.which && event.which === 3;\n    return isRightClickIE || isRightClickOther;\n};\n\n/**\n * @hidden\n */\nvar ArrowDirection;\n(function (ArrowDirection) {\n    ArrowDirection[ArrowDirection[\"Down\"] = -1] = \"Down\";\n    ArrowDirection[ArrowDirection[\"None\"] = 0] = \"None\";\n    ArrowDirection[ArrowDirection[\"Up\"] = 1] = \"Up\";\n})(ArrowDirection || (ArrowDirection = {}));\n\n/**\n * @hidden\n */\nclass NumericTextBoxMessages extends ComponentMessages {\n}\nNumericTextBoxMessages.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NumericTextBoxMessages, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nNumericTextBoxMessages.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: NumericTextBoxMessages, selector: \"kendo-numerictextbox-messages-base\", inputs: { decrement: \"decrement\", increment: \"increment\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NumericTextBoxMessages, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: 'kendo-numerictextbox-messages-base'\n                }]\n        }], propDecorators: { decrement: [{\n                type: Input\n            }], increment: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass LocalizedNumericTextBoxMessagesDirective extends NumericTextBoxMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nLocalizedNumericTextBoxMessagesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalizedNumericTextBoxMessagesDirective, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Directive });\nLocalizedNumericTextBoxMessagesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LocalizedNumericTextBoxMessagesDirective, selector: \"[kendoNumericTextBoxLocalizedMessages]\", providers: [\n        {\n            provide: NumericTextBoxMessages,\n            useExisting: forwardRef(() => LocalizedNumericTextBoxMessagesDirective)\n        }\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalizedNumericTextBoxMessagesDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    providers: [\n                        {\n                            provide: NumericTextBoxMessages,\n                            useExisting: forwardRef(() => LocalizedNumericTextBoxMessagesDirective)\n                        }\n                    ],\n                    selector: '[kendoNumericTextBoxLocalizedMessages]'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\nconst PARSABLE_OPTIONS = ['min', 'max', 'step', 'decimals'];\nconst PARSABLE_DEFAULTS = {\n    decimals: null,\n    max: null,\n    min: null,\n    step: 1\n};\nconst FOCUSED$3 = 'k-focus';\nconst DEFAULT_SIZE$7 = 'medium';\nconst DEFAULT_ROUNDED$6 = 'medium';\nconst DEFAULT_FILL_MODE$5 = 'solid';\n/**\n * Represents the [Kendo UI NumericTextBox component for Angular]({% slug overview_numerictextbox %}).\n */\nclass NumericTextBoxComponent {\n    constructor(intl, renderer, localizationService, injector, ngZone, changeDetector, hostElement) {\n        this.intl = intl;\n        this.renderer = renderer;\n        this.localizationService = localizationService;\n        this.injector = injector;\n        this.ngZone = ngZone;\n        this.changeDetector = changeDetector;\n        this.hostElement = hostElement;\n        /**\n         * @hidden\n         */\n        this.focusableId = `k-${guid()}`;\n        /**\n         * Determines whether the NumericTextBox is disabled ([see example]({% slug disabled_numerictextbox %})).\n         */\n        this.disabled = false;\n        /**\n         * Determines whether the NumericTextBox is in its read-only state ([see example]({% slug readonly_numerictextbox %})).\n         */\n        this.readonly = false;\n        /**\n         * Sets the title of the `input` element of the NumericTextBox.\n         */\n        this.title = '';\n        /**\n         * Specifies whether the value will be auto-corrected based on the minimum and maximum values\n         * ([see example]({% slug precision_numerictextbox %})).\n         */\n        this.autoCorrect = false;\n        /**\n         * Specifies the number of decimals that the user can enter when the input is focused\n         * ([see example]({% slug precision_numerictextbox %})).\n         */\n        this.decimals = null;\n        /**\n         * Specifies the value that is used to increment or decrement the component value\n         * ([see example]({% slug predefinedsteps_numerictextbox %})).\n         */\n        this.step = 1;\n        /**\n         * Specifies whether the **Up** and **Down** spin buttons will be rendered\n         * ([see example]({% slug spinbuttons_numerictextbox %})).\n         */\n        this.spinners = true;\n        /**\n         * Determines whether the built-in minimum or maximum validators are enforced when a form is validated.\n         *\n         * > The 4.2.0 Angular version introduces the `min` and `max` validation directives. As a result, even if you set `rangeValidation`\n         * to `false`, the built-in Angular validators will be executed.\n         */\n        this.rangeValidation = true;\n        /**\n         * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n         */\n        this.tabindex = 0;\n        /**\n         * Determines whether the value of the NumericTextBox will be changed via scrolling. Defaults to `true`.\n         *\n         * @default true\n         */\n        this.changeValueOnScroll = true;\n        /**\n         * Determines whether the whole value will be selected when the NumericTextBox is clicked. Defaults to `true`.\n         */\n        this.selectOnFocus = true;\n        /**\n         * Specifies the value of the NumericTextBox\n         * ([see example]({% slug formats_numerictextbox %})).\n         */\n        this.value = null;\n        /**\n         * Fires each time the user selects a new value ([see example]({% slug overview_numerictextbox %}#toc-events)).\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires each time the user focuses the `input` element ([see example]({% slug overview_numerictextbox %}#toc-events)).\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * Fires each time the `input` element gets blurred ([see example]({% slug overview_numerictextbox %}#toc-events)).\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.ArrowDirection = ArrowDirection;\n        /**\n         * @hidden\n         */\n        this.arrowDirection = ArrowDirection.None;\n        this.hostClasses = true;\n        this.inputValue = '';\n        this.minValidateFn = noop$1;\n        this.maxValidateFn = noop$1;\n        this._format = \"n2\";\n        this.isPasted = false;\n        this.mouseDown = false;\n        this._size = 'medium';\n        this._rounded = 'medium';\n        this._fillMode = 'solid';\n        this.ngChange = noop$1;\n        this.ngTouched = noop$1;\n        this.ngValidatorChange = noop$1;\n        this.domEvents = [];\n        /**\n         * @hidden\n         */\n        this.increasePress = (e) => {\n            this.arrowPress(ArrowDirection.Up, e);\n        };\n        /**\n         * @hidden\n         */\n        this.decreasePress = (e) => {\n            this.arrowPress(ArrowDirection.Down, e);\n        };\n        /**\n         * @hidden\n         */\n        this.releaseArrow = () => {\n            clearTimeout(this.spinTimeout);\n            if (this.arrowDirection !== ArrowDirection.None) {\n                this.arrowDirection = ArrowDirection.None;\n                this.changeDetector.detectChanges();\n            }\n        };\n        /**\n         * @hidden\n         */\n        this.handlePaste = () => {\n            this.isPasted = true;\n        };\n        /**\n         * @hidden\n         */\n        this.handleInput = () => {\n            const input = this.numericInput.nativeElement;\n            let { selectionStart, selectionEnd, value: inputValue } = input;\n            if (this.pressedKey === Keys.NumpadDecimal) {\n                inputValue = this.replaceNumpadDotValue();\n            }\n            if (this.isPasted) {\n                inputValue = this.formatInputValue(this.intl.parseNumber(inputValue));\n            }\n            if (!this.isValid(inputValue)) {\n                input.value = this.inputValue;\n                this.setSelection(selectionStart - 1, selectionEnd - 1);\n                return;\n            }\n            const parsedValue = this.intl.parseNumber(inputValue);\n            let value = this.restrictDecimals(parsedValue);\n            if (this.autoCorrect) {\n                const limited = this.limitInputValue(value);\n                value = limited.value;\n                selectionStart = limited.selectionStart;\n                selectionEnd = limited.selectionEnd;\n            }\n            if (parsedValue !== value || this.hasTrailingZeros(inputValue) || !this.focused) {\n                this.setInputValue(value);\n                this.setSelection(selectionStart, selectionEnd);\n            }\n            else {\n                this.inputValue = inputValue;\n            }\n            if (this.isPasted) {\n                input.value = this.inputValue;\n            }\n            this.updateValue(value);\n            this.previousSelection = null;\n            this.isPasted = false;\n        };\n        /**\n         * @hidden\n         */\n        this.handleDragEnter = () => {\n            if (!this.focused && !this.isDisabled) {\n                this.setInputValue(this.value, true);\n            }\n        };\n        /**\n         * @hidden\n         */\n        this.handleMouseDown = () => {\n            this.mouseDown = true;\n        };\n        /**\n         * @hidden\n         */\n        this.handleFocus = () => {\n            if (!this.focused) {\n                this.focused = true;\n                if (!this.isDisabled) {\n                    const shouldSelectAll = this.selectOnFocus || !this.mouseDown;\n                    this.ngZone.runOutsideAngular(() => {\n                        setTimeout(() => {\n                            if (shouldSelectAll) {\n                                this.selectAll();\n                            }\n                            else {\n                                this.selectCaret();\n                            }\n                        }, 0);\n                    });\n                }\n            }\n            this.mouseDown = false;\n            if (hasObservers(this.onFocus)) {\n                this.ngZone.run(() => {\n                    this.onFocus.emit();\n                });\n            }\n        };\n        /**\n         * @hidden\n         */\n        this.handleBlur = () => {\n            this.changeDetector.markForCheck();\n            this.focused = false;\n            //blur is thrown before input when dragging the input text in IE\n            if (this.inputValue !== this.elementValue) {\n                this.handleInput();\n            }\n            this.setInputValue();\n            if (hasObservers(this.onBlur) || requiresZoneOnBlur(this.control)) {\n                this.ngZone.run(() => {\n                    this.ngTouched();\n                    this.onBlur.emit();\n                });\n            }\n        };\n        /**\n         * @hidden\n         */\n        this.handleKeyDown = (e) => {\n            if (this.isDisabled) {\n                return;\n            }\n            let step;\n            if (e.keyCode === Keys.ArrowDown) {\n                step = -1;\n            }\n            else if (e.keyCode === Keys.ArrowUp) {\n                step = 1;\n            }\n            if (step && this.step) {\n                e.preventDefault();\n                this.addStep(step);\n            }\n            const input = this.numericInput.nativeElement;\n            this.previousSelection = {\n                end: input.selectionEnd,\n                start: input.selectionStart\n            };\n            this.pressedKey = e.keyCode;\n        };\n        /**\n         * @hidden\n         */\n        this.handleWheel = (e) => {\n            if (this.focused && !this.isDisabled && this.changeValueOnScroll) {\n                e.preventDefault();\n                const delta = getDeltaFromMouseWheel(e);\n                this.addStep(delta);\n            }\n        };\n        validatePackage(packageMetadata);\n        this.direction = localizationService.rtl ? 'rtl' : 'ltr';\n    }\n    /**\n     * Specifies the number format which is used when the NumericTextBox is not focused\n     * ([see example]({% slug formats_numerictextbox %})).\n     * If `format` is set to `null` or `undefined`, the default format will be used.\n     */\n    get format() {\n        const format = this._format;\n        return format !== null && format !== undefined ? format : 'n2';\n    }\n    set format(value) {\n        this._format = value;\n    }\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n        this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n        return this.tabindex;\n    }\n    /**\n     * The size property specifies padding of the NumericTextBox internal input element\n     * ([see example]({% slug appearance_numerictextbox %}#toc-size)).\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     */\n    set size(size) {\n        const newSize = size ? size : DEFAULT_SIZE$7;\n        this.handleClasses(newSize, 'size');\n        this._size = newSize;\n    }\n    get size() {\n        return this._size;\n    }\n    /**\n     * The rounded property specifies the border radius of the NumericTextBox\n     * ([see example]({% slug appearance_numerictextbox %}#toc-rounded)).\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     */\n    set rounded(rounded) {\n        const newRounded = rounded ? rounded : DEFAULT_ROUNDED$6;\n        this.handleClasses(newRounded, 'rounded');\n        this._rounded = newRounded;\n    }\n    get rounded() {\n        return this._rounded;\n    }\n    /**\n     * The fillMode property specifies the background and border styles of the NumericTextBox\n     * ([see example]({% slug appearance_numerictextbox %}#toc-fillMode)).\n     * The possible values are:\n     * * `flat`\n     * * `solid` (default)\n     * * `outline`\n     * * `none`\n     */\n    set fillMode(fillMode) {\n        const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$5;\n        this.handleClasses(newFillMode, 'fillMode');\n        this._fillMode = newFillMode;\n    }\n    get fillMode() {\n        return this._fillMode;\n    }\n    get disableClass() {\n        return this.disabled;\n    }\n    ngOnInit() {\n        this.subscriptions = this.localizationService\n            .changes\n            .subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n        });\n        this.subscriptions.add(this.intl.changes.subscribe(this.intlChange.bind(this)));\n        if (this.hostElement) {\n            this.renderer.removeAttribute(this.hostElement.nativeElement, \"tabindex\");\n        }\n        this.control = this.injector.get(NgControl, null);\n        this.ngZone.runOutsideAngular(() => {\n            this.domEvents.push(this.renderer.listen(this.hostElement.nativeElement, 'mousewheel', this.handleWheel.bind(this)));\n            this.domEvents.push(this.renderer.listen(this.hostElement.nativeElement, 'DOMMouseScroll', this.handleWheel.bind(this)));\n        });\n    }\n    ngAfterViewInit() {\n        const stylingInputs = ['size', 'rounded', 'fillMode'];\n        stylingInputs.forEach(input => {\n            this.handleClasses(this[input], input);\n        });\n    }\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes) {\n        if (anyChanged(PARSABLE_OPTIONS, changes, false)) {\n            this.parseOptions(PARSABLE_OPTIONS.filter(option => changes[option]));\n        }\n        this.verifySettings();\n        if (anyChanged(['min', 'max', 'rangeValidation'], changes, false)) {\n            this.minValidateFn = this.rangeValidation ? createMinValidator(this.min) : noop$1;\n            this.maxValidateFn = this.rangeValidation ? createMaxValidator(this.max) : noop$1;\n            this.ngValidatorChange();\n        }\n        if (anyChanged(['autoCorrect', 'decimals', 'min'], changes)) {\n            delete this.numericRegex;\n        }\n        if (anyChanged(['value', 'format'], changes, false)) {\n            this.verifyValue(this.value);\n            this.value = this.restrictModelValue(this.value);\n            if (!this.focused || (this.intl.parseNumber(this.elementValue) !== this.value)) {\n                this.setInputValue();\n            }\n        }\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n        clearTimeout(this.spinTimeout);\n        this.domEvents.forEach(unbindHandler => unbindHandler());\n    }\n    /**\n     * @hidden\n     */\n    validate(control) {\n        return this.minValidateFn(control) || this.maxValidateFn(control);\n    }\n    /**\n     * @hidden\n     */\n    registerOnValidatorChange(fn) {\n        this.ngValidatorChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.verifyValue(value);\n        let restrictedValue = this.restrictModelValue(value);\n        this.value = restrictedValue;\n        this.setInputValue();\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.ngChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.ngTouched = fn;\n    }\n    /**\n     * @hidden\n     * Called when the status of the component changes to or from `disabled`.\n     * Depending on the value, it enables or disables the appropriate DOM element.\n     *\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.changeDetector.markForCheck();\n        this.disabled = isDisabled;\n    }\n    /**\n     * Focuses the NumericTextBox.\n     *\n     * @example\n     * ```ts-no-run\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"numerictextbox.focus()\">Focus NumericTextBox</button>\n     *  <kendo-numerictextbox #numerictextbox></kendo-numerictextbox>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n    focus() {\n        invokeElementMethod(this.numericInput, 'focus');\n    }\n    /**\n     * Blurs the NumericTextBox.\n     */\n    blur() {\n        invokeElementMethod(this.numericInput, 'blur');\n    }\n    /**\n     * Notifies the `NumericTextBoxComponent` that the input value should be changed.\n     * Can be used to update the input after setting the component properties directly.\n     */\n    notifyValueChange() {\n        this.setInputValue();\n    }\n    /**\n     * @hidden\n     */\n    get incrementTitle() {\n        return this.localizationService.get('increment');\n    }\n    /**\n     * @hidden\n     */\n    get decrementTitle() {\n        return this.localizationService.get('decrement');\n    }\n    /**\n     * @hidden\n     */\n    get isControlInvalid() {\n        return this.control && this.control.touched && !this.control.valid;\n    }\n    get decimalSeparator() {\n        const numberSymbols = this.intl.numberSymbols();\n        return numberSymbols.decimal;\n    }\n    get elementValue() {\n        return this.numericInput.nativeElement.value;\n    }\n    set elementValue(value) {\n        this.renderer.setProperty(this.numericInput.nativeElement, 'value', value);\n    }\n    get focused() {\n        return this.isFocused;\n    }\n    get hasDecimals() {\n        return this.decimals !== null && this.decimals >= 0;\n    }\n    set focused(value) {\n        if (this.isFocused !== value && this.hostElement) {\n            const wrap = this.hostElement.nativeElement;\n            if (value) {\n                this.renderer.addClass(wrap, FOCUSED$3);\n            }\n            else {\n                this.renderer.removeClass(wrap, FOCUSED$3);\n            }\n            this.isFocused = value;\n        }\n    }\n    get isDisabled() {\n        return this.disabled || this.readonly;\n    }\n    arrowPress(direction, e) {\n        e.preventDefault();\n        if (this.isDisabled || isRightClick(e)) {\n            return;\n        }\n        if (!mobileOS) {\n            this.focused = true;\n            this.focus();\n        }\n        if (this.arrowDirection !== direction) {\n            this.arrowDirection = direction;\n            this.changeDetector.detectChanges();\n        }\n        if (this.step) {\n            this.spin(direction, INITIAL_SPIN_DELAY);\n        }\n        else {\n            this.setInputValue();\n        }\n    }\n    updateValue(value) {\n        if (!areSame(this.value, value)) {\n            this.ngZone.run(() => {\n                this.value = value;\n                this.ngChange(value);\n                this.valueChange.emit(value);\n                this.changeDetector.markForCheck();\n            });\n        }\n    }\n    replaceNumpadDotValue() {\n        let value = this.inputValue || \"\";\n        if (this.previousSelection) {\n            const input = this.numericInput.nativeElement;\n            const { selectionStart, selectionEnd } = input;\n            const { start, end } = this.previousSelection;\n            input.value = value = value.substring(0, start) + this.decimalSeparator + value.substring(end);\n            this.setSelection(selectionStart, selectionEnd);\n        }\n        return value;\n    }\n    isValid(value) {\n        if (!this.numericRegex) {\n            this.numericRegex = numericRegex({\n                autoCorrect: this.autoCorrect,\n                decimals: this.decimals,\n                min: this.min,\n                separator: this.decimalSeparator\n            });\n        }\n        return this.numericRegex.test(value);\n    }\n    spin(step, timeout) {\n        clearTimeout(this.spinTimeout);\n        this.spinTimeout = window.setTimeout(() => {\n            this.spin(step, SPIN_DELAY);\n        }, timeout);\n        this.addStep(step);\n    }\n    addStep(step) {\n        let value = add(this.value || 0, this.step * step);\n        value = this.limitValue(value);\n        value = this.restrictDecimals(value);\n        this.setInputValue(value);\n        this.updateValue(value);\n    }\n    setSelection(start, end) {\n        if (this.focused) {\n            invokeElementMethod(this.numericInput, 'setSelectionRange', start, end);\n        }\n    }\n    limitValue(value) {\n        let result = value;\n        if (!this.isInRange(value)) {\n            if (isNumber(this.max) && value > this.max) {\n                result = this.max;\n            }\n            if (isNumber(this.min) && value < this.min) {\n                result = this.min;\n            }\n        }\n        return result;\n    }\n    limitInputValue(value) {\n        let { selectionStart, selectionEnd, value: enteredValue } = this.numericInput.nativeElement;\n        let limitedValue = value;\n        let selectToEnd = false;\n        if (!this.isInRange(value)) {\n            const lengthChange = enteredValue.length - String(this.inputValue).length;\n            const { min, max } = this;\n            const hasMax = isNumber(max);\n            const hasMin = isNumber(min);\n            let padLimit, replaceNext;\n            let correctedValue = value;\n            if (selectionStart === 0 && this.inputValue.substr(1) === enteredValue) {\n                return {\n                    selectionEnd: selectionEnd,\n                    selectionStart: selectionStart,\n                    value: null\n                };\n            }\n            if (hasMax && value > max) {\n                if (value > 0) {\n                    replaceNext = true;\n                }\n                else {\n                    padLimit = max;\n                }\n            }\n            else if (hasMin && value < min) {\n                if (value > 0) {\n                    padLimit = min;\n                }\n                else {\n                    replaceNext = true;\n                }\n            }\n            if (padLimit) {\n                const paddedValue = this.tryPadValue(value, padLimit);\n                if (paddedValue && decimalPart(value) !== decimalPart(padLimit)) {\n                    correctedValue = paddedValue;\n                    selectToEnd = true;\n                }\n            }\n            else if (replaceNext) {\n                if (this.inputValue && selectionStart !== enteredValue.length) {\n                    correctedValue = parseFloat(enteredValue.substr(0, selectionStart) +\n                        enteredValue.substr(selectionStart + lengthChange));\n                }\n            }\n            limitedValue = this.limitValue(correctedValue);\n            selectToEnd = (selectToEnd || limitedValue !== correctedValue) && this.previousSelection &&\n                (this.previousSelection.end - this.previousSelection.start + lengthChange) > 0;\n        }\n        return {\n            selectionEnd: selectToEnd ? String(limitedValue).length : selectionEnd,\n            selectionStart: selectionStart,\n            value: limitedValue\n        };\n    }\n    tryPadValue(value, limit) {\n        const limitLength = String(Math.floor(limit)).length;\n        const zeroPadded = pad(value, limitLength);\n        const zeroPaddedNext = pad(value, limitLength + 1);\n        let result;\n        if (this.isInRange(zeroPadded)) {\n            result = zeroPadded;\n        }\n        else if (this.isInRange(zeroPaddedNext)) {\n            result = zeroPaddedNext;\n        }\n        return result;\n    }\n    isInRange(value) {\n        return !isNumber(value) || ((!isNumber(this.min) || this.min <= value) && (!isNumber(this.max) || value <= this.max));\n    }\n    restrictModelValue(value) {\n        let result = this.restrictDecimals(value, true);\n        if (this.autoCorrect && this.limitValue(result) !== result) {\n            result = null;\n        }\n        return result;\n    }\n    restrictDecimals(value, round) {\n        let result = value;\n        if (value && this.hasDecimals) {\n            const decimals = this.decimals;\n            const stringValue = String(value);\n            if (round || EXPONENT_REGEX.test(stringValue)) {\n                result = toFixedPrecision(value, decimals);\n            }\n            else {\n                const parts = stringValue.split(POINT);\n                let fraction = parts[1];\n                if (fraction && fraction.length > decimals) {\n                    fraction = fraction.substr(0, decimals);\n                    result = parseFloat(`${parts[0]}${POINT}${fraction}`);\n                }\n            }\n        }\n        return result;\n    }\n    formatInputValue(value) {\n        let stringValue = Object.is(value, -0) ? '-0' : String(value);\n        const exponentMatch = EXPONENT_REGEX.exec(stringValue);\n        if (exponentMatch) {\n            stringValue = value.toFixed(limitPrecision(parseInt(exponentMatch[1], 10)));\n        }\n        return stringValue.replace(POINT, this.decimalSeparator);\n    }\n    formatValue(value, focused) {\n        let formattedValue;\n        if (value === null || !defined(value) || value === '') {\n            formattedValue = '';\n        }\n        else if (focused && !this.readonly) {\n            formattedValue = this.formatInputValue(value);\n        }\n        else {\n            formattedValue = this.intl.formatNumber(value, this.format);\n        }\n        return formattedValue;\n    }\n    setInputValue(value = this.value, focused = this.focused) {\n        const formattedValue = this.formatValue(value, focused);\n        this.elementValue = formattedValue;\n        this.inputValue = formattedValue;\n    }\n    verifySettings() {\n        if (!isDevMode()) {\n            return;\n        }\n        if (this.min !== null && this.max !== null && this.min > this.max) {\n            throw new Error(`The max value should be bigger than the min. See ${MIN_DOC_LINK} and ${MAX_DOC_LINK}.`);\n        }\n    }\n    verifyValue(value) {\n        if (isDevMode() && value && typeof value !== 'number') {\n            throw new Error(`The NumericTextBox component requires value of type Number and ${JSON.stringify(value)} was set.`);\n        }\n    }\n    parseOptions(options) {\n        for (let idx = 0; idx < options.length; idx++) {\n            const name = options[idx];\n            const value = this[name];\n            if (typeof value === 'string') {\n                const parsed = parseFloat(value);\n                const valid = !isNaN(parsed);\n                if (isDevMode() && !valid && value !== '') {\n                    throw new Error('The NumericTextBox component requires value of type Number or a String representing ' +\n                        `a number for the ${name} property and ${JSON.stringify(value)} was set.`);\n                }\n                this[name] = valid ? parsed : PARSABLE_DEFAULTS[name];\n            }\n        }\n    }\n    intlChange() {\n        delete this.numericRegex;\n        if (this.numericInput && (!this.focused || !this.isValid(this.elementValue))) {\n            this.setInputValue();\n        }\n    }\n    hasTrailingZeros(inputValue) {\n        if (this.hasDecimals && this.focused) {\n            const fraction = inputValue.split(this.decimalSeparator)[1];\n            return fraction && fraction.length > this.decimals && fraction.lastIndexOf('0') === fraction.length - 1;\n        }\n    }\n    selectAll() {\n        this.setInputValue();\n        this.setSelection(0, this.inputValue.length);\n    }\n    selectCaret() {\n        const caretPosition = getCaretPosition(this.numericInput.nativeElement);\n        const formattedValue = this.elementValue;\n        const partialValue = formattedValue.substring(0, caretPosition);\n        this.setInputValue();\n        if (partialValue.length) {\n            const significantCharsInFormattedValue = extractSignificantNumericChars(partialValue, this.decimalSeparator);\n            const adjustedSignificantChars = this.adjustSignificantChars(formattedValue, significantCharsInFormattedValue);\n            this.setSelection(adjustedSignificantChars, adjustedSignificantChars);\n        }\n        else {\n            this.setSelection(0, 0);\n        }\n    }\n    numberOfLeadingZeroes(formattedValue) {\n        const separatorIndex = formattedValue.indexOf(this.decimalSeparator);\n        const matchedLeadingZeroes = formattedValue.match(/^[^1-9]*?(0+)/);\n        if (matchedLeadingZeroes) {\n            const lengthOfMatch = matchedLeadingZeroes[0].length;\n            const lengthOfLeadingZeroesMatch = matchedLeadingZeroes[1].length;\n            return lengthOfMatch === separatorIndex ? lengthOfLeadingZeroesMatch - 1 : lengthOfLeadingZeroesMatch;\n        }\n        return 0;\n    }\n    adjustSignificantChars(formattedValue, significantChars) {\n        const leadingZeroes = this.numberOfLeadingZeroes(formattedValue);\n        if (leadingZeroes > 0) {\n            return Math.max(0, significantChars - leadingZeroes);\n        }\n        return significantChars;\n    }\n    handleClasses(value, input) {\n        const elem = this.hostElement.nativeElement;\n        const classes = getStylingClasses('input', input, this[input], value);\n        if (classes.toRemove) {\n            this.renderer.removeClass(elem, classes.toRemove);\n        }\n        if (classes.toAdd) {\n            this.renderer.addClass(elem, classes.toAdd);\n        }\n    }\n}\nNumericTextBoxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NumericTextBoxComponent, deps: [{ token: i1$2.IntlService }, { token: i0.Renderer2 }, { token: i1.LocalizationService }, { token: i0.Injector }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nNumericTextBoxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: NumericTextBoxComponent, selector: \"kendo-numerictextbox\", inputs: { focusableId: \"focusableId\", disabled: \"disabled\", readonly: \"readonly\", title: \"title\", autoCorrect: \"autoCorrect\", format: \"format\", max: \"max\", min: \"min\", decimals: \"decimals\", placeholder: \"placeholder\", step: \"step\", spinners: \"spinners\", rangeValidation: \"rangeValidation\", tabindex: \"tabindex\", tabIndex: \"tabIndex\", changeValueOnScroll: \"changeValueOnScroll\", selectOnFocus: \"selectOnFocus\", value: \"value\", maxlength: \"maxlength\", size: \"size\", rounded: \"rounded\", fillMode: \"fillMode\" }, outputs: { valueChange: \"valueChange\", onFocus: \"focus\", onBlur: \"blur\" }, host: { properties: { \"attr.dir\": \"this.direction\", \"class.k-disabled\": \"this.disableClass\", \"class.k-input\": \"this.hostClasses\", \"class.k-numerictextbox\": \"this.hostClasses\" } }, providers: [\n        LocalizationService,\n        { provide: L10N_PREFIX, useValue: 'kendo.numerictextbox' },\n        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NumericTextBoxComponent), multi: true },\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => NumericTextBoxComponent), multi: true },\n        { provide: KendoInput, useExisting: forwardRef(() => NumericTextBoxComponent) }\n    ], viewQueries: [{ propertyName: \"numericInput\", first: true, predicate: [\"numericInput\"], descendants: true, static: true }], exportAs: [\"kendoNumericTextBox\"], usesOnChanges: true, ngImport: i0, template: `\n        <ng-container kendoNumericTextBoxLocalizedMessages\n            i18n-increment=\"kendo.numerictextbox.increment|The title for the **Increment** button in the NumericTextBox\"\n            increment=\"Increase value\"\n            i18n-decrement=\"kendo.numerictextbox.decrement|The title for the **Decrement** button in the NumericTextBox\"\n            decrement=\"Decrease value\"\n        >\n        </ng-container>\n            <input\n                role=\"spinbutton\"\n                class=\"k-input-inner\"\n                autocomplete=\"off\"\n                autocorrect=\"off\"\n                [id]=\"focusableId\"\n                [attr.aria-valuemin]=\"min\"\n                [attr.aria-valuemax]=\"max\"\n                [attr.aria-valuenow]=\"value\"\n                [attr.title]=\"title\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.maxLength]=\"maxlength\"\n                [attr.aria-invalid]=\"isControlInvalid\"\n                [tabindex]=\"tabIndex\"\n                [disabled]=\"disabled\"\n                [readonly]=\"readonly\"\n                [kendoEventsOutsideAngular]=\"{\n                    mousedown: handleMouseDown,\n                    dragenter: handleDragEnter,\n                    keydown: handleKeyDown,\n                    input: handleInput,\n                    focus: handleFocus,\n                    blur: handleBlur,\n                    paste: handlePaste\n                }\"\n                #numericInput />\n            <span\n                class=\"k-input-spinner k-spin-button\" *ngIf=\"spinners\"\n                [kendoEventsOutsideAngular]=\"{ mouseup: releaseArrow, mouseleave: releaseArrow }\"\n            >\n               <button\n                    type=\"button\"\n                    [kendoEventsOutsideAngular]=\"{ mousedown: increasePress }\"\n                    [attr.aria-hidden]=\"true\"\n                    [attr.aria-label]=\"incrementTitle\"\n                    [title]=\"incrementTitle\"\n                    [class.k-active]=\"arrowDirection === ArrowDirection.Up\"\n                    class=\"k-spinner-increase k-button k-icon-button k-button-solid k-button-solid-base\"\n                    tabindex=\"-1\"\n                >\n                    <span class=\"k-button-icon k-icon k-i-caret-alt-up\"></span>\n               </button>\n               <button\n                    type=\"button\"\n                    [kendoEventsOutsideAngular]=\"{ mousedown: decreasePress }\"\n                    [attr.aria-hidden]=\"true\"\n                    [attr.aria-label]=\"decrementTitle\"\n                    [title]=\"decrementTitle\"\n                    [class.k-active]=\"arrowDirection === ArrowDirection.Down\"\n                    class=\"k-spinner-decrease k-button k-icon-button k-button-solid k-button-solid-base\"\n                    tabindex=\"-1\"\n               >\n                    <span class=\"k-button-icon k-icon k-i-caret-alt-down\"></span>\n               </button>\n            </span>\n      `, isInline: true, directives: [{ type: LocalizedNumericTextBoxMessagesDirective, selector: \"[kendoNumericTextBoxLocalizedMessages]\" }, { type: i3.EventsOutsideAngularDirective, selector: \"[kendoEventsOutsideAngular]\", inputs: [\"kendoEventsOutsideAngular\", \"scope\"] }, { type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NumericTextBoxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoNumericTextBox',\n                    providers: [\n                        LocalizationService,\n                        { provide: L10N_PREFIX, useValue: 'kendo.numerictextbox' },\n                        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NumericTextBoxComponent), multi: true },\n                        { provide: NG_VALIDATORS, useExisting: forwardRef(() => NumericTextBoxComponent), multi: true },\n                        { provide: KendoInput, useExisting: forwardRef(() => NumericTextBoxComponent) }\n                    ],\n                    selector: 'kendo-numerictextbox',\n                    template: `\n        <ng-container kendoNumericTextBoxLocalizedMessages\n            i18n-increment=\"kendo.numerictextbox.increment|The title for the **Increment** button in the NumericTextBox\"\n            increment=\"Increase value\"\n            i18n-decrement=\"kendo.numerictextbox.decrement|The title for the **Decrement** button in the NumericTextBox\"\n            decrement=\"Decrease value\"\n        >\n        </ng-container>\n            <input\n                role=\"spinbutton\"\n                class=\"k-input-inner\"\n                autocomplete=\"off\"\n                autocorrect=\"off\"\n                [id]=\"focusableId\"\n                [attr.aria-valuemin]=\"min\"\n                [attr.aria-valuemax]=\"max\"\n                [attr.aria-valuenow]=\"value\"\n                [attr.title]=\"title\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.maxLength]=\"maxlength\"\n                [attr.aria-invalid]=\"isControlInvalid\"\n                [tabindex]=\"tabIndex\"\n                [disabled]=\"disabled\"\n                [readonly]=\"readonly\"\n                [kendoEventsOutsideAngular]=\"{\n                    mousedown: handleMouseDown,\n                    dragenter: handleDragEnter,\n                    keydown: handleKeyDown,\n                    input: handleInput,\n                    focus: handleFocus,\n                    blur: handleBlur,\n                    paste: handlePaste\n                }\"\n                #numericInput />\n            <span\n                class=\"k-input-spinner k-spin-button\" *ngIf=\"spinners\"\n                [kendoEventsOutsideAngular]=\"{ mouseup: releaseArrow, mouseleave: releaseArrow }\"\n            >\n               <button\n                    type=\"button\"\n                    [kendoEventsOutsideAngular]=\"{ mousedown: increasePress }\"\n                    [attr.aria-hidden]=\"true\"\n                    [attr.aria-label]=\"incrementTitle\"\n                    [title]=\"incrementTitle\"\n                    [class.k-active]=\"arrowDirection === ArrowDirection.Up\"\n                    class=\"k-spinner-increase k-button k-icon-button k-button-solid k-button-solid-base\"\n                    tabindex=\"-1\"\n                >\n                    <span class=\"k-button-icon k-icon k-i-caret-alt-up\"></span>\n               </button>\n               <button\n                    type=\"button\"\n                    [kendoEventsOutsideAngular]=\"{ mousedown: decreasePress }\"\n                    [attr.aria-hidden]=\"true\"\n                    [attr.aria-label]=\"decrementTitle\"\n                    [title]=\"decrementTitle\"\n                    [class.k-active]=\"arrowDirection === ArrowDirection.Down\"\n                    class=\"k-spinner-decrease k-button k-icon-button k-button-solid k-button-solid-base\"\n                    tabindex=\"-1\"\n               >\n                    <span class=\"k-button-icon k-icon k-i-caret-alt-down\"></span>\n               </button>\n            </span>\n      `\n                }]\n        }], ctorParameters: function () { return [{ type: i1$2.IntlService }, { type: i0.Renderer2 }, { type: i1.LocalizationService }, { type: i0.Injector }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { focusableId: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], autoCorrect: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], decimals: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], spinners: [{\n                type: Input\n            }], rangeValidation: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], changeValueOnScroll: [{\n                type: Input\n            }], selectOnFocus: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], maxlength: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], rounded: [{\n                type: Input\n            }], fillMode: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], onFocus: [{\n                type: Output,\n                args: ['focus']\n            }], onBlur: [{\n                type: Output,\n                args: ['blur']\n            }], numericInput: [{\n                type: ViewChild,\n                args: ['numericInput', { static: true }]\n            }], direction: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], disableClass: [{\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }], hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-input']\n            }, {\n                type: HostBinding,\n                args: ['class.k-numerictextbox']\n            }] } });\n\n/**\n * Custom component messages override default component messages.\n */\nclass NumericTextBoxCustomMessagesComponent extends NumericTextBoxMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nNumericTextBoxCustomMessagesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NumericTextBoxCustomMessagesComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nNumericTextBoxCustomMessagesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: NumericTextBoxCustomMessagesComponent, selector: \"kendo-numerictextbox-messages\", providers: [\n        {\n            provide: NumericTextBoxMessages,\n            useExisting: forwardRef(() => NumericTextBoxCustomMessagesComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NumericTextBoxCustomMessagesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: NumericTextBoxMessages,\n                            useExisting: forwardRef(() => NumericTextBoxCustomMessagesComponent)\n                        }\n                    ],\n                    selector: 'kendo-numerictextbox-messages',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * @hidden\n */\nvar ResultType;\n(function (ResultType) {\n    ResultType[ResultType[\"Literal\"] = 0] = \"Literal\";\n    ResultType[ResultType[\"Mask\"] = 1] = \"Mask\";\n    // eslint-disable-next-line id-denylist\n    ResultType[ResultType[\"Undefined\"] = 2] = \"Undefined\";\n})(ResultType || (ResultType = {}));\n/**\n * @hidden\n */\nclass Result {\n    constructor(value, rest, type = ResultType.Undefined) {\n        this.value = value;\n        this.rest = rest;\n        this.type = type;\n    }\n    //map :: Functor f => f a ~> (a -> b) -> f b\n    map(fn) {\n        return new Result(fn(this.value), this.rest);\n    }\n    //chain :: Chain m => m a ~> (a -> m b) -> m b\n    chain(fn) {\n        return fn(this.value, this.rest);\n    }\n    fold(s, _ /*we don't need it*/) {\n        return s(this.value, this.rest);\n    }\n    concat(r) {\n        return this.map((vs, _) => r.chain((v, __) => vs.concat([v])));\n    }\n    toString() {\n        return `Result({ value: '${this.value}', rest: ${this.rest} })`;\n    }\n}\n\n/**\n * @hidden\n */\nclass Stream {\n    constructor(input = [], control = []) {\n        this.input = input;\n        this.control = control;\n        this.inputCursor = 0;\n        this.controlCursor = 0;\n    }\n    eof() {\n        return this.inputCursor >= this.input.length;\n    }\n    // Get the first value from the input.\n    next() {\n        return {\n            char: this.input[this.inputCursor++],\n            control: this.control[this.controlCursor++]\n        };\n    }\n    peek() {\n        return {\n            char: this.input[this.inputCursor],\n            control: this.control[this.controlCursor]\n        };\n    }\n    eat_input() {\n        this.inputCursor++;\n    }\n    eat_control() {\n        this.controlCursor++;\n    }\n    eat() {\n        this.inputCursor++;\n        this.controlCursor++;\n    }\n}\n\nconst toArray = (value) => (value || '').split('');\nconst ESCAPE_CHARACTER = '\\\\';\n/**\n * @hidden\n */\nclass Parser {\n    constructor(parse) {\n        this.parse = parse;\n    }\n    run(input, control = '') {\n        if (input instanceof Stream) {\n            return this.parse(input);\n        }\n        else {\n            return this.parse(new Stream(toArray(input), toArray(control)));\n        }\n    }\n    //map :: Functor f => f a ~> (a -> b) -> f b\n    map(f) {\n        return new Parser(stream => this.parse(stream).map(f));\n    }\n    //chain :: Chain m => m a ~> (a -> m b) -> m b\n    chain(f) {\n        return new Parser(stream => this.parse(stream).chain((v, s) => f(v).run(s)));\n    }\n    isLiteral(c) {\n        return this.run(c).type === ResultType.Literal;\n    }\n}\n/**\n * @hidden\n */\nconst mask = ({ prompt, promptPlaceholder }) => rule => new Parser(stream => {\n    while (!stream.eof()) {\n        const { char, control } = stream.peek();\n        if (char === control && control === prompt) {\n            stream.eat();\n            return new Result(prompt, stream, ResultType.Mask);\n        }\n        if (rule.test(char)) {\n            stream.eat();\n            return new Result(char, stream, ResultType.Mask);\n        }\n        if (char === promptPlaceholder) {\n            stream.eat();\n            return new Result(prompt, stream, ResultType.Mask);\n        }\n        stream.eat_input();\n    }\n    stream.eat();\n    return new Result(prompt, stream, ResultType.Mask);\n});\n/**\n * @hidden\n */\nconst literal = _token => new Parser(stream => {\n    //    let {char, control} = stream.peek();\n    let char = stream.peek().char;\n    if (char === _token) {\n        stream.eat();\n        return new Result(_token, stream, ResultType.Literal);\n    }\n    //    if (control === _token) {\n    //        while (!stream.eof() && char !== _token) {\n    //            stream.eat_input();\n    //            char = stream.peek().char;\n    //        }\n    //    }\n    //\n    //    if (control !== undefined) {\n    //        stream.eat();\n    //    }\n    return new Result(_token, stream, ResultType.Literal);\n});\n/**\n * @hidden\n */\nconst unmask = prompt => rule => new Parser(stream => {\n    while (!stream.eof()) {\n        const { char, control } = stream.peek();\n        if (char === prompt && control === prompt) {\n            stream.eat();\n            return new Result(char, stream);\n        }\n        if (rule.test(char)) {\n            stream.eat();\n            return new Result(char, stream);\n        }\n        stream.eat_input();\n    }\n    stream.eat();\n    return new Result('', stream);\n});\n/**\n * @hidden\n */\nconst unliteral = _token => new Parser(stream => {\n    if (stream.eof()) {\n        return new Result('', stream);\n    }\n    const { char } = stream.peek();\n    if (char === _token) {\n        stream.eat();\n    }\n    return new Result(_token, stream);\n});\n/**\n * @hidden\n */\nconst token = (rules, creator) => new Parser(stream => {\n    let { char } = stream.next();\n    const rule = rules[char];\n    if (char === ESCAPE_CHARACTER) {\n        char = stream.next().char;\n        return new Result(creator.literal(char), stream);\n    }\n    if (!rule) {\n        return new Result(creator.literal(char), stream);\n    }\n    return new Result(creator.mask(rule), stream);\n});\n/**\n * @hidden\n */\nconst rawMask = ({ prompt, promptPlaceholder }) => new Parser(stream => {\n    let { char } = stream.next();\n    if (char === prompt) {\n        return new Result(promptPlaceholder, stream);\n    }\n    return new Result(char, stream);\n});\n/**\n * @hidden\n */\nconst rawLiteral = includeLiterals => new Parser(stream => {\n    let { char } = stream.next();\n    if (includeLiterals) {\n        return new Result(char, stream);\n    }\n    return new Result('', stream);\n});\n\n/**\n * @hidden\n */\nconst always = value => new Parser(stream => new Result(value, stream));\n/**\n * @hidden\n */\nconst append = (p1, p2) => p1.chain(vs => p2.map(v => vs.concat([v])));\n/**\n * @hidden\n */\nconst sequence = list => list.reduce((acc, parser) => append(acc, parser), always([]));\n/**\n * @hidden\n */\nconst greedy = parser => new Parser(stream => {\n    let result = new Result([], stream);\n    while (!stream.eof()) {\n        result = result.concat(parser.run(stream));\n    }\n    return result;\n});\n\n/**\n * @hidden\n */\nclass MaskingService {\n    constructor() {\n        this.rules = {};\n        this.prompt = \"_\";\n        this.mask = \"\";\n        this.promptPlaceholder = \" \";\n        this.includeLiterals = false;\n        this.maskTokens = [];\n        this.unmaskTokens = [];\n        this.rawTokens = [];\n        this.validationTokens = [];\n    }\n    update({ mask = '', prompt = '', promptPlaceholder = ' ', rules = {}, includeLiterals = false }) {\n        this.mask = mask;\n        this.prompt = prompt;\n        this.promptPlaceholder = promptPlaceholder;\n        this.rules = rules;\n        this.includeLiterals = includeLiterals;\n        this.tokenize();\n    }\n    validationValue(maskedValue = '') {\n        let value = maskedValue;\n        sequence(this.validationTokens)\n            .run(maskedValue)\n            .fold(unmasked => {\n            value = unmasked.join('');\n        });\n        return value;\n    }\n    rawValue(maskedValue = '') {\n        let value = maskedValue;\n        if (!this.rawTokens.length) {\n            return value;\n        }\n        sequence(this.rawTokens)\n            .run(maskedValue)\n            .fold(unmasked => {\n            value = unmasked.join('');\n        });\n        return value;\n    }\n    /**\n     * @hidden\n     */\n    maskRaw(rawValue = '') {\n        let value = rawValue;\n        if (!this.maskTokens.length) {\n            return value;\n        }\n        sequence(this.maskTokens)\n            .run(rawValue)\n            .fold(masked => {\n            value = masked.join('');\n        });\n        return value;\n    }\n    maskInput(input, control, splitPoint) {\n        if (input.length < control.length) {\n            return this.maskRemoved(input, control, splitPoint);\n        }\n        return this.maskInserted(input, control, splitPoint);\n    }\n    maskInRange(pasted, oldValue, start, end) {\n        let value = '';\n        let selection = end;\n        const beforeChange = oldValue.split('').slice(0, start);\n        const afterChange = oldValue.split('').slice(end);\n        sequence(this.maskTokens.slice(start, end))\n            .run(pasted)\n            .fold(masked => {\n            value = beforeChange\n                .concat(masked)\n                .concat(afterChange)\n                .join('');\n        });\n        return {\n            selection,\n            value\n        };\n    }\n    maskRemoved(input, control, splitPoint) {\n        let value = '';\n        let selection = splitPoint;\n        const unchanged = input.split('').slice(splitPoint);\n        const changed = input.split('').slice(0, splitPoint).join('');\n        const take = this.maskTokens.length - (input.length - splitPoint);\n        sequence(this.maskTokens.slice(0, take))\n            .run(changed, control)\n            .fold(masked => {\n            selection = this.adjustPosition(masked, selection);\n            value = masked.concat(unchanged).join('');\n        });\n        return {\n            selection,\n            value\n        };\n    }\n    adjustPosition(input, selection) {\n        const caretChar = input[selection];\n        const isLiteral = this.maskTokens[selection].isLiteral(caretChar);\n        if (!isLiteral && caretChar !== this.prompt) {\n            return selection + 1;\n        }\n        return selection;\n    }\n    maskInserted(input, control, splitPoint) {\n        let value = '';\n        let selection = splitPoint;\n        const changed = input.slice(0, splitPoint);\n        sequence(this.unmaskTokens)\n            .run(changed, control)\n            .chain(unmasked => {\n            selection = unmasked.join('').length;\n            const unchanged = control.slice(selection);\n            return sequence(this.maskTokens)\n                .run(unmasked.join('') + unchanged, control);\n        })\n            .fold(masked => {\n            value = masked.join('');\n        });\n        return {\n            selection,\n            value\n        };\n    }\n    get maskTokenCreator() {\n        const { prompt, promptPlaceholder } = this;\n        return {\n            literal: rule => literal(rule),\n            mask: rule => mask({ prompt, promptPlaceholder })(rule)\n        };\n    }\n    get unmaskTokenCreator() {\n        return {\n            literal: rule => unliteral(rule),\n            mask: rule => unmask(this.prompt)(rule)\n        };\n    }\n    get rawTokenCreator() {\n        const { prompt, promptPlaceholder, includeLiterals } = this;\n        return {\n            literal: _ => rawLiteral(includeLiterals),\n            mask: _ => rawMask({ prompt, promptPlaceholder })\n        };\n    }\n    get validationTokenCreator() {\n        const { prompt } = this;\n        return {\n            literal: _ => rawLiteral(false),\n            mask: _ => rawMask({ prompt, promptPlaceholder: '' })\n        };\n    }\n    tokenize() {\n        greedy(token(this.rules, this.maskTokenCreator))\n            .run(this.mask)\n            .fold((tokens, _) => {\n            this.maskTokens = tokens;\n        });\n        greedy(token(this.rules, this.unmaskTokenCreator))\n            .run(this.mask)\n            .fold((tokens, _) => {\n            this.unmaskTokens = tokens;\n        });\n        greedy(token(this.rules, this.rawTokenCreator))\n            .run(this.mask)\n            .fold((tokens, _) => {\n            this.rawTokens = tokens;\n        });\n        greedy(token(this.rules, this.validationTokenCreator))\n            .run(this.mask)\n            .fold((tokens, _) => {\n            this.validationTokens = tokens;\n        });\n    }\n}\nMaskingService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MaskingService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMaskingService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MaskingService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MaskingService, decorators: [{\n            type: Injectable\n        }] });\n\nconst resolvedPromise = Promise.resolve(null);\nconst FOCUSED$2 = 'k-focus';\nconst DEFAULT_SIZE$6 = 'medium';\nconst DEFAULT_ROUNDED$5 = 'medium';\nconst DEFAULT_FILL_MODE$4 = 'solid';\n/**\n * Represents the [Kendo UI MaskedTextBox component for Angular]({% slug overview_maskedtextbox %}).\n *\n * @example\n * ```ts-no-run\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *      <kendo-maskedtextbox\n *          [mask]=\"mask\"\n *          [value]=\"value\">\n *      </kendo-maskedtextbox>\n *     `\n * })\n *\n * class AppComponent {\n *  public value: string = \"9580128055807792\";\n *  public mask: string = \"0000-0000-0000-0000\";\n * }\n * ```\n */\nclass MaskedTextBoxComponent {\n    constructor(service, renderer, hostElement, ngZone, injector, changeDetector, rtl) {\n        this.service = service;\n        this.renderer = renderer;\n        this.hostElement = hostElement;\n        this.ngZone = ngZone;\n        this.injector = injector;\n        this.changeDetector = changeDetector;\n        /**\n         * @hidden\n         */\n        this.focusableId = `k-${guid()}`;\n        /**\n         * Determines whether the MaskedTextBox is disabled ([see example]({% slug disabled_maskedtextbox %})).\n         */\n        this.disabled = false;\n        /**\n         * Determines whether the MaskedTextBox is in its read-only state ([see example]({% slug readonly_maskedtextbox %})).\n         */\n        this.readonly = false;\n        /**\n         * Represents a prompt character for the masked value.\n         * @default `_`\n         */\n        this.prompt = '_';\n        /**\n         * Indicates a character which represents an empty position in the raw value.\n         * @default ' '\n         */\n        this.promptPlaceholder = ' ';\n        /**\n         * Indicates whether to include literals in the raw value  ([see example]({% slug value_maskedtextbox %})).\n         * @default false\n         */\n        this.includeLiterals = false;\n        /**\n         * Specifies if the mask should be shown on focus for empty value.\n         */\n        this.maskOnFocus = false;\n        /**\n         * Determines whether the built-in mask validator is enforced when a form is validated\n         * ([see example]({% slug validation_maskedtextbox %})).\n         * @default true\n         */\n        this.maskValidation = true;\n        /**\n         * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n         */\n        this.tabindex = 0;\n        /**\n         * Fires each time the user focuses the `input` element.\n         *\n         * > To wire the event programmatically, use the `onFocus` property.\n         *\n         * @example\n         * ```ts-no-run\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *  <kendo-maskedtextbox (focus)=\"handleFocus()\"></kendo-maskedtextbox>\n         * `\n         * })\n         * class AppComponent {\n         *   public handleFocus(): void {\n         *      console.log(\"Component is focused\");\n         *   }\n         * }\n         * ```\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * Fires each time the `input` element gets blurred.\n         *\n         * > To wire the event programmatically, use the `onBlur` property.\n         *\n         * @example\n         * ```ts-no-run\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *  <kendo-maskedtextbox (blur)=\"handleBlur()\"></kendo-maskedtextbox>\n         * `\n         * })\n         * class AppComponent {\n         *   public handleBlur(): void {\n         *      console.log(\"Component is blurred\");\n         *   }\n         * }\n         * ```\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * Fires each time the value changes.\n         */\n        this.valueChange = new EventEmitter();\n        this.hostClasses = true;\n        this.focusClick = false;\n        this.defaultRules = {\n            \"#\": /[\\d\\s\\+\\-]/,\n            \"&\": /[\\S]/,\n            \"0\": /[\\d]/,\n            \"9\": /[\\d\\s]/,\n            \"?\": /[a-zA-Z\\s]/,\n            \"A\": /[a-zA-Z0-9]/,\n            \"C\": /./,\n            \"L\": /[a-zA-Z]/,\n            \"a\": /[a-zA-Z0-9\\s]/\n        };\n        this.isPasted = false;\n        this.selection = [0, 0];\n        this._size = 'medium';\n        this._rounded = 'medium';\n        this._fillMode = 'solid';\n        /**\n         * @hidden\n         */\n        this.handleFocus = () => {\n            this.focused = true;\n            if (this.maskOnFocus && this.emptyMask) {\n                this.updateInput(this.service.maskRaw(this.value));\n                this.ngZone.runOutsideAngular(() => {\n                    setTimeout(() => { this.setSelection(0, 0); }, 0);\n                });\n            }\n            if (hasObservers(this.onFocus)) {\n                this.ngZone.run(() => {\n                    this.onFocus.emit();\n                });\n            }\n        };\n        /**\n         * @hidden\n         */\n        this.handleClick = () => {\n            if (this.focused && !this.focusClick) {\n                this.focusClick = true;\n                const { selectionStart, selectionEnd } = this.input.nativeElement;\n                if (selectionStart === selectionEnd) {\n                    this.setFocusSelection();\n                }\n            }\n        };\n        /**\n         * @hidden\n         */\n        this.handleBlur = () => {\n            this.changeDetector.markForCheck();\n            this.focused = false;\n            this.focusClick = false;\n            if (this.maskOnFocus && this.emptyMask) {\n                this.updateInput(this.maskedValue);\n            }\n            if (hasObservers(this.onBlur) || requiresZoneOnBlur(this.control)) {\n                this.ngZone.run(() => {\n                    this.onTouched();\n                    this.onBlur.emit();\n                });\n            }\n        };\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n        validatePackage(packageMetadata);\n        this.direction = rtl ? 'rtl' : 'ltr';\n        this.updateService();\n    }\n    /**\n     * The size property specifies the padding of the MaskedTextBox internal input element\n     * ([see example]({% slug appearance_maskedtextbox %}#toc-size)).\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     */\n    set size(size) {\n        const newSize = size ? size : DEFAULT_SIZE$6;\n        this.handleClasses(newSize, 'size');\n        this._size = newSize;\n    }\n    get size() {\n        return this._size;\n    }\n    /**\n     * The rounded property specifies the border radius of the MaskedTextBox\n     * ([see example]({% slug appearance_maskedtextbox %}#toc-rounded)).\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     */\n    set rounded(rounded) {\n        const newRounded = rounded ? rounded : DEFAULT_ROUNDED$5;\n        this.handleClasses(newRounded, 'rounded');\n        this._rounded = newRounded;\n    }\n    get rounded() {\n        return this._rounded;\n    }\n    /**\n     * The fillMode property specifies the background and border styles of the MaskedTexBox\n     * ([see example]({% slug appearance_maskedtextbox %}#toc-fillMode)).\n     * The possible values are:\n     * * `flat`\n     * * `solid` (default)\n     * * `outline`\n     * * `none`\n     */\n    set fillMode(fillMode) {\n        const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$4;\n        this.handleClasses(newFillMode, 'fillMode');\n        this._fillMode = newFillMode;\n    }\n    get fillMode() {\n        return this._fillMode;\n    }\n    /**\n     * Exposes the RegExp-based mask validation array ([see example]({% slug masks_maskedtextbox %})).\n     */\n    set rules(value) {\n        this._rules = Object.assign({}, this.defaultRules, value);\n    }\n    get rules() {\n        return this._rules || this.defaultRules;\n    }\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n        this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n        return this.tabindex;\n    }\n    get hostDisabledClass() {\n        return this.disabled;\n    }\n    ngOnInit() {\n        if (this.hostElement) {\n            this.renderer.removeAttribute(this.hostElement.nativeElement, \"tabindex\");\n        }\n        this.control = this.injector.get(NgControl, null);\n    }\n    ngAfterViewInit() {\n        const stylingInputs = ['size', 'rounded', 'fillMode'];\n        stylingInputs.forEach(input => {\n            this.handleClasses(this[input], input);\n        });\n    }\n    /**\n     * @hidden\n     * Used by the FloatingLabel to determine if the MaskedTextBox is empty.\n     */\n    isEmpty() {\n        if (this.input) {\n            return !Boolean(this.input.nativeElement.value);\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleDragDrop() {\n        return false;\n    }\n    /**\n     * Focuses the MaskedTextBox.\n     *\n     * @example\n     * ```ts-no-run\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"maskedinput.focus()\">Focus the input</button>\n     *  <kendo-maskedtextbox #maskedinput></kendo-maskedtextbox>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n    focus() {\n        if (!this.input) {\n            return;\n        }\n        this.input.nativeElement.focus();\n        this.setFocusSelection();\n    }\n    /**\n     * Blurs the MaskedTextBox.\n     */\n    blur() {\n        if (!this.input) {\n            return;\n        }\n        this.input.nativeElement.blur();\n    }\n    /**\n     * @hidden\n     */\n    pasteHandler(e) {\n        const { selectionStart, selectionEnd } = e.target;\n        if (selectionEnd === selectionStart) {\n            return;\n        }\n        this.isPasted = true;\n        this.selection = [selectionStart, selectionEnd];\n    }\n    /**\n     * @hidden\n     */\n    inputHandler(e) {\n        const value = e.target.value;\n        const [start, end] = this.selection;\n        if (!this.mask) {\n            this.updateValueWithEvents(value);\n            this.isPasted = false;\n            return;\n        }\n        let result;\n        if (this.isPasted) {\n            this.isPasted = false;\n            const rightPart = this.maskedValue.length - end;\n            const to = value.length - rightPart;\n            result = this.service.maskInRange(value.slice(start, to), this.maskedValue, start, end);\n        }\n        else {\n            result = this.service.maskInput(value, this.maskedValue || '', e.target.selectionStart);\n        }\n        this.updateInput(result.value, result.selection);\n        this.updateValueWithEvents(result.value);\n    }\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes) {\n        if (changes.value) {\n            this.value = this.normalizeValue();\n        }\n        if (!this.mask) {\n            this.updateInput(this.value);\n            return;\n        }\n        const next = this.extractChanges(changes);\n        this.updateService(next);\n        const maskedValue = this.service.maskRaw(this.value);\n        this.updateInput(maskedValue, null, true);\n        if (changes.includeLiterals || isChanged('promptPlaceholder', changes)) {\n            resolvedPromise.then(() => {\n                this.updateValueWithEvents(this.maskedValue);\n            });\n        }\n    }\n    /**\n     * @hidden\n     * Writes a new value to the element.\n     */\n    writeValue(value) {\n        this.value = this.normalizeValue(value);\n        this.updateInput(this.service.maskRaw(this.value));\n        if (this.includeLiterals) {\n            this.updateValue(this.maskedValue);\n        }\n    }\n    /**\n     * @hidden\n     * Sets the function that will be called when a `change` event is triggered.\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * @hidden\n     * Sets the function that will be called when a `touch` event is triggered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * @hidden\n     * Called when the status of the component changes to or from `disabled`.\n     * Depending on the value, it enables or disables the appropriate DOM element.\n     *\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.changeDetector.markForCheck();\n        this.disabled = isDisabled;\n    }\n    /**\n     * @hidden\n     */\n    validate(_) {\n        if (this.maskValidation === false || !this.mask) {\n            return null;\n        }\n        if (!this.service.validationValue(this.maskedValue)) {\n            return null;\n        }\n        if (this.maskedValue.indexOf(this.prompt) !== -1) {\n            return {\n                patternError: {\n                    mask: this.mask,\n                    maskedValue: this.maskedValue,\n                    value: this.value\n                }\n            };\n        }\n        return null;\n    }\n    /**\n     * @hidden\n     */\n    get isControlInvalid() {\n        return this.control && this.control.touched && !this.control.valid;\n    }\n    /**\n     * @hidden\n     */\n    updateValueWithEvents(maskedValue) {\n        this.updateValue(maskedValue);\n        if (hasObservers(this.valueChange)) {\n            this.valueChange.emit(this.value);\n        }\n    }\n    updateValue(value) {\n        if (this.mask && !this.service.validationValue(value) && !this.includeLiterals) {\n            this.value = '';\n        }\n        else {\n            this.value = this.service.rawValue(value);\n        }\n        this.onChange(this.value);\n    }\n    updateInput(maskedValue = '', selection, isFromOnChanges) {\n        if (isFromOnChanges && maskedValue === this.maskedValue) {\n            return;\n        }\n        this.maskedValue = maskedValue;\n        const value = this.maskOnFocus && !this.focused && this.emptyMask ? '' : maskedValue;\n        this.renderer.setProperty(this.input.nativeElement, \"value\", value);\n        if (selection !== undefined) {\n            this.setSelection(selection, selection);\n        }\n    }\n    extractChanges(changes) {\n        return Object.keys(changes).filter(key => key !== 'rules').reduce((obj, key) => {\n            obj[key] = changes[key].currentValue;\n            return obj;\n        }, {});\n    }\n    updateService(extra) {\n        const config = Object.assign({\n            includeLiterals: this.includeLiterals,\n            mask: this.mask,\n            prompt: this.prompt,\n            promptPlaceholder: this.promptPlaceholder,\n            rules: this.rules\n        }, extra);\n        this.service.update(config);\n    }\n    setSelection(start = this.selection[0], end = this.selection[1]) {\n        if (this.focused) {\n            invokeElementMethod(this.input, 'setSelectionRange', start, end);\n        }\n    }\n    get emptyMask() {\n        return this.service.maskRaw() === this.maskedValue;\n    }\n    setFocusSelection() {\n        const selectionStart = this.input.nativeElement.selectionStart;\n        const index = this.maskedValue ? this.maskedValue.indexOf(this.prompt) : 0;\n        if (index >= 0 && index < selectionStart) {\n            this.selection = [index, index];\n            this.setSelection();\n        }\n    }\n    get focused() {\n        return this.isFocused;\n    }\n    set focused(value) {\n        if (this.isFocused !== value && this.hostElement) {\n            const element = this.hostElement.nativeElement;\n            if (value) {\n                this.renderer.addClass(element, FOCUSED$2);\n            }\n            else {\n                this.renderer.removeClass(element, FOCUSED$2);\n            }\n            this.isFocused = value;\n        }\n    }\n    normalizeValue(value = this.value) {\n        const present = isPresent(value);\n        if (present && typeof value !== 'string') {\n            if (isDevMode()) {\n                throw new Error('The MaskedTextBox component supports only string values.');\n            }\n            return String(value);\n        }\n        return present ? value : '';\n    }\n    handleClasses(value, input) {\n        const elem = this.hostElement.nativeElement;\n        const classes = getStylingClasses('input', input, this[input], value);\n        if (classes.toRemove) {\n            this.renderer.removeClass(elem, classes.toRemove);\n        }\n        if (classes.toAdd) {\n            this.renderer.addClass(elem, classes.toAdd);\n        }\n    }\n}\nMaskedTextBoxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MaskedTextBoxComponent, deps: [{ token: MaskingService }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Injector }, { token: i0.ChangeDetectorRef }, { token: RTL, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMaskedTextBoxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: MaskedTextBoxComponent, selector: \"kendo-maskedtextbox\", inputs: { focusableId: \"focusableId\", disabled: \"disabled\", readonly: \"readonly\", title: \"title\", size: \"size\", rounded: \"rounded\", fillMode: \"fillMode\", mask: \"mask\", value: \"value\", rules: \"rules\", prompt: \"prompt\", promptPlaceholder: \"promptPlaceholder\", includeLiterals: \"includeLiterals\", maskOnFocus: \"maskOnFocus\", maskValidation: \"maskValidation\", tabindex: \"tabindex\", tabIndex: \"tabIndex\" }, outputs: { onFocus: \"focus\", onBlur: \"blur\", valueChange: \"valueChange\" }, host: { listeners: { \"paste\": \"pasteHandler($event)\", \"input\": \"inputHandler($event)\" }, properties: { \"attr.dir\": \"this.direction\", \"class.k-input\": \"this.hostClasses\", \"class.k-maskedtextbox\": \"this.hostClasses\", \"class.k-disabled\": \"this.hostDisabledClass\" } }, providers: [\n        MaskingService,\n        {\n            multi: true,\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => MaskedTextBoxComponent) /* eslint-disable-line*/\n        },\n        {\n            multi: true,\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => MaskedTextBoxComponent) /* eslint-disable-line*/\n        },\n        {\n            provide: KendoInput,\n            useExisting: forwardRef(() => MaskedTextBoxComponent)\n        }\n    ], viewQueries: [{ propertyName: \"input\", first: true, predicate: [\"input\"], descendants: true, static: true }], exportAs: [\"kendoMaskedTextBox\"], usesOnChanges: true, ngImport: i0, template: `\n        <input type=\"text\"\n            #input\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            spellcheck=\"false\"\n            class=\"k-input-inner\"\n            [id]=\"focusableId\"\n            [tabindex]=\"tabIndex\"\n            [attr.title]=\"title\"\n            [attr.aria-placeholder]=\"mask\"\n            [attr.aria-invalid]=\"isControlInvalid\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [kendoEventsOutsideAngular]=\"{\n                focus: handleFocus,\n                blur: handleBlur,\n                click: handleClick,\n                dragstart: handleDragDrop,\n                drop: handleDragDrop\n            }\"\n        />\n    `, isInline: true, directives: [{ type: i3.EventsOutsideAngularDirective, selector: \"[kendoEventsOutsideAngular]\", inputs: [\"kendoEventsOutsideAngular\", \"scope\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MaskedTextBoxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoMaskedTextBox',\n                    providers: [\n                        MaskingService,\n                        {\n                            multi: true,\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => MaskedTextBoxComponent) /* eslint-disable-line*/\n                        },\n                        {\n                            multi: true,\n                            provide: NG_VALIDATORS,\n                            useExisting: forwardRef(() => MaskedTextBoxComponent) /* eslint-disable-line*/\n                        },\n                        {\n                            provide: KendoInput,\n                            useExisting: forwardRef(() => MaskedTextBoxComponent)\n                        }\n                    ],\n                    selector: 'kendo-maskedtextbox',\n                    template: `\n        <input type=\"text\"\n            #input\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            spellcheck=\"false\"\n            class=\"k-input-inner\"\n            [id]=\"focusableId\"\n            [tabindex]=\"tabIndex\"\n            [attr.title]=\"title\"\n            [attr.aria-placeholder]=\"mask\"\n            [attr.aria-invalid]=\"isControlInvalid\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [kendoEventsOutsideAngular]=\"{\n                focus: handleFocus,\n                blur: handleBlur,\n                click: handleClick,\n                dragstart: handleDragDrop,\n                drop: handleDragDrop\n            }\"\n        />\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: MaskingService }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Injector }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [RTL]\n                }] }]; }, propDecorators: { focusableId: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], rounded: [{\n                type: Input\n            }], fillMode: [{\n                type: Input\n            }], mask: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], rules: [{\n                type: Input\n            }], prompt: [{\n                type: Input\n            }], promptPlaceholder: [{\n                type: Input\n            }], includeLiterals: [{\n                type: Input\n            }], maskOnFocus: [{\n                type: Input\n            }], maskValidation: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], onFocus: [{\n                type: Output,\n                args: ['focus']\n            }], onBlur: [{\n                type: Output,\n                args: ['blur']\n            }], valueChange: [{\n                type: Output\n            }], direction: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-input']\n            }, {\n                type: HostBinding,\n                args: ['class.k-maskedtextbox']\n            }], hostDisabledClass: [{\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }], input: [{\n                type: ViewChild,\n                args: ['input', { static: true }]\n            }], pasteHandler: [{\n                type: HostListener,\n                args: ['paste', ['$event']]\n            }], inputHandler: [{\n                type: HostListener,\n                args: ['input', ['$event']]\n            }] } });\n\n/**\n * @hidden\n */\nclass SlidersCommonModule {\n}\nSlidersCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SlidersCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSlidersCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SlidersCommonModule, declarations: [SliderTicksComponent,\n        LabelTemplateDirective], imports: [CommonModule, DraggableModule, EventsModule, ResizeSensorModule], exports: [LabelTemplateDirective,\n        SliderTicksComponent,\n        DraggableModule,\n        EventsModule,\n        ResizeSensorModule] });\nSlidersCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SlidersCommonModule, imports: [[CommonModule, DraggableModule, EventsModule, ResizeSensorModule], DraggableModule,\n        EventsModule,\n        ResizeSensorModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SlidersCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        SliderTicksComponent,\n                        LabelTemplateDirective\n                    ],\n                    exports: [\n                        LabelTemplateDirective,\n                        SliderTicksComponent,\n                        DraggableModule,\n                        EventsModule,\n                        ResizeSensorModule\n                    ],\n                    imports: [CommonModule, DraggableModule, EventsModule, ResizeSensorModule]\n                }]\n        }] });\n\n/**\n * Custom component messages override default component messages.\n */\nclass SliderCustomMessagesComponent extends SliderMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nSliderCustomMessagesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SliderCustomMessagesComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nSliderCustomMessagesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: SliderCustomMessagesComponent, selector: \"kendo-slider-messages\", providers: [\n        {\n            provide: SliderMessages,\n            useExisting: forwardRef(() => SliderCustomMessagesComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SliderCustomMessagesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: SliderMessages,\n                            useExisting: forwardRef(() => SliderCustomMessagesComponent)\n                        }\n                    ],\n                    selector: 'kendo-slider-messages',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Slider component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Inputs module\n * import { SliderModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, BrowserAnimationsModule, SliderModule], // import Slider module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass SliderModule {\n}\nSliderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SliderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSliderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SliderModule, declarations: [SliderComponent,\n        SliderCustomMessagesComponent,\n        LocalizedSliderMessagesDirective], imports: [CommonModule, SlidersCommonModule], exports: [SliderComponent,\n        SliderCustomMessagesComponent,\n        LabelTemplateDirective,\n        LocalizedSliderMessagesDirective] });\nSliderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SliderModule, imports: [[CommonModule, SlidersCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SliderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        SliderComponent,\n                        SliderCustomMessagesComponent,\n                        LocalizedSliderMessagesDirective\n                    ],\n                    exports: [\n                        SliderComponent,\n                        SliderCustomMessagesComponent,\n                        LabelTemplateDirective,\n                        LocalizedSliderMessagesDirective\n                    ],\n                    imports: [CommonModule, SlidersCommonModule]\n                }]\n        }] });\n\n/**\n * Custom component messages override default component messages.\n */\nclass RangeSliderCustomMessagesComponent extends RangeSliderMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nRangeSliderCustomMessagesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RangeSliderCustomMessagesComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nRangeSliderCustomMessagesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: RangeSliderCustomMessagesComponent, selector: \"kendo-rangeslider-messages\", providers: [\n        {\n            provide: RangeSliderMessages,\n            useExisting: forwardRef(() => RangeSliderCustomMessagesComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RangeSliderCustomMessagesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: RangeSliderMessages,\n                            useExisting: forwardRef(() => RangeSliderCustomMessagesComponent)\n                        }\n                    ],\n                    selector: 'kendo-rangeslider-messages',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the RangeSlider component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Inputs module\n * import { RangeSliderModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, BrowserAnimationsModule, RangeSliderModule], // import RangeSlider module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass RangeSliderModule {\n}\nRangeSliderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RangeSliderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRangeSliderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RangeSliderModule, declarations: [RangeSliderComponent,\n        RangeSliderCustomMessagesComponent,\n        LocalizedRangeSliderMessagesDirective], imports: [CommonModule, SlidersCommonModule], exports: [RangeSliderComponent,\n        RangeSliderCustomMessagesComponent,\n        LocalizedRangeSliderMessagesDirective,\n        LabelTemplateDirective] });\nRangeSliderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RangeSliderModule, imports: [[CommonModule, SlidersCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RangeSliderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        RangeSliderComponent,\n                        RangeSliderCustomMessagesComponent,\n                        LocalizedRangeSliderMessagesDirective\n                    ],\n                    exports: [\n                        RangeSliderComponent,\n                        RangeSliderCustomMessagesComponent,\n                        LocalizedRangeSliderMessagesDirective,\n                        LabelTemplateDirective\n                    ],\n                    imports: [CommonModule, SlidersCommonModule]\n                }]\n        }] });\n\n/**\n * Custom component messages override default component messages.\n */\nclass SwitchCustomMessagesComponent extends Messages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nSwitchCustomMessagesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SwitchCustomMessagesComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nSwitchCustomMessagesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: SwitchCustomMessagesComponent, selector: \"kendo-switch-messages\", providers: [\n        {\n            provide: Messages,\n            useExisting: forwardRef(() => SwitchCustomMessagesComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SwitchCustomMessagesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: Messages,\n                            useExisting: forwardRef(() => SwitchCustomMessagesComponent)\n                        }\n                    ],\n                    selector: 'kendo-switch-messages',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Switch component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Switch module\n * import { SwitchModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, SwitchModule], // import Switch module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass SwitchModule {\n}\nSwitchModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SwitchModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSwitchModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SwitchModule, declarations: [SwitchComponent,\n        SwitchCustomMessagesComponent,\n        LocalizedSwitchMessagesDirective], imports: [CommonModule, EventsModule, ResizeSensorModule], exports: [SwitchComponent,\n        SwitchCustomMessagesComponent,\n        LocalizedSwitchMessagesDirective] });\nSwitchModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SwitchModule, imports: [[CommonModule, EventsModule, ResizeSensorModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SwitchModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        SwitchComponent,\n                        SwitchCustomMessagesComponent,\n                        LocalizedSwitchMessagesDirective\n                    ],\n                    exports: [\n                        SwitchComponent,\n                        SwitchCustomMessagesComponent,\n                        LocalizedSwitchMessagesDirective\n                    ],\n                    imports: [CommonModule, EventsModule, ResizeSensorModule]\n                }]\n        }] });\n\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the NumericTextBox component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the NumericTextBox module\n * import { NumericTextBoxModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, NumericTextBoxModule], // import NumericTextBox module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass NumericTextBoxModule {\n}\nNumericTextBoxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NumericTextBoxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNumericTextBoxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NumericTextBoxModule, declarations: [LocalizedNumericTextBoxMessagesDirective,\n        NumericTextBoxComponent,\n        NumericTextBoxCustomMessagesComponent], imports: [CommonModule, EventsModule], exports: [NumericTextBoxComponent,\n        NumericTextBoxCustomMessagesComponent] });\nNumericTextBoxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NumericTextBoxModule, imports: [[CommonModule, EventsModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NumericTextBoxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        LocalizedNumericTextBoxMessagesDirective,\n                        NumericTextBoxComponent,\n                        NumericTextBoxCustomMessagesComponent\n                    ],\n                    exports: [\n                        NumericTextBoxComponent,\n                        NumericTextBoxCustomMessagesComponent\n                    ],\n                    imports: [CommonModule, EventsModule]\n                }]\n        }] });\n\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the MaskedTextBox component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the MaskedTextBox module\n * import { MaskedTextBoxModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, MaskedTextBoxModule], // import MaskedTextBox module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass MaskedTextBoxModule {\n}\nMaskedTextBoxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MaskedTextBoxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMaskedTextBoxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MaskedTextBoxModule, declarations: [MaskedTextBoxComponent], imports: [CommonModule, EventsModule], exports: [MaskedTextBoxComponent] });\nMaskedTextBoxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MaskedTextBoxModule, imports: [[CommonModule, EventsModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MaskedTextBoxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [MaskedTextBoxComponent],\n                    exports: [MaskedTextBoxComponent],\n                    imports: [CommonModule, EventsModule]\n                }]\n        }] });\n\n/**\n * @hidden\n *\n * Returns true if the used browser is Safari.\n */\nconst isSafari = (userAgent) => {\n    const desktopBrowser = detectDesktopBrowser(userAgent);\n    const mobileOS = detectMobileOS(userAgent);\n    return (desktopBrowser && desktopBrowser.safari) || (mobileOS && mobileOS.browser === 'mobilesafari');\n};\n/**\n * @hidden\n *\n * Checks if input is Japanese IME\n */\nconst isJapanese = (input) => {\n    const japaneseRegex = /[\\u3000-\\u303F]|[\\u3040-\\u309F]|[\\u30A0-\\u30FF]|[\\uFF00-\\uFFEF]|[\\u4E00-\\u9FAF]|[\\u2605-\\u2606]|[\\u2190-\\u2195]|\\u203B/g;\n    return japaneseRegex.test(input);\n};\n\n/**\n * Specifies the adornments in the suffix container ([see examples]({% slug adornments_textbox %}#toc-suffixadornments)).\n * ```ts-no-run\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-textbox>\n *    <ng-template kendoTextBoxSuffixTemplate>\n *        <button kendoButton look=\"clear\" icon=\"image\"></button>\n *    </ng-template>\n *  </kendo-textbox>\n * `\n * })\n * class AppComponent {}\n * ```\n */\nclass TextBoxSuffixTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nTextBoxSuffixTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextBoxSuffixTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nTextBoxSuffixTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TextBoxSuffixTemplateDirective, selector: \"[kendoTextBoxSuffixTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextBoxSuffixTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoTextBoxSuffixTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Specifies the adornments in the prefix container ([see examples]({% slug adornments_textbox %}#toc-prefixadornments)).\n * @example\n * ```ts-no-run\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-textbox>\n *    <ng-template kendoTextBoxPrefixTemplate>\n *        <button kendoButton look=\"clear\" icon=\"image\"></button>\n *    </ng-template>\n *  </kendo-textbox>\n * `\n * })\n * class AppComponent {}\n * ```\n */\nclass TextBoxPrefixTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nTextBoxPrefixTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextBoxPrefixTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nTextBoxPrefixTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TextBoxPrefixTemplateDirective, selector: \"[kendoTextBoxPrefixTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextBoxPrefixTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoTextBoxPrefixTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * @hidden\n */\nclass TextBoxMessages extends ComponentMessages {\n}\nTextBoxMessages.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextBoxMessages, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTextBoxMessages.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TextBoxMessages, selector: \"kendo-textbox-messages-base\", inputs: { clear: \"clear\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextBoxMessages, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: 'kendo-textbox-messages-base'\n                }]\n        }], propDecorators: { clear: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass LocalizedTextBoxMessagesDirective extends TextBoxMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nLocalizedTextBoxMessagesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalizedTextBoxMessagesDirective, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Directive });\nLocalizedTextBoxMessagesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LocalizedTextBoxMessagesDirective, selector: \"[kendoTextBoxLocalizedMessages]\", providers: [\n        {\n            provide: TextBoxMessages,\n            useExisting: forwardRef(() => LocalizedTextBoxMessagesDirective)\n        }\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalizedTextBoxMessagesDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    providers: [\n                        {\n                            provide: TextBoxMessages,\n                            useExisting: forwardRef(() => LocalizedTextBoxMessagesDirective)\n                        }\n                    ],\n                    selector: '[kendoTextBoxLocalizedMessages]'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\nconst FOCUSED$1 = 'k-focus';\nconst DEFAULT_SIZE$5 = 'medium';\nconst DEFAULT_ROUNDED$4 = 'medium';\nconst DEFAULT_FILL_MODE$3 = 'solid';\nclass TextBoxComponent {\n    constructor(localizationService, ngZone, changeDetector, renderer, injector, hostElement) {\n        this.localizationService = localizationService;\n        this.ngZone = ngZone;\n        this.changeDetector = changeDetector;\n        this.renderer = renderer;\n        this.injector = injector;\n        this.hostElement = hostElement;\n        /**\n         * @hidden\n         */\n        this.focusableId = `k-${guid()}`;\n        /**\n         * Sets the `title` attribute of the `input` element of the TextBox.\n         */\n        this.title = '';\n        /**\n         * Sets the disabled state of the component.\n         *\n         * @default false\n         */\n        this.disabled = false;\n        /**\n         * Sets the read-only state of the component.\n         *\n         * @default false\n         */\n        this.readonly = false;\n        /**\n         * Specifies the `tabindex` of the TextBox.\n         *\n         * @default 0\n         */\n        this.tabindex = 0;\n        /**\n         * Provides a value for the TextBox.\n         */\n        this.value = null;\n        /**\n         * Determines whether the whole value will be selected when the TextBox is clicked. Defaults to `false`.\n         *\n         * @default false\n         */\n        this.selectOnFocus = false;\n        /**\n         * Specifies when the Success icon will be shown ([see example]({% slug validation_textbox %})).\n         *\n         * The possible values are:\n         *\n         * `boolean`&mdash;The Success icon is displayed, if the condition given by the developer is met.\n         *\n         * `initial`&mdash;The Success icon will be displayed when the component state is neither `invalid` nor `touched` or `dirty`.\n         *\n         * @default false\n         */\n        this.showSuccessIcon = false;\n        /**\n         * Specifies when the Error icon will be shown ([see example]({% slug validation_textbox %})).\n         *\n         * The possible values are:\n         *\n         * * `initial`&mdash;The Error icon will be displayed when the component state is\n         * `invalid` and `touched` or `dirty`.\n         * * `boolean`&mdash;The Error icon is displayed, if the condition given by the developer is met.\n         *\n         * @default false\n         */\n        this.showErrorIcon = false;\n        /**\n         * Specifies whether a Clear button will be rendered.\n         *\n         * @default false\n         */\n        this.clearButton = false;\n        /**\n         * Fires each time the value is changed&mdash;\n         * when the component is blurred or the value is cleared through the **Clear** button\n         * ([see example]({% slug overview_textbox %}#toc-events)).\n         * When the value of the component is programmatically changed to `ngModel` or `formControl`\n         * through its API or form binding, the `valueChange` event is not triggered because it\n         * might cause a mix-up with the built-in `valueChange` mechanisms of the `ngModel` or `formControl` bindings.\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires each time the user focuses the `input` element.\n         */\n        this.inputFocus = new EventEmitter();\n        /**\n         * Fires each time the `input` element gets blurred.\n         */\n        this.inputBlur = new EventEmitter();\n        /**\n         * Fires each time the user focuses the TextBox component.\n         *\n         * > To wire the event programmatically, use the `onFocus` property.\n         *\n         * @example\n         * ```ts-no-run\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *  <kendo-textbox (focus)=\"handleFocus()\"></kendo-textbox>\n         * `\n         * })\n         * class AppComponent {\n         *   public handleFocus(): void {\n         *      console.log('Component is isFocused');\n         *   }\n         * }\n         * ```\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * Fires each time the TextBox component gets blurred.\n         *\n         * > To wire the event programmatically, use the `onBlur` property.\n         *\n         * @example\n         * ```ts-no-run\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *  <kendo-textbox (blur)=\"handleBlur()\"></kendo-textbox>\n         * `\n         * })\n         * class AppComponent {\n         *   public handleBlur(): void {\n         *      console.log('Component is blurred');\n         *   }\n         * }\n         * ```\n         */\n        this.onBlur = new EventEmitter();\n        this.hostClasses = true;\n        this._isFocused = false;\n        this.focusChangedProgrammatically = false;\n        this._size = 'medium';\n        this._rounded = 'medium';\n        this._fillMode = 'solid';\n        /**\n         * @hidden\n         */\n        this.handleInputFocus = () => {\n            if (!this.disabled) {\n                if (this.selectOnFocus && this.value) {\n                    this.ngZone.run(() => {\n                        setTimeout(() => { this.selectAll(); });\n                    });\n                }\n                if (hasObservers(this.onFocus)) {\n                    if (!this.isFocused) {\n                        this.ngZone.run(() => {\n                            this.onFocus.emit();\n                        });\n                    }\n                }\n                if (hasObservers(this.inputFocus)) {\n                    if (!this.focusChangedProgrammatically || (this.focusChangedProgrammatically && this.clearButtonClicked)) {\n                        this.ngZone.run(() => {\n                            this.inputFocus.emit();\n                        });\n                    }\n                }\n                this.ngZone.run(() => {\n                    this.isFocused = true;\n                });\n            }\n        };\n        /**\n         * @hidden\n         */\n        this.handleInputBlur = () => {\n            this.changeDetector.markForCheck();\n            if (hasObservers(this.inputBlur) || requiresZoneOnBlur(this.control)) {\n                this.ngZone.run(() => {\n                    this.ngTouched();\n                    this.inputBlur.emit();\n                });\n            }\n        };\n        /**\n         * @hidden\n         */\n        this.handleInput = (ev) => {\n            const target = ev.target;\n            const isBrowserSafari = isSafari(navigator.userAgent);\n            const incomingValue = isBrowserSafari && isJapanese(target.value) ? ev.data : target.value;\n            const [caretStart, caretEnd] = [target.selectionStart, target.selectionEnd];\n            this.updateValue(incomingValue);\n            if (isBrowserSafari) {\n                target.setSelectionRange(caretStart, caretEnd);\n            }\n        };\n        this.ngChange = (_) => { };\n        this.ngTouched = () => { };\n        validatePackage(packageMetadata);\n        this.direction = localizationService.rtl ? 'rtl' : 'ltr';\n    }\n    /**\n     * The size property specifies the padding of the TextBox internal input element\n     * ([see example]({% slug appearance_textbox %}#toc-size)).\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     */\n    set size(size) {\n        const newSize = size ? size : DEFAULT_SIZE$5;\n        this.handleClasses(newSize, 'size');\n        this._size = newSize;\n    }\n    get size() {\n        return this._size;\n    }\n    /**\n     * The rounded property specifies the border radius of the TextBox\n     * ([see example]({% slug appearance_textbox %}#toc-rounded)).\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `full`\n     * * `none`\n     */\n    set rounded(rounded) {\n        const newRounded = rounded ? rounded : DEFAULT_ROUNDED$4;\n        this.handleClasses(newRounded, 'rounded');\n        this._rounded = newRounded;\n    }\n    get rounded() {\n        return this._rounded;\n    }\n    /**\n     * The fillMode property specifies the background and border styles of the TextBox\n     * ([see example]({% slug appearance_textbox %}#toc-fillMode)).\n     *\n     * The possible values are:\n     * * `flat`\n     * * `solid` (default)\n     * * `outline`\n     * * `none`\n     */\n    set fillMode(fillMode) {\n        const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$3;\n        this.handleClasses(newFillMode, 'fillMode');\n        this._fillMode = newFillMode;\n    }\n    get fillMode() {\n        return this._fillMode;\n    }\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n        this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n        return this.tabindex;\n    }\n    get disabledClass() {\n        return this.disabled;\n    }\n    ngOnInit() {\n        this.control = this.injector.get(NgControl, null);\n        this.checkClearButton();\n        this.subscriptions = this.localizationService.changes.subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n        });\n    }\n    ngAfterViewInit() {\n        const hostElement = this.hostElement.nativeElement;\n        let cursorInsideWrapper = false;\n        let tabbing = false;\n        this.ngZone.runOutsideAngular(() => {\n            // focusIn and focusOut are relative to the host element\n            this.subscriptions.add(this.renderer.listen(hostElement, 'focusin', () => {\n                if (!this.isFocused) {\n                    this.ngZone.run(() => {\n                        this.onFocus.emit();\n                        this.isFocused = true;\n                    });\n                }\n            }));\n            this.subscriptions.add(this.renderer.listen(hostElement, 'focusout', (args) => {\n                if (!this.isFocused) {\n                    return;\n                }\n                if (tabbing) {\n                    const closestTextbox = closest(args.relatedTarget, (element) => element === this.hostElement.nativeElement);\n                    if (!closestTextbox) {\n                        this.handleBlur();\n                    }\n                    tabbing = false;\n                }\n                else {\n                    if (!cursorInsideWrapper && !this.clearButtonClicked) {\n                        this.handleBlur();\n                    }\n                }\n            }));\n            this.subscriptions.add(this.renderer.listen(hostElement, 'mouseenter', () => {\n                cursorInsideWrapper = true;\n            }));\n            this.subscriptions.add(this.renderer.listen(hostElement, 'mouseleave', () => {\n                cursorInsideWrapper = false;\n            }));\n            this.subscriptions.add(this.renderer.listen(hostElement, 'keydown', (args) => {\n                if (args.keyCode === Keys.Tab) {\n                    tabbing = true;\n                }\n                else {\n                    tabbing = false;\n                }\n            }));\n        });\n        const stylingInputs = ['size', 'rounded', 'fillMode'];\n        stylingInputs.forEach(input => {\n            this.handleClasses(this[input], input);\n        });\n    }\n    ngOnChanges(changes) {\n        if (changes.disabled || changes.readonly || changes.value) {\n            this.checkClearButton();\n        }\n    }\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n    }\n    /**\n     * Focuses the TextBox.\n     *\n     * @example\n     * ```ts-no-run\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"input.focus()\">Focus the input</button>\n     *  <kendo-textbox #input></kendo-textbox>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n    focus() {\n        if (!this.input) {\n            return;\n        }\n        this.focusChangedProgrammatically = true;\n        this.isFocused = true;\n        this.input.nativeElement.focus();\n        this.focusChangedProgrammatically = false;\n    }\n    /**\n     * Blurs the TextBox.\n     */\n    blur() {\n        this.focusChangedProgrammatically = true;\n        const isFocusedElement = this.hostElement.nativeElement.querySelector(':focus');\n        if (isFocusedElement) {\n            isFocusedElement.blur();\n        }\n        this.isFocused = false;\n        this.focusChangedProgrammatically = false;\n    }\n    /**\n     * @hidden\n     */\n    clearTitle() {\n        return this.localizationService.get('clear');\n    }\n    /**\n     * @hidden\n     */\n    checkClearButton() {\n        this.showClearButton =\n            !this.disabled &&\n                !this.readonly &&\n                this.clearButton &&\n                !!this.value;\n    }\n    /**\n     * @hidden\n     */\n    clearValue(ev) {\n        if (ev) {\n            ev.preventDefault();\n        }\n        this.clearButtonClicked = true;\n        this.input.nativeElement.value = '';\n        this.input.nativeElement.focus();\n        this.updateValue('');\n        this.checkClearButton();\n        this.clearButtonClicked = false;\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.value = value;\n        this.checkClearButton();\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.ngChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.ngTouched = fn;\n    }\n    /**\n     * @hidden\n     * Called when the status of the component changes to or from `disabled`.\n     * Depending on the value, it enables or disables the appropriate DOM element.\n     *\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.changeDetector.markForCheck();\n        this.disabled = isDisabled;\n    }\n    /**\n     * @hidden\n     */\n    showErrorsInitial() {\n        if (!this.control) {\n            return false;\n        }\n        const { invalid, dirty, touched } = this.control;\n        return invalid && (dirty || touched);\n    }\n    /**\n     * @hidden\n     */\n    showSuccessInitial() {\n        if (!this.control) {\n            return false;\n        }\n        const { valid, dirty, touched } = this.control;\n        return valid && (dirty || touched);\n    }\n    /**\n     * @hidden\n     */\n    get isControlInvalid() {\n        return this.control && this.control.touched && !this.control.valid;\n    }\n    /**\n     * @hidden\n     */\n    get successIconClasses() {\n        return this.successIcon\n            ? `${this.successIcon}`\n            : `k-input-validation-icon k-icon k-i-check`;\n    }\n    /**\n     * @hidden\n     */\n    get errorIconClasses() {\n        return this.errorIcon\n            ? `${this.errorIcon}`\n            : `k-input-validation-icon k-icon k-i-exclamation-circle`;\n    }\n    /**\n     * @hidden\n     */\n    get clearButtonClasses() {\n        return this.clearButtonIcon\n            ? this.clearButtonIcon\n            : `k-icon k-i-x`;\n    }\n    /**\n     * @hidden\n     */\n    get hasErrors() {\n        return this.showErrorIcon === 'initial'\n            ? this.showErrorsInitial()\n            : this.showErrorIcon;\n    }\n    /**\n     * @hidden\n     */\n    get isSuccessful() {\n        return this.showSuccessIcon === 'initial'\n            ? this.showSuccessInitial()\n            : this.showSuccessIcon;\n    }\n    setSelection(start, end) {\n        if (this.isFocused) {\n            invokeElementMethod(this.input, 'setSelectionRange', start, end);\n        }\n    }\n    selectAll() {\n        if (this.value) {\n            this.setSelection(0, this.value.length);\n        }\n    }\n    updateValue(value) {\n        if (!areSame(this.value, value)) {\n            this.ngZone.run(() => {\n                this.value = value;\n                this.ngChange(value);\n                this.valueChange.emit(value);\n                this.checkClearButton();\n                this.changeDetector.markForCheck();\n            });\n        }\n    }\n    get isFocused() {\n        return this._isFocused;\n    }\n    set isFocused(value) {\n        if (this._isFocused !== value && this.hostElement) {\n            const element = this.hostElement.nativeElement;\n            if (value && !this.disabled) {\n                this.renderer.addClass(element, FOCUSED$1);\n            }\n            else {\n                this.renderer.removeClass(element, FOCUSED$1);\n            }\n            this._isFocused = value;\n        }\n    }\n    handleBlur() {\n        this.ngZone.run(() => {\n            if (!this.focusChangedProgrammatically) {\n                this.onBlur.emit();\n            }\n            this.isFocused = false;\n        });\n    }\n    handleClasses(value, input) {\n        const elem = this.hostElement.nativeElement;\n        const classes = getStylingClasses('input', input, this[input], value);\n        if (classes.toRemove) {\n            this.renderer.removeClass(elem, classes.toRemove);\n        }\n        if (classes.toAdd) {\n            this.renderer.addClass(elem, classes.toAdd);\n        }\n    }\n}\nTextBoxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextBoxComponent, deps: [{ token: i1.LocalizationService }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.Renderer2 }, { token: i0.Injector }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nTextBoxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TextBoxComponent, selector: \"kendo-textbox\", inputs: { focusableId: \"focusableId\", title: \"title\", disabled: \"disabled\", readonly: \"readonly\", tabindex: \"tabindex\", value: \"value\", selectOnFocus: \"selectOnFocus\", showSuccessIcon: \"showSuccessIcon\", showErrorIcon: \"showErrorIcon\", clearButton: \"clearButton\", successIcon: \"successIcon\", errorIcon: \"errorIcon\", clearButtonIcon: \"clearButtonIcon\", size: \"size\", rounded: \"rounded\", fillMode: \"fillMode\", tabIndex: \"tabIndex\", placeholder: \"placeholder\", maxlength: \"maxlength\" }, outputs: { valueChange: \"valueChange\", inputFocus: \"inputFocus\", inputBlur: \"inputBlur\", onFocus: \"focus\", onBlur: \"blur\" }, host: { properties: { \"class.k-disabled\": \"this.disabledClass\", \"class.k-textbox\": \"this.hostClasses\", \"class.k-input\": \"this.hostClasses\", \"attr.dir\": \"this.direction\" } }, providers: [\n        LocalizationService,\n        { provide: L10N_PREFIX, useValue: 'kendo.textbox' },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TextBoxComponent),\n            multi: true\n        },\n        { provide: KendoInput, useExisting: forwardRef(() => TextBoxComponent) }\n    ], queries: [{ propertyName: \"suffixTemplate\", first: true, predicate: TextBoxSuffixTemplateDirective, descendants: true }, { propertyName: \"prefixTemplate\", first: true, predicate: TextBoxPrefixTemplateDirective, descendants: true }], viewQueries: [{ propertyName: \"input\", first: true, predicate: [\"input\"], descendants: true, static: true }], exportAs: [\"kendoTextBox\"], usesOnChanges: true, ngImport: i0, template: `\n        <ng-container kendoTextBoxLocalizedMessages\n            i18n-clear=\"kendo.textbox.clear|The title for the **Clear** button in the TextBox.\"\n            clear=\"Clear\">\n        </ng-container>\n        <span class=\"k-input-prefix\">\n            <ng-template\n                *ngIf=\"prefixTemplate\"\n                [ngTemplateOutlet]=\"prefixTemplate?.templateRef\">\n            </ng-template>\n        </span>\n        <input #input\n            class=\"k-input-inner\"\n            [id]=\"focusableId\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [attr.tabindex]=\"disabled ? undefined : tabindex\"\n            [value]=\"value\"\n            [attr.placeholder]=\"placeholder\"\n            [attr.title]=\"title\"\n            [attr.maxlength]=\"maxlength\"\n            [attr.aria-invalid]=\"isControlInvalid\"\n            [kendoEventsOutsideAngular]=\"{\n                focus: handleInputFocus,\n                blur: handleInputBlur,\n                input: handleInput}\"\n        />\n        <span\n            role=\"button\"\n            class=\"k-clear-value\"\n            *ngIf=\"showClearButton\"\n            (click)=\"clearValue()\"\n            (mousedown)=\"$event.preventDefault()\"\n            [tabindex]=\"tabIndex\"\n            [attr.aria-label]=\"clearTitle()\"\n            [title]=\"clearTitle()\"\n            (keydown.enter)=\"clearValue($event)\"\n            (keydown.space)=\"clearValue($event)\">\n                <span [ngClass]=\"clearButtonClasses\"></span>\n        </span>\n        <span *ngIf=\"hasErrors\" [ngClass]=\"errorIconClasses\"></span>\n        <span *ngIf=\"isSuccessful\" [ngClass]=\"successIconClasses\"></span>\n        <span class=\"k-input-suffix\">\n            <ng-template\n                *ngIf=\"suffixTemplate\"\n                [ngTemplateOutlet]=\"suffixTemplate?.templateRef\">\n            </ng-template>\n        </span>\n    `, isInline: true, directives: [{ type: LocalizedTextBoxMessagesDirective, selector: \"[kendoTextBoxLocalizedMessages]\" }, { type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i3.EventsOutsideAngularDirective, selector: \"[kendoEventsOutsideAngular]\", inputs: [\"kendoEventsOutsideAngular\", \"scope\"] }, { type: i1$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextBoxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoTextBox',\n                    providers: [\n                        LocalizationService,\n                        { provide: L10N_PREFIX, useValue: 'kendo.textbox' },\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => TextBoxComponent),\n                            multi: true\n                        },\n                        { provide: KendoInput, useExisting: forwardRef(() => TextBoxComponent) }\n                    ],\n                    selector: 'kendo-textbox',\n                    template: `\n        <ng-container kendoTextBoxLocalizedMessages\n            i18n-clear=\"kendo.textbox.clear|The title for the **Clear** button in the TextBox.\"\n            clear=\"Clear\">\n        </ng-container>\n        <span class=\"k-input-prefix\">\n            <ng-template\n                *ngIf=\"prefixTemplate\"\n                [ngTemplateOutlet]=\"prefixTemplate?.templateRef\">\n            </ng-template>\n        </span>\n        <input #input\n            class=\"k-input-inner\"\n            [id]=\"focusableId\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [attr.tabindex]=\"disabled ? undefined : tabindex\"\n            [value]=\"value\"\n            [attr.placeholder]=\"placeholder\"\n            [attr.title]=\"title\"\n            [attr.maxlength]=\"maxlength\"\n            [attr.aria-invalid]=\"isControlInvalid\"\n            [kendoEventsOutsideAngular]=\"{\n                focus: handleInputFocus,\n                blur: handleInputBlur,\n                input: handleInput}\"\n        />\n        <span\n            role=\"button\"\n            class=\"k-clear-value\"\n            *ngIf=\"showClearButton\"\n            (click)=\"clearValue()\"\n            (mousedown)=\"$event.preventDefault()\"\n            [tabindex]=\"tabIndex\"\n            [attr.aria-label]=\"clearTitle()\"\n            [title]=\"clearTitle()\"\n            (keydown.enter)=\"clearValue($event)\"\n            (keydown.space)=\"clearValue($event)\">\n                <span [ngClass]=\"clearButtonClasses\"></span>\n        </span>\n        <span *ngIf=\"hasErrors\" [ngClass]=\"errorIconClasses\"></span>\n        <span *ngIf=\"isSuccessful\" [ngClass]=\"successIconClasses\"></span>\n        <span class=\"k-input-suffix\">\n            <ng-template\n                *ngIf=\"suffixTemplate\"\n                [ngTemplateOutlet]=\"suffixTemplate?.templateRef\">\n            </ng-template>\n        </span>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i0.Injector }, { type: i0.ElementRef }]; }, propDecorators: { focusableId: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], selectOnFocus: [{\n                type: Input\n            }], showSuccessIcon: [{\n                type: Input\n            }], showErrorIcon: [{\n                type: Input\n            }], clearButton: [{\n                type: Input\n            }], successIcon: [{\n                type: Input\n            }], errorIcon: [{\n                type: Input\n            }], clearButtonIcon: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], rounded: [{\n                type: Input\n            }], fillMode: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], maxlength: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], inputFocus: [{\n                type: Output\n            }], inputBlur: [{\n                type: Output\n            }], onFocus: [{\n                type: Output,\n                args: ['focus']\n            }], onBlur: [{\n                type: Output,\n                args: ['blur']\n            }], input: [{\n                type: ViewChild,\n                args: ['input', { static: true }]\n            }], suffixTemplate: [{\n                type: ContentChild,\n                args: [TextBoxSuffixTemplateDirective, { static: false }]\n            }], prefixTemplate: [{\n                type: ContentChild,\n                args: [TextBoxPrefixTemplateDirective, { static: false }]\n            }], disabledClass: [{\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }], hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-textbox']\n            }, {\n                type: HostBinding,\n                args: ['class.k-input']\n            }], direction: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }] } });\n\n/**\n * Custom component messages override default component messages.\n */\nclass TextBoxCustomMessagesComponent extends TextBoxMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nTextBoxCustomMessagesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextBoxCustomMessagesComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nTextBoxCustomMessagesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TextBoxCustomMessagesComponent, selector: \"kendo-textbox-messages\", providers: [\n        {\n            provide: TextBoxMessages,\n            useExisting: forwardRef(() => TextBoxCustomMessagesComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextBoxCustomMessagesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: TextBoxMessages,\n                            useExisting: forwardRef(() => TextBoxCustomMessagesComponent)\n                        }\n                    ],\n                    selector: 'kendo-textbox-messages',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * Specifies a separator in the content of components like the TextArea and the TextBox. ([see examples]({% slug adornments_textbox %}#toc-separator)).\n * @example\n * ```ts-no-run\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-textbox>\n *    <ng-template kendoTextBoxSuffixTemplate>\n *        <kendo-input-separator></kendo-input-separator>\n *        <button kendoButton look=\"clear\" icon=\"image\"></button>\n *    </ng-template>\n *  </kendo-textbox>\n * `\n * })\n * class AppComponent {}\n * ```\n */\nclass InputSeparatorComponent {\n    constructor() {\n        this.hostClass = true;\n    }\n}\nInputSeparatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputSeparatorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nInputSeparatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: InputSeparatorComponent, selector: \"kendo-input-separator, kendo-textbox-separator\", host: { properties: { \"class.k-input-separator\": \"this.hostClass\" } }, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputSeparatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-input-separator, kendo-textbox-separator',\n                    template: ``\n                }]\n        }], propDecorators: { hostClass: [{\n                type: HostBinding,\n                args: ['class.k-input-separator']\n            }] } });\n\n/**\n * @hidden\n */\nconst SHARED_DIRECTIVES = [\n    InputSeparatorComponent,\n    TextAreaDirective\n];\n/**\n * @hidden\n */\nclass SharedModule {\n}\nSharedModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSharedModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedModule, declarations: [InputSeparatorComponent,\n        TextAreaDirective], exports: [InputSeparatorComponent,\n        TextAreaDirective] });\nSharedModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [SHARED_DIRECTIVES],\n                    exports: [SHARED_DIRECTIVES]\n                }]\n        }] });\n\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the TextBox directive.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the TextBox module\n * import { TextBoxModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, TextBoxModule], // import TextBox module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass TextBoxModule {\n}\nTextBoxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextBoxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTextBoxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextBoxModule, declarations: [TextBoxDirective,\n        TextBoxComponent,\n        TextBoxSuffixTemplateDirective,\n        TextBoxPrefixTemplateDirective,\n        TextBoxCustomMessagesComponent,\n        LocalizedTextBoxMessagesDirective], imports: [CommonModule, EventsModule, SharedModule], exports: [TextBoxDirective,\n        TextBoxComponent,\n        TextBoxSuffixTemplateDirective,\n        TextBoxPrefixTemplateDirective,\n        EventsModule,\n        TextBoxCustomMessagesComponent,\n        LocalizedTextBoxMessagesDirective, InputSeparatorComponent, TextAreaDirective] });\nTextBoxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextBoxModule, imports: [[CommonModule, EventsModule, SharedModule], EventsModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextBoxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        TextBoxDirective,\n                        TextBoxComponent,\n                        TextBoxSuffixTemplateDirective,\n                        TextBoxPrefixTemplateDirective,\n                        TextBoxCustomMessagesComponent,\n                        LocalizedTextBoxMessagesDirective\n                    ],\n                    exports: [\n                        TextBoxDirective,\n                        TextBoxComponent,\n                        TextBoxSuffixTemplateDirective,\n                        TextBoxPrefixTemplateDirective,\n                        EventsModule,\n                        TextBoxCustomMessagesComponent,\n                        LocalizedTextBoxMessagesDirective,\n                        SHARED_DIRECTIVES\n                    ],\n                    imports: [CommonModule, EventsModule, SharedModule]\n                }]\n        }] });\n\n/**\n * @hidden\n */\nclass TextFieldsBase {\n    constructor(localizationService, ngZone, changeDetector, renderer, injector, hostElement) {\n        this.localizationService = localizationService;\n        this.ngZone = ngZone;\n        this.changeDetector = changeDetector;\n        this.renderer = renderer;\n        this.injector = injector;\n        this.hostElement = hostElement;\n        /**\n         * Sets the `title` attribute of the internal textarea input element of the component.\n         */\n        this.title = '';\n        /**\n         * Sets the disabled state of the TextArea component.\n         *\n         * @default false\n         */\n        this.disabled = false;\n        /**\n         * Sets the read-only state of the TextArea component.\n         *\n         * @default false\n         */\n        this.readonly = false;\n        /**\n         * Provides a value for the TextArea component.\n         */\n        this.value = null;\n        /**\n         * Determines whether the whole value will be selected when the TextArea is clicked. Defaults to `false`.\n         *\n         * @default false\n         */\n        this.selectOnFocus = false;\n        /**\n         * Fires each time the user focuses the internal textarea element of the component.\n         * This event is useful when you need to distinguish between focusing the textarea element and focusing one of its adornments.\n         */\n        this.inputFocus = new EventEmitter();\n        /**\n         * Fires each time the internal textarea element gets blurred.\n         * This event is useful when adornments are used, in order to distinguish between blurring the textarea element and blurring the whole TextArea component.\n         */\n        this.inputBlur = new EventEmitter();\n        this.subscriptions = new Subscription();\n        this._isFocused = false;\n        this.focusChangedProgrammatically = false;\n        /**\n         * @hidden\n         */\n        this.handleInputBlur = () => {\n            this.changeDetector.markForCheck();\n            if (hasObservers(this.inputBlur) || requiresZoneOnBlur(this.control)) {\n                this.ngZone.run(() => {\n                    this.ngTouched();\n                    this.inputBlur.emit();\n                });\n            }\n        };\n        this.ngChange = (_) => { };\n        this.ngTouched = () => { };\n    }\n    get disabledClass() {\n        return this.disabled;\n    }\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n    }\n    /**\n     * @hidden\n     * Called when the status of the component changes to or from `disabled`.\n     * Depending on the value, it enables or disables the appropriate DOM element.\n     *\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.changeDetector.markForCheck();\n        this.disabled = isDisabled;\n    }\n}\nTextFieldsBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextFieldsBase, deps: [{ token: i1.LocalizationService }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.Renderer2 }, { token: i0.Injector }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nTextFieldsBase.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TextFieldsBase, selector: \"kendo-textfield-base\", inputs: { title: \"title\", disabled: \"disabled\", readonly: \"readonly\", value: \"value\", selectOnFocus: \"selectOnFocus\", placeholder: \"placeholder\" }, outputs: { inputFocus: \"inputFocus\", inputBlur: \"inputBlur\" }, host: { properties: { \"class.k-disabled\": \"this.disabledClass\", \"attr.dir\": \"this.direction\" } }, viewQueries: [{ propertyName: \"input\", first: true, predicate: [\"input\"], descendants: true, static: true }], ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextFieldsBase, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-textfield-base',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i0.Injector }, { type: i0.ElementRef }]; }, propDecorators: { title: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], selectOnFocus: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], inputFocus: [{\n                type: Output\n            }], inputBlur: [{\n                type: Output\n            }], input: [{\n                type: ViewChild,\n                args: ['input', { static: true }]\n            }], disabledClass: [{\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }], direction: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }] } });\n\nconst resizeClasses = {\n    'vertical': 'k-resize-vertical',\n    'horizontal': 'k-resize-horizontal',\n    'both': 'k-resize-both',\n    'none': 'k-resize-none',\n    'auto': 'k-resize-none'\n};\nconst FOCUSED = 'k-focus';\nconst DEFAULT_SIZE$4 = 'medium';\nconst DEFAULT_ROUNDED$3 = 'medium';\nconst DEFAULT_FILL_MODE$2 = 'solid';\n/**\n * Represents the [Kendo UI TextArea component for Angular]({% slug overview_textarea %}).\n */\nclass TextAreaComponent extends TextFieldsBase {\n    constructor(localizationService, ngZone, changeDetector, renderer, injector, hostElement) {\n        super(localizationService, ngZone, changeDetector, renderer, injector, hostElement);\n        this.localizationService = localizationService;\n        this.ngZone = ngZone;\n        this.changeDetector = changeDetector;\n        this.renderer = renderer;\n        this.injector = injector;\n        this.hostElement = hostElement;\n        /**\n         * @hidden\n         */\n        this.focusableId = `k-${guid()}`;\n        this.hostClasses = true;\n        /**\n         * Specifies the flow direction of the TextArea sections. This property is useful when adornments are used, in order to specify\n         * their position in relation to the textarea element.\n         *\n         * The possible values are:\n         * * `vertical`(Default) &mdash;TextArea sections are placed from top to bottom.\n         * * `horizontal`&mdash;TextArea sections are placed from left to right in `ltr`, and from right to left in `rtl` mode.\n         */\n        this.flow = 'vertical';\n        /**\n         * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n         */\n        this.tabindex = 0;\n        /**\n         * Configures the resize behavior of the TextArea.\n         *\n         * The possible values are:\n         * * `vertical`(Default)&mdash;The TextArea component can be resized only vertically.\n         * * `horizontal`&mdash;The TextArea component can be resized only horizontally.\n         * * `both`&mdash;The TextArea component can be resized in both (horizontal and vertical) directions.\n         * * `auto`&mdash;Specifies whether the TextArea component will adjust its height automatically, based on the content.\n         * * `none`&mdash;The TextArea cannot be resized.\n         *\n         */\n        this.resizable = 'vertical';\n        /**\n         * Fires each time the user focuses the TextArea component.\n         *\n         * > To wire the event programmatically, use the `onFocus` property.\n         *\n         * @example\n         * ```ts\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *  <kendo-textarea (focus)=\"handleFocus()\"></kendo-textarea>\n         * `\n         * })\n         * class AppComponent {\n         *   public handleFocus(): void {\n         *      console.log('Component is focused');\n         *   }\n         * }\n         * ```\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * Fires each time the TextArea component gets blurred.\n         *\n         * > To wire the event programmatically, use the `onBlur` property.\n         *\n         * @example\n         * ```ts\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *  <kendo-textarea (blur)=\"handleBlur()\"></kendo-textarea>\n         * `\n         * })\n         * class AppComponent {\n         *   public handleBlur(): void {\n         *      console.log('Component is blurred');\n         *   }\n         * }\n         * ```\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * Fires each time the value is changed or the component is blurred\n         * ([see example]({% slug overview_textarea %}#toc-events)).\n         * When the component value is changed programmatically or via its form control binding, the valueChange event is not emitted.\n         */\n        this.valueChange = new EventEmitter();\n        this._size = 'medium';\n        this._rounded = 'medium';\n        this._fillMode = 'solid';\n        /**\n         * @hidden\n         */\n        this.handleInput = (ev) => {\n            let incomingValue = ev.target.value;\n            this.updateValue(incomingValue);\n            this.resize();\n        };\n        /**\n         * @hidden\n         */\n        this.handleInputFocus = () => {\n            if (!this.disabled) {\n                if (this.selectOnFocus && this.value) {\n                    this.ngZone.run(() => {\n                        setTimeout(() => { this.selectAll(); });\n                    });\n                }\n                if (hasObservers(this.onFocus)) {\n                    if (!this.isFocused) {\n                        this.ngZone.run(() => {\n                            this.onFocus.emit();\n                        });\n                    }\n                }\n                if (hasObservers(this.inputFocus)) {\n                    if (!this.focusChangedProgrammatically) {\n                        this.ngZone.run(() => {\n                            this.inputFocus.emit();\n                        });\n                    }\n                }\n                this.ngZone.run(() => {\n                    this.isFocused = true;\n                });\n            }\n        };\n        validatePackage(packageMetadata);\n        this.direction = localizationService.rtl ? 'rtl' : 'ltr';\n    }\n    get flowCol() {\n        return this.flow === 'vertical';\n    }\n    get flowRow() {\n        return this.flow === 'horizontal';\n    }\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n        this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n        return this.tabindex;\n    }\n    /**\n     * The size property specifies the padding of the internal textarea element\n     * ([see example]({% slug appearance_textarea %}#toc-size)).\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     */\n    set size(size) {\n        const newSize = size ? size : DEFAULT_SIZE$4;\n        this.handleClasses(newSize, 'size');\n        this._size = newSize;\n    }\n    get size() {\n        return this._size;\n    }\n    /**\n     * The rounded property specifies the border radius of the TextArea\n     * ([see example]({% slug appearance_textarea %}#toc-rounded)).\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     */\n    set rounded(rounded) {\n        const newRounded = rounded ? rounded : DEFAULT_ROUNDED$3;\n        this.handleClasses(newRounded, 'rounded');\n        this._rounded = newRounded;\n    }\n    get rounded() {\n        return this._rounded;\n    }\n    /**\n     * The fillMode property specifies the background and border styles of the TextArea\n     * ([see example]({% slug appearance_textarea %}#toc-fillMode)).\n     *\n     * The possible values are:\n     * * `flat`\n     * * `solid` (default)\n     * * `outline`\n     * * `none`\n     */\n    set fillMode(fillMode) {\n        const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$2;\n        this.handleClasses(newFillMode, 'fillMode');\n        this._fillMode = newFillMode;\n    }\n    get fillMode() {\n        return this._fillMode;\n    }\n    ngAfterViewInit() {\n        const hostElement = this.hostElement.nativeElement;\n        let cursorInsideWrapper = false;\n        let tabbing = false;\n        this.ngZone.runOutsideAngular(() => {\n            // focusIn and focusOut are relative to the host element\n            this.subscriptions.add(this.renderer.listen(hostElement, 'focusin', () => {\n                if (!this.isFocused) {\n                    this.ngZone.run(() => {\n                        this.onFocus.emit();\n                        this.isFocused = true;\n                    });\n                }\n            }));\n            this.subscriptions.add(this.renderer.listen(hostElement, 'focusout', (args) => {\n                if (!this.isFocused) {\n                    return;\n                }\n                if (tabbing) {\n                    const closestTextbox = closest(args.relatedTarget, (element) => element === this.hostElement.nativeElement);\n                    if (!closestTextbox) {\n                        this.handleBlur();\n                    }\n                    tabbing = false;\n                }\n                else {\n                    if (!cursorInsideWrapper) {\n                        this.handleBlur();\n                    }\n                }\n            }));\n            this.subscriptions.add(this.renderer.listen(hostElement, 'mouseenter', () => {\n                cursorInsideWrapper = true;\n            }));\n            this.subscriptions.add(this.renderer.listen(hostElement, 'mouseleave', () => {\n                cursorInsideWrapper = false;\n            }));\n            this.subscriptions.add(this.renderer.listen(hostElement, 'keydown', (args) => {\n                if (args.keyCode === Keys.Tab) {\n                    tabbing = true;\n                }\n                else {\n                    tabbing = false;\n                }\n            }));\n            this.handleFlow();\n        });\n        const stylingInputs = ['size', 'rounded', 'fillMode'];\n        stylingInputs.forEach(input => {\n            this.handleClasses(this[input], input);\n        });\n    }\n    ngOnInit() {\n        this.control = this.injector.get(NgControl, null);\n        if (isDocumentAvailable() && this.resizable === 'auto') {\n            this.resizeSubscription = fromEvent(window, 'resize')\n                .pipe((debounceTime(50)))\n                .subscribe(() => this.resize());\n        }\n        if (this.hostElement) {\n            this.renderer.removeAttribute(this.hostElement.nativeElement, \"tabindex\");\n        }\n        this.subscriptions = this.localizationService.changes.subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n        });\n    }\n    ngOnChanges(changes) {\n        const hostElement = this.hostElement.nativeElement;\n        const element = this.input.nativeElement;\n        if (changes.flow) {\n            this.handleFlow();\n        }\n        if (changes.resizable) {\n            if (this.resizable === 'auto') {\n                this.renderer.removeClass(element, '\\!k-overflow-y-auto');\n                this.initialHeight = element.offsetHeight;\n            }\n            else {\n                this.renderer.addClass(element, '\\!k-overflow-y-auto');\n                element.style.height = `${this.initialHeight}px`;\n            }\n        }\n        if (changes.cols) {\n            if (isPresent(changes.cols.currentValue)) {\n                this.renderer.setStyle(hostElement, 'width', 'auto');\n            }\n            else {\n                this.renderer.removeStyle(hostElement, 'width');\n            }\n        }\n        if (changes.value) {\n            this.resize();\n        }\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.value = value;\n        this.resize();\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.ngChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.ngTouched = fn;\n    }\n    updateValue(value) {\n        if (!areSame(this.value, value)) {\n            this.ngZone.run(() => {\n                this.value = value;\n                this.ngChange(value);\n                this.valueChange.emit(value);\n                this.changeDetector.markForCheck();\n            });\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this.resizeSubscription) {\n            this.resizeSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @hidden\n     */\n    get resizableClass() {\n        return resizeClasses[this.resizable];\n    }\n    /**\n     * @hidden\n     */\n    get isControlInvalid() {\n        return this.control && this.control.touched && !this.control.valid;\n    }\n    /**\n     * Focuses the TextArea component.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"textarea.focus()\">Focus the textarea</button>\n     *  <kendo-textarea #textarea></kendo-textarea>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n    focus() {\n        if (!this.input) {\n            return;\n        }\n        this.focusChangedProgrammatically = true;\n        this.isFocused = true;\n        this.input.nativeElement.focus();\n        this.focusChangedProgrammatically = false;\n    }\n    /**\n     * Blurs the TextArea component.\n     */\n    blur() {\n        this.focusChangedProgrammatically = true;\n        const isFocusedElement = this.hostElement.nativeElement.querySelector(':focus');\n        if (isFocusedElement) {\n            isFocusedElement.blur();\n        }\n        this.isFocused = false;\n        this.focusChangedProgrammatically = false;\n    }\n    resize() {\n        if (this.resizable !== 'auto') {\n            return;\n        }\n        // The logic of the resize method, does not depend on Angular and thus moving it outisde of it\n        // We need to ensure that the resizing logic runs after the value is updated thus the setTimout\n        this.ngZone.runOutsideAngular(() => {\n            setTimeout(() => {\n                const hostElement = this.hostElement.nativeElement;\n                const element = this.input.nativeElement;\n                this.renderer.setStyle(element, 'height', `${this.initialHeight}px`);\n                const scrollHeight = element.scrollHeight;\n                this.renderer.setStyle(hostElement, 'min-height', `${scrollHeight}px`);\n                if (scrollHeight > this.initialHeight) {\n                    this.renderer.setStyle(element, 'height', `${scrollHeight}px`);\n                }\n            }, 0);\n        });\n    }\n    get isFocused() {\n        return this._isFocused;\n    }\n    set isFocused(value) {\n        if (this._isFocused !== value && this.hostElement) {\n            const element = this.hostElement.nativeElement;\n            if (value && !this.disabled) {\n                this.renderer.addClass(element, FOCUSED);\n            }\n            else {\n                this.renderer.removeClass(element, FOCUSED);\n            }\n            this._isFocused = value;\n        }\n    }\n    handleBlur() {\n        this.ngZone.run(() => {\n            if (!this.focusChangedProgrammatically) {\n                this.onBlur.emit();\n            }\n            this.isFocused = false;\n        });\n    }\n    setSelection(start, end) {\n        if (this.isFocused) {\n            invokeElementMethod(this.input, 'setSelectionRange', start, end);\n        }\n    }\n    selectAll() {\n        if (this.value) {\n            this.setSelection(0, this.value.length);\n        }\n    }\n    handleClasses(value, input) {\n        const elem = this.hostElement.nativeElement;\n        const classes = getStylingClasses('input', input, this[input], value);\n        if (classes.toRemove) {\n            this.renderer.removeClass(elem, classes.toRemove);\n        }\n        if (classes.toAdd) {\n            this.renderer.addClass(elem, classes.toAdd);\n        }\n    }\n    handleFlow() {\n        const isVertical = this.flow === 'vertical';\n        const hostElement = this.hostElement.nativeElement;\n        const element = this.input.nativeElement;\n        const suffix = hostElement.children[1];\n        this.renderer[isVertical ? 'addClass' : 'removeClass'](element, '\\!k-flex-none');\n        if (suffix) {\n            this.renderer[isVertical ? 'removeClass' : 'addClass'](suffix, '\\!k-align-items-start');\n        }\n    }\n}\nTextAreaComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextAreaComponent, deps: [{ token: i1.LocalizationService }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.Renderer2 }, { token: i0.Injector }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nTextAreaComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TextAreaComponent, selector: \"kendo-textarea\", inputs: { focusableId: \"focusableId\", flow: \"flow\", rows: \"rows\", cols: \"cols\", maxlength: \"maxlength\", tabindex: \"tabindex\", tabIndex: \"tabIndex\", resizable: \"resizable\", size: \"size\", rounded: \"rounded\", fillMode: \"fillMode\" }, outputs: { onFocus: \"focus\", onBlur: \"blur\", valueChange: \"valueChange\" }, host: { properties: { \"class.k-textarea\": \"this.hostClasses\", \"class.k-input\": \"this.hostClasses\", \"class.!k-flex-col\": \"this.flowCol\", \"class.!k-flex-row\": \"this.flowRow\" } }, providers: [\n        LocalizationService,\n        { provide: L10N_PREFIX, useValue: 'kendo.textarea' },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TextAreaComponent),\n            multi: true\n        },\n        { provide: KendoInput, useExisting: forwardRef(() => TextAreaComponent) }\n    ], exportAs: [\"kendoTextArea\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `\n        <textarea\n            #input\n            [attr.aria-multiline]=\"true\"\n            [attr.aria-disabled]=\"disabled ? true : undefined\"\n            [attr.aria-readonly]=\"readonly ? true : undefined\"\n            class=\"k-input-inner\"\n            [ngClass]=\"resizableClass\"\n            [id]=\"focusableId\"\n            [value]=\"value\"\n            [attr.placeholder]=\"placeholder\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [attr.rows]=\"rows\"\n            [attr.cols]=\"cols\"\n            [attr.tabindex]=\"tabIndex\"\n            [attr.title]=\"title\"\n            [attr.maxlength]=\"maxlength\"\n            [attr.aria-invalid]=\"isControlInvalid\"\n            [kendoEventsOutsideAngular]=\"{\n                focus: handleInputFocus,\n                blur: handleInputBlur,\n                input: handleInput}\">\n            </textarea>\n            <ng-content select=\"kendo-textarea-suffix\"></ng-content>\n    `, isInline: true, directives: [{ type: i1$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3.EventsOutsideAngularDirective, selector: \"[kendoEventsOutsideAngular]\", inputs: [\"kendoEventsOutsideAngular\", \"scope\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextAreaComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoTextArea',\n                    providers: [\n                        LocalizationService,\n                        { provide: L10N_PREFIX, useValue: 'kendo.textarea' },\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => TextAreaComponent),\n                            multi: true\n                        },\n                        { provide: KendoInput, useExisting: forwardRef(() => TextAreaComponent) }\n                    ],\n                    selector: 'kendo-textarea',\n                    template: `\n        <textarea\n            #input\n            [attr.aria-multiline]=\"true\"\n            [attr.aria-disabled]=\"disabled ? true : undefined\"\n            [attr.aria-readonly]=\"readonly ? true : undefined\"\n            class=\"k-input-inner\"\n            [ngClass]=\"resizableClass\"\n            [id]=\"focusableId\"\n            [value]=\"value\"\n            [attr.placeholder]=\"placeholder\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [attr.rows]=\"rows\"\n            [attr.cols]=\"cols\"\n            [attr.tabindex]=\"tabIndex\"\n            [attr.title]=\"title\"\n            [attr.maxlength]=\"maxlength\"\n            [attr.aria-invalid]=\"isControlInvalid\"\n            [kendoEventsOutsideAngular]=\"{\n                focus: handleInputFocus,\n                blur: handleInputBlur,\n                input: handleInput}\">\n            </textarea>\n            <ng-content select=\"kendo-textarea-suffix\"></ng-content>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i0.Injector }, { type: i0.ElementRef }]; }, propDecorators: { focusableId: [{\n                type: Input\n            }], hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-textarea']\n            }, {\n                type: HostBinding,\n                args: ['class.k-input']\n            }], flowCol: [{\n                type: HostBinding,\n                args: ['class.\\!k-flex-col']\n            }], flowRow: [{\n                type: HostBinding,\n                args: ['class.\\!k-flex-row']\n            }], flow: [{\n                type: Input\n            }], rows: [{\n                type: Input\n            }], cols: [{\n                type: Input\n            }], maxlength: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], resizable: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], rounded: [{\n                type: Input\n            }], fillMode: [{\n                type: Input\n            }], onFocus: [{\n                type: Output,\n                args: ['focus']\n            }], onBlur: [{\n                type: Output,\n                args: ['blur']\n            }], valueChange: [{\n                type: Output\n            }] } });\n\n/**\n * Specifies the adornments in the suffix container ([see example]({% slug textarea_adornments %})).\n * ```ts-no-run\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-textarea>\n *    <kendo-textarea-suffix>\n *        <button kendoButton look=\"clear\" icon=\"image\"></button>\n *    </kendo-textarea-suffix>\n *  </kendo-textarea>\n * `\n * })\n * class AppComponent {}\n * ```\n */\nclass TextAreaSuffixComponent {\n    constructor() {\n        this.hostClass = true;\n    }\n}\nTextAreaSuffixComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextAreaSuffixComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTextAreaSuffixComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TextAreaSuffixComponent, selector: \"kendo-textarea-suffix\", host: { properties: { \"class.k-input-suffix\": \"this.hostClass\" } }, exportAs: [\"kendoTextAreaSuffix\"], ngImport: i0, template: `<ng-content></ng-content>`, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextAreaSuffixComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoTextAreaSuffix',\n                    selector: 'kendo-textarea-suffix',\n                    template: `<ng-content></ng-content>`\n                }]\n        }], propDecorators: { hostClass: [{\n                type: HostBinding,\n                args: ['class.k-input-suffix']\n            }] } });\n\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the TextArea component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the TextArea module\n * import { TextAreaModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, TextAreaModule], // import TextArea module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass TextAreaModule {\n}\nTextAreaModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextAreaModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTextAreaModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextAreaModule, declarations: [TextAreaComponent,\n        TextAreaSuffixComponent], imports: [CommonModule, EventsModule, SharedModule], exports: [TextAreaComponent,\n        EventsModule,\n        TextAreaSuffixComponent, InputSeparatorComponent, TextAreaDirective] });\nTextAreaModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextAreaModule, imports: [[CommonModule, EventsModule, SharedModule], EventsModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TextAreaModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        TextAreaComponent,\n                        TextAreaSuffixComponent\n                    ],\n                    exports: [\n                        TextAreaComponent,\n                        EventsModule,\n                        TextAreaSuffixComponent,\n                        SHARED_DIRECTIVES\n                    ],\n                    imports: [CommonModule, EventsModule, SharedModule]\n                }]\n        }] });\n\n// eslint-disable max-line-length\n/**\n * @hidden\n */\nconst PALETTEPRESETS = {\n    basic: {\n        colors: '000000,7f7f7f,880015,ed1c24,ff7f27,fff200,22b14c,00a2e8,3f48cc,a349a4,ffffff,c3c3c3,b97a57,ffaec9,ffc90e,efe4b0,b5e61d,99d9ea,7092be,c8bfe7',\n        columns: 10\n    },\n    office: {\n        colors: 'ffffff, 000000, e6e6e6, 435569, 4371c4, ed7e32, a5a4a5, febf04, 5a9bd5, 71ae48, f2f2f3, 7f7f7f, d1cece, d5dde3, dae1f4, fce5d4, deeded, fff2cc, deeaf6, e1efd9, d7d8d8, 585959, aeabab, adbaca, b4c5e7, f6caac, dbdbdb, ffe498, bcd6ee, c5e0b2, bfbfc0, 3f3f3f, 767070, 8595b1, 8fabdb, f5b183, c9c8c9, fed965, 9bc4e5, a8d08d, a5a5a6, 262625, 393939, 334050, 2e5496, c45a11, 7b7b7a, bf9000, 2f75b5, 548235, 7f7f7f, 0b0c0c, 161616, 222a34, 203764, 843d0b, 525252, 7f6000, 1d4d79, 375623',\n        columns: 10\n    },\n    apex: {\n        colors: 'ffffff, 000000, c9c2d1, 69676d, ceb966, 9cb084, 6bb1c9, 6585cf, 7e6bc9, a379bb, f2f2f2, 7f7f7f, f4f2f5, e0e0e2, f5f1e0, ebefe6, e1eff4, e0e6f5, e5e1f4, ece4f1, d8d8d8, 595959, e9e6ec, c2c1c5, ebe3c1, d7dfcd, c3dfe9, c1ceeb, cbc3e9, dac9e3, bfbfbf, 3f3f3f, dedae3, a4a3a8, e1d5a3, c3cfb5, a6d0de, a2b5e2, b1a6de, c7aed6, a5a5a5, 262626, 9688a5, 4e4d51, ae9638, 758c5a, 3d8da9, 365bb0, 533da9, 7d4d99, 7f7f7f, 0c0c0c, 635672, 343336, 746425, 4e5d3c, 295e70, 243c75, 372970, 533366',\n        columns: 10\n    },\n    austin: {\n        colors: 'ffffff, 000000, caf278, 3e3d2d, 94c600, 71685a, ff6700, 909465, 956b43, fea022, f2f2f2, 7f7f7f, f4fce4, dddcd0, efffc0, e3e1dc, ffe0cb, e8e9df, ece1d6, feecd2, d8d8d8, 595959, e9f9c9, bbb9a1, dfff82, c8c3ba, ffc299, d2d4c0, dac3ad, fed9a6, bfbfbf, 3f3f3f, dff7ae, ada598, cfff43, ada598, ffa365, bcbfa1, c8a585, fec67a, a5a5a5, 262626, a9ea25, 2e2d21, 6f9400, 544e43, bf4d00, 6c6f4b, 6f5032, d77b00, 7f7f7f, 0c0c0c, 74a50f, 1f1e16, 4a6300, 38342d, 7f3300, 484a32, 4a3521, 8f5200',\n        columns: 10\n    },\n    clarity: {\n        colors: 'ffffff, 292934, f3f2dc, d2533c, 93a299, ad8f67, 726056, 4c5a6a, 808da0, 79463d, f2f2f2, e7e7ec, e7e5b9, f6dcd8, e9ecea, eee8e0, e4dedb, d8dde3, e5e8ec, e9d6d3, d8d8d8, c4c4d1, d5d185, edbab1, d3d9d6, ded2c2, c9beb8, b2bcc8, ccd1d9, d3aea7, bfbfbf, 8a8aa3, aca73b, e4978a, bec7c1, cdbba3, af9e94, 8c9bac, b2bac6, bd857c, a5a5a5, 56566e, 56531d, a43925, 6b7c72, 866b48, 554840, 39434f, 5c697b, 5a342d, 7f7f7f, 3b3b4b, 22210b, 6d2619, 47534c, 594730, 39302b, 262d35, 3d4652, 3c231e',\n        columns: 10\n    },\n    slipstream: {\n        colors: 'ffffff, 000000, b4dcfa, 212745, 4e67c8, 5eccf3, a7ea52, 5dceaf, ff8021, f14124, f2f2f2, 7f7f7f, 8bc9f7, c7cce4, dbe0f4, def4fc, edfadc, def5ef, ffe5d2, fcd9d3, d8d8d8, 595959, 4facf3, 909aca, b8c2e9, beeafa, dbf6b9, beebdf, ffcca6, f9b3a7, bfbfbf, 3f3f3f, 0d78c9, 5967af, 94a3de, 9ee0f7, caf297, 9de1cf, ffb279, f68d7b, a5a5a5, 262626, 063c64, 181d33, 31479f, 11b2eb, 81d319, 34ac8b, d85c00, c3260c, 7f7f7f, 0c0c0c, 021828, 101322, 202f6a, 0b769c, 568c11, 22725c, 903d00, 821908',\n        columns: 10\n    },\n    metro: {\n        colors: 'ffffff, 000000, d6ecff, 4e5b6f, 7fd13b, ea157a, feb80a, 00addc, 738ac8, 1ab39f, f2f2f2, 7f7f7f, a7d6ff, d9dde4, e5f5d7, fad0e4, fef0cd, c5f2ff, e2e7f4, c9f7f1, d8d8d8, 595959, 60b5ff, b3bcca, cbecb0, f6a1c9, fee29c, 8be6ff, c7d0e9, 94efe3, bfbfbf, 3f3f3f, 007dea, 8d9baf, b2e389, f272af, fed46b, 51d9ff, aab8de, 5fe7d5, a5a5a5, 262626, 003e75, 3a4453, 5ea226, af0f5b, c58c00, 0081a5, 425ea9, 138677, 7f7f7f, 0c0c0c, 00192e, 272d37, 3f6c19, 750a3d, 835d00, 00566e, 2c3f71, 0c594f',\n        columns: 10\n    },\n    flow: {\n        colors: 'ffffff, 000000, dbf5f9, 04617b, 0f6fc6, 009dd9, 0bd0d9, 10cf9b, 7cca62, a5c249, f2f2f2, 7f7f7f, b2e9f2, b4ecfc, c7e2fa, c4eeff, c9fafc, c9faed, e4f4df, edf2da, d8d8d8, 595959, 76d9e8, 6adafa, 90c6f6, 89deff, 93f5f9, 94f6db, cae9c0, dbe6b6, bfbfbf, 3f3f3f, 21b2c8, 20c8f7, 59a9f2, 4fceff, 5df0f6, 5ff2ca, b0dfa0, c9da91, a5a5a5, 262626, 105964, 02485c, 0b5394, 0075a2, 089ca2, 0b9b74, 54a838, 7e9532, 7f7f7f, 0c0c0c, 062328, 01303d, 073763, 004e6c, 05686c, 07674d, 387025, 546321',\n        columns: 10\n    },\n    hardcover: {\n        colors: 'ffffff, 000000, ece9c6, 895d1d, 873624, d6862d, d0be40, 877f6c, 972109, aeb795, f2f2f2, 7f7f7f, e1dca5, f2e0c6, f0d0c9, f6e6d5, f5f2d8, e7e5e1, fbc7bc, eef0e9, d8d8d8, 595959, d0c974, e6c28d, e2a293, eeceaa, ece5b2, cfccc3, f78f7a, dee2d4, bfbfbf, 3f3f3f, a29a36, daa454, d4735e, e6b681, e2d88c, b7b2a5, f35838, ced3bf, a5a5a5, 262626, 514d1b, 664515, 65281a, a2641f, a39428, 655f50, 711806, 879464, 7f7f7f, 0c0c0c, 201e0a, 442e0e, 431b11, 6c4315, 6d621a, 433f35, 4b1004, 5a6243',\n        columns: 10\n    },\n    trek: {\n        colors: 'ffffff, 000000, fbeec9, 4e3b30, f0a22e, a5644e, b58b80, c3986d, a19574, c17529, f2f2f2, 7f7f7f, f7e09e, e1d6cf, fcecd5, eddfda, f0e7e5, f3eae1, ece9e3, f5e3d1, d8d8d8, 595959, f3cc5f, c4ad9f, f9d9ab, dcc0b6, e1d0cc, e7d5c4, d9d4c7, ebc7a3, bfbfbf, 3f3f3f, d29f0f, a78470, f6c781, cba092, d2b9b2, dbc1a7, c6bfab, e1ac76, a5a5a5, 262626, 694f07, 3a2c24, c87d0e, 7b4b3a, 926255, a17242, 7b7153, 90571e, 7f7f7f, 0c0c0c, 2a1f03, 271d18, 855309, 523226, 614138, 6b4c2c, 524b37, 603a14',\n        columns: 10\n    },\n    verve: {\n        colors: 'ffffff, 000000, d2d2d2, 666666, ff388c, e40059, 9c007f, 68007f, 005bd3, 00349e, f2f2f2, 7f7f7f, bdbdbd, e0e0e0, ffd7e8, ffc6dc, ffb8f1, f1b2ff, c3dcff, b8cfff, d8d8d8, 595959, 9d9d9d, c1c1c1, ffafd1, ff8eba, ff71e4, e365ff, 87baff, 72a0ff, bfbfbf, 3f3f3f, 696969, a3a3a3, ff87ba, ff5597, ff2ad7, d519ff, 4b98ff, 2b71ff, a5a5a5, 262626, 343434, 4c4c4c, e90062, ab0042, 75005f, 4e005f, 00449e, 002676, 7f7f7f, 0c0c0c, 151515, 333333, 9b0041, 72002c, 4e003f, 34003f, 002d69, 00194f',\n        columns: 10\n    },\n    monochrome: {\n        colors: '000000, 1a1a1a, 333333, 4d4d4d, 666666, 808080, 999999, b3b3b3, cccccc, e6e6e6, f2f2f2, ffffff',\n        columns: 12\n    },\n    accessible: {\n        colors: 'black, grey, darkred, red, darkorange, gold, green, blue, darkblue, purple, white, darkgrey, saddlebrown, pink, orange, yellow, lightgreen, lightskyblue, lightblue, mediumpurple',\n        columns: 10\n    }\n};\n\n;\n\n/**\n * Arguments for the `cancel` event of the ColorPicker and FlatColorPicker components.\n */\nclass ColorPickerCancelEvent extends PreventableEvent {\n    constructor(originalEvent) {\n        super();\n        this.originalEvent = originalEvent;\n    }\n}\n\n/**\n * Arguments for the `close` event of the ColorPicker component.\n */\nclass ColorPickerCloseEvent extends PreventableEvent {\n}\n\n/**\n * Arguments for the `open` event of the ColorPicker component.\n */\nclass ColorPickerOpenEvent extends PreventableEvent {\n}\n\n/**\n * Fires each time the left side of the ColorPicker wrapper is clicked.\n * The event is triggered regardless of whether a ColorPicker icon is set or not.\n *\n * Provides information about the current active color and gives the option to prevent the opening of the popup.\n *\n * @example\n *\n * ```ts-no-run\n * _@Component({\n *   selector: 'my-app',\n *   template: `\n *       <kendo-colorpicker\n *           [icon]=\"'edit-tools'\"\n *           [value]=\"'#900'\"\n *           (activeColorClick)=\"handleActiveColorClick($event)\"\n *       >\n *       </kendo-colorpicker>\n *   `\n * })\n * class AppComponent {\n *     public handleActiveColorClick(event: ActiveColorClickEvent): void {\n *         event.preventOpen();\n *\n *         console.log('Open prevented:', event.isOpenPrevented());\n *         console.log('Current color:', event.color);\n *     }\n *  }\n * ```\n */\nclass ActiveColorClickEvent {\n    /**\n     * @hidden\n     * @param color Represents the current value of the ColorPicker.\n     */\n    constructor(color) {\n        this.color = color;\n        this.openPrevented = false;\n    }\n    /**\n     * Prevents the opening of the popup.\n     */\n    preventOpen() {\n        this.openPrevented = true;\n    }\n    /**\n     * Returns `true` if the popup opening is prevented by any of its subscribers.\n     *\n     * @returns - Returns `true` if the open action was prevented. Otherwise, returns `false`.\n     */\n    isOpenPrevented() {\n        return this.openPrevented;\n    }\n}\n\n/**\n * @hidden\n *\n * Returns the hex or rgba string representation of the color.\n */\nconst parseColor = (value, format, opacityEnabled = false, safe = true) => {\n    const allowedFormats = ['hex', 'rgba', 'name'];\n    if (allowedFormats.indexOf(format) === -1) {\n        throw new Error(`Unsupported color output format '${format}'. The available options are 'hex', 'rgba' or 'name'.`);\n    }\n    if (!isPresent(value)) {\n        return;\n    }\n    if (format === 'name') {\n        return nameFormat(value, safe);\n    }\n    const parsedColor = parseColor$1(value.trim(), safe);\n    if (!isPresent(parsedColor)) {\n        return;\n    }\n    const parsedColorResult = format === 'hex' ? getHexValue(parsedColor, opacityEnabled) : parsedColor.toCssRgba();\n    return parsedColorResult;\n};\n/**\n * @hidden\n *\n * Returns an HSV object representation of the color string.\n */\nconst getHSV = (value, safe = true) => {\n    const parsed = parseColor$1(value, safe);\n    if (!isPresent(parsed)) {\n        return {};\n    }\n    return parsed.toHSV();\n};\n/**\n * @hidden\n *\n * Returns an RGBA object representation of the color string.\n */\nconst getRGBA = (value, safe = true) => {\n    const parsed = parseColor$1(value, safe);\n    if (!isPresent(parsed)) {\n        return {};\n    }\n    return parsed.toBytes();\n};\n/**\n * @hidden\n *\n * Returns the RGBA string representation of the color.\n */\nconst getColorFromHSV = (hsva, format = 'rgba', opacityEnabled = false) => {\n    const hue = fitIntoBounds(hsva.h, 0, 359.9);\n    const saturation = fitIntoBounds(hsva.s, 0, 1);\n    const value = fitIntoBounds(hsva.v, 0, 1);\n    const alpha = fitIntoBounds(hsva.a, 0, 1);\n    const color = Color.fromHSV(hue, saturation, value, alpha);\n    return format === 'hex' ? getHexValue(color, opacityEnabled) : color.toCssRgba();\n};\n/**\n * @hidden\n *\n * Returns the HEX value.\n */\nconst getHexValue = (color, opacity) => {\n    return opacity && color.a < 1 ? color.toCss({ alpha: true }) : color.toCss();\n};\n/**\n * @hidden\n *\n * Returns the RGBA string representation of the color based on the `hue`, assuming the `value`, `saturation` and `alpha` have value of `1`.\n */\nconst getColorFromHue = (hue) => {\n    return getColorFromHSV({ h: hue, s: 1, v: 1, a: 1 });\n};\n/**\n * @hidden\n *\n * Returns the RGBA string representation of the color.\n */\nconst getColorFromRGBA = (rgba) => {\n    const red = fitIntoBounds(rgba.r, 0, 255);\n    const green = fitIntoBounds(rgba.g, 0, 255);\n    const blue = fitIntoBounds(rgba.b, 0, 255);\n    const alpha = fitIntoBounds(rgba.a, 0, 1);\n    return Color.fromBytes(red, green, blue, alpha).toCssRgba();\n};\n/**\n *\n * @hidden\n */\nfunction nameFormat(value, safe) {\n    value = value.toLowerCase().trim();\n    if (isPresent(namedColors[value])) {\n        return value;\n    }\n    if (parseColor$1(value, safe)) {\n        value = parseColor$1(value, safe).toHex();\n    }\n    const key = Object.keys(namedColors).find(key => namedColors[key] === value);\n    if (!key && !safe) {\n        throw new Error(`The provided color ${value} is not supported for 'format=\"name\"' property.To display ${value} color, the component 'format' property should be set to 'hex' or 'rgba' `);\n    }\n    return key;\n}\n/**\n * @hidden\n *\n * Returns the RGB object representation of the color based on the background color.\n */\nconst getRGBFromRGBA = (foregroundColor, backgroundColor) => {\n    const r1 = fitIntoBounds(foregroundColor.r, 0, 255);\n    const g1 = fitIntoBounds(foregroundColor.g, 0, 255);\n    const b1 = fitIntoBounds(foregroundColor.b, 0, 255);\n    const a1 = fitIntoBounds(foregroundColor.a, 0, 1);\n    const r2 = fitIntoBounds(backgroundColor.r, 0, 255);\n    const g2 = fitIntoBounds(backgroundColor.g, 0, 255);\n    const b2 = fitIntoBounds(backgroundColor.b, 0, 255);\n    return {\n        r: Math.round(((1 - a1) * r2) + (a1 * r1)),\n        g: Math.round(((1 - a1) * g2) + (a1 * g1)),\n        b: Math.round(((1 - a1) * b2) + (a1 * b1))\n    };\n};\n/**\n * @hidden\n *\n * Returns the relative luminance.\n */\nconst getLuminance = (rgb) => {\n    let a = [rgb.r, rgb.g, rgb.b].map(function (v) {\n        v /= 255;\n        return v <= 0.03928\n            ? v / 12.92\n            : Math.pow((v + 0.055) / 1.055, 2.4);\n    });\n    return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n};\n/**\n * @hidden\n *\n * Returns the color contrast.\n */\nconst getContrast = (luminance1, luminance2) => {\n    const brightest = Math.max(luminance1, luminance2);\n    const darkest = Math.min(luminance1, luminance2);\n    return (brightest + 0.05)\n        / (darkest + 0.05);\n};\n/**\n * @hidden\n *\n * Returns the color contrast from two RGBA colors.\n */\nconst getContrastFromTwoRGBAs = (a, b) => {\n    return getContrast(getLuminance(getRGBFromRGBA(a, b)), getLuminance(getRGBFromRGBA(b, { r: 0, g: 0, b: 0, a: 1 })));\n};\n\n/**\n * @hidden\n */\nconst bezierCommand = (controlPointCalc) => (point, i, a) => {\n    // start control point\n    const [cpsX, cpsY] = controlPointCalc(a[i - 1], a[i - 2], point);\n    // end control point\n    const [cpeX, cpeY] = controlPointCalc(point, a[i - 1], a[i + 1], true);\n    return `C ${cpsX},${cpsY} ${cpeX},${cpeY} ${point[0]},${point[1]}`;\n};\n/**\n * @hidden\n */\nconst controlPoint = (lineCalc) => (current, previous, next, reverse) => {\n    // when 'current' is the first or last point of the array\n    // 'previous' and 'next' are undefined\n    // replace with 'current'\n    const p = previous || current;\n    const n = next || current;\n    const smooth = 0.1;\n    // properties of the line between previous and next\n    const l = lineCalc(p, n);\n    // If is end-control-point, add PI to the angle to go backward\n    const angle = l.angle + (reverse ? Math.PI : 0);\n    const length = l.length * smooth;\n    // The control point position is relative to the current point\n    const x = current[0] + Math.cos(angle) * length;\n    const y = current[1] + Math.sin(angle) * length;\n    return [x, y];\n};\n/**\n * @hidden\n */\nconst line = (pointA, pointB) => {\n    const lengthX = pointB[0] - pointA[0];\n    const lengthY = pointB[1] - pointA[1];\n    return {\n        length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n        angle: Math.atan2(lengthY, lengthX)\n    };\n};\n/**\n * @hidden\n */\nconst d = (points, command) => {\n    if (points.length === 0) {\n        return '';\n    }\n    // build the d attributes by looping over the points\n    const d = points.reduce((acc, point, i, a) => i === 0 ?\n        // if first point\n        `M ${point[0]},${point[1]}` :\n        // else\n        `${acc} ${command(point, i, a)}`, '');\n    return d;\n};\n/**\n * @hidden\n *\n * Render the svg <path> element.\n *\n * @param points (array) Represents the points coordinates as an array of tuples.\n * @param command (function) The command that is used (bezierCommand, lineCommand).\n *      @param point (array) [x,y] Represents the current point coordinates.\n *      @param i (integer) Represents the index of 'point' in the array 'a'.\n *      @param a (array) Represents the complete array of points coordinates.\n *      @output (string) a svg path command.\n * @output (string) a Svg <path> element\n */\nconst svgPath = (points, command) => {\n    if (points.length === 0) {\n        return '';\n    }\n    // build the d attributes by looping over the points\n    const d = points.reduce((acc, point, i, a) => i === 0 ?\n        // if first point\n        `M ${point[0]},${point[1]}` :\n        // else\n        `${acc} ${command(point, i, a)}`, '');\n    return d;\n};\n\n/**\n * @hidden\n */\nclass ColorPickerLocalizationService extends LocalizationService {\n    constructor(prefix, messageService, _rtl) {\n        super(prefix, messageService, _rtl);\n    }\n}\nColorPickerLocalizationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPickerLocalizationService, deps: [{ token: L10N_PREFIX }, { token: i1.MessageService, optional: true }, { token: RTL, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nColorPickerLocalizationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPickerLocalizationService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPickerLocalizationService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [L10N_PREFIX]\n                }] }, { type: i1.MessageService, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [RTL]\n                }] }]; } });\n\n/**\n * @hidden\n */\nconst DEFAULT_OUTPUT_FORMAT = 'rgba';\n/**\n * @hidden\n */\nconst DEFAULT_GRADIENT_BACKGROUND_COLOR = 'rgba(255, 0, 0, 1)';\n/**\n * @hidden\n */\nconst DRAGHANDLE_MOVE_SPEED = 5;\n/**\n * @hidden\n */\nconst DRAGHANDLE_MOVE_SPEED_SMALL_STEP = 2;\n/**\n * @hidden\n */\nconst AAA_RATIO = 7.0;\n/**\n * @hidden\n */\nconst AA_RATIO = 4.5;\n/**\n * @hidden\n */\nconst DEFAULT_PRESET$1 = 'office';\n/**\n * @hidden\n */\nconst DEFAULT_ACCESSIBLE_PRESET$1 = 'accessible';\n/**\n * @hidden\n */\nconst STEP_COUNT = 16;\n\n/**\n * @hidden\n */\nclass FlatColorPickerLocalizationService extends LocalizationService {\n    constructor(prefix, messageService, _rtl, colorPickerLocalization) {\n        super(prefix, messageService, _rtl);\n        this.colorPickerLocalization = colorPickerLocalization;\n    }\n    get(shortKey) {\n        if (this.colorPickerLocalization) {\n            return this.colorPickerLocalization.get(shortKey);\n        }\n        return super.get(shortKey);\n    }\n}\nFlatColorPickerLocalizationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FlatColorPickerLocalizationService, deps: [{ token: L10N_PREFIX }, { token: i1.MessageService, optional: true }, { token: RTL, optional: true }, { token: ColorPickerLocalizationService, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nFlatColorPickerLocalizationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FlatColorPickerLocalizationService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FlatColorPickerLocalizationService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [L10N_PREFIX]\n                }] }, { type: i1.MessageService, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [RTL]\n                }] }, { type: ColorPickerLocalizationService, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ColorPickerLocalizationService]\n                }] }]; } });\n\n/**\n * @hidden\n */\nclass FlatColorPickerService {\n    getPaletteSettings(settings, format) {\n        const defaultPreset = (format !== 'name') ? DEFAULT_PRESET$1 : DEFAULT_ACCESSIBLE_PRESET$1;\n        const settingsPalette = settings.palette;\n        const presetColumns = typeof settingsPalette === 'string' && PALETTEPRESETS[settingsPalette] ?\n            PALETTEPRESETS[settingsPalette].columns :\n            undefined;\n        return {\n            palette: settingsPalette || defaultPreset,\n            tileSize: settings.tileSize || 24,\n            columns: settings.columns || presetColumns || 10\n        };\n    }\n    paletteTileLayout(tileSize) {\n        if (typeof tileSize === 'number') {\n            return { width: tileSize, height: tileSize };\n        }\n        return {\n            width: tileSize.width ? tileSize.width : tileSize.height,\n            height: tileSize.height ? tileSize.height : tileSize.width\n        };\n    }\n}\nFlatColorPickerService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FlatColorPickerService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nFlatColorPickerService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FlatColorPickerService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FlatColorPickerService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @hidden\n */\nclass FlatColorPickerHeaderComponent {\n    constructor(localizationService) {\n        this.localizationService = localizationService;\n        this.hostClasses = true;\n        this.innerTabIndex = -1;\n        this.viewChange = new EventEmitter();\n        this.valuePaneClick = new EventEmitter();\n        this.clearButtonClick = new EventEmitter();\n        this.tabOut = new EventEmitter();\n    }\n    onViewButtonClick(view) {\n        this.activeView = view;\n        this.viewChange.emit(view);\n    }\n    get viewButtons() {\n        return this.views && this.views.indexOf('gradient') >= 0 && this.views.indexOf('palette') >= 0;\n    }\n    getViewButtonIcon(view) {\n        return view === 'gradient' ? 'k-i-color-canvas' : 'k-i-palette';\n    }\n    getText(text) {\n        return this.localizationService.get(text);\n    }\n    onHeaderTabOut(ev, index) {\n        if (index === 0) {\n            ev.preventDefault();\n            this.tabOut.emit();\n        }\n    }\n}\nFlatColorPickerHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FlatColorPickerHeaderComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nFlatColorPickerHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FlatColorPickerHeaderComponent, selector: \"[kendoFlatColorPickerHeader]\", inputs: { clearButton: \"clearButton\", activeView: \"activeView\", views: \"views\", preview: \"preview\", innerTabIndex: \"innerTabIndex\", value: \"value\", selection: \"selection\" }, outputs: { viewChange: \"viewChange\", valuePaneClick: \"valuePaneClick\", clearButtonClick: \"clearButtonClick\", tabOut: \"tabOut\" }, host: { properties: { \"class.k-coloreditor-header\": \"this.hostClasses\", \"class.k-hstack\": \"this.hostClasses\" } }, viewQueries: [{ propertyName: \"clearButtonElement\", first: true, predicate: [\"clearButton\"], descendants: true, read: ElementRef }, { propertyName: \"viewButtonsCollection\", predicate: [\"viewButtons\"], descendants: true, read: ElementRef }], ngImport: i0, template: `\n        <div class=\"k-coloreditor-header-actions k-hstack\">\n            <div \n                *ngIf=\"viewButtons\" \n                class=\"k-button-group k-button-group-flat\">\n                <button *ngFor=\"let view of views; let i = index;\"\n                    #viewButtons\n                    type=\"button\"\n                    [tabindex]=\"innerTabIndex.toString()\"\n                    (click)=\"onViewButtonClick(view)\"\n                    (keydown.shift.tab)=\"onHeaderTabOut($event, i)\"\n                    class=\"k-button k-button-md k-button-flat k-button-flat-base k-icon-button\"\n                    [attr.title]=\"getText(view === 'gradient' ? 'gradientView' : 'paletteView')\"\n                    [attr.aria-label]=\"getText(view === 'gradient' ? 'gradientView' : 'paletteView')\"\n                    [attr.aria-pressed]=\"activeView === view\"\n                    [ngClass]=\"activeView === view ? 'k-selected' : ''\">\n                    <span\n                        class=\"k-button-icon k-icon\"\n                        [ngClass]=\"getViewButtonIcon(view)\">\n                    </span>\n                </button>\n            </div>\n        </div>\n        <div class=\"k-spacer\"></div>\n        <div class=\"k-coloreditor-header-actions k-hstack\">\n            <button\n                [tabindex]=\"innerTabIndex.toString()\"\n                *ngIf=\"clearButton\"\n                #clearButton\n                type=\"button\"\n                class=\"k-button k-button-md k-button-flat k-button-flat-base k-icon-button k-coloreditor-reset\"\n                [attr.aria-label]=\"getText('clearButton')\"\n                [attr.title]=\"getText('clearButton')\"\n                (click)=\"clearButtonClick.emit()\">\n                    <span class=\"k-button-icon k-icon k-i-droplet-slash\"></span>\n            </button>\n            <div class=\"k-coloreditor-preview k-vstack\" *ngIf=\"preview\" aria-hidden=\"true\">\n                <span\n                    class=\"k-coloreditor-preview-color k-color-preview\"\n                    [attr.title]=\"getText('previewColor')\"\n                    [style.background-color]=\"selection\">\n                </span>\n                <span class=\"k-coloreditor-current-color k-color-preview\"\n                    [style.background-color]=\"value\"\n                    [attr.title]=\"getText('revertSelection')\"\n                    (click)=\"valuePaneClick.emit($event)\">\n                </span>\n            </div>\n        </div>\n    `, isInline: true, directives: [{ type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FlatColorPickerHeaderComponent, decorators: [{\n            type: Component,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/component-selector\n                    selector: '[kendoFlatColorPickerHeader]',\n                    template: `\n        <div class=\"k-coloreditor-header-actions k-hstack\">\n            <div \n                *ngIf=\"viewButtons\" \n                class=\"k-button-group k-button-group-flat\">\n                <button *ngFor=\"let view of views; let i = index;\"\n                    #viewButtons\n                    type=\"button\"\n                    [tabindex]=\"innerTabIndex.toString()\"\n                    (click)=\"onViewButtonClick(view)\"\n                    (keydown.shift.tab)=\"onHeaderTabOut($event, i)\"\n                    class=\"k-button k-button-md k-button-flat k-button-flat-base k-icon-button\"\n                    [attr.title]=\"getText(view === 'gradient' ? 'gradientView' : 'paletteView')\"\n                    [attr.aria-label]=\"getText(view === 'gradient' ? 'gradientView' : 'paletteView')\"\n                    [attr.aria-pressed]=\"activeView === view\"\n                    [ngClass]=\"activeView === view ? 'k-selected' : ''\">\n                    <span\n                        class=\"k-button-icon k-icon\"\n                        [ngClass]=\"getViewButtonIcon(view)\">\n                    </span>\n                </button>\n            </div>\n        </div>\n        <div class=\"k-spacer\"></div>\n        <div class=\"k-coloreditor-header-actions k-hstack\">\n            <button\n                [tabindex]=\"innerTabIndex.toString()\"\n                *ngIf=\"clearButton\"\n                #clearButton\n                type=\"button\"\n                class=\"k-button k-button-md k-button-flat k-button-flat-base k-icon-button k-coloreditor-reset\"\n                [attr.aria-label]=\"getText('clearButton')\"\n                [attr.title]=\"getText('clearButton')\"\n                (click)=\"clearButtonClick.emit()\">\n                    <span class=\"k-button-icon k-icon k-i-droplet-slash\"></span>\n            </button>\n            <div class=\"k-coloreditor-preview k-vstack\" *ngIf=\"preview\" aria-hidden=\"true\">\n                <span\n                    class=\"k-coloreditor-preview-color k-color-preview\"\n                    [attr.title]=\"getText('previewColor')\"\n                    [style.background-color]=\"selection\">\n                </span>\n                <span class=\"k-coloreditor-current-color k-color-preview\"\n                    [style.background-color]=\"value\"\n                    [attr.title]=\"getText('revertSelection')\"\n                    (click)=\"valuePaneClick.emit($event)\">\n                </span>\n            </div>\n        </div>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; }, propDecorators: { hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-coloreditor-header']\n            }, {\n                type: HostBinding,\n                args: ['class.k-hstack']\n            }], clearButton: [{\n                type: Input\n            }], activeView: [{\n                type: Input\n            }], views: [{\n                type: Input\n            }], preview: [{\n                type: Input\n            }], innerTabIndex: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], selection: [{\n                type: Input\n            }], viewChange: [{\n                type: Output\n            }], valuePaneClick: [{\n                type: Output\n            }], clearButtonClick: [{\n                type: Output\n            }], tabOut: [{\n                type: Output\n            }], viewButtonsCollection: [{\n                type: ViewChildren,\n                args: ['viewButtons', { read: ElementRef }]\n            }], clearButtonElement: [{\n                type: ViewChild,\n                args: ['clearButton', { read: ElementRef }]\n            }] } });\n\n/**\n * @hidden\n */\nclass ColorGradientLocalizationService extends LocalizationService {\n    constructor(prefix, messageService, _rtl, flatColorPickerLocalization) {\n        super(prefix, messageService, _rtl);\n        this.flatColorPickerLocalization = flatColorPickerLocalization;\n    }\n    get(shortKey) {\n        if (this.flatColorPickerLocalization) {\n            return this.flatColorPickerLocalization.get(shortKey);\n        }\n        return super.get(shortKey);\n    }\n}\nColorGradientLocalizationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorGradientLocalizationService, deps: [{ token: L10N_PREFIX }, { token: i1.MessageService, optional: true }, { token: RTL, optional: true }, { token: FlatColorPickerLocalizationService, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nColorGradientLocalizationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorGradientLocalizationService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorGradientLocalizationService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [L10N_PREFIX]\n                }] }, { type: i1.MessageService, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [RTL]\n                }] }, { type: FlatColorPickerLocalizationService, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FlatColorPickerLocalizationService]\n                }] }]; } });\n\n/**\n * @hidden\n */\nclass ColorContrastSvgComponent {\n    constructor() {\n        this.hostClass = true;\n    }\n    ngAfterViewInit() {\n        this.metrics = this.wrapper.getBoundingClientRect();\n        this.oldA = this.hsva.value.a;\n        this.oldH = this.hsva.value.h;\n        this.hsva.subscribe((value) => {\n            if (value.h !== this.oldH || value.a !== this.oldA) {\n                this.oldH = value.h;\n                this.oldA = value.a;\n                this.setPaths();\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        if (isPresent(changes.backgroundColor) && this.metrics) {\n            this.setPaths();\n        }\n    }\n    setPaths() {\n        const bezierCommandCalc = bezierCommand(controlPoint(line));\n        this.paths = [svgPath(this.getPaths(AA_RATIO, STEP_COUNT), bezierCommandCalc),\n            svgPath(this.getPaths(AA_RATIO, STEP_COUNT, true), bezierCommandCalc),\n            svgPath(this.getPaths(AAA_RATIO, STEP_COUNT), bezierCommandCalc),\n            svgPath(this.getPaths(AAA_RATIO, STEP_COUNT, true), bezierCommandCalc)];\n    }\n    findValue(contrast, saturation, low, high, comparer) {\n        const mid = (low + high) / 2;\n        const hsva = Object.assign({}, this.hsva.value, { s: saturation / this.metrics.width, v: 1 - mid / this.metrics.height });\n        const currentContrast = getContrastFromTwoRGBAs(getRGBA(getColorFromHSV(hsva)), getRGBA(this.backgroundColor || ''));\n        if (low + 0.5 > high) {\n            if (currentContrast < contrast + 1 && currentContrast > contrast - 1) {\n                return mid;\n            }\n            else {\n                return null;\n            }\n        }\n        if (comparer(currentContrast, contrast)) {\n            return this.findValue(contrast, saturation, low, high - (high - low) / 2, comparer);\n        }\n        return this.findValue(contrast, saturation, low + (high - low) / 2, high, comparer);\n    }\n    getPaths(contrast, stepCount, reversed = false) {\n        const points = [];\n        for (let i = 0; i <= this.metrics.width; i += this.metrics.width / stepCount) {\n            const value = this.findValue(contrast, i, 0, this.metrics.height, reversed ? ((a, b) => a < b) : ((a, b) => a > b));\n            if (value !== null) {\n                points.push([i, value]);\n            }\n        }\n        return points;\n    }\n}\nColorContrastSvgComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorContrastSvgComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nColorContrastSvgComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColorContrastSvgComponent, selector: \"[kendoColorContrastSvg]\", inputs: { wrapper: \"wrapper\", hsva: \"hsva\", backgroundColor: \"backgroundColor\" }, host: { properties: { \"class.k-color-contrast-svg\": \"this.hostClass\" } }, usesOnChanges: true, ngImport: i0, template: `\n        <svg:path *ngFor=\"let path of paths\" [attr.d]=\"path\" fill=\"none\" stroke=\"white\" stroke-width=\"1\"></svg:path>\n    `, isInline: true, directives: [{ type: i1$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorContrastSvgComponent, decorators: [{\n            type: Component,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/component-selector\n                    selector: '[kendoColorContrastSvg]',\n                    template: `\n        <svg:path *ngFor=\"let path of paths\" [attr.d]=\"path\" fill=\"none\" stroke=\"white\" stroke-width=\"1\"></svg:path>\n    `\n                }]\n        }], propDecorators: { hostClass: [{\n                type: HostBinding,\n                args: ['class.k-color-contrast-svg']\n            }], wrapper: [{\n                type: Input\n            }], hsva: [{\n                type: Input\n            }], backgroundColor: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass NumericLabelDirective {\n    constructor(host) {\n        this.host = host;\n    }\n    ngOnInit() {\n        const localizationToken = `${this.kendoAdditionalNumericLabel}ChannelLabel`;\n        this.host.numericInput.nativeElement.setAttribute('aria-label', this.localizationService.get(localizationToken));\n    }\n}\nNumericLabelDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NumericLabelDirective, deps: [{ token: NumericTextBoxComponent }], target: i0.ɵɵFactoryTarget.Directive });\nNumericLabelDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: NumericLabelDirective, selector: \"[kendoAdditionalNumericLabel]\", inputs: { kendoAdditionalNumericLabel: \"kendoAdditionalNumericLabel\", localizationService: \"localizationService\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NumericLabelDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[kendoAdditionalNumericLabel]' }]\n        }], ctorParameters: function () { return [{ type: NumericTextBoxComponent }]; }, propDecorators: { kendoAdditionalNumericLabel: [{\n                type: Input\n            }], localizationService: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass ColorInputComponent {\n    constructor(host, renderer, localizationService) {\n        this.host = host;\n        this.renderer = renderer;\n        this.localizationService = localizationService;\n        /**\n         * The id of the hex input.\n         */\n        this.focusableId = `k-${guid()}`;\n        /**\n         * The inputs tabindex.\n         */\n        this.tabindex = -1;\n        /**\n         * Sets whether the alpha slider will be shown.\n         */\n        this.opacity = true;\n        /**\n         * Sets the disabled state of the ColorInput.\n         */\n        this.disabled = false;\n        /**\n         * Sets the read-only state of the ColorInput.\n         */\n        this.readonly = false;\n        /**\n         * Emits a parsed rgba string color.\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Emits when the user tabs out of the last focusable input.\n         */\n        this.tabOut = new EventEmitter();\n        this.colorInputClass = true;\n        /**\n         * The rgba inputs values.\n         */\n        this.rgba = {};\n        this.subscriptions = new Subscription();\n    }\n    /**\n     * Indicates whether any of the inputs are focused.\n     */\n    get isFocused() {\n        if (!(isDocumentAvailable() && isPresent(this.host))) {\n            return false;\n        }\n        const activeElement = document.activeElement;\n        return this.host.nativeElement.contains(activeElement);\n    }\n    /**\n     * Indicates whether any of the rgba inputs have value.\n     */\n    get rgbaInputValid() {\n        return Object.keys(this.rgba).every(key => isPresent(this.rgba[key]));\n    }\n    ngAfterViewInit() {\n        this.initDomEvents();\n    }\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n    }\n    ngOnChanges(changes) {\n        if (isPresent(changes.value) && !this.isFocused) {\n            this.hex = parseColor(this.value, 'hex', this.opacity);\n            this.rgba = getRGBA(this.value);\n            this.rgba.a = parseColor(this.value, 'rgba', this.opacity) ? this.rgba.a : 1;\n        }\n    }\n    get formatButtonTitle() {\n        return this.localizationService.get('formatButton');\n    }\n    handleRgbaValueChange() {\n        const color = getColorFromRGBA(this.rgba);\n        if (!this.rgbaInputValid || color === this.value) {\n            return;\n        }\n        this.value = color;\n        this.rgba = getRGBA(this.value);\n        this.hex = parseColor(color, 'hex', this.opacity);\n        this.valueChange.emit(color);\n    }\n    handleHexValueChange(hex) {\n        this.hex = hex;\n        const color = parseColor(hex, 'rgba', this.opacity);\n        if (!isPresent(color) || color === this.value) {\n            return;\n        }\n        this.value = color;\n        this.rgba = getRGBA(color);\n        this.valueChange.emit(color);\n    }\n    handleRgbaInputBlur() {\n        if (!this.rgbaInputValid) {\n            this.rgba = getRGBA(this.value);\n        }\n    }\n    handleHexInputBlur() {\n        this.hex = parseColor(this.value, 'hex', this.opacity);\n    }\n    focusLast() {\n        this.lastInput().focus();\n    }\n    onTab() {\n        if (this.opacity) {\n            return;\n        }\n    }\n    toggleFormatView() {\n        this.formatView = this.formatView === 'hex' ? 'rgba' : 'hex';\n    }\n    initDomEvents() {\n        if (!this.host) {\n            return;\n        }\n        this.subscriptions.add(this.renderer.listen(this.toggleFormatButton.nativeElement, 'click', () => this.toggleFormatView()));\n    }\n    lastInput() {\n        var _a;\n        return ((_a = this.hexInput) === null || _a === void 0 ? void 0 : _a.nativeElement) || this.opacityInput || this.blueInput;\n    }\n}\nColorInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorInputComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nColorInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColorInputComponent, selector: \"kendo-colorinput\", inputs: { focusableId: \"focusableId\", formatView: \"formatView\", tabindex: \"tabindex\", value: \"value\", opacity: \"opacity\", disabled: \"disabled\", readonly: \"readonly\" }, outputs: { valueChange: \"valueChange\", tabOut: \"tabOut\" }, host: { properties: { \"class.k-colorgradient-inputs\": \"this.colorInputClass\", \"class.k-hstack\": \"this.colorInputClass\" } }, viewQueries: [{ propertyName: \"opacityInput\", first: true, predicate: [\"opacityInput\"], descendants: true }, { propertyName: \"hexInput\", first: true, predicate: [\"hexInput\"], descendants: true }, { propertyName: \"blueInput\", first: true, predicate: [\"blueInput\"], descendants: true }, { propertyName: \"toggleFormatButton\", first: true, predicate: [\"toggleFormatButton\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n        <div class=\"k-vstack\">\n            <button #toggleFormatButton\n                class=\"k-colorgradient-toggle-mode k-button k-button-md k-button-flat k-button-flat-base k-icon-button\"\n                [attr.aria-label]=\"formatButtonTitle\"\n                [attr.title]=\"formatButtonTitle\"\n                [disabled]=\"disabled\"\n                [tabindex]=\"tabindex.toString()\"\n                type=\"button\"\n            >\n                <span class=\"k-button-icon k-icon k-i-caret-alt-expand\"></span>\n            </button>\n        </div>\n        <div *ngIf=\"formatView === 'hex'\" class=\"k-vstack\">\n            <input\n                #hexInput\n                [id]=\"focusableId\"\n                class=\"k-input k-textbox k-input-solid k-input-md k-rounded-md k-hex-value\"\n                [disabled]=\"disabled\"\n                [readonly]=\"readonly\"\n                [value]=\"hex || ''\"\n                (blur)=\"handleHexInputBlur()\"\n                (input)=\"handleHexValueChange(hexInput.value)\"\n                [tabindex]=\"tabindex.toString()\"\n                (keydown.tab)=\"$event.preventDefault(); tabOut.emit();\"\n            />\n            <label [for]=\"focusableId\" class=\"k-colorgradient-input-label\">HEX</label>\n        </div>\n        <ng-container *ngIf=\"formatView === 'rgba'\">\n            <div class=\"k-vstack\">\n                <kendo-numerictextbox\n                    #red\n                    kendoAdditionalNumericLabel=\"red\"\n                    [localizationService]=\"localizationService\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [tabindex]=\"tabindex\"\n                    [min]=\"0\"\n                    [max]=\"255\"\n                    [(value)]=\"rgba.r\"\n                    [autoCorrect]=\"true\"\n                    [spinners]=\"false\"\n                    [format]=\"'n'\"\n                    [decimals]=\"0\"\n                    (blur)=\"handleRgbaInputBlur()\"\n                    (valueChange)=\"handleRgbaValueChange()\">\n                </kendo-numerictextbox>\n                <label [for]=\"red.focusableId\" class=\"k-colorgradient-input-label\">R</label>\n            </div>\n            <div class=\"k-vstack\">\n                <kendo-numerictextbox\n                    #green\n                    kendoAdditionalNumericLabel=\"green\"\n                    [localizationService]=\"localizationService\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [tabindex]=\"tabindex\"\n                    [min]=\"0\"\n                    [max]=\"255\"\n                    [(value)]=\"rgba.g\"\n                    [autoCorrect]=\"true\"\n                    [spinners]=\"false\"\n                    [format]=\"'n'\"\n                    [decimals]=\"0\"\n                    (blur)=\"handleRgbaInputBlur()\"\n                    (valueChange)=\"handleRgbaValueChange()\">\n                </kendo-numerictextbox>\n                <label [for]=\"green.focusableId\" class=\"k-colorgradient-input-label\">G</label>\n            </div>\n            <div class=\"k-vstack\">\n                <kendo-numerictextbox\n                    #blue\n                    kendoAdditionalNumericLabel=\"blue\"\n                    [localizationService]=\"localizationService\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [tabindex]=\"tabindex\"\n                    [min]=\"0\"\n                    [max]=\"255\"\n                    [(value)]=\"rgba.b\"\n                    [autoCorrect]=\"true\"\n                    [spinners]=\"false\"\n                    [format]=\"'n'\"\n                    [decimals]=\"0\"\n                    (blur)=\"handleRgbaInputBlur()\"\n                    (valueChange)=\"handleRgbaValueChange()\"\n                    (keydown.tab)=\"onTab()\">\n                </kendo-numerictextbox>\n                <label [for]=\"blue.focusableId\" class=\"k-colorgradient-input-label\">B</label>\n            </div>\n            <div class=\"k-vstack\" *ngIf=\"opacity\">\n                <kendo-numerictextbox  #opacityInput\n                    #alpha\n                    kendoAdditionalNumericLabel=\"alpha\"\n                    [localizationService]=\"localizationService\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [tabindex]=\"tabindex\"\n                    [min]=\"0\"\n                    [max]=\"1\"\n                    [(value)]=\"rgba.a\"\n                    [autoCorrect]=\"true\"\n                    [spinners]=\"false\"\n                    [step]=\"0.01\"\n                    [format]=\"'n2'\"\n                    [decimals]=\"2\"\n                    (blur)=\"handleRgbaInputBlur()\"\n                    (valueChange)=\"handleRgbaValueChange()\"\n                    (keydown.tab)=\"$event.preventDefault(); tabOut.emit();\">\n                </kendo-numerictextbox>\n                <label [for]=\"alpha.focusableId\" class=\"k-colorgradient-input-label\">A</label>\n            </div>\n        </ng-container>\n    `, isInline: true, components: [{ type: NumericTextBoxComponent, selector: \"kendo-numerictextbox\", inputs: [\"focusableId\", \"disabled\", \"readonly\", \"title\", \"autoCorrect\", \"format\", \"max\", \"min\", \"decimals\", \"placeholder\", \"step\", \"spinners\", \"rangeValidation\", \"tabindex\", \"tabIndex\", \"changeValueOnScroll\", \"selectOnFocus\", \"value\", \"maxlength\", \"size\", \"rounded\", \"fillMode\"], outputs: [\"valueChange\", \"focus\", \"blur\"], exportAs: [\"kendoNumericTextBox\"] }], directives: [{ type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: NumericLabelDirective, selector: \"[kendoAdditionalNumericLabel]\", inputs: [\"kendoAdditionalNumericLabel\", \"localizationService\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorInputComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-colorinput',\n                    template: `\n        <div class=\"k-vstack\">\n            <button #toggleFormatButton\n                class=\"k-colorgradient-toggle-mode k-button k-button-md k-button-flat k-button-flat-base k-icon-button\"\n                [attr.aria-label]=\"formatButtonTitle\"\n                [attr.title]=\"formatButtonTitle\"\n                [disabled]=\"disabled\"\n                [tabindex]=\"tabindex.toString()\"\n                type=\"button\"\n            >\n                <span class=\"k-button-icon k-icon k-i-caret-alt-expand\"></span>\n            </button>\n        </div>\n        <div *ngIf=\"formatView === 'hex'\" class=\"k-vstack\">\n            <input\n                #hexInput\n                [id]=\"focusableId\"\n                class=\"k-input k-textbox k-input-solid k-input-md k-rounded-md k-hex-value\"\n                [disabled]=\"disabled\"\n                [readonly]=\"readonly\"\n                [value]=\"hex || ''\"\n                (blur)=\"handleHexInputBlur()\"\n                (input)=\"handleHexValueChange(hexInput.value)\"\n                [tabindex]=\"tabindex.toString()\"\n                (keydown.tab)=\"$event.preventDefault(); tabOut.emit();\"\n            />\n            <label [for]=\"focusableId\" class=\"k-colorgradient-input-label\">HEX</label>\n        </div>\n        <ng-container *ngIf=\"formatView === 'rgba'\">\n            <div class=\"k-vstack\">\n                <kendo-numerictextbox\n                    #red\n                    kendoAdditionalNumericLabel=\"red\"\n                    [localizationService]=\"localizationService\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [tabindex]=\"tabindex\"\n                    [min]=\"0\"\n                    [max]=\"255\"\n                    [(value)]=\"rgba.r\"\n                    [autoCorrect]=\"true\"\n                    [spinners]=\"false\"\n                    [format]=\"'n'\"\n                    [decimals]=\"0\"\n                    (blur)=\"handleRgbaInputBlur()\"\n                    (valueChange)=\"handleRgbaValueChange()\">\n                </kendo-numerictextbox>\n                <label [for]=\"red.focusableId\" class=\"k-colorgradient-input-label\">R</label>\n            </div>\n            <div class=\"k-vstack\">\n                <kendo-numerictextbox\n                    #green\n                    kendoAdditionalNumericLabel=\"green\"\n                    [localizationService]=\"localizationService\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [tabindex]=\"tabindex\"\n                    [min]=\"0\"\n                    [max]=\"255\"\n                    [(value)]=\"rgba.g\"\n                    [autoCorrect]=\"true\"\n                    [spinners]=\"false\"\n                    [format]=\"'n'\"\n                    [decimals]=\"0\"\n                    (blur)=\"handleRgbaInputBlur()\"\n                    (valueChange)=\"handleRgbaValueChange()\">\n                </kendo-numerictextbox>\n                <label [for]=\"green.focusableId\" class=\"k-colorgradient-input-label\">G</label>\n            </div>\n            <div class=\"k-vstack\">\n                <kendo-numerictextbox\n                    #blue\n                    kendoAdditionalNumericLabel=\"blue\"\n                    [localizationService]=\"localizationService\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [tabindex]=\"tabindex\"\n                    [min]=\"0\"\n                    [max]=\"255\"\n                    [(value)]=\"rgba.b\"\n                    [autoCorrect]=\"true\"\n                    [spinners]=\"false\"\n                    [format]=\"'n'\"\n                    [decimals]=\"0\"\n                    (blur)=\"handleRgbaInputBlur()\"\n                    (valueChange)=\"handleRgbaValueChange()\"\n                    (keydown.tab)=\"onTab()\">\n                </kendo-numerictextbox>\n                <label [for]=\"blue.focusableId\" class=\"k-colorgradient-input-label\">B</label>\n            </div>\n            <div class=\"k-vstack\" *ngIf=\"opacity\">\n                <kendo-numerictextbox  #opacityInput\n                    #alpha\n                    kendoAdditionalNumericLabel=\"alpha\"\n                    [localizationService]=\"localizationService\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [tabindex]=\"tabindex\"\n                    [min]=\"0\"\n                    [max]=\"1\"\n                    [(value)]=\"rgba.a\"\n                    [autoCorrect]=\"true\"\n                    [spinners]=\"false\"\n                    [step]=\"0.01\"\n                    [format]=\"'n2'\"\n                    [decimals]=\"2\"\n                    (blur)=\"handleRgbaInputBlur()\"\n                    (valueChange)=\"handleRgbaValueChange()\"\n                    (keydown.tab)=\"$event.preventDefault(); tabOut.emit();\">\n                </kendo-numerictextbox>\n                <label [for]=\"alpha.focusableId\" class=\"k-colorgradient-input-label\">A</label>\n            </div>\n        </ng-container>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i1.LocalizationService }]; }, propDecorators: { focusableId: [{\n                type: Input\n            }], formatView: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], tabOut: [{\n                type: Output\n            }], colorInputClass: [{\n                type: HostBinding,\n                args: ['class.k-colorgradient-inputs']\n            }, {\n                type: HostBinding,\n                args: ['class.k-hstack']\n            }], opacityInput: [{\n                type: ViewChild,\n                args: ['opacityInput']\n            }], hexInput: [{\n                type: ViewChild,\n                args: ['hexInput']\n            }], blueInput: [{\n                type: ViewChild,\n                args: ['blueInput']\n            }], toggleFormatButton: [{\n                type: ViewChild,\n                args: ['toggleFormatButton', { static: false }]\n            }] } });\n\n/**\n * @hidden\n */\nclass ContrastValidationComponent {\n    constructor(localization) {\n        this.localization = localization;\n    }\n    get passMessage() {\n        return this.localization.get('passContrast');\n    }\n    get failMessage() {\n        return this.localization.get('failContrast');\n    }\n    get contrastText() {\n        let ratio = this.type === 'AA' ? AA_RATIO : AAA_RATIO;\n        return `${this.type}: ${ratio.toFixed(1)}`;\n    }\n}\nContrastValidationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContrastValidationComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nContrastValidationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContrastValidationComponent, selector: \"[kendoContrastValidation]\", inputs: { type: \"type\", pass: \"pass\", value: \"value\" }, ngImport: i0, template: `\n        <span>{{contrastText}}</span>\n        <ng-container *ngIf=\"value\">\n            <span class=\"k-contrast-validation k-text-success\" *ngIf=\"pass\">\n                {{passMessage}}\n                <span class=\"k-icon k-i-check\"></span>\n            </span>\n            <span class=\"k-contrast-validation k-text-error\" *ngIf=\"!pass\">\n                {{failMessage}}\n                <span class=\"k-icon k-i-x\"></span>\n            </span>\n        </ng-container>\n    `, isInline: true, directives: [{ type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContrastValidationComponent, decorators: [{\n            type: Component,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/component-selector\n                    selector: '[kendoContrastValidation]',\n                    template: `\n        <span>{{contrastText}}</span>\n        <ng-container *ngIf=\"value\">\n            <span class=\"k-contrast-validation k-text-success\" *ngIf=\"pass\">\n                {{passMessage}}\n                <span class=\"k-icon k-i-check\"></span>\n            </span>\n            <span class=\"k-contrast-validation k-text-error\" *ngIf=\"!pass\">\n                {{failMessage}}\n                <span class=\"k-icon k-i-x\"></span>\n            </span>\n        </ng-container>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; }, propDecorators: { type: [{\n                type: Input\n            }], pass: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass ContrastComponent {\n    constructor(localization) {\n        this.localization = localization;\n    }\n    get formatedRatio() {\n        return this.contrastRatio.toFixed(2);\n    }\n    get contrastRatioText() {\n        return `${this.localization.get('contrastRatio')}: ${this.value ? this.formatedRatio : 'n/a'}`;\n    }\n    get satisfiesAACondition() {\n        return this.contrastRatio >= AA_RATIO;\n    }\n    get satisfiesAAACondition() {\n        return this.contrastRatio >= AAA_RATIO;\n    }\n    get contrastRatio() {\n        let contrast = getContrastFromTwoRGBAs(getRGBA(this.value), getRGBA(this.ratio));\n        return contrast;\n    }\n}\nContrastComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContrastComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nContrastComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContrastComponent, selector: \"[kendoContrastTool]\", inputs: { value: \"value\", ratio: \"ratio\" }, ngImport: i0, template: `\n        <div class=\"k-contrast-ratio\">\n            <span class=\"k-contrast-ratio-text\">{{contrastRatioText}}</span>\n            <ng-container *ngIf=\"value\">\n                <span class=\"k-contrast-validation k-text-success\" *ngIf=\"satisfiesAACondition\">\n                    <span class=\"k-icon k-i-check\"></span>\n                    <span class=\"k-icon k-i-check\" *ngIf=\"satisfiesAAACondition\"></span>\n                </span>\n                <span class=\"k-contrast-validation k-text-error\" *ngIf=\"!satisfiesAACondition\">\n                    <span class=\"k-icon k-i-x\"></span>\n                </span>\n            </ng-container>\n        </div>\n        <div kendoContrastValidation\n            type=\"AA\"\n            [value]=\"value\"\n            [pass]=\"satisfiesAACondition\">\n        </div>\n        <div kendoContrastValidation\n            type=\"AAA\"\n            [value]=\"value\"\n            [pass]=\"satisfiesAAACondition\">\n        </div>\n    `, isInline: true, components: [{ type: ContrastValidationComponent, selector: \"[kendoContrastValidation]\", inputs: [\"type\", \"pass\", \"value\"] }], directives: [{ type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContrastComponent, decorators: [{\n            type: Component,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/component-selector\n                    selector: '[kendoContrastTool]',\n                    template: `\n        <div class=\"k-contrast-ratio\">\n            <span class=\"k-contrast-ratio-text\">{{contrastRatioText}}</span>\n            <ng-container *ngIf=\"value\">\n                <span class=\"k-contrast-validation k-text-success\" *ngIf=\"satisfiesAACondition\">\n                    <span class=\"k-icon k-i-check\"></span>\n                    <span class=\"k-icon k-i-check\" *ngIf=\"satisfiesAAACondition\"></span>\n                </span>\n                <span class=\"k-contrast-validation k-text-error\" *ngIf=\"!satisfiesAACondition\">\n                    <span class=\"k-icon k-i-x\"></span>\n                </span>\n            </ng-container>\n        </div>\n        <div kendoContrastValidation\n            type=\"AA\"\n            [value]=\"value\"\n            [pass]=\"satisfiesAACondition\">\n        </div>\n        <div kendoContrastValidation\n            type=\"AAA\"\n            [value]=\"value\"\n            [pass]=\"satisfiesAAACondition\">\n        </div>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; }, propDecorators: { value: [{\n                type: Input\n            }], ratio: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass ColorPickerMessages extends ComponentMessages {\n}\nColorPickerMessages.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPickerMessages, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nColorPickerMessages.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColorPickerMessages, selector: \"kendo-colorpicker-messages-base\", inputs: { colorPaletteNoColor: \"colorPaletteNoColor\", colorGradientNoColor: \"colorGradientNoColor\", flatColorPickerNoColor: \"flatColorPickerNoColor\", colorPickerNoColor: \"colorPickerNoColor\", colorGradientHandle: \"colorGradientHandle\", clearButton: \"clearButton\", hueSliderHandle: \"hueSliderHandle\", opacitySliderHandle: \"opacitySliderHandle\", hexInputPlaceholder: \"hexInputPlaceholder\", redInputPlaceholder: \"redInputPlaceholder\", greenInputPlaceholder: \"greenInputPlaceholder\", blueInputPlaceholder: \"blueInputPlaceholder\", alphaInputPlaceholder: \"alphaInputPlaceholder\", redChannelLabel: \"redChannelLabel\", greenChannelLabel: \"greenChannelLabel\", blueChannelLabel: \"blueChannelLabel\", alphaChannelLabel: \"alphaChannelLabel\", passContrast: \"passContrast\", failContrast: \"failContrast\", contrastRatio: \"contrastRatio\", previewColor: \"previewColor\", revertSelection: \"revertSelection\", gradientView: \"gradientView\", paletteView: \"paletteView\", formatButton: \"formatButton\", applyButton: \"applyButton\", cancelButton: \"cancelButton\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPickerMessages, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: 'kendo-colorpicker-messages-base'\n                }]\n        }], propDecorators: { colorPaletteNoColor: [{\n                type: Input\n            }], colorGradientNoColor: [{\n                type: Input\n            }], flatColorPickerNoColor: [{\n                type: Input\n            }], colorPickerNoColor: [{\n                type: Input\n            }], colorGradientHandle: [{\n                type: Input\n            }], clearButton: [{\n                type: Input\n            }], hueSliderHandle: [{\n                type: Input\n            }], opacitySliderHandle: [{\n                type: Input\n            }], hexInputPlaceholder: [{\n                type: Input\n            }], redInputPlaceholder: [{\n                type: Input\n            }], greenInputPlaceholder: [{\n                type: Input\n            }], blueInputPlaceholder: [{\n                type: Input\n            }], alphaInputPlaceholder: [{\n                type: Input\n            }], redChannelLabel: [{\n                type: Input\n            }], greenChannelLabel: [{\n                type: Input\n            }], blueChannelLabel: [{\n                type: Input\n            }], alphaChannelLabel: [{\n                type: Input\n            }], passContrast: [{\n                type: Input\n            }], failContrast: [{\n                type: Input\n            }], contrastRatio: [{\n                type: Input\n            }], previewColor: [{\n                type: Input\n            }], revertSelection: [{\n                type: Input\n            }], gradientView: [{\n                type: Input\n            }], paletteView: [{\n                type: Input\n            }], formatButton: [{\n                type: Input\n            }], applyButton: [{\n                type: Input\n            }], cancelButton: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass LocalizedColorPickerMessagesDirective extends ColorPickerMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nLocalizedColorPickerMessagesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalizedColorPickerMessagesDirective, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Directive });\nLocalizedColorPickerMessagesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LocalizedColorPickerMessagesDirective, selector: \"[kendoColorPickerLocalizedMessages], [kendoFlatColorPickerLocalizedMessages], [kendoColorGradientLocalizedMessages], [kendoColorPaletteLocalizedMessages]\", providers: [\n        {\n            provide: ColorPickerMessages,\n            useExisting: forwardRef(() => LocalizedColorPickerMessagesDirective)\n        }\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalizedColorPickerMessagesDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    providers: [\n                        {\n                            provide: ColorPickerMessages,\n                            useExisting: forwardRef(() => LocalizedColorPickerMessagesDirective)\n                        }\n                    ],\n                    selector: '[kendoColorPickerLocalizedMessages], [kendoFlatColorPickerLocalizedMessages], [kendoColorGradientLocalizedMessages], [kendoColorPaletteLocalizedMessages]'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\nlet serial$3 = 0;\n/**\n * The ColorGradient component enables smooth color transitions and provides options for selecting specific colors over the drag handle.\n * The ColorGradient is independently used by `kendo-colorpicker` and can be directly added to the page.\n */\nclass ColorGradientComponent {\n    constructor(host, ngZone, renderer, cdr, localizationService, injector) {\n        this.host = host;\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.localizationService = localizationService;\n        this.injector = injector;\n        this.hostClasses = true;\n        this.ariaRole = 'textbox';\n        /**\n         * @hidden\n         */\n        this.id = `k-colorgradient-${serial$3++}`;\n        /**\n         * Defines whether the alpha slider will be displayed.\n         *\n         * @default true\n         */\n        this.opacity = true;\n        /**\n         * Sets the disabled state of the ColorGradient.\n         *\n         * @default false\n         */\n        this.disabled = false;\n        /**\n         * Sets the read-only state of the ColorGradient.\n         *\n         * @default false\n         */\n        this.readonly = false;\n        /**\n         * Specifies whether the ColorGradient should display a 'Clear color' button.\n         *\n         * @default false\n         */\n        this.clearButton = false;\n        /**\n         * Determines the delay time (in milliseconds) before the value is changed on handle drag. A value of 0 indicates no delay.\n         *\n         * @default 0\n         */\n        this.delay = 0;\n        /**\n         * Specifies the output format of the ColorGradientComponent.\n         * The input value may be in a different format, but it will be parsed into the output `format`\n         * after the component processes it.\n         *\n         * The supported values are:\n         * * (Default) `rgba`\n         * * `hex`\n         */\n        this.format = DEFAULT_OUTPUT_FORMAT;\n        /**\n         * Fires each time the user selects a new color.\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.backgroundColor = DEFAULT_GRADIENT_BACKGROUND_COLOR;\n        /**\n         * @hidden\n         *\n         * Represents the currently selected `hue`, `saturation`, `value`, and `alpha` values.\n         * The values are initially set in `ngOnInit` or in `ngOnChanges` and are\n         * updated on moving the drag handle or the sliders.\n         */\n        this.hsva = new BehaviorSubject({});\n        /**\n         * Determines the step (in pixels) when moving the gradient drag handle using the keyboard arrow keys.\n         *\n         * @default 5\n         */\n        this.gradientSliderStep = DRAGHANDLE_MOVE_SPEED;\n        /**\n         * Determines the step (in pixels) when moving the gradient drag handle using the keyboard arrow keys while holding the shift key.\n         *\n         * @default 2\n         */\n        this.gradientSliderSmallStep = DRAGHANDLE_MOVE_SPEED_SMALL_STEP;\n        /**\n         * @hidden\n         */\n        this.internalNavigation = false;\n        this._tabindex = 0;\n        this.listeners = [];\n        this.hueSliderTouched = false;\n        this.alphaSliderTouched = false;\n        this.updateValues = new Subject();\n        this.hsvHandleCoordinates = { x: 0, y: 0 };\n        this.notifyNgChanged = () => { };\n        this.notifyNgTouched = () => { };\n        validatePackage(packageMetadata);\n        this.dynamicRTLSubscription = localizationService.changes.subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n        });\n    }\n    get readonlyAttribute() {\n        return this.readonly;\n    }\n    get disabledClass() {\n        return this.disabled;\n    }\n    get gradientId() {\n        return this.id;\n    }\n    get hostTabindex() {\n        var _a;\n        return ((_a = this.tabindex) === null || _a === void 0 ? void 0 : _a.toString()) || '0';\n    }\n    get isControlInvalid() {\n        var _a, _b;\n        return (_b = ((_a = this.control) === null || _a === void 0 ? void 0 : _a.invalid)) === null || _b === void 0 ? void 0 : _b.toString();\n    }\n    get isDisabled() {\n        var _a;\n        return ((_a = this.disabled) === null || _a === void 0 ? void 0 : _a.toString()) || undefined;\n    }\n    /**\n     * @hidden\n     */\n    enterHandler(event) {\n        if (event.target !== this.host.nativeElement) {\n            return;\n        }\n        this.internalNavigation = true;\n        this.gradientDragHandle.nativeElement.focus();\n    }\n    /**\n     * @hidden\n     */\n    escapeHandler(event) {\n        if (!this.host.nativeElement.matches(':focus')) {\n            event.stopImmediatePropagation();\n        }\n        this.internalNavigation = false;\n        this.host.nativeElement.focus();\n    }\n    /**\n     * @hidden\n     */\n    focusHandler(ev) {\n        this.internalNavigation = ev.target !== this.host.nativeElement;\n    }\n    /**\n     * Specifies the value of the initially selected color.\n     */\n    set value(value) {\n        this._value = parseColor(value, this.format, this.opacity);\n    }\n    get value() {\n        return this._value;\n    }\n    /**\n     * Enables the color contrast tool. Accepts the background color that will be compared to the selected value.\n     * The tool will calculate the contrast ratio between the two colors.\n     */\n    set contrastTool(value) {\n        this._contrastTool = parseColor(value, this.format, this.opacity);\n    }\n    get contrastTool() {\n        return this._contrastTool;\n    }\n    /**\n     * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     *\n     * @default 0\n     */\n    set tabindex(value) {\n        if (isPresent(value)) {\n            const tabindex = Number(value);\n            this._tabindex = !isNaN(tabindex) ? tabindex : 0;\n        }\n        else {\n            // Allows removal of the tabindex attribute\n            this._tabindex = value;\n        }\n    }\n    get tabindex() {\n        return !this.disabled ? this._tabindex : undefined;\n    }\n    /**\n     * Indicates whether the ColorGradient or any of its content is focused.\n     */\n    get isFocused() {\n        if (!(isDocumentAvailable() && isPresent(this.host))) {\n            return false;\n        }\n        return this.host.nativeElement === document.activeElement || this.host.nativeElement.contains(document.activeElement);\n    }\n    /**\n     * @hidden\n     */\n    get alphaSliderValue() {\n        // setting the initial value to undefined to force the slider to recalculate the height of the slider track on the next cdr run\n        if (!(isPresent(this.hsva.value) && isPresent(this.hsva.value.a))) {\n            return;\n        }\n        return this.hsva.value.a * 100;\n    }\n    get gradientRect() {\n        return this.gradientWrapper.nativeElement.getBoundingClientRect();\n    }\n    /**\n     * @hidden\n     */\n    get hsvSliderValueText() {\n        return `X: ${this.hsvHandleCoordinates.x} Y: ${this.hsvHandleCoordinates.y}`;\n    }\n    /**\n     * @hidden\n     */\n    get contrastToolVisible() {\n        return this.contrastTool && this.contrastTool.length > 0;\n    }\n    /**\n     * @hidden\n     */\n    get innerTabIndex() {\n        return this.internalNavigation ? 0 : -1;\n    }\n    ngOnInit() {\n        this.control = this.injector.get(NgControl, null);\n    }\n    ngAfterViewInit() {\n        this.updateUI();\n        this.cdr.detectChanges();\n        this.addEventListeners();\n        this.subscribeChanges();\n    }\n    ngOnChanges(changes) {\n        if (isChanged('value', changes) && !this.isFocused) {\n            this.updateUI();\n        }\n        if (isChanged('delay', changes)) {\n            this.unsubscribeChanges();\n            this.subscribeChanges();\n        }\n    }\n    ngOnDestroy() {\n        this.listeners.forEach(removeListener => removeListener());\n        if (this.dynamicRTLSubscription) {\n            this.dynamicRTLSubscription.unsubscribe();\n        }\n        this.unsubscribeChanges();\n    }\n    /**\n     * Focuses the component.\n     */\n    focus() {\n        if (this.disabled) {\n            return;\n        }\n        this.gradientDragHandle.nativeElement.focus();\n    }\n    /**\n     * @hidden\n     */\n    reset() {\n        this.handleValueChange(undefined);\n        this.updateUI();\n        this.host.nativeElement.focus();\n    }\n    /**\n     * @hidden\n     */\n    handleDragPress(args) {\n        if (this.disabled || this.readonly || !isPresent(args.originalEvent)) {\n            return;\n        }\n        this.focus();\n        args.originalEvent.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n    onHandleDrag(args) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        this.renderer.addClass(this.gradientWrapper.nativeElement, 'k-dragging');\n        this.changePosition(args);\n    }\n    /**\n     * @hidden\n     */\n    onHandleRelease() {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        this.renderer.removeClass(this.gradientWrapper.nativeElement, 'k-dragging');\n        this.handleValueChange(getColorFromHSV(this.hsva.value, this.format, this.opacity));\n    }\n    /**\n     * @hidden\n     */\n    onKeyboardAction(args) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        if (args.key && args.key.indexOf('Arrow') !== -1) {\n            args.preventDefault();\n            const dragHandleElement = this.gradientDragHandle.nativeElement;\n            this.renderer.addClass(this.gradientWrapper.nativeElement, 'k-dragging');\n            let keyboardMoveX = 0;\n            let keyboardMoveY = 0;\n            const shiftKey = args.shiftKey;\n            switch (args.key) {\n                case 'ArrowRight':\n                    keyboardMoveX = shiftKey ? this.gradientSliderSmallStep : this.gradientSliderStep;\n                    break;\n                case 'ArrowLeft':\n                    keyboardMoveX = shiftKey ? -this.gradientSliderSmallStep : -this.gradientSliderStep;\n                    break;\n                case 'ArrowUp':\n                    keyboardMoveY = shiftKey ? -this.gradientSliderSmallStep : -this.gradientSliderStep;\n                    break;\n                case 'ArrowDown':\n                    keyboardMoveY = shiftKey ? this.gradientSliderSmallStep : this.gradientSliderStep;\n                    break;\n                default: break;\n            }\n            const newY = parseInt(dragHandleElement.style.top, 10) + keyboardMoveY;\n            const newX = parseInt(dragHandleElement.style.left, 10) + keyboardMoveX;\n            this.renderer.setStyle(dragHandleElement, 'top', `${newY}px`);\n            this.renderer.setStyle(dragHandleElement, 'left', `${newX}px`);\n            this.ngZone.run(() => this.moveDragHandle(newX, newY));\n        }\n    }\n    /**\n     * @hidden\n     */\n    changePosition(position) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        this.gradientDragHandle.nativeElement.focus();\n        const gradientRect = this.gradientRect;\n        const newX = position.clientX - gradientRect.left;\n        const newY = position.clientY - gradientRect.top;\n        this.ngZone.run(() => this.moveDragHandle(newX, newY));\n    }\n    /**\n     * @hidden\n     */\n    handleHueSliderChange(hue) {\n        const hsva = this.hsva.value;\n        hsva.h = hue;\n        this.hsva.next(hsva);\n        this.handleValueChange(getColorFromHSV(this.hsva.value, this.format, this.opacity));\n        this.backgroundColor = getColorFromHue(hue);\n        this.setBackgroundColor(this.backgroundColor);\n        this.setAlphaSliderBackground(this.backgroundColor);\n        this.hueSliderTouched = true;\n    }\n    /**\n     * @hidden\n     */\n    handleAlphaSliderChange(alpha) {\n        const hsva = this.hsva.value;\n        hsva.a = alpha / 100;\n        this.hsva.next(hsva);\n        this.handleValueChange(getColorFromHSV(this.hsva.value, this.format, this.opacity));\n        this.alphaSliderTouched = true;\n    }\n    /**\n     * @hidden\n     */\n    handleInputsValueChange(color) {\n        const parsed = parseColor(color, this.format, this.opacity);\n        if (this.value !== parsed) {\n            this.handleValueChange(parsed);\n            this.updateUI();\n        }\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.value = value;\n        if (isPresent(this.gradientWrapper)) {\n            this.updateUI();\n        }\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.notifyNgChanged = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.notifyNgTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n        this.cdr.markForCheck();\n        this.disabled = isDisabled;\n    }\n    /**\n     * @hidden\n     */\n    get colorGradientHandleTitle() {\n        return this.localizationService.get('colorGradientHandle');\n    }\n    /**\n     * @hidden\n     */\n    get colorGradientHandleAriaLabel() {\n        const parsed = parseColor(this.value, this.format, this.opacity);\n        return `${this.value ? parsed : this.localizationService.get('colorGradientNoColor')}`;\n    }\n    /**\n     * @hidden\n     */\n    get hueSliderTitle() {\n        return this.localizationService.get('hueSliderHandle');\n    }\n    /**\n     * @hidden\n     */\n    get opacitySliderTitle() {\n        return this.localizationService.get('opacitySliderHandle');\n    }\n    /**\n     * @hidden\n     */\n    get clearButtonTitle() {\n        return this.localizationService.get('clearButton');\n    }\n    /**\n     * @hidden\n     * Used by the FloatingLabel to determine if the component is empty.\n     */\n    isEmpty() {\n        return false;\n    }\n    moveDragHandle(positionX, positionY) {\n        const gradientRect = this.gradientRect;\n        const gradientRectWidth = gradientRect.width;\n        const gradientRectHeight = gradientRect.height;\n        const top = fitIntoBounds(positionY, 0, gradientRectHeight);\n        const left = fitIntoBounds(positionX, 0, gradientRectWidth);\n        this.setDragHandleElementPosition(top, left);\n        const hsva = this.hsva.value;\n        hsva.s = left / gradientRectWidth;\n        hsva.v = 1 - top / gradientRectHeight;\n        this.hsva.next(hsva);\n        this.updateValues.next(getColorFromHSV(this.hsva.value, this.format, this.opacity));\n        this.setAlphaSliderBackground(getColorFromHSV(Object.assign(Object.assign({}, this.hsva.value), { a: 1 }), this.format, this.opacity));\n    }\n    handleValueChange(color) {\n        if (this.value === color) {\n            return;\n        }\n        this.value = color;\n        this.valueChange.emit(color);\n        this.notifyNgChanged(color);\n        this.setHostElementAriaLabel();\n    }\n    setDragHandleElementPosition(top, left) {\n        const dragHandle = this.gradientDragHandle.nativeElement;\n        this.hsvHandleCoordinates = { x: left, y: top };\n        this.renderer.setStyle(dragHandle, 'top', `${top}px`);\n        this.renderer.setStyle(dragHandle, 'left', `${left}px`);\n    }\n    setAlphaSliderBackground(backgroundColor) {\n        if (!isPresent(this.alphaSlider)) {\n            return;\n        }\n        const sliderTrack = this.alphaSlider.track.nativeElement;\n        this.renderer.setStyle(sliderTrack, 'background', `linear-gradient(to top, transparent, ${backgroundColor})`);\n    }\n    setHostElementAriaLabel() {\n        const parsed = parseColor(this.value, this.format, this.opacity);\n        this.renderer.setAttribute(this.host.nativeElement, 'aria-label', `${this.value ? parsed : this.localizationService.get('colorGradientNoColor')}`);\n    }\n    setBackgroundColor(color) {\n        this.renderer.setStyle(this.hsvRectangle.nativeElement, 'background', color);\n    }\n    updateUI() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        if (this.hueSliderTouched || this.alphaSliderTouched) {\n            this.hueSliderTouched = false;\n            this.alphaSliderTouched = false;\n            return;\n        }\n        this.hsva.next(this.value ? getHSV(this.value) : { h: 0, s: 0, v: 1, a: 1 });\n        const gradientRect = this.gradientRect;\n        const top = (1 - this.hsva.value.v) * gradientRect.height;\n        const left = this.hsva.value.s * gradientRect.width;\n        this.setDragHandleElementPosition(top, left);\n        this.backgroundColor = getColorFromHue(this.hsva.value.h);\n        this.setBackgroundColor(this.backgroundColor);\n        this.setAlphaSliderBackground(this.backgroundColor);\n        this.setHostElementAriaLabel();\n    }\n    addEventListeners() {\n        this.ngZone.runOutsideAngular(() => {\n            const focusOutListener = this.renderer.listen(this.host.nativeElement, 'focusout', (event) => {\n                if (!containsFocus(this.host.nativeElement, event.relatedTarget) && isUntouched(this.host)) {\n                    this.ngZone.run(() => this.notifyNgTouched());\n                }\n            });\n            const keydownListener = this.renderer.listen(this.gradientDragHandle.nativeElement, 'keydown', (event) => {\n                this.onKeyboardAction(event);\n            });\n            const keyupListener = this.renderer.listen(this.gradientDragHandle.nativeElement, 'keyup', () => {\n                this.renderer.removeClass(this.gradientWrapper.nativeElement, 'k-dragging');\n                if (!this.readonly && !this.disabled) {\n                    this.ngZone.run(() => this.handleValueChange(getColorFromHSV(this.hsva.value, this.format, this.opacity)));\n                }\n            });\n            const dragHandleFocusInListener = this.renderer.listen(this.gradientDragHandle.nativeElement, 'focusin', () => {\n                this.renderer.addClass(this.gradientDragHandle.nativeElement, 'k-focus');\n            });\n            const dragHandleFocusOutListener = this.renderer.listen(this.gradientDragHandle.nativeElement, 'focusout', () => {\n                this.renderer.removeClass(this.gradientDragHandle.nativeElement, 'k-focus');\n            });\n            this.listeners.push(focusOutListener, keydownListener, keyupListener, dragHandleFocusInListener, dragHandleFocusOutListener);\n        });\n    }\n    subscribeChanges() {\n        this.changeRequestsSubscription = this.updateValues.pipe(throttleTime(this.delay)).subscribe(value => {\n            this.handleValueChange(value);\n        });\n    }\n    unsubscribeChanges() {\n        if (this.changeRequestsSubscription) {\n            this.changeRequestsSubscription.unsubscribe();\n        }\n    }\n}\nColorGradientComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorGradientComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i1.LocalizationService }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\nColorGradientComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColorGradientComponent, selector: \"kendo-colorgradient\", inputs: { id: \"id\", opacity: \"opacity\", disabled: \"disabled\", readonly: \"readonly\", clearButton: \"clearButton\", delay: \"delay\", value: \"value\", contrastTool: \"contrastTool\", tabindex: \"tabindex\", format: \"format\", gradientSliderStep: \"gradientSliderStep\", gradientSliderSmallStep: \"gradientSliderSmallStep\" }, outputs: { valueChange: \"valueChange\" }, host: { listeners: { \"keydown.enter\": \"enterHandler($event)\", \"keydown.escape\": \"escapeHandler($event)\", \"focusin\": \"focusHandler($event)\" }, properties: { \"class.k-colorgradient\": \"this.hostClasses\", \"attr.aria-readonly\": \"this.readonlyAttribute\", \"class.k-disabled\": \"this.disabledClass\", \"attr.id\": \"this.gradientId\", \"attr.dir\": \"this.direction\", \"attr.tabindex\": \"this.hostTabindex\", \"attr.role\": \"this.ariaRole\", \"attr.aria-invalid\": \"this.isControlInvalid\", \"attr.aria-disabled\": \"this.isDisabled\" } }, providers: [\n        {\n            multi: true,\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ColorGradientComponent)\n        },\n        {\n            provide: KendoInput,\n            useExisting: forwardRef(() => ColorGradientComponent)\n        },\n        ColorGradientLocalizationService,\n        {\n            provide: LocalizationService,\n            useExisting: ColorGradientLocalizationService\n        },\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.colorgradient'\n        }\n    ], viewQueries: [{ propertyName: \"gradientDragHandle\", first: true, predicate: [\"gradientDragHandle\"], descendants: true }, { propertyName: \"inputs\", first: true, predicate: [\"inputs\"], descendants: true }, { propertyName: \"alphaSlider\", first: true, predicate: [\"alphaSlider\"], descendants: true }, { propertyName: \"gradientWrapper\", first: true, predicate: [\"gradientWrapper\"], descendants: true }, { propertyName: \"hsvRectangle\", first: true, predicate: [\"hsvRectangle\"], descendants: true }], exportAs: [\"kendoColorGradient\"], usesOnChanges: true, ngImport: i0, template: `\n        <ng-container kendoColorGradientLocalizedMessages\n            i18n-colorGradientNoColor=\"kendo.colorgradient.colorGradientNoColor|The aria-label applied to the ColorGradient component when the value is empty.\"\n            colorGradientNoColor=\"Colorgradient no color chosen\"\n            i18n-colorGradientHandle=\"kendo.colorgradient.colorGradientHandle|The title for the gradient color drag handle chooser.\"\n            colorGradientHandle=\"Choose color\"\n            i18n-clearButton=\"kendo.colorgradient.clearButton|The title for the clear button.\"\n            clearButton=\"Clear value\"\n            i18n-hueSliderHandle=\"kendo.colorgradient.hueSliderHandle|The title for the hue slider handle.\"\n            hueSliderHandle=\"Set hue\"\n            i18n-opacitySliderHandle=\"kendo.colorgradient.opacitySliderHandle|The title for the opacity slider handle.\"\n            opacitySliderHandle=\"Set opacity\"\n            i18n-passContrast=\"kendo.colorgradient.passContrast|The pass message for the contrast tool.\"\n            passContrast=\"Pass\"\n            i18n-failContrast=\"kendo.colorgradient.failContrast|The fail message for the contrast tool.\"\n            failContrast=\"Fail\"\n            i18n-contrastRatio=\"kendo.colorgradient.contrastRatio|The contrast ratio message for the contrast tool.\"\n            contrastRatio=\"Contrast ratio\"\n            i18n-formatButton=\"kendo.colorgradient.formatButton|The message for the input format toggle button.\"\n            formatButton=\"Change color format\"\n            i18n-redChannelLabel=\"kendo.colorgradient.redChannelLabel|The label of the NumericTextBox representing the red color channel.\"\n            redChannelLabel=\"Red channel\"\n            i18n-greenChannelLabel=\"kendo.colorgradient.greenChannelLabel|The label of the NumericTextBox representing the green color channel.\"\n            greenChannelLabel=\"Green channel\"\n            i18n-blueChannelLabel=\"kendo.colorgradient.blueChannelLabel|The label of the NumericTextBox representing the blue color channel.\"\n            blueChannelLabel=\"Blue channel\"\n            i18n-alphaChannelLabel=\"kendo.colorgradient.alphaChannelLabel|The label of the NumericTextBox representing the alpha color channel.\"\n            alphaChannelLabel=\"Alpha channel\"\n            i18n-redInputPlaceholder=\"kendo.colorgradient.redInputPlaceholder|The placeholder for the red color input.\"\n            redChannelLabel=\"R\"\n            i18n-greenInputPlaceholder=\"kendo.colorgradient.greenInputPlaceholder|The placeholder for the green color input.\"\n            greenInputPlaceholder=\"G\"\n            i18n-blueInputPlaceholder=\"kendo.colorgradient.blueInputPlaceholder|The placeholder for the blue color input.\"\n            blueInputPlaceholder=\"B\"\n            i18n-hexInputPlaceholder=\"kendo.colorgradient.hexInputPlaceholder|The placeholder for the HEX color input.\"\n            hexInputPlaceholder=\"HEX\">\n        </ng-container>\n        <div class=\"k-colorgradient-canvas k-hstack\">\n            <div class=\"k-hsv-rectangle\" #hsvRectangle>\n                <div\n                    #gradientWrapper\n                    kendoDraggable\n                    class=\"k-hsv-gradient\"\n                    (click)=\"changePosition($event)\"\n                    (kendoPress)=\"handleDragPress($event)\"\n                    (kendoDrag)=\"onHandleDrag($event)\"\n                    (kendoRelease)=\"onHandleRelease()\">\n                    <div\n                        #gradientDragHandle\n                        class=\"k-hsv-draghandle k-draghandle\"\n                        [tabindex]=\"innerTabIndex.toString()\"\n                        [attr.title]=\"colorGradientHandleTitle\"\n                        [attr.aria-label]=\"colorGradientHandleTitle + ' ' + colorGradientHandleAriaLabel\"\n                        role=\"slider\"\n                        [attr.aria-valuetext]=\"hsvSliderValueText\"\n                        [attr.aria-readonly]=\"readonly ? readonly : undefined\"\n                        [attr.aria-disabled]=\"disabled ? disabled : undefined\"\n                        [attr.aria-orientation]=\"'undefined'\"\n                        [attr.aria-valuenow]=\"'0'\"\n                        (keydown.shift.tab)=\"$event.preventDefault(); inputs.focusLast();\">\n                    </div>\n                </div>\n                <svg kendoColorContrastSvg\n                    *ngIf=\"contrastToolVisible && gradientWrapper\"\n                    class=\"k-color-contrast-svg\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    [wrapper]=\"gradientWrapper ? gradientWrapper : undefined\"\n                    [hsva]=\"hsva\"\n                    [backgroundColor]=\"contrastTool\">\n                </svg>\n            </div>\n            <div class=\"k-hsv-controls k-hstack {{ clearButton ? 'k-sliders-wrap-clearable' : '' }}\">\n                <span class=\"k-clear-color k-button k-button-md k-button-flat k-button-flat-base k-button-icon\"\n                    *ngIf=\"clearButton\"\n                    role=\"button\"\n                    (click)=\"reset()\"\n                    (keydown.enter)=\"reset()\"\n                    (keydown.space)=\"reset()\"\n                    [attr.aria-label]=\"clearButtonTitle\"\n                    [attr.title]=\"clearButtonTitle\"\n                    [tabindex]=\"innerTabIndex.toString()\">\n                    <span class=\"k-icon k-i-droplet-slash\"></span>\n                </span>\n                <kendo-slider\n                    [ngClass]=\"{'k-align-self-end': clearButton}\"\n                    class=\"k-hue-slider k-colorgradient-slider\"\n                    [dragHandleTitle]=\"hueSliderTitle\"\n                    [tabindex]=\"innerTabIndex\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [showButtons]=\"false\"\n                    tickPlacement=\"none\"\n                    [vertical]=\"true\"\n                    [min]=\"0\"\n                    [max]=\"360\"\n                    [value]=\"hsva.value.h\"\n                    [smallStep]=\"5\"\n                    [largeStep]=\"10\"\n                    (valueChange)=\"handleHueSliderChange($event)\"\n                >\n                </kendo-slider>\n                <kendo-slider\n                    *ngIf=\"opacity\"\n                    #alphaSlider\n                    [tabindex]=\"innerTabIndex\"\n                    [ngClass]=\"{'k-align-self-end': clearButton}\"\n                    class=\"k-alpha-slider k-colorgradient-slider\"\n                    [dragHandleTitle]=\"opacitySliderTitle\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [showButtons]=\"false\"\n                    tickPlacement=\"none\"\n                    [vertical]=\"true\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [smallStep]=\"1\"\n                    [largeStep]=\"10\"\n                    [value]=\"alphaSliderValue\"\n                    (valueChange)=\"handleAlphaSliderChange($event)\"\n                >\n                </kendo-slider>\n            </div>\n        </div>\n        <kendo-colorinput  #inputs\n            [tabindex]=\"innerTabIndex\"\n            [opacity]=\"opacity\"\n            [formatView]=\"format\"\n            [value]=\"value\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            (valueChange)=\"handleInputsValueChange($event)\"\n            (tabOut)=\"gradientDragHandle.focus()\"\n        >\n        </kendo-colorinput>\n        <div class=\"k-colorgradient-color-contrast k-vbox\"\n            *ngIf=\"contrastToolVisible\"\n            kendoContrastTool\n            [value]=\"value\"\n            [ratio]=\"contrastTool\">\n        </div>\n    `, isInline: true, styles: [\"\\n        .k-clear-color {\\n            position: absolute;\\n            top: 0;\\n            left: 50%;\\n            transform: translateX(-50%);\\n        }\\n        .k-colorgradient-slider.k-align-self-end {\\n            height: 140px;\\n        }\\n\\n        .k-color-contrast-svg {\\n            position: absolute;\\n            overflow: visible;\\n            pointer-events: none;\\n            left: 0px;\\n            top: 0px;\\n        }\\n    \"], components: [{ type: ColorContrastSvgComponent, selector: \"[kendoColorContrastSvg]\", inputs: [\"wrapper\", \"hsva\", \"backgroundColor\"] }, { type: SliderComponent, selector: \"kendo-slider\", inputs: [\"focusableId\", \"dragHandleTitle\", \"incrementTitle\", \"animate\", \"decrementTitle\", \"showButtons\", \"value\", \"tabIndex\"], exportAs: [\"kendoSlider\"] }, { type: ColorInputComponent, selector: \"kendo-colorinput\", inputs: [\"focusableId\", \"formatView\", \"tabindex\", \"value\", \"opacity\", \"disabled\", \"readonly\"], outputs: [\"valueChange\", \"tabOut\"] }, { type: ContrastComponent, selector: \"[kendoContrastTool]\", inputs: [\"value\", \"ratio\"] }], directives: [{ type: LocalizedColorPickerMessagesDirective, selector: \"[kendoColorPickerLocalizedMessages], [kendoFlatColorPickerLocalizedMessages], [kendoColorGradientLocalizedMessages], [kendoColorPaletteLocalizedMessages]\" }, { type: i3.DraggableDirective, selector: \"[kendoDraggable]\", inputs: [\"enableDrag\"], outputs: [\"kendoPress\", \"kendoDrag\", \"kendoRelease\"] }, { type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorGradientComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoColorGradient',\n                    selector: 'kendo-colorgradient',\n                    providers: [\n                        {\n                            multi: true,\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => ColorGradientComponent)\n                        },\n                        {\n                            provide: KendoInput,\n                            useExisting: forwardRef(() => ColorGradientComponent)\n                        },\n                        ColorGradientLocalizationService,\n                        {\n                            provide: LocalizationService,\n                            useExisting: ColorGradientLocalizationService\n                        },\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.colorgradient'\n                        }\n                    ],\n                    template: `\n        <ng-container kendoColorGradientLocalizedMessages\n            i18n-colorGradientNoColor=\"kendo.colorgradient.colorGradientNoColor|The aria-label applied to the ColorGradient component when the value is empty.\"\n            colorGradientNoColor=\"Colorgradient no color chosen\"\n            i18n-colorGradientHandle=\"kendo.colorgradient.colorGradientHandle|The title for the gradient color drag handle chooser.\"\n            colorGradientHandle=\"Choose color\"\n            i18n-clearButton=\"kendo.colorgradient.clearButton|The title for the clear button.\"\n            clearButton=\"Clear value\"\n            i18n-hueSliderHandle=\"kendo.colorgradient.hueSliderHandle|The title for the hue slider handle.\"\n            hueSliderHandle=\"Set hue\"\n            i18n-opacitySliderHandle=\"kendo.colorgradient.opacitySliderHandle|The title for the opacity slider handle.\"\n            opacitySliderHandle=\"Set opacity\"\n            i18n-passContrast=\"kendo.colorgradient.passContrast|The pass message for the contrast tool.\"\n            passContrast=\"Pass\"\n            i18n-failContrast=\"kendo.colorgradient.failContrast|The fail message for the contrast tool.\"\n            failContrast=\"Fail\"\n            i18n-contrastRatio=\"kendo.colorgradient.contrastRatio|The contrast ratio message for the contrast tool.\"\n            contrastRatio=\"Contrast ratio\"\n            i18n-formatButton=\"kendo.colorgradient.formatButton|The message for the input format toggle button.\"\n            formatButton=\"Change color format\"\n            i18n-redChannelLabel=\"kendo.colorgradient.redChannelLabel|The label of the NumericTextBox representing the red color channel.\"\n            redChannelLabel=\"Red channel\"\n            i18n-greenChannelLabel=\"kendo.colorgradient.greenChannelLabel|The label of the NumericTextBox representing the green color channel.\"\n            greenChannelLabel=\"Green channel\"\n            i18n-blueChannelLabel=\"kendo.colorgradient.blueChannelLabel|The label of the NumericTextBox representing the blue color channel.\"\n            blueChannelLabel=\"Blue channel\"\n            i18n-alphaChannelLabel=\"kendo.colorgradient.alphaChannelLabel|The label of the NumericTextBox representing the alpha color channel.\"\n            alphaChannelLabel=\"Alpha channel\"\n            i18n-redInputPlaceholder=\"kendo.colorgradient.redInputPlaceholder|The placeholder for the red color input.\"\n            redChannelLabel=\"R\"\n            i18n-greenInputPlaceholder=\"kendo.colorgradient.greenInputPlaceholder|The placeholder for the green color input.\"\n            greenInputPlaceholder=\"G\"\n            i18n-blueInputPlaceholder=\"kendo.colorgradient.blueInputPlaceholder|The placeholder for the blue color input.\"\n            blueInputPlaceholder=\"B\"\n            i18n-hexInputPlaceholder=\"kendo.colorgradient.hexInputPlaceholder|The placeholder for the HEX color input.\"\n            hexInputPlaceholder=\"HEX\">\n        </ng-container>\n        <div class=\"k-colorgradient-canvas k-hstack\">\n            <div class=\"k-hsv-rectangle\" #hsvRectangle>\n                <div\n                    #gradientWrapper\n                    kendoDraggable\n                    class=\"k-hsv-gradient\"\n                    (click)=\"changePosition($event)\"\n                    (kendoPress)=\"handleDragPress($event)\"\n                    (kendoDrag)=\"onHandleDrag($event)\"\n                    (kendoRelease)=\"onHandleRelease()\">\n                    <div\n                        #gradientDragHandle\n                        class=\"k-hsv-draghandle k-draghandle\"\n                        [tabindex]=\"innerTabIndex.toString()\"\n                        [attr.title]=\"colorGradientHandleTitle\"\n                        [attr.aria-label]=\"colorGradientHandleTitle + ' ' + colorGradientHandleAriaLabel\"\n                        role=\"slider\"\n                        [attr.aria-valuetext]=\"hsvSliderValueText\"\n                        [attr.aria-readonly]=\"readonly ? readonly : undefined\"\n                        [attr.aria-disabled]=\"disabled ? disabled : undefined\"\n                        [attr.aria-orientation]=\"'undefined'\"\n                        [attr.aria-valuenow]=\"'0'\"\n                        (keydown.shift.tab)=\"$event.preventDefault(); inputs.focusLast();\">\n                    </div>\n                </div>\n                <svg kendoColorContrastSvg\n                    *ngIf=\"contrastToolVisible && gradientWrapper\"\n                    class=\"k-color-contrast-svg\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    [wrapper]=\"gradientWrapper ? gradientWrapper : undefined\"\n                    [hsva]=\"hsva\"\n                    [backgroundColor]=\"contrastTool\">\n                </svg>\n            </div>\n            <div class=\"k-hsv-controls k-hstack {{ clearButton ? 'k-sliders-wrap-clearable' : '' }}\">\n                <span class=\"k-clear-color k-button k-button-md k-button-flat k-button-flat-base k-button-icon\"\n                    *ngIf=\"clearButton\"\n                    role=\"button\"\n                    (click)=\"reset()\"\n                    (keydown.enter)=\"reset()\"\n                    (keydown.space)=\"reset()\"\n                    [attr.aria-label]=\"clearButtonTitle\"\n                    [attr.title]=\"clearButtonTitle\"\n                    [tabindex]=\"innerTabIndex.toString()\">\n                    <span class=\"k-icon k-i-droplet-slash\"></span>\n                </span>\n                <kendo-slider\n                    [ngClass]=\"{'k-align-self-end': clearButton}\"\n                    class=\"k-hue-slider k-colorgradient-slider\"\n                    [dragHandleTitle]=\"hueSliderTitle\"\n                    [tabindex]=\"innerTabIndex\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [showButtons]=\"false\"\n                    tickPlacement=\"none\"\n                    [vertical]=\"true\"\n                    [min]=\"0\"\n                    [max]=\"360\"\n                    [value]=\"hsva.value.h\"\n                    [smallStep]=\"5\"\n                    [largeStep]=\"10\"\n                    (valueChange)=\"handleHueSliderChange($event)\"\n                >\n                </kendo-slider>\n                <kendo-slider\n                    *ngIf=\"opacity\"\n                    #alphaSlider\n                    [tabindex]=\"innerTabIndex\"\n                    [ngClass]=\"{'k-align-self-end': clearButton}\"\n                    class=\"k-alpha-slider k-colorgradient-slider\"\n                    [dragHandleTitle]=\"opacitySliderTitle\"\n                    [disabled]=\"disabled\"\n                    [readonly]=\"readonly\"\n                    [showButtons]=\"false\"\n                    tickPlacement=\"none\"\n                    [vertical]=\"true\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [smallStep]=\"1\"\n                    [largeStep]=\"10\"\n                    [value]=\"alphaSliderValue\"\n                    (valueChange)=\"handleAlphaSliderChange($event)\"\n                >\n                </kendo-slider>\n            </div>\n        </div>\n        <kendo-colorinput  #inputs\n            [tabindex]=\"innerTabIndex\"\n            [opacity]=\"opacity\"\n            [formatView]=\"format\"\n            [value]=\"value\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            (valueChange)=\"handleInputsValueChange($event)\"\n            (tabOut)=\"gradientDragHandle.focus()\"\n        >\n        </kendo-colorinput>\n        <div class=\"k-colorgradient-color-contrast k-vbox\"\n            *ngIf=\"contrastToolVisible\"\n            kendoContrastTool\n            [value]=\"value\"\n            [ratio]=\"contrastTool\">\n        </div>\n    `,\n                    styles: [`\n        .k-clear-color {\n            position: absolute;\n            top: 0;\n            left: 50%;\n            transform: translateX(-50%);\n        }\n        .k-colorgradient-slider.k-align-self-end {\n            height: 140px;\n        }\n\n        .k-color-contrast-svg {\n            position: absolute;\n            overflow: visible;\n            pointer-events: none;\n            left: 0px;\n            top: 0px;\n        }\n    `]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i1.LocalizationService }, { type: i0.Injector }]; }, propDecorators: { hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-colorgradient']\n            }], readonlyAttribute: [{\n                type: HostBinding,\n                args: ['attr.aria-readonly']\n            }], disabledClass: [{\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }], gradientId: [{\n                type: HostBinding,\n                args: ['attr.id']\n            }], direction: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], hostTabindex: [{\n                type: HostBinding,\n                args: ['attr.tabindex']\n            }], ariaRole: [{\n                type: HostBinding,\n                args: ['attr.role']\n            }], isControlInvalid: [{\n                type: HostBinding,\n                args: ['attr.aria-invalid']\n            }], isDisabled: [{\n                type: HostBinding,\n                args: ['attr.aria-disabled']\n            }], enterHandler: [{\n                type: HostListener,\n                args: ['keydown.enter', ['$event']]\n            }], escapeHandler: [{\n                type: HostListener,\n                args: ['keydown.escape', ['$event']]\n            }], focusHandler: [{\n                type: HostListener,\n                args: ['focusin', ['$event']]\n            }], id: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], clearButton: [{\n                type: Input\n            }], delay: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], contrastTool: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], gradientSliderStep: [{\n                type: Input\n            }], gradientSliderSmallStep: [{\n                type: Input\n            }], gradientDragHandle: [{\n                type: ViewChild,\n                args: ['gradientDragHandle']\n            }], inputs: [{\n                type: ViewChild,\n                args: ['inputs']\n            }], alphaSlider: [{\n                type: ViewChild,\n                args: ['alphaSlider']\n            }], gradientWrapper: [{\n                type: ViewChild,\n                args: ['gradientWrapper']\n            }], hsvRectangle: [{\n                type: ViewChild,\n                args: ['hsvRectangle']\n            }] } });\n\n/**\n * @hidden\n */\nclass ColorPaletteLocalizationService extends LocalizationService {\n    constructor(prefix, messageService, _rtl, flatColorPickerLocalization) {\n        super(prefix, messageService, _rtl);\n        this.flatColorPickerLocalization = flatColorPickerLocalization;\n    }\n    get(shortKey) {\n        if (this.flatColorPickerLocalization) {\n            return this.flatColorPickerLocalization.get(shortKey);\n        }\n        return super.get(shortKey);\n    }\n}\nColorPaletteLocalizationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPaletteLocalizationService, deps: [{ token: L10N_PREFIX }, { token: i1.MessageService, optional: true }, { token: RTL, optional: true }, { token: FlatColorPickerLocalizationService, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nColorPaletteLocalizationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPaletteLocalizationService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPaletteLocalizationService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [L10N_PREFIX]\n                }] }, { type: i1.MessageService, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [RTL]\n                }] }, { type: FlatColorPickerLocalizationService, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FlatColorPickerLocalizationService]\n                }] }]; } });\n\n/**\n * @hidden\n */\nclass ColorPaletteService {\n    constructor() {\n        this.colorRows = [];\n    }\n    setColorMatrix(palette, columns) {\n        this.colorRows = [];\n        if (!(isPresent(palette) && palette.length)) {\n            return;\n        }\n        columns = columns || palette.length;\n        for (let start = 0; start < palette.length; start += columns) {\n            const row = palette.slice(start, columns + start);\n            this.colorRows.push(row);\n        }\n    }\n    getCellCoordsFor(color) {\n        if (!isPresent(color)) {\n            return;\n        }\n        for (let row = 0; row < this.colorRows.length; row++) {\n            for (let col = 0; col < this.colorRows[row].length; col++) {\n                if (this.colorRows[row][col] === color) {\n                    return { row, col };\n                }\n            }\n        }\n    }\n    getColorAt(cellCoords) {\n        if (!(isPresent(cellCoords) && isPresent(this.colorRows[cellCoords.row]))) {\n            return;\n        }\n        return this.colorRows[cellCoords.row][cellCoords.col];\n    }\n    getNextCell(current, horizontalStep, verticalStep) {\n        if (!(isPresent(current) && isPresent(current.row) && isPresent(current.col))) {\n            return { row: 0, col: 0 };\n        }\n        const row = this.clampIndex(current.row + verticalStep, this.colorRows.length - 1);\n        const col = this.clampIndex(current.col + horizontalStep, this.colorRows[row].length - 1);\n        return { row, col };\n    }\n    clampIndex(index, max) {\n        const minArrayIndex = 0;\n        if (index < minArrayIndex) {\n            return minArrayIndex;\n        }\n        if (index > max) {\n            return max;\n        }\n        return index;\n    }\n}\nColorPaletteService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPaletteService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nColorPaletteService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPaletteService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPaletteService, decorators: [{\n            type: Injectable\n        }] });\n\nconst DEFAULT_TILE_SIZE = 24;\nconst DEFAULT_COLUMNS_COUNT = 10;\nconst DEFAULT_PRESET = 'office';\nconst DEFAULT_ACCESSIBLE_PRESET = 'accessible';\nlet serial$2 = 0;\n/**\n * The ColorPalette component provides a set of predefined palette presets and enables you to implement a custom color palette.\n * The ColorPalette is independently used by `kendo-colorpicker` and can be directly added to the page.\n */\nclass ColorPaletteComponent {\n    constructor(host, service, cdr, renderer, localizationService, ngZone) {\n        this.host = host;\n        this.service = service;\n        this.cdr = cdr;\n        this.renderer = renderer;\n        this.localizationService = localizationService;\n        this.ngZone = ngZone;\n        /**\n         * @hidden\n         */\n        this.role = 'grid';\n        /**\n         * @hidden\n         */\n        this.id = `k-colorpalette-${serial$2++}`;\n        /**\n         * Specifies the output format of the ColorPaletteComponent.\n         * The input value may be in a different format. However, it will be parsed into the output `format`\n         * after the component processes it.\n         *\n         * The supported values are:\n         * * (Default) `hex`\n         * * `rgba`\n         * * `name`\n         */\n        this.format = 'hex';\n        /**\n         * Sets the disabled state of the ColorPalette.\n         */\n        this.disabled = false;\n        /**\n         * Sets the read-only state of the ColorPalette.\n         */\n        this.readonly = false;\n        /**\n         * Specifies the size of a color cell.\n         *\n         * The possible values are:\n         * * (Default) `tileSize = 24`\n         * * `{ width: number, height: number }`\n         */\n        this.tileSize = { width: DEFAULT_TILE_SIZE, height: DEFAULT_TILE_SIZE };\n        /**\n         * Fires each time the color selection is changed.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Fires each time the value is changed.\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires each time the user selects a cell with the mouse or presses `Enter`.\n         *\n         * @hidden\n         */\n        this.cellSelection = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.hostClasses = true;\n        /**\n         * @hidden\n         */\n        this.uniqueId = guid();\n        this._tabindex = 0;\n        this.notifyNgTouched = () => { };\n        this.notifyNgChanged = () => { };\n        validatePackage(packageMetadata);\n        this.dynamicRTLSubscription = localizationService.changes.subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n        });\n    }\n    /**\n     * @hidden\n     */\n    get activeDescendant() {\n        return this.activeCellId;\n    }\n    ;\n    /**\n     * @hidden\n     */\n    get paletteId() {\n        return this.id;\n    }\n    /**\n     * Specifies the value of the initially selected color.\n     */\n    set value(value) {\n        this._value = parseColor(value, this.format);\n    }\n    get value() {\n        return this._value;\n    }\n    /**\n     * Specifies the number of columns that will be displayed.\n     * Defaults to `10`.\n     */\n    set columns(value) {\n        const minColumnsCount = 1;\n        this._columns = value > minColumnsCount ? value : minColumnsCount;\n    }\n    get columns() {\n        return this._columns;\n    }\n    /**\n     * The color palette that will be displayed.\n     *\n     * The supported values are:\n     * * The name of the predefined palette preset (for example, `office`, `basic`, and `apex`).\n     * * A string with comma-separated colors.\n     * * A string array.\n     */\n    set palette(value) {\n        if (!isPresent(value)) {\n            value = DEFAULT_PRESET;\n        }\n        if (typeof value === 'string' && isPresent(PALETTEPRESETS[value])) {\n            this.columns = this.columns || PALETTEPRESETS[value].columns;\n            value = PALETTEPRESETS[value].colors;\n        }\n        const colors = (typeof value === 'string') ? value.split(',') : value;\n        this._palette = colors.map(color => parseColor(color, this.format, false, false));\n    }\n    get palette() {\n        return this._palette;\n    }\n    /**\n     * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n    set tabindex(value) {\n        const tabindex = Number(value);\n        const defaultValue = 0;\n        this._tabindex = !isNaN(tabindex) ? tabindex : defaultValue;\n    }\n    get tabindex() {\n        return !this.disabled ? this._tabindex : undefined;\n    }\n    /**\n     * @hidden\n     */\n    get tileLayout() {\n        if (typeof this.tileSize !== 'number') {\n            return this.tileSize;\n        }\n        return { width: this.tileSize, height: this.tileSize };\n    }\n    /**\n     * @hidden\n     */\n    get colorRows() {\n        return this.service.colorRows;\n    }\n    /**\n     * @hidden\n     */\n    get hostTabindex() { return this.tabindex; }\n    /**\n     * @hidden\n     */\n    get disabledClass() { return this.disabled; }\n    /**\n     * @hidden\n     */\n    get readonlyAttribute() { return this.readonly; }\n    ngOnInit() {\n        if (this.colorRows.length === 0) {\n            const defaultPreset = (this.format !== 'name') ? DEFAULT_PRESET : DEFAULT_ACCESSIBLE_PRESET;\n            this.palette = this.palette || defaultPreset;\n            this.setRows();\n        }\n    }\n    ngAfterViewInit() {\n        this.setHostElementAriaLabel();\n        if (this.value) {\n            this.ngZone.onStable.pipe(take(1)).subscribe(() => {\n                this.selectCell(this.value);\n            });\n        }\n    }\n    ngOnDestroy() {\n        if (this.dynamicRTLSubscription) {\n            this.dynamicRTLSubscription.unsubscribe();\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes.palette || changes.columns) {\n            this.setRows();\n        }\n        if (changes.palette || changes.value || changes.columns) {\n            this.selectCell(this.value);\n            this.setHostElementAriaLabel();\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleKeydown(event) {\n        const isRTL = this.direction === 'rtl';\n        switch (event.keyCode) {\n            case Keys.ArrowDown:\n                this.handleCellNavigation(0, 1);\n                break;\n            case Keys.ArrowUp:\n                this.handleCellNavigation(0, -1);\n                break;\n            case Keys.ArrowRight:\n                this.handleCellNavigation(isRTL ? -1 : 1, 0);\n                break;\n            case Keys.ArrowLeft:\n                this.handleCellNavigation(isRTL ? 1 : -1, 0);\n                break;\n            case Keys.Enter:\n                this.handleEnter();\n                break;\n            default: return;\n        }\n        event.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n    handleFocus() {\n        if (!this.focusInComponent) {\n            this.focus();\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleHostBlur() {\n        this.notifyNgTouched();\n        this.handleCellFocusOnBlur();\n    }\n    /**\n     * @hidden\n     */\n    handleCellSelection(value, focusedCell) {\n        if (this.readonly) {\n            return;\n        }\n        this.selectedCell = focusedCell;\n        this.focusedCell = this.selectedCell;\n        this.focusInComponent = true;\n        const parsedColor = parseColor(value, this.format, false, false);\n        this.cellSelection.emit(parsedColor);\n        this.handleValueChange(parsedColor);\n        if (this.selection !== parsedColor) {\n            this.selection = parsedColor;\n            this.selectionChange.emit(parsedColor);\n        }\n        if (focusedCell) {\n            this.activeCellId = `k-${this.selectedCell.row}-${this.selectedCell.col}-${this.uniqueId}`;\n        }\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.value = value;\n        this.selectCell(value);\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.notifyNgChanged = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.notifyNgTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n        this.cdr.markForCheck();\n        this.disabled = isDisabled;\n    }\n    /**\n     * @hidden\n     */\n    focus() {\n        this.host.nativeElement.focus();\n        if (!this.focusedCell && !this.readonly && !this.disabled) {\n            this.focusedCell = {\n                row: 0,\n                col: 0\n            };\n        }\n    }\n    /**\n     * @hidden\n     * Used by the FloatingLabel to determine if the component is empty.\n     */\n    isEmpty() {\n        return false;\n    }\n    /**\n     * Clears the color value of the ColorPalette.\n     */\n    reset() {\n        this.focusedCell = null;\n        if (isPresent(this.value)) {\n            this.handleValueChange(undefined);\n        }\n        this.selectedCell = undefined;\n    }\n    handleValueChange(color) {\n        if (this.value === color) {\n            return;\n        }\n        this.value = color;\n        this.valueChange.emit(color);\n        this.notifyNgChanged(color);\n        this.setHostElementAriaLabel();\n    }\n    handleCellFocusOnBlur() {\n        this.focusInComponent = false;\n        this.focusedCell = this.selectedCell;\n    }\n    selectCell(value) {\n        this.selectedCell = this.service.getCellCoordsFor(value);\n        this.focusedCell = this.selectedCell;\n    }\n    setRows() {\n        if (!isPresent(this.palette)) {\n            return;\n        }\n        this.columns = this.columns || DEFAULT_COLUMNS_COUNT;\n        this.service.setColorMatrix(this.palette, this.columns);\n    }\n    handleCellNavigation(horizontalStep, verticalStep) {\n        if (this.readonly) {\n            return;\n        }\n        this.focusedCell = this.service.getNextCell(this.focusedCell, horizontalStep, verticalStep);\n        this.focusInComponent = true;\n    }\n    setHostElementAriaLabel() {\n        const parsed = parseColor(this.value, this.format);\n        this.renderer.setAttribute(this.host.nativeElement, 'aria-label', `${this.value ? parsed : this.localizationService.get('colorPaletteNoColor')}`);\n    }\n    handleEnter() {\n        if (!isPresent(this.focusedCell)) {\n            return;\n        }\n        const selectedColor = this.service.getColorAt(this.focusedCell);\n        this.handleCellSelection(selectedColor, this.focusedCell);\n    }\n}\nColorPaletteComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPaletteComponent, deps: [{ token: i0.ElementRef }, { token: ColorPaletteService }, { token: i0.ChangeDetectorRef }, { token: i0.Renderer2 }, { token: i1.LocalizationService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nColorPaletteComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColorPaletteComponent, selector: \"kendo-colorpalette\", inputs: { id: \"id\", format: \"format\", value: \"value\", columns: \"columns\", palette: \"palette\", tabindex: \"tabindex\", disabled: \"disabled\", readonly: \"readonly\", tileSize: \"tileSize\" }, outputs: { selectionChange: \"selectionChange\", valueChange: \"valueChange\", cellSelection: \"cellSelection\" }, host: { listeners: { \"keydown\": \"handleKeydown($event)\", \"focus\": \"handleFocus($event)\", \"blur\": \"handleHostBlur()\" }, properties: { \"attr.dir\": \"this.direction\", \"attr.role\": \"this.role\", \"attr.aria-activedescendant\": \"this.activeDescendant\", \"attr.id\": \"this.paletteId\", \"attr.tabindex\": \"this.hostTabindex\", \"class.k-colorpalette\": \"this.hostClasses\", \"attr.aria-disabled\": \"this.disabledClass\", \"class.k-disabled\": \"this.disabledClass\", \"attr.aria-readonly\": \"this.readonlyAttribute\" } }, providers: [\n        {\n            multi: true,\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ColorPaletteComponent)\n        }, {\n            provide: KendoInput,\n            useExisting: forwardRef(() => ColorPaletteComponent)\n        },\n        ColorPaletteService,\n        ColorPaletteLocalizationService,\n        {\n            provide: LocalizationService,\n            useExisting: ColorPaletteLocalizationService\n        },\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.colorpalette'\n        }\n    ], exportAs: [\"kendoColorPalette\"], usesOnChanges: true, ngImport: i0, template: `\n        <ng-container kendoColorPaletteLocalizedMessages\n            i18n-colorPaletteNoColor=\"kendo.colorpalette.colorPaletteNoColor|The aria-label applied to the ColorPalette component when the value is empty.\"\n            colorPaletteNoColor=\"Colorpalette no color chosen\">\n        </ng-container>\n        <div class=\"k-colorpalette-table-wrap\">\n            <table role=\"presentation\" class=\"k-colorpalette-table k-palette\">\n                <tbody>\n                    <tr *ngFor=\"let row of colorRows; let rowIndex = index\" role=\"row\">\n                        <td *ngFor=\"let color of row; let colIndex = index\"\n                            role=\"gridcell\"\n                            [class.k-selected]=\"selectedCell?.row === rowIndex && selectedCell?.col === colIndex\"\n                            [class.k-focus]=\"focusInComponent && focusedCell?.row === rowIndex && focusedCell?.col === colIndex\"\n                            [attr.aria-selected]=\"selectedCell?.row === rowIndex && selectedCell?.col === colIndex\"\n                            [attr.aria-label]=\"color\"\n                            class=\"k-colorpalette-tile\"\n                            [id]=\"'k-' + rowIndex + '-' + colIndex + '-' + uniqueId\"\n                            [attr.value]=\"color\"\n                            (click)=\"handleCellSelection(color, { row: rowIndex, col: colIndex })\"\n                            [ngStyle]=\"{\n                                backgroundColor: color,\n                                width: tileLayout.width + 'px',\n                                height: tileLayout.height + 'px',\n                                minWidth: tileLayout.width + 'px'\n                            }\">\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    `, isInline: true, directives: [{ type: LocalizedColorPickerMessagesDirective, selector: \"[kendoColorPickerLocalizedMessages], [kendoFlatColorPickerLocalizedMessages], [kendoColorGradientLocalizedMessages], [kendoColorPaletteLocalizedMessages]\" }, { type: i1$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1$1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPaletteComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoColorPalette',\n                    selector: 'kendo-colorpalette',\n                    providers: [\n                        {\n                            multi: true,\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => ColorPaletteComponent)\n                        }, {\n                            provide: KendoInput,\n                            useExisting: forwardRef(() => ColorPaletteComponent)\n                        },\n                        ColorPaletteService,\n                        ColorPaletteLocalizationService,\n                        {\n                            provide: LocalizationService,\n                            useExisting: ColorPaletteLocalizationService\n                        },\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.colorpalette'\n                        }\n                    ],\n                    template: `\n        <ng-container kendoColorPaletteLocalizedMessages\n            i18n-colorPaletteNoColor=\"kendo.colorpalette.colorPaletteNoColor|The aria-label applied to the ColorPalette component when the value is empty.\"\n            colorPaletteNoColor=\"Colorpalette no color chosen\">\n        </ng-container>\n        <div class=\"k-colorpalette-table-wrap\">\n            <table role=\"presentation\" class=\"k-colorpalette-table k-palette\">\n                <tbody>\n                    <tr *ngFor=\"let row of colorRows; let rowIndex = index\" role=\"row\">\n                        <td *ngFor=\"let color of row; let colIndex = index\"\n                            role=\"gridcell\"\n                            [class.k-selected]=\"selectedCell?.row === rowIndex && selectedCell?.col === colIndex\"\n                            [class.k-focus]=\"focusInComponent && focusedCell?.row === rowIndex && focusedCell?.col === colIndex\"\n                            [attr.aria-selected]=\"selectedCell?.row === rowIndex && selectedCell?.col === colIndex\"\n                            [attr.aria-label]=\"color\"\n                            class=\"k-colorpalette-tile\"\n                            [id]=\"'k-' + rowIndex + '-' + colIndex + '-' + uniqueId\"\n                            [attr.value]=\"color\"\n                            (click)=\"handleCellSelection(color, { row: rowIndex, col: colIndex })\"\n                            [ngStyle]=\"{\n                                backgroundColor: color,\n                                width: tileLayout.width + 'px',\n                                height: tileLayout.height + 'px',\n                                minWidth: tileLayout.width + 'px'\n                            }\">\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: ColorPaletteService }, { type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i1.LocalizationService }, { type: i0.NgZone }]; }, propDecorators: { direction: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], role: [{\n                type: HostBinding,\n                args: ['attr.role']\n            }], activeDescendant: [{\n                type: HostBinding,\n                args: ['attr.aria-activedescendant']\n            }], paletteId: [{\n                type: HostBinding,\n                args: ['attr.id']\n            }], id: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], columns: [{\n                type: Input\n            }], palette: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], tileSize: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }], cellSelection: [{\n                type: Output\n            }], hostTabindex: [{\n                type: HostBinding,\n                args: ['attr.tabindex']\n            }], hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-colorpalette']\n            }], disabledClass: [{\n                type: HostBinding,\n                args: ['attr.aria-disabled']\n            }, {\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }], readonlyAttribute: [{\n                type: HostBinding,\n                args: ['attr.aria-readonly']\n            }], handleKeydown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }], handleFocus: [{\n                type: HostListener,\n                args: ['focus', ['$event']]\n            }], handleHostBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }] } });\n\n/**\n * @hidden\n */\nclass FlatColorPickerActionButtonsComponent {\n    constructor(localizationService) {\n        this.localizationService = localizationService;\n        this.hostClasses = true;\n        this.innerTabIndex = -1;\n        this.actionButtonClick = new EventEmitter();\n        this.tabOut = new EventEmitter();\n    }\n    getText(text) {\n        return this.localizationService.get(text);\n    }\n    onActionButtonClick(type, ev) {\n        let args = {\n            target: type,\n            originalEvent: ev\n        };\n        this.actionButtonClick.emit(args);\n    }\n}\nFlatColorPickerActionButtonsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FlatColorPickerActionButtonsComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nFlatColorPickerActionButtonsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FlatColorPickerActionButtonsComponent, selector: \"[kendoFlatColorPickerActionButtons]\", inputs: { innerTabIndex: \"innerTabIndex\" }, outputs: { actionButtonClick: \"actionButtonClick\", tabOut: \"tabOut\" }, host: { properties: { \"class.k-coloreditor-footer\": \"this.hostClasses\", \"class.k-actions\": \"this.hostClasses\", \"class.k-hstack\": \"this.hostClasses\" } }, viewQueries: [{ propertyName: \"firstButton\", first: true, predicate: [\"first\"], descendants: true, read: ElementRef }, { propertyName: \"lastButton\", first: true, predicate: [\"last\"], descendants: true, read: ElementRef }], ngImport: i0, template: `\n        <button #first\n            class=\"k-coloreditor-cancel k-button k-button-md k-button-solid k-button-solid-base\"\n            [attr.title]=\"getText('cancelButton')\"\n            (click)=\"onActionButtonClick('cancel', $event)\"\n            type=\"button\"\n            [tabindex]=\"innerTabIndex.toString()\"\n        >{{getText('cancelButton')}}</button>\n        <button #last\n            class=\"k-coloreditor-apply k-button k-button-md k-button-solid k-button-solid-primary\"\n            [attr.title]=\"getText('applyButton')\"\n            (click)=\"onActionButtonClick('apply', $event)\"\n            type=\"button\"\n            [tabindex]=\"innerTabIndex.toString()\"\n            (keydown.tab)=\"$event.preventDefault(); tabOut.emit();\"\n        >{{getText('applyButton')}}</button>\n    `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FlatColorPickerActionButtonsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/component-selector\n                    selector: '[kendoFlatColorPickerActionButtons]',\n                    template: `\n        <button #first\n            class=\"k-coloreditor-cancel k-button k-button-md k-button-solid k-button-solid-base\"\n            [attr.title]=\"getText('cancelButton')\"\n            (click)=\"onActionButtonClick('cancel', $event)\"\n            type=\"button\"\n            [tabindex]=\"innerTabIndex.toString()\"\n        >{{getText('cancelButton')}}</button>\n        <button #last\n            class=\"k-coloreditor-apply k-button k-button-md k-button-solid k-button-solid-primary\"\n            [attr.title]=\"getText('applyButton')\"\n            (click)=\"onActionButtonClick('apply', $event)\"\n            type=\"button\"\n            [tabindex]=\"innerTabIndex.toString()\"\n            (keydown.tab)=\"$event.preventDefault(); tabOut.emit();\"\n        >{{getText('applyButton')}}</button>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; }, propDecorators: { hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-coloreditor-footer']\n            }, {\n                type: HostBinding,\n                args: ['class.k-actions']\n            }, {\n                type: HostBinding,\n                args: ['class.k-hstack']\n            }], innerTabIndex: [{\n                type: Input\n            }], actionButtonClick: [{\n                type: Output\n            }], tabOut: [{\n                type: Output\n            }], firstButton: [{\n                type: ViewChild,\n                args: ['first', { read: ElementRef }]\n            }], lastButton: [{\n                type: ViewChild,\n                args: ['last', { read: ElementRef }]\n            }] } });\n\n/* eslint-disable no-unused-expressions */\n/**\n * Represents the [Kendo UI FlatColorPicker component for Angular]({% slug overview_flatcolorpicker %}).\n *\n * The FlatColorPicker is a powerful tool which allows the user to choose colors through palettes with predefined sets of colors and\n * through a gradient that renders an hsv canvas. It supports previewing the selected color, reverting it to its previous state or clearing it completely.\n */\nclass FlatColorPickerComponent {\n    constructor(host, service, localizationService, cdr, renderer, ngZone, injector) {\n        this.host = host;\n        this.service = service;\n        this.localizationService = localizationService;\n        this.cdr = cdr;\n        this.renderer = renderer;\n        this.ngZone = ngZone;\n        this.injector = injector;\n        this.hostClasses = true;\n        this.ariaRole = 'textbox';\n        /**\n         * Sets the read-only state of the FlatColorPicker.\n         *\n         * @default false\n         */\n        this.readonly = false;\n        /**\n         * Sets the disabled state of the FlatColorPicker.\n         *\n         * @default false\n         */\n        this.disabled = false;\n        /**\n         * Specifies the output format of the FlatColorPicker.\n         *\n         * If the input value is in a different format, it will be parsed into the specified output `format`.\n         *\n         * The supported values are:\n         * * `rgba` (default)\n         * * `hex`\n         */\n        this.format = 'rgba';\n        /**\n         * Specifies whether the FlatColorPicker should display a 'Clear color' button.\n         *\n         * @default true\n         */\n        this.clearButton = true;\n        /**\n         * Displays `Apply` and `Cancel` action buttons and a color preview pane.\n         *\n         * When enabled, the component value will not change immediately upon\n         * color selection, but only after the `Apply` button is clicked.\n         *\n         * The `Cancel` button reverts the current selection to its\n         * initial state i.e. to the current value.\n         *\n         * @default true\n         */\n        this.preview = true;\n        /**\n         * Configures the layout of the `Apply` and `Cancel` action buttons.\n         * * `start`\n         * * `center`\n         * * `end` (default)\n         * * `stretch`\n         */\n        this.actionsLayout = 'end';\n        /**\n         * Specifies the views that will be rendered. Default value is gradient and palette.\n         */\n        this.views = ['gradient', 'palette'];\n        /**\n         * Fires each time the component value is changed.\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires when the user cancels the current color selection.\n         *\n         * The event is emitted on preview pane or on 'Cancel' button click.\n         */\n        this.cancel = new EventEmitter();\n        /**\n         * Fires each time the view is about to change.\n         * Used to provide a two-way binding for the `activeView` property.\n         */\n        this.activeViewChange = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.actionButtonClick = new EventEmitter();\n        this._tabindex = 0;\n        this._gradientSettings = {\n            opacity: true,\n            delay: 0,\n            gradientSliderStep: DRAGHANDLE_MOVE_SPEED,\n            gradientSliderSmallStep: DRAGHANDLE_MOVE_SPEED_SMALL_STEP\n        };\n        this._paletteSettings = {};\n        this.subscriptions = new Subscription();\n        this.internalNavigation = false;\n        this.notifyNgChanged = () => { };\n        this.notifyNgTouched = () => { };\n        validatePackage(packageMetadata);\n        this.dynamicRTLSubscription = this.localizationService.changes.subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n        });\n    }\n    get disabledClass() {\n        return this.disabled;\n    }\n    get ariaReadonly() {\n        return this.readonly;\n    }\n    get hostTabindex() {\n        var _a;\n        return ((_a = this.tabindex) === null || _a === void 0 ? void 0 : _a.toString()) || '0';\n    }\n    get isControlInvalid() {\n        var _a, _b;\n        return (_b = ((_a = this.control) === null || _a === void 0 ? void 0 : _a.invalid)) === null || _b === void 0 ? void 0 : _b.toString();\n    }\n    get isDisabled() {\n        var _a;\n        return ((_a = this.disabled) === null || _a === void 0 ? void 0 : _a.toString()) || undefined;\n    }\n    /**\n     * @hidden\n     */\n    enterHandler(event) {\n        if (event.target !== this.host.nativeElement) {\n            return;\n        }\n        event.preventDefault();\n        this.internalNavigation = true;\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => { var _a; return (_a = this.firstFocusable) === null || _a === void 0 ? void 0 : _a.focus(); });\n    }\n    /**\n     * @hidden\n     */\n    escapeHandler() {\n        this.internalNavigation = false;\n        this.host.nativeElement.focus();\n    }\n    /**\n     * @hidden\n     */\n    focusHandler(ev) {\n        this.internalNavigation = ev.target !== this.host.nativeElement;\n    }\n    /**\n     * Specifies the initially selected color.\n     */\n    set value(value) {\n        this._value = parseColor(value, this.format, this.gradientSettings.opacity);\n    }\n    get value() {\n        return this._value;\n    }\n    /**\n     * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     *\n     * @default 0\n     */\n    set tabindex(value) {\n        if (isPresent(value)) {\n            const tabindex = Number(value);\n            this._tabindex = !isNaN(tabindex) ? tabindex : 0;\n        }\n        else {\n            // Allows removal of the tabindex attribute\n            this._tabindex = value;\n        }\n    }\n    get tabindex() {\n        return !this.disabled ? this._tabindex : undefined;\n    }\n    /**\n     * Configures the gradient view.\n     */\n    set gradientSettings(value) {\n        Object.assign(this._gradientSettings, value);\n    }\n    get gradientSettings() {\n        return this._gradientSettings;\n    }\n    /**\n     * Configures the palette view.\n     */\n    set paletteSettings(value) {\n        Object.assign(this._paletteSettings, value);\n    }\n    get paletteSettings() {\n        return this._paletteSettings;\n    }\n    /**\n     * @hidden\n     */\n    get innerTabIndex() {\n        return this.internalNavigation ? 0 : -1;\n    }\n    /**\n     * @hidden\n     */\n    get firstFocusable() {\n        if (this.headerHasContent) {\n            return this.headerElement.nativeElement.querySelector('.k-button');\n        }\n        return this.activeView === 'gradient' ? this.gradient : this.palette;\n    }\n    /**\n     * @hidden\n     */\n    get lastFocusable() {\n        if (this.preview) {\n            return this.footer.lastButton.nativeElement;\n        }\n        return this.activeView === 'gradient' ? this.gradient : this.palette;\n    }\n    ngOnInit() {\n        this.selection = this.value;\n        this.control = this.injector.get(NgControl, null);\n        this._paletteSettings = this.service.getPaletteSettings(this._paletteSettings, this.format);\n        this.setActiveView();\n    }\n    ngAfterViewInit() {\n        this.setHostElementAriaLabel();\n        this.initDomEvents();\n        this.setSizingVariables();\n        this.removeGradientAttributes();\n    }\n    ngOnChanges(changes) {\n        if (isChanged('value', changes)) {\n            this.selection = this.value;\n            this.setHostElementAriaLabel();\n        }\n        if (isChanged('paletteSettings', changes)) {\n            this.setSizingVariables();\n        }\n    }\n    ngOnDestroy() {\n        if (this.dynamicRTLSubscription) {\n            this.dynamicRTLSubscription.unsubscribe();\n        }\n        this.subscriptions.unsubscribe();\n    }\n    /**\n     * @hidden\n     */\n    onTab(ev) {\n        const { shiftKey } = ev;\n        const nextTabStop = this.preview ? this.footer.firstButton.nativeElement : this.headerHasContent ? findFocusableChild(this.headerElement.nativeElement) : null;\n        const previousTabStop = this.headerHasContent ? findFocusableChild(this.headerElement.nativeElement) : this.preview ? this.footer.lastButton.nativeElement : null;\n        if (!nextTabStop && !previousTabStop) {\n            return;\n        }\n        ev.preventDefault();\n        // eslint-disable-next-line no-unused-expressions\n        shiftKey ? previousTabStop === null || previousTabStop === void 0 ? void 0 : previousTabStop.focus() : nextTabStop === null || nextTabStop === void 0 ? void 0 : nextTabStop.focus();\n    }\n    /**\n     * @hidden\n     */\n    get headerHasContent() {\n        return this.preview || this.views.length > 1 || this.clearButton;\n    }\n    /**\n     * @hidden\n     * Used by the FloatingLabel to determine if the component is empty.\n     */\n    isEmpty() {\n        return false;\n    }\n    /**\n     * Focuses the wrapper of the FlatColorPicker.\n     */\n    focus() {\n        if (this.disabled || this.focused) {\n            return;\n        }\n        this.host.nativeElement.focus();\n        this.focused = true;\n    }\n    /**\n     * Blurs the wrapper of the FlatColorPicker.\n     */\n    blur() {\n        if (!this.focused) {\n            return;\n        }\n        this.notifyNgTouched();\n        this.host.nativeElement.blur();\n        this.focused = false;\n    }\n    /**\n     * Clears the value of the FlatColorPicker.\n     */\n    reset() {\n        if (!isPresent(this.value)) {\n            return;\n        }\n        this.value = undefined;\n        this.notifyNgChanged(undefined);\n        this.setHostElementAriaLabel();\n    }\n    /**\n     * @hidden\n     */\n    onViewChange(view) {\n        if (this.activeView === view) {\n            return;\n        }\n        this.activeView = view;\n        this.activeViewChange.emit(view);\n        this.ngZone.runOutsideAngular(() => {\n            setTimeout(() => {\n                var _a;\n                (_a = this[this.activeView]) === null || _a === void 0 ? void 0 : _a.focus();\n            });\n        });\n        if (this.activeView === 'gradient') {\n            this.removeGradientAttributes();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onClearButtonClick() {\n        this.resetInnerComponentValue();\n        this.internalNavigation = false;\n        this.host.nativeElement.focus();\n    }\n    /**\n     * @hidden\n     */\n    handleValueChange(color) {\n        // eslint-disable-next-line no-unused-expressions\n        this.preview ? this.changeCurrentValue(color) : this.setFlatColorPickerValue(color);\n    }\n    /**\n     * @hidden\n     */\n    onAction(ev) {\n        // eslint-disable-next-line no-unused-expressions\n        ev.target === 'apply' ? this.setFlatColorPickerValue(this.selection) : this.resetSelection(ev.originalEvent);\n        this.actionButtonClick.emit();\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.notifyNgChanged = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.notifyNgTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n        this.cdr.markForCheck();\n        this.disabled = isDisabled;\n    }\n    /**\n     * @hidden\n     */\n    resetSelection(ev) {\n        const eventArgs = new ColorPickerCancelEvent(ev);\n        this.cancel.emit(eventArgs);\n        if (!eventArgs.isDefaultPrevented()) {\n            this.selection = this.value;\n        }\n        this.notifyNgTouched();\n    }\n    setHostElementAriaLabel() {\n        const parsed = parseColor(this.value, this.format, this.gradientSettings.opacity);\n        const ariaLabelValue = `${this.value ? parsed : this.localizationService.get('flatColorPickerNoColor')}`;\n        this.renderer.setAttribute(this.host.nativeElement, 'aria-label', ariaLabelValue);\n    }\n    setSizingVariables() {\n        const paletteTileSize = this.service.paletteTileLayout(this.paletteSettings.tileSize);\n        const value = `--kendo-color-preview-columns: ${this.paletteSettings.columns};\n            --kendo-color-preview-width: ${paletteTileSize.width}px;\n            --kendo-color-preview-height: ${paletteTileSize.height}px;`;\n        this.host.nativeElement.querySelector('.k-coloreditor-views.k-vstack').setAttribute('style', value);\n    }\n    changeCurrentValue(color) {\n        this.selection = color;\n        this.notifyNgTouched();\n    }\n    resetInnerComponentValue() {\n        this.selection = null;\n        if (this.gradient) {\n            this.gradient.reset();\n            return;\n        }\n        this.palette.reset();\n    }\n    setFlatColorPickerValue(color) {\n        if (this.value === color) {\n            return;\n        }\n        this.value = color;\n        this.valueChange.emit(color);\n        this.notifyNgChanged(color);\n        this.setHostElementAriaLabel();\n    }\n    setActiveView() {\n        if (!isPresent(this.activeView)) {\n            this.activeView = this.views[0];\n            return;\n        }\n        if (isDevMode() && this.views.indexOf(this.activeView) === -1) {\n            throw new Error(\"Invalid configuration: The current activeView is not present in the views collection\");\n        }\n    }\n    initDomEvents() {\n        if (!this.host) {\n            return;\n        }\n        let hostElement = this.host.nativeElement;\n        this.ngZone.runOutsideAngular(() => {\n            this.subscriptions.add(this.renderer.listen(hostElement, 'focus', () => {\n                this.focused = true;\n            }));\n            this.subscriptions.add(this.renderer.listen(hostElement, 'blur', () => {\n                this.focused = false;\n                this.notifyNgTouched();\n            }));\n        });\n    }\n    removeGradientAttributes() {\n        this.gradientElement && this.renderer.removeAttribute(this.gradientElement.nativeElement, 'role');\n        this.gradientElement && this.renderer.removeAttribute(this.gradientElement.nativeElement, 'aria-label');\n    }\n}\nFlatColorPickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FlatColorPickerComponent, deps: [{ token: i0.ElementRef }, { token: FlatColorPickerService }, { token: i1.LocalizationService }, { token: i0.ChangeDetectorRef }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\nFlatColorPickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FlatColorPickerComponent, selector: \"kendo-flatcolorpicker\", inputs: { readonly: \"readonly\", disabled: \"disabled\", format: \"format\", value: \"value\", tabindex: \"tabindex\", clearButton: \"clearButton\", preview: \"preview\", actionsLayout: \"actionsLayout\", activeView: \"activeView\", views: \"views\", gradientSettings: \"gradientSettings\", paletteSettings: \"paletteSettings\" }, outputs: { valueChange: \"valueChange\", cancel: \"cancel\", activeViewChange: \"activeViewChange\", actionButtonClick: \"actionButtonClick\" }, host: { listeners: { \"keydown.enter\": \"enterHandler($event)\", \"keydown.escape\": \"escapeHandler()\", \"focusin\": \"focusHandler($event)\" }, properties: { \"class.k-flatcolorpicker\": \"this.hostClasses\", \"class.k-coloreditor\": \"this.hostClasses\", \"class.k-disabled\": \"this.disabledClass\", \"attr.aria-disabled\": \"this.isDisabled\", \"attr.aria-readonly\": \"this.ariaReadonly\", \"attr.dir\": \"this.direction\", \"attr.tabindex\": \"this.hostTabindex\", \"attr.role\": \"this.ariaRole\", \"attr.aria-invalid\": \"this.isControlInvalid\" } }, providers: [\n        {\n            multi: true,\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => FlatColorPickerComponent)\n        },\n        {\n            provide: KendoInput,\n            useExisting: forwardRef(() => FlatColorPickerComponent)\n        },\n        FlatColorPickerService,\n        FlatColorPickerLocalizationService,\n        {\n            provide: LocalizationService,\n            useExisting: FlatColorPickerLocalizationService\n        },\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.flatcolorpicker'\n        }\n    ], viewQueries: [{ propertyName: \"header\", first: true, predicate: [\"header\"], descendants: true }, { propertyName: \"headerElement\", first: true, predicate: [\"header\"], descendants: true, read: ElementRef }, { propertyName: \"gradient\", first: true, predicate: [\"gradient\"], descendants: true }, { propertyName: \"gradientElement\", first: true, predicate: [\"gradient\"], descendants: true, read: ElementRef }, { propertyName: \"palette\", first: true, predicate: [\"palette\"], descendants: true }, { propertyName: \"footer\", first: true, predicate: [\"footer\"], descendants: true }], exportAs: [\"kendoFlatColorPicker\"], usesOnChanges: true, ngImport: i0, template: `\n        <ng-container kendoFlatColorPickerLocalizedMessages\n            i18n-flatColorPickerNoColor=\"kendo.flatcolorpicker.flatColorPickerNoColor|The aria-label applied to the FlatColorPicker component when the value is empty.\"\n            flatColorPickerNoColor=\"Flatcolorpicker no color chosen\"\n            i18n-colorGradientNoColor=\"kendo.flatcolorpicker.colorGradientNoColor|The aria-label applied to the ColorGradient component when the value is empty.\"\n            colorGradientNoColor=\"Colorgradient no color chosen\"\n            i18n-colorPaletteNoColor=\"kendo.flatcolorpicker.colorPaletteNoColor|The aria-label applied to the ColorPalette component when the value is empty.\"\n            colorPaletteNoColor=\"Colorpalette no color chosen\"\n            i18n-colorGradientHandle=\"kendo.flatcolorpicker.colorGradientHandle|The title for the gradient color drag handle chooser.\"\n            colorGradientHandle=\"Choose color\"\n            i18n-clearButton=\"kendo.flatcolorpicker.clearButton|The title for the clear button.\"\n            clearButton=\"Clear value\"\n            i18n-hueSliderHandle=\"kendo.flatcolorpicker.hueSliderHandle|The title for the hue slider handle.\"\n            hueSliderHandle=\"Set hue\"\n            i18n-opacitySliderHandle=\"kendo.flatcolorpicker.opacitySliderHandle|The title for the opacity slider handle.\"\n            opacitySliderHandle=\"Set opacity\"\n            i18n-contrastRatio=\"kendo.flatcolorpicker.contrastRatio|The contrast ratio message for the contrast tool.\"\n            contrastRatio=\"Contrast ratio\"\n            i18n-previewColor=\"kendo.flatcolorpicker.previewColor|The message for the color preview pane.\"\n            previewColor=\"Color preview\"\n            i18n-revertSelection=\"kendo.flatcolorpicker.revertSelection|The message for the selected color pane.\"\n            revertSelection=\"Revert selection\"\n            i18n-gradientView=\"kendo.flatcolorpicker.gradientView|The message for the gradient view button.\"\n            gradientView=\"Gradient view\"\n            i18n-paletteView=\"kendo.flatcolorpicker.paletteView|The message for the palette view button.\"\n            paletteView=\"Palette view\"\n            i18n-formatButton=\"kendo.flatcolorpicker.formatButton|The message for the input format toggle button.\"\n            formatButton=\"Change color format\"\n            i18n-applyButton=\"kendo.flatcolorpicker.applyButton|The message for the Apply action button.\"\n            applyButton=\"Apply\"\n            i18n-cancelButton=\"kendo.flatcolorpicker.cancelButton|The message for the Cancel action button.\"\n            cancelButton=\"Cancel\"\n            i18n-redChannelLabel=\"kendo.flatcolorpicker.redChannelLabel|The label of the NumericTextBox representing the red color channel.\"\n            redChannelLabel=\"Red channel\"\n            i18n-greenChannelLabel=\"kendo.flatcolorpicker.greenChannelLabel|The label of the NumericTextBox representing the green color channel.\"\n            greenChannelLabel=\"Green channel\"\n            i18n-blueChannelLabel=\"kendo.flatcolorpicker.blueChannelLabel|The label of the NumericTextBox representing the blue color channel.\"\n            blueChannelLabel=\"Blue channel\"\n            i18n-alphaChannelLabel=\"kendo.flatcolorpicker.alphaChannelLabel|The label of the NumericTextBox representing the alpha color channel.\"\n            alphaChannelLabel=\"Alpha channel\"\n            i18n-redInputPlaceholder=\"kendo.flatcolorpicker.redInputPlaceholder|The placeholder for the red color input.\"\n            redChannelLabel=\"R\"\n            i18n-greenInputPlaceholder=\"kendo.flatcolorpicker.greenInputPlaceholder|The placeholder for the green color input.\"\n            greenInputPlaceholder=\"G\"\n            i18n-blueInputPlaceholder=\"kendo.flatcolorpicker.blueInputPlaceholder|The placeholder for the blue color input.\"\n            blueInputPlaceholder=\"B\"\n            i18n-hexInputPlaceholder=\"kendo.flatcolorpicker.hexInputPlaceholder|The placeholder for the HEX color input.\"\n            hexInputPlaceholder=\"HEX\">\n        </ng-container>\n        <div kendoFlatColorPickerHeader\n            [innerTabIndex]=\"this.innerTabIndex\"\n            *ngIf=\"headerHasContent\"\n            #header\n            [clearButton]=\"clearButton\"\n            [activeView]=\"activeView\"\n            [views]=\"views\"\n            [value]=\"value\"\n            [selection]=\"selection\"\n            [preview]=\"preview\"\n            (clearButtonClick)=\"onClearButtonClick()\"\n            (viewChange)=\"onViewChange($event)\"\n            (valuePaneClick)=\"resetSelection($event)\"\n            (tabOut)=\"lastFocusable.focus()\"></div>\n        <div class=\"k-coloreditor-views k-vstack\">\n            <kendo-colorgradient #gradient\n                [tabindex]=\"innerTabIndex\"\n                *ngIf=\"activeView === 'gradient'\"\n                [value]=\"selection\"\n                [format]=\"format\"\n                [opacity]=\"gradientSettings.opacity\"\n                [delay]=\"gradientSettings.delay\"\n                [contrastTool]=\"gradientSettings.contrastTool\"\n                [gradientSliderSmallStep]=\"gradientSettings.gradientSliderSmallStep\"\n                [gradientSliderStep]=\"gradientSettings.gradientSliderStep\"\n                [readonly]=\"readonly\"\n                (valueChange)=\"handleValueChange($event)\"\n            ></kendo-colorgradient>\n            <kendo-colorpalette #palette\n                [tabindex]=\"innerTabIndex\"\n                *ngIf=\"activeView === 'palette'\"\n                [palette]=\"paletteSettings.palette\"\n                [columns]=\"paletteSettings.columns\"\n                [tileSize]=\"paletteSettings.tileSize\"\n                [format]=\"format\"\n                [value]=\"selection\"\n                [readonly]=\"readonly\"\n                (valueChange)=\"handleValueChange($event)\"\n            ></kendo-colorpalette>\n        </div>\n        <div kendoFlatColorPickerActionButtons \n            [innerTabIndex]=\"innerTabIndex\"\n            *ngIf=\"preview\"\n            #footer\n            [ngClass]=\"'k-justify-content-' + actionsLayout\"\n            (actionButtonClick)=\"onAction($event)\"\n            (tabOut)=\"firstFocusable.focus()\"></div>\n`, isInline: true, components: [{ type: FlatColorPickerHeaderComponent, selector: \"[kendoFlatColorPickerHeader]\", inputs: [\"clearButton\", \"activeView\", \"views\", \"preview\", \"innerTabIndex\", \"value\", \"selection\"], outputs: [\"viewChange\", \"valuePaneClick\", \"clearButtonClick\", \"tabOut\"] }, { type: ColorGradientComponent, selector: \"kendo-colorgradient\", inputs: [\"id\", \"opacity\", \"disabled\", \"readonly\", \"clearButton\", \"delay\", \"value\", \"contrastTool\", \"tabindex\", \"format\", \"gradientSliderStep\", \"gradientSliderSmallStep\"], outputs: [\"valueChange\"], exportAs: [\"kendoColorGradient\"] }, { type: ColorPaletteComponent, selector: \"kendo-colorpalette\", inputs: [\"id\", \"format\", \"value\", \"columns\", \"palette\", \"tabindex\", \"disabled\", \"readonly\", \"tileSize\"], outputs: [\"selectionChange\", \"valueChange\", \"cellSelection\"], exportAs: [\"kendoColorPalette\"] }, { type: FlatColorPickerActionButtonsComponent, selector: \"[kendoFlatColorPickerActionButtons]\", inputs: [\"innerTabIndex\"], outputs: [\"actionButtonClick\", \"tabOut\"] }], directives: [{ type: LocalizedColorPickerMessagesDirective, selector: \"[kendoColorPickerLocalizedMessages], [kendoFlatColorPickerLocalizedMessages], [kendoColorGradientLocalizedMessages], [kendoColorPaletteLocalizedMessages]\" }, { type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FlatColorPickerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoFlatColorPicker',\n                    selector: 'kendo-flatcolorpicker',\n                    providers: [\n                        {\n                            multi: true,\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => FlatColorPickerComponent)\n                        },\n                        {\n                            provide: KendoInput,\n                            useExisting: forwardRef(() => FlatColorPickerComponent)\n                        },\n                        FlatColorPickerService,\n                        FlatColorPickerLocalizationService,\n                        {\n                            provide: LocalizationService,\n                            useExisting: FlatColorPickerLocalizationService\n                        },\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.flatcolorpicker'\n                        }\n                    ],\n                    template: `\n        <ng-container kendoFlatColorPickerLocalizedMessages\n            i18n-flatColorPickerNoColor=\"kendo.flatcolorpicker.flatColorPickerNoColor|The aria-label applied to the FlatColorPicker component when the value is empty.\"\n            flatColorPickerNoColor=\"Flatcolorpicker no color chosen\"\n            i18n-colorGradientNoColor=\"kendo.flatcolorpicker.colorGradientNoColor|The aria-label applied to the ColorGradient component when the value is empty.\"\n            colorGradientNoColor=\"Colorgradient no color chosen\"\n            i18n-colorPaletteNoColor=\"kendo.flatcolorpicker.colorPaletteNoColor|The aria-label applied to the ColorPalette component when the value is empty.\"\n            colorPaletteNoColor=\"Colorpalette no color chosen\"\n            i18n-colorGradientHandle=\"kendo.flatcolorpicker.colorGradientHandle|The title for the gradient color drag handle chooser.\"\n            colorGradientHandle=\"Choose color\"\n            i18n-clearButton=\"kendo.flatcolorpicker.clearButton|The title for the clear button.\"\n            clearButton=\"Clear value\"\n            i18n-hueSliderHandle=\"kendo.flatcolorpicker.hueSliderHandle|The title for the hue slider handle.\"\n            hueSliderHandle=\"Set hue\"\n            i18n-opacitySliderHandle=\"kendo.flatcolorpicker.opacitySliderHandle|The title for the opacity slider handle.\"\n            opacitySliderHandle=\"Set opacity\"\n            i18n-contrastRatio=\"kendo.flatcolorpicker.contrastRatio|The contrast ratio message for the contrast tool.\"\n            contrastRatio=\"Contrast ratio\"\n            i18n-previewColor=\"kendo.flatcolorpicker.previewColor|The message for the color preview pane.\"\n            previewColor=\"Color preview\"\n            i18n-revertSelection=\"kendo.flatcolorpicker.revertSelection|The message for the selected color pane.\"\n            revertSelection=\"Revert selection\"\n            i18n-gradientView=\"kendo.flatcolorpicker.gradientView|The message for the gradient view button.\"\n            gradientView=\"Gradient view\"\n            i18n-paletteView=\"kendo.flatcolorpicker.paletteView|The message for the palette view button.\"\n            paletteView=\"Palette view\"\n            i18n-formatButton=\"kendo.flatcolorpicker.formatButton|The message for the input format toggle button.\"\n            formatButton=\"Change color format\"\n            i18n-applyButton=\"kendo.flatcolorpicker.applyButton|The message for the Apply action button.\"\n            applyButton=\"Apply\"\n            i18n-cancelButton=\"kendo.flatcolorpicker.cancelButton|The message for the Cancel action button.\"\n            cancelButton=\"Cancel\"\n            i18n-redChannelLabel=\"kendo.flatcolorpicker.redChannelLabel|The label of the NumericTextBox representing the red color channel.\"\n            redChannelLabel=\"Red channel\"\n            i18n-greenChannelLabel=\"kendo.flatcolorpicker.greenChannelLabel|The label of the NumericTextBox representing the green color channel.\"\n            greenChannelLabel=\"Green channel\"\n            i18n-blueChannelLabel=\"kendo.flatcolorpicker.blueChannelLabel|The label of the NumericTextBox representing the blue color channel.\"\n            blueChannelLabel=\"Blue channel\"\n            i18n-alphaChannelLabel=\"kendo.flatcolorpicker.alphaChannelLabel|The label of the NumericTextBox representing the alpha color channel.\"\n            alphaChannelLabel=\"Alpha channel\"\n            i18n-redInputPlaceholder=\"kendo.flatcolorpicker.redInputPlaceholder|The placeholder for the red color input.\"\n            redChannelLabel=\"R\"\n            i18n-greenInputPlaceholder=\"kendo.flatcolorpicker.greenInputPlaceholder|The placeholder for the green color input.\"\n            greenInputPlaceholder=\"G\"\n            i18n-blueInputPlaceholder=\"kendo.flatcolorpicker.blueInputPlaceholder|The placeholder for the blue color input.\"\n            blueInputPlaceholder=\"B\"\n            i18n-hexInputPlaceholder=\"kendo.flatcolorpicker.hexInputPlaceholder|The placeholder for the HEX color input.\"\n            hexInputPlaceholder=\"HEX\">\n        </ng-container>\n        <div kendoFlatColorPickerHeader\n            [innerTabIndex]=\"this.innerTabIndex\"\n            *ngIf=\"headerHasContent\"\n            #header\n            [clearButton]=\"clearButton\"\n            [activeView]=\"activeView\"\n            [views]=\"views\"\n            [value]=\"value\"\n            [selection]=\"selection\"\n            [preview]=\"preview\"\n            (clearButtonClick)=\"onClearButtonClick()\"\n            (viewChange)=\"onViewChange($event)\"\n            (valuePaneClick)=\"resetSelection($event)\"\n            (tabOut)=\"lastFocusable.focus()\"></div>\n        <div class=\"k-coloreditor-views k-vstack\">\n            <kendo-colorgradient #gradient\n                [tabindex]=\"innerTabIndex\"\n                *ngIf=\"activeView === 'gradient'\"\n                [value]=\"selection\"\n                [format]=\"format\"\n                [opacity]=\"gradientSettings.opacity\"\n                [delay]=\"gradientSettings.delay\"\n                [contrastTool]=\"gradientSettings.contrastTool\"\n                [gradientSliderSmallStep]=\"gradientSettings.gradientSliderSmallStep\"\n                [gradientSliderStep]=\"gradientSettings.gradientSliderStep\"\n                [readonly]=\"readonly\"\n                (valueChange)=\"handleValueChange($event)\"\n            ></kendo-colorgradient>\n            <kendo-colorpalette #palette\n                [tabindex]=\"innerTabIndex\"\n                *ngIf=\"activeView === 'palette'\"\n                [palette]=\"paletteSettings.palette\"\n                [columns]=\"paletteSettings.columns\"\n                [tileSize]=\"paletteSettings.tileSize\"\n                [format]=\"format\"\n                [value]=\"selection\"\n                [readonly]=\"readonly\"\n                (valueChange)=\"handleValueChange($event)\"\n            ></kendo-colorpalette>\n        </div>\n        <div kendoFlatColorPickerActionButtons \n            [innerTabIndex]=\"innerTabIndex\"\n            *ngIf=\"preview\"\n            #footer\n            [ngClass]=\"'k-justify-content-' + actionsLayout\"\n            (actionButtonClick)=\"onAction($event)\"\n            (tabOut)=\"firstFocusable.focus()\"></div>\n`\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: FlatColorPickerService }, { type: i1.LocalizationService }, { type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: i0.Injector }]; }, propDecorators: { hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-flatcolorpicker']\n            }, {\n                type: HostBinding,\n                args: ['class.k-coloreditor']\n            }], disabledClass: [{\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }, {\n                type: HostBinding,\n                args: ['attr.aria-disabled']\n            }], ariaReadonly: [{\n                type: HostBinding,\n                args: ['attr.aria-readonly']\n            }], direction: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], hostTabindex: [{\n                type: HostBinding,\n                args: ['attr.tabindex']\n            }], ariaRole: [{\n                type: HostBinding,\n                args: ['attr.role']\n            }], isControlInvalid: [{\n                type: HostBinding,\n                args: ['attr.aria-invalid']\n            }], isDisabled: [{\n                type: HostBinding,\n                args: ['attr.aria-disabled']\n            }], enterHandler: [{\n                type: HostListener,\n                args: ['keydown.enter', ['$event']]\n            }], escapeHandler: [{\n                type: HostListener,\n                args: ['keydown.escape']\n            }], focusHandler: [{\n                type: HostListener,\n                args: ['focusin', ['$event']]\n            }], readonly: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], clearButton: [{\n                type: Input\n            }], preview: [{\n                type: Input\n            }], actionsLayout: [{\n                type: Input\n            }], activeView: [{\n                type: Input\n            }], views: [{\n                type: Input\n            }], gradientSettings: [{\n                type: Input\n            }], paletteSettings: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], cancel: [{\n                type: Output\n            }], activeViewChange: [{\n                type: Output\n            }], actionButtonClick: [{\n                type: Output\n            }], header: [{\n                type: ViewChild,\n                args: ['header']\n            }], headerElement: [{\n                type: ViewChild,\n                args: ['header', { read: ElementRef }]\n            }], gradient: [{\n                type: ViewChild,\n                args: ['gradient']\n            }], gradientElement: [{\n                type: ViewChild,\n                args: ['gradient', { read: ElementRef }]\n            }], palette: [{\n                type: ViewChild,\n                args: ['palette']\n            }], footer: [{\n                type: ViewChild,\n                args: ['footer']\n            }] } });\n\nconst DOM_FOCUS_EVENTS = ['focus', 'blur'];\nconst DEFAULT_SIZE$3 = 'medium';\nconst DEFAULT_ROUNDED$2 = 'medium';\nconst DEFAULT_FILL_MODE$1 = 'solid';\n/**\n * @hidden\n */\nlet nextColorPickerId = 0;\n/**\n * Represents the [Kendo UI ColorPicker component for Angular]({% slug overview_colorpicker %}).\n *\n * The ColorPicker is a powerful tool for choosing colors from Gradient and Palette views\n * which are rendered in its popup. It supports previewing the selected color, reverting it to its previous state or clearing it completely.\n */\nclass ColorPickerComponent {\n    constructor(host, popupService, cdr, localizationService, ngZone, renderer, injector) {\n        this.host = host;\n        this.popupService = popupService;\n        this.cdr = cdr;\n        this.localizationService = localizationService;\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.injector = injector;\n        this.hostClasses = true;\n        this.role = 'combobox';\n        this.hasPopup = 'dialog';\n        /**\n         * Specifies the views that will be rendered in the popup.\n         * By default both the gradient and palette views will be rendered.\n         */\n        this.views = ['gradient', 'palette'];\n        /**\n         * Sets the read-only state of the ColorPicker.\n         *\n         * @default false\n         */\n        this.readonly = false;\n        /**\n         * Sets the disabled state of the ColorPicker.\n         *\n         * @default false\n         */\n        this.disabled = false;\n        /**\n         * Specifies the output format of the ColorPicker.\n         *\n         * If the input value is in a different format, it will be parsed into the specified output `format`.\n         *\n         * The supported values are:\n         * * `rgba` (default)\n         * * `hex`\n         */\n        this.format = 'rgba';\n        /**\n         * Specifies whether the ColorPicker should display a 'Clear color' button.\n         *\n         * @default true\n         */\n        this.clearButton = true;\n        /**\n         * Displays `Apply` and `Cancel` action buttons and color preview panes.\n         *\n         * When enabled, the component value will not change immediately upon\n         * color selection, but only after the `Apply` button is clicked.\n         *\n         * The `Cancel` button reverts the current selection to its\n         * previous state i.e. to the current value.\n         *\n         * @default false\n         */\n        this.preview = false;\n        /**\n         * Configures the layout of the `Apply` and `Cancel` action buttons.\n         *\n         * The possible values are:\n         * * `start`\n         * * `center`\n         * * `end` (default)\n         * * `stretch`\n         */\n        this.actionsLayout = 'end';\n        /**\n         * Fires each time the value is changed.\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires each time the popup is about to open.\n         * This event is preventable. If you cancel it, the popup will remain closed.\n         */\n        this.open = new EventEmitter();\n        /**\n         * Fires each time the popup is about to close.\n         * This event is preventable. If you cancel it, the popup will remain open.\n         */\n        this.close = new EventEmitter();\n        /**\n         * Fires each time ColorPicker is focused.\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * Fires each time the ColorPicker is blurred.\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * Fires when the user cancels the current color selection.\n         *\n         * Fires on preview pane or 'Cancel' button click.\n         */\n        this.cancel = new EventEmitter();\n        /**\n         * Fires each time the left side of the ColorPicker wrapper is clicked.\n         * The event is triggered regardless of whether a ColorPicker icon is set or not.\n         *\n         * The [ActiveColorClickEvent]({% slug api_inputs_activecolorclickevent %}) event provides the option to prevent the popup opening.\n         */\n        this.activeColorClick = new EventEmitter();\n        /**\n         * Fires each time the view is about to change.\n         * Used to provide a two-way binding for the `activeView` property.\n         */\n        this.activeViewChange = new EventEmitter();\n        /**\n         * Indicates whether the ColorPicker wrapper is focused.\n         */\n        this.isFocused = false;\n        this._tabindex = 0;\n        this._popupSettings = { animate: true };\n        this._paletteSettings = {};\n        this._gradientSettings = { opacity: true, delay: 0 };\n        this._size = 'medium';\n        this._rounded = 'medium';\n        this._fillMode = 'solid';\n        this.subscriptions = new Subscription();\n        this.popupSubs = new Subscription();\n        this.notifyNgTouched = () => { };\n        this.notifyNgChanged = () => { };\n        this.domFocusListener = (event) => event.stopImmediatePropagation();\n        validatePackage(packageMetadata);\n        this.dynamicRTLSubscription = this.localizationService.changes.subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n        });\n        this.colorPickerId = nextColorPickerId++;\n    }\n    get focusedClass() {\n        return this.isFocused;\n    }\n    get disabledClass() {\n        return this.disabled;\n    }\n    get ariaReadonly() {\n        return this.readonly;\n    }\n    get ariaExpanded() {\n        return this.isOpen;\n    }\n    get hostTabindex() {\n        return this.tabindex;\n    }\n    get isControlInvalid() {\n        var _a, _b;\n        return (_b = ((_a = this.control) === null || _a === void 0 ? void 0 : _a.invalid)) === null || _b === void 0 ? void 0 : _b.toString();\n    }\n    /**\n     * @hidden\n     */\n    set view(view) {\n        this.views = [view];\n    }\n    get view() {\n        return (this.views && this.views.length > 0) ? this.views[0] : null;\n    }\n    /**\n     * Specifies the value of the initially selected color.\n     */\n    set value(value) {\n        this._value = parseColor(value, this.format, this.gradientSettings.opacity);\n    }\n    get value() {\n        return this._value;\n    }\n    /**\n     * Configures the popup of the ColorPicker.\n     */\n    set popupSettings(value) {\n        this._popupSettings = Object.assign(this._popupSettings, value);\n    }\n    get popupSettings() {\n        return this._popupSettings;\n    }\n    /**\n     * Configures the palette that is displayed in the ColorPicker popup.\n     */\n    set paletteSettings(value) {\n        this._paletteSettings = Object.assign(this._paletteSettings, value);\n    }\n    get paletteSettings() {\n        return this._paletteSettings;\n    }\n    /**\n     * Configures the gradient that is displayed in the ColorPicker popup.\n     */\n    set gradientSettings(value) {\n        this._gradientSettings = Object.assign(this._gradientSettings, value);\n    }\n    get gradientSettings() {\n        return this._gradientSettings;\n    }\n    /**\n     * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     *\n     * @default 0\n     */\n    set tabindex(value) {\n        const tabindex = Number(value);\n        const defaultValue = 0;\n        this._tabindex = !isNaN(tabindex) ? tabindex : defaultValue;\n    }\n    get tabindex() {\n        return !this.disabled ? this._tabindex : undefined;\n    }\n    /**\n     * The size property specifies the padding of the ColorPicker internal elements\n     * ([see example]({% slug appearance_colorpicker %}#toc-size)).\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     */\n    set size(size) {\n        const newSize = size ? size : DEFAULT_SIZE$3;\n        this.handleClasses(newSize, 'size');\n        this._size = newSize;\n    }\n    get size() {\n        return this._size;\n    }\n    /**\n     * The rounded property specifies the border radius of the ColorPicker\n     * ([see example]({% slug appearance_colorpicker %}#toc-rounded)).\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `full`\n     * * `none`\n     */\n    set rounded(rounded) {\n        const newRounded = rounded ? rounded : DEFAULT_ROUNDED$2;\n        this.handleClasses(newRounded, 'rounded');\n        this._rounded = newRounded;\n    }\n    get rounded() {\n        return this._rounded;\n    }\n    /**\n     * The fillMode property specifies the background and border styles of the ColorPicker\n     * ([see example]({% slug appearance_colorpicker %}#toc-fillMode)).\n     *\n     * The possible values are:\n     * * `flat`\n     * * `solid` (default)\n     * * `outline`\n     * * `none`\n     */\n    set fillMode(fillMode) {\n        const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$1;\n        this.handleClasses(newFillMode, 'fillMode');\n        this._fillMode = newFillMode;\n    }\n    get fillMode() {\n        return this._fillMode;\n    }\n    /**\n     * Indicates whether the ColorPicker popup is open.\n     */\n    get isOpen() {\n        return isPresent(this.popupRef);\n    }\n    /**\n     * @hidden\n     */\n    get iconStyles() {\n        if (this.iconClass) {\n            return this.iconClass;\n        }\n        if (this.icon) {\n            return `k-icon k-i-${this.icon}`;\n        }\n    }\n    ngOnInit() {\n        const defaultPreset = (this.format !== 'name') ? DEFAULT_PRESET$1 : DEFAULT_ACCESSIBLE_PRESET$1;\n        const settingsPalette = this._paletteSettings.palette;\n        const presetColumns = typeof settingsPalette === 'string' && PALETTEPRESETS[settingsPalette] ?\n            PALETTEPRESETS[settingsPalette].columns :\n            undefined;\n        this._paletteSettings = {\n            palette: settingsPalette || defaultPreset,\n            tileSize: this._paletteSettings.tileSize || 24,\n            columns: this._paletteSettings.columns || presetColumns || 10\n        };\n        this.handleHostId();\n        this.renderer.setAttribute(this.host.nativeElement, 'aria-controls', `k-colorpicker-popup-${this.colorPickerId}`);\n        this.control = this.injector.get(NgControl, null);\n    }\n    ngAfterViewInit() {\n        const stylingInputs = ['size', 'rounded', 'fillMode'];\n        stylingInputs.forEach(input => {\n            this.handleClasses(this[input], input);\n        });\n        this.setHostElementAriaLabel();\n        this.initDomEvents();\n    }\n    ngOnChanges(changes) {\n        if (changes.format && changes.format.currentValue === 'name') {\n            this.activeView = 'palette';\n        }\n        if (this.activeView === 'gradient' && this.gradientSettings.opacity) {\n            this.format = 'rgba';\n            this.value = parseColor(this.value, this.format, this.gradientSettings.opacity);\n        }\n        if (isChanged('value', changes)) {\n            this.setHostElementAriaLabel();\n        }\n    }\n    ngOnDestroy() {\n        this.closePopup();\n        if (this.dynamicRTLSubscription) {\n            this.dynamicRTLSubscription.unsubscribe();\n        }\n        this.subscriptions.unsubscribe();\n        this.handleDomEvents('remove', DOM_FOCUS_EVENTS);\n    }\n    /**\n     * @hidden\n     */\n    handleCancelEvent(ev) {\n        this.cancel.emit(ev);\n    }\n    /**\n     * @hidden\n     */\n    togglePopup() {\n        this.focus();\n        this.toggleWithEvents(!this.isOpen);\n    }\n    /**\n     * @hidden\n     */\n    handleWrapperClick(event) {\n        if (this.disabled) {\n            return;\n        }\n        this.focus();\n        if (closest$1(event.target, (element) => element === this.activeColor.nativeElement)) {\n            const event = new ActiveColorClickEvent(this.value);\n            this.activeColorClick.emit(event);\n            if (!event.isOpenPrevented() || this.isOpen) {\n                this.toggleWithEvents(!this.isOpen);\n            }\n            return;\n        }\n        this.toggleWithEvents(!this.isOpen);\n    }\n    /**\n     * Focuses the wrapper of the ColorPicker.\n     */\n    focus() {\n        this.isFocused = true;\n        this.host.nativeElement.focus();\n    }\n    /**\n     * @hidden\n     */\n    handleWrapperFocus() {\n        if (this.isFocused) {\n            return;\n        }\n        this.ngZone.run(() => {\n            this.focus();\n            this.onFocus.emit();\n        });\n    }\n    /**\n     * Blurs the ColorPicker.\n     */\n    blur() {\n        this.isFocused = false;\n        this.host.nativeElement.blur();\n        this.notifyNgTouched();\n    }\n    /**\n     * @hidden\n     */\n    handleWrapperBlur() {\n        if (this.isOpen) {\n            return;\n        }\n        this.ngZone.run(() => {\n            this.onBlur.emit();\n            this.isFocused = false;\n        });\n    }\n    /**\n     * Clears the value of the ColorPicker.\n     */\n    reset() {\n        if (!isPresent(this.value)) {\n            return;\n        }\n        this._value = undefined;\n        this.setHostElementAriaLabel();\n        this.notifyNgChanged(undefined);\n    }\n    /**\n     * Toggles the popup of the ColorPicker.\n     * Does not trigger the `open` and `close` events of the component.\n     *\n     * @param open An optional parameter. Specifies whether the popup will be opened or closed.\n     */\n    toggle(open) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        this.cdr.markForCheck();\n        this.closePopup();\n        open = isPresent(open) ? open : !this.isOpen;\n        if (open) {\n            this.openPopup();\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleValueChange(color) {\n        const parsedColor = parseColor(color, this.format, this.gradientSettings.opacity);\n        const valueChange = parsedColor !== this.value;\n        if (valueChange) {\n            this.value = parsedColor;\n            this.valueChange.emit(parsedColor);\n            this.setHostElementAriaLabel();\n            this.notifyNgChanged(parsedColor);\n        }\n    }\n    /**\n     * @hidden\n     */\n    handlePopupBlur(event) {\n        if (this.popupBlurInvalid(event)) {\n            return;\n        }\n        this.isFocused = false;\n        this.onBlur.emit();\n        this.notifyNgTouched();\n        this.toggleWithEvents(false);\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.notifyNgChanged = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.notifyNgTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n        this.cdr.markForCheck();\n        this.disabled = isDisabled;\n    }\n    /**\n     * @hidden\n     */\n    handleWrapperKeyDown(event) {\n        if (event.keyCode === Keys.ArrowDown || event.keyCode === Keys.Enter) {\n            event.preventDefault();\n            this.ngZone.run(() => {\n                this.toggleWithEvents(true);\n            });\n        }\n    }\n    /**\n     * @hidden\n     */\n    handlePopupKeyDown(event) {\n        if (event.keyCode === Keys.Escape) {\n            this.toggleWithEvents(false);\n            this.host.nativeElement.focus();\n        }\n        if (event.keyCode === Keys.Tab) {\n            const currentElement = event.shiftKey ? this.firstFocusableElement.nativeElement : this.lastFocusableElement.nativeElement;\n            const nextElement = event.shiftKey ? this.lastFocusableElement.nativeElement : this.firstFocusableElement.nativeElement;\n            if (event.target === currentElement) {\n                event.preventDefault();\n                nextElement.focus();\n            }\n        }\n    }\n    /**\n     * @hidden\n     * Used by the FloatingLabel to determine if the component is empty.\n     */\n    isEmpty() {\n        return false;\n    }\n    setHostElementAriaLabel() {\n        const ariaLabelValue = `${this.value ? this.value : this.localizationService.get('colorPickerNoColor')}`;\n        this.renderer.setAttribute(this.host.nativeElement, 'aria-label', ariaLabelValue);\n    }\n    handleClasses(value, input) {\n        const elem = this.host.nativeElement;\n        const classes = getStylingClasses('picker', input, this[input], value);\n        if (classes.toRemove) {\n            this.renderer.removeClass(elem, classes.toRemove);\n        }\n        if (classes.toAdd) {\n            this.renderer.addClass(elem, classes.toAdd);\n        }\n    }\n    popupBlurInvalid(ev) {\n        const focusInFlatColorPickerElement = this.popupRef.popupElement.contains(ev.relatedTarget);\n        const hostClicked = closest$1(ev.relatedTarget, (element) => element === this.host.nativeElement);\n        return hostClicked || focusInFlatColorPickerElement;\n    }\n    toggleWithEvents(open) {\n        const sameState = this.isOpen === open;\n        if (this.disabled || this.readonly || sameState) {\n            return;\n        }\n        let eventArgs;\n        if (open) {\n            eventArgs = new ColorPickerOpenEvent();\n            this.open.emit(eventArgs);\n        }\n        else {\n            eventArgs = new ColorPickerCloseEvent();\n            this.close.emit(eventArgs);\n        }\n        if (!eventArgs.isDefaultPrevented()) {\n            this.toggle(open);\n        }\n        if (open) {\n            this.focusFirstElement();\n        }\n    }\n    focusFirstElement() {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => {\n            if (this.flatColorPicker) {\n                const gradient = this.flatColorPicker.gradient;\n                const elementToFocus = gradient ? gradient.gradientDragHandle :\n                    this.flatColorPicker.palette.host;\n                elementToFocus.nativeElement.focus();\n            }\n        });\n    }\n    openPopup() {\n        const horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n        const anchorPosition = { horizontal: horizontalAlign, vertical: \"bottom\" };\n        const popupPosition = { horizontal: horizontalAlign, vertical: \"top\" };\n        this.popupRef = this.popupService.open({\n            anchor: this.activeColor,\n            animate: this.popupSettings.animate,\n            appendTo: this.popupSettings.appendTo,\n            popupAlign: popupPosition,\n            anchorAlign: anchorPosition,\n            popupClass: 'k-colorpicker-popup',\n            content: this.popupTemplate,\n            positionMode: 'absolute'\n        });\n        this.renderer.setAttribute(this.popupRef.popupElement.querySelector('.k-colorpicker-popup'), 'id', `k-colorpicker-popup-${this.colorPickerId}`);\n        this.popupSubs.add(this.popupRef.popupAnchorViewportLeave.subscribe(() => {\n            this.toggleWithEvents(false);\n            if (!this.isOpen) {\n                this.host.nativeElement.focus({\n                    preventScroll: true\n                });\n            }\n        }));\n    }\n    closePopup() {\n        if (!this.isOpen) {\n            return;\n        }\n        this.popupSubs.unsubscribe();\n        this.popupRef.close();\n        this.popupRef = null;\n    }\n    get firstFocusableElement() {\n        if (!this.flatColorPicker.header || (this.views.length <= 1 && !this.flatColorPicker.clearButton)) {\n            const gradient = this.flatColorPicker.gradient;\n            return gradient ? gradient.gradientDragHandle : this.flatColorPicker.palette.host;\n        }\n        return this.views.length > 1 ? this.flatColorPicker.header.viewButtonsCollection.toArray()[0] : this.flatColorPicker.header.clearButtonElement;\n    }\n    get lastFocusableElement() {\n        if (this.preview) {\n            return this.flatColorPicker.footer.lastButton;\n        }\n        if (this.flatColorPicker.palette) {\n            return this.flatColorPicker.palette.host;\n        }\n        const gradient = this.flatColorPicker.gradient;\n        const inputs = gradient && gradient.inputs;\n        if (gradient && inputs && inputs.formatView === 'hex') {\n            return inputs.hexInput;\n        }\n        return this.gradientSettings.opacity ? inputs.opacityInput.numericInput : inputs.blueInput.numericInput;\n    }\n    handleDomEvents(action, events) {\n        const hostElement = this.host.nativeElement;\n        events.forEach(ev => hostElement[`${action}EventListener`](ev, this.domFocusListener, true));\n    }\n    initDomEvents() {\n        if (!this.host) {\n            return;\n        }\n        let hostElement = this.host.nativeElement;\n        this.ngZone.runOutsideAngular(() => {\n            this.subscriptions.add(this.renderer.listen(hostElement, 'focusin', () => {\n                this.handleWrapperFocus();\n            }));\n            this.subscriptions.add(this.renderer.listen(hostElement, 'focusout', (event) => {\n                const closestPopup = this.popupRef ?\n                    closest$1(event.relatedTarget, (element) => element === this.flatColorPicker.host.nativeElement) :\n                    false;\n                const closestWrapper = closest$1(event.relatedTarget, (element) => element === this.host.nativeElement);\n                if (!closestPopup && !closestWrapper) {\n                    this.handleWrapperBlur();\n                }\n            }));\n            this.handleDomEvents('add', DOM_FOCUS_EVENTS);\n            this.subscriptions.add(this.renderer.listen(hostElement, 'keydown', (event) => {\n                this.handleWrapperKeyDown(event);\n            }));\n            this.subscriptions.add(this.renderer.listen(hostElement, 'click', (event) => {\n                this.ngZone.run(() => {\n                    this.handleWrapperClick(event);\n                });\n            }));\n        });\n    }\n    handleHostId() {\n        const hostElement = this.host.nativeElement;\n        const existingId = hostElement.getAttribute('id');\n        if (existingId) {\n            this.focusableId = existingId;\n        }\n        else {\n            const id = `k-${guid()}`;\n            hostElement.setAttribute('id', id);\n            this.focusableId = id;\n        }\n    }\n}\nColorPickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPickerComponent, deps: [{ token: i0.ElementRef }, { token: i1$3.PopupService }, { token: i0.ChangeDetectorRef }, { token: i1.LocalizationService }, { token: i0.NgZone }, { token: i0.Renderer2 }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\nColorPickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColorPickerComponent, selector: \"kendo-colorpicker\", inputs: { views: \"views\", view: \"view\", activeView: \"activeView\", readonly: \"readonly\", disabled: \"disabled\", format: \"format\", value: \"value\", popupSettings: \"popupSettings\", paletteSettings: \"paletteSettings\", gradientSettings: \"gradientSettings\", icon: \"icon\", iconClass: \"iconClass\", clearButton: \"clearButton\", tabindex: \"tabindex\", preview: \"preview\", actionsLayout: \"actionsLayout\", size: \"size\", rounded: \"rounded\", fillMode: \"fillMode\" }, outputs: { valueChange: \"valueChange\", open: \"open\", close: \"close\", onFocus: \"focus\", onBlur: \"blur\", cancel: \"cancel\", activeColorClick: \"activeColorClick\", activeViewChange: \"activeViewChange\" }, host: { properties: { \"class.k-colorpicker\": \"this.hostClasses\", \"class.k-icon-picker\": \"this.hostClasses\", \"class.k-picker\": \"this.hostClasses\", \"class.k-focus\": \"this.focusedClass\", \"attr.aria-disabled\": \"this.disabledClass\", \"class.k-disabled\": \"this.disabledClass\", \"attr.aria-readonly\": \"this.ariaReadonly\", \"attr.aria-expanded\": \"this.ariaExpanded\", \"attr.tabindex\": \"this.hostTabindex\", \"attr.dir\": \"this.direction\", \"attr.role\": \"this.role\", \"attr.aria-haspopup\": \"this.hasPopup\", \"attr.aria-invalid\": \"this.isControlInvalid\" } }, providers: [{\n            multi: true,\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ColorPickerComponent)\n        }, {\n            provide: KendoInput,\n            useExisting: forwardRef(() => ColorPickerComponent)\n        },\n        ColorPickerLocalizationService,\n        {\n            provide: LocalizationService,\n            useExisting: ColorPickerLocalizationService\n        },\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.colorpicker'\n        }\n    ], viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true, read: ViewContainerRef, static: true }, { propertyName: \"activeColor\", first: true, predicate: [\"activeColor\"], descendants: true, static: true }, { propertyName: \"popupTemplate\", first: true, predicate: [\"popupTemplate\"], descendants: true, static: true }, { propertyName: \"flatColorPicker\", first: true, predicate: [\"flatColorPicker\"], descendants: true }], exportAs: [\"kendoColorPicker\"], usesOnChanges: true, ngImport: i0, template: `\n        <ng-container kendoColorPickerLocalizedMessages\n            i18n-colorPickerNoColor=\"kendo.colorpicker.colorPickerNoColor|The aria-label applied to the ColorPicker component when the value is empty.\"\n            colorPickerNoColor=\"Colorpicker no color chosen\"\n            i18n-flatColorPickerNoColor=\"kendo.colorpicker.flatColorPickerNoColor|The aria-label applied to the FlatColorPicker component when the value is empty.\"\n            flatColorPickerNoColor=\"Flatcolorpicker no color chosen\"\n            i18n-colorGradientNoColor=\"kendo.colorpicker.colorGradientNoColor|The aria-label applied to the ColorGradient component when the value is empty.\"\n            colorGradientNoColor=\"Colorgradient no color chosen\"\n            i18n-colorPaletteNoColor=\"kendo.colorpicker.colorPaletteNoColor|The aria-label applied to the ColorPalette component when the value is empty.\"\n            colorPaletteNoColor=\"Colorpalette no color chosen\"\n            i18n-colorGradientHandle=\"kendo.colorpicker.colorGradientHandle|The title for the gradient color drag handle chooser.\"\n            colorGradientHandle=\"Choose color\"\n            i18n-clearButton=\"kendo.colorpicker.clearButton|The title for the clear button.\"\n            clearButton=\"Clear value\"\n            i18n-hueSliderHandle=\"kendo.colorpicker.hueSliderHandle|The title for the hue slider handle.\"\n            hueSliderHandle=\"Set hue\"\n            i18n-opacitySliderHandle=\"kendo.colorpicker.opacitySliderHandle|The title for the opacity slider handle.\"\n            opacitySliderHandle=\"Set opacity\"\n            i18n-contrastRatio=\"kendo.colorpicker.contrastRatio|The contrast ratio message for the contrast tool.\"\n            contrastRatio=\"Contrast ratio\"\n            i18n-previewColor=\"kendo.colorpicker.previewColor|The message for the color preview pane.\"\n            previewColor=\"Color preview\"\n            i18n-revertSelection=\"kendo.colorpicker.revertSelection|The message for the selected color pane.\"\n            revertSelection=\"Revert selection\"\n            i18n-gradientView=\"kendo.colorpicker.gradientView|The message for the gradient view button.\"\n            gradientView=\"Gradient view\"\n            i18n-paletteView=\"kendo.colorpicker.paletteView|The message for the palette view button.\"\n            paletteView=\"Palette view\"\n            i18n-formatButton=\"kendo.colorpicker.formatButton|The message for the input format toggle button.\"\n            formatButton=\"Change color format\"\n            i18n-applyButton=\"kendo.colorpicker.applyButton|The message for the Apply action button.\"\n            applyButton=\"Apply\"\n            i18n-cancelButton=\"kendo.colorpicker.cancelButton|The message for the Cancel action button.\"\n            cancelButton=\"Cancel\"\n            i18n-redChannelLabel=\"kendo.colorpicker.redChannelLabel|The label of the NumericTextBox representing the red color channel.\"\n            redChannelLabel=\"Red channel\"\n            i18n-greenChannelLabel=\"kendo.colorpicker.greenChannelLabel|The label of the NumericTextBox representing the green color channel.\"\n            greenChannelLabel=\"Green channel\"\n            i18n-blueChannelLabel=\"kendo.colorpicker.blueChannelLabel|The label of the NumericTextBox representing the blue color channel.\"\n            blueChannelLabel=\"Blue channel\"\n            i18n-alphaChannelLabel=\"kendo.colorpicker.alphaChannelLabel|The label of the NumericTextBox representing the alpha color channel.\"\n            alphaChannelLabel=\"Alpha channel\"\n            i18n-redInputPlaceholder=\"kendo.colorpicker.redInputPlaceholder|The placeholder for the red color input.\"\n            redChannelLabel=\"R\"\n            i18n-greenInputPlaceholder=\"kendo.colorpicker.greenInputPlaceholder|The placeholder for the green color input.\"\n            greenInputPlaceholder=\"G\"\n            i18n-blueInputPlaceholder=\"kendo.colorpicker.blueInputPlaceholder|The placeholder for the blue color input.\"\n            blueInputPlaceholder=\"B\"\n            i18n-hexInputPlaceholder=\"kendo.colorpicker.hexInputPlaceholder|The placeholder for the HEX color input.\"\n            hexInputPlaceholder=\"HEX\">\n        </ng-container>\n        <span #activeColor class=\"k-input-inner\">\n            <span\n                class=\"k-value-icon k-color-preview\"\n                [ngClass]=\"{'k-icon-color-preview': iconStyles, 'k-no-color': !value}\">\n                <span *ngIf=\"iconClass || icon\" class=\"k-color-preview-icon k-icon\" [ngClass]=\"iconStyles\"></span>\n                <span class=\"k-color-preview-mask\" [style.background-color]=\"value\"></span>\n            </span>\n        </span>\n        <button\n            tabindex=\"-1\"\n            type=\"button\"\n            role=\"none\"\n            aria-hidden=\"true\"\n            class=\"k-input-button k-button k-button-md k-button-solid k-button-solid-base k-icon-button\">\n                <span class=\"k-button-icon k-icon k-i-caret-alt-down\"></span>\n        </button>\n        <ng-template #popupTemplate>\n            <kendo-flatcolorpicker\n                #flatColorPicker\n                [value]=\"value\"\n                [format]=\"format\"\n                [views]=\"views\"\n                [activeView]=\"activeView\"\n                [actionsLayout]=\"actionsLayout\"\n                [preview]=\"preview\"\n                [gradientSettings]=\"gradientSettings\"\n                [paletteSettings]=\"paletteSettings\"\n                [clearButton]=\"clearButton\"\n                (cancel)=\"handleCancelEvent($event)\"\n                (focusout)=\"handlePopupBlur($event)\"\n                (valueChange)=\"handleValueChange($event)\"\n                (keydown)=\"handlePopupKeyDown($event)\"\n                (activeViewChange)=\"activeViewChange.emit($event)\"\n                (actionButtonClick)=\"togglePopup()\">\n            </kendo-flatcolorpicker>\n        </ng-template>\n        <ng-container #container></ng-container>\n    `, isInline: true, components: [{ type: FlatColorPickerComponent, selector: \"kendo-flatcolorpicker\", inputs: [\"readonly\", \"disabled\", \"format\", \"value\", \"tabindex\", \"clearButton\", \"preview\", \"actionsLayout\", \"activeView\", \"views\", \"gradientSettings\", \"paletteSettings\"], outputs: [\"valueChange\", \"cancel\", \"activeViewChange\", \"actionButtonClick\"], exportAs: [\"kendoFlatColorPicker\"] }], directives: [{ type: LocalizedColorPickerMessagesDirective, selector: \"[kendoColorPickerLocalizedMessages], [kendoFlatColorPickerLocalizedMessages], [kendoColorGradientLocalizedMessages], [kendoColorPaletteLocalizedMessages]\" }, { type: i1$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPickerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoColorPicker',\n                    selector: 'kendo-colorpicker',\n                    providers: [{\n                            multi: true,\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => ColorPickerComponent)\n                        }, {\n                            provide: KendoInput,\n                            useExisting: forwardRef(() => ColorPickerComponent)\n                        },\n                        ColorPickerLocalizationService,\n                        {\n                            provide: LocalizationService,\n                            useExisting: ColorPickerLocalizationService\n                        },\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.colorpicker'\n                        }],\n                    template: `\n        <ng-container kendoColorPickerLocalizedMessages\n            i18n-colorPickerNoColor=\"kendo.colorpicker.colorPickerNoColor|The aria-label applied to the ColorPicker component when the value is empty.\"\n            colorPickerNoColor=\"Colorpicker no color chosen\"\n            i18n-flatColorPickerNoColor=\"kendo.colorpicker.flatColorPickerNoColor|The aria-label applied to the FlatColorPicker component when the value is empty.\"\n            flatColorPickerNoColor=\"Flatcolorpicker no color chosen\"\n            i18n-colorGradientNoColor=\"kendo.colorpicker.colorGradientNoColor|The aria-label applied to the ColorGradient component when the value is empty.\"\n            colorGradientNoColor=\"Colorgradient no color chosen\"\n            i18n-colorPaletteNoColor=\"kendo.colorpicker.colorPaletteNoColor|The aria-label applied to the ColorPalette component when the value is empty.\"\n            colorPaletteNoColor=\"Colorpalette no color chosen\"\n            i18n-colorGradientHandle=\"kendo.colorpicker.colorGradientHandle|The title for the gradient color drag handle chooser.\"\n            colorGradientHandle=\"Choose color\"\n            i18n-clearButton=\"kendo.colorpicker.clearButton|The title for the clear button.\"\n            clearButton=\"Clear value\"\n            i18n-hueSliderHandle=\"kendo.colorpicker.hueSliderHandle|The title for the hue slider handle.\"\n            hueSliderHandle=\"Set hue\"\n            i18n-opacitySliderHandle=\"kendo.colorpicker.opacitySliderHandle|The title for the opacity slider handle.\"\n            opacitySliderHandle=\"Set opacity\"\n            i18n-contrastRatio=\"kendo.colorpicker.contrastRatio|The contrast ratio message for the contrast tool.\"\n            contrastRatio=\"Contrast ratio\"\n            i18n-previewColor=\"kendo.colorpicker.previewColor|The message for the color preview pane.\"\n            previewColor=\"Color preview\"\n            i18n-revertSelection=\"kendo.colorpicker.revertSelection|The message for the selected color pane.\"\n            revertSelection=\"Revert selection\"\n            i18n-gradientView=\"kendo.colorpicker.gradientView|The message for the gradient view button.\"\n            gradientView=\"Gradient view\"\n            i18n-paletteView=\"kendo.colorpicker.paletteView|The message for the palette view button.\"\n            paletteView=\"Palette view\"\n            i18n-formatButton=\"kendo.colorpicker.formatButton|The message for the input format toggle button.\"\n            formatButton=\"Change color format\"\n            i18n-applyButton=\"kendo.colorpicker.applyButton|The message for the Apply action button.\"\n            applyButton=\"Apply\"\n            i18n-cancelButton=\"kendo.colorpicker.cancelButton|The message for the Cancel action button.\"\n            cancelButton=\"Cancel\"\n            i18n-redChannelLabel=\"kendo.colorpicker.redChannelLabel|The label of the NumericTextBox representing the red color channel.\"\n            redChannelLabel=\"Red channel\"\n            i18n-greenChannelLabel=\"kendo.colorpicker.greenChannelLabel|The label of the NumericTextBox representing the green color channel.\"\n            greenChannelLabel=\"Green channel\"\n            i18n-blueChannelLabel=\"kendo.colorpicker.blueChannelLabel|The label of the NumericTextBox representing the blue color channel.\"\n            blueChannelLabel=\"Blue channel\"\n            i18n-alphaChannelLabel=\"kendo.colorpicker.alphaChannelLabel|The label of the NumericTextBox representing the alpha color channel.\"\n            alphaChannelLabel=\"Alpha channel\"\n            i18n-redInputPlaceholder=\"kendo.colorpicker.redInputPlaceholder|The placeholder for the red color input.\"\n            redChannelLabel=\"R\"\n            i18n-greenInputPlaceholder=\"kendo.colorpicker.greenInputPlaceholder|The placeholder for the green color input.\"\n            greenInputPlaceholder=\"G\"\n            i18n-blueInputPlaceholder=\"kendo.colorpicker.blueInputPlaceholder|The placeholder for the blue color input.\"\n            blueInputPlaceholder=\"B\"\n            i18n-hexInputPlaceholder=\"kendo.colorpicker.hexInputPlaceholder|The placeholder for the HEX color input.\"\n            hexInputPlaceholder=\"HEX\">\n        </ng-container>\n        <span #activeColor class=\"k-input-inner\">\n            <span\n                class=\"k-value-icon k-color-preview\"\n                [ngClass]=\"{'k-icon-color-preview': iconStyles, 'k-no-color': !value}\">\n                <span *ngIf=\"iconClass || icon\" class=\"k-color-preview-icon k-icon\" [ngClass]=\"iconStyles\"></span>\n                <span class=\"k-color-preview-mask\" [style.background-color]=\"value\"></span>\n            </span>\n        </span>\n        <button\n            tabindex=\"-1\"\n            type=\"button\"\n            role=\"none\"\n            aria-hidden=\"true\"\n            class=\"k-input-button k-button k-button-md k-button-solid k-button-solid-base k-icon-button\">\n                <span class=\"k-button-icon k-icon k-i-caret-alt-down\"></span>\n        </button>\n        <ng-template #popupTemplate>\n            <kendo-flatcolorpicker\n                #flatColorPicker\n                [value]=\"value\"\n                [format]=\"format\"\n                [views]=\"views\"\n                [activeView]=\"activeView\"\n                [actionsLayout]=\"actionsLayout\"\n                [preview]=\"preview\"\n                [gradientSettings]=\"gradientSettings\"\n                [paletteSettings]=\"paletteSettings\"\n                [clearButton]=\"clearButton\"\n                (cancel)=\"handleCancelEvent($event)\"\n                (focusout)=\"handlePopupBlur($event)\"\n                (valueChange)=\"handleValueChange($event)\"\n                (keydown)=\"handlePopupKeyDown($event)\"\n                (activeViewChange)=\"activeViewChange.emit($event)\"\n                (actionButtonClick)=\"togglePopup()\">\n            </kendo-flatcolorpicker>\n        </ng-template>\n        <ng-container #container></ng-container>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1$3.PopupService }, { type: i0.ChangeDetectorRef }, { type: i1.LocalizationService }, { type: i0.NgZone }, { type: i0.Renderer2 }, { type: i0.Injector }]; }, propDecorators: { hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-colorpicker']\n            }, {\n                type: HostBinding,\n                args: ['class.k-icon-picker']\n            }, {\n                type: HostBinding,\n                args: ['class.k-picker']\n            }], focusedClass: [{\n                type: HostBinding,\n                args: ['class.k-focus']\n            }], disabledClass: [{\n                type: HostBinding,\n                args: ['attr.aria-disabled']\n            }, {\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }], ariaReadonly: [{\n                type: HostBinding,\n                args: ['attr.aria-readonly']\n            }], ariaExpanded: [{\n                type: HostBinding,\n                args: ['attr.aria-expanded']\n            }], hostTabindex: [{\n                type: HostBinding,\n                args: ['attr.tabindex']\n            }], direction: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], role: [{\n                type: HostBinding,\n                args: ['attr.role']\n            }], hasPopup: [{\n                type: HostBinding,\n                args: ['attr.aria-haspopup']\n            }], isControlInvalid: [{\n                type: HostBinding,\n                args: ['attr.aria-invalid']\n            }], views: [{\n                type: Input\n            }], view: [{\n                type: Input\n            }], activeView: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], popupSettings: [{\n                type: Input\n            }], paletteSettings: [{\n                type: Input\n            }], gradientSettings: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], iconClass: [{\n                type: Input\n            }], clearButton: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], preview: [{\n                type: Input\n            }], actionsLayout: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], rounded: [{\n                type: Input\n            }], fillMode: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], open: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }], onFocus: [{\n                type: Output,\n                args: ['focus']\n            }], onBlur: [{\n                type: Output,\n                args: ['blur']\n            }], cancel: [{\n                type: Output\n            }], activeColorClick: [{\n                type: Output\n            }], activeViewChange: [{\n                type: Output\n            }], container: [{\n                type: ViewChild,\n                args: ['container', { read: ViewContainerRef, static: true }]\n            }], activeColor: [{\n                type: ViewChild,\n                args: ['activeColor', { static: true }]\n            }], popupTemplate: [{\n                type: ViewChild,\n                args: ['popupTemplate', { static: true }]\n            }], flatColorPicker: [{\n                type: ViewChild,\n                args: ['flatColorPicker', { static: false }]\n            }] } });\n\n/**\n * Custom component messages override default component messages.\n */\nclass ColorPickerCustomMessagesComponent extends ColorPickerMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nColorPickerCustomMessagesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPickerCustomMessagesComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nColorPickerCustomMessagesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColorPickerCustomMessagesComponent, selector: \"kendo-colorpicker-messages, kendo-flatcolorpicker-messages, kendo-colorgradient-messages, kendo-colorpalette-messages\", providers: [\n        {\n            provide: ColorPickerMessages,\n            useExisting: forwardRef(() => ColorPickerCustomMessagesComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPickerCustomMessagesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: ColorPickerMessages,\n                            useExisting: forwardRef(() => ColorPickerCustomMessagesComponent)\n                        }\n                    ],\n                    selector: 'kendo-colorpicker-messages, kendo-flatcolorpicker-messages, kendo-colorgradient-messages, kendo-colorpalette-messages',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * @hidden\n */\nclass FocusOnDomReadyDirective {\n    constructor(host, ngZone) {\n        this.host = host;\n        this.ngZone = ngZone;\n    }\n    ngAfterContentInit() {\n        this.focusOnNextTick();\n    }\n    focusOnNextTick() {\n        this.ngZone.runOutsideAngular(() => setTimeout(() => this.host.nativeElement.focus()));\n    }\n}\nFocusOnDomReadyDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FocusOnDomReadyDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nFocusOnDomReadyDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FocusOnDomReadyDirective, selector: \"[kendoFocusOnDomReady]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FocusOnDomReadyDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoFocusOnDomReady]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; } });\n\nconst PUBLIC_DIRECTIVES = [\n    ColorPickerComponent,\n    ColorPaletteComponent,\n    ColorGradientComponent,\n    FlatColorPickerComponent,\n    LocalizedColorPickerMessagesDirective,\n    ColorPickerCustomMessagesComponent\n];\nconst INTERNAL_DIRECTIVES = [\n    NumericLabelDirective,\n    ColorInputComponent,\n    FocusOnDomReadyDirective,\n    ContrastComponent,\n    ContrastValidationComponent,\n    FlatColorPickerHeaderComponent,\n    FlatColorPickerActionButtonsComponent,\n    ColorContrastSvgComponent\n];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the ColorPicker.\n */\nclass ColorPickerModule {\n}\nColorPickerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nColorPickerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPickerModule, declarations: [ColorPickerComponent,\n        ColorPaletteComponent,\n        ColorGradientComponent,\n        FlatColorPickerComponent,\n        LocalizedColorPickerMessagesDirective,\n        ColorPickerCustomMessagesComponent, NumericLabelDirective,\n        ColorInputComponent,\n        FocusOnDomReadyDirective,\n        ContrastComponent,\n        ContrastValidationComponent,\n        FlatColorPickerHeaderComponent,\n        FlatColorPickerActionButtonsComponent,\n        ColorContrastSvgComponent], imports: [SliderModule,\n        NumericTextBoxModule,\n        CommonModule,\n        PopupModule,\n        DraggableModule], exports: [ColorPickerComponent,\n        ColorPaletteComponent,\n        ColorGradientComponent,\n        FlatColorPickerComponent,\n        LocalizedColorPickerMessagesDirective,\n        ColorPickerCustomMessagesComponent] });\nColorPickerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPickerModule, imports: [[\n            SliderModule,\n            NumericTextBoxModule,\n            CommonModule,\n            PopupModule,\n            DraggableModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColorPickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        PUBLIC_DIRECTIVES,\n                        INTERNAL_DIRECTIVES\n                    ],\n                    exports: [PUBLIC_DIRECTIVES],\n                    imports: [\n                        SliderModule,\n                        NumericTextBoxModule,\n                        CommonModule,\n                        PopupModule,\n                        DraggableModule\n                    ]\n                }]\n        }] });\n\nconst DEFAULT_SIZE$2 = 'medium';\nconst DEFAULT_ROUNDED$1 = 'medium';\n/**\n * Represents the directive that renders the [Kendo UI CheckBox]({% slug overview_checkbox %}) input component.\n * The directive is placed on input type=\"checkbox\" elements.\n *\n * @example\n * ```ts-no-run\n * <input type=\"checkbox\" kendoCheckBox />\n * ```\n */\nclass CheckBoxDirective {\n    constructor(renderer, hostElement) {\n        this.renderer = renderer;\n        this.hostElement = hostElement;\n        this.kendoClass = true;\n        this._size = 'medium';\n        this._rounded = 'medium';\n    }\n    /**\n     * The size property specifies the width and height of the CheckBox\n     * ([see example]({% slug appearance_checkboxdirective %}#toc-size)).\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     */\n    set size(size) {\n        const newSize = size ? size : DEFAULT_SIZE$2;\n        this.handleClasses(newSize, 'size');\n        this._size = newSize;\n    }\n    get size() {\n        return this._size;\n    }\n    /**\n     * The rounded property specifies the border radius of the CheckBox\n     * ([see example]({% slug appearance_checkboxdirective %}#toc-rounded)).\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     */\n    set rounded(rounded) {\n        const newRounded = rounded ? rounded : DEFAULT_ROUNDED$1;\n        this.handleClasses(newRounded, 'rounded');\n        this._rounded = newRounded;\n    }\n    get rounded() {\n        return this._rounded;\n    }\n    ngAfterViewInit() {\n        const stylingInputs = ['size', 'rounded'];\n        stylingInputs.forEach(input => {\n            this.handleClasses(this[input], input);\n        });\n    }\n    handleClasses(value, input) {\n        const elem = this.hostElement.nativeElement;\n        const classes = getStylingClasses('checkbox', input, this[input], value);\n        if (classes.toRemove) {\n            this.renderer.removeClass(elem, classes.toRemove);\n        }\n        if (classes.toAdd) {\n            this.renderer.addClass(elem, classes.toAdd);\n        }\n    }\n}\nCheckBoxDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CheckBoxDirective, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCheckBoxDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: CheckBoxDirective, selector: \"input[kendoCheckBox]\", inputs: { size: \"size\", rounded: \"rounded\" }, host: { properties: { \"class.k-checkbox\": \"this.kendoClass\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CheckBoxDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[kendoCheckBox]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { kendoClass: [{\n                type: HostBinding,\n                args: ['class.k-checkbox']\n            }], size: [{\n                type: Input\n            }], rounded: [{\n                type: Input\n            }] } });\n\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the CheckBox directive.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the CheckBox module\n * import { CheckBoxModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, CheckBoxModule], // import CheckBox module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass CheckBoxModule {\n}\nCheckBoxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CheckBoxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCheckBoxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CheckBoxModule, declarations: [CheckBoxDirective], imports: [CommonModule], exports: [CheckBoxDirective] });\nCheckBoxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CheckBoxModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CheckBoxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [CheckBoxDirective],\n                    exports: [CheckBoxDirective],\n                    imports: [CommonModule]\n                }]\n        }] });\n\nconst DEFAULT_SIZE$1 = 'medium';\n/**\n * Represents the directive that renders the [Kendo UI RadioButton]({% slug overview_checkbox %}) input component.\n * The directive is placed on input type=\"radio\" elements.\n *\n * @example\n * ```ts-no-run\n * <input type=\"radio\" kendoRadioButton />\n * ```\n */\nclass RadioButtonDirective {\n    constructor(renderer, hostElement) {\n        this.renderer = renderer;\n        this.hostElement = hostElement;\n        this.kendoClass = true;\n        this._size = 'medium';\n        validatePackage(packageMetadata);\n    }\n    /**\n     * The size property specifies the width and height of the RadioButton\n     * ([see example]({% slug appearance_radiobuttondirective %}#toc-size)).\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     */\n    set size(size) {\n        const newSize = size ? size : DEFAULT_SIZE$1;\n        this.handleClasses(newSize, 'size');\n        this._size = newSize;\n    }\n    get size() {\n        return this._size;\n    }\n    ngAfterViewInit() {\n        // kept in sync with other inputs for easier refactoring\n        // to a common base class\n        const stylingInputs = ['size'];\n        stylingInputs.forEach(input => {\n            this.handleClasses(this[input], input);\n        });\n    }\n    handleClasses(value, input) {\n        const elem = this.hostElement.nativeElement;\n        const classes = getStylingClasses('radio', input, this[input], value);\n        if (classes.toRemove) {\n            this.renderer.removeClass(elem, classes.toRemove);\n        }\n        if (classes.toAdd) {\n            this.renderer.addClass(elem, classes.toAdd);\n        }\n    }\n}\nRadioButtonDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RadioButtonDirective, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nRadioButtonDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: RadioButtonDirective, selector: \"input[kendoRadioButton]\", inputs: { size: \"size\" }, host: { properties: { \"class.k-radio\": \"this.kendoClass\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RadioButtonDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[kendoRadioButton]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { kendoClass: [{\n                type: HostBinding,\n                args: ['class.k-radio']\n            }], size: [{\n                type: Input\n            }] } });\n\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the RadioButton directive.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the RadioButton module\n * import { RadioButtonModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, RadioButtonModule], // import RadioButton module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass RadioButtonModule {\n}\nRadioButtonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RadioButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRadioButtonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RadioButtonModule, declarations: [RadioButtonDirective], imports: [CommonModule], exports: [RadioButtonDirective] });\nRadioButtonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RadioButtonModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RadioButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [RadioButtonDirective],\n                    exports: [RadioButtonDirective],\n                    imports: [CommonModule]\n                }]\n        }] });\n\nlet serial$1 = 0;\n/**\n * Represents an error message that will be shown underneath\n * a Kendo control or native HTML form-bound component after a validation.\n */\nclass ErrorComponent {\n    constructor() {\n        this.hostClass = true;\n        /**\n         * Specifies the alignment of the Error message.\n         *\n         * The possible values are:\n         * * (Default) `start`\n         * * `end`\n         */\n        this.align = 'start';\n        /**\n         * @hidden\n         */\n        this.id = `kendo-error-${serial$1++}`;\n        this.roleAttribute = 'alert';\n    }\n    get startClass() {\n        return this.align === 'start';\n    }\n    get endClass() {\n        return this.align === 'end';\n    }\n    get idAttribute() {\n        return this.id;\n    }\n}\nErrorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ErrorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nErrorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ErrorComponent, selector: \"kendo-formerror\", inputs: { align: \"align\" }, host: { properties: { \"class.k-form-error\": \"this.hostClass\", \"attr.role\": \"this.roleAttribute\", \"class.k-text-start\": \"this.startClass\", \"class.k-text-end\": \"this.endClass\", \"attr.id\": \"this.idAttribute\" } }, ngImport: i0, template: `\n        <ng-content></ng-content>\n    `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ErrorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-formerror',\n                    template: `\n        <ng-content></ng-content>\n    `\n                }]\n        }], propDecorators: { hostClass: [{\n                type: HostBinding,\n                args: ['class.k-form-error']\n            }], align: [{\n                type: Input\n            }], roleAttribute: [{\n                type: HostBinding,\n                args: ['attr.role']\n            }], startClass: [{\n                type: HostBinding,\n                args: ['class.k-text-start']\n            }], endClass: [{\n                type: HostBinding,\n                args: ['class.k-text-end']\n            }], idAttribute: [{\n                type: HostBinding,\n                args: ['attr.id']\n            }] } });\n\nlet serial = 0;\n/**\n * Represents a hint message that will be shown underneath a form-bound component.\n */\nclass HintComponent {\n    constructor() {\n        /**\n         * Specifies the alignment of the Hint message.\n         *\n         * The possible values are:\n         * * (Default) `start`\n         * * `end`\n         */\n        this.align = 'start';\n        /**\n         * @hidden\n         */\n        this.id = `kendo-hint-${serial++}`;\n        this.hostClass = true;\n    }\n    get startClass() {\n        return this.align === 'start';\n    }\n    get endClass() {\n        return this.align === 'end';\n    }\n    get idAttribute() {\n        return this.id;\n    }\n}\nHintComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HintComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nHintComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: HintComponent, selector: \"kendo-formhint\", inputs: { align: \"align\" }, host: { properties: { \"class.k-form-hint\": \"this.hostClass\", \"class.k-text-start\": \"this.startClass\", \"class.k-text-end\": \"this.endClass\", \"attr.id\": \"this.idAttribute\" } }, ngImport: i0, template: `\n        <ng-content></ng-content>\n    `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HintComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-formhint',\n                    template: `\n        <ng-content></ng-content>\n    `\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }], hostClass: [{\n                type: HostBinding,\n                args: ['class.k-form-hint']\n            }], startClass: [{\n                type: HostBinding,\n                args: ['class.k-text-start']\n            }], endClass: [{\n                type: HostBinding,\n                args: ['class.k-text-end']\n            }], idAttribute: [{\n                type: HostBinding,\n                args: ['attr.id']\n            }] } });\n\n/**\n * Specifies a container for form-bound controls (Kendo controls or native HTML controls).\n * Applies styling and behavior rules.\n */\nclass FormFieldComponent {\n    constructor(renderer, localizationService, hostElement) {\n        this.renderer = renderer;\n        this.localizationService = localizationService;\n        this.hostElement = hostElement;\n        this.hostClass = true;\n        /**\n         *\n         * Specifies when the Hint messages will be shown.\n         *\n         * The possible values are:\n         *\n         * * (Default) `initial`&mdash;Allows displaying hints when the form-bound component state is\n         * `valid` or `untouched` and `pristine`.\n         * * `always`&mdash;Allows full control over the visibility of the hints.\n         *\n         */\n        this.showHints = 'initial';\n        /**\n         * Specifies the layout orientation of the form field.\n         *\n         * * The possible values are:\n         *\n         * * (Default) `vertical`\n         * * `horizontal`\n         */\n        this.orientation = 'vertical';\n        /**\n         * Specifies when the Error messages will be shown.\n         *\n         * The possible values are:\n         *\n         * * (Default) `initial`&mdash;Allows displaying errors when the form-bound component state is\n         * `invalid` and `touched` or `dirty`.\n         * * `always`&mdash;Allows full control over the visibility of the errors.\n         *\n         */\n        this.showErrors = 'initial';\n        this.subscriptions = new Subscription();\n        this.rtl = false;\n        validatePackage(packageMetadata);\n        this.subscriptions.add(this.localizationService.changes.subscribe(({ rtl }) => {\n            this.rtl = rtl;\n            this.direction = this.rtl ? 'rtl' : 'ltr';\n        }));\n    }\n    get errorClass() {\n        if (!this.control) {\n            return false;\n        }\n        return this.control.invalid && (this.control.touched || this.control.dirty);\n    }\n    get disabledClass() {\n        if (!this.control) {\n            return false;\n        }\n        // radiobutton group\n        if (this.isRadioControl(this.control)) {\n            return false;\n        }\n        return this.disabledControl() ||\n            this.disabledElement() ||\n            this.disabledKendoInput();\n    }\n    set formControls(formControls) {\n        this.validateFormControl(formControls);\n        this.control = formControls.first;\n    }\n    /**\n     * @hidden\n     */\n    get horizontal() {\n        return this.orientation === 'horizontal';\n    }\n    /**\n     * @hidden\n     */\n    get hasHints() {\n        return this.showHints === 'always' ? true : this.showHintsInitial();\n    }\n    /**\n     * @hidden\n     */\n    get hasErrors() {\n        return this.showErrors === 'always' ? true : this.showErrorsInitial();\n    }\n    ngAfterViewInit() {\n        this.setDescription();\n    }\n    ngAfterViewChecked() {\n        this.updateDescription();\n    }\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n    }\n    disabledKendoInput() {\n        return this.kendoInput && this.kendoInput.disabled;\n    }\n    disabledControl() {\n        return this.control.disabled;\n    }\n    disabledElement() {\n        const elements = this.controlElementRefs.toArray();\n        return elements.every(e => e.nativeElement.hasAttribute('disabled'));\n    }\n    validateFormControl(formControls) {\n        if (isDevMode() && formControls.length !== 1 && !this.isControlGroup(formControls)) {\n            throw new Error('The `kendo-formfield` component should contain ' +\n                'only one control of type NgControl with a formControlName(https://angular.io/api/forms/FormControlName)' +\n                'or an ngModel(https://angular.io/api/forms/NgModel) binding.');\n        }\n    }\n    isControlGroup(formControls) {\n        if (!formControls.length) {\n            return false;\n        }\n        const name = formControls.first.name;\n        return formControls.toArray().every(c => c.name === name && (this.isRadioControl(c)));\n    }\n    isRadioControl(control) {\n        return control.valueAccessor instanceof RadioControlValueAccessor;\n    }\n    updateDescription() {\n        const controls = this.findControlElements();\n        if (!controls) {\n            return;\n        }\n        controls.forEach((control) => {\n            if (this.errorChildren.length > 0 || this.hintChildren.length > 0) {\n                const ariaIds = this.generateDescriptionIds(control);\n                if (ariaIds !== '') {\n                    this.renderer.setAttribute(control, 'aria-describedby', ariaIds);\n                }\n                else {\n                    this.renderer.removeAttribute(control, 'aria-describedby');\n                }\n            }\n        });\n    }\n    findControlElements() {\n        if (!this.controlElementRefs) {\n            return;\n        }\n        // if the control is KendoInput and has focusableId - dropdowns, dateinputs\n        if (this.kendoInput && this.kendoInput.focusableId && isDocumentAvailable()) {\n            return [this.hostElement.nativeElement.querySelector(`#${this.kendoInput.focusableId}`)];\n        }\n        return this.controlElementRefs.map(el => el.nativeElement);\n    }\n    generateDescriptionIds(control) {\n        const ids = new Set();\n        let errorAttribute = '';\n        if (control.hasAttribute('aria-describedby')) {\n            const attributes = control.getAttribute('aria-describedby').split(' ');\n            errorAttribute = attributes.filter(attr => attr.includes('kendo-error-'))[0];\n            attributes.forEach((attr) => {\n                if (attr.includes('kendo-hint-') || attr.includes('kendo-error-')) {\n                    return;\n                }\n                ids.add(attr);\n            });\n        }\n        this.hintChildren.forEach((hint) => {\n            ids.add(hint.id);\n        });\n        if (this.hasErrors) {\n            this.errorChildren.forEach((error) => {\n                ids.add(error.id);\n            });\n        }\n        else {\n            ids.delete(errorAttribute);\n        }\n        return Array.from(ids).join(' ');\n    }\n    showHintsInitial() {\n        if (!this.control) {\n            return true;\n        }\n        const { valid, untouched, pristine } = this.control;\n        return valid || (untouched && pristine);\n    }\n    showErrorsInitial() {\n        if (!this.control) {\n            return false;\n        }\n        const { invalid, dirty, touched } = this.control;\n        return invalid && (dirty || touched);\n    }\n    setDescription() {\n        this.updateDescription();\n        this.subscriptions.add(this.errorChildren.changes.subscribe(() => this.updateDescription()));\n        this.subscriptions.add(this.hintChildren.changes.subscribe(() => this.updateDescription()));\n    }\n}\nFormFieldComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FormFieldComponent, deps: [{ token: i0.Renderer2 }, { token: i1.LocalizationService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nFormFieldComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FormFieldComponent, selector: \"kendo-formfield\", inputs: { showHints: \"showHints\", orientation: \"orientation\", showErrors: \"showErrors\" }, host: { properties: { \"class.k-form-field\": \"this.hostClass\", \"attr.dir\": \"this.direction\", \"class.k-form-field-error\": \"this.errorClass\", \"class.k-form-field-disabled\": \"this.disabledClass\" } }, providers: [\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.formfield'\n        }\n    ], queries: [{ propertyName: \"kendoInput\", first: true, predicate: KendoInput, descendants: true, static: true }, { propertyName: \"formControls\", predicate: NgControl, descendants: true }, { propertyName: \"controlElementRefs\", predicate: NgControl, descendants: true, read: ElementRef }, { propertyName: \"errorChildren\", predicate: ErrorComponent, descendants: true }, { propertyName: \"hintChildren\", predicate: HintComponent, descendants: true }], ngImport: i0, template: `\n        <ng-content select=\"label, kendo-label\"></ng-content>\n        <div [class.k-form-field-wrap]=\"horizontal\">\n            <ng-content></ng-content>\n            <ng-content select=\"kendo-formhint\" *ngIf=\"hasHints\"></ng-content>\n            <ng-content select=\"kendo-formerror\" *ngIf=\"hasErrors\"></ng-content>\n        </div>\n    `, isInline: true, directives: [{ type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FormFieldComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-formfield',\n                    template: `\n        <ng-content select=\"label, kendo-label\"></ng-content>\n        <div [class.k-form-field-wrap]=\"horizontal\">\n            <ng-content></ng-content>\n            <ng-content select=\"kendo-formhint\" *ngIf=\"hasHints\"></ng-content>\n            <ng-content select=\"kendo-formerror\" *ngIf=\"hasErrors\"></ng-content>\n        </div>\n    `,\n                    providers: [\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.formfield'\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i1.LocalizationService }, { type: i0.ElementRef }]; }, propDecorators: { hostClass: [{\n                type: HostBinding,\n                args: ['class.k-form-field']\n            }], direction: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], errorClass: [{\n                type: HostBinding,\n                args: ['class.k-form-field-error']\n            }], disabledClass: [{\n                type: HostBinding,\n                args: ['class.k-form-field-disabled']\n            }], formControls: [{\n                type: ContentChildren,\n                args: [NgControl, { descendants: true }]\n            }], controlElementRefs: [{\n                type: ContentChildren,\n                args: [NgControl, { read: ElementRef, descendants: true }]\n            }], kendoInput: [{\n                type: ContentChild,\n                args: [KendoInput, { static: true }]\n            }], errorChildren: [{\n                type: ContentChildren,\n                args: [ErrorComponent, { descendants: true }]\n            }], hintChildren: [{\n                type: ContentChildren,\n                args: [HintComponent, { descendants: true }]\n            }], showHints: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], showErrors: [{\n                type: Input\n            }] } });\n\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the FormField, Error and Hint components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the FormField module\n * import { FormFieldModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, FormFieldModule], // import FormField module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass FormFieldModule {\n}\nFormFieldModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FormFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFormFieldModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FormFieldModule, declarations: [HintComponent, ErrorComponent, FormFieldComponent], imports: [CommonModule], exports: [HintComponent, ErrorComponent, FormFieldComponent] });\nFormFieldModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FormFieldModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FormFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [HintComponent, ErrorComponent, FormFieldComponent],\n                    exports: [HintComponent, ErrorComponent, FormFieldComponent],\n                    imports: [CommonModule]\n                }]\n        }] });\n\n/**\n * @hidden\n */\nclass SignatureMessages extends ComponentMessages {\n}\nSignatureMessages.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SignatureMessages, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nSignatureMessages.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: SignatureMessages, selector: \"kendo-signature-messages-base\", inputs: { clear: \"clear\", minimize: \"minimize\", maximize: \"maximize\", canvasLabel: \"canvasLabel\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SignatureMessages, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: 'kendo-signature-messages-base'\n                }]\n        }], propDecorators: { clear: [{\n                type: Input\n            }], minimize: [{\n                type: Input\n            }], maximize: [{\n                type: Input\n            }], canvasLabel: [{\n                type: Input\n            }] } });\n\n/**\n * Custom component messages override default component messages.\n */\nclass SignatureCustomMessagesComponent extends SignatureMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nSignatureCustomMessagesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SignatureCustomMessagesComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nSignatureCustomMessagesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: SignatureCustomMessagesComponent, selector: \"kendo-signature-messages\", providers: [\n        {\n            provide: SignatureMessages,\n            useExisting: forwardRef(() => SignatureCustomMessagesComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SignatureCustomMessagesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: SignatureMessages,\n                            useExisting: forwardRef(() => SignatureCustomMessagesComponent)\n                        }\n                    ],\n                    selector: 'kendo-signature-messages',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * @hidden\n */\nclass LocalizedSignatureMessagesDirective extends SignatureMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nLocalizedSignatureMessagesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalizedSignatureMessagesDirective, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Directive });\nLocalizedSignatureMessagesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LocalizedSignatureMessagesDirective, selector: \"[kendoSignatureLocalizedMessages]\", providers: [\n        {\n            provide: SignatureMessages,\n            useExisting: forwardRef(() => LocalizedSignatureMessagesDirective)\n        }\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalizedSignatureMessagesDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    providers: [\n                        {\n                            provide: SignatureMessages,\n                            useExisting: forwardRef(() => LocalizedSignatureMessagesDirective)\n                        }\n                    ],\n                    selector: '[kendoSignatureLocalizedMessages]'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * Arguments for the `close` event of the Signature component.\n */\nclass SignatureCloseEvent extends PreventableEvent {\n}\n\n/**\n * Arguments for the `open` event of the Signature component.\n */\nclass SignatureOpenEvent extends PreventableEvent {\n}\n\nconst noop = () => { };\nconst FOCUSED_CLASS = 'k-focus';\nconst DEFAULT_SIZE = 'medium';\nconst DEFAULT_ROUNDED = 'medium';\nconst DEFAULT_FILL_MODE = 'solid';\nconst DEFAULT_POPUP_SCALE = 3;\nconst DEFAULT_EXPORT_SCALE = 2;\nconst DEFAULT_COLOR = '#000000';\nconst DEFAULT_BACKGROUND_COLOR = '#ffffff';\n/**\n * Represents the [Kendo UI Signature component for Angular]({% slug overview_signature %}).\n *\n * The Signature allows users to add a hand-drawn signature to forms.\n */\nclass SignatureComponent {\n    constructor(element, renderer, ngZone, cd, localization) {\n        this.element = element;\n        this.renderer = renderer;\n        this.ngZone = ngZone;\n        this.cd = cd;\n        this.localization = localization;\n        this.staticHostClasses = true;\n        /**\n         * Sets the read-only state of the Signature.\n         *\n         * @default false\n         */\n        this.readonly = false;\n        /**\n         * Sets the disabled state of the Signature.\n         *\n         * @default false\n         */\n        this.disabled = false;\n        /**\n         * The size property specifies the padding of the Signature internal controls\n         * ([see example]({% slug appearance_signature %}#toc-size)).\n         *\n         * The possible values are:\n         * * `small`\n         * * `medium` (default)\n         * * `large`\n         * * `none`\n         */\n        this.size = DEFAULT_SIZE;\n        /**\n         * The rounded property specifies the border radius of the signature\n         * ([see example]({% slug appearance_signature %}#toc-rounded)).\n         *\n         * The possible values are:\n         * * `small`\n         * * `medium` (default)\n         * * `large`\n         * * `full` (not supported by the Signature)\n         * * `none`\n         */\n        this.rounded = DEFAULT_ROUNDED;\n        /**\n         * The fillMode property specifies the background and border styles of the signature\n         * ([see example]({% slug appearance_signature %}#toc-fillMode)).\n         *\n         * The possible values are:\n         * * `flat`\n         * * `solid` (default)\n         * * `outline`\n         * * `none`\n         */\n        this.fillMode = DEFAULT_FILL_MODE;\n        /**\n         * The stroke width of the signature.\n         *\n         * @default 1\n         */\n        this.strokeWidth = 1;\n        /**\n         * A flag indicating whether to smooth out signature lines.\n         *\n         * @default false\n         */\n        this.smooth = false;\n        /**\n         * A flag indicating if the signature can be maximized.\n         *\n         * @default true\n         */\n        this.maximizable = true;\n        /**\n         * @hidden\n         */\n        this.maximized = false;\n        /**\n         * The scale factor for the popup.\n         *\n         * The Signature width and height will be multiplied by the scale when showing the popup.\n         *\n         * @default 3\n         */\n        this.popupScale = DEFAULT_POPUP_SCALE;\n        /**\n         * The scale factor for the exported image.\n         *\n         * The Signature width and height will be multiplied by the scale when converting the signature to an image.\n         *\n         * @default 2\n         */\n        this.exportScale = DEFAULT_EXPORT_SCALE;\n        /**\n         * A flag indicating whether the dotted line should be displayed in the background.\n         *\n         * @default false\n         */\n        this.hideLine = false;\n        /**\n         * Fires each time the signature value is changed.\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires each time the popup is about to open.\n         * This event is preventable. If you cancel it, the popup will remain closed.\n         */\n        this.open = new EventEmitter();\n        /**\n         * Fires each time the popup is about to close.\n         * This event is preventable. If you cancel it, the popup will remain open.\n         */\n        this.close = new EventEmitter();\n        /**\n         * Fires each time Signature is focused.\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * Fires each time the Signature is blurred.\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.minimize = new EventEmitter();\n        /**\n         * Indicates whether the Signature wrapper is focused.\n         */\n        this.isFocused = false;\n        /**\n         * @hidden\n         */\n        this.isDrawing = false;\n        this.notifyNgTouched = noop;\n        this.notifyNgChanged = noop;\n        this._tabindex = 0;\n        this.hostClasses = [];\n        validatePackage(packageMetadata);\n        this.direction = localization.rtl ? 'rtl' : 'ltr';\n    }\n    /**\n     * Gets or sets the value of the signature.\n     *\n     * The value is a Base64-encoded PNG image.\n     */\n    set value(value) {\n        if (value !== this._value) {\n            this._value = value;\n            if (this.instance) {\n                this.instance.loadImage(value);\n            }\n        }\n    }\n    get value() {\n        return this._value;\n    }\n    /**\n     * Specifies the [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     *\n     * @default 0\n     */\n    set tabindex(value) {\n        const tabindex = Number(value);\n        const defaultValue = 0;\n        this._tabindex = !isNaN(tabindex) ? tabindex : defaultValue;\n    }\n    get tabindex() {\n        return !this.disabled ? this._tabindex : undefined;\n    }\n    /**\n     * @hidden\n     */\n    get isEmpty() {\n        return !this.value;\n    }\n    /**\n     * @hidden\n     */\n    get canvasLabel() {\n        return this.getMessage('canvasLabel');\n    }\n    /**\n     * @hidden\n     */\n    get clearTitle() {\n        return this.getMessage('clear');\n    }\n    /**\n     * @hidden\n     */\n    get minimizeTitle() {\n        return this.getMessage('minimize');\n    }\n    /**\n     * @hidden\n     */\n    get maximizeTitle() {\n        return this.getMessage('maximize');\n    }\n    /**\n     * @hidden\n     */\n    get baseWidth() {\n        return this.width || this.element.nativeElement.offsetWidth;\n    }\n    /**\n     * @hidden\n     */\n    get baseHeight() {\n        return this.height || this.element.nativeElement.offsetHeight;\n    }\n    /**\n     * @hidden\n     */\n    get popupWidth() {\n        return this.baseWidth * this.popupScale;\n    }\n    /**\n     * @hidden\n     */\n    get popupHeight() {\n        return this.baseHeight * this.popupScale;\n    }\n    /**\n     * @hidden\n     */\n    get showMaximize() {\n        return !(this.maximized || this.isDrawing || !this.maximizable || this.disabled);\n    }\n    /**\n     * @hidden\n     */\n    get showMinimize() {\n        return this.maximized && !this.isDrawing;\n    }\n    /**\n     * @hidden\n     */\n    get showClear() {\n        return !(this.isEmpty || this.isDrawing || this.readonly || this.disabled);\n    }\n    get focused() {\n        return this.isFocused;\n    }\n    set focused(value) {\n        if (this.isFocused !== value && this.element) {\n            const wrap = this.element.nativeElement;\n            if (value && !this.maximized) {\n                this.renderer.addClass(wrap, FOCUSED_CLASS);\n            }\n            else {\n                this.renderer.removeClass(wrap, FOCUSED_CLASS);\n            }\n            this.isFocused = value;\n        }\n    }\n    get options() {\n        return {\n            scale: this.maximized ? this.popupScale : 1,\n            color: this.color,\n            backgroundColor: this.backgroundColor,\n            strokeWidth: this.strokeWidth,\n            smooth: this.smooth,\n            readonly: this.readonly\n        };\n    }\n    ngOnInit() {\n        this.subscriptions = this.localization\n            .changes\n            .subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n        });\n    }\n    ngAfterViewInit() {\n        this.applyHostClasses();\n        this.readThemeColors();\n        this.ngZone.runOutsideAngular(() => {\n            const element = this.canvas.nativeElement;\n            this.instance = new SignaturePad(element, Object.assign(Object.assign({}, this.options), { onChange: () => this.onValueChange(), onDraw: () => this.onDraw(), onDrawEnd: () => this.onDrawEnd() }));\n            if (this.value) {\n                this.instance.loadImage(this.value);\n            }\n            this.addEventListeners();\n        });\n    }\n    ngOnChanges(changes) {\n        if (anyChanged(['readonly', 'color', 'backgroundColor', 'strokeWidth', 'smooth'], changes, true)) {\n            this.instance.setOptions(this.options);\n        }\n        this.applyHostClasses();\n    }\n    ngOnDestroy() {\n        if (this.instance) {\n            this.instance.destroy();\n            this.instance = null;\n        }\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n            this.subscriptions = null;\n        }\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = null;\n        }\n    }\n    /**\n     * @hidden\n     */\n    onClear() {\n        this.reset();\n        this.valueChange.emit(undefined);\n    }\n    /**\n     * @hidden\n     */\n    onValueChange() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = yield this.instance.exportImage({\n                width: this.baseWidth * this.exportScale,\n                height: this.baseHeight * this.exportScale\n            });\n            this._value = value;\n            this.cd.markForCheck();\n            this.ngZone.run(() => {\n                this.valueChange.emit(value);\n                this.notifyNgChanged(value);\n            });\n        });\n    }\n    /**\n     * @hidden\n     */\n    onDialogValueChange(value) {\n        this.value = value;\n        this.valueChange.emit(value);\n        this.notifyNgTouched();\n        this.notifyNgChanged(value);\n    }\n    /**\n     * @hidden\n     */\n    onDialogClick(e) {\n        var _a;\n        if (e.target.classList.contains('k-overlay')) {\n            this.isOpen = false;\n            (_a = this.maximizeButton) === null || _a === void 0 ? void 0 : _a.nativeElement.focus();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onDialogKeydown(e) {\n        var _a;\n        if (e.keyCode === Keys.Escape) {\n            this.isOpen = false;\n            this.cd.detectChanges();\n            (_a = this.maximizeButton) === null || _a === void 0 ? void 0 : _a.nativeElement.focus();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onDialogClose() {\n        var _a;\n        const args = new SignatureCloseEvent();\n        this.close.next(args);\n        if (!args.isDefaultPrevented()) {\n            this.isOpen = false;\n            (_a = this.maximizeButton) === null || _a === void 0 ? void 0 : _a.nativeElement.focus();\n        }\n    }\n    /**\n     * Clears the value of the Signature.\n     */\n    reset() {\n        var _a;\n        if (!isPresent(this.value)) {\n            return;\n        }\n        (_a = this.instance) === null || _a === void 0 ? void 0 : _a.clear();\n        this.value = this._value = undefined;\n        this.notifyNgChanged(undefined);\n    }\n    /**\n     * Toggles the popup of the Signature.\n     * Does not trigger the `open` and `close` events of the component.\n     *\n     * @param open An optional parameter. Specifies whether the popup will be opened or closed.\n     */\n    toggle(open) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        open = isPresent(open) ? open : !this.isOpen;\n        this.isOpen = open;\n    }\n    /**\n     * @hidden\n     */\n    onMaximize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const args = new SignatureOpenEvent();\n            this.open.next(args);\n            if (!args.isDefaultPrevented()) {\n                this.popupValue = yield this.instance.exportImage({\n                    width: this.popupWidth * this.exportScale,\n                    height: this.popupHeight * this.exportScale\n                });\n                this.isOpen = true;\n                this.cd.detectChanges();\n            }\n        });\n    }\n    /**\n     * @hidden\n     */\n    onMinimize() {\n        this.minimize.next();\n    }\n    applyHostClasses() {\n        const classList = this.element.nativeElement.classList;\n        this.hostClasses.forEach(([name]) => classList.remove(name));\n        this.hostClasses = [\n            [`k-signature-${SIZE_MAP[this.size || DEFAULT_SIZE]}`, !isNone(this.size)],\n            [`k-input-${this.fillMode || DEFAULT_FILL_MODE}`, !isNone(this.fillMode)],\n            [`k-rounded-${ROUNDED_MAP[this.rounded || DEFAULT_ROUNDED]}`, !isNone(this.rounded)]\n        ];\n        this.hostClasses.forEach(([name, enabled]) => classList.toggle(name, enabled));\n    }\n    readThemeColors() {\n        let defaultColor = DEFAULT_COLOR;\n        let defaultBackgroundColor = DEFAULT_BACKGROUND_COLOR;\n        if (isDocumentAvailable()) {\n            const el = this.element.nativeElement;\n            defaultColor = getComputedStyle(el).color;\n            defaultBackgroundColor = getComputedStyle(el).backgroundColor;\n        }\n        this.color = this.color || defaultColor;\n        this.backgroundColor = this.backgroundColor || defaultBackgroundColor;\n    }\n    /**\n     * Focuses the wrapper of the Signature.\n     */\n    focus() {\n        this.focused = true;\n        this.element.nativeElement.focus();\n    }\n    /**\n     * @hidden\n     */\n    onWrapperFocus() {\n        if (this.focused) {\n            return;\n        }\n        this.ngZone.run(() => {\n            this.focus();\n            this.onFocus.emit();\n        });\n    }\n    /**\n     * Blurs the Signature.\n     */\n    blur() {\n        this.focused = false;\n        this.element.nativeElement.blur();\n        this.notifyNgTouched();\n    }\n    /**\n     * @hidden\n     */\n    onWrapperBlur() {\n        if (this.isOpen) {\n            return;\n        }\n        this.ngZone.run(() => {\n            this.onBlur.emit();\n            this.focused = false;\n            this.notifyNgTouched();\n        });\n    }\n    /**\n     * @hidden\n     */\n    onWrapperClick(_event) {\n        if (this.disabled) {\n            return;\n        }\n        this.focus();\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.notifyNgChanged = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.notifyNgTouched = fn;\n    }\n    onDraw() {\n        this.isDrawing = true;\n        this.cd.markForCheck();\n    }\n    onDrawEnd() {\n        this.isDrawing = false;\n        this.cd.markForCheck();\n    }\n    addEventListeners() {\n        const element = this.element.nativeElement;\n        const focusIn = this.renderer.listen(element, 'focusin', () => this.onWrapperFocus());\n        const focusOut = this.renderer.listen(element, 'focusout', (e) => {\n            const insideWrapper = closest$1(e.relatedTarget, element => element === this.element.nativeElement);\n            if (!insideWrapper) {\n                this.onWrapperBlur();\n            }\n        });\n        const click = this.renderer.listen(element, 'click', () => {\n            this.ngZone.run((e) => {\n                this.onWrapperClick(e);\n            });\n        });\n        this.unsubscribe = () => {\n            focusIn();\n            focusOut();\n            click();\n        };\n    }\n    getMessage(key) {\n        if (this.maximized && this.parentLocalization) {\n            return this.parentLocalization.get(key);\n        }\n        return this.localization.get(key);\n    }\n}\nSignatureComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SignatureComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nSignatureComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: SignatureComponent, selector: \"kendo-signature\", inputs: { readonly: \"readonly\", disabled: \"disabled\", width: \"width\", height: \"height\", value: \"value\", tabindex: \"tabindex\", size: \"size\", rounded: \"rounded\", fillMode: \"fillMode\", color: \"color\", backgroundColor: \"backgroundColor\", strokeWidth: \"strokeWidth\", smooth: \"smooth\", maximizable: \"maximizable\", maximized: \"maximized\", popupScale: \"popupScale\", exportScale: \"exportScale\", parentLocalization: \"parentLocalization\", hideLine: \"hideLine\" }, outputs: { valueChange: \"valueChange\", open: \"open\", close: \"close\", onFocus: \"focus\", onBlur: \"blur\", minimize: \"minimize\" }, host: { properties: { \"class.k-signature\": \"this.staticHostClasses\", \"class.k-input\": \"this.staticHostClasses\", \"attr.dir\": \"this.direction\", \"class.k-readonly\": \"this.readonly\", \"class.k-disabled\": \"this.disabled\", \"style.width.px\": \"this.width\", \"style.height.px\": \"this.height\" } }, providers: [\n        LocalizationService,\n        { provide: L10N_PREFIX, useValue: 'kendo.signature' },\n        { multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SignatureComponent) }\n    ], viewQueries: [{ propertyName: \"maximizeButton\", first: true, predicate: [\"maximizeButton\"], descendants: true, read: ElementRef }, { propertyName: \"canvas\", first: true, predicate: [\"canvas\"], descendants: true }], exportAs: [\"kendoSignature\"], usesOnChanges: true, ngImport: i0, template: `\n        <ng-container kendoSignatureLocalizedMessages\n            i18n-clear=\"kendo.signature.clear|The message for the Clear button.\"\n            clear=\"Clear\"\n            i18n-maximize=\"kendo.signature.maximize|The message for the Maximize button.\"\n            maximize=\"Maximize\"\n            i18n-minimize=\"kendo.signature.minimize|The message for the Minimize button.\"\n            minimize=\"Minimize\"\n            i18n-canvasLabel=\"kendo.signature.canvasLabel|The message for the Canvas element aria-label.\"\n            canvasLabel=\"Signature canvas\">\n        </ng-container>\n\n        <div class=\"k-signature-actions k-signature-actions-top\">\n            <button\n                *ngIf=\"showMaximize\"\n                #maximizeButton\n                kendoButton\n                class=\"k-signature-action k-signature-maximize\"\n                icon=\"hyperlink-open\"\n                fillMode=\"flat\"\n                [size]=\"size\"\n                (click)=\"onMaximize()\"\n                [attr.aria-label]=\"maximizeTitle\"\n                [title]=\"maximizeTitle\">\n            </button>\n            <button\n                *ngIf=\"showMinimize\"\n                kendoButton\n                class=\"k-signature-action k-signature-minimize k-rotate-180\"\n                icon=\"hyperlink-open\"\n                fillMode=\"flat\"\n                [size]=\"size\"\n                (click)=\"onMinimize()\"\n                [attr.aria-label]=\"minimizeTitle\"\n                [title]=\"minimizeTitle\">\n            </button>\n        </div>\n        <div\n            #canvas\n            class=\"k-signature-canvas\"\n            [attr.tabindex]=\"tabindex\"\n            role=\"img\"\n            [attr.aria-label]=\"canvasLabel\"\n        ></div>\n        <div\n            *ngIf=\"!hideLine\"\n            class=\"k-signature-line\"\n        ></div>\n        <div class=\"k-signature-actions k-signature-actions-bottom\">\n            <button\n                *ngIf=\"showClear\"\n                kendoButton\n                class=\"k-signature-action k-signature-clear\"\n                icon=\"close\"\n                fillMode=\"flat\"\n                [size]=\"size\"\n                [attr.aria-label]=\"clearTitle\"\n                [title]=\"clearTitle\"\n                (click)=\"onClear()\" >\n            </button>\n        </div>\n\n        <kendo-dialog\n            *ngIf=\"isOpen\"\n            autoFocusedElement=\".k-signature-action.k-signature-minimize\"\n            (click)=\"onDialogClick($event)\"\n            (keydown)=\"onDialogKeydown($event)\">\n            <kendo-signature\n                [readonly]=\"readonly\"\n                [disabled]=\"disabled\"\n                [size]=\"size\"\n                [rounded]=\"rounded\"\n                [fillMode]=\"fillMode\"\n                [color]=\"color\"\n                [backgroundColor]=\"backgroundColor\"\n                [strokeWidth]=\"strokeWidth\"\n                [smooth]=\"smooth\"\n                [value]=\"popupValue\"\n                (valueChange)=\"onDialogValueChange($event)\"\n                [hideLine]=\"hideLine\"\n                [class.k-signature-maximized]=\"true\"\n                [maximized]=\"true\"\n                (minimize)=\"onDialogClose()\"\n                [width]=\"popupWidth\"\n                [height]=\"popupHeight\"\n                [popupScale]=\"popupScale\"\n                [parentLocalization]=\"localization\">\n            </kendo-signature>\n        </kendo-dialog>\n    `, isInline: true, components: [{ type: i2.DialogComponent, selector: \"kendo-dialog\", inputs: [\"actions\", \"actionsLayout\", \"autoFocusedElement\", \"title\", \"width\", \"minWidth\", \"maxWidth\", \"height\", \"minHeight\", \"maxHeight\", \"animation\"], outputs: [\"action\", \"close\"], exportAs: [\"kendoDialog\"] }, { type: SignatureComponent, selector: \"kendo-signature\", inputs: [\"readonly\", \"disabled\", \"width\", \"height\", \"value\", \"tabindex\", \"size\", \"rounded\", \"fillMode\", \"color\", \"backgroundColor\", \"strokeWidth\", \"smooth\", \"maximizable\", \"maximized\", \"popupScale\", \"exportScale\", \"parentLocalization\", \"hideLine\"], outputs: [\"valueChange\", \"open\", \"close\", \"focus\", \"blur\", \"minimize\"], exportAs: [\"kendoSignature\"] }], directives: [{ type: LocalizedSignatureMessagesDirective, selector: \"[kendoSignatureLocalizedMessages]\" }, { type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i5.ButtonDirective, selector: \"button[kendoButton], span[kendoButton]\", inputs: [\"toggleable\", \"togglable\", \"selected\", \"tabIndex\", \"icon\", \"iconClass\", \"imageUrl\", \"disabled\", \"size\", \"rounded\", \"fillMode\", \"themeColor\", \"role\", \"primary\", \"look\"], outputs: [\"selectedChange\", \"click\"], exportAs: [\"kendoButton\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SignatureComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoSignature',\n                    selector: 'kendo-signature',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        LocalizationService,\n                        { provide: L10N_PREFIX, useValue: 'kendo.signature' },\n                        { multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SignatureComponent) }\n                    ],\n                    template: `\n        <ng-container kendoSignatureLocalizedMessages\n            i18n-clear=\"kendo.signature.clear|The message for the Clear button.\"\n            clear=\"Clear\"\n            i18n-maximize=\"kendo.signature.maximize|The message for the Maximize button.\"\n            maximize=\"Maximize\"\n            i18n-minimize=\"kendo.signature.minimize|The message for the Minimize button.\"\n            minimize=\"Minimize\"\n            i18n-canvasLabel=\"kendo.signature.canvasLabel|The message for the Canvas element aria-label.\"\n            canvasLabel=\"Signature canvas\">\n        </ng-container>\n\n        <div class=\"k-signature-actions k-signature-actions-top\">\n            <button\n                *ngIf=\"showMaximize\"\n                #maximizeButton\n                kendoButton\n                class=\"k-signature-action k-signature-maximize\"\n                icon=\"hyperlink-open\"\n                fillMode=\"flat\"\n                [size]=\"size\"\n                (click)=\"onMaximize()\"\n                [attr.aria-label]=\"maximizeTitle\"\n                [title]=\"maximizeTitle\">\n            </button>\n            <button\n                *ngIf=\"showMinimize\"\n                kendoButton\n                class=\"k-signature-action k-signature-minimize k-rotate-180\"\n                icon=\"hyperlink-open\"\n                fillMode=\"flat\"\n                [size]=\"size\"\n                (click)=\"onMinimize()\"\n                [attr.aria-label]=\"minimizeTitle\"\n                [title]=\"minimizeTitle\">\n            </button>\n        </div>\n        <div\n            #canvas\n            class=\"k-signature-canvas\"\n            [attr.tabindex]=\"tabindex\"\n            role=\"img\"\n            [attr.aria-label]=\"canvasLabel\"\n        ></div>\n        <div\n            *ngIf=\"!hideLine\"\n            class=\"k-signature-line\"\n        ></div>\n        <div class=\"k-signature-actions k-signature-actions-bottom\">\n            <button\n                *ngIf=\"showClear\"\n                kendoButton\n                class=\"k-signature-action k-signature-clear\"\n                icon=\"close\"\n                fillMode=\"flat\"\n                [size]=\"size\"\n                [attr.aria-label]=\"clearTitle\"\n                [title]=\"clearTitle\"\n                (click)=\"onClear()\" >\n            </button>\n        </div>\n\n        <kendo-dialog\n            *ngIf=\"isOpen\"\n            autoFocusedElement=\".k-signature-action.k-signature-minimize\"\n            (click)=\"onDialogClick($event)\"\n            (keydown)=\"onDialogKeydown($event)\">\n            <kendo-signature\n                [readonly]=\"readonly\"\n                [disabled]=\"disabled\"\n                [size]=\"size\"\n                [rounded]=\"rounded\"\n                [fillMode]=\"fillMode\"\n                [color]=\"color\"\n                [backgroundColor]=\"backgroundColor\"\n                [strokeWidth]=\"strokeWidth\"\n                [smooth]=\"smooth\"\n                [value]=\"popupValue\"\n                (valueChange)=\"onDialogValueChange($event)\"\n                [hideLine]=\"hideLine\"\n                [class.k-signature-maximized]=\"true\"\n                [maximized]=\"true\"\n                (minimize)=\"onDialogClose()\"\n                [width]=\"popupWidth\"\n                [height]=\"popupHeight\"\n                [popupScale]=\"popupScale\"\n                [parentLocalization]=\"localization\">\n            </kendo-signature>\n        </kendo-dialog>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1.LocalizationService }]; }, propDecorators: { staticHostClasses: [{\n                type: HostBinding,\n                args: ['class.k-signature']\n            }, {\n                type: HostBinding,\n                args: ['class.k-input']\n            }], direction: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], maximizeButton: [{\n                type: ViewChild,\n                args: ['maximizeButton', { read: ElementRef }]\n            }], readonly: [{\n                type: HostBinding,\n                args: ['class.k-readonly']\n            }, {\n                type: Input\n            }], disabled: [{\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }, {\n                type: Input\n            }], width: [{\n                type: Input\n            }, {\n                type: HostBinding,\n                args: ['style.width.px']\n            }], height: [{\n                type: Input\n            }, {\n                type: HostBinding,\n                args: ['style.height.px']\n            }], value: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], rounded: [{\n                type: Input\n            }], fillMode: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], backgroundColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], smooth: [{\n                type: Input\n            }], maximizable: [{\n                type: Input\n            }], maximized: [{\n                type: Input\n            }], popupScale: [{\n                type: Input\n            }], exportScale: [{\n                type: Input\n            }], parentLocalization: [{\n                type: Input\n            }], hideLine: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], open: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }], onFocus: [{\n                type: Output,\n                args: ['focus']\n            }], onBlur: [{\n                type: Output,\n                args: ['blur']\n            }], minimize: [{\n                type: Output\n            }], canvas: [{\n                type: ViewChild,\n                args: ['canvas']\n            }] } });\n\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Signature component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Signature module\n * import { SignatureModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, SignatureModule], // import Signature module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass SignatureModule {\n}\nSignatureModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SignatureModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSignatureModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SignatureModule, declarations: [SignatureComponent,\n        SignatureCustomMessagesComponent,\n        LocalizedSignatureMessagesDirective], imports: [ButtonModule,\n        CommonModule,\n        DialogsModule], exports: [SignatureComponent,\n        SignatureCustomMessagesComponent] });\nSignatureModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SignatureModule, imports: [[\n            ButtonModule,\n            CommonModule,\n            DialogsModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SignatureModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        SignatureComponent,\n                        SignatureCustomMessagesComponent,\n                        LocalizedSignatureMessagesDirective\n                    ],\n                    exports: [\n                        SignatureComponent,\n                        SignatureCustomMessagesComponent\n                    ],\n                    imports: [\n                        ButtonModule,\n                        CommonModule,\n                        DialogsModule\n                    ]\n                }]\n        }] });\n\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Inputs components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Inputs module\n * import { InputsModule } from '@progress/kendo-angular-inputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, BrowserAnimationsModule, InputsModule], // import Inputs module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass InputsModule {\n}\nInputsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nInputsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputsModule, imports: [CommonModule], exports: [TextAreaModule,\n        TextBoxModule,\n        SliderModule,\n        RangeSliderModule,\n        SwitchModule,\n        NumericTextBoxModule,\n        MaskedTextBoxModule,\n        ColorPickerModule,\n        CheckBoxModule,\n        RadioButtonModule,\n        FormFieldModule,\n        SignatureModule] });\nInputsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputsModule, imports: [[CommonModule], TextAreaModule,\n        TextBoxModule,\n        SliderModule,\n        RangeSliderModule,\n        SwitchModule,\n        NumericTextBoxModule,\n        MaskedTextBoxModule,\n        ColorPickerModule,\n        CheckBoxModule,\n        RadioButtonModule,\n        FormFieldModule,\n        SignatureModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InputsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [\n                        TextAreaModule,\n                        TextBoxModule,\n                        SliderModule,\n                        RangeSliderModule,\n                        SwitchModule,\n                        NumericTextBoxModule,\n                        MaskedTextBoxModule,\n                        ColorPickerModule,\n                        CheckBoxModule,\n                        RadioButtonModule,\n                        FormFieldModule,\n                        SignatureModule\n                    ],\n                    imports: [CommonModule]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ActiveColorClickEvent, CheckBoxDirective, CheckBoxModule, ColorGradientComponent, ColorPaletteComponent, ColorPickerCancelEvent, ColorPickerCloseEvent, ColorPickerComponent, ColorPickerCustomMessagesComponent, ColorPickerModule, ColorPickerOpenEvent, ErrorComponent, FlatColorPickerComponent, FormFieldComponent, FormFieldModule, HintComponent, InputSeparatorComponent, InputsModule, LabelTemplateDirective, LocalizedColorPickerMessagesDirective, LocalizedNumericTextBoxMessagesDirective, LocalizedRangeSliderMessagesDirective, LocalizedSignatureMessagesDirective, LocalizedSliderMessagesDirective, LocalizedSwitchMessagesDirective, LocalizedTextBoxMessagesDirective, MaskedTextBoxComponent, MaskedTextBoxModule, NumericLabelDirective, NumericTextBoxComponent, NumericTextBoxCustomMessagesComponent, NumericTextBoxModule, RadioButtonDirective, RadioButtonModule, RangeSliderComponent, RangeSliderCustomMessagesComponent, RangeSliderModule, SharedModule, SignatureCloseEvent, SignatureComponent, SignatureCustomMessagesComponent, SignatureMessages, SignatureModule, SignatureOpenEvent, SliderComponent, SliderCustomMessagesComponent, SliderModule, SliderTicksComponent, SwitchComponent, SwitchCustomMessagesComponent, SwitchModule, TextAreaComponent, TextAreaDirective, TextAreaModule, TextAreaSuffixComponent, TextBoxComponent, TextBoxCustomMessagesComponent, TextBoxDirective, TextBoxModule, TextBoxPrefixTemplateDirective, TextBoxSuffixTemplateDirective };\n\n"]},"metadata":{},"sourceType":"module"}