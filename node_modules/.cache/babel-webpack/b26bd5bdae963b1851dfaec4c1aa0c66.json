{"ast":null,"code":"/**-----------------------------------------------------------------------------------------\n* Copyright © 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { EventEmitter, TemplateRef, Component, Input, Output, HostBinding, InjectionToken, Injectable, Inject, Optional, Directive, forwardRef, ContentChildren, ViewChildren, ViewChild, isDevMode, Renderer2, Host, HostListener, ContentChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/animations';\nimport { style, animate, keyframes, trigger, state, transition } from '@angular/animations';\nimport { of, Subscription, Subject, merge } from 'rxjs';\nimport { delay, takeUntil, take, filter, map, share, tap, switchMap } from 'rxjs/operators';\nimport * as i6 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@progress/kendo-angular-l10n';\nimport { LocalizationService, L10N_PREFIX, RTL, ComponentMessages } from '@progress/kendo-angular-l10n';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport * as i1$1 from '@progress/kendo-angular-common';\nimport { DraggableDirective, isChanged, isDocumentAvailable, DraggableModule } from '@progress/kendo-angular-common';\nimport { offset, scrollPosition, positionWithScroll, getDocumentElement, getWindowViewPort } from '@progress/kendo-popup-common';\nimport { Button } from '@progress/kendo-angular-buttons';\n/**\n * @hidden\n */\n\nfunction DialogActionsComponent_ng_content_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 0, [\"*ngIf\", \"!actions\"]);\n  }\n}\n\nfunction DialogActionsComponent_ng_container_1_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function DialogActionsComponent_ng_container_1_button_1_Template_button_click_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const action_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.onButtonClick(action_r5, $event);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const action_r5 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r4.buttonClass(action_r5));\n    i0.ɵɵattribute(\"aria-label\", action_r5.text);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", action_r5.text, \" \");\n  }\n}\n\nfunction DialogActionsComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, DialogActionsComponent_ng_container_1_button_1_Template, 2, 3, \"button\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.actionsArray);\n  }\n}\n\nfunction DialogActionsComponent_ng_template_2_Template(rf, ctx) {}\n\nconst _c0 = [\"*\"];\nconst _c3 = [\"dialog\"];\n\nfunction DialogComponent_kendo_dialog_titlebar_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"kendo-dialog-titlebar\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"closeTitle\", ctx_r1.closeTitle)(\"id\", ctx_r1.titleId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.title);\n  }\n}\n\nfunction DialogComponent_ng_content_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 0, [\"*ngIf\", \"!title\"]);\n  }\n}\n\nfunction DialogComponent_ng_content_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1, [\"*ngIf\", \"!contentTemplate\"]);\n  }\n}\n\nfunction DialogComponent_8_ng_template_0_Template(rf, ctx) {}\n\nfunction DialogComponent_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DialogComponent_8_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.contentTemplate);\n  }\n}\n\nfunction DialogComponent_ng_content_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2, [\"*ngIf\", \"!actions\"]);\n  }\n}\n\nfunction DialogComponent_kendo_dialog_actions_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-dialog-actions\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"actions\", ctx_r6.actions)(\"layout\", ctx_r6.actionsLayout);\n  }\n}\n\nconst _c6 = [[[\"kendo-dialog-titlebar\"]], \"*\", [[\"kendo-dialog-actions\"]]];\nconst _c7 = [\"kendo-dialog-titlebar\", \"*\", \"kendo-dialog-actions\"];\n\nfunction WindowTitleBarComponent_ng_content_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 0, [\"*ngIf\", \"!template\"]);\n  }\n}\n\nfunction WindowTitleBarComponent_1_ng_template_0_Template(rf, ctx) {}\n\nconst _c8 = function (a0) {\n  return {\n    \"$implicit\": a0\n  };\n};\n\nfunction WindowTitleBarComponent_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, WindowTitleBarComponent_1_ng_template_0_Template, 0, 0, \"ng-template\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c8, ctx_r1.service));\n  }\n}\n\nfunction WindowComponent_kendo_window_titlebar_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"kendo-window-titlebar\", 5);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 7);\n    i0.ɵɵelement(4, \"button\", 8);\n    i0.ɵɵelement(5, \"button\", 9);\n    i0.ɵɵelement(6, \"button\", 10);\n    i0.ɵɵelement(7, \"button\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"template\", ctx_r0.titleBarTemplate)(\"id\", ctx_r0.titleId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"title\", ctx_r0.minimizeButtonTitle)(\"aria-label\", ctx_r0.minimizeButtonTitle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"title\", ctx_r0.maximizeButtonTitle)(\"aria-label\", ctx_r0.maximizeButtonTitle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"title\", ctx_r0.restoreButtonTitle)(\"aria-label\", ctx_r0.restoreButtonTitle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"title\", ctx_r0.closeButtonTitle)(\"aria-label\", ctx_r0.closeButtonTitle);\n  }\n}\n\nfunction WindowComponent_ng_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 0, [\"*ngIf\", \"!showDefaultTitleBar\"]);\n  }\n}\n\nfunction WindowComponent_div_4_ng_content_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1, [\"*ngIf\", \"!contentTemplate\"]);\n  }\n}\n\nfunction WindowComponent_div_4_2_ng_template_0_Template(rf, ctx) {}\n\nfunction WindowComponent_div_4_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, WindowComponent_div_4_2_ng_template_0_Template, 0, 0, \"ng-template\", 13);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.contentTemplate);\n  }\n}\n\nfunction WindowComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, WindowComponent_div_4_ng_content_1_Template, 1, 0, \"ng-content\", 2);\n    i0.ɵɵtemplate(2, WindowComponent_div_4_2_Template, 1, 1, undefined, 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", ctx_r2.state === \"minimized\" && ctx_r2.keepContent);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.contentTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.contentTemplate);\n  }\n}\n\nfunction WindowComponent_ng_template_5_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 15);\n  }\n\n  if (rf & 2) {\n    const dir_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"direction\", dir_r8);\n  }\n}\n\nfunction WindowComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, WindowComponent_ng_template_5_div_0_Template, 1, 1, \"div\", 14);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.resizeDirections);\n  }\n}\n\nconst _c17 = [[[\"kendo-window-titlebar\"]], \"*\"];\nconst _c18 = [\"kendo-window-titlebar\", \"*\"];\n\nconst isPresent = value => value !== null && value !== undefined;\n/**\n * @hidden\n */\n\n\nconst isTruthy = value => !!value;\n\nconst toClassList = classNames => String(classNames).trim().split(' ');\n\nconst focusableRegex = /^(?:a|input|select|textarea|button|object)$/i;\n/**\n * @hidden\n */\n\nvar Keys;\n\n(function (Keys) {\n  Keys[Keys[\"esc\"] = 27] = \"esc\";\n  Keys[Keys[\"tab\"] = 9] = \"tab\";\n  Keys[Keys[\"enter\"] = 13] = \"enter\";\n  Keys[Keys[\"space\"] = 32] = \"space\";\n  Keys[Keys[\"ctrl\"] = 17] = \"ctrl\";\n  Keys[Keys[\"shift\"] = 16] = \"shift\";\n  Keys[Keys[\"left\"] = 37] = \"left\";\n  Keys[Keys[\"up\"] = 38] = \"up\";\n  Keys[Keys[\"right\"] = 39] = \"right\";\n  Keys[Keys[\"down\"] = 40] = \"down\";\n})(Keys || (Keys = {}));\n/**\n * @hidden\n */\n\n\nconst DIALOG_ELEMENTS_HANDLING_ESC_KEY = 'k-dialog-wrapper k-dialog-buttongroup k-dialog-action';\n/**\n * @hidden\n */\n\nconst DIALOG_ELEMENTS_HANDLING_ARROWS = 'k-dialog-buttongroup';\n/**\n * @hidden\n */\n\nconst WINDOW_CLASSES = 'k-window';\n/**\n * @hidden\n */\n\nconst hasClasses = (element, classNames) => {\n  const namesList = toClassList(classNames);\n  return Boolean(toClassList(element.className).find(className => namesList.indexOf(className) >= 0));\n};\n/**\n * @hidden\n */\n\n\nconst isVisible = element => {\n  const rect = element.getBoundingClientRect();\n  return !!(rect.width && rect.height) && window.getComputedStyle(element).visibility !== 'hidden';\n};\n/**\n * @hidden\n */\n\n\nconst isFocusable = (element, checkVisibility = true) => {\n  if (element.tagName) {\n    const tagName = element.tagName.toLowerCase();\n    const tabIndex = element.getAttribute('tabIndex');\n    const validTabIndex = tabIndex !== null && !isNaN(tabIndex) && tabIndex > -1;\n    let focusable = false;\n\n    if (focusableRegex.test(tagName)) {\n      focusable = !element.disabled;\n    } else {\n      focusable = validTabIndex;\n    }\n\n    return focusable && (!checkVisibility || isVisible(element));\n  }\n\n  return false;\n};\n/**\n * @hidden\n */\n\n\nconst setHTMLAttributes = (attributes, renderer, element) => {\n  for (const attribute in attributes) {\n    if (attribute) {\n      renderer.setAttribute(element, attribute, attributes[attribute]);\n    }\n  }\n};\n/**\n * Receives CSS class declarations either as an object, string or array and returns an array of the class names.\n *\n * @hidden\n */\n\n\nconst parseCSSClassNames = value => {\n  if (isObject(value)) {\n    return parseObjectClassNames(value);\n  }\n\n  if (isString(value)) {\n    return parseStringClassNames(value);\n  }\n\n  if (Array.isArray(value)) {\n    return parseArrayClassNames(value);\n  }\n};\n\nconst parseObjectClassNames = value => {\n  const classes = [];\n  Object.keys(value).forEach(className => {\n    const currentClassName = splitStringToArray(className);\n\n    if (value[className] && currentClassName[0]) {\n      classes.push(...currentClassName);\n    }\n  });\n  return classes;\n};\n\nconst parseStringClassNames = value => {\n  const classes = [];\n  const classesArray = splitStringToArray(value);\n  classesArray.forEach(className => {\n    classes.push(className);\n  });\n  return classes;\n};\n\nconst parseArrayClassNames = value => {\n  const classes = [];\n  value.forEach(className => {\n    const current = splitStringToArray(className);\n\n    if (current[0]) {\n      classes.push(...current);\n    }\n  });\n  return classes;\n};\n/**\n * @hidden\n */\n\n\nconst focusableSelector = ['a[href]', 'area[href]', 'input:not([disabled])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'iframe', 'object', 'embed', '*[tabindex]', '*[contenteditable]'].join(',');\n/**\n * @hidden\n */\n\nconst preventDefault = ({\n  originalEvent: event\n}) => {\n  event.stopPropagation();\n  event.preventDefault();\n};\n/**\n * @hidden\n */\n\n\nconst isWindowAvailable = () => {\n  return typeof window !== 'undefined';\n};\n/**\n * @hidden\n */\n\n\nconst preventOnDblClick = release => mouseDown => of(mouseDown).pipe(delay(150), takeUntil(release));\n/**\n * @hidden\n */\n\n\nconst RESIZE_DIRECTIONS = ['n', 'e', 's', 'w', 'se', 'sw', 'ne', 'nw'];\n/**\n * @hidden\n */\n\nconst OFFSET_STYLES = ['top', 'left', 'width', 'height'];\n/**\n * @hidden\n */\n\nconst isString = value => value instanceof String || typeof value === 'string';\n/**\n * @hidden\n */\n\n\nconst isObject = value => isPresent(value) && !Array.isArray(value) && typeof value === 'object';\n/**\n * @hidden\n */\n\n\nconst isNumber = value => typeof value === 'number' && isFinite(value);\n/**\n * @hidden\n */\n\n\nconst createValueWithUnit = value => value + (isNumber(value) ? 'px' : '');\n/**\n * @hidden\n */\n\n\nconst splitStringToArray = value => value.trim().replace(/\\s+/g, \" \").split(' ');\n/**\n * @hidden\n */\n\n\nconst findPrimaryButton = buttons => {\n  for (let i = buttons.length - 1; i >= 0; i--) {\n    const classList = buttons[i].classList;\n\n    for (let j = 0; j < classList.length; j++) {\n      if (classList[j].endsWith('-primary')) {\n        return buttons[i];\n      }\n    }\n  }\n};\n/**\n * Specifies the action buttons of the Dialog\n * ([see example]({% slug actionbuttons_dialog %})).\n */\n\n\nclass DialogActionsComponent {\n  constructor(el) {\n    this.el = el;\n    /**\n     * Specifies the possible layout of the action buttons.\n     */\n\n    this.layout = 'stretched';\n    /**\n     * Fires when the user clicks an action button.\n     */\n\n    this.action = new EventEmitter();\n    this.buttonGroupClassName = true;\n  }\n  /**\n   * Allows the declarative specification of the actions.\n   */\n\n\n  set actions(value) {\n    if (value instanceof TemplateRef) {\n      this.actionsTemplate = value;\n    } else if (Array.isArray(value)) {\n      this.actionsArray = value;\n    } else {\n      throw new Error('\"actions\" must be either TemplateRef or DialogAction[] instance.');\n    }\n  }\n\n  get className() {\n    return this.layout === 'stretched';\n  }\n  /**\n   * @hidden\n   */\n\n\n  onButtonClick(action, _e) {\n    this.action.emit(action);\n  }\n  /**\n   * @hidden\n   */\n\n\n  buttonClass(action) {\n    let classes = ['k-button k-button-md k-rounded-md'];\n    const fillMode = action.fillMode ? action.fillMode : 'solid';\n    const themeColor = action.themeColor ? action.themeColor : 'base';\n    const cssClasses = action.cssClass ? parseCSSClassNames(action.cssClass) : [];\n    classes.push(`k-button-${fillMode} k-button-${fillMode}-${themeColor}`);\n\n    if (cssClasses.length > 0) {\n      classes = classes.concat(cssClasses);\n    }\n\n    return classes.join(' ');\n  }\n\n}\n\nDialogActionsComponent.ɵfac = function DialogActionsComponent_Factory(t) {\n  return new (t || DialogActionsComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nDialogActionsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DialogActionsComponent,\n  selectors: [[\"kendo-dialog-actions\"]],\n  hostVars: 6,\n  hostBindings: function DialogActionsComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-dialog-buttongroup\", ctx.buttonGroupClassName)(\"k-actions\", ctx.buttonGroupClassName)(\"k-actions-stretched\", ctx.className);\n    }\n  },\n  inputs: {\n    actions: \"actions\",\n    layout: \"layout\"\n  },\n  outputs: {\n    action: \"action\"\n  },\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 4,\n  consts: [[4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [3, \"ngTemplateOutlet\"], [\"actionTemplate\", \"\"], [\"type\", \"button\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"ngClass\", \"click\"]],\n  template: function DialogActionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, DialogActionsComponent_ng_content_0_Template, 1, 0, \"ng-content\", 0);\n      i0.ɵɵtemplate(1, DialogActionsComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n      i0.ɵɵtemplate(2, DialogActionsComponent_ng_template_2_Template, 0, 0, \"ng-template\", 2, 3, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(3);\n\n      i0.ɵɵproperty(\"ngIf\", !ctx.actions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.actionsArray)(\"ngIfElse\", _r2);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.actionsTemplate);\n    }\n  },\n  directives: [i6.NgIf, i6.NgTemplateOutlet, i6.NgForOf, i6.NgClass],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DialogActionsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-dialog-actions',\n      template: `\n        <ng-content *ngIf=\"!actions\"></ng-content>\n        <ng-container *ngIf=\"actionsArray; else actionTemplate\">\n            <button\n                type=\"button\"\n                *ngFor=\"let action of actionsArray\"\n                [ngClass]=\"buttonClass(action)\"\n                (click)=\"onButtonClick(action, $event)\"\n                [attr.aria-label]=\"action.text\"\n            >\n                {{ action.text }}\n            </button>\n        </ng-container>\n        <ng-template #actionTemplate [ngTemplateOutlet]=\"actionsTemplate\"></ng-template>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    actions: [{\n      type: Input\n    }],\n    layout: [{\n      type: Input\n    }],\n    action: [{\n      type: Output\n    }],\n    buttonGroupClassName: [{\n      type: HostBinding,\n      args: ['class.k-dialog-buttongroup']\n    }, {\n      type: HostBinding,\n      args: ['class.k-actions']\n    }],\n    className: [{\n      type: HostBinding,\n      args: ['class.k-actions-stretched']\n    }]\n  });\n})();\n\nclass PreventableEvent {\n  /**\n   * @hidden\n   */\n  constructor() {\n    this.prevented = false;\n  }\n  /**\n   * Prevents the default action for a specified event.\n   * In this way, the source component suppresses the built-in behavior that follows the event.\n   */\n\n\n  preventDefault() {\n    this.prevented = true;\n  }\n  /**\n   * If the event is prevented by any of its subscribers, returns `true`.\n   *\n   * @returns `true` if the default action was prevented. Otherwise, returns `false`.\n   */\n\n\n  isDefaultPrevented() {\n    return this.prevented;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nconst DIALOG_LOCALIZATION_SERVICE = new InjectionToken('Dialog LocalizationService');\n/**\n * @hidden\n */\n\nclass TitleBarLocalizationService extends LocalizationService {\n  constructor(prefix, messageService, rtl, dialogLocalization) {\n    super(prefix, messageService, rtl);\n    this.dialogLocalization = dialogLocalization;\n  }\n\n  get(shortKey) {\n    if (this.dialogLocalization) {\n      return this.dialogLocalization.get(shortKey);\n    }\n\n    return super.get(shortKey);\n  }\n\n}\n\nTitleBarLocalizationService.ɵfac = function TitleBarLocalizationService_Factory(t) {\n  return new (t || TitleBarLocalizationService)(i0.ɵɵinject(L10N_PREFIX), i0.ɵɵinject(i1.MessageService, 8), i0.ɵɵinject(RTL, 8), i0.ɵɵinject(DIALOG_LOCALIZATION_SERVICE, 8));\n};\n\nTitleBarLocalizationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TitleBarLocalizationService,\n  factory: TitleBarLocalizationService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TitleBarLocalizationService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [L10N_PREFIX]\n      }]\n    }, {\n      type: i1.MessageService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [RTL]\n      }]\n    }, {\n      type: i1.LocalizationService,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DIALOG_LOCALIZATION_SERVICE]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass Messages extends ComponentMessages {}\n\nMessages.ɵfac = /* @__PURE__ */function () {\n  let ɵMessages_BaseFactory;\n  return function Messages_Factory(t) {\n    return (ɵMessages_BaseFactory || (ɵMessages_BaseFactory = i0.ɵɵgetInheritedFactory(Messages)))(t || Messages);\n  };\n}();\n\nMessages.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: Messages,\n  selectors: [[\"kendo-dialog-messages-base\"]],\n  inputs: {\n    closeTitle: \"closeTitle\",\n    restoreTitle: \"restoreTitle\",\n    maximizeTitle: \"maximizeTitle\",\n    minimizeTitle: \"minimizeTitle\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Messages, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: 'kendo-dialog-messages-base'\n    }]\n  }], null, {\n    closeTitle: [{\n      type: Input\n    }],\n    restoreTitle: [{\n      type: Input\n    }],\n    maximizeTitle: [{\n      type: Input\n    }],\n    minimizeTitle: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass LocalizedMessagesDirective extends Messages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n}\n\nLocalizedMessagesDirective.ɵfac = function LocalizedMessagesDirective_Factory(t) {\n  return new (t || LocalizedMessagesDirective)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nLocalizedMessagesDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LocalizedMessagesDirective,\n  selectors: [[\"\", \"kendoDialogLocalizedMessages\", \"\"], [\"\", \"kendoWindowLocalizedMessages\", \"\"], [\"\", \"kendoDialogTitleBarLocalizedMessages\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: Messages,\n    useExisting: forwardRef(() => LocalizedMessagesDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LocalizedMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: Messages,\n        useExisting: forwardRef(() => LocalizedMessagesDirective)\n      }],\n      selector: `\n    [kendoDialogLocalizedMessages],\n    [kendoWindowLocalizedMessages],\n    [kendoDialogTitleBarLocalizedMessages]\n  `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the [Kendo UI DialogTitleBar component for Angular]({% slug api_dialog_dialogtitlebarcomponent %}).\n *\n * It is used as part of the Dialog content when the component is created dynamically by using an [Angular service]({% slug service_dialog %}).\n */\n\n\nclass DialogTitleBarComponent {\n  constructor(zone, hostElement, localizationService) {\n    this.zone = zone;\n    this.hostElement = hostElement;\n    this.localizationService = localizationService;\n    /**\n     * Fires when the close button of the title-bar is clicked.\n     */\n\n    this.close = new EventEmitter();\n  }\n\n  get className() {\n    return true;\n  }\n\n  get closeButtonTitle() {\n    return this.closeTitle || this.localizationService.get('closeTitle');\n  }\n\n  ngAfterViewInit() {\n    this.zone.onStable.pipe(take(1)).subscribe(() => {\n      const element = this.hostElement.nativeElement.querySelector('.k-dialog-title');\n      element.setAttribute('id', this.id);\n    });\n  }\n  /**\n   * @hidden\n   */\n\n\n  onCloseClick(e) {\n    e.preventDefault();\n    const eventArgs = new PreventableEvent();\n    this.close.emit(eventArgs);\n  }\n\n}\n\nDialogTitleBarComponent.ɵfac = function DialogTitleBarComponent_Factory(t) {\n  return new (t || DialogTitleBarComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.LocalizationService, 8));\n};\n\nDialogTitleBarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DialogTitleBarComponent,\n  selectors: [[\"kendo-dialog-titlebar\"]],\n  hostVars: 4,\n  hostBindings: function DialogTitleBarComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-window-titlebar\", ctx.className)(\"k-dialog-titlebar\", ctx.className);\n    }\n  },\n  inputs: {\n    id: \"id\",\n    closeTitle: \"closeTitle\"\n  },\n  outputs: {\n    close: \"close\"\n  },\n  features: [i0.ɵɵProvidersFeature([TitleBarLocalizationService, {\n    provide: LocalizationService,\n    useExisting: TitleBarLocalizationService\n  }, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.dialog'\n  }])],\n  ngContentSelectors: _c0,\n  decls: 6,\n  vars: 2,\n  consts: function () {\n    let i18n_1;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the close button\n       * @meaning kendo.dialog.closeTitle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DIALOG_FESM2015_KENDO_ANGULAR_DIALOG_JS_2 = goog.getMsg(\"Close\");\n      i18n_1 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DIALOG_FESM2015_KENDO_ANGULAR_DIALOG_JS_2;\n    } else {\n      i18n_1 = $localize`:kendo.dialog.closeTitle|The title of the close button:Close`;\n    }\n\n    return [[\"kendoDialogTitleBarLocalizedMessages\", \"\", \"closeTitle\", i18n_1], [1, \"k-window-title\", \"k-dialog-title\"], [1, \"k-window-actions\", \"k-dialog-actions\"], [\"role\", \"button\", 1, \"k-button\", \"k-button-md\", \"k-rounded-md\", \"k-button-flat\", \"k-button-flat-base\", \"k-icon-button\", \"k-window-action\", \"k-dialog-action\", 3, \"click\"], [1, \"k-button-icon\", \"k-icon\", \"k-i-x\"]];\n  },\n  template: function DialogTitleBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementContainerStart(0, 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelementStart(4, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function DialogTitleBarComponent_Template_button_click_4_listener($event) {\n        return ctx.onCloseClick($event);\n      });\n      i0.ɵɵelement(5, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementContainerEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵattribute(\"title\", ctx.closeButtonTitle)(\"aria-label\", ctx.closeButtonTitle);\n    }\n  },\n  directives: [LocalizedMessagesDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DialogTitleBarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-dialog-titlebar',\n      providers: [TitleBarLocalizationService, {\n        provide: LocalizationService,\n        useExisting: TitleBarLocalizationService\n      }, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.dialog'\n      }],\n      template: `\n         <ng-container\n            kendoDialogTitleBarLocalizedMessages\n            i18n-closeTitle=\"kendo.dialog.closeTitle|The title of the close button\"\n            closeTitle=\"Close\"\n        >\n            <div class=\"k-window-title k-dialog-title\">\n                <ng-content></ng-content>\n            </div>\n\n            <div class=\"k-window-actions k-dialog-actions\">\n                <button\n                    role=\"button\"\n                    [attr.title]=\"closeButtonTitle\"\n                    [attr.aria-label]=\"closeButtonTitle\"\n                    class=\"k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-window-action k-dialog-action\"\n                    (click)=\"onCloseClick($event)\"\n                >\n                    <span class=\"k-button-icon k-icon k-i-x\"></span>\n                </button>\n            </div>\n        </ng-container>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i1.LocalizationService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    close: [{\n      type: Output\n    }],\n    id: [{\n      type: Input\n    }],\n    closeTitle: [{\n      type: Input\n    }],\n    className: [{\n      type: HostBinding,\n      args: ['class.k-window-titlebar']\n    }, {\n      type: HostBinding,\n      args: ['class.k-dialog-titlebar']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nconst packageMetadata = {\n  name: '@progress/kendo-angular-dialog',\n  productName: 'Kendo UI for Angular',\n  productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n  publishDate: 1668698060,\n  version: '',\n  licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/?utm_medium=product&utm_source=kendoangular&utm_campaign=kendo-ui-angular-purchase-license-keys-warning'\n};\n/**\n * Indicates that the **Close** button is clicked. Used when the results from\n * the Dialogs that are opened through `DialogService` are filtered\n * ([see example]({% slug api_dialog_dialogservice %}#toc-open)).\n */\n\nclass DialogCloseResult {}\n/**\n * @hidden\n */\n\n\nfunction animations(duration, direction, animationType) {\n  switch (animationType) {\n    case 'slide':\n      const translate = direction === 'left' || direction === 'right' ? 'translateX' : 'translateY';\n      const start = direction === 'right' || direction === 'down' ? -100 : 100;\n      const end = 0;\n      return [style({\n        transform: `${translate}(${start}%)`\n      }), animate(`${duration}ms ease-in`, style({\n        transform: `${translate}(${end}%)`\n      }))];\n\n    case 'expand':\n      const scale = direction === 'up' || direction === 'down' ? 'scaleY' : 'scaleX';\n      const startScale = 0;\n      const endScale = 1;\n      let origin;\n\n      if (direction === 'down') {\n        origin = 'top';\n      } else if (direction === 'left') {\n        origin = 'right';\n      } else if (direction === 'right') {\n        origin = 'left';\n      } else {\n        origin = 'bottom';\n      }\n\n      return [style({\n        transform: `${scale}(${startScale})`,\n        transformOrigin: origin\n      }), animate(`${duration}ms ease-in`, style({\n        transform: `${scale}(${endScale})`\n      }))];\n\n    case 'zoom':\n      const startZoom = 0;\n      const endZoom = 1;\n      return [animate(duration, keyframes([style({\n        transform: `scale(${startZoom})`\n      }), style({\n        transform: `scale(${endZoom})`\n      })]))];\n\n    case 'fade':\n      const startFade = 0;\n      const endFade = 1;\n      return [animate(duration, keyframes([style({\n        opacity: `${startFade}`\n      }), style({\n        opacity: `${endFade}`\n      })]))];\n\n    case 'translate':\n      return [style({\n        transform: 'translate(0, -10%)'\n      }), animate(`${duration}ms cubic-bezier(.2, 1, .2, 1)`)];\n\n    default:\n      return [style({\n        transform: 'translate(0, -10%)'\n      }), animate(`${duration}ms cubic-bezier(.2, 1, .2, 1)`)];\n  }\n}\n/**\n * @hidden\n */\n\n\nconst createPlayer = (builder, animation, animatedElement) => {\n  const factory = builder.build(animation);\n  let player = factory.create(animatedElement);\n  player.onDone(() => {\n    if (player) {\n      player.destroy();\n      player = null;\n    }\n  });\n  return player;\n};\n/**\n * @hidden\n */\n\n\nconst animateContent = (animation, defAnimationConfig, animatedElement, builder) => {\n  let animationConfig = defAnimationConfig;\n\n  if (typeof animation !== 'boolean') {\n    animationConfig = animation;\n    animationConfig.duration = animationConfig.duration ? animationConfig.duration : defAnimationConfig.duration;\n  }\n\n  const animationSpecs = animations(animationConfig.duration, animationConfig.direction, animationConfig.type);\n  const player = createPlayer(builder, animationSpecs, animatedElement);\n  player.play();\n};\n\nconst DEFAULT_ANIMATION_CONFIG = {\n  duration: 300,\n  type: 'translate'\n};\n/**\n * Represents the [Kendo UI Dialog component for Angular]({% slug overview_dialog_dialogs %}).\n */\n\nclass DialogComponent {\n  constructor(wrapper, renderer, localization, cdr, ngZone, builder) {\n    this.wrapper = wrapper;\n    this.renderer = renderer;\n    this.cdr = cdr;\n    this.ngZone = ngZone;\n    this.builder = builder;\n    /**\n     * Specifies the layout of the action buttons in the Dialog.\n     * This option is only applicable if the action buttons are specified through the `actions` options.\n     *\n     * @default 'stretched'\n     */\n\n    this.actionsLayout = 'stretched';\n    /**\n     * Configures the Dialog opening animation ([see example]({% slug animations_dialog %})).\n     * By default the animation type is set to `translate` and its duration is `300ms`.\n     *\n     * @default true\n     */\n\n    this.animation = true;\n    /**\n     * @hidden\n     */\n\n    this.titleId = null;\n    /**\n     * @hidden\n     */\n\n    this.contentId = null;\n    /**\n     * Fires when the user clicks an action button of the Dialog.\n     * The event is fired only when the action buttons are specified through the `actions` options.\n     */\n\n    this.action = new EventEmitter();\n    /**\n     * Fires when the user clicks the **Close** button of the Dialog or the **ESC** key.\n     */\n\n    this.close = new EventEmitter();\n    this.tabIndex = 0;\n    this.subscriptions = [];\n    this.domSubs = new Subscription();\n    validatePackage(packageMetadata);\n    this.direction = localization.rtl ? 'rtl' : 'ltr';\n    this.subscriptions.push(localization.changes.subscribe(({\n      rtl\n    }) => this.direction = rtl ? 'rtl' : 'ltr'));\n    this.titleId = this.generateTitleId();\n    this.contentId = this.generateContentId();\n  }\n  /**\n   * @hidden\n   */\n\n\n  set htmlAttributes(attributes) {\n    setHTMLAttributes(attributes, this.renderer, this.wrapper.nativeElement);\n    const el = this.wrapper.nativeElement;\n    const dir = el.getAttribute('dir');\n    const tIndex = el.getAttribute('tabindex');\n\n    if (this.direction !== dir && dir) {\n      this.direction = dir;\n    }\n\n    if (this.tabIndex !== tIndex && tIndex) {\n      this.tabIndex = tIndex;\n    }\n\n    this._htmlAttributes = attributes;\n  }\n\n  get htmlAttributes() {\n    return this._htmlAttributes;\n  }\n  /**\n   * @hidden\n   */\n\n\n  set cssClass(classes) {\n    this.setServiceClasses(this._cssClass, classes);\n    this._cssClass = classes;\n  }\n\n  get cssClass() {\n    return this._cssClass;\n  }\n\n  get dir() {\n    return this.direction;\n  }\n\n  ngAfterContentInit() {\n    this.bubble('close', this.titlebarContent.first);\n    this.renderer.setAttribute(this.wrapper.nativeElement.querySelector('.k-dialog'), 'aria-describedby', this.contentId);\n\n    if (this.titlebarContent.first) {\n      this.titlebarContent.first.id = this.titleId;\n    } else {\n      this.subscriptions.push(this.titlebarContent.changes.subscribe(() => {\n        if (isPresent(this.titlebarContent.first)) {\n          this.titlebarContent.first.id = this.titleId;\n          this.ngZone.onStable.pipe(take(1)).subscribe(() => {\n            this.bubble('close', this.titlebarContent.first);\n            this.renderer.setAttribute(this.wrapper.nativeElement.querySelector('.k-dialog'), 'aria-labelledby', this.titleId);\n          });\n        }\n      }));\n    }\n  }\n\n  ngAfterViewInit() {\n    this.handleInitialFocus();\n    this.bubble('close', this.titlebarView.first);\n    this.bubble('action', this.actionsView);\n\n    if (this.titlebarView.first || this.titlebarContent.first) {\n      //Needed for Dialogs created via service\n      this.renderer.setAttribute(this.wrapper.nativeElement.querySelector('.k-dialog'), 'aria-labelledby', this.titleId);\n    } else {\n      this.subscriptions.push(this.titlebarView.changes.subscribe(() => {\n        if (isPresent(this.titlebarView.first)) {\n          this.titlebarView.first.id = this.titleId;\n          this.ngZone.onStable.pipe(take(1)).subscribe(() => {\n            this.bubble('close', this.titlebarView.first);\n            this.renderer.setAttribute(this.wrapper.nativeElement.querySelector('.k-dialog'), 'aria-labelledby', this.titleId);\n          });\n        }\n      }));\n    }\n\n    this.initDomEvents();\n  }\n\n  ngOnInit() {\n    if (this.animation) {\n      animateContent(this.animation, DEFAULT_ANIMATION_CONFIG, this.dialog.nativeElement, this.builder);\n    }\n\n    this.renderer.removeAttribute(this.wrapper.nativeElement, 'title');\n    this.cdr.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n    this.subscriptions = [];\n\n    if (this.domSubs) {\n      this.domSubs.unsubscribe();\n    }\n  }\n  /**\n   * Focuses the wrapper of the Dialog component.\n   */\n\n\n  focus() {\n    const wrapper = this.wrapper.nativeElement;\n\n    if (isPresent(wrapper)) {\n      wrapper.focus();\n    }\n  }\n\n  initDomEvents() {\n    if (!this.wrapper) {\n      return;\n    }\n\n    this.ngZone.runOutsideAngular(() => {\n      this.domSubs.add(this.renderer.listen(this.wrapper.nativeElement, 'keydown', ev => {\n        this.onKeyDown(ev);\n      }));\n    });\n  }\n\n  onKeyDown(event) {\n    const target = event.target;\n    const parent = target.parentElement;\n\n    if (hasClasses(target, DIALOG_ELEMENTS_HANDLING_ESC_KEY) || hasClasses(parent, DIALOG_ELEMENTS_HANDLING_ESC_KEY)) {\n      if (event.keyCode === Keys.esc) {\n        this.ngZone.run(() => {\n          this.close.emit(new DialogCloseResult());\n        });\n      }\n    }\n\n    if (hasClasses(target, 'k-button') && hasClasses(parent, DIALOG_ELEMENTS_HANDLING_ARROWS) && (event.keyCode === Keys.left || event.keyCode === Keys.right)) {\n      this.ngZone.run(() => {\n        this.handleActionButtonFocus(parent, event.keyCode);\n      });\n    }\n\n    if (event.keyCode === Keys.tab) {\n      this.ngZone.run(() => {\n        this.keepFocusWithinComponent(target, event);\n      });\n    }\n  }\n\n  setServiceClasses(prevValue, value) {\n    const el = this.wrapper.nativeElement;\n\n    if (prevValue) {\n      parseCSSClassNames(prevValue).forEach(className => {\n        this.renderer.removeClass(el, className);\n      });\n    }\n\n    if (value) {\n      parseCSSClassNames(value).forEach(className => {\n        this.renderer.addClass(el, className);\n      });\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleInitialFocus() {\n    const wrapper = this.wrapper.nativeElement;\n    const primaryButton = this.findPrimary(wrapper);\n\n    if (this.autoFocusedElement) {\n      const initiallyFocusedElement = wrapper.querySelector(this.autoFocusedElement);\n\n      if (initiallyFocusedElement) {\n        initiallyFocusedElement.focus();\n      }\n    } else if (this.shouldFocusPrimary(primaryButton)) {\n      primaryButton.focus();\n    } else {\n      wrapper.focus();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  findPrimary(wrapper) {\n    const actionBtns = wrapper.querySelectorAll('.k-actions .k-button');\n    return findPrimaryButton(actionBtns);\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleActionButtonFocus(parent, key) {\n    const focusableActionButtons = this.getAllFocusableChildren(parent);\n\n    for (let i = 0; i < focusableActionButtons.length; i++) {\n      const current = focusableActionButtons[i];\n\n      if (current === document.activeElement) {\n        if (key === Keys.left && i > 0) {\n          focusableActionButtons[i - 1].focus();\n          break;\n        }\n\n        if (key === Keys.right && i < focusableActionButtons.length - 1) {\n          focusableActionButtons[i + 1].focus();\n          break;\n        }\n      }\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  keepFocusWithinComponent(target, event) {\n    const wrapper = this.wrapper.nativeElement;\n    const [firstFocusable, lastFocusable] = this.getFirstAndLastFocusable(wrapper);\n    const tabAfterLastFocusable = !event.shiftKey && target === lastFocusable;\n    const shiftTabAfterFirstFocusable = event.shiftKey && target === firstFocusable;\n\n    if (tabAfterLastFocusable) {\n      event.preventDefault();\n      firstFocusable.focus();\n    }\n\n    if (shiftTabAfterFirstFocusable) {\n      event.preventDefault();\n      lastFocusable.focus();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  shouldFocusPrimary(el) {\n    return isPresent(el) && isFocusable(el);\n  }\n  /**\n   * @hidden\n   */\n\n\n  getAllFocusableChildren(parent) {\n    return parent.querySelectorAll(focusableSelector);\n  }\n  /**\n   * @hidden\n   */\n\n\n  getFirstAndLastFocusable(parent) {\n    const all = this.getAllFocusableChildren(parent);\n    const firstFocusable = all.length > 0 ? all[0] : parent;\n    const lastFocusable = all.length > 0 ? all[all.length - 1] : parent;\n    return [firstFocusable, lastFocusable];\n  }\n  /**\n   * @hidden\n   */\n\n\n  generateTitleId() {\n    return 'kendo-dialog-title-' + Math.ceil(Math.random() * 1000000).toString();\n  }\n  /**\n   * @hidden\n   */\n\n\n  generateContentId() {\n    return 'kendo-dialog-content-' + Math.ceil(Math.random() * 1000000).toString();\n  }\n\n  get wrapperClass() {\n    return true;\n  }\n\n  get styles() {\n    const styles = {};\n\n    if (this.width) {\n      styles.width = createValueWithUnit(this.width);\n    }\n\n    if (this.height) {\n      styles.height = createValueWithUnit(this.height);\n    }\n\n    if (this.minWidth) {\n      styles.minWidth = createValueWithUnit(this.minWidth);\n    }\n\n    if (this.maxWidth) {\n      styles.maxWidth = createValueWithUnit(this.maxWidth);\n    }\n\n    if (this.minHeight) {\n      styles.minHeight = createValueWithUnit(this.minHeight);\n    }\n\n    if (this.maxHeight) {\n      styles.maxHeight = createValueWithUnit(this.maxHeight);\n    }\n\n    return styles;\n  }\n\n  bubble(eventName, component) {\n    if (component) {\n      const emit = e => this[eventName].emit(e);\n\n      const s = component[eventName].subscribe(emit);\n      this.subscriptions.push(s);\n    }\n  }\n\n}\n\nDialogComponent.ɵfac = function DialogComponent_Factory(t) {\n  return new (t || DialogComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.AnimationBuilder));\n};\n\nDialogComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DialogComponent,\n  selectors: [[\"kendo-dialog\"]],\n  contentQueries: function DialogComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, DialogTitleBarComponent, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.titlebarContent = _t);\n    }\n  },\n  viewQuery: function DialogComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(DialogActionsComponent, 5);\n      i0.ɵɵviewQuery(_c3, 7);\n      i0.ɵɵviewQuery(DialogTitleBarComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.actionsView = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dialog = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.titlebarView = _t);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function DialogComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx.dir)(\"tabIndex\", ctx.tabIndex);\n      i0.ɵɵclassProp(\"k-dialog-wrapper\", ctx.wrapperClass);\n    }\n  },\n  inputs: {\n    actions: \"actions\",\n    actionsLayout: \"actionsLayout\",\n    autoFocusedElement: \"autoFocusedElement\",\n    title: \"title\",\n    width: \"width\",\n    minWidth: \"minWidth\",\n    maxWidth: \"maxWidth\",\n    height: \"height\",\n    minHeight: \"minHeight\",\n    maxHeight: \"maxHeight\",\n    animation: \"animation\"\n  },\n  outputs: {\n    action: \"action\",\n    close: \"close\"\n  },\n  exportAs: [\"kendoDialog\"],\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: DIALOG_LOCALIZATION_SERVICE,\n    useExisting: LocalizationService\n  }, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.dialog'\n  }])],\n  ngContentSelectors: _c7,\n  decls: 11,\n  vars: 9,\n  consts: function () {\n    let i18n_4;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the close button\n       * @meaning kendo.dialog.closeTitle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DIALOG_FESM2015_KENDO_ANGULAR_DIALOG_JS_5 = goog.getMsg(\"Close\");\n      i18n_4 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DIALOG_FESM2015_KENDO_ANGULAR_DIALOG_JS_5;\n    } else {\n      i18n_4 = $localize`:kendo.dialog.closeTitle|The title of the close button:Close`;\n    }\n\n    return [[\"kendoDialogLocalizedMessages\", \"\", \"closeTitle\", i18n_4], [1, \"k-overlay\"], [\"role\", \"dialog\", \"aria-modal\", \"true\", 1, \"k-window\", \"k-dialog\", 3, \"ngStyle\"], [\"dialog\", \"\"], [3, \"closeTitle\", \"id\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"k-content\", \"k-window-content\", \"k-dialog-content\", 3, \"id\"], [3, \"actions\", \"layout\", 4, \"ngIf\"], [3, \"closeTitle\", \"id\"], [3, \"ngTemplateOutlet\"], [3, \"actions\", \"layout\"]];\n  },\n  template: function DialogComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c6);\n      i0.ɵɵelementContainerStart(0, 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2, 3);\n      i0.ɵɵtemplate(4, DialogComponent_kendo_dialog_titlebar_4_Template, 2, 3, \"kendo-dialog-titlebar\", 4);\n      i0.ɵɵtemplate(5, DialogComponent_ng_content_5_Template, 1, 0, \"ng-content\", 5);\n      i0.ɵɵelementStart(6, \"div\", 6);\n      i0.ɵɵtemplate(7, DialogComponent_ng_content_7_Template, 1, 0, \"ng-content\", 5);\n      i0.ɵɵtemplate(8, DialogComponent_8_Template, 1, 1, undefined, 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, DialogComponent_ng_content_9_Template, 1, 0, \"ng-content\", 5);\n      i0.ɵɵtemplate(10, DialogComponent_kendo_dialog_actions_10_Template, 1, 2, \"kendo-dialog-actions\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementContainerEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"@overlayAppear\", undefined);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", ctx.styles);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"id\", ctx.contentId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.contentTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.contentTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.actions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.actions);\n    }\n  },\n  directives: [LocalizedMessagesDirective, i6.NgStyle, i6.NgIf, DialogTitleBarComponent, i6.NgTemplateOutlet, DialogActionsComponent],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('overlayAppear', [state('in', style({\n      opacity: 1\n    })), transition('void => *', [style({\n      opacity: 0.1\n    }), animate('.3s cubic-bezier(.2, .6, .4, 1)')])])]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DialogComponent, [{\n    type: Component,\n    args: [{\n      animations: [trigger('overlayAppear', [state('in', style({\n        opacity: 1\n      })), transition('void => *', [style({\n        opacity: 0.1\n      }), animate('.3s cubic-bezier(.2, .6, .4, 1)')])])],\n      exportAs: 'kendoDialog',\n      providers: [LocalizationService, {\n        provide: DIALOG_LOCALIZATION_SERVICE,\n        useExisting: LocalizationService\n      }, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.dialog'\n      }],\n      selector: 'kendo-dialog',\n      template: `\n        <ng-container\n            kendoDialogLocalizedMessages\n            i18n-closeTitle=\"kendo.dialog.closeTitle|The title of the close button\"\n            closeTitle=\"Close\"\n        >\n        <div class=\"k-overlay\" @overlayAppear></div>\n\n        <div #dialog class=\"k-window k-dialog\" role=\"dialog\" aria-modal=\"true\" [ngStyle]=\"styles\">\n            <kendo-dialog-titlebar *ngIf=\"title\" [closeTitle]=\"closeTitle\" [id]=\"titleId\">{{ title }}</kendo-dialog-titlebar>\n            <ng-content select=\"kendo-dialog-titlebar\" *ngIf=\"!title\"></ng-content>\n\n            <div [id]=\"contentId\" class=\"k-content k-window-content k-dialog-content\">\n                <ng-content *ngIf=\"!contentTemplate\"></ng-content>\n                <ng-template [ngTemplateOutlet]=\"contentTemplate\" *ngIf=\"contentTemplate\"></ng-template>\n            </div>\n\n            <ng-content select=\"kendo-dialog-actions\" *ngIf=\"!actions\"></ng-content>\n            <kendo-dialog-actions *ngIf=\"actions\" [actions]=\"actions\" [layout]=\"actionsLayout\"> </kendo-dialog-actions>\n        </div>\n    </ng-container>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i2.AnimationBuilder\n    }];\n  }, {\n    actions: [{\n      type: Input\n    }],\n    actionsLayout: [{\n      type: Input\n    }],\n    autoFocusedElement: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    minWidth: [{\n      type: Input\n    }],\n    maxWidth: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    minHeight: [{\n      type: Input\n    }],\n    maxHeight: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }],\n    action: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    dir: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    tabIndex: [{\n      type: HostBinding,\n      args: ['attr.tabIndex']\n    }],\n    titlebarContent: [{\n      type: ContentChildren,\n      args: [DialogTitleBarComponent, {\n        descendants: false\n      }]\n    }],\n    titlebarView: [{\n      type: ViewChildren,\n      args: [DialogTitleBarComponent]\n    }],\n    actionsView: [{\n      type: ViewChild,\n      args: [DialogActionsComponent, {\n        static: false\n      }]\n    }],\n    dialog: [{\n      type: ViewChild,\n      args: ['dialog', {\n        static: true\n      }]\n    }],\n    wrapperClass: [{\n      type: HostBinding,\n      args: ['class.k-dialog-wrapper']\n    }]\n  });\n})();\n/**\n * Holds references to the object instance and published events of the Dialog.\n * Controls the Dialogs that were opened through the `DialogService`\n * ([see example]({% slug api_dialog_dialogservice %}#toc-open)).\n */\n\n\nclass DialogRef {}\n/**\n * The base class  which will be extended by a component that is provided as content through `content`\n * ([see example]({% slug service_dialog %}#toc-passing-title-content-and-actions-as-a-single-component)).\n */\n\n\nclass DialogContentBase {\n  constructor(dialog) {\n    this.dialog = dialog;\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngAfterViewInit() {\n    if (this.dialogTitleBar) {\n      // when opening component inside dialog with service AND the component has defined its own titlebar\n      this.dialogTitleBar.close.pipe(filter(e => !e.isDefaultPrevented())).subscribe(() => {\n        this.dialog.close();\n      });\n    }\n\n    if (this.dialogActions) {\n      if (this.dialogActions.actions) {\n        this.dialogActions.action.subscribe(action => this.dialog.dialog.instance.action.emit(action));\n      }\n    }\n  }\n\n}\n\nDialogContentBase.ɵfac = function DialogContentBase_Factory(t) {\n  return new (t || DialogContentBase)(i0.ɵɵdirectiveInject(DialogRef));\n};\n\nDialogContentBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DialogContentBase,\n  viewQuery: function DialogContentBase_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(DialogTitleBarComponent, 5);\n      i0.ɵɵviewQuery(DialogActionsComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dialogTitleBar = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dialogActions = _t.first);\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DialogContentBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: DialogRef\n    }];\n  }, {\n    dialogTitleBar: [{\n      type: ViewChild,\n      args: [DialogTitleBarComponent, {\n        static: false\n      }]\n    }],\n    dialogActions: [{\n      type: ViewChild,\n      args: [DialogActionsComponent, {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass DialogContainerService {\n  set container(container) {\n    DialogContainerService.container = container;\n  }\n\n  get container() {\n    return DialogContainerService.container;\n  }\n\n}\n\nDialogContainerService.container = null;\n\nDialogContainerService.ɵfac = function DialogContainerService_Factory(t) {\n  return new (t || DialogContainerService)();\n};\n\nDialogContainerService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DialogContainerService,\n  factory: DialogContainerService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DialogContainerService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * The settings for the Dialog actions when the Dialog is opened through `DialogService`\n * ([see example]({% slug api_dialog_dialogservice %}#toc-open)).\n */\n\n\nclass DialogAction {}\n/**\n * The settings that can be used when the Dialog is opened through `DialogService`.\n * ([see example]({% slug api_dialog_dialogservice %}#toc-open)).\n */\n\n\nclass DialogSettings {} // eslint-disable max-line-length\n\n\nconst isNotComponent$1 = component => isString(component) || component instanceof TemplateRef;\n\nclass DialogInjector {\n  constructor(getDialogRef, parentInjector) {\n    this.getDialogRef = getDialogRef;\n    this.parentInjector = parentInjector;\n  }\n\n  get(token, notFoundValue) {\n    if (token === DialogRef) {\n      return this.getDialogRef();\n    }\n\n    return this.parentInjector.get(token, notFoundValue);\n  }\n\n}\n/**\n * A service for opening Dialog windows dynamically\n * ([see example]({% slug service_dialog %})).\n */\n\n\nclass DialogService {\n  constructor(\n  /**\n   * @hidden\n   */\n  resolver, containerService) {\n    this.resolver = resolver;\n    this.containerService = containerService;\n  }\n  /**\n   * Opens a Dialog window. Requires an element in the application that uses the\n   * [`kendoDialogContainer`]({% slug api_dialog_dialogcontainerdirective %}) directive.\n   * Created Dialogs will be mounted in the DOM directly after that element.\n   *\n   * @param {DialogAction} options - The options that define the Dialog.\n   * @returns {DialogRef} - A reference to the Dialog object and the convenience properties.\n   *\n   * @example\n   *\n   * ```ts-no-run\n   * _@Component({\n   *   selector: 'my-app',\n   *   template: `\n   *     <button kendoButton (click)=\"open()\">Harmless button</button>\n   *     <div kendoDialogContainer></div>\n   *   `\n   * })\n   * export class AppComponent {\n   *     constructor( private dialogService: DialogService ) {}\n   *\n   *     public open() {\n   *         var dialog = this.dialogService.open({\n   *           title: \"Please confirm\",\n   *           content: \"Are you sure?\",\n   *           actions: [\n   *             { text: \"No\" },\n   *             { text: \"Yes\", themeColor: 'primary' }\n   *           ]\n   *         });\n   *\n   *         dialog.result.subscribe((result) => {\n   *           if (result instanceof DialogCloseResult) {\n   *             console.log(\"close\");\n   *           } else {\n   *             console.log(\"action\", result);\n   *           }\n   *         });\n   *     }\n   * }\n   * ```\n   *\n   */\n\n\n  open(options) {\n    const factory = this.resolver.resolveComponentFactory(DialogComponent);\n    const container = options.appendTo || this.containerService.container;\n\n    if (!container) {\n      throw new Error(`\nCannot attach dialog to the page.\nAdd an element that uses the kendoDialogContainer directive, or set the 'appendTo' property.\nSee https://www.telerik.com/kendo-angular-ui/components/dialogs/dialog/service/.\n          `);\n    } // create DialogRef to (1) pass as result, (2) provide through injector\n\n\n    const dialogRef = {\n      close: () => {\n        /* noop */\n      },\n      content: null,\n      dialog: null,\n      result: null\n    };\n    return this.initializeDialog(options.content, factory, container, dialogRef, options);\n  }\n\n  initializeDialog(component, factory, container, dialogRef, options) {\n    const content = this.contentFrom(component, container, dialogRef);\n    const dialog = container.createComponent(factory, undefined, undefined, content.nodes);\n    dialogRef.dialog = dialog;\n    dialog.changeDetectorRef.markForCheck(); // copy @Input options to dialog instance\n\n    this.applyOptions(dialog.instance, options); // create close handler and result stream\n\n    const apiClose = new Subject();\n\n    const close = e => {\n      if (e instanceof PreventableEvent) {\n        e = new DialogCloseResult();\n      }\n\n      apiClose.next(e || new DialogCloseResult());\n\n      if (content.componentRef) {\n        content.componentRef.destroy();\n      }\n\n      dialog.destroy();\n    };\n\n    const result = merge(apiClose, // triggered when the titlebar or actions are defined in DialogSettings\n    merge(dialog.instance.close, dialog.instance.action).pipe(map(e => e instanceof PreventableEvent ? new DialogCloseResult() : e), filter(e => {\n      if (options.preventAction) {\n        // add dialogRef only when using component\n        const dialogRefParameter = isNotComponent$1(component) ? undefined : dialogRef;\n        return !options.preventAction(e, dialogRefParameter);\n      }\n\n      return true;\n    }))).pipe(take(1), // Takes care for multiple subscriptions:\n    // We subscribe internaly and the user may subscribe to get a close result - dialog.result.subscribe().\n    // This causes multiple subscriptions to the same source and thus multiple emissions. share() solves that.\n    share());\n    result.subscribe(close);\n    dialogRef.close = close;\n    dialogRef.result = result;\n\n    if (component && isDevMode()) {\n      const hasContentTitle = content.nodes[0] && content.nodes[0].length > 0;\n      const hasContentActions = content.nodes[2] && content.nodes[2].length > 0;\n      const multipleTitles = options.title && hasContentTitle;\n      const multipleActions = options.actions && hasContentActions;\n\n      if (component.prototype instanceof DialogContentBase) {\n        // content component extends DialogContentBase\n        if (multipleTitles || multipleActions) {\n          console.warn(`\n                    Multiple Title and/or Actions configurations detected.\n                    When using a component as content, provide the title and actions either in the component's markup\n                    or via the title and actions properties of the DialogSettings object, but not both.\n                    See https://www.telerik.com/kendo-angular-ui/components/dialogs/dialog/service/#toc-passing-title-content-and-actions-as-a-single-component'`);\n        }\n      } else {\n        if (hasContentTitle || hasContentActions) {\n          console.warn(`\n                    When Title and/or Actions markup is provided in content component's template,\n                    the component needs to inherit the DialogContentBase class to ensure that close and result events are properly hooked.\n                    See https://www.telerik.com/kendo-angular-ui/components/dialogs/dialog/service/#toc-passing-title-content-and-actions-as-a-single-component'`);\n        }\n      }\n    }\n\n    return dialogRef;\n  }\n\n  applyOptions(instance, options) {\n    instance.title = options.title;\n    instance.actions = options.actions;\n    instance.actionsLayout = options.actionsLayout || 'stretched';\n    instance.width = options.width;\n    instance.minWidth = options.minWidth;\n    instance.maxWidth = options.maxWidth;\n    instance.height = options.height;\n    instance.minHeight = options.minHeight;\n    instance.maxHeight = options.maxHeight;\n    instance.autoFocusedElement = options.autoFocusedElement;\n    instance.closeTitle = options.closeTitle;\n    instance.cssClass = options.cssClass;\n    instance.htmlAttributes = options.htmlAttributes;\n    instance.animation = options.animation !== undefined ? options.animation : true;\n\n    if (options.content instanceof TemplateRef) {\n      instance.contentTemplate = options.content;\n    }\n  }\n\n  contentFrom(content, container, dialogRef) {\n    const renderer = container.injector.get(Renderer2);\n    let nodes = [];\n    let titleNodes = [];\n    let actionNodes = [];\n    let componentRef = null;\n\n    if (typeof content === 'string') {\n      nodes = [renderer.createText(content)];\n    } else if (content && !(content instanceof TemplateRef)) {\n      // Component\n      const injector = new DialogInjector(() => dialogRef, container.injector);\n      const factory = this.resolver.resolveComponentFactory(content);\n      componentRef = container.createComponent(factory, undefined, injector);\n      titleNodes = Array.from(componentRef.location.nativeElement.querySelectorAll('kendo-dialog-titlebar'));\n      nodes = [componentRef.location.nativeElement];\n      actionNodes = Array.from(componentRef.location.nativeElement.querySelectorAll('kendo-dialog-actions'));\n      dialogRef.content = componentRef;\n    }\n\n    return {\n      componentRef,\n      nodes: [titleNodes, nodes, actionNodes // <ng-content select=\"kendo-dialog-actions\">\n      ]\n    };\n  }\n\n}\n\nDialogService.ɵfac = function DialogService_Factory(t) {\n  return new (t || DialogService)(i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(DialogContainerService));\n};\n\nDialogService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DialogService,\n  factory: DialogService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DialogService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: DialogContainerService,\n      decorators: [{\n        type: Inject,\n        args: [DialogContainerService]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nlet newZIndex = 10002;\n/**\n * @hidden\n */\n\nconst DEFAULT_OPTIONS = {\n  draggable: true,\n  height: null,\n  left: null,\n  minHeight: 100,\n  minWidth: 120,\n  position: 'absolute',\n  resizable: true,\n  state: 'default',\n  top: null,\n  width: null\n};\n/**\n * @hidden\n */\n\nconst createMoveStream = (el, ev) => mouseDown => {\n  return el.kendoDrag.pipe(takeUntil(el.kendoRelease.pipe(tap(() => {\n    ev.emit();\n  }))), map(({\n    pageX,\n    pageY\n  }) => ({\n    originalX: mouseDown.pageX,\n    originalY: mouseDown.pageY,\n    pageX,\n    pageY\n  })));\n};\n/**\n * @hidden\n */\n\n\nclass DragResizeService {\n  constructor(ngZone) {\n    this.ngZone = ngZone;\n    this.close = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.change = new EventEmitter();\n    this.stateChange = new EventEmitter();\n    this.dragStart = new EventEmitter();\n    this.dragEnd = new EventEmitter();\n    this.resizeStart = new EventEmitter();\n    this.resizeEnd = new EventEmitter();\n    this.options = Object.assign({}, DEFAULT_OPTIONS);\n    this.lastAction = null;\n    this.subscriptions = new Subscription();\n    this.dragSubscription = new Subscription();\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n\n    if (this.dragSubscription) {\n      this.dragSubscription.unsubscribe();\n    }\n  }\n\n  init(el) {\n    const state = this.options.state;\n    let options = this.options;\n    this.window = el;\n\n    if (state !== 'default') {\n      this.restoreOptions = Object.assign({}, options);\n    }\n\n    if (state === 'minimized') {\n      options.height = 0;\n      options.minHeight = 0;\n    }\n\n    if (state === 'maximized') {\n      options.position = 'fixed';\n    }\n  }\n\n  onDrag(el) {\n    this.subscriptions.add(this.ngZone.runOutsideAngular(() => {\n      let startPosition;\n      let dragStarted;\n      this.dragSubscription = el.kendoPress.pipe(tap(ev => {\n        if (!ev.isTouch) {\n          preventDefault(ev);\n        }\n\n        this.focus.emit();\n        startPosition = this.currentPosition();\n        dragStarted = false;\n      }), switchMap(createMoveStream(el, this.dragEnd))).subscribe(({\n        pageX,\n        pageY,\n        originalX,\n        originalY\n      }) => {\n        if (!dragStarted) {\n          this.ensureWidth();\n          this.dragStart.emit();\n          dragStarted = true;\n        }\n\n        this.handleDrag({\n          originalX,\n          originalY,\n          pageX,\n          pageY,\n          startPosition\n        });\n      });\n    }));\n  }\n\n  handleDrag({\n    originalX,\n    originalY,\n    pageX,\n    pageY,\n    startPosition\n  }) {\n    this.options.left = startPosition.x + pageX - originalX;\n    this.options.top = startPosition.y + pageY - originalY;\n\n    if (this.options.state === 'minimized' && isPresent(this.restoreOptions)) {\n      this.restoreOptions.left = this.options.left;\n      this.restoreOptions.top = this.options.top;\n    }\n\n    this.change.emit({\n      left: startPosition.x + pageX - originalX,\n      top: startPosition.y + pageY - originalY\n    });\n  }\n\n  onResize(handle, direction) {\n    this.subscriptions.add(this.ngZone.runOutsideAngular(() => {\n      let startOffsetAndPosition;\n      let resizeStarted = false;\n      handle.kendoPress.pipe(tap(ev => {\n        preventDefault(ev);\n        this.focus.emit();\n        startOffsetAndPosition = this.currentOffsetAndPosition();\n        resizeStarted = false;\n      }), switchMap(createMoveStream(handle, this.resizeEnd))).subscribe(({\n        pageX,\n        pageY,\n        originalX,\n        originalY\n      }) => {\n        if (!resizeStarted) {\n          this.resizeStart.emit(direction);\n          resizeStarted = true;\n        }\n\n        let deltaX = pageX - originalX;\n        let deltaY = pageY - originalY;\n        this.handleResize(startOffsetAndPosition, direction, deltaX, deltaY);\n      });\n    }));\n  }\n\n  handleResize(initial, dir, deltaX, deltaY) {\n    const old = this.options;\n    let ev = {};\n\n    if (dir.indexOf('e') >= 0) {\n      const newWidth = initial.width + deltaX;\n\n      if (newWidth !== old.width && newWidth >= old.minWidth) {\n        ev.width = newWidth;\n      }\n    }\n\n    if (dir.indexOf('n') >= 0) {\n      const newHeight = initial.height - deltaY;\n      const newTop = initial.y + deltaY;\n\n      if (newHeight !== old.height && newHeight >= old.minHeight && newTop !== old.top) {\n        ev.height = newHeight;\n        ev.top = newTop;\n      }\n    }\n\n    if (dir.indexOf('s') >= 0) {\n      const newHeight = initial.height + deltaY;\n\n      if (newHeight !== old.height && newHeight >= old.minHeight) {\n        ev.height = newHeight;\n      }\n    }\n\n    if (dir.indexOf('w') >= 0) {\n      const newLeft = initial.x + deltaX;\n      const newWidth = initial.width - deltaX;\n\n      if (newWidth !== old.width && newWidth >= old.minWidth && newLeft !== old.left) {\n        ev.width = newWidth;\n        ev.left = newLeft;\n      }\n    }\n\n    if (isPresent(ev.width) || isPresent(ev.height)) {\n      OFFSET_STYLES.forEach(style => {\n        if (isPresent(ev[style])) {\n          this.options[style] = ev[style];\n        }\n      });\n      this.change.emit(ev);\n    }\n  }\n\n  restoreAction() {\n    this.lastAction = 'restore';\n    this.defaultState();\n  }\n\n  defaultState() {\n    if (isPresent(this.restoreOptions)) {\n      this.options = Object.assign({}, this.restoreOptions);\n    }\n\n    this.options.state = 'default';\n    this.stateChange.emit('default');\n  }\n\n  storeOptions() {\n    this.restoreOptions = Object.assign({}, this.options);\n  }\n\n  maximizeAction() {\n    this.lastAction = 'maximize';\n    this.maximizeState();\n  }\n\n  maximizeState() {\n    this.storeOptions();\n    const wnd = this.windowViewPort;\n    this.options = Object.assign({}, this.options, {\n      height: wnd.height,\n      left: 0,\n      position: 'fixed',\n      state: 'maximized',\n      top: 0,\n      width: wnd.width\n    });\n    this.stateChange.emit('maximized');\n  }\n\n  minimizeAction() {\n    this.lastAction = 'minimize';\n    this.minimizeState();\n  }\n\n  minimizeState() {\n    this.storeOptions();\n    this.options = Object.assign({}, this.options, {\n      height: null,\n      minHeight: 0,\n      state: 'minimized'\n    });\n    this.stateChange.emit('minimized');\n  }\n  /**\n   * Handles manual changes of the 'state' property.\n   * Required to distinguish them from action clicks.\n   */\n\n\n  applyManualState() {\n    const state = this.options.state;\n\n    switch (state) {\n      case 'default':\n        this.clearHeight();\n        this.defaultState();\n        break;\n\n      case 'maximized':\n        this.clearHeight();\n        this.maximizeState();\n        break;\n\n      case 'minimized':\n        this.minimizeState();\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  closeAction() {\n    this.close.emit();\n  }\n\n  ensureWidth() {\n    const windowOffset = offset(this.window.nativeElement);\n\n    if (!isPresent(this.options.width)) {\n      this.options.width = windowOffset.width;\n      this.change.emit({\n        width: windowOffset.width\n      });\n    }\n  }\n\n  clearHeight() {\n    if (this.options.height === 0) {\n      delete this.options.height;\n    }\n\n    if (this.options.minHeight === 0) {\n      delete this.options.minHeight;\n    }\n  }\n\n  center() {\n    if (this.options.state === 'maximized') {\n      return;\n    }\n\n    let scroll = scrollPosition(this.window.nativeElement);\n    let wnd = this.windowViewPort;\n    let wrapper = offset(this.window.nativeElement);\n    let ev = {};\n\n    if (!isPresent(this.options.left)) {\n      this.options.left = scroll.x + Math.max(0, (wnd.width - wrapper.width) / 2);\n      ev.left = this.options.left;\n    }\n\n    if (!isPresent(this.options.top)) {\n      this.options.top = scroll.y + Math.max(0, (wnd.height - wrapper.height) / 2);\n      ev.top = this.options.top;\n    }\n\n    this.change.emit(ev);\n  }\n\n  currentOffsetAndPosition() {\n    const o = this.options;\n    const off = offset(this.window.nativeElement);\n    return Object.assign({}, this.currentPosition(), {\n      height: o.height ? o.height : off.height,\n      width: o.width ? o.width : off.width\n    });\n  }\n\n  currentPosition() {\n    const o = this.options;\n\n    if (!o.top || !o.left) {\n      this.setPosition();\n    }\n\n    return {\n      x: this.options.left,\n      y: this.options.top\n    };\n  }\n\n  setPosition() {\n    const wrapper = positionWithScroll(this.window.nativeElement, getDocumentElement(this.window.nativeElement));\n    this.options.left = wrapper.left;\n    this.options.top = wrapper.top;\n  }\n\n  setRestoreOption(style, value) {\n    if (isPresent(this.restoreOptions)) {\n      this.restoreOptions[style] = value;\n    }\n  }\n\n  get nextPossibleZIndex() {\n    return newZIndex;\n  }\n\n  get nextZIndex() {\n    return newZIndex++;\n  }\n\n  get windowViewPort() {\n    return getWindowViewPort(this.window.nativeElement);\n  }\n\n}\n\nDragResizeService.ɵfac = function DragResizeService_Factory(t) {\n  return new (t || DragResizeService)(i0.ɵɵinject(i0.NgZone));\n};\n\nDragResizeService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DragResizeService,\n  factory: DragResizeService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragResizeService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass ResizeHandleDirective {\n  constructor(draggable, el, renderer, service) {\n    this.draggable = draggable;\n    this.el = el;\n    this.renderer = renderer;\n    this.service = service;\n    this.subscriptions = new Subscription();\n  }\n\n  get hostClass() {\n    return true;\n  }\n\n  ngOnInit() {\n    this.setDisplay();\n    this.renderer.addClass(this.el.nativeElement, 'k-resize-' + this.direction);\n    this.subscriptions.add(of(this.draggable).subscribe(handle => {\n      this.service.onResize(handle, this.direction);\n    }));\n    this.subscriptions.add(this.service.resizeStart.subscribe(dir => {\n      if (dir !== this.direction) {\n        this.setDisplay('none');\n      }\n    }));\n    this.subscriptions.add(this.service.dragStart.subscribe(() => {\n      this.setDisplay('none');\n    }));\n    this.subscriptions.add(merge(this.service.resizeEnd, this.service.dragEnd).subscribe(() => {\n      this.setDisplay('block');\n    }));\n    this.subscriptions.add(this.service.stateChange.subscribe(state => {\n      this.setDisplay(state === 'default' ? 'block' : 'none');\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  setDisplay(value = 'block') {\n    this.renderer.setStyle(this.el.nativeElement, 'display', this.service.options.state === 'default' ? value : 'none');\n  }\n\n}\n\nResizeHandleDirective.ɵfac = function ResizeHandleDirective_Factory(t) {\n  return new (t || ResizeHandleDirective)(i0.ɵɵdirectiveInject(i1$1.DraggableDirective, 1), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(DragResizeService));\n};\n\nResizeHandleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ResizeHandleDirective,\n  selectors: [[\"\", \"kendoWindowResizeHandle\", \"\"]],\n  hostVars: 2,\n  hostBindings: function ResizeHandleDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-resize-handle\", ctx.hostClass);\n    }\n  },\n  inputs: {\n    direction: \"direction\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ResizeHandleDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoWindowResizeHandle]'\n    }]\n  }], function () {\n    return [{\n      type: i1$1.DraggableDirective,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: DragResizeService\n    }];\n  }, {\n    direction: [{\n      type: Input\n    }],\n    hostClass: [{\n      type: HostBinding,\n      args: ['class.k-resize-handle']\n    }]\n  });\n})();\n\nclass WindowTitleBarComponent {\n  constructor(el, service, ngZone) {\n    this.el = el;\n    this.ngZone = ngZone;\n    this.service = service;\n  }\n\n  ngOnInit() {\n    this.dragDirective = new DraggableDirective(this.el, this.ngZone);\n    this.dragDirective.ngOnInit();\n\n    if (this.isDraggable) {\n      this.subscribeDrag();\n    }\n\n    this.subscribeStateChange();\n  }\n\n  ngAfterViewInit() {\n    const element = this.el.nativeElement.querySelector('.k-window-title');\n\n    if (isPresent(element)) {\n      element.setAttribute('id', this.id);\n    }\n  }\n\n  ngOnDestroy() {\n    this.dragDirective.ngOnDestroy();\n    this.unsubscribeDrag();\n    this.unsubscribeState();\n  }\n  /**\n   * @hidden\n   */\n\n\n  subscribeDrag() {\n    this.unsubscribeDrag();\n    this.dragSubscription = of(this.dragDirective).subscribe(titleBar => {\n      this.service.onDrag(titleBar);\n    });\n  }\n  /**\n   * @hidden\n   */\n\n\n  subscribeStateChange() {\n    this.stateSubscription = this.service.stateChange.subscribe(state => {\n      if (this.service.options.draggable) {\n        if (state === 'maximized') {\n          this.unsubscribeDrag();\n        } else {\n          this.subscribeDrag();\n        }\n      }\n    });\n  }\n  /**\n   * @hidden\n   */\n\n\n  unsubscribeDrag() {\n    if (this.dragSubscription) {\n      this.service.dragSubscription.unsubscribe();\n      this.dragSubscription.unsubscribe();\n      this.dragSubscription = null;\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  unsubscribeState() {\n    if (this.stateSubscription) {\n      this.stateSubscription.unsubscribe();\n      this.stateSubscription = null;\n    }\n  }\n\n  get className() {\n    return true;\n  }\n\n  get touchAction() {\n    if (this.isDraggable) {\n      return 'none';\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handle(ev) {\n    const target = ev.target;\n    const state = this.service.options.state;\n\n    if (!hasClasses(target, 'k-icon') && !isFocusable(target, false) && this.service.options.resizable) {\n      if (state === 'default') {\n        this.service.maximizeAction();\n      } else if (state === 'maximized') {\n        this.service.restoreAction();\n      }\n    }\n  }\n\n  get isDraggable() {\n    const options = this.service.options;\n    return options.draggable && options.state !== 'maximized';\n  }\n\n}\n\nWindowTitleBarComponent.ɵfac = function WindowTitleBarComponent_Factory(t) {\n  return new (t || WindowTitleBarComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DragResizeService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nWindowTitleBarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: WindowTitleBarComponent,\n  selectors: [[\"kendo-window-titlebar\"]],\n  hostVars: 6,\n  hostBindings: function WindowTitleBarComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"dblclick\", function WindowTitleBarComponent_dblclick_HostBindingHandler($event) {\n        return ctx.handle($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"touch-action\", ctx.touchAction);\n      i0.ɵɵclassProp(\"k-window-titlebar\", ctx.className)(\"k-dialog-titlebar\", ctx.className);\n    }\n  },\n  inputs: {\n    template: \"template\",\n    id: \"id\"\n  },\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function WindowTitleBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, WindowTitleBarComponent_ng_content_0_Template, 1, 0, \"ng-content\", 0);\n      i0.ɵɵtemplate(1, WindowTitleBarComponent_1_Template, 1, 4, undefined, 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.template);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.template);\n    }\n  },\n  directives: [i6.NgIf, i6.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WindowTitleBarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-window-titlebar',\n      template: `\n\t<ng-content *ngIf=\"!template\"></ng-content>\n\t<ng-template\n\t\t[ngTemplateOutlet]=\"template\"\n\t\t[ngTemplateOutletContext]=\"{'$implicit': service}\" *ngIf=\"template\">\n\t</ng-template>\n\t`\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: DragResizeService\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    template: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    className: [{\n      type: HostBinding,\n      args: ['class.k-window-titlebar']\n    }, {\n      type: HostBinding,\n      args: ['class.k-dialog-titlebar']\n    }],\n    touchAction: [{\n      type: HostBinding,\n      args: ['style.touch-action']\n    }],\n    handle: [{\n      type: HostListener,\n      args: ['dblclick', ['$event']]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass NavigationService {\n  constructor(window, ngZone) {\n    this.window = window;\n    this.ngZone = ngZone;\n  }\n\n  process(ev) {\n    const key = ev.keyCode;\n\n    switch (key) {\n      case Keys.up:\n      case Keys.down:\n      case Keys.left:\n      case Keys.right:\n        {\n          ev.preventDefault();\n          this.ngZone.run(() => {\n            this.handleArrow(key, ev);\n          });\n          break;\n        }\n\n      case Keys.esc:\n        this.ngZone.run(() => {\n          this.handleEscape();\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  handleArrow(key, ev) {\n    const options = this.window.options;\n\n    if (ev.altKey) {\n      this.handleStateChange(key, options.state);\n      return;\n    }\n\n    if ((ev.ctrlKey || ev.metaKey) && options.state === 'default') {\n      this.handleResize(key);\n    } else {\n      this.handleDrag(key);\n    }\n  }\n\n  handleEscape() {\n    this.window.closeAction();\n  }\n\n  handleDrag(key) {\n    let options = this.window.options;\n\n    if (!options.draggable) {\n      return;\n    }\n\n    const offset = this.window.currentOffsetAndPosition();\n    let restoreOptions = this.window.restoreOptions;\n    let ev = {};\n    let delta = 10;\n\n    if (key === Keys.left || key === Keys.up) {\n      delta *= -1;\n    }\n\n    switch (key) {\n      case Keys.left:\n      case Keys.right:\n        {\n          ev.left = offset.x + delta;\n          options.left = ev.left;\n          break;\n        }\n\n      case Keys.up:\n      case Keys.down:\n        {\n          ev.top = offset.y + delta;\n          options.top = ev.top;\n          break;\n        }\n\n      default:\n        break;\n    }\n\n    if (options.state === 'minimized' && isPresent(restoreOptions)) {\n      restoreOptions.left = options.left;\n      restoreOptions.top = options.top;\n    }\n\n    this.window.change.emit(ev);\n  }\n\n  handleResize(key) {\n    const options = this.window.options;\n\n    if (!options.resizable) {\n      return;\n    }\n\n    const offset = this.window.currentOffsetAndPosition();\n    let newWidth;\n    let newHeight;\n    let ev = {};\n    let delta = 10;\n\n    if (key === Keys.left || key === Keys.up) {\n      delta *= -1;\n    }\n\n    switch (key) {\n      case Keys.left:\n      case Keys.right:\n        {\n          newWidth = offset.width + delta;\n\n          if (newWidth !== options.width && newWidth >= options.minWidth) {\n            ev.width = newWidth;\n          }\n\n          break;\n        }\n\n      case Keys.up:\n      case Keys.down:\n        {\n          newHeight = offset.height + delta;\n\n          if (newHeight !== options.height && newHeight >= options.minHeight) {\n            ev.height = newHeight;\n          }\n\n          break;\n        }\n\n      default:\n        break;\n    }\n\n    if (isPresent(ev.width) || isPresent(ev.height)) {\n      OFFSET_STYLES.forEach(style => {\n        if (isPresent(ev[style])) {\n          this.window.options[style] = ev[style];\n        }\n      });\n      this.window.change.emit(ev);\n    }\n  }\n\n  handleStateChange(key, state) {\n    if (state === 'minimized' && key === Keys.up || state === 'maximized' && key === Keys.down) {\n      this.window.restoreAction();\n      return;\n    }\n\n    if (state === 'default') {\n      if (key === Keys.up) {\n        this.window.maximizeAction();\n      } else if (key === Keys.down) {\n        this.window.minimizeAction();\n      }\n    }\n  }\n\n}\n\nNavigationService.ɵfac = function NavigationService_Factory(t) {\n  return new (t || NavigationService)(i0.ɵɵinject(DragResizeService), i0.ɵɵinject(i0.NgZone));\n};\n\nNavigationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NavigationService,\n  factory: NavigationService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NavigationService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: DragResizeService\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n\nclass WindowMinimizeActionDirective extends Button {\n  constructor(el, renderer, _service, localization, ngZone) {\n    super(el, renderer, null, localization, ngZone);\n    this.buttonType = 'button';\n    this.buttonClass = true;\n    this.window = _service;\n    this.fillMode = 'flat';\n    this.icon = 'window-minimize';\n  }\n  /**\n   * @hidden\n   */\n\n\n  onClick() {\n    if (!this.isDisabled) {\n      this.window.minimizeAction();\n    }\n  }\n\n  get visible() {\n    return this.window.options.state === 'default' ? 'inline-flex' : 'none';\n  }\n\n}\n\nWindowMinimizeActionDirective.ɵfac = function WindowMinimizeActionDirective_Factory(t) {\n  return new (t || WindowMinimizeActionDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(DragResizeService, 8), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nWindowMinimizeActionDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: WindowMinimizeActionDirective,\n  selectors: [[\"button\", \"kendoWindowMinimizeAction\", \"\"]],\n  hostVars: 5,\n  hostBindings: function WindowMinimizeActionDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function WindowMinimizeActionDirective_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"type\", ctx.buttonType);\n      i0.ɵɵstyleProp(\"display\", ctx.visible);\n      i0.ɵɵclassProp(\"k-window-action\", ctx.buttonClass);\n    }\n  },\n  inputs: {\n    window: \"window\"\n  },\n  exportAs: [\"kendoWindowMinimizeAction\"],\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.button'\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WindowMinimizeActionDirective, [{\n    type: Directive,\n    args: [{\n      exportAs: 'kendoWindowMinimizeAction',\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.button'\n      }],\n      selector: 'button[kendoWindowMinimizeAction]' // eslint-disable-line\n\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: DragResizeService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    window: [{\n      type: Input\n    }],\n    buttonType: [{\n      type: HostBinding,\n      args: ['attr.type']\n    }],\n    buttonClass: [{\n      type: HostBinding,\n      args: ['class.k-window-action']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    visible: [{\n      type: HostBinding,\n      args: ['style.display']\n    }]\n  });\n})();\n\nclass WindowMaximizeActionDirective extends Button {\n  constructor(el, renderer, _service, localization, ngZone) {\n    super(el, renderer, null, localization, ngZone);\n    this.buttonType = 'button';\n    this.buttonClass = true;\n    this.window = _service;\n    this.fillMode = 'flat';\n    this.icon = 'window';\n  }\n  /**\n   * @hidden\n   */\n\n\n  onClick() {\n    if (!this.isDisabled) {\n      this.window.maximizeAction();\n    }\n  }\n\n  get visible() {\n    return this.window.options.state === 'default' ? 'inline-flex' : 'none';\n  }\n\n}\n\nWindowMaximizeActionDirective.ɵfac = function WindowMaximizeActionDirective_Factory(t) {\n  return new (t || WindowMaximizeActionDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(DragResizeService, 8), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nWindowMaximizeActionDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: WindowMaximizeActionDirective,\n  selectors: [[\"button\", \"kendoWindowMaximizeAction\", \"\"]],\n  hostVars: 5,\n  hostBindings: function WindowMaximizeActionDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function WindowMaximizeActionDirective_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"type\", ctx.buttonType);\n      i0.ɵɵstyleProp(\"display\", ctx.visible);\n      i0.ɵɵclassProp(\"k-window-action\", ctx.buttonClass);\n    }\n  },\n  inputs: {\n    window: \"window\"\n  },\n  exportAs: [\"kendoWindowMaximizeAction\"],\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.button'\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WindowMaximizeActionDirective, [{\n    type: Directive,\n    args: [{\n      exportAs: 'kendoWindowMaximizeAction',\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.button'\n      }],\n      selector: 'button[kendoWindowMaximizeAction]' // eslint-disable-line\n\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: DragResizeService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    window: [{\n      type: Input\n    }],\n    buttonType: [{\n      type: HostBinding,\n      args: ['attr.type']\n    }],\n    buttonClass: [{\n      type: HostBinding,\n      args: ['class.k-window-action']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    visible: [{\n      type: HostBinding,\n      args: ['style.display']\n    }]\n  });\n})();\n\nclass WindowRestoreActionDirective extends Button {\n  constructor(el, renderer, _service, localization, ngZone) {\n    super(el, renderer, null, localization, ngZone);\n    this.buttonType = 'button';\n    this.buttonClass = true;\n    this.window = _service;\n    this.fillMode = 'flat';\n    this.icon = 'window-restore';\n  }\n  /**\n   * @hidden\n   */\n\n\n  onClick() {\n    if (!this.isDisabled) {\n      this.window.restoreAction();\n    }\n  }\n\n  get visible() {\n    return this.window.options.state === 'default' ? 'none' : 'inline-flex';\n  }\n\n}\n\nWindowRestoreActionDirective.ɵfac = function WindowRestoreActionDirective_Factory(t) {\n  return new (t || WindowRestoreActionDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(DragResizeService, 8), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nWindowRestoreActionDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: WindowRestoreActionDirective,\n  selectors: [[\"button\", \"kendoWindowRestoreAction\", \"\"]],\n  hostVars: 5,\n  hostBindings: function WindowRestoreActionDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function WindowRestoreActionDirective_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"type\", ctx.buttonType);\n      i0.ɵɵstyleProp(\"display\", ctx.visible);\n      i0.ɵɵclassProp(\"k-window-action\", ctx.buttonClass);\n    }\n  },\n  inputs: {\n    window: \"window\"\n  },\n  exportAs: [\"kendoWindowRestoreAction\"],\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.button'\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WindowRestoreActionDirective, [{\n    type: Directive,\n    args: [{\n      exportAs: 'kendoWindowRestoreAction',\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.button'\n      }],\n      selector: 'button[kendoWindowRestoreAction]' // eslint-disable-line\n\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: DragResizeService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    window: [{\n      type: Input\n    }],\n    buttonType: [{\n      type: HostBinding,\n      args: ['attr.type']\n    }],\n    buttonClass: [{\n      type: HostBinding,\n      args: ['class.k-window-action']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    visible: [{\n      type: HostBinding,\n      args: ['style.display']\n    }]\n  });\n})();\n\nclass WindowCloseActionDirective extends Button {\n  constructor(el, renderer, _service, localization, ngZone) {\n    super(el, renderer, null, localization, ngZone);\n    this.buttonType = 'button';\n    this.buttonClass = true;\n    this.window = _service;\n    this.fillMode = 'flat';\n    this.icon = 'x';\n  }\n  /**\n   * @hidden\n   */\n\n\n  onClick() {\n    if (!this.isDisabled) {\n      this.window.closeAction();\n    }\n  }\n\n}\n\nWindowCloseActionDirective.ɵfac = function WindowCloseActionDirective_Factory(t) {\n  return new (t || WindowCloseActionDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(DragResizeService, 8), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nWindowCloseActionDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: WindowCloseActionDirective,\n  selectors: [[\"button\", \"kendoWindowCloseAction\", \"\"]],\n  hostVars: 3,\n  hostBindings: function WindowCloseActionDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function WindowCloseActionDirective_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"type\", ctx.buttonType);\n      i0.ɵɵclassProp(\"k-window-action\", ctx.buttonClass);\n    }\n  },\n  inputs: {\n    window: \"window\"\n  },\n  exportAs: [\"kendoWindowCloseAction\"],\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.button'\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WindowCloseActionDirective, [{\n    type: Directive,\n    args: [{\n      exportAs: 'kendoWindowCloseAction',\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.button'\n      }],\n      selector: 'button[kendoWindowCloseAction]' // eslint-disable-line\n\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: DragResizeService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    window: [{\n      type: Input\n    }],\n    buttonType: [{\n      type: HostBinding,\n      args: ['attr.type']\n    }],\n    buttonClass: [{\n      type: HostBinding,\n      args: ['class.k-window-action']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\n/**\n * Represents the [Kendo UI Window component for Angular]({% slug overview_window_dialogs %}).\n */\n\n\nclass WindowComponent {\n  constructor(el, renderer, service, navigation, ngZone, localization) {\n    this.el = el;\n    this.renderer = renderer;\n    this.service = service;\n    this.navigation = navigation;\n    this.ngZone = ngZone;\n    this.localization = localization;\n    /**\n     * Specifies if the content of the component is persisted in the DOM when minimized.\n     * @default false\n     */\n\n    this.keepContent = false;\n    /**\n     * Fires when the user starts to move the Window.\n     */\n\n    this.dragStart = new EventEmitter();\n    /**\n     * Fires when the Window was moved by the user.\n     */\n\n    this.dragEnd = new EventEmitter();\n    /**\n     * Fires when the user starts to resize the Window.\n     */\n\n    this.resizeStart = new EventEmitter();\n    /**\n     * Fires when the Window was resized by the user.\n     */\n\n    this.resizeEnd = new EventEmitter();\n    /**\n     * Fires when the user closes the Window.\n     */\n\n    this.close = new EventEmitter();\n    /**\n     * Fires when the `width` property of the component was updated. The event is triggered only after the resizing\n     * has ended. The event data contains the new width. Allows a two-way binding of the `width` property.\n     */\n\n    this.widthChange = new EventEmitter();\n    /**\n     * Fires when the `height` property of the component was updated. The event is triggered only after the resizing\n     * has ended. The event data contains the new height. Allows a two-way binding of the `height` property.\n     */\n\n    this.heightChange = new EventEmitter();\n    /**\n     * Fires when the `top` property of the component was updated. The event is triggered only after the dragging\n     * and resizing have ended. The event data contains the new top offset. Allows a two-way binding of the `top` property.\n     */\n\n    this.topChange = new EventEmitter();\n    /**\n     * Fires when the `left` property of the component was updated. The event is triggered only after the dragging\n     * and resizing have ended. The event data contains the new left offset. Allows a two-way binding of the `left` property.\n     */\n\n    this.leftChange = new EventEmitter();\n    /**\n     * Fires when the `state` property of the component was updated. The event data contains the new state. Allows a\n     * two-way binding of the `state` property.\n     */\n\n    this.stateChange = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.messages = {};\n    this.tabIndex = 0;\n    this.role = 'dialog';\n    /**\n     * @hidden\n     */\n\n    this.titleId = null;\n    this.draged = false;\n    this.resized = false;\n    this.windowSubscription = new Subscription();\n    this.domSubs = new Subscription();\n    validatePackage(packageMetadata);\n    this.direction = this.localization.rtl ? 'rtl' : 'ltr';\n    this.localizationChangeSubscription = this.localization.changes.subscribe(({\n      rtl\n    }) => this.direction = rtl ? 'rtl' : 'ltr');\n    this.resizeDirections = RESIZE_DIRECTIONS;\n    this.subscribeEvents();\n    this.titleId = this.generateTitleId();\n  }\n  /**\n   * Specifies whether the user will be able to drag the component.\n   * @default true\n   */\n\n\n  set draggable(value) {\n    this.options.draggable = value;\n  }\n\n  get draggable() {\n    return this.options.draggable;\n  }\n  /**\n   * Specifies whether the user will be able to resize the component.\n   * @default true\n   */\n\n\n  set resizable(value) {\n    this.options.resizable = value;\n  }\n\n  get resizable() {\n    return this.options.resizable;\n  }\n  /**\n   * @hidden\n   */\n\n\n  set cssClass(classes) {\n    this.setServiceClasses(this._cssClass, classes);\n    this._cssClass = classes;\n  }\n\n  get cssClass() {\n    return this._cssClass;\n  }\n  /**\n   * @hidden\n   */\n\n\n  set htmlAttributes(attributes) {\n    setHTMLAttributes(attributes, this.renderer, this.el.nativeElement);\n    const el = this.el.nativeElement;\n    const dir = el.getAttribute('dir');\n    const tIndex = el.getAttribute('tabindex');\n\n    if (this.direction !== dir) {\n      this.direction = dir;\n    }\n\n    if (this.tabIndex !== tIndex) {\n      this.tabIndex = tIndex;\n    }\n\n    this._htmlAttributes = attributes;\n  }\n\n  get htmlAttributes() {\n    return this._htmlAttributes;\n  }\n  /**\n   * Specifies the initial state of the component.\n   * If not specified, the value is set to `default`.\n   *\n   * The possible values are:\n   * * `minimized`\n   * * `maximized`\n   * * `default`\n   */\n\n\n  set state(value) {\n    this.options.state = value;\n  }\n\n  get state() {\n    return this.options.state;\n  }\n  /**\n   * Specifies the minimum width of the component.\n   * The `minWidth` property has to be set in pixels.\n   * @default 120\n   */\n\n\n  set minWidth(value) {\n    this.setOption('minWidth', value);\n  }\n\n  get minWidth() {\n    return this.options.minWidth;\n  }\n  /**\n   * Specifies the minimum height of the Window.\n   * The `minHeight` property has to be set in pixels.\n   * @default 100\n   */\n\n\n  set minHeight(value) {\n    this.setOption('minHeight', value);\n  }\n\n  get minHeight() {\n    return this.options.minHeight;\n  }\n  /**\n   * Specifies the width of the Window.\n   * The `width` property has to be set in pixels.\n   */\n\n\n  set width(value) {\n    this.setOption('width', value);\n  }\n\n  get width() {\n    return this.options.width;\n  }\n  /**\n   * Specifies the height of the Window.\n   * The `height` property has to be set in pixels.\n   */\n\n\n  set height(value) {\n    this.setOption('height', value);\n  }\n\n  get height() {\n    return this.options.height;\n  }\n  /**\n   * Specifies the initial top offset of the Window.\n   * The `top` property has to be set in pixels.\n   */\n\n\n  set top(value) {\n    this.setOption('top', value);\n  }\n\n  get top() {\n    return this.options.top;\n  }\n  /**\n   * Specifies the initial left offset of the Window.\n   * Numeric values are treated as pixels.\n   */\n\n\n  set left(value) {\n    this.setOption('left', value);\n  }\n\n  get left() {\n    return this.options.left;\n  }\n\n  get closeButtonTitle() {\n    if (this.messages && this.messages.closeTitle) {\n      return this.messages.closeTitle;\n    }\n\n    return this.localization.get('closeTitle');\n  }\n\n  get restoreButtonTitle() {\n    if (this.messages && this.messages.restoreTitle) {\n      return this.messages.restoreTitle;\n    }\n\n    return this.localization.get('restoreTitle');\n  }\n\n  get maximizeButtonTitle() {\n    if (this.messages && this.messages.maximizeTitle) {\n      return this.messages.maximizeTitle;\n    }\n\n    return this.localization.get('maximizeTitle');\n  }\n\n  get minimizeButtonTitle() {\n    if (this.messages && this.messages.minimizeTitle) {\n      return this.messages.minimizeTitle;\n    }\n\n    return this.localization.get('minimizeTitle');\n  }\n\n  get hostClasses() {\n    return true;\n  }\n\n  get dir() {\n    return this.direction;\n  }\n\n  ngAfterViewInit() {\n    this.setNextZIndex();\n    this.handleInitialFocus();\n    this.ngZone.runOutsideAngular(() => Promise.resolve(null).then(() => this.setInitialOffset()));\n    this.initDomEvents();\n\n    if (this.titleBarView || this.titleBarContent) {\n      this.renderer.setAttribute(this.el.nativeElement, 'aria-labelledby', this.titleId);\n    }\n  }\n\n  ngOnInit() {\n    this.renderer.removeAttribute(this.el.nativeElement, 'title');\n    this.service.init(this.el);\n  }\n\n  ngOnChanges(changes) {\n    OFFSET_STYLES.forEach(style => {\n      if (isChanged(style, changes)) {\n        this.setStyle(style, this.options[style]);\n      }\n    });\n\n    if (isChanged('draggable', changes)) {\n      const titleBar = isPresent(this.titleBarContent) ? this.titleBarContent : this.titleBarView;\n\n      if (isTruthy(changes.draggable.currentValue)) {\n        titleBar.subscribeDrag();\n      } else {\n        titleBar.unsubscribeDrag();\n      }\n    }\n\n    if (isChanged('state', changes)) {\n      if (isPresent(this.service.lastAction)) {\n        this.service.lastAction = null;\n      } else {\n        this.service.applyManualState();\n        this.updateAllOffset();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.windowSubscription) {\n      this.windowSubscription.unsubscribe();\n    }\n\n    if (this.domSubs) {\n      this.domSubs.unsubscribe();\n    }\n\n    this.localizationChangeSubscription.unsubscribe();\n  }\n  /**\n   * Focuses the wrapper of the Window component.\n   */\n\n\n  focus() {\n    const wrapper = this.el.nativeElement;\n\n    if (isPresent(wrapper)) {\n      wrapper.focus();\n    }\n  }\n  /**\n   * Brings the current Window component on top of other Window components on the page.\n   */\n\n\n  bringToFront() {\n    this.setNextZIndex();\n  }\n  /**\n   * Manually updates the `width` or `height` option of the Window.\n   * The required style will be applied to the Window wrapper element and the\n   * corresponding property of the component instance will be updated.\n   * This method is intended to be used for sizing dynamically created components using the\n   * [`WindowService`]({% slug api_dialog_windowservice %})\n   * @param {WindowDimensionSetting} dimension - The option that will be updated\n   * @param {number} value - The value set in pixels\n   */\n\n\n  setDimension(dimension, value) {\n    this.setOption(dimension, value);\n    this.setStyle(dimension, value);\n  }\n  /**\n   * Manually updates the `top` or `left` offset of the Window.\n   * The required style will be applied to the Window wrapper element and the\n   * corresponding property of the component instance will be updated.\n   * This method is intended to be used for positioning dynamically created components using the\n   * [`WindowService`]({% slug api_dialog_windowservice %})\n   * @param {WindowOffsetSetting} offset - The option that will be updated\n   * @param {number} value - The value set in pixels\n   */\n\n\n  setOffset(offset, value) {\n    this.setOption(offset, value);\n    this.setStyle(offset, value);\n  }\n\n  get showDefaultTitleBar() {\n    return !isPresent(this.titleBarContent);\n  }\n\n  get styleMinWidth() {\n    return this.minWidth + 'px';\n  }\n\n  get styleMinHeight() {\n    return this.minHeight + 'px';\n  }\n\n  get stylePosition() {\n    return this.options.position;\n  }\n\n  get wrapperMaximizedClass() {\n    return this.state === 'maximized';\n  }\n\n  get wrapperMinimizedClass() {\n    return this.state === 'minimized';\n  }\n  /**\n   * @hidden\n   */\n\n\n  onComponentFocus() {\n    this.renderer.addClass(this.el.nativeElement, 'k-focus');\n    this.setNextZIndex();\n  }\n  /**\n   * @hidden\n   */\n\n\n  onComponentBlur() {\n    this.renderer.removeClass(this.el.nativeElement, 'k-focus');\n  }\n\n  subscribeEvents() {\n    if (!isDocumentAvailable()) {\n      return;\n    }\n\n    this.windowSubscription.add(this.service.focus.subscribe(() => {\n      this.el.nativeElement.focus();\n    }));\n    this.windowSubscription.add(this.service.dragStart.subscribe(() => {\n      this.draged = true;\n      this.ngZone.run(() => {\n        this.dragStart.emit();\n      });\n    }));\n    this.windowSubscription.add(this.service.dragEnd.subscribe(() => {\n      if (this.draged) {\n        this.draged = false;\n        this.ngZone.run(() => {\n          this.dragEnd.emit();\n        });\n      }\n    }));\n    this.windowSubscription.add(this.service.close.subscribe(() => {\n      this.close.emit();\n    }));\n    this.windowSubscription.add(this.service.resizeStart.subscribe(() => {\n      this.resized = true;\n      this.ngZone.run(() => {\n        this.resizeStart.emit();\n      });\n    }));\n    this.windowSubscription.add(this.service.resizeEnd.subscribe(() => {\n      if (this.resized) {\n        this.resized = false;\n        this.ngZone.run(() => {\n          this.resizeEnd.emit();\n        });\n      }\n    }));\n    this.windowSubscription.add(this.service.change.subscribe(ev => {\n      OFFSET_STYLES.forEach(style => {\n        if (isPresent(ev[style])) {\n          this.setStyle(style, ev[style]);\n\n          if (this.state !== 'maximized') {\n            const emitter = this[style + 'Change'];\n\n            if (emitter.observers.length) {\n              this.ngZone.run(() => {\n                emitter.emit(ev[style]);\n              });\n            }\n          }\n        }\n      });\n    }));\n    this.windowSubscription.add(this.service.stateChange.subscribe(state => {\n      if (isPresent(this.service.lastAction)) {\n        this.updateAllOffset();\n        this.stateChange.emit(state);\n      }\n    }));\n  }\n\n  initDomEvents() {\n    if (!this.el) {\n      return;\n    }\n\n    this.ngZone.runOutsideAngular(() => {\n      this.domSubs.add(this.renderer.listen(this.el.nativeElement, 'keydown', ev => {\n        this.onKeyDown(ev);\n      }));\n    });\n  }\n\n  onKeyDown(event) {\n    if (hasClasses(event.target, WINDOW_CLASSES)) {\n      this.navigation.process(event);\n    }\n  }\n\n  setServiceClasses(prevValue, value) {\n    const el = this.el.nativeElement;\n\n    if (prevValue) {\n      parseCSSClassNames(prevValue).forEach(className => {\n        this.renderer.removeClass(el, className);\n      });\n    }\n\n    if (value) {\n      parseCSSClassNames(value).forEach(className => {\n        this.renderer.addClass(el, className);\n      });\n    }\n  }\n\n  setNextZIndex() {\n    const currentZIndex = this.el.nativeElement.style['z-index'];\n    const nextPossibleZIndex = this.service.nextPossibleZIndex;\n\n    if (!currentZIndex || nextPossibleZIndex - currentZIndex > 1) {\n      this.renderer.setStyle(this.el.nativeElement, \"z-index\", this.service.nextZIndex);\n    }\n  }\n\n  setInitialOffset() {\n    if (this.state !== 'maximized') {\n      this.updateAllOffset();\n\n      if (!isPresent(this.left) || !isPresent(this.top)) {\n        this.service.center();\n      }\n    } else {\n      const viewPort = this.service.windowViewPort;\n      this.setStyle('width', viewPort.width);\n      this.setStyle('height', viewPort.height);\n      this.setStyle('top', 0);\n      this.setStyle('left', 0);\n    }\n  }\n\n  updateAllOffset() {\n    OFFSET_STYLES.forEach(style => {\n      if (isPresent(this[style])) {\n        this.setStyle(style, this[style]);\n      } else {\n        this.removeStyle(style);\n      }\n    });\n  }\n\n  setStyle(style, value) {\n    this.renderer.setStyle(this.el.nativeElement, style, value + 'px');\n  }\n\n  removeStyle(style) {\n    this.renderer.removeStyle(this.el.nativeElement, style);\n  }\n\n  get options() {\n    return this.service.options;\n  }\n\n  setOption(style, value) {\n    if (typeof value !== 'number' && typeof value !== 'string') {\n      return;\n    }\n\n    const parsedValue = typeof value === 'number' ? value : parseInt(value, 10);\n    this.options[style] = parsedValue;\n    this.service.setRestoreOption(style, parsedValue);\n  }\n\n  handleInitialFocus() {\n    const wrapper = this.el.nativeElement;\n\n    if (this.autoFocusedElement) {\n      const initiallyFocusedElement = wrapper.querySelector(this.autoFocusedElement);\n\n      if (initiallyFocusedElement) {\n        initiallyFocusedElement.focus();\n      }\n    } else {\n      this.focus();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  generateTitleId() {\n    return 'kendo-window-title-' + Math.ceil(Math.random() * 1000000).toString();\n  }\n\n}\n\nWindowComponent.ɵfac = function WindowComponent_Factory(t) {\n  return new (t || WindowComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(DragResizeService), i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nWindowComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: WindowComponent,\n  selectors: [[\"kendo-window\"]],\n  contentQueries: function WindowComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, WindowTitleBarComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.titleBarContent = _t.first);\n    }\n  },\n  viewQuery: function WindowComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(WindowTitleBarComponent, 5);\n      i0.ɵɵviewQuery(ResizeHandleDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.titleBarView = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.resizeHandles = _t);\n    }\n  },\n  hostVars: 15,\n  hostBindings: function WindowComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focus\", function WindowComponent_focus_HostBindingHandler() {\n        return ctx.onComponentFocus();\n      })(\"blur\", function WindowComponent_blur_HostBindingHandler() {\n        return ctx.onComponentBlur();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabIndex\", ctx.tabIndex)(\"role\", ctx.role)(\"dir\", ctx.dir);\n      i0.ɵɵstyleProp(\"min-width\", ctx.styleMinWidth)(\"min-height\", ctx.styleMinHeight)(\"position\", ctx.stylePosition);\n      i0.ɵɵclassProp(\"k-window\", ctx.hostClasses)(\"k-window-maximized\", ctx.wrapperMaximizedClass)(\"k-window-minimized\", ctx.wrapperMinimizedClass);\n    }\n  },\n  inputs: {\n    autoFocusedElement: \"autoFocusedElement\",\n    title: \"title\",\n    draggable: \"draggable\",\n    resizable: \"resizable\",\n    keepContent: \"keepContent\",\n    state: \"state\",\n    minWidth: \"minWidth\",\n    minHeight: \"minHeight\",\n    width: \"width\",\n    height: \"height\",\n    top: \"top\",\n    left: \"left\"\n  },\n  outputs: {\n    dragStart: \"dragStart\",\n    dragEnd: \"dragEnd\",\n    resizeStart: \"resizeStart\",\n    resizeEnd: \"resizeEnd\",\n    close: \"close\",\n    widthChange: \"widthChange\",\n    heightChange: \"heightChange\",\n    topChange: \"topChange\",\n    leftChange: \"leftChange\",\n    stateChange: \"stateChange\"\n  },\n  exportAs: [\"kendoWindow\"],\n  features: [i0.ɵɵProvidersFeature([DragResizeService, NavigationService, LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.window'\n  }]), i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c18,\n  decls: 6,\n  vars: 4,\n  consts: function () {\n    let i18n_9;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the close button\n       * @meaning kendo.window.closeTitle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DIALOG_FESM2015_KENDO_ANGULAR_DIALOG_JS_10 = goog.getMsg(\"Close\");\n      i18n_9 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DIALOG_FESM2015_KENDO_ANGULAR_DIALOG_JS_10;\n    } else {\n      i18n_9 = $localize`:kendo.window.closeTitle|The title of the close button:Close`;\n    }\n\n    let i18n_11;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the restore button\n       * @meaning kendo.window.restoreTitle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DIALOG_FESM2015_KENDO_ANGULAR_DIALOG_JS_12 = goog.getMsg(\"Restore\");\n      i18n_11 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DIALOG_FESM2015_KENDO_ANGULAR_DIALOG_JS_12;\n    } else {\n      i18n_11 = $localize`:kendo.window.restoreTitle|The title of the restore button:Restore`;\n    }\n\n    let i18n_13;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the maximize button\n       * @meaning kendo.window.maximizeTitle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DIALOG_FESM2015_KENDO_ANGULAR_DIALOG_JS_14 = goog.getMsg(\"Maximize\");\n      i18n_13 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DIALOG_FESM2015_KENDO_ANGULAR_DIALOG_JS_14;\n    } else {\n      i18n_13 = $localize`:kendo.window.maximizeTitle|The title of the maximize button:Maximize`;\n    }\n\n    let i18n_15;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the minimize button\n       * @meaning kendo.window.minimizeTitle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DIALOG_FESM2015_KENDO_ANGULAR_DIALOG_JS_16 = goog.getMsg(\"Minimize\");\n      i18n_15 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DIALOG_FESM2015_KENDO_ANGULAR_DIALOG_JS_16;\n    } else {\n      i18n_15 = $localize`:kendo.window.minimizeTitle|The title of the minimize button:Minimize`;\n    }\n\n    return [[\"kendoWindowLocalizedMessages\", \"\", \"closeTitle\", i18n_9, \"restoreTitle\", i18n_11, \"maximizeTitle\", i18n_13, \"minimizeTitle\", i18n_15], [3, \"template\", \"id\", 4, \"ngIf\"], [4, \"ngIf\"], [\"class\", \"k-content k-window-content\", 3, \"hidden\", 4, \"ngIf\"], [3, \"ngIf\"], [3, \"template\", \"id\"], [1, \"k-window-title\"], [1, \"k-window-actions\"], [\"kendoWindowMinimizeAction\", \"\"], [\"kendoWindowMaximizeAction\", \"\"], [\"kendoWindowRestoreAction\", \"\"], [\"kendoWindowCloseAction\", \"\"], [1, \"k-content\", \"k-window-content\", 3, \"hidden\"], [3, \"ngTemplateOutlet\"], [\"kendoWindowResizeHandle\", \"\", \"kendoDraggable\", \"\", 3, \"direction\", 4, \"ngFor\", \"ngForOf\"], [\"kendoWindowResizeHandle\", \"\", \"kendoDraggable\", \"\", 3, \"direction\"]];\n  },\n  template: function WindowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c17);\n      i0.ɵɵelementContainerStart(0, 0);\n      i0.ɵɵelementContainerStart(1);\n      i0.ɵɵtemplate(2, WindowComponent_kendo_window_titlebar_2_Template, 8, 11, \"kendo-window-titlebar\", 1);\n      i0.ɵɵtemplate(3, WindowComponent_ng_content_3_Template, 1, 0, \"ng-content\", 2);\n      i0.ɵɵtemplate(4, WindowComponent_div_4_Template, 3, 3, \"div\", 3);\n      i0.ɵɵtemplate(5, WindowComponent_ng_template_5_Template, 1, 1, \"ng-template\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showDefaultTitleBar);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.showDefaultTitleBar);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.state !== \"minimized\" || ctx.keepContent);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.resizable);\n    }\n  },\n  directives: [LocalizedMessagesDirective, i6.NgIf, WindowTitleBarComponent, WindowMinimizeActionDirective, WindowMaximizeActionDirective, WindowRestoreActionDirective, WindowCloseActionDirective, i6.NgTemplateOutlet, i6.NgForOf, ResizeHandleDirective, i1$1.DraggableDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WindowComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoWindow',\n      providers: [DragResizeService, NavigationService, LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.window'\n      }],\n      selector: 'kendo-window',\n      template: `\n        <ng-container kendoWindowLocalizedMessages\n            i18n-closeTitle=\"kendo.window.closeTitle|The title of the close button\"\n            closeTitle=\"Close\"\n\n            i18n-restoreTitle=\"kendo.window.restoreTitle|The title of the restore button\"\n            restoreTitle=\"Restore\"\n\n            i18n-maximizeTitle=\"kendo.window.maximizeTitle|The title of the maximize button\"\n            maximizeTitle=\"Maximize\"\n\n            i18n-minimizeTitle=\"kendo.window.minimizeTitle|The title of the minimize button\"\n            minimizeTitle=\"Minimize\"\n        >\n        <ng-container>\n\n        <kendo-window-titlebar *ngIf=\"showDefaultTitleBar\" [template]=\"titleBarTemplate\" [id]=\"titleId\">\n            <div class=\"k-window-title\">{{ title }}</div>\n            <div class=\"k-window-actions\">\n                <button kendoWindowMinimizeAction  [attr.title]=\"minimizeButtonTitle\" [attr.aria-label]=\"minimizeButtonTitle\"></button>\n                <button kendoWindowMaximizeAction [attr.title]=\"maximizeButtonTitle\" [attr.aria-label]=\"maximizeButtonTitle\"></button>\n                <button kendoWindowRestoreAction [attr.title]=\"restoreButtonTitle\" [attr.aria-label]=\"restoreButtonTitle\"></button>\n                <button kendoWindowCloseAction [attr.title]=\"closeButtonTitle\" [attr.aria-label]=\"closeButtonTitle\"></button>\n            </div>\n        </kendo-window-titlebar>\n        <ng-content select=\"kendo-window-titlebar\" *ngIf=\"!showDefaultTitleBar\"></ng-content>\n\n        <div *ngIf=\"state !== 'minimized' || keepContent\"\n            [hidden]=\"state === 'minimized' && keepContent\"\n            class=\"k-content k-window-content\"\n        >\n            <ng-content *ngIf=\"!contentTemplate\"></ng-content>\n            <ng-template [ngTemplateOutlet]=\"contentTemplate\" *ngIf=\"contentTemplate\"></ng-template>\n        </div>\n\n        <ng-template [ngIf]='resizable'>\n            <div *ngFor='let dir of resizeDirections'\n                [direction]=\"dir\"\n                kendoWindowResizeHandle\n                kendoDraggable>\n            </div>\n        </ng-template>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: DragResizeService\n    }, {\n      type: NavigationService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1.LocalizationService\n    }];\n  }, {\n    autoFocusedElement: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    draggable: [{\n      type: Input\n    }],\n    resizable: [{\n      type: Input\n    }],\n    keepContent: [{\n      type: Input\n    }],\n    state: [{\n      type: Input\n    }],\n    minWidth: [{\n      type: Input\n    }],\n    minHeight: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    top: [{\n      type: Input\n    }],\n    left: [{\n      type: Input\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }],\n    resizeStart: [{\n      type: Output\n    }],\n    resizeEnd: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    widthChange: [{\n      type: Output\n    }],\n    heightChange: [{\n      type: Output\n    }],\n    topChange: [{\n      type: Output\n    }],\n    leftChange: [{\n      type: Output\n    }],\n    stateChange: [{\n      type: Output\n    }],\n    tabIndex: [{\n      type: HostBinding,\n      args: ['attr.tabIndex']\n    }],\n    role: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-window']\n    }],\n    dir: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    titleBarView: [{\n      type: ViewChild,\n      args: [WindowTitleBarComponent, {\n        static: false\n      }]\n    }],\n    titleBarContent: [{\n      type: ContentChild,\n      args: [WindowTitleBarComponent, {\n        static: false\n      }]\n    }],\n    resizeHandles: [{\n      type: ViewChildren,\n      args: [ResizeHandleDirective]\n    }],\n    styleMinWidth: [{\n      type: HostBinding,\n      args: ['style.minWidth']\n    }],\n    styleMinHeight: [{\n      type: HostBinding,\n      args: ['style.minHeight']\n    }],\n    stylePosition: [{\n      type: HostBinding,\n      args: ['style.position']\n    }],\n    wrapperMaximizedClass: [{\n      type: HostBinding,\n      args: ['class.k-window-maximized']\n    }],\n    wrapperMinimizedClass: [{\n      type: HostBinding,\n      args: ['class.k-window-minimized']\n    }],\n    onComponentFocus: [{\n      type: HostListener,\n      args: ['focus']\n    }],\n    onComponentBlur: [{\n      type: HostListener,\n      args: ['blur']\n    }]\n  });\n})();\n/**\n * Indicates that the **Close** button of a Window that is opened through `WindowService` is clicked.\n */\n\n\nclass WindowCloseResult {}\n/**\n * Holds references to the object instance of the Window.\n * Controls the Windows that were opened through `WindowService`\n * ([see example]({% slug api_dialog_windowservice %}#toc-open)).\n */\n\n\nclass WindowRef {}\n/**\n * The settings for the Window actions when the Window is opened through `WindowService`\n * ([see example]({% slug api_dialog_windowservice %}#toc-open)).\n */\n\n\nclass WindowSettings {}\n/**\n * @hidden\n */\n\n\nclass WindowContainerService {\n  set container(container) {\n    WindowContainerService.container = container;\n  }\n\n  get container() {\n    return WindowContainerService.container;\n  }\n\n}\n\nWindowContainerService.container = null;\n\nWindowContainerService.ɵfac = function WindowContainerService_Factory(t) {\n  return new (t || WindowContainerService)();\n};\n\nWindowContainerService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: WindowContainerService,\n  factory: WindowContainerService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WindowContainerService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nconst isNotComponent = component => isString(component) || component instanceof TemplateRef;\n\nclass WindowInjector {\n  constructor(getWindowRef, parentInjector) {\n    this.getWindowRef = getWindowRef;\n    this.parentInjector = parentInjector;\n  }\n\n  get(token, notFoundValue) {\n    if (token === WindowRef) {\n      return this.getWindowRef();\n    }\n\n    return this.parentInjector.get(token, notFoundValue);\n  }\n\n}\n/**\n * A service for opening Windows dynamically\n * ([see example]({% slug service_window %})).\n */\n\n\nclass WindowService {\n  constructor(\n  /**\n   * @hidden\n   */\n  resolver, containerService) {\n    this.resolver = resolver;\n    this.containerService = containerService;\n  }\n  /**\n   * Opens a Window component.\n   *\n   * @param {WindowSettings} settings - The settings that define the Window.\n   * @returns {WindowRef} - A reference to the Window object.\n   *\n   * @example\n   *\n   * ```ts-no-run\n   * _@Component({\n   *   selector: 'my-app',\n   *   template: `\n   *     <button kendoButton (click)=\"open()\">Open window</button>\n   *     <div kendoWindowContainer></div>\n   *   `\n   * })\n   * export class AppComponent {\n   *     constructor( private windowService: WindowService ) {}\n   *\n   *     public open() {\n   *         var window = this.windowService.open({\n   *           title: \"My window\",\n   *           content: \"My content!\"\n   *         });\n   *\n   *         window.result.subscribe((result) => {\n   *           if (result instanceof WindowCloseResult) {\n   *             console.log(\"Window was closed\");\n   *           }\n   *         });\n   *     }\n   * }\n   * ```\n   *\n   */\n\n\n  open(settings) {\n    const factory = this.resolver.resolveComponentFactory(WindowComponent);\n    const container = settings.appendTo || this.containerService.container;\n\n    if (!container) {\n      throw new Error(`Cannot attach window to the page.\n                Add an element that uses the kendoWindowContainer directive, or set the 'appendTo' property.\n                See https://www.telerik.com/kendo-angular-ui/components/dialogs/window/service/\n            `);\n    }\n\n    const windowRef = {\n      close: () => {},\n      content: null,\n      result: null,\n      window: null\n    };\n    const content = this.contentFrom(settings.content, container, windowRef);\n    const window = container.createComponent(factory, undefined, undefined, content.nodes);\n    windowRef.window = window;\n    this.applyOptions(window.instance, settings);\n    const apiClose = new Subject();\n\n    const close = e => {\n      apiClose.next(e || new WindowCloseResult());\n\n      if (content.componentRef) {\n        content.componentRef.destroy();\n      }\n\n      window.destroy();\n    };\n\n    const result = merge(apiClose, window.instance.close.pipe(map(e => e ? e : new WindowCloseResult()), filter(e => {\n      if (settings.preventClose) {\n        // add windowRef only when using component\n        const windowRefParameter = isNotComponent(settings.content) ? undefined : windowRef;\n        return !settings.preventClose(e, windowRefParameter);\n      }\n\n      return true;\n    }))).pipe(take(1), // Takes care for multiple subscriptions:\n    // We subscribe internally and the user may subscribe to get a close result - window.result.subscribe().\n    // This causes multiple subscriptions to the same source and thus multiple emissions. share() solves that.\n    share());\n    result.subscribe(close);\n    windowRef.close = close;\n    windowRef.result = result;\n    window.changeDetectorRef.markForCheck();\n    return windowRef;\n  }\n\n  applyOptions(instance, options) {\n    if (isPresent(options.htmlAttributes)) {\n      instance.htmlAttributes = options.htmlAttributes;\n    }\n\n    if (isPresent(options.cssClass)) {\n      instance.cssClass = options.cssClass;\n    }\n\n    if (isPresent(options.title)) {\n      instance.title = options.title;\n    }\n\n    if (isPresent(options.keepContent)) {\n      instance.keepContent = options.keepContent;\n    }\n\n    if (isPresent(options.width)) {\n      instance.width = options.width;\n    }\n\n    if (isPresent(options.minWidth)) {\n      instance.minWidth = options.minWidth;\n    }\n\n    if (isPresent(options.height)) {\n      instance.height = options.height;\n    }\n\n    if (isPresent(options.minHeight)) {\n      instance.minHeight = options.minHeight;\n    }\n\n    if (isPresent(options.left)) {\n      instance.left = options.left;\n    }\n\n    if (isPresent(options.top)) {\n      instance.top = options.top;\n    }\n\n    if (isPresent(options.draggable)) {\n      instance.draggable = options.draggable;\n    }\n\n    if (isPresent(options.resizable)) {\n      instance.resizable = options.resizable;\n    }\n\n    if (isPresent(options.messages && options.messages.closeTitle)) {\n      instance.messages.closeTitle = options.messages.closeTitle;\n    }\n\n    if (isPresent(options.messages && options.messages.restoreTitle)) {\n      instance.messages.restoreTitle = options.messages.restoreTitle;\n    }\n\n    if (isPresent(options.messages && options.messages.maximizeTitle)) {\n      instance.messages.maximizeTitle = options.messages.maximizeTitle;\n    }\n\n    if (isPresent(options.messages && options.messages.minimizeTitle)) {\n      instance.messages.minimizeTitle = options.messages.minimizeTitle;\n    }\n\n    if (isPresent(options.autoFocusedElement)) {\n      instance.autoFocusedElement = options.autoFocusedElement;\n    }\n\n    if (isPresent(options.state)) {\n      instance.state = options.state;\n\n      if (options.state === 'minimized') {\n        instance.keepContent = true;\n      }\n    }\n\n    if (options.content instanceof TemplateRef) {\n      instance.contentTemplate = options.content;\n    }\n\n    if (options.titleBarContent instanceof TemplateRef) {\n      instance.titleBarTemplate = options.titleBarContent;\n    }\n  }\n\n  contentFrom(content, container, windowRef) {\n    const renderer = container.injector.get(Renderer2);\n    let nodes = [];\n    let componentRef = null;\n\n    if (typeof content === 'string') {\n      nodes = [renderer.createText(content)];\n    } else if (content && !(content instanceof TemplateRef)) {\n      const injector = new WindowInjector(() => windowRef, container.injector);\n      const factory = this.resolver.resolveComponentFactory(content);\n      componentRef = container.createComponent(factory, undefined, injector);\n      nodes = [componentRef.location.nativeElement];\n      windowRef.content = componentRef;\n    }\n\n    return {\n      componentRef,\n      nodes: [[], nodes // Content\n      ]\n    };\n  }\n\n}\n\nWindowService.ɵfac = function WindowService_Factory(t) {\n  return new (t || WindowService)(i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(WindowContainerService));\n};\n\nWindowService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: WindowService,\n  factory: WindowService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WindowService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: WindowContainerService,\n      decorators: [{\n        type: Inject,\n        args: [WindowContainerService]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Provides an insertion point for the Dialogs which are created through the\n * Dialog service ([see example]({% slug api_dialog_dialogservice %}#toc-open)).\n * Created Dialogs will be mounted after that element.\n *\n * @example\n * ```html-no-run\n * <div kendoDialogContainer></div>\n * ```\n */\n\n\nclass DialogContainerDirective {\n  constructor(container, service) {\n    service.container = container;\n  }\n\n}\n\nDialogContainerDirective.ɵfac = function DialogContainerDirective_Factory(t) {\n  return new (t || DialogContainerDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(DialogContainerService));\n};\n\nDialogContainerDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DialogContainerDirective,\n  selectors: [[\"\", \"kendoDialogContainer\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DialogContainerDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDialogContainer]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ViewContainerRef\n    }, {\n      type: DialogContainerService\n    }];\n  }, null);\n})();\n/**\n * Custom component messages override default component messages\n * ([see example]({% slug globalization_dialogs %}#toc-localization)).\n */\n\n\nclass CustomMessagesComponent extends Messages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n  get override() {\n    return true;\n  }\n\n}\n\nCustomMessagesComponent.ɵfac = function CustomMessagesComponent_Factory(t) {\n  return new (t || CustomMessagesComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nCustomMessagesComponent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CustomMessagesComponent,\n  selectors: [[\"kendo-dialog-messages\"], [\"kendo-window-messages\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: Messages,\n    useExisting: forwardRef(() => CustomMessagesComponent)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomMessagesComponent, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: Messages,\n        useExisting: forwardRef(() => CustomMessagesComponent)\n      }],\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: 'kendo-dialog-messages, kendo-window-messages'\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nconst SHARED_DIRECTIVES = [DialogActionsComponent, CustomMessagesComponent, LocalizedMessagesDirective];\n/**\n * @hidden\n */\n\nclass SharedModule {}\n\nSharedModule.ɵfac = function SharedModule_Factory(t) {\n  return new (t || SharedModule)();\n};\n\nSharedModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SharedModule\n});\nSharedModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule], CommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SharedModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [SHARED_DIRECTIVES],\n      exports: [SHARED_DIRECTIVES, CommonModule],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nconst DIALOG_DIRECTIVES = [DialogComponent, DialogTitleBarComponent];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Dialog component that includes all Dialog components and directives.\n * Imports `DialogModule` into the [root module](link:site.data.urls.angular['ngmodules']#angular-modularity)\n * of your application or into any other sub-module that will use the Dialog component.\n *\n * @example\n * ```ts-no-run\n * import { NgModule } from '@angular/core';\n * import { BrowserModule } from '@angular/platform-browser';\n * import { DialogModule } from '@progress/kendo-angular-dialog';\n * import { AppComponent } from './app.component';\n *\n * _@NgModule({\n *     bootstrap:    [AppComponent],\n *     declarations: [AppComponent],\n *     imports:      [BrowserModule, DialogModule]\n * })\n * export class AppModule {\n * }\n * ```\n */\n\nclass DialogModule {}\n\nDialogModule.ɵfac = function DialogModule_Factory(t) {\n  return new (t || DialogModule)();\n};\n\nDialogModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: DialogModule\n});\nDialogModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [DialogContainerService, DialogService],\n  imports: [[SharedModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DialogModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [DIALOG_DIRECTIVES, DialogContainerDirective],\n      entryComponents: [DIALOG_DIRECTIVES],\n      exports: [DIALOG_DIRECTIVES, SHARED_DIRECTIVES, DialogContainerDirective],\n      imports: [SharedModule],\n      providers: [DialogContainerService, DialogService]\n    }]\n  }], null, null);\n})();\n/**\n * Provides an insertion point for the Windows which are created through the\n * Window service ([see example]({% slug api_dialog_windowservice %}#toc-open)).\n * Created Windows will be mounted after that element.\n *\n * @example\n * ```html-no-run\n * <div kendoWindowContainer></div>\n * ```\n */\n\n\nclass WindowContainerDirective {\n  constructor(container, service) {\n    service.container = container;\n  }\n\n}\n\nWindowContainerDirective.ɵfac = function WindowContainerDirective_Factory(t) {\n  return new (t || WindowContainerDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(WindowContainerService));\n};\n\nWindowContainerDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: WindowContainerDirective,\n  selectors: [[\"\", \"kendoWindowContainer\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WindowContainerDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoWindowContainer]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ViewContainerRef\n    }, {\n      type: WindowContainerService\n    }];\n  }, null);\n})();\n\nconst WINDOW_DIRECTIVES = [ResizeHandleDirective, WindowComponent, WindowTitleBarComponent, WindowCloseActionDirective, WindowMinimizeActionDirective, WindowMaximizeActionDirective, WindowRestoreActionDirective];\nconst ENTRY_COMPONENTS = [WindowComponent, WindowTitleBarComponent];\nconst exportedModules = [WindowComponent, WindowCloseActionDirective, WindowMinimizeActionDirective, WindowMaximizeActionDirective, WindowRestoreActionDirective, WindowTitleBarComponent];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Window component. Imports `WindowModule` into the\n * [root module](link:site.data.urls.angular['ngmodules']#angular-modularity)\n * of your application or into any other sub-module that will use the Window component.\n *\n * @example\n * ```ts-no-run\n * import { NgModule } from '@angular/core';\n * import { BrowserModule } from '@angular/platform-browser';\n * import { WindowModule } from '@progress/kendo-angular-window';\n * import { AppComponent } from './app.component';\n *\n * _@NgModule({\n *     bootstrap:    [AppComponent],\n *     declarations: [AppComponent],\n *     imports:      [BrowserModule, WindowModule]\n * })\n * export class AppModule {\n * }\n * ```\n */\n\nclass WindowModule {}\n\nWindowModule.ɵfac = function WindowModule_Factory(t) {\n  return new (t || WindowModule)();\n};\n\nWindowModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: WindowModule\n});\nWindowModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [WindowContainerService, WindowService],\n  imports: [[SharedModule, DraggableModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WindowModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [WINDOW_DIRECTIVES, WindowContainerDirective],\n      entryComponents: [ENTRY_COMPONENTS],\n      exports: [exportedModules, SHARED_DIRECTIVES, WindowContainerDirective],\n      imports: [SharedModule, DraggableModule],\n      providers: [WindowContainerService, WindowService]\n    }]\n  }], null, null);\n})();\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Dialogs components.\n *\n * @example\n *\n * ```ts-no-run\n * import { DialogsModule } from '@progress/kendo-angular-dialog';\n *\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { NgModule } from '@angular/core';\n *\n * import { AppComponent } from './app.component';\n *\n * _@NgModule({\n *     declarations: [AppComponent],\n *     imports:      [BrowserModule, DialogsModule],\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\n\nclass DialogsModule {}\n\nDialogsModule.ɵfac = function DialogsModule_Factory(t) {\n  return new (t || DialogsModule)();\n};\n\nDialogsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: DialogsModule\n});\nDialogsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [DialogModule, WindowModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DialogsModule, [{\n    type: NgModule,\n    args: [{\n      exports: [DialogModule, WindowModule]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CustomMessagesComponent, DialogAction, DialogActionsComponent, DialogCloseResult, DialogComponent, DialogContainerDirective, DialogContentBase, DialogModule, DialogRef, DialogService, DialogSettings, DialogTitleBarComponent, DialogsModule, DragResizeService, LocalizedMessagesDirective, Messages, PreventableEvent, WindowCloseActionDirective, WindowCloseResult, WindowComponent, WindowContainerDirective, WindowMaximizeActionDirective, WindowMinimizeActionDirective, WindowModule, WindowRef, WindowRestoreActionDirective, WindowService, WindowSettings, WindowTitleBarComponent };","map":{"version":3,"sources":["C:/Repos/angular-kendo-grid/node_modules/@progress/kendo-angular-dialog/fesm2015/kendo-angular-dialog.js"],"names":["i0","EventEmitter","TemplateRef","Component","Input","Output","HostBinding","InjectionToken","Injectable","Inject","Optional","Directive","forwardRef","ContentChildren","ViewChildren","ViewChild","isDevMode","Renderer2","Host","HostListener","ContentChild","NgModule","i2","style","animate","keyframes","trigger","state","transition","of","Subscription","Subject","merge","delay","takeUntil","take","filter","map","share","tap","switchMap","i6","CommonModule","i1","LocalizationService","L10N_PREFIX","RTL","ComponentMessages","validatePackage","i1$1","DraggableDirective","isChanged","isDocumentAvailable","DraggableModule","offset","scrollPosition","positionWithScroll","getDocumentElement","getWindowViewPort","Button","isPresent","value","undefined","isTruthy","toClassList","classNames","String","trim","split","focusableRegex","Keys","DIALOG_ELEMENTS_HANDLING_ESC_KEY","DIALOG_ELEMENTS_HANDLING_ARROWS","WINDOW_CLASSES","hasClasses","element","namesList","Boolean","className","find","indexOf","isVisible","rect","getBoundingClientRect","width","height","window","getComputedStyle","visibility","isFocusable","checkVisibility","tagName","toLowerCase","tabIndex","getAttribute","validTabIndex","isNaN","focusable","test","disabled","setHTMLAttributes","attributes","renderer","attribute","setAttribute","parseCSSClassNames","isObject","parseObjectClassNames","isString","parseStringClassNames","Array","isArray","parseArrayClassNames","classes","Object","keys","forEach","currentClassName","splitStringToArray","push","classesArray","current","focusableSelector","join","preventDefault","originalEvent","event","stopPropagation","isWindowAvailable","preventOnDblClick","release","mouseDown","pipe","RESIZE_DIRECTIONS","OFFSET_STYLES","isNumber","isFinite","createValueWithUnit","replace","findPrimaryButton","buttons","i","length","classList","j","endsWith","DialogActionsComponent","constructor","el","layout","action","buttonGroupClassName","actions","actionsTemplate","actionsArray","Error","onButtonClick","_e","emit","buttonClass","fillMode","themeColor","cssClasses","cssClass","concat","ɵfac","ElementRef","ɵcmp","NgIf","NgTemplateOutlet","NgForOf","NgClass","type","args","selector","template","PreventableEvent","prevented","isDefaultPrevented","DIALOG_LOCALIZATION_SERVICE","TitleBarLocalizationService","prefix","messageService","rtl","dialogLocalization","get","shortKey","MessageService","ɵprov","decorators","Messages","ɵdir","closeTitle","restoreTitle","maximizeTitle","minimizeTitle","LocalizedMessagesDirective","service","provide","useExisting","providers","DialogTitleBarComponent","zone","hostElement","localizationService","close","closeButtonTitle","ngAfterViewInit","onStable","subscribe","nativeElement","querySelector","id","onCloseClick","e","eventArgs","NgZone","useValue","packageMetadata","name","productName","productCodes","publishDate","version","licensingDocsUrl","DialogCloseResult","animations","duration","direction","animationType","translate","start","end","transform","scale","startScale","endScale","origin","transformOrigin","startZoom","endZoom","startFade","endFade","opacity","createPlayer","builder","animation","animatedElement","factory","build","player","create","onDone","destroy","animateContent","defAnimationConfig","animationConfig","animationSpecs","play","DEFAULT_ANIMATION_CONFIG","DialogComponent","wrapper","localization","cdr","ngZone","actionsLayout","titleId","contentId","subscriptions","domSubs","changes","generateTitleId","generateContentId","htmlAttributes","dir","tIndex","_htmlAttributes","setServiceClasses","_cssClass","ngAfterContentInit","bubble","titlebarContent","first","handleInitialFocus","titlebarView","actionsView","initDomEvents","ngOnInit","dialog","removeAttribute","detectChanges","ngOnDestroy","s","unsubscribe","focus","runOutsideAngular","add","listen","ev","onKeyDown","target","parent","parentElement","keyCode","esc","run","left","right","handleActionButtonFocus","tab","keepFocusWithinComponent","prevValue","removeClass","addClass","primaryButton","findPrimary","autoFocusedElement","initiallyFocusedElement","shouldFocusPrimary","actionBtns","querySelectorAll","key","focusableActionButtons","getAllFocusableChildren","document","activeElement","firstFocusable","lastFocusable","getFirstAndLastFocusable","tabAfterLastFocusable","shiftKey","shiftTabAfterFirstFocusable","all","Math","ceil","random","toString","wrapperClass","styles","minWidth","maxWidth","minHeight","maxHeight","eventName","component","ChangeDetectorRef","AnimationBuilder","NgStyle","exportAs","title","descendants","static","DialogRef","DialogContentBase","dialogTitleBar","dialogActions","instance","DialogContainerService","container","DialogAction","DialogSettings","isNotComponent$1","DialogInjector","getDialogRef","parentInjector","token","notFoundValue","DialogService","resolver","containerService","open","options","resolveComponentFactory","appendTo","dialogRef","content","result","initializeDialog","contentFrom","createComponent","nodes","changeDetectorRef","markForCheck","applyOptions","apiClose","next","componentRef","preventAction","dialogRefParameter","hasContentTitle","hasContentActions","multipleTitles","multipleActions","prototype","console","warn","contentTemplate","injector","titleNodes","actionNodes","createText","from","location","ComponentFactoryResolver","newZIndex","DEFAULT_OPTIONS","draggable","position","resizable","top","createMoveStream","kendoDrag","kendoRelease","pageX","pageY","originalX","originalY","DragResizeService","change","stateChange","dragStart","dragEnd","resizeStart","resizeEnd","assign","lastAction","dragSubscription","init","restoreOptions","onDrag","startPosition","dragStarted","kendoPress","isTouch","currentPosition","ensureWidth","handleDrag","x","y","onResize","handle","startOffsetAndPosition","resizeStarted","currentOffsetAndPosition","deltaX","deltaY","handleResize","initial","old","newWidth","newHeight","newTop","newLeft","restoreAction","defaultState","storeOptions","maximizeAction","maximizeState","wnd","windowViewPort","minimizeAction","minimizeState","applyManualState","clearHeight","closeAction","windowOffset","center","scroll","max","o","off","setPosition","setRestoreOption","nextPossibleZIndex","nextZIndex","ResizeHandleDirective","hostClass","setDisplay","setStyle","WindowTitleBarComponent","dragDirective","isDraggable","subscribeDrag","subscribeStateChange","unsubscribeDrag","unsubscribeState","titleBar","stateSubscription","touchAction","NavigationService","process","up","down","handleArrow","handleEscape","altKey","handleStateChange","ctrlKey","metaKey","delta","WindowMinimizeActionDirective","_service","buttonType","icon","onClick","isDisabled","visible","WindowMaximizeActionDirective","WindowRestoreActionDirective","WindowCloseActionDirective","WindowComponent","navigation","keepContent","widthChange","heightChange","topChange","leftChange","messages","role","draged","resized","windowSubscription","localizationChangeSubscription","resizeDirections","subscribeEvents","setOption","restoreButtonTitle","maximizeButtonTitle","minimizeButtonTitle","hostClasses","setNextZIndex","Promise","resolve","then","setInitialOffset","titleBarView","titleBarContent","ngOnChanges","currentValue","updateAllOffset","bringToFront","setDimension","dimension","setOffset","showDefaultTitleBar","styleMinWidth","styleMinHeight","stylePosition","wrapperMaximizedClass","wrapperMinimizedClass","onComponentFocus","onComponentBlur","emitter","observers","currentZIndex","viewPort","removeStyle","parsedValue","parseInt","resizeHandles","WindowCloseResult","WindowRef","WindowSettings","WindowContainerService","isNotComponent","WindowInjector","getWindowRef","WindowService","settings","windowRef","preventClose","windowRefParameter","titleBarTemplate","DialogContainerDirective","ViewContainerRef","CustomMessagesComponent","override","SHARED_DIRECTIVES","SharedModule","ɵmod","ɵinj","declarations","exports","imports","DIALOG_DIRECTIVES","DialogModule","entryComponents","WindowContainerDirective","WINDOW_DIRECTIVES","ENTRY_COMPONENTS","exportedModules","WindowModule","DialogsModule"],"mappings":"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","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright © 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { EventEmitter, TemplateRef, Component, Input, Output, HostBinding, InjectionToken, Injectable, Inject, Optional, Directive, forwardRef, ContentChildren, ViewChildren, ViewChild, isDevMode, Renderer2, Host, HostListener, ContentChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/animations';\nimport { style, animate, keyframes, trigger, state, transition } from '@angular/animations';\nimport { of, Subscription, Subject, merge } from 'rxjs';\nimport { delay, takeUntil, take, filter, map, share, tap, switchMap } from 'rxjs/operators';\nimport * as i6 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@progress/kendo-angular-l10n';\nimport { LocalizationService, L10N_PREFIX, RTL, ComponentMessages } from '@progress/kendo-angular-l10n';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport * as i1$1 from '@progress/kendo-angular-common';\nimport { DraggableDirective, isChanged, isDocumentAvailable, DraggableModule } from '@progress/kendo-angular-common';\nimport { offset, scrollPosition, positionWithScroll, getDocumentElement, getWindowViewPort } from '@progress/kendo-popup-common';\nimport { Button } from '@progress/kendo-angular-buttons';\n\n/**\n * @hidden\n */\nconst isPresent = (value) => value !== null && value !== undefined;\n/**\n * @hidden\n */\nconst isTruthy = (value) => !!value;\nconst toClassList = (classNames) => String(classNames).trim().split(' ');\nconst focusableRegex = /^(?:a|input|select|textarea|button|object)$/i;\n/**\n * @hidden\n */\nvar Keys;\n(function (Keys) {\n    Keys[Keys[\"esc\"] = 27] = \"esc\";\n    Keys[Keys[\"tab\"] = 9] = \"tab\";\n    Keys[Keys[\"enter\"] = 13] = \"enter\";\n    Keys[Keys[\"space\"] = 32] = \"space\";\n    Keys[Keys[\"ctrl\"] = 17] = \"ctrl\";\n    Keys[Keys[\"shift\"] = 16] = \"shift\";\n    Keys[Keys[\"left\"] = 37] = \"left\";\n    Keys[Keys[\"up\"] = 38] = \"up\";\n    Keys[Keys[\"right\"] = 39] = \"right\";\n    Keys[Keys[\"down\"] = 40] = \"down\";\n})(Keys || (Keys = {}));\n/**\n * @hidden\n */\nconst DIALOG_ELEMENTS_HANDLING_ESC_KEY = 'k-dialog-wrapper k-dialog-buttongroup k-dialog-action';\n/**\n * @hidden\n */\nconst DIALOG_ELEMENTS_HANDLING_ARROWS = 'k-dialog-buttongroup';\n/**\n * @hidden\n */\nconst WINDOW_CLASSES = 'k-window';\n/**\n * @hidden\n */\nconst hasClasses = (element, classNames) => {\n    const namesList = toClassList(classNames);\n    return Boolean(toClassList(element.className).find((className) => namesList.indexOf(className) >= 0));\n};\n/**\n * @hidden\n */\nconst isVisible = (element) => {\n    const rect = element.getBoundingClientRect();\n    return !!(rect.width && rect.height) && window.getComputedStyle(element).visibility !== 'hidden';\n};\n/**\n * @hidden\n */\nconst isFocusable = (element, checkVisibility = true) => {\n    if (element.tagName) {\n        const tagName = element.tagName.toLowerCase();\n        const tabIndex = element.getAttribute('tabIndex');\n        const validTabIndex = tabIndex !== null && !isNaN(tabIndex) && tabIndex > -1;\n        let focusable = false;\n        if (focusableRegex.test(tagName)) {\n            focusable = !element.disabled;\n        }\n        else {\n            focusable = validTabIndex;\n        }\n        return focusable && (!checkVisibility || isVisible(element));\n    }\n    return false;\n};\n/**\n * @hidden\n */\nconst setHTMLAttributes = (attributes, renderer, element) => {\n    for (const attribute in attributes) {\n        if (attribute) {\n            renderer.setAttribute(element, attribute, attributes[attribute]);\n        }\n    }\n};\n/**\n * Receives CSS class declarations either as an object, string or array and returns an array of the class names.\n *\n * @hidden\n */\nconst parseCSSClassNames = (value) => {\n    if (isObject(value)) {\n        return parseObjectClassNames(value);\n    }\n    if (isString(value)) {\n        return parseStringClassNames(value);\n    }\n    if (Array.isArray(value)) {\n        return parseArrayClassNames(value);\n    }\n};\nconst parseObjectClassNames = (value) => {\n    const classes = [];\n    Object.keys(value).forEach(className => {\n        const currentClassName = splitStringToArray(className);\n        if (value[className] && currentClassName[0]) {\n            classes.push(...currentClassName);\n        }\n    });\n    return classes;\n};\nconst parseStringClassNames = (value) => {\n    const classes = [];\n    const classesArray = splitStringToArray(value);\n    classesArray.forEach(className => {\n        classes.push(className);\n    });\n    return classes;\n};\nconst parseArrayClassNames = (value) => {\n    const classes = [];\n    value.forEach((className) => {\n        const current = splitStringToArray(className);\n        if (current[0]) {\n            classes.push(...current);\n        }\n    });\n    return classes;\n};\n/**\n * @hidden\n */\nconst focusableSelector = [\n    'a[href]',\n    'area[href]',\n    'input:not([disabled])',\n    'select:not([disabled])',\n    'textarea:not([disabled])',\n    'button:not([disabled])',\n    'iframe',\n    'object',\n    'embed',\n    '*[tabindex]',\n    '*[contenteditable]'\n].join(',');\n/**\n * @hidden\n */\nconst preventDefault = ({ originalEvent: event }) => {\n    event.stopPropagation();\n    event.preventDefault();\n};\n/**\n * @hidden\n */\nconst isWindowAvailable = () => {\n    return typeof window !== 'undefined';\n};\n/**\n * @hidden\n */\nconst preventOnDblClick = release => (mouseDown) => of(mouseDown).pipe(delay(150), takeUntil(release));\n/**\n * @hidden\n */\nconst RESIZE_DIRECTIONS = ['n', 'e', 's', 'w', 'se', 'sw', 'ne', 'nw'];\n/**\n * @hidden\n */\nconst OFFSET_STYLES = ['top', 'left', 'width', 'height'];\n/**\n * @hidden\n */\nconst isString = (value) => value instanceof String || typeof value === 'string';\n/**\n * @hidden\n */\nconst isObject = (value) => isPresent(value) && !Array.isArray(value) && typeof value === 'object';\n/**\n * @hidden\n */\nconst isNumber = (value) => typeof value === 'number' && isFinite(value);\n/**\n * @hidden\n */\nconst createValueWithUnit = (value) => value + (isNumber(value) ? 'px' : '');\n/**\n * @hidden\n */\nconst splitStringToArray = (value) => value.trim().replace(/\\s+/g, \" \").split(' ');\n/**\n * @hidden\n */\nconst findPrimaryButton = (buttons) => {\n    for (let i = buttons.length - 1; i >= 0; i--) {\n        const classList = buttons[i].classList;\n        for (let j = 0; j < classList.length; j++) {\n            if (classList[j].endsWith('-primary')) {\n                return buttons[i];\n            }\n        }\n    }\n};\n\n/**\n * Specifies the action buttons of the Dialog\n * ([see example]({% slug actionbuttons_dialog %})).\n */\nclass DialogActionsComponent {\n    constructor(el) {\n        this.el = el;\n        /**\n         * Specifies the possible layout of the action buttons.\n         */\n        this.layout = 'stretched';\n        /**\n         * Fires when the user clicks an action button.\n         */\n        this.action = new EventEmitter();\n        this.buttonGroupClassName = true;\n    }\n    /**\n     * Allows the declarative specification of the actions.\n     */\n    set actions(value) {\n        if (value instanceof TemplateRef) {\n            this.actionsTemplate = value;\n        }\n        else if (Array.isArray(value)) {\n            this.actionsArray = value;\n        }\n        else {\n            throw new Error('\"actions\" must be either TemplateRef or DialogAction[] instance.');\n        }\n    }\n    get className() {\n        return this.layout === 'stretched';\n    }\n    /**\n     * @hidden\n     */\n    onButtonClick(action, _e) {\n        this.action.emit(action);\n    }\n    /**\n     * @hidden\n     */\n    buttonClass(action) {\n        let classes = ['k-button k-button-md k-rounded-md'];\n        const fillMode = action.fillMode ? action.fillMode : 'solid';\n        const themeColor = action.themeColor ? action.themeColor : 'base';\n        const cssClasses = action.cssClass ? parseCSSClassNames(action.cssClass) : [];\n        classes.push(`k-button-${fillMode} k-button-${fillMode}-${themeColor}`);\n        if (cssClasses.length > 0) {\n            classes = classes.concat(cssClasses);\n        }\n        return classes.join(' ');\n    }\n}\nDialogActionsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogActionsComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nDialogActionsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DialogActionsComponent, selector: \"kendo-dialog-actions\", inputs: { actions: \"actions\", layout: \"layout\" }, outputs: { action: \"action\" }, host: { properties: { \"class.k-dialog-buttongroup\": \"this.buttonGroupClassName\", \"class.k-actions\": \"this.buttonGroupClassName\", \"class.k-actions-stretched\": \"this.className\" } }, ngImport: i0, template: `\n        <ng-content *ngIf=\"!actions\"></ng-content>\n        <ng-container *ngIf=\"actionsArray; else actionTemplate\">\n            <button\n                type=\"button\"\n                *ngFor=\"let action of actionsArray\"\n                [ngClass]=\"buttonClass(action)\"\n                (click)=\"onButtonClick(action, $event)\"\n                [attr.aria-label]=\"action.text\"\n            >\n                {{ action.text }}\n            </button>\n        </ng-container>\n        <ng-template #actionTemplate [ngTemplateOutlet]=\"actionsTemplate\"></ng-template>\n    `, isInline: true, directives: [{ type: i6.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i6.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i6.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i6.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogActionsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-dialog-actions',\n                    template: `\n        <ng-content *ngIf=\"!actions\"></ng-content>\n        <ng-container *ngIf=\"actionsArray; else actionTemplate\">\n            <button\n                type=\"button\"\n                *ngFor=\"let action of actionsArray\"\n                [ngClass]=\"buttonClass(action)\"\n                (click)=\"onButtonClick(action, $event)\"\n                [attr.aria-label]=\"action.text\"\n            >\n                {{ action.text }}\n            </button>\n        </ng-container>\n        <ng-template #actionTemplate [ngTemplateOutlet]=\"actionsTemplate\"></ng-template>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { actions: [{\n                type: Input\n            }], layout: [{\n                type: Input\n            }], action: [{\n                type: Output\n            }], buttonGroupClassName: [{\n                type: HostBinding,\n                args: ['class.k-dialog-buttongroup']\n            }, {\n                type: HostBinding,\n                args: ['class.k-actions']\n            }], className: [{\n                type: HostBinding,\n                args: ['class.k-actions-stretched']\n            }] } });\n\nclass PreventableEvent {\n    /**\n     * @hidden\n     */\n    constructor() {\n        this.prevented = false;\n    }\n    /**\n     * Prevents the default action for a specified event.\n     * In this way, the source component suppresses the built-in behavior that follows the event.\n     */\n    preventDefault() {\n        this.prevented = true;\n    }\n    /**\n     * If the event is prevented by any of its subscribers, returns `true`.\n     *\n     * @returns `true` if the default action was prevented. Otherwise, returns `false`.\n     */\n    isDefaultPrevented() {\n        return this.prevented;\n    }\n}\n\n/**\n * @hidden\n */\nconst DIALOG_LOCALIZATION_SERVICE = new InjectionToken('Dialog LocalizationService');\n\n/**\n * @hidden\n */\nclass TitleBarLocalizationService extends LocalizationService {\n    constructor(prefix, messageService, rtl, dialogLocalization) {\n        super(prefix, messageService, rtl);\n        this.dialogLocalization = dialogLocalization;\n    }\n    get(shortKey) {\n        if (this.dialogLocalization) {\n            return this.dialogLocalization.get(shortKey);\n        }\n        return super.get(shortKey);\n    }\n}\nTitleBarLocalizationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TitleBarLocalizationService, deps: [{ token: L10N_PREFIX }, { token: i1.MessageService, optional: true }, { token: RTL, optional: true }, { token: DIALOG_LOCALIZATION_SERVICE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nTitleBarLocalizationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TitleBarLocalizationService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TitleBarLocalizationService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [L10N_PREFIX]\n                }] }, { type: i1.MessageService, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [RTL]\n                }] }, { type: i1.LocalizationService, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DIALOG_LOCALIZATION_SERVICE]\n                }] }]; } });\n\n/**\n * @hidden\n */\nclass Messages extends ComponentMessages {\n}\nMessages.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: Messages, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMessages.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: Messages, selector: \"kendo-dialog-messages-base\", inputs: { closeTitle: \"closeTitle\", restoreTitle: \"restoreTitle\", maximizeTitle: \"maximizeTitle\", minimizeTitle: \"minimizeTitle\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: Messages, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: 'kendo-dialog-messages-base'\n                }]\n        }], propDecorators: { closeTitle: [{\n                type: Input\n            }], restoreTitle: [{\n                type: Input\n            }], maximizeTitle: [{\n                type: Input\n            }], minimizeTitle: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass LocalizedMessagesDirective extends Messages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nLocalizedMessagesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalizedMessagesDirective, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Directive });\nLocalizedMessagesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LocalizedMessagesDirective, selector: \"\\n    [kendoDialogLocalizedMessages],\\n    [kendoWindowLocalizedMessages],\\n    [kendoDialogTitleBarLocalizedMessages]\\n  \", providers: [\n        {\n            provide: Messages,\n            useExisting: forwardRef(() => LocalizedMessagesDirective)\n        }\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalizedMessagesDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    providers: [\n                        {\n                            provide: Messages,\n                            useExisting: forwardRef(() => LocalizedMessagesDirective)\n                        }\n                    ],\n                    selector: `\n    [kendoDialogLocalizedMessages],\n    [kendoWindowLocalizedMessages],\n    [kendoDialogTitleBarLocalizedMessages]\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * Represents the [Kendo UI DialogTitleBar component for Angular]({% slug api_dialog_dialogtitlebarcomponent %}).\n *\n * It is used as part of the Dialog content when the component is created dynamically by using an [Angular service]({% slug service_dialog %}).\n */\nclass DialogTitleBarComponent {\n    constructor(zone, hostElement, localizationService) {\n        this.zone = zone;\n        this.hostElement = hostElement;\n        this.localizationService = localizationService;\n        /**\n         * Fires when the close button of the title-bar is clicked.\n         */\n        this.close = new EventEmitter();\n    }\n    get className() {\n        return true;\n    }\n    get closeButtonTitle() {\n        return this.closeTitle || this.localizationService.get('closeTitle');\n    }\n    ngAfterViewInit() {\n        this.zone.onStable.pipe(take(1)).subscribe(() => {\n            const element = this.hostElement.nativeElement.querySelector('.k-dialog-title');\n            element.setAttribute('id', this.id);\n        });\n    }\n    /**\n     * @hidden\n     */\n    onCloseClick(e) {\n        e.preventDefault();\n        const eventArgs = new PreventableEvent();\n        this.close.emit(eventArgs);\n    }\n}\nDialogTitleBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogTitleBarComponent, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i1.LocalizationService, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nDialogTitleBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DialogTitleBarComponent, selector: \"kendo-dialog-titlebar\", inputs: { id: \"id\", closeTitle: \"closeTitle\" }, outputs: { close: \"close\" }, host: { properties: { \"class.k-window-titlebar\": \"this.className\", \"class.k-dialog-titlebar\": \"this.className\" } }, providers: [\n        TitleBarLocalizationService,\n        {\n            provide: LocalizationService,\n            useExisting: TitleBarLocalizationService\n        },\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.dialog'\n        }\n    ], ngImport: i0, template: `\n         <ng-container\n            kendoDialogTitleBarLocalizedMessages\n            i18n-closeTitle=\"kendo.dialog.closeTitle|The title of the close button\"\n            closeTitle=\"Close\"\n        >\n            <div class=\"k-window-title k-dialog-title\">\n                <ng-content></ng-content>\n            </div>\n\n            <div class=\"k-window-actions k-dialog-actions\">\n                <button\n                    role=\"button\"\n                    [attr.title]=\"closeButtonTitle\"\n                    [attr.aria-label]=\"closeButtonTitle\"\n                    class=\"k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-window-action k-dialog-action\"\n                    (click)=\"onCloseClick($event)\"\n                >\n                    <span class=\"k-button-icon k-icon k-i-x\"></span>\n                </button>\n            </div>\n        </ng-container>\n    `, isInline: true, directives: [{ type: LocalizedMessagesDirective, selector: \"\\n    [kendoDialogLocalizedMessages],\\n    [kendoWindowLocalizedMessages],\\n    [kendoDialogTitleBarLocalizedMessages]\\n  \" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogTitleBarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-dialog-titlebar',\n                    providers: [\n                        TitleBarLocalizationService,\n                        {\n                            provide: LocalizationService,\n                            useExisting: TitleBarLocalizationService\n                        },\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.dialog'\n                        }\n                    ],\n                    template: `\n         <ng-container\n            kendoDialogTitleBarLocalizedMessages\n            i18n-closeTitle=\"kendo.dialog.closeTitle|The title of the close button\"\n            closeTitle=\"Close\"\n        >\n            <div class=\"k-window-title k-dialog-title\">\n                <ng-content></ng-content>\n            </div>\n\n            <div class=\"k-window-actions k-dialog-actions\">\n                <button\n                    role=\"button\"\n                    [attr.title]=\"closeButtonTitle\"\n                    [attr.aria-label]=\"closeButtonTitle\"\n                    class=\"k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-window-action k-dialog-action\"\n                    (click)=\"onCloseClick($event)\"\n                >\n                    <span class=\"k-button-icon k-icon k-i-x\"></span>\n                </button>\n            </div>\n        </ng-container>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i1.LocalizationService, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { close: [{\n                type: Output\n            }], id: [{\n                type: Input\n            }], closeTitle: [{\n                type: Input\n            }], className: [{\n                type: HostBinding,\n                args: ['class.k-window-titlebar']\n            }, {\n                type: HostBinding,\n                args: ['class.k-dialog-titlebar']\n            }] } });\n\n/**\n * @hidden\n */\nconst packageMetadata = {\n    name: '@progress/kendo-angular-dialog',\n    productName: 'Kendo UI for Angular',\n    productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n    publishDate: 1668698060,\n    version: '',\n    licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/?utm_medium=product&utm_source=kendoangular&utm_campaign=kendo-ui-angular-purchase-license-keys-warning'\n};\n\n/**\n * Indicates that the **Close** button is clicked. Used when the results from\n * the Dialogs that are opened through `DialogService` are filtered\n * ([see example]({% slug api_dialog_dialogservice %}#toc-open)).\n */\nclass DialogCloseResult {\n}\n\n/**\n * @hidden\n */\nfunction animations(duration, direction, animationType) {\n    switch (animationType) {\n        case 'slide':\n            const translate = direction === 'left' || direction === 'right' ? 'translateX' : 'translateY';\n            const start = direction === 'right' || direction === 'down' ? -100 : 100;\n            const end = 0;\n            return [\n                style({ transform: `${translate}(${start}%)` }),\n                animate(`${duration}ms ease-in`, style({ transform: `${translate}(${end}%)` }))\n            ];\n        case 'expand':\n            const scale = direction === 'up' || direction === 'down' ? 'scaleY' : 'scaleX';\n            const startScale = 0;\n            const endScale = 1;\n            let origin;\n            if (direction === 'down') {\n                origin = 'top';\n            }\n            else if (direction === 'left') {\n                origin = 'right';\n            }\n            else if (direction === 'right') {\n                origin = 'left';\n            }\n            else {\n                origin = 'bottom';\n            }\n            return [\n                style({ transform: `${scale}(${startScale})`, transformOrigin: origin }),\n                animate(`${duration}ms ease-in`, style({ transform: `${scale}(${endScale})` }))\n            ];\n        case 'zoom':\n            const startZoom = 0;\n            const endZoom = 1;\n            return [\n                animate(duration, keyframes([\n                    style({ transform: `scale(${startZoom})` }),\n                    style({ transform: `scale(${endZoom})` })\n                ]))\n            ];\n        case 'fade':\n            const startFade = 0;\n            const endFade = 1;\n            return [\n                animate(duration, keyframes([\n                    style({ opacity: `${startFade}` }),\n                    style({ opacity: `${endFade}` })\n                ]))\n            ];\n        case 'translate':\n            return [\n                style({ transform: 'translate(0, -10%)' }),\n                animate(`${duration}ms cubic-bezier(.2, 1, .2, 1)`)\n            ];\n        default:\n            return [\n                style({ transform: 'translate(0, -10%)' }),\n                animate(`${duration}ms cubic-bezier(.2, 1, .2, 1)`)\n            ];\n    }\n}\n\n/**\n * @hidden\n */\nconst createPlayer = (builder, animation, animatedElement) => {\n    const factory = builder.build(animation);\n    let player = factory.create(animatedElement);\n    player.onDone(() => {\n        if (player) {\n            player.destroy();\n            player = null;\n        }\n    });\n    return player;\n};\n\n/**\n * @hidden\n */\nconst animateContent = (animation, defAnimationConfig, animatedElement, builder) => {\n    let animationConfig = defAnimationConfig;\n    if (typeof animation !== 'boolean') {\n        animationConfig = animation;\n        animationConfig.duration = animationConfig.duration ? animationConfig.duration : defAnimationConfig.duration;\n    }\n    const animationSpecs = animations(animationConfig.duration, animationConfig.direction, animationConfig.type);\n    const player = createPlayer(builder, animationSpecs, animatedElement);\n    player.play();\n};\n\nconst DEFAULT_ANIMATION_CONFIG = { duration: 300, type: 'translate' };\n/**\n * Represents the [Kendo UI Dialog component for Angular]({% slug overview_dialog_dialogs %}).\n */\nclass DialogComponent {\n    constructor(wrapper, renderer, localization, cdr, ngZone, builder) {\n        this.wrapper = wrapper;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.ngZone = ngZone;\n        this.builder = builder;\n        /**\n         * Specifies the layout of the action buttons in the Dialog.\n         * This option is only applicable if the action buttons are specified through the `actions` options.\n         *\n         * @default 'stretched'\n         */\n        this.actionsLayout = 'stretched';\n        /**\n         * Configures the Dialog opening animation ([see example]({% slug animations_dialog %})).\n         * By default the animation type is set to `translate` and its duration is `300ms`.\n         *\n         * @default true\n         */\n        this.animation = true;\n        /**\n         * @hidden\n         */\n        this.titleId = null;\n        /**\n         * @hidden\n         */\n        this.contentId = null;\n        /**\n         * Fires when the user clicks an action button of the Dialog.\n         * The event is fired only when the action buttons are specified through the `actions` options.\n         */\n        this.action = new EventEmitter();\n        /**\n         * Fires when the user clicks the **Close** button of the Dialog or the **ESC** key.\n         */\n        this.close = new EventEmitter();\n        this.tabIndex = 0;\n        this.subscriptions = [];\n        this.domSubs = new Subscription();\n        validatePackage(packageMetadata);\n        this.direction = localization.rtl ? 'rtl' : 'ltr';\n        this.subscriptions.push(localization.changes.subscribe(({ rtl }) => (this.direction = rtl ? 'rtl' : 'ltr')));\n        this.titleId = this.generateTitleId();\n        this.contentId = this.generateContentId();\n    }\n    /**\n     * @hidden\n     */\n    set htmlAttributes(attributes) {\n        setHTMLAttributes(attributes, this.renderer, this.wrapper.nativeElement);\n        const el = this.wrapper.nativeElement;\n        const dir = el.getAttribute('dir');\n        const tIndex = el.getAttribute('tabindex');\n        if (this.direction !== dir && dir) {\n            this.direction = dir;\n        }\n        if (this.tabIndex !== tIndex && tIndex) {\n            this.tabIndex = tIndex;\n        }\n        this._htmlAttributes = attributes;\n    }\n    get htmlAttributes() {\n        return this._htmlAttributes;\n    }\n    /**\n     * @hidden\n     */\n    set cssClass(classes) {\n        this.setServiceClasses(this._cssClass, classes);\n        this._cssClass = classes;\n    }\n    get cssClass() {\n        return this._cssClass;\n    }\n    get dir() {\n        return this.direction;\n    }\n    ngAfterContentInit() {\n        this.bubble('close', this.titlebarContent.first);\n        this.renderer.setAttribute(this.wrapper.nativeElement.querySelector('.k-dialog'), 'aria-describedby', this.contentId);\n        if (this.titlebarContent.first) {\n            this.titlebarContent.first.id = this.titleId;\n        }\n        else {\n            this.subscriptions.push(this.titlebarContent.changes.subscribe(() => {\n                if (isPresent(this.titlebarContent.first)) {\n                    this.titlebarContent.first.id = this.titleId;\n                    this.ngZone.onStable.pipe(take(1)).subscribe(() => {\n                        this.bubble('close', this.titlebarContent.first);\n                        this.renderer.setAttribute(this.wrapper.nativeElement.querySelector('.k-dialog'), 'aria-labelledby', this.titleId);\n                    });\n                }\n            }));\n        }\n    }\n    ngAfterViewInit() {\n        this.handleInitialFocus();\n        this.bubble('close', this.titlebarView.first);\n        this.bubble('action', this.actionsView);\n        if (this.titlebarView.first || this.titlebarContent.first) {\n            //Needed for Dialogs created via service\n            this.renderer.setAttribute(this.wrapper.nativeElement.querySelector('.k-dialog'), 'aria-labelledby', this.titleId);\n        }\n        else {\n            this.subscriptions.push(this.titlebarView.changes.subscribe(() => {\n                if (isPresent(this.titlebarView.first)) {\n                    this.titlebarView.first.id = this.titleId;\n                    this.ngZone.onStable.pipe(take(1)).subscribe(() => {\n                        this.bubble('close', this.titlebarView.first);\n                        this.renderer.setAttribute(this.wrapper.nativeElement.querySelector('.k-dialog'), 'aria-labelledby', this.titleId);\n                    });\n                }\n            }));\n        }\n        this.initDomEvents();\n    }\n    ngOnInit() {\n        if (this.animation) {\n            animateContent(this.animation, DEFAULT_ANIMATION_CONFIG, this.dialog.nativeElement, this.builder);\n        }\n        this.renderer.removeAttribute(this.wrapper.nativeElement, 'title');\n        this.cdr.detectChanges();\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n        this.subscriptions = [];\n        if (this.domSubs) {\n            this.domSubs.unsubscribe();\n        }\n    }\n    /**\n     * Focuses the wrapper of the Dialog component.\n     */\n    focus() {\n        const wrapper = this.wrapper.nativeElement;\n        if (isPresent(wrapper)) {\n            wrapper.focus();\n        }\n    }\n    initDomEvents() {\n        if (!this.wrapper) {\n            return;\n        }\n        this.ngZone.runOutsideAngular(() => {\n            this.domSubs.add(this.renderer.listen(this.wrapper.nativeElement, 'keydown', (ev) => {\n                this.onKeyDown(ev);\n            }));\n        });\n    }\n    onKeyDown(event) {\n        const target = event.target;\n        const parent = target.parentElement;\n        if (hasClasses(target, DIALOG_ELEMENTS_HANDLING_ESC_KEY) || hasClasses(parent, DIALOG_ELEMENTS_HANDLING_ESC_KEY)) {\n            if (event.keyCode === Keys.esc) {\n                this.ngZone.run(() => {\n                    this.close.emit(new DialogCloseResult());\n                });\n            }\n        }\n        if (hasClasses(target, 'k-button') && hasClasses(parent, DIALOG_ELEMENTS_HANDLING_ARROWS) &&\n            (event.keyCode === Keys.left || event.keyCode === Keys.right)) {\n            this.ngZone.run(() => {\n                this.handleActionButtonFocus(parent, event.keyCode);\n            });\n        }\n        if (event.keyCode === Keys.tab) {\n            this.ngZone.run(() => {\n                this.keepFocusWithinComponent(target, event);\n            });\n        }\n    }\n    setServiceClasses(prevValue, value) {\n        const el = this.wrapper.nativeElement;\n        if (prevValue) {\n            parseCSSClassNames(prevValue).forEach(className => {\n                this.renderer.removeClass(el, className);\n            });\n        }\n        if (value) {\n            parseCSSClassNames(value).forEach(className => {\n                this.renderer.addClass(el, className);\n            });\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleInitialFocus() {\n        const wrapper = this.wrapper.nativeElement;\n        const primaryButton = this.findPrimary(wrapper);\n        if (this.autoFocusedElement) {\n            const initiallyFocusedElement = wrapper.querySelector(this.autoFocusedElement);\n            if (initiallyFocusedElement) {\n                initiallyFocusedElement.focus();\n            }\n        }\n        else if (this.shouldFocusPrimary(primaryButton)) {\n            primaryButton.focus();\n        }\n        else {\n            wrapper.focus();\n        }\n    }\n    /**\n     * @hidden\n     */\n    findPrimary(wrapper) {\n        const actionBtns = wrapper.querySelectorAll('.k-actions .k-button');\n        return findPrimaryButton(actionBtns);\n    }\n    /**\n     * @hidden\n     */\n    handleActionButtonFocus(parent, key) {\n        const focusableActionButtons = this.getAllFocusableChildren(parent);\n        for (let i = 0; i < focusableActionButtons.length; i++) {\n            const current = focusableActionButtons[i];\n            if (current === document.activeElement) {\n                if (key === Keys.left && i > 0) {\n                    focusableActionButtons[i - 1].focus();\n                    break;\n                }\n                if (key === Keys.right && i < focusableActionButtons.length - 1) {\n                    focusableActionButtons[i + 1].focus();\n                    break;\n                }\n            }\n        }\n    }\n    /**\n     * @hidden\n     */\n    keepFocusWithinComponent(target, event) {\n        const wrapper = this.wrapper.nativeElement;\n        const [firstFocusable, lastFocusable] = this.getFirstAndLastFocusable(wrapper);\n        const tabAfterLastFocusable = !event.shiftKey && target === lastFocusable;\n        const shiftTabAfterFirstFocusable = event.shiftKey && target === firstFocusable;\n        if (tabAfterLastFocusable) {\n            event.preventDefault();\n            firstFocusable.focus();\n        }\n        if (shiftTabAfterFirstFocusable) {\n            event.preventDefault();\n            lastFocusable.focus();\n        }\n    }\n    /**\n     * @hidden\n     */\n    shouldFocusPrimary(el) {\n        return isPresent(el) && isFocusable(el);\n    }\n    /**\n     * @hidden\n     */\n    getAllFocusableChildren(parent) {\n        return parent.querySelectorAll(focusableSelector);\n    }\n    /**\n     * @hidden\n     */\n    getFirstAndLastFocusable(parent) {\n        const all = this.getAllFocusableChildren(parent);\n        const firstFocusable = all.length > 0 ? all[0] : parent;\n        const lastFocusable = all.length > 0 ? all[all.length - 1] : parent;\n        return [firstFocusable, lastFocusable];\n    }\n    /**\n     * @hidden\n     */\n    generateTitleId() {\n        return 'kendo-dialog-title-' + Math.ceil(Math.random() * 1000000).toString();\n    }\n    /**\n     * @hidden\n     */\n    generateContentId() {\n        return 'kendo-dialog-content-' + Math.ceil(Math.random() * 1000000).toString();\n    }\n    get wrapperClass() {\n        return true;\n    }\n    get styles() {\n        const styles = {};\n        if (this.width) {\n            styles.width = createValueWithUnit(this.width);\n        }\n        if (this.height) {\n            styles.height = createValueWithUnit(this.height);\n        }\n        if (this.minWidth) {\n            styles.minWidth = createValueWithUnit(this.minWidth);\n        }\n        if (this.maxWidth) {\n            styles.maxWidth = createValueWithUnit(this.maxWidth);\n        }\n        if (this.minHeight) {\n            styles.minHeight = createValueWithUnit(this.minHeight);\n        }\n        if (this.maxHeight) {\n            styles.maxHeight = createValueWithUnit(this.maxHeight);\n        }\n        return styles;\n    }\n    bubble(eventName, component) {\n        if (component) {\n            const emit = e => this[eventName].emit(e);\n            const s = component[eventName].subscribe(emit);\n            this.subscriptions.push(s);\n        }\n    }\n}\nDialogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i1.LocalizationService }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i2.AnimationBuilder }], target: i0.ɵɵFactoryTarget.Component });\nDialogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DialogComponent, selector: \"kendo-dialog\", inputs: { actions: \"actions\", actionsLayout: \"actionsLayout\", autoFocusedElement: \"autoFocusedElement\", title: \"title\", width: \"width\", minWidth: \"minWidth\", maxWidth: \"maxWidth\", height: \"height\", minHeight: \"minHeight\", maxHeight: \"maxHeight\", animation: \"animation\" }, outputs: { action: \"action\", close: \"close\" }, host: { properties: { \"attr.dir\": \"this.dir\", \"attr.tabIndex\": \"this.tabIndex\", \"class.k-dialog-wrapper\": \"this.wrapperClass\" } }, providers: [\n        LocalizationService,\n        {\n            provide: DIALOG_LOCALIZATION_SERVICE,\n            useExisting: LocalizationService\n        },\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.dialog'\n        }\n    ], queries: [{ propertyName: \"titlebarContent\", predicate: DialogTitleBarComponent }], viewQueries: [{ propertyName: \"actionsView\", first: true, predicate: DialogActionsComponent, descendants: true }, { propertyName: \"dialog\", first: true, predicate: [\"dialog\"], descendants: true, static: true }, { propertyName: \"titlebarView\", predicate: DialogTitleBarComponent, descendants: true }], exportAs: [\"kendoDialog\"], ngImport: i0, template: `\n        <ng-container\n            kendoDialogLocalizedMessages\n            i18n-closeTitle=\"kendo.dialog.closeTitle|The title of the close button\"\n            closeTitle=\"Close\"\n        >\n        <div class=\"k-overlay\" @overlayAppear></div>\n\n        <div #dialog class=\"k-window k-dialog\" role=\"dialog\" aria-modal=\"true\" [ngStyle]=\"styles\">\n            <kendo-dialog-titlebar *ngIf=\"title\" [closeTitle]=\"closeTitle\" [id]=\"titleId\">{{ title }}</kendo-dialog-titlebar>\n            <ng-content select=\"kendo-dialog-titlebar\" *ngIf=\"!title\"></ng-content>\n\n            <div [id]=\"contentId\" class=\"k-content k-window-content k-dialog-content\">\n                <ng-content *ngIf=\"!contentTemplate\"></ng-content>\n                <ng-template [ngTemplateOutlet]=\"contentTemplate\" *ngIf=\"contentTemplate\"></ng-template>\n            </div>\n\n            <ng-content select=\"kendo-dialog-actions\" *ngIf=\"!actions\"></ng-content>\n            <kendo-dialog-actions *ngIf=\"actions\" [actions]=\"actions\" [layout]=\"actionsLayout\"> </kendo-dialog-actions>\n        </div>\n    </ng-container>\n    `, isInline: true, components: [{ type: DialogTitleBarComponent, selector: \"kendo-dialog-titlebar\", inputs: [\"id\", \"closeTitle\"], outputs: [\"close\"] }, { type: DialogActionsComponent, selector: \"kendo-dialog-actions\", inputs: [\"actions\", \"layout\"], outputs: [\"action\"] }], directives: [{ type: LocalizedMessagesDirective, selector: \"\\n    [kendoDialogLocalizedMessages],\\n    [kendoWindowLocalizedMessages],\\n    [kendoDialogTitleBarLocalizedMessages]\\n  \" }, { type: i6.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i6.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i6.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], animations: [\n        trigger('overlayAppear', [\n            state('in', style({ opacity: 1 })),\n            transition('void => *', [style({ opacity: 0.1 }), animate('.3s cubic-bezier(.2, .6, .4, 1)')])\n        ])\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogComponent, decorators: [{\n            type: Component,\n            args: [{\n                    animations: [\n                        trigger('overlayAppear', [\n                            state('in', style({ opacity: 1 })),\n                            transition('void => *', [style({ opacity: 0.1 }), animate('.3s cubic-bezier(.2, .6, .4, 1)')])\n                        ])\n                    ],\n                    exportAs: 'kendoDialog',\n                    providers: [\n                        LocalizationService,\n                        {\n                            provide: DIALOG_LOCALIZATION_SERVICE,\n                            useExisting: LocalizationService\n                        },\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.dialog'\n                        }\n                    ],\n                    selector: 'kendo-dialog',\n                    template: `\n        <ng-container\n            kendoDialogLocalizedMessages\n            i18n-closeTitle=\"kendo.dialog.closeTitle|The title of the close button\"\n            closeTitle=\"Close\"\n        >\n        <div class=\"k-overlay\" @overlayAppear></div>\n\n        <div #dialog class=\"k-window k-dialog\" role=\"dialog\" aria-modal=\"true\" [ngStyle]=\"styles\">\n            <kendo-dialog-titlebar *ngIf=\"title\" [closeTitle]=\"closeTitle\" [id]=\"titleId\">{{ title }}</kendo-dialog-titlebar>\n            <ng-content select=\"kendo-dialog-titlebar\" *ngIf=\"!title\"></ng-content>\n\n            <div [id]=\"contentId\" class=\"k-content k-window-content k-dialog-content\">\n                <ng-content *ngIf=\"!contentTemplate\"></ng-content>\n                <ng-template [ngTemplateOutlet]=\"contentTemplate\" *ngIf=\"contentTemplate\"></ng-template>\n            </div>\n\n            <ng-content select=\"kendo-dialog-actions\" *ngIf=\"!actions\"></ng-content>\n            <kendo-dialog-actions *ngIf=\"actions\" [actions]=\"actions\" [layout]=\"actionsLayout\"> </kendo-dialog-actions>\n        </div>\n    </ng-container>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i1.LocalizationService }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i2.AnimationBuilder }]; }, propDecorators: { actions: [{\n                type: Input\n            }], actionsLayout: [{\n                type: Input\n            }], autoFocusedElement: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], minWidth: [{\n                type: Input\n            }], maxWidth: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], minHeight: [{\n                type: Input\n            }], maxHeight: [{\n                type: Input\n            }], animation: [{\n                type: Input\n            }], action: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }], dir: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], tabIndex: [{\n                type: HostBinding,\n                args: ['attr.tabIndex']\n            }], titlebarContent: [{\n                type: ContentChildren,\n                args: [DialogTitleBarComponent, { descendants: false }]\n            }], titlebarView: [{\n                type: ViewChildren,\n                args: [DialogTitleBarComponent]\n            }], actionsView: [{\n                type: ViewChild,\n                args: [DialogActionsComponent, { static: false }]\n            }], dialog: [{\n                type: ViewChild,\n                args: ['dialog', { static: true }]\n            }], wrapperClass: [{\n                type: HostBinding,\n                args: ['class.k-dialog-wrapper']\n            }] } });\n\n/**\n * Holds references to the object instance and published events of the Dialog.\n * Controls the Dialogs that were opened through the `DialogService`\n * ([see example]({% slug api_dialog_dialogservice %}#toc-open)).\n */\nclass DialogRef {\n}\n\n/**\n * The base class  which will be extended by a component that is provided as content through `content`\n * ([see example]({% slug service_dialog %}#toc-passing-title-content-and-actions-as-a-single-component)).\n */\nclass DialogContentBase {\n    constructor(dialog) {\n        this.dialog = dialog;\n    }\n    /**\n     * @hidden\n     */\n    ngAfterViewInit() {\n        if (this.dialogTitleBar) {\n            // when opening component inside dialog with service AND the component has defined its own titlebar\n            this.dialogTitleBar.close.pipe(filter((e) => !e.isDefaultPrevented())).subscribe(() => {\n                this.dialog.close();\n            });\n        }\n        if (this.dialogActions) {\n            if (this.dialogActions.actions) {\n                this.dialogActions.action.subscribe(action => this.dialog.dialog.instance.action.emit(action));\n            }\n        }\n    }\n}\nDialogContentBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogContentBase, deps: [{ token: DialogRef }], target: i0.ɵɵFactoryTarget.Directive });\nDialogContentBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DialogContentBase, viewQueries: [{ propertyName: \"dialogTitleBar\", first: true, predicate: DialogTitleBarComponent, descendants: true }, { propertyName: \"dialogActions\", first: true, predicate: DialogActionsComponent, descendants: true }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogContentBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: DialogRef }]; }, propDecorators: { dialogTitleBar: [{\n                type: ViewChild,\n                args: [DialogTitleBarComponent, { static: false }]\n            }], dialogActions: [{\n                type: ViewChild,\n                args: [DialogActionsComponent, { static: false }]\n            }] } });\n\n/**\n * @hidden\n */\nclass DialogContainerService {\n    set container(container) {\n        DialogContainerService.container = container;\n    }\n    get container() {\n        return DialogContainerService.container;\n    }\n}\nDialogContainerService.container = null;\nDialogContainerService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogContainerService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDialogContainerService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogContainerService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogContainerService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * The settings for the Dialog actions when the Dialog is opened through `DialogService`\n * ([see example]({% slug api_dialog_dialogservice %}#toc-open)).\n */\nclass DialogAction {\n}\n\n/**\n * The settings that can be used when the Dialog is opened through `DialogService`.\n * ([see example]({% slug api_dialog_dialogservice %}#toc-open)).\n */\nclass DialogSettings {\n}\n\n// eslint-disable max-line-length\nconst isNotComponent$1 = (component) => isString(component) || component instanceof TemplateRef;\nclass DialogInjector {\n    constructor(getDialogRef, parentInjector) {\n        this.getDialogRef = getDialogRef;\n        this.parentInjector = parentInjector;\n    }\n    get(token, notFoundValue) {\n        if (token === DialogRef) {\n            return this.getDialogRef();\n        }\n        return this.parentInjector.get(token, notFoundValue);\n    }\n}\n/**\n * A service for opening Dialog windows dynamically\n * ([see example]({% slug service_dialog %})).\n */\nclass DialogService {\n    constructor(\n    /**\n     * @hidden\n     */\n    resolver, containerService) {\n        this.resolver = resolver;\n        this.containerService = containerService;\n    }\n    /**\n     * Opens a Dialog window. Requires an element in the application that uses the\n     * [`kendoDialogContainer`]({% slug api_dialog_dialogcontainerdirective %}) directive.\n     * Created Dialogs will be mounted in the DOM directly after that element.\n     *\n     * @param {DialogAction} options - The options that define the Dialog.\n     * @returns {DialogRef} - A reference to the Dialog object and the convenience properties.\n     *\n     * @example\n     *\n     * ```ts-no-run\n     * _@Component({\n     *   selector: 'my-app',\n     *   template: `\n     *     <button kendoButton (click)=\"open()\">Harmless button</button>\n     *     <div kendoDialogContainer></div>\n     *   `\n     * })\n     * export class AppComponent {\n     *     constructor( private dialogService: DialogService ) {}\n     *\n     *     public open() {\n     *         var dialog = this.dialogService.open({\n     *           title: \"Please confirm\",\n     *           content: \"Are you sure?\",\n     *           actions: [\n     *             { text: \"No\" },\n     *             { text: \"Yes\", themeColor: 'primary' }\n     *           ]\n     *         });\n     *\n     *         dialog.result.subscribe((result) => {\n     *           if (result instanceof DialogCloseResult) {\n     *             console.log(\"close\");\n     *           } else {\n     *             console.log(\"action\", result);\n     *           }\n     *         });\n     *     }\n     * }\n     * ```\n     *\n     */\n    open(options) {\n        const factory = this.resolver.resolveComponentFactory(DialogComponent);\n        const container = options.appendTo || this.containerService.container;\n        if (!container) {\n            throw new Error(`\nCannot attach dialog to the page.\nAdd an element that uses the kendoDialogContainer directive, or set the 'appendTo' property.\nSee https://www.telerik.com/kendo-angular-ui/components/dialogs/dialog/service/.\n          `);\n        }\n        // create DialogRef to (1) pass as result, (2) provide through injector\n        const dialogRef = {\n            close: () => {\n                /* noop */\n            },\n            content: null,\n            dialog: null,\n            result: null\n        };\n        return this.initializeDialog(options.content, factory, container, dialogRef, options);\n    }\n    initializeDialog(component, factory, container, dialogRef, options) {\n        const content = this.contentFrom(component, container, dialogRef);\n        const dialog = container.createComponent(factory, undefined, undefined, content.nodes);\n        dialogRef.dialog = dialog;\n        dialog.changeDetectorRef.markForCheck();\n        // copy @Input options to dialog instance\n        this.applyOptions(dialog.instance, options);\n        // create close handler and result stream\n        const apiClose = new Subject();\n        const close = (e) => {\n            if (e instanceof PreventableEvent) {\n                e = new DialogCloseResult();\n            }\n            apiClose.next(e || new DialogCloseResult());\n            if (content.componentRef) {\n                content.componentRef.destroy();\n            }\n            dialog.destroy();\n        };\n        const result = merge(apiClose, \n        // triggered when the titlebar or actions are defined in DialogSettings\n        merge(dialog.instance.close, dialog.instance.action).pipe(map(e => (e instanceof PreventableEvent ? new DialogCloseResult() : e)), filter(e => {\n            if (options.preventAction) {\n                // add dialogRef only when using component\n                const dialogRefParameter = isNotComponent$1(component) ? undefined : dialogRef;\n                return !options.preventAction(e, dialogRefParameter);\n            }\n            return true;\n        }))).pipe(take(1), \n        // Takes care for multiple subscriptions:\n        // We subscribe internaly and the user may subscribe to get a close result - dialog.result.subscribe().\n        // This causes multiple subscriptions to the same source and thus multiple emissions. share() solves that.\n        share());\n        result.subscribe(close);\n        dialogRef.close = close;\n        dialogRef.result = result;\n        if (component && isDevMode()) {\n            const hasContentTitle = content.nodes[0] && content.nodes[0].length > 0;\n            const hasContentActions = content.nodes[2] && content.nodes[2].length > 0;\n            const multipleTitles = options.title && hasContentTitle;\n            const multipleActions = options.actions && hasContentActions;\n            if (component.prototype instanceof DialogContentBase) {\n                // content component extends DialogContentBase\n                if (multipleTitles || multipleActions) {\n                    console.warn(`\n                    Multiple Title and/or Actions configurations detected.\n                    When using a component as content, provide the title and actions either in the component's markup\n                    or via the title and actions properties of the DialogSettings object, but not both.\n                    See https://www.telerik.com/kendo-angular-ui/components/dialogs/dialog/service/#toc-passing-title-content-and-actions-as-a-single-component'`);\n                }\n            }\n            else {\n                if (hasContentTitle || hasContentActions) {\n                    console.warn(`\n                    When Title and/or Actions markup is provided in content component's template,\n                    the component needs to inherit the DialogContentBase class to ensure that close and result events are properly hooked.\n                    See https://www.telerik.com/kendo-angular-ui/components/dialogs/dialog/service/#toc-passing-title-content-and-actions-as-a-single-component'`);\n                }\n            }\n        }\n        return dialogRef;\n    }\n    applyOptions(instance, options) {\n        instance.title = options.title;\n        instance.actions = options.actions;\n        instance.actionsLayout = options.actionsLayout || 'stretched';\n        instance.width = options.width;\n        instance.minWidth = options.minWidth;\n        instance.maxWidth = options.maxWidth;\n        instance.height = options.height;\n        instance.minHeight = options.minHeight;\n        instance.maxHeight = options.maxHeight;\n        instance.autoFocusedElement = options.autoFocusedElement;\n        instance.closeTitle = options.closeTitle;\n        instance.cssClass = options.cssClass;\n        instance.htmlAttributes = options.htmlAttributes;\n        instance.animation = options.animation !== undefined ? options.animation : true;\n        if (options.content instanceof TemplateRef) {\n            instance.contentTemplate = options.content;\n        }\n    }\n    contentFrom(content, container, dialogRef) {\n        const renderer = container.injector.get(Renderer2);\n        let nodes = [];\n        let titleNodes = [];\n        let actionNodes = [];\n        let componentRef = null;\n        if (typeof content === 'string') {\n            nodes = [renderer.createText(content)];\n        }\n        else if (content && !(content instanceof TemplateRef)) {\n            // Component\n            const injector = new DialogInjector(() => dialogRef, container.injector);\n            const factory = this.resolver.resolveComponentFactory(content);\n            componentRef = container.createComponent(factory, undefined, injector);\n            titleNodes = Array.from(componentRef.location.nativeElement.querySelectorAll('kendo-dialog-titlebar'));\n            nodes = [componentRef.location.nativeElement];\n            actionNodes = Array.from(componentRef.location.nativeElement.querySelectorAll('kendo-dialog-actions'));\n            dialogRef.content = componentRef;\n        }\n        return {\n            componentRef,\n            nodes: [\n                titleNodes,\n                nodes,\n                actionNodes // <ng-content select=\"kendo-dialog-actions\">\n            ]\n        };\n    }\n}\nDialogService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogService, deps: [{ token: i0.ComponentFactoryResolver }, { token: DialogContainerService }], target: i0.ɵɵFactoryTarget.Injectable });\nDialogService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: DialogContainerService, decorators: [{\n                    type: Inject,\n                    args: [DialogContainerService]\n                }] }]; } });\n\n/**\n * @hidden\n */\nlet newZIndex = 10002;\n/**\n * @hidden\n */\nconst DEFAULT_OPTIONS = {\n    draggable: true,\n    height: null,\n    left: null,\n    minHeight: 100,\n    minWidth: 120,\n    position: 'absolute',\n    resizable: true,\n    state: 'default',\n    top: null,\n    width: null\n};\n/**\n * @hidden\n */\nconst createMoveStream = (el, ev) => mouseDown => {\n    return el.kendoDrag\n        .pipe(takeUntil(el.kendoRelease.pipe(tap(() => { ev.emit(); }))), map(({ pageX, pageY }) => ({\n        originalX: mouseDown.pageX,\n        originalY: mouseDown.pageY,\n        pageX,\n        pageY\n    })));\n};\n/**\n * @hidden\n */\nclass DragResizeService {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.close = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.change = new EventEmitter();\n        this.stateChange = new EventEmitter();\n        this.dragStart = new EventEmitter();\n        this.dragEnd = new EventEmitter();\n        this.resizeStart = new EventEmitter();\n        this.resizeEnd = new EventEmitter();\n        this.options = Object.assign({}, DEFAULT_OPTIONS);\n        this.lastAction = null;\n        this.subscriptions = new Subscription();\n        this.dragSubscription = new Subscription();\n    }\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n        if (this.dragSubscription) {\n            this.dragSubscription.unsubscribe();\n        }\n    }\n    init(el) {\n        const state = this.options.state;\n        let options = this.options;\n        this.window = el;\n        if (state !== 'default') {\n            this.restoreOptions = Object.assign({}, options);\n        }\n        if (state === 'minimized') {\n            options.height = 0;\n            options.minHeight = 0;\n        }\n        if (state === 'maximized') {\n            options.position = 'fixed';\n        }\n    }\n    onDrag(el) {\n        this.subscriptions.add(this.ngZone.runOutsideAngular(() => {\n            let startPosition;\n            let dragStarted;\n            this.dragSubscription = el.kendoPress\n                .pipe(tap((ev) => {\n                if (!ev.isTouch) {\n                    preventDefault(ev);\n                }\n                this.focus.emit();\n                startPosition = this.currentPosition();\n                dragStarted = false;\n            }), switchMap(createMoveStream(el, this.dragEnd)))\n                .subscribe(({ pageX, pageY, originalX, originalY }) => {\n                if (!dragStarted) {\n                    this.ensureWidth();\n                    this.dragStart.emit();\n                    dragStarted = true;\n                }\n                this.handleDrag({\n                    originalX, originalY,\n                    pageX, pageY, startPosition\n                });\n            });\n        }));\n    }\n    handleDrag({ originalX, originalY, pageX, pageY, startPosition }) {\n        this.options.left = startPosition.x + pageX - originalX;\n        this.options.top = startPosition.y + pageY - originalY;\n        if (this.options.state === 'minimized' && isPresent(this.restoreOptions)) {\n            this.restoreOptions.left = this.options.left;\n            this.restoreOptions.top = this.options.top;\n        }\n        this.change.emit({\n            left: startPosition.x + pageX - originalX,\n            top: startPosition.y + pageY - originalY\n        });\n    }\n    onResize(handle, direction) {\n        this.subscriptions.add(this.ngZone.runOutsideAngular(() => {\n            let startOffsetAndPosition;\n            let resizeStarted = false;\n            handle.kendoPress.pipe(tap((ev) => {\n                preventDefault(ev);\n                this.focus.emit();\n                startOffsetAndPosition = this.currentOffsetAndPosition();\n                resizeStarted = false;\n            }), switchMap(createMoveStream(handle, this.resizeEnd)))\n                .subscribe(({ pageX, pageY, originalX, originalY }) => {\n                if (!resizeStarted) {\n                    this.resizeStart.emit(direction);\n                    resizeStarted = true;\n                }\n                let deltaX = pageX - originalX;\n                let deltaY = pageY - originalY;\n                this.handleResize(startOffsetAndPosition, direction, deltaX, deltaY);\n            });\n        }));\n    }\n    handleResize(initial, dir, deltaX, deltaY) {\n        const old = this.options;\n        let ev = {};\n        if (dir.indexOf('e') >= 0) {\n            const newWidth = initial.width + deltaX;\n            if (newWidth !== old.width && newWidth >= old.minWidth) {\n                ev.width = newWidth;\n            }\n        }\n        if (dir.indexOf('n') >= 0) {\n            const newHeight = initial.height - deltaY;\n            const newTop = initial.y + deltaY;\n            if (newHeight !== old.height && newHeight >= old.minHeight && newTop !== old.top) {\n                ev.height = newHeight;\n                ev.top = newTop;\n            }\n        }\n        if (dir.indexOf('s') >= 0) {\n            const newHeight = initial.height + deltaY;\n            if (newHeight !== old.height && newHeight >= old.minHeight) {\n                ev.height = newHeight;\n            }\n        }\n        if (dir.indexOf('w') >= 0) {\n            const newLeft = initial.x + deltaX;\n            const newWidth = initial.width - deltaX;\n            if (newWidth !== old.width && newWidth >= old.minWidth && newLeft !== old.left) {\n                ev.width = newWidth;\n                ev.left = newLeft;\n            }\n        }\n        if (isPresent(ev.width) || isPresent(ev.height)) {\n            OFFSET_STYLES.forEach((style) => {\n                if (isPresent(ev[style])) {\n                    this.options[style] = ev[style];\n                }\n            });\n            this.change.emit(ev);\n        }\n    }\n    restoreAction() {\n        this.lastAction = 'restore';\n        this.defaultState();\n    }\n    defaultState() {\n        if (isPresent(this.restoreOptions)) {\n            this.options = Object.assign({}, this.restoreOptions);\n        }\n        this.options.state = 'default';\n        this.stateChange.emit('default');\n    }\n    storeOptions() {\n        this.restoreOptions = Object.assign({}, this.options);\n    }\n    maximizeAction() {\n        this.lastAction = 'maximize';\n        this.maximizeState();\n    }\n    maximizeState() {\n        this.storeOptions();\n        const wnd = this.windowViewPort;\n        this.options = Object.assign({}, this.options, {\n            height: wnd.height,\n            left: 0,\n            position: 'fixed',\n            state: 'maximized',\n            top: 0,\n            width: wnd.width\n        });\n        this.stateChange.emit('maximized');\n    }\n    minimizeAction() {\n        this.lastAction = 'minimize';\n        this.minimizeState();\n    }\n    minimizeState() {\n        this.storeOptions();\n        this.options = Object.assign({}, this.options, {\n            height: null,\n            minHeight: 0,\n            state: 'minimized'\n        });\n        this.stateChange.emit('minimized');\n    }\n    /**\n     * Handles manual changes of the 'state' property.\n     * Required to distinguish them from action clicks.\n     */\n    applyManualState() {\n        const state = this.options.state;\n        switch (state) {\n            case 'default':\n                this.clearHeight();\n                this.defaultState();\n                break;\n            case 'maximized':\n                this.clearHeight();\n                this.maximizeState();\n                break;\n            case 'minimized':\n                this.minimizeState();\n                break;\n            default:\n                break;\n        }\n    }\n    closeAction() {\n        this.close.emit();\n    }\n    ensureWidth() {\n        const windowOffset = offset(this.window.nativeElement);\n        if (!isPresent(this.options.width)) {\n            this.options.width = windowOffset.width;\n            this.change.emit({ width: windowOffset.width });\n        }\n    }\n    clearHeight() {\n        if (this.options.height === 0) {\n            delete this.options.height;\n        }\n        if (this.options.minHeight === 0) {\n            delete this.options.minHeight;\n        }\n    }\n    center() {\n        if (this.options.state === 'maximized') {\n            return;\n        }\n        let scroll = scrollPosition(this.window.nativeElement);\n        let wnd = this.windowViewPort;\n        let wrapper = offset(this.window.nativeElement);\n        let ev = {};\n        if (!isPresent(this.options.left)) {\n            this.options.left = scroll.x + Math.max(0, (wnd.width - wrapper.width) / 2);\n            ev.left = this.options.left;\n        }\n        if (!isPresent(this.options.top)) {\n            this.options.top = scroll.y + Math.max(0, (wnd.height - wrapper.height) / 2);\n            ev.top = this.options.top;\n        }\n        this.change.emit(ev);\n    }\n    currentOffsetAndPosition() {\n        const o = this.options;\n        const off = offset(this.window.nativeElement);\n        return Object.assign({}, this.currentPosition(), {\n            height: o.height ? o.height : off.height,\n            width: o.width ? o.width : off.width\n        });\n    }\n    currentPosition() {\n        const o = this.options;\n        if (!o.top || !o.left) {\n            this.setPosition();\n        }\n        return {\n            x: this.options.left,\n            y: this.options.top\n        };\n    }\n    setPosition() {\n        const wrapper = positionWithScroll(this.window.nativeElement, getDocumentElement(this.window.nativeElement));\n        this.options.left = wrapper.left;\n        this.options.top = wrapper.top;\n    }\n    setRestoreOption(style, value) {\n        if (isPresent(this.restoreOptions)) {\n            this.restoreOptions[style] = value;\n        }\n    }\n    get nextPossibleZIndex() {\n        return newZIndex;\n    }\n    get nextZIndex() {\n        return newZIndex++;\n    }\n    get windowViewPort() {\n        return getWindowViewPort(this.window.nativeElement);\n    }\n}\nDragResizeService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DragResizeService, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nDragResizeService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DragResizeService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DragResizeService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n/**\n * @hidden\n */\nclass ResizeHandleDirective {\n    constructor(draggable, el, renderer, service) {\n        this.draggable = draggable;\n        this.el = el;\n        this.renderer = renderer;\n        this.service = service;\n        this.subscriptions = new Subscription();\n    }\n    get hostClass() {\n        return true;\n    }\n    ngOnInit() {\n        this.setDisplay();\n        this.renderer.addClass(this.el.nativeElement, 'k-resize-' + this.direction);\n        this.subscriptions.add(of(this.draggable).subscribe(handle => {\n            this.service.onResize(handle, this.direction);\n        }));\n        this.subscriptions.add(this.service.resizeStart.subscribe((dir) => {\n            if (dir !== this.direction) {\n                this.setDisplay('none');\n            }\n        }));\n        this.subscriptions.add(this.service.dragStart.subscribe(() => {\n            this.setDisplay('none');\n        }));\n        this.subscriptions.add(merge(this.service.resizeEnd, this.service.dragEnd).subscribe(() => {\n            this.setDisplay('block');\n        }));\n        this.subscriptions.add(this.service.stateChange.subscribe((state) => {\n            this.setDisplay(state === 'default' ? 'block' : 'none');\n        }));\n    }\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n    }\n    setDisplay(value = 'block') {\n        this.renderer.setStyle(this.el.nativeElement, 'display', this.service.options.state === 'default' ? value : 'none');\n    }\n}\nResizeHandleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ResizeHandleDirective, deps: [{ token: i1$1.DraggableDirective, host: true }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: DragResizeService }], target: i0.ɵɵFactoryTarget.Directive });\nResizeHandleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ResizeHandleDirective, selector: \"[kendoWindowResizeHandle]\", inputs: { direction: \"direction\" }, host: { properties: { \"class.k-resize-handle\": \"this.hostClass\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ResizeHandleDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoWindowResizeHandle]'\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.DraggableDirective, decorators: [{\n                    type: Host\n                }] }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: DragResizeService }]; }, propDecorators: { direction: [{\n                type: Input\n            }], hostClass: [{\n                type: HostBinding,\n                args: ['class.k-resize-handle']\n            }] } });\n\nclass WindowTitleBarComponent {\n    constructor(el, service, ngZone) {\n        this.el = el;\n        this.ngZone = ngZone;\n        this.service = service;\n    }\n    ngOnInit() {\n        this.dragDirective = new DraggableDirective(this.el, this.ngZone);\n        this.dragDirective.ngOnInit();\n        if (this.isDraggable) {\n            this.subscribeDrag();\n        }\n        this.subscribeStateChange();\n    }\n    ngAfterViewInit() {\n        const element = this.el.nativeElement.querySelector('.k-window-title');\n        if (isPresent(element)) {\n            element.setAttribute('id', this.id);\n        }\n    }\n    ngOnDestroy() {\n        this.dragDirective.ngOnDestroy();\n        this.unsubscribeDrag();\n        this.unsubscribeState();\n    }\n    /**\n     * @hidden\n     */\n    subscribeDrag() {\n        this.unsubscribeDrag();\n        this.dragSubscription = of(this.dragDirective).subscribe(titleBar => {\n            this.service.onDrag(titleBar);\n        });\n    }\n    /**\n     * @hidden\n     */\n    subscribeStateChange() {\n        this.stateSubscription = this.service.stateChange.subscribe((state) => {\n            if (this.service.options.draggable) {\n                if (state === 'maximized') {\n                    this.unsubscribeDrag();\n                }\n                else {\n                    this.subscribeDrag();\n                }\n            }\n        });\n    }\n    /**\n     * @hidden\n     */\n    unsubscribeDrag() {\n        if (this.dragSubscription) {\n            this.service.dragSubscription.unsubscribe();\n            this.dragSubscription.unsubscribe();\n            this.dragSubscription = null;\n        }\n    }\n    /**\n     * @hidden\n     */\n    unsubscribeState() {\n        if (this.stateSubscription) {\n            this.stateSubscription.unsubscribe();\n            this.stateSubscription = null;\n        }\n    }\n    get className() {\n        return true;\n    }\n    get touchAction() {\n        if (this.isDraggable) {\n            return 'none';\n        }\n    }\n    /**\n     * @hidden\n     */\n    handle(ev) {\n        const target = ev.target;\n        const state = this.service.options.state;\n        if (!hasClasses(target, 'k-icon') && !isFocusable(target, false) && this.service.options.resizable) {\n            if (state === 'default') {\n                this.service.maximizeAction();\n            }\n            else if (state === 'maximized') {\n                this.service.restoreAction();\n            }\n        }\n    }\n    get isDraggable() {\n        const options = this.service.options;\n        return options.draggable && options.state !== 'maximized';\n    }\n}\nWindowTitleBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowTitleBarComponent, deps: [{ token: i0.ElementRef }, { token: DragResizeService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nWindowTitleBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: WindowTitleBarComponent, selector: \"kendo-window-titlebar\", inputs: { template: \"template\", id: \"id\" }, host: { listeners: { \"dblclick\": \"handle($event)\" }, properties: { \"class.k-window-titlebar\": \"this.className\", \"class.k-dialog-titlebar\": \"this.className\", \"style.touch-action\": \"this.touchAction\" } }, ngImport: i0, template: `\n\t<ng-content *ngIf=\"!template\"></ng-content>\n\t<ng-template\n\t\t[ngTemplateOutlet]=\"template\"\n\t\t[ngTemplateOutletContext]=\"{'$implicit': service}\" *ngIf=\"template\">\n\t</ng-template>\n\t`, isInline: true, directives: [{ type: i6.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i6.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowTitleBarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-window-titlebar',\n                    template: `\n\t<ng-content *ngIf=\"!template\"></ng-content>\n\t<ng-template\n\t\t[ngTemplateOutlet]=\"template\"\n\t\t[ngTemplateOutletContext]=\"{'$implicit': service}\" *ngIf=\"template\">\n\t</ng-template>\n\t`\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: DragResizeService }, { type: i0.NgZone }]; }, propDecorators: { template: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], className: [{\n                type: HostBinding,\n                args: ['class.k-window-titlebar']\n            }, {\n                type: HostBinding,\n                args: ['class.k-dialog-titlebar']\n            }], touchAction: [{\n                type: HostBinding,\n                args: ['style.touch-action']\n            }], handle: [{\n                type: HostListener,\n                args: ['dblclick', ['$event']]\n            }] } });\n\n/**\n * @hidden\n */\nclass NavigationService {\n    constructor(window, ngZone) {\n        this.window = window;\n        this.ngZone = ngZone;\n    }\n    process(ev) {\n        const key = ev.keyCode;\n        switch (key) {\n            case Keys.up:\n            case Keys.down:\n            case Keys.left:\n            case Keys.right: {\n                ev.preventDefault();\n                this.ngZone.run(() => {\n                    this.handleArrow(key, ev);\n                });\n                break;\n            }\n            case Keys.esc:\n                this.ngZone.run(() => {\n                    this.handleEscape();\n                });\n                break;\n            default:\n                break;\n        }\n    }\n    handleArrow(key, ev) {\n        const options = this.window.options;\n        if (ev.altKey) {\n            this.handleStateChange(key, options.state);\n            return;\n        }\n        if ((ev.ctrlKey || ev.metaKey) && options.state === 'default') {\n            this.handleResize(key);\n        }\n        else {\n            this.handleDrag(key);\n        }\n    }\n    handleEscape() {\n        this.window.closeAction();\n    }\n    handleDrag(key) {\n        let options = this.window.options;\n        if (!options.draggable) {\n            return;\n        }\n        const offset = this.window.currentOffsetAndPosition();\n        let restoreOptions = this.window.restoreOptions;\n        let ev = {};\n        let delta = 10;\n        if (key === Keys.left || key === Keys.up) {\n            delta *= -1;\n        }\n        switch (key) {\n            case Keys.left:\n            case Keys.right: {\n                ev.left = offset.x + delta;\n                options.left = ev.left;\n                break;\n            }\n            case Keys.up:\n            case Keys.down: {\n                ev.top = offset.y + delta;\n                options.top = ev.top;\n                break;\n            }\n            default:\n                break;\n        }\n        if (options.state === 'minimized' && isPresent(restoreOptions)) {\n            restoreOptions.left = options.left;\n            restoreOptions.top = options.top;\n        }\n        this.window.change.emit(ev);\n    }\n    handleResize(key) {\n        const options = this.window.options;\n        if (!options.resizable) {\n            return;\n        }\n        const offset = this.window.currentOffsetAndPosition();\n        let newWidth;\n        let newHeight;\n        let ev = {};\n        let delta = 10;\n        if (key === Keys.left || key === Keys.up) {\n            delta *= -1;\n        }\n        switch (key) {\n            case Keys.left:\n            case Keys.right: {\n                newWidth = offset.width + delta;\n                if (newWidth !== options.width && newWidth >= options.minWidth) {\n                    ev.width = newWidth;\n                }\n                break;\n            }\n            case Keys.up:\n            case Keys.down: {\n                newHeight = offset.height + delta;\n                if (newHeight !== options.height && newHeight >= options.minHeight) {\n                    ev.height = newHeight;\n                }\n                break;\n            }\n            default:\n                break;\n        }\n        if (isPresent(ev.width) || isPresent(ev.height)) {\n            OFFSET_STYLES.forEach((style) => {\n                if (isPresent(ev[style])) {\n                    this.window.options[style] = ev[style];\n                }\n            });\n            this.window.change.emit(ev);\n        }\n    }\n    handleStateChange(key, state) {\n        if ((state === 'minimized' && key === Keys.up) ||\n            (state === 'maximized' && key === Keys.down)) {\n            this.window.restoreAction();\n            return;\n        }\n        if (state === 'default') {\n            if (key === Keys.up) {\n                this.window.maximizeAction();\n            }\n            else if (key === Keys.down) {\n                this.window.minimizeAction();\n            }\n        }\n    }\n}\nNavigationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NavigationService, deps: [{ token: DragResizeService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nNavigationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NavigationService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NavigationService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: DragResizeService }, { type: i0.NgZone }]; } });\n\nclass WindowMinimizeActionDirective extends Button {\n    constructor(el, renderer, _service, localization, ngZone) {\n        super(el, renderer, null, localization, ngZone);\n        this.buttonType = 'button';\n        this.buttonClass = true;\n        this.window = _service;\n        this.fillMode = 'flat';\n        this.icon = 'window-minimize';\n    }\n    /**\n     * @hidden\n     */\n    onClick() {\n        if (!this.isDisabled) {\n            this.window.minimizeAction();\n        }\n    }\n    get visible() {\n        return this.window.options.state === 'default' ? 'inline-flex' : 'none';\n    }\n}\nWindowMinimizeActionDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowMinimizeActionDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: DragResizeService, optional: true }, { token: i1.LocalizationService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nWindowMinimizeActionDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: WindowMinimizeActionDirective, selector: \"button[kendoWindowMinimizeAction]\", inputs: { window: \"window\" }, host: { listeners: { \"click\": \"onClick()\" }, properties: { \"attr.type\": \"this.buttonType\", \"class.k-window-action\": \"this.buttonClass\", \"style.display\": \"this.visible\" } }, providers: [\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.button'\n        }\n    ], exportAs: [\"kendoWindowMinimizeAction\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowMinimizeActionDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    exportAs: 'kendoWindowMinimizeAction',\n                    providers: [\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.button'\n                        }\n                    ],\n                    selector: 'button[kendoWindowMinimizeAction]' // eslint-disable-line\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: DragResizeService, decorators: [{\n                    type: Optional\n                }] }, { type: i1.LocalizationService }, { type: i0.NgZone }]; }, propDecorators: { window: [{\n                type: Input\n            }], buttonType: [{\n                type: HostBinding,\n                args: ['attr.type']\n            }], buttonClass: [{\n                type: HostBinding,\n                args: ['class.k-window-action']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }], visible: [{\n                type: HostBinding,\n                args: ['style.display']\n            }] } });\n\nclass WindowMaximizeActionDirective extends Button {\n    constructor(el, renderer, _service, localization, ngZone) {\n        super(el, renderer, null, localization, ngZone);\n        this.buttonType = 'button';\n        this.buttonClass = true;\n        this.window = _service;\n        this.fillMode = 'flat';\n        this.icon = 'window';\n    }\n    /**\n     * @hidden\n     */\n    onClick() {\n        if (!this.isDisabled) {\n            this.window.maximizeAction();\n        }\n    }\n    get visible() {\n        return this.window.options.state === 'default' ? 'inline-flex' : 'none';\n    }\n}\nWindowMaximizeActionDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowMaximizeActionDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: DragResizeService, optional: true }, { token: i1.LocalizationService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nWindowMaximizeActionDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: WindowMaximizeActionDirective, selector: \"button[kendoWindowMaximizeAction]\", inputs: { window: \"window\" }, host: { listeners: { \"click\": \"onClick()\" }, properties: { \"attr.type\": \"this.buttonType\", \"class.k-window-action\": \"this.buttonClass\", \"style.display\": \"this.visible\" } }, providers: [\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.button'\n        }\n    ], exportAs: [\"kendoWindowMaximizeAction\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowMaximizeActionDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    exportAs: 'kendoWindowMaximizeAction',\n                    providers: [\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.button'\n                        }\n                    ],\n                    selector: 'button[kendoWindowMaximizeAction]' // eslint-disable-line\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: DragResizeService, decorators: [{\n                    type: Optional\n                }] }, { type: i1.LocalizationService }, { type: i0.NgZone }]; }, propDecorators: { window: [{\n                type: Input\n            }], buttonType: [{\n                type: HostBinding,\n                args: ['attr.type']\n            }], buttonClass: [{\n                type: HostBinding,\n                args: ['class.k-window-action']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }], visible: [{\n                type: HostBinding,\n                args: ['style.display']\n            }] } });\n\nclass WindowRestoreActionDirective extends Button {\n    constructor(el, renderer, _service, localization, ngZone) {\n        super(el, renderer, null, localization, ngZone);\n        this.buttonType = 'button';\n        this.buttonClass = true;\n        this.window = _service;\n        this.fillMode = 'flat';\n        this.icon = 'window-restore';\n    }\n    /**\n     * @hidden\n     */\n    onClick() {\n        if (!this.isDisabled) {\n            this.window.restoreAction();\n        }\n    }\n    get visible() {\n        return this.window.options.state === 'default' ? 'none' : 'inline-flex';\n    }\n}\nWindowRestoreActionDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowRestoreActionDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: DragResizeService, optional: true }, { token: i1.LocalizationService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nWindowRestoreActionDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: WindowRestoreActionDirective, selector: \"button[kendoWindowRestoreAction]\", inputs: { window: \"window\" }, host: { listeners: { \"click\": \"onClick()\" }, properties: { \"attr.type\": \"this.buttonType\", \"class.k-window-action\": \"this.buttonClass\", \"style.display\": \"this.visible\" } }, providers: [\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.button'\n        }\n    ], exportAs: [\"kendoWindowRestoreAction\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowRestoreActionDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    exportAs: 'kendoWindowRestoreAction',\n                    providers: [\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.button'\n                        }\n                    ],\n                    selector: 'button[kendoWindowRestoreAction]' // eslint-disable-line\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: DragResizeService, decorators: [{\n                    type: Optional\n                }] }, { type: i1.LocalizationService }, { type: i0.NgZone }]; }, propDecorators: { window: [{\n                type: Input\n            }], buttonType: [{\n                type: HostBinding,\n                args: ['attr.type']\n            }], buttonClass: [{\n                type: HostBinding,\n                args: ['class.k-window-action']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }], visible: [{\n                type: HostBinding,\n                args: ['style.display']\n            }] } });\n\nclass WindowCloseActionDirective extends Button {\n    constructor(el, renderer, _service, localization, ngZone) {\n        super(el, renderer, null, localization, ngZone);\n        this.buttonType = 'button';\n        this.buttonClass = true;\n        this.window = _service;\n        this.fillMode = 'flat';\n        this.icon = 'x';\n    }\n    /**\n     * @hidden\n     */\n    onClick() {\n        if (!this.isDisabled) {\n            this.window.closeAction();\n        }\n    }\n}\nWindowCloseActionDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowCloseActionDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: DragResizeService, optional: true }, { token: i1.LocalizationService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nWindowCloseActionDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: WindowCloseActionDirective, selector: \"button[kendoWindowCloseAction]\", inputs: { window: \"window\" }, host: { listeners: { \"click\": \"onClick()\" }, properties: { \"attr.type\": \"this.buttonType\", \"class.k-window-action\": \"this.buttonClass\" } }, providers: [\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.button'\n        }\n    ], exportAs: [\"kendoWindowCloseAction\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowCloseActionDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    exportAs: 'kendoWindowCloseAction',\n                    providers: [\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.button'\n                        }\n                    ],\n                    selector: 'button[kendoWindowCloseAction]' // eslint-disable-line\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: DragResizeService, decorators: [{\n                    type: Optional\n                }] }, { type: i1.LocalizationService }, { type: i0.NgZone }]; }, propDecorators: { window: [{\n                type: Input\n            }], buttonType: [{\n                type: HostBinding,\n                args: ['attr.type']\n            }], buttonClass: [{\n                type: HostBinding,\n                args: ['class.k-window-action']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\n\n/**\n * Represents the [Kendo UI Window component for Angular]({% slug overview_window_dialogs %}).\n */\nclass WindowComponent {\n    constructor(el, renderer, service, navigation, ngZone, localization) {\n        this.el = el;\n        this.renderer = renderer;\n        this.service = service;\n        this.navigation = navigation;\n        this.ngZone = ngZone;\n        this.localization = localization;\n        /**\n         * Specifies if the content of the component is persisted in the DOM when minimized.\n         * @default false\n         */\n        this.keepContent = false;\n        /**\n         * Fires when the user starts to move the Window.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * Fires when the Window was moved by the user.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * Fires when the user starts to resize the Window.\n         */\n        this.resizeStart = new EventEmitter();\n        /**\n         * Fires when the Window was resized by the user.\n         */\n        this.resizeEnd = new EventEmitter();\n        /**\n         * Fires when the user closes the Window.\n         */\n        this.close = new EventEmitter();\n        /**\n         * Fires when the `width` property of the component was updated. The event is triggered only after the resizing\n         * has ended. The event data contains the new width. Allows a two-way binding of the `width` property.\n         */\n        this.widthChange = new EventEmitter();\n        /**\n         * Fires when the `height` property of the component was updated. The event is triggered only after the resizing\n         * has ended. The event data contains the new height. Allows a two-way binding of the `height` property.\n         */\n        this.heightChange = new EventEmitter();\n        /**\n         * Fires when the `top` property of the component was updated. The event is triggered only after the dragging\n         * and resizing have ended. The event data contains the new top offset. Allows a two-way binding of the `top` property.\n         */\n        this.topChange = new EventEmitter();\n        /**\n         * Fires when the `left` property of the component was updated. The event is triggered only after the dragging\n         * and resizing have ended. The event data contains the new left offset. Allows a two-way binding of the `left` property.\n         */\n        this.leftChange = new EventEmitter();\n        /**\n         * Fires when the `state` property of the component was updated. The event data contains the new state. Allows a\n         * two-way binding of the `state` property.\n         */\n        this.stateChange = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.messages = {};\n        this.tabIndex = 0;\n        this.role = 'dialog';\n        /**\n         * @hidden\n         */\n        this.titleId = null;\n        this.draged = false;\n        this.resized = false;\n        this.windowSubscription = new Subscription();\n        this.domSubs = new Subscription();\n        validatePackage(packageMetadata);\n        this.direction = this.localization.rtl ? 'rtl' : 'ltr';\n        this.localizationChangeSubscription = this.localization.changes\n            .subscribe(({ rtl }) => this.direction = rtl ? 'rtl' : 'ltr');\n        this.resizeDirections = RESIZE_DIRECTIONS;\n        this.subscribeEvents();\n        this.titleId = this.generateTitleId();\n    }\n    /**\n     * Specifies whether the user will be able to drag the component.\n     * @default true\n     */\n    set draggable(value) {\n        this.options.draggable = value;\n    }\n    get draggable() {\n        return this.options.draggable;\n    }\n    /**\n     * Specifies whether the user will be able to resize the component.\n     * @default true\n     */\n    set resizable(value) {\n        this.options.resizable = value;\n    }\n    get resizable() {\n        return this.options.resizable;\n    }\n    /**\n     * @hidden\n     */\n    set cssClass(classes) {\n        this.setServiceClasses(this._cssClass, classes);\n        this._cssClass = classes;\n    }\n    get cssClass() {\n        return this._cssClass;\n    }\n    /**\n     * @hidden\n     */\n    set htmlAttributes(attributes) {\n        setHTMLAttributes(attributes, this.renderer, this.el.nativeElement);\n        const el = this.el.nativeElement;\n        const dir = el.getAttribute('dir');\n        const tIndex = el.getAttribute('tabindex');\n        if (this.direction !== dir) {\n            this.direction = dir;\n        }\n        if (this.tabIndex !== tIndex) {\n            this.tabIndex = tIndex;\n        }\n        this._htmlAttributes = attributes;\n    }\n    get htmlAttributes() {\n        return this._htmlAttributes;\n    }\n    /**\n     * Specifies the initial state of the component.\n     * If not specified, the value is set to `default`.\n     *\n     * The possible values are:\n     * * `minimized`\n     * * `maximized`\n     * * `default`\n     */\n    set state(value) {\n        this.options.state = value;\n    }\n    get state() {\n        return this.options.state;\n    }\n    /**\n     * Specifies the minimum width of the component.\n     * The `minWidth` property has to be set in pixels.\n     * @default 120\n     */\n    set minWidth(value) {\n        this.setOption('minWidth', value);\n    }\n    get minWidth() {\n        return this.options.minWidth;\n    }\n    /**\n     * Specifies the minimum height of the Window.\n     * The `minHeight` property has to be set in pixels.\n     * @default 100\n     */\n    set minHeight(value) {\n        this.setOption('minHeight', value);\n    }\n    get minHeight() {\n        return this.options.minHeight;\n    }\n    /**\n     * Specifies the width of the Window.\n     * The `width` property has to be set in pixels.\n     */\n    set width(value) {\n        this.setOption('width', value);\n    }\n    get width() {\n        return this.options.width;\n    }\n    /**\n     * Specifies the height of the Window.\n     * The `height` property has to be set in pixels.\n     */\n    set height(value) {\n        this.setOption('height', value);\n    }\n    get height() {\n        return this.options.height;\n    }\n    /**\n     * Specifies the initial top offset of the Window.\n     * The `top` property has to be set in pixels.\n     */\n    set top(value) {\n        this.setOption('top', value);\n    }\n    get top() {\n        return this.options.top;\n    }\n    /**\n     * Specifies the initial left offset of the Window.\n     * Numeric values are treated as pixels.\n     */\n    set left(value) {\n        this.setOption('left', value);\n    }\n    get left() {\n        return this.options.left;\n    }\n    get closeButtonTitle() {\n        if (this.messages && this.messages.closeTitle) {\n            return this.messages.closeTitle;\n        }\n        return this.localization.get('closeTitle');\n    }\n    get restoreButtonTitle() {\n        if (this.messages && this.messages.restoreTitle) {\n            return this.messages.restoreTitle;\n        }\n        return this.localization.get('restoreTitle');\n    }\n    get maximizeButtonTitle() {\n        if (this.messages && this.messages.maximizeTitle) {\n            return this.messages.maximizeTitle;\n        }\n        return this.localization.get('maximizeTitle');\n    }\n    get minimizeButtonTitle() {\n        if (this.messages && this.messages.minimizeTitle) {\n            return this.messages.minimizeTitle;\n        }\n        return this.localization.get('minimizeTitle');\n    }\n    get hostClasses() {\n        return true;\n    }\n    get dir() {\n        return this.direction;\n    }\n    ngAfterViewInit() {\n        this.setNextZIndex();\n        this.handleInitialFocus();\n        this.ngZone.runOutsideAngular(() => Promise.resolve(null).then(() => this.setInitialOffset()));\n        this.initDomEvents();\n        if (this.titleBarView || this.titleBarContent) {\n            this.renderer.setAttribute(this.el.nativeElement, 'aria-labelledby', this.titleId);\n        }\n    }\n    ngOnInit() {\n        this.renderer.removeAttribute(this.el.nativeElement, 'title');\n        this.service.init(this.el);\n    }\n    ngOnChanges(changes) {\n        OFFSET_STYLES.forEach((style) => {\n            if (isChanged(style, changes)) {\n                this.setStyle(style, this.options[style]);\n            }\n        });\n        if (isChanged('draggable', changes)) {\n            const titleBar = isPresent(this.titleBarContent) ? this.titleBarContent : this.titleBarView;\n            if (isTruthy(changes.draggable.currentValue)) {\n                titleBar.subscribeDrag();\n            }\n            else {\n                titleBar.unsubscribeDrag();\n            }\n        }\n        if (isChanged('state', changes)) {\n            if (isPresent(this.service.lastAction)) {\n                this.service.lastAction = null;\n            }\n            else {\n                this.service.applyManualState();\n                this.updateAllOffset();\n            }\n        }\n    }\n    ngOnDestroy() {\n        if (this.windowSubscription) {\n            this.windowSubscription.unsubscribe();\n        }\n        if (this.domSubs) {\n            this.domSubs.unsubscribe();\n        }\n        this.localizationChangeSubscription.unsubscribe();\n    }\n    /**\n     * Focuses the wrapper of the Window component.\n     */\n    focus() {\n        const wrapper = this.el.nativeElement;\n        if (isPresent(wrapper)) {\n            wrapper.focus();\n        }\n    }\n    /**\n     * Brings the current Window component on top of other Window components on the page.\n     */\n    bringToFront() {\n        this.setNextZIndex();\n    }\n    /**\n     * Manually updates the `width` or `height` option of the Window.\n     * The required style will be applied to the Window wrapper element and the\n     * corresponding property of the component instance will be updated.\n     * This method is intended to be used for sizing dynamically created components using the\n     * [`WindowService`]({% slug api_dialog_windowservice %})\n     * @param {WindowDimensionSetting} dimension - The option that will be updated\n     * @param {number} value - The value set in pixels\n     */\n    setDimension(dimension, value) {\n        this.setOption(dimension, value);\n        this.setStyle(dimension, value);\n    }\n    /**\n     * Manually updates the `top` or `left` offset of the Window.\n     * The required style will be applied to the Window wrapper element and the\n     * corresponding property of the component instance will be updated.\n     * This method is intended to be used for positioning dynamically created components using the\n     * [`WindowService`]({% slug api_dialog_windowservice %})\n     * @param {WindowOffsetSetting} offset - The option that will be updated\n     * @param {number} value - The value set in pixels\n     */\n    setOffset(offset, value) {\n        this.setOption(offset, value);\n        this.setStyle(offset, value);\n    }\n    get showDefaultTitleBar() {\n        return !isPresent(this.titleBarContent);\n    }\n    get styleMinWidth() {\n        return this.minWidth + 'px';\n    }\n    get styleMinHeight() {\n        return this.minHeight + 'px';\n    }\n    get stylePosition() {\n        return this.options.position;\n    }\n    get wrapperMaximizedClass() {\n        return this.state === 'maximized';\n    }\n    get wrapperMinimizedClass() {\n        return this.state === 'minimized';\n    }\n    /**\n     * @hidden\n     */\n    onComponentFocus() {\n        this.renderer.addClass(this.el.nativeElement, 'k-focus');\n        this.setNextZIndex();\n    }\n    /**\n     * @hidden\n     */\n    onComponentBlur() {\n        this.renderer.removeClass(this.el.nativeElement, 'k-focus');\n    }\n    subscribeEvents() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        this.windowSubscription.add(this.service.focus.subscribe(() => {\n            this.el.nativeElement.focus();\n        }));\n        this.windowSubscription.add(this.service.dragStart.subscribe(() => {\n            this.draged = true;\n            this.ngZone.run(() => {\n                this.dragStart.emit();\n            });\n        }));\n        this.windowSubscription.add(this.service.dragEnd.subscribe(() => {\n            if (this.draged) {\n                this.draged = false;\n                this.ngZone.run(() => {\n                    this.dragEnd.emit();\n                });\n            }\n        }));\n        this.windowSubscription.add(this.service.close.subscribe(() => {\n            this.close.emit();\n        }));\n        this.windowSubscription.add(this.service.resizeStart.subscribe(() => {\n            this.resized = true;\n            this.ngZone.run(() => {\n                this.resizeStart.emit();\n            });\n        }));\n        this.windowSubscription.add(this.service.resizeEnd.subscribe(() => {\n            if (this.resized) {\n                this.resized = false;\n                this.ngZone.run(() => {\n                    this.resizeEnd.emit();\n                });\n            }\n        }));\n        this.windowSubscription.add(this.service.change.subscribe((ev) => {\n            OFFSET_STYLES.forEach((style) => {\n                if (isPresent(ev[style])) {\n                    this.setStyle(style, ev[style]);\n                    if (this.state !== 'maximized') {\n                        const emitter = this[style + 'Change'];\n                        if (emitter.observers.length) {\n                            this.ngZone.run(() => {\n                                emitter.emit(ev[style]);\n                            });\n                        }\n                    }\n                }\n            });\n        }));\n        this.windowSubscription.add(this.service.stateChange.subscribe((state) => {\n            if (isPresent(this.service.lastAction)) {\n                this.updateAllOffset();\n                this.stateChange.emit(state);\n            }\n        }));\n    }\n    initDomEvents() {\n        if (!this.el) {\n            return;\n        }\n        this.ngZone.runOutsideAngular(() => {\n            this.domSubs.add(this.renderer.listen(this.el.nativeElement, 'keydown', (ev) => {\n                this.onKeyDown(ev);\n            }));\n        });\n    }\n    onKeyDown(event) {\n        if (hasClasses(event.target, WINDOW_CLASSES)) {\n            this.navigation.process(event);\n        }\n    }\n    setServiceClasses(prevValue, value) {\n        const el = this.el.nativeElement;\n        if (prevValue) {\n            parseCSSClassNames(prevValue).forEach(className => {\n                this.renderer.removeClass(el, className);\n            });\n        }\n        if (value) {\n            parseCSSClassNames(value).forEach(className => {\n                this.renderer.addClass(el, className);\n            });\n        }\n    }\n    setNextZIndex() {\n        const currentZIndex = this.el.nativeElement.style['z-index'];\n        const nextPossibleZIndex = this.service.nextPossibleZIndex;\n        if (!currentZIndex || (nextPossibleZIndex - currentZIndex > 1)) {\n            this.renderer.setStyle(this.el.nativeElement, \"z-index\", this.service.nextZIndex);\n        }\n    }\n    setInitialOffset() {\n        if (this.state !== 'maximized') {\n            this.updateAllOffset();\n            if (!isPresent(this.left) || !isPresent(this.top)) {\n                this.service.center();\n            }\n        }\n        else {\n            const viewPort = this.service.windowViewPort;\n            this.setStyle('width', viewPort.width);\n            this.setStyle('height', viewPort.height);\n            this.setStyle('top', 0);\n            this.setStyle('left', 0);\n        }\n    }\n    updateAllOffset() {\n        OFFSET_STYLES.forEach((style) => {\n            if (isPresent(this[style])) {\n                this.setStyle(style, this[style]);\n            }\n            else {\n                this.removeStyle(style);\n            }\n        });\n    }\n    setStyle(style, value) {\n        this.renderer.setStyle(this.el.nativeElement, style, value + 'px');\n    }\n    removeStyle(style) {\n        this.renderer.removeStyle(this.el.nativeElement, style);\n    }\n    get options() {\n        return this.service.options;\n    }\n    setOption(style, value) {\n        if (typeof value !== 'number' && typeof value !== 'string') {\n            return;\n        }\n        const parsedValue = (typeof value === 'number') ? value : parseInt(value, 10);\n        this.options[style] = parsedValue;\n        this.service.setRestoreOption(style, parsedValue);\n    }\n    handleInitialFocus() {\n        const wrapper = this.el.nativeElement;\n        if (this.autoFocusedElement) {\n            const initiallyFocusedElement = wrapper.querySelector(this.autoFocusedElement);\n            if (initiallyFocusedElement) {\n                initiallyFocusedElement.focus();\n            }\n        }\n        else {\n            this.focus();\n        }\n    }\n    /**\n     * @hidden\n     */\n    generateTitleId() {\n        return 'kendo-window-title-' + Math.ceil(Math.random() * 1000000).toString();\n    }\n}\nWindowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: DragResizeService }, { token: NavigationService }, { token: i0.NgZone }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nWindowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: WindowComponent, selector: \"kendo-window\", inputs: { autoFocusedElement: \"autoFocusedElement\", title: \"title\", draggable: \"draggable\", resizable: \"resizable\", keepContent: \"keepContent\", state: \"state\", minWidth: \"minWidth\", minHeight: \"minHeight\", width: \"width\", height: \"height\", top: \"top\", left: \"left\" }, outputs: { dragStart: \"dragStart\", dragEnd: \"dragEnd\", resizeStart: \"resizeStart\", resizeEnd: \"resizeEnd\", close: \"close\", widthChange: \"widthChange\", heightChange: \"heightChange\", topChange: \"topChange\", leftChange: \"leftChange\", stateChange: \"stateChange\" }, host: { listeners: { \"focus\": \"onComponentFocus()\", \"blur\": \"onComponentBlur()\" }, properties: { \"attr.tabIndex\": \"this.tabIndex\", \"attr.role\": \"this.role\", \"class.k-window\": \"this.hostClasses\", \"attr.dir\": \"this.dir\", \"style.minWidth\": \"this.styleMinWidth\", \"style.minHeight\": \"this.styleMinHeight\", \"style.position\": \"this.stylePosition\", \"class.k-window-maximized\": \"this.wrapperMaximizedClass\", \"class.k-window-minimized\": \"this.wrapperMinimizedClass\" } }, providers: [\n        DragResizeService,\n        NavigationService,\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.window'\n        }\n    ], queries: [{ propertyName: \"titleBarContent\", first: true, predicate: WindowTitleBarComponent, descendants: true }], viewQueries: [{ propertyName: \"titleBarView\", first: true, predicate: WindowTitleBarComponent, descendants: true }, { propertyName: \"resizeHandles\", predicate: ResizeHandleDirective, descendants: true }], exportAs: [\"kendoWindow\"], usesOnChanges: true, ngImport: i0, template: `\n        <ng-container kendoWindowLocalizedMessages\n            i18n-closeTitle=\"kendo.window.closeTitle|The title of the close button\"\n            closeTitle=\"Close\"\n\n            i18n-restoreTitle=\"kendo.window.restoreTitle|The title of the restore button\"\n            restoreTitle=\"Restore\"\n\n            i18n-maximizeTitle=\"kendo.window.maximizeTitle|The title of the maximize button\"\n            maximizeTitle=\"Maximize\"\n\n            i18n-minimizeTitle=\"kendo.window.minimizeTitle|The title of the minimize button\"\n            minimizeTitle=\"Minimize\"\n        >\n        <ng-container>\n\n        <kendo-window-titlebar *ngIf=\"showDefaultTitleBar\" [template]=\"titleBarTemplate\" [id]=\"titleId\">\n            <div class=\"k-window-title\">{{ title }}</div>\n            <div class=\"k-window-actions\">\n                <button kendoWindowMinimizeAction  [attr.title]=\"minimizeButtonTitle\" [attr.aria-label]=\"minimizeButtonTitle\"></button>\n                <button kendoWindowMaximizeAction [attr.title]=\"maximizeButtonTitle\" [attr.aria-label]=\"maximizeButtonTitle\"></button>\n                <button kendoWindowRestoreAction [attr.title]=\"restoreButtonTitle\" [attr.aria-label]=\"restoreButtonTitle\"></button>\n                <button kendoWindowCloseAction [attr.title]=\"closeButtonTitle\" [attr.aria-label]=\"closeButtonTitle\"></button>\n            </div>\n        </kendo-window-titlebar>\n        <ng-content select=\"kendo-window-titlebar\" *ngIf=\"!showDefaultTitleBar\"></ng-content>\n\n        <div *ngIf=\"state !== 'minimized' || keepContent\"\n            [hidden]=\"state === 'minimized' && keepContent\"\n            class=\"k-content k-window-content\"\n        >\n            <ng-content *ngIf=\"!contentTemplate\"></ng-content>\n            <ng-template [ngTemplateOutlet]=\"contentTemplate\" *ngIf=\"contentTemplate\"></ng-template>\n        </div>\n\n        <ng-template [ngIf]='resizable'>\n            <div *ngFor='let dir of resizeDirections'\n                [direction]=\"dir\"\n                kendoWindowResizeHandle\n                kendoDraggable>\n            </div>\n        </ng-template>\n    `, isInline: true, components: [{ type: WindowTitleBarComponent, selector: \"kendo-window-titlebar\", inputs: [\"template\", \"id\"] }], directives: [{ type: LocalizedMessagesDirective, selector: \"\\n    [kendoDialogLocalizedMessages],\\n    [kendoWindowLocalizedMessages],\\n    [kendoDialogTitleBarLocalizedMessages]\\n  \" }, { type: i6.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: WindowMinimizeActionDirective, selector: \"button[kendoWindowMinimizeAction]\", inputs: [\"window\"], exportAs: [\"kendoWindowMinimizeAction\"] }, { type: WindowMaximizeActionDirective, selector: \"button[kendoWindowMaximizeAction]\", inputs: [\"window\"], exportAs: [\"kendoWindowMaximizeAction\"] }, { type: WindowRestoreActionDirective, selector: \"button[kendoWindowRestoreAction]\", inputs: [\"window\"], exportAs: [\"kendoWindowRestoreAction\"] }, { type: WindowCloseActionDirective, selector: \"button[kendoWindowCloseAction]\", inputs: [\"window\"], exportAs: [\"kendoWindowCloseAction\"] }, { type: i6.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i6.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: ResizeHandleDirective, selector: \"[kendoWindowResizeHandle]\", inputs: [\"direction\"] }, { type: i1$1.DraggableDirective, selector: \"[kendoDraggable]\", inputs: [\"enableDrag\"], outputs: [\"kendoPress\", \"kendoDrag\", \"kendoRelease\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoWindow',\n                    providers: [\n                        DragResizeService,\n                        NavigationService,\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.window'\n                        }\n                    ],\n                    selector: 'kendo-window',\n                    template: `\n        <ng-container kendoWindowLocalizedMessages\n            i18n-closeTitle=\"kendo.window.closeTitle|The title of the close button\"\n            closeTitle=\"Close\"\n\n            i18n-restoreTitle=\"kendo.window.restoreTitle|The title of the restore button\"\n            restoreTitle=\"Restore\"\n\n            i18n-maximizeTitle=\"kendo.window.maximizeTitle|The title of the maximize button\"\n            maximizeTitle=\"Maximize\"\n\n            i18n-minimizeTitle=\"kendo.window.minimizeTitle|The title of the minimize button\"\n            minimizeTitle=\"Minimize\"\n        >\n        <ng-container>\n\n        <kendo-window-titlebar *ngIf=\"showDefaultTitleBar\" [template]=\"titleBarTemplate\" [id]=\"titleId\">\n            <div class=\"k-window-title\">{{ title }}</div>\n            <div class=\"k-window-actions\">\n                <button kendoWindowMinimizeAction  [attr.title]=\"minimizeButtonTitle\" [attr.aria-label]=\"minimizeButtonTitle\"></button>\n                <button kendoWindowMaximizeAction [attr.title]=\"maximizeButtonTitle\" [attr.aria-label]=\"maximizeButtonTitle\"></button>\n                <button kendoWindowRestoreAction [attr.title]=\"restoreButtonTitle\" [attr.aria-label]=\"restoreButtonTitle\"></button>\n                <button kendoWindowCloseAction [attr.title]=\"closeButtonTitle\" [attr.aria-label]=\"closeButtonTitle\"></button>\n            </div>\n        </kendo-window-titlebar>\n        <ng-content select=\"kendo-window-titlebar\" *ngIf=\"!showDefaultTitleBar\"></ng-content>\n\n        <div *ngIf=\"state !== 'minimized' || keepContent\"\n            [hidden]=\"state === 'minimized' && keepContent\"\n            class=\"k-content k-window-content\"\n        >\n            <ng-content *ngIf=\"!contentTemplate\"></ng-content>\n            <ng-template [ngTemplateOutlet]=\"contentTemplate\" *ngIf=\"contentTemplate\"></ng-template>\n        </div>\n\n        <ng-template [ngIf]='resizable'>\n            <div *ngFor='let dir of resizeDirections'\n                [direction]=\"dir\"\n                kendoWindowResizeHandle\n                kendoDraggable>\n            </div>\n        </ng-template>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: DragResizeService }, { type: NavigationService }, { type: i0.NgZone }, { type: i1.LocalizationService }]; }, propDecorators: { autoFocusedElement: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], draggable: [{\n                type: Input\n            }], resizable: [{\n                type: Input\n            }], keepContent: [{\n                type: Input\n            }], state: [{\n                type: Input\n            }], minWidth: [{\n                type: Input\n            }], minHeight: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], top: [{\n                type: Input\n            }], left: [{\n                type: Input\n            }], dragStart: [{\n                type: Output\n            }], dragEnd: [{\n                type: Output\n            }], resizeStart: [{\n                type: Output\n            }], resizeEnd: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }], widthChange: [{\n                type: Output\n            }], heightChange: [{\n                type: Output\n            }], topChange: [{\n                type: Output\n            }], leftChange: [{\n                type: Output\n            }], stateChange: [{\n                type: Output\n            }], tabIndex: [{\n                type: HostBinding,\n                args: ['attr.tabIndex']\n            }], role: [{\n                type: HostBinding,\n                args: ['attr.role']\n            }], hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-window']\n            }], dir: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], titleBarView: [{\n                type: ViewChild,\n                args: [WindowTitleBarComponent, { static: false }]\n            }], titleBarContent: [{\n                type: ContentChild,\n                args: [WindowTitleBarComponent, { static: false }]\n            }], resizeHandles: [{\n                type: ViewChildren,\n                args: [ResizeHandleDirective]\n            }], styleMinWidth: [{\n                type: HostBinding,\n                args: ['style.minWidth']\n            }], styleMinHeight: [{\n                type: HostBinding,\n                args: ['style.minHeight']\n            }], stylePosition: [{\n                type: HostBinding,\n                args: ['style.position']\n            }], wrapperMaximizedClass: [{\n                type: HostBinding,\n                args: ['class.k-window-maximized']\n            }], wrapperMinimizedClass: [{\n                type: HostBinding,\n                args: ['class.k-window-minimized']\n            }], onComponentFocus: [{\n                type: HostListener,\n                args: ['focus']\n            }], onComponentBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }] } });\n\n/**\n * Indicates that the **Close** button of a Window that is opened through `WindowService` is clicked.\n */\nclass WindowCloseResult {\n}\n\n/**\n * Holds references to the object instance of the Window.\n * Controls the Windows that were opened through `WindowService`\n * ([see example]({% slug api_dialog_windowservice %}#toc-open)).\n */\nclass WindowRef {\n}\n\n/**\n * The settings for the Window actions when the Window is opened through `WindowService`\n * ([see example]({% slug api_dialog_windowservice %}#toc-open)).\n */\nclass WindowSettings {\n}\n\n/**\n * @hidden\n */\nclass WindowContainerService {\n    set container(container) {\n        WindowContainerService.container = container;\n    }\n    get container() {\n        return WindowContainerService.container;\n    }\n}\nWindowContainerService.container = null;\nWindowContainerService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowContainerService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nWindowContainerService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowContainerService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowContainerService, decorators: [{\n            type: Injectable\n        }] });\n\nconst isNotComponent = (component) => isString(component) || component instanceof TemplateRef;\nclass WindowInjector {\n    constructor(getWindowRef, parentInjector) {\n        this.getWindowRef = getWindowRef;\n        this.parentInjector = parentInjector;\n    }\n    get(token, notFoundValue) {\n        if (token === WindowRef) {\n            return this.getWindowRef();\n        }\n        return this.parentInjector.get(token, notFoundValue);\n    }\n}\n/**\n * A service for opening Windows dynamically\n * ([see example]({% slug service_window %})).\n */\nclass WindowService {\n    constructor(\n    /**\n     * @hidden\n     */\n    resolver, containerService) {\n        this.resolver = resolver;\n        this.containerService = containerService;\n    }\n    /**\n     * Opens a Window component.\n     *\n     * @param {WindowSettings} settings - The settings that define the Window.\n     * @returns {WindowRef} - A reference to the Window object.\n     *\n     * @example\n     *\n     * ```ts-no-run\n     * _@Component({\n     *   selector: 'my-app',\n     *   template: `\n     *     <button kendoButton (click)=\"open()\">Open window</button>\n     *     <div kendoWindowContainer></div>\n     *   `\n     * })\n     * export class AppComponent {\n     *     constructor( private windowService: WindowService ) {}\n     *\n     *     public open() {\n     *         var window = this.windowService.open({\n     *           title: \"My window\",\n     *           content: \"My content!\"\n     *         });\n     *\n     *         window.result.subscribe((result) => {\n     *           if (result instanceof WindowCloseResult) {\n     *             console.log(\"Window was closed\");\n     *           }\n     *         });\n     *     }\n     * }\n     * ```\n     *\n     */\n    open(settings) {\n        const factory = this.resolver.resolveComponentFactory(WindowComponent);\n        const container = settings.appendTo || this.containerService.container;\n        if (!container) {\n            throw new Error(`Cannot attach window to the page.\n                Add an element that uses the kendoWindowContainer directive, or set the 'appendTo' property.\n                See https://www.telerik.com/kendo-angular-ui/components/dialogs/window/service/\n            `);\n        }\n        const windowRef = {\n            close: () => { },\n            content: null,\n            result: null,\n            window: null\n        };\n        const content = this.contentFrom(settings.content, container, windowRef);\n        const window = container.createComponent(factory, undefined, undefined, content.nodes);\n        windowRef.window = window;\n        this.applyOptions(window.instance, settings);\n        const apiClose = new Subject();\n        const close = (e) => {\n            apiClose.next(e || new WindowCloseResult());\n            if (content.componentRef) {\n                content.componentRef.destroy();\n            }\n            window.destroy();\n        };\n        const result = merge(apiClose, window.instance.close.pipe(map(e => (e ? e : new WindowCloseResult())), filter((e) => {\n            if (settings.preventClose) {\n                // add windowRef only when using component\n                const windowRefParameter = isNotComponent(settings.content) ? undefined : windowRef;\n                return !settings.preventClose(e, windowRefParameter);\n            }\n            return true;\n        }))).pipe(take(1), \n        // Takes care for multiple subscriptions:\n        // We subscribe internally and the user may subscribe to get a close result - window.result.subscribe().\n        // This causes multiple subscriptions to the same source and thus multiple emissions. share() solves that.\n        share());\n        result.subscribe(close);\n        windowRef.close = close;\n        windowRef.result = result;\n        window.changeDetectorRef.markForCheck();\n        return windowRef;\n    }\n    applyOptions(instance, options) {\n        if (isPresent(options.htmlAttributes)) {\n            instance.htmlAttributes = options.htmlAttributes;\n        }\n        if (isPresent(options.cssClass)) {\n            instance.cssClass = options.cssClass;\n        }\n        if (isPresent(options.title)) {\n            instance.title = options.title;\n        }\n        if (isPresent(options.keepContent)) {\n            instance.keepContent = options.keepContent;\n        }\n        if (isPresent(options.width)) {\n            instance.width = options.width;\n        }\n        if (isPresent(options.minWidth)) {\n            instance.minWidth = options.minWidth;\n        }\n        if (isPresent(options.height)) {\n            instance.height = options.height;\n        }\n        if (isPresent(options.minHeight)) {\n            instance.minHeight = options.minHeight;\n        }\n        if (isPresent(options.left)) {\n            instance.left = options.left;\n        }\n        if (isPresent(options.top)) {\n            instance.top = options.top;\n        }\n        if (isPresent(options.draggable)) {\n            instance.draggable = options.draggable;\n        }\n        if (isPresent(options.resizable)) {\n            instance.resizable = options.resizable;\n        }\n        if (isPresent(options.messages && options.messages.closeTitle)) {\n            instance.messages.closeTitle = options.messages.closeTitle;\n        }\n        if (isPresent(options.messages && options.messages.restoreTitle)) {\n            instance.messages.restoreTitle = options.messages.restoreTitle;\n        }\n        if (isPresent(options.messages && options.messages.maximizeTitle)) {\n            instance.messages.maximizeTitle = options.messages.maximizeTitle;\n        }\n        if (isPresent(options.messages && options.messages.minimizeTitle)) {\n            instance.messages.minimizeTitle = options.messages.minimizeTitle;\n        }\n        if (isPresent(options.autoFocusedElement)) {\n            instance.autoFocusedElement = options.autoFocusedElement;\n        }\n        if (isPresent(options.state)) {\n            instance.state = options.state;\n            if (options.state === 'minimized') {\n                instance.keepContent = true;\n            }\n        }\n        if (options.content instanceof TemplateRef) {\n            instance.contentTemplate = options.content;\n        }\n        if (options.titleBarContent instanceof TemplateRef) {\n            instance.titleBarTemplate = options.titleBarContent;\n        }\n    }\n    contentFrom(content, container, windowRef) {\n        const renderer = container.injector.get(Renderer2);\n        let nodes = [];\n        let componentRef = null;\n        if (typeof content === 'string') {\n            nodes = [renderer.createText(content)];\n        }\n        else if (content && !(content instanceof TemplateRef)) {\n            const injector = new WindowInjector(() => windowRef, container.injector);\n            const factory = this.resolver.resolveComponentFactory(content);\n            componentRef = container.createComponent(factory, undefined, injector);\n            nodes = [componentRef.location.nativeElement];\n            windowRef.content = componentRef;\n        }\n        return {\n            componentRef,\n            nodes: [\n                [],\n                nodes // Content\n            ]\n        };\n    }\n}\nWindowService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowService, deps: [{ token: i0.ComponentFactoryResolver }, { token: WindowContainerService }], target: i0.ɵɵFactoryTarget.Injectable });\nWindowService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: WindowContainerService, decorators: [{\n                    type: Inject,\n                    args: [WindowContainerService]\n                }] }]; } });\n\n/**\n * Provides an insertion point for the Dialogs which are created through the\n * Dialog service ([see example]({% slug api_dialog_dialogservice %}#toc-open)).\n * Created Dialogs will be mounted after that element.\n *\n * @example\n * ```html-no-run\n * <div kendoDialogContainer></div>\n * ```\n */\nclass DialogContainerDirective {\n    constructor(container, service) {\n        service.container = container;\n    }\n}\nDialogContainerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogContainerDirective, deps: [{ token: i0.ViewContainerRef }, { token: DialogContainerService }], target: i0.ɵɵFactoryTarget.Directive });\nDialogContainerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DialogContainerDirective, selector: \"[kendoDialogContainer]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogContainerDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDialogContainer]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: DialogContainerService }]; } });\n\n/**\n * Custom component messages override default component messages\n * ([see example]({% slug globalization_dialogs %}#toc-localization)).\n */\nclass CustomMessagesComponent extends Messages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nCustomMessagesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CustomMessagesComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Directive });\nCustomMessagesComponent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: CustomMessagesComponent, selector: \"kendo-dialog-messages, kendo-window-messages\", providers: [\n        {\n            provide: Messages,\n            useExisting: forwardRef(() => CustomMessagesComponent)\n        }\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CustomMessagesComponent, decorators: [{\n            type: Directive,\n            args: [{\n                    providers: [\n                        {\n                            provide: Messages,\n                            useExisting: forwardRef(() => CustomMessagesComponent)\n                        }\n                    ],\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: 'kendo-dialog-messages, kendo-window-messages'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * @hidden\n */\nconst SHARED_DIRECTIVES = [\n    DialogActionsComponent,\n    CustomMessagesComponent,\n    LocalizedMessagesDirective\n];\n/**\n * @hidden\n */\nclass SharedModule {\n}\nSharedModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSharedModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedModule, declarations: [DialogActionsComponent,\n        CustomMessagesComponent,\n        LocalizedMessagesDirective], imports: [CommonModule], exports: [DialogActionsComponent,\n        CustomMessagesComponent,\n        LocalizedMessagesDirective, CommonModule] });\nSharedModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedModule, imports: [[CommonModule], CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [SHARED_DIRECTIVES],\n                    exports: [SHARED_DIRECTIVES, CommonModule],\n                    imports: [CommonModule]\n                }]\n        }] });\n\n/**\n * @hidden\n */\nconst DIALOG_DIRECTIVES = [\n    DialogComponent,\n    DialogTitleBarComponent\n];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Dialog component that includes all Dialog components and directives.\n * Imports `DialogModule` into the [root module](link:site.data.urls.angular['ngmodules']#angular-modularity)\n * of your application or into any other sub-module that will use the Dialog component.\n *\n * @example\n * ```ts-no-run\n * import { NgModule } from '@angular/core';\n * import { BrowserModule } from '@angular/platform-browser';\n * import { DialogModule } from '@progress/kendo-angular-dialog';\n * import { AppComponent } from './app.component';\n *\n * _@NgModule({\n *     bootstrap:    [AppComponent],\n *     declarations: [AppComponent],\n *     imports:      [BrowserModule, DialogModule]\n * })\n * export class AppModule {\n * }\n * ```\n */\nclass DialogModule {\n}\nDialogModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDialogModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogModule, declarations: [DialogComponent,\n        DialogTitleBarComponent, DialogContainerDirective], imports: [SharedModule], exports: [DialogComponent,\n        DialogTitleBarComponent, DialogActionsComponent, CustomMessagesComponent, LocalizedMessagesDirective, DialogContainerDirective] });\nDialogModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogModule, providers: [DialogContainerService, DialogService], imports: [[SharedModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [DIALOG_DIRECTIVES, DialogContainerDirective],\n                    entryComponents: [DIALOG_DIRECTIVES],\n                    exports: [DIALOG_DIRECTIVES, SHARED_DIRECTIVES, DialogContainerDirective],\n                    imports: [SharedModule],\n                    providers: [DialogContainerService, DialogService]\n                }]\n        }] });\n\n/**\n * Provides an insertion point for the Windows which are created through the\n * Window service ([see example]({% slug api_dialog_windowservice %}#toc-open)).\n * Created Windows will be mounted after that element.\n *\n * @example\n * ```html-no-run\n * <div kendoWindowContainer></div>\n * ```\n */\nclass WindowContainerDirective {\n    constructor(container, service) {\n        service.container = container;\n    }\n}\nWindowContainerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowContainerDirective, deps: [{ token: i0.ViewContainerRef }, { token: WindowContainerService }], target: i0.ɵɵFactoryTarget.Directive });\nWindowContainerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: WindowContainerDirective, selector: \"[kendoWindowContainer]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowContainerDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoWindowContainer]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: WindowContainerService }]; } });\n\nconst WINDOW_DIRECTIVES = [\n    ResizeHandleDirective,\n    WindowComponent,\n    WindowTitleBarComponent,\n    WindowCloseActionDirective,\n    WindowMinimizeActionDirective,\n    WindowMaximizeActionDirective,\n    WindowRestoreActionDirective\n];\nconst ENTRY_COMPONENTS = [\n    WindowComponent,\n    WindowTitleBarComponent\n];\nconst exportedModules = [\n    WindowComponent,\n    WindowCloseActionDirective,\n    WindowMinimizeActionDirective,\n    WindowMaximizeActionDirective,\n    WindowRestoreActionDirective,\n    WindowTitleBarComponent\n];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Window component. Imports `WindowModule` into the\n * [root module](link:site.data.urls.angular['ngmodules']#angular-modularity)\n * of your application or into any other sub-module that will use the Window component.\n *\n * @example\n * ```ts-no-run\n * import { NgModule } from '@angular/core';\n * import { BrowserModule } from '@angular/platform-browser';\n * import { WindowModule } from '@progress/kendo-angular-window';\n * import { AppComponent } from './app.component';\n *\n * _@NgModule({\n *     bootstrap:    [AppComponent],\n *     declarations: [AppComponent],\n *     imports:      [BrowserModule, WindowModule]\n * })\n * export class AppModule {\n * }\n * ```\n */\nclass WindowModule {\n}\nWindowModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nWindowModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowModule, declarations: [ResizeHandleDirective,\n        WindowComponent,\n        WindowTitleBarComponent,\n        WindowCloseActionDirective,\n        WindowMinimizeActionDirective,\n        WindowMaximizeActionDirective,\n        WindowRestoreActionDirective, WindowContainerDirective], imports: [SharedModule, DraggableModule], exports: [WindowComponent,\n        WindowCloseActionDirective,\n        WindowMinimizeActionDirective,\n        WindowMaximizeActionDirective,\n        WindowRestoreActionDirective,\n        WindowTitleBarComponent, DialogActionsComponent, CustomMessagesComponent, LocalizedMessagesDirective, WindowContainerDirective] });\nWindowModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowModule, providers: [WindowContainerService, WindowService], imports: [[SharedModule, DraggableModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WindowModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [WINDOW_DIRECTIVES, WindowContainerDirective],\n                    entryComponents: [ENTRY_COMPONENTS],\n                    exports: [exportedModules, SHARED_DIRECTIVES, WindowContainerDirective],\n                    imports: [SharedModule, DraggableModule],\n                    providers: [WindowContainerService, WindowService]\n                }]\n        }] });\n\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Dialogs components.\n *\n * @example\n *\n * ```ts-no-run\n * import { DialogsModule } from '@progress/kendo-angular-dialog';\n *\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { NgModule } from '@angular/core';\n *\n * import { AppComponent } from './app.component';\n *\n * _@NgModule({\n *     declarations: [AppComponent],\n *     imports:      [BrowserModule, DialogsModule],\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass DialogsModule {\n}\nDialogsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDialogsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogsModule, exports: [DialogModule, WindowModule] });\nDialogsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogsModule, imports: [DialogModule, WindowModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DialogsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [DialogModule, WindowModule]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CustomMessagesComponent, DialogAction, DialogActionsComponent, DialogCloseResult, DialogComponent, DialogContainerDirective, DialogContentBase, DialogModule, DialogRef, DialogService, DialogSettings, DialogTitleBarComponent, DialogsModule, DragResizeService, LocalizedMessagesDirective, Messages, PreventableEvent, WindowCloseActionDirective, WindowCloseResult, WindowComponent, WindowContainerDirective, WindowMaximizeActionDirective, WindowMinimizeActionDirective, WindowModule, WindowRef, WindowRestoreActionDirective, WindowService, WindowSettings, WindowTitleBarComponent };\n\n"]},"metadata":{},"sourceType":"module"}