{"ast":null,"code":"/**-----------------------------------------------------------------------------------------\n* Copyright © 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { Component, Input, ContentChildren, QueryList, Directive, Optional, forwardRef, SkipSelf, Host, ContentChild, NgModule } from '@angular/core';\nimport { saveAs } from '@progress/kendo-file-saver';\nimport { IntlService, ExcelExporter, Workbook } from '@progress/kendo-ooxml';\nexport * from '@progress/kendo-ooxml';\nimport { toString } from '@progress/kendo-intl';\nimport * as i1 from '@progress/kendo-angular-l10n';\nimport { LocalizationService, L10N_PREFIX } from '@progress/kendo-angular-l10n';\nimport { validatePackage } from '@progress/kendo-licensing';\n\nconst compileTemplate = (templateRef, context, updateContext) => {\n  let embeddedView = templateRef.createEmbeddedView(context);\n\n  const result = data => {\n    updateContext(context, data);\n    embeddedView.detectChanges();\n    return embeddedView.rootNodes.reduce((content, rootNode) => {\n      return content + rootNode.textContent;\n    }, '').trim();\n  };\n\n  result.destroy = () => {\n    embeddedView.destroy();\n    embeddedView = null;\n  };\n\n  return result;\n};\n\nconst updateGroupHeaderContext = (context, data) => {\n  context.$implicit = context.group = data;\n  context.field = data.field;\n  context.value = data.value;\n  context.aggregates = data.aggregates;\n};\n\nconst updateGroupFooterContext = (context, data) => {\n  context.group = data.group;\n  context.$implicit = context.aggregates = data;\n};\n\nconst updateFooterContext = (context, data) => {\n  context.aggregates = data.aggregates;\n};\n/**\n * @hidden\n */\n\n\nconst toExporterColumns = sourceColumns => {\n  const exporterColumns = [];\n  let columnIndex = 0;\n\n  const addColumns = (columns, result, level) => {\n    columns.forEach(column => {\n      if (column.level === level) {\n        const exporterColumn = new ExporterColumn(column, columnIndex);\n        result.push(exporterColumn);\n\n        if (column.children && column.children.some(c => c !== column)) {\n          const children = exporterColumn.columns = [];\n          addColumns(column.children, children, level + 1);\n        } else {\n          columnIndex++;\n        }\n      }\n    });\n  };\n\n  addColumns(sourceColumns, exporterColumns, 0);\n  return exporterColumns;\n};\n/**\n * @hidden\n */\n\n\nconst destroyColumns = columns => {\n  if (columns) {\n    columns.forEach(column => {\n      column.destroy();\n    });\n  }\n};\n/**\n * @hidden\n */\n\n\nclass ExporterColumn {\n  constructor(column, columnIndex) {\n    this.title = column.title;\n    this.field = column.field;\n    this.hidden = column.hidden;\n    this.locked = column.locked;\n    this.width = column.width;\n    this.headerCellOptions = column.headerCellOptions;\n    this.cellOptions = column.cellOptions;\n    this.groupHeaderCellOptions = column.groupHeaderCellOptions;\n    this.groupFooterCellOptions = column.groupFooterCellOptions;\n    this.footerCellOptions = column.footerCellOptions;\n\n    if (column.footerTemplate) {\n      this.footerTemplate = compileTemplate(column.footerTemplate.templateRef, {\n        $implicit: column,\n        column: column,\n        columnIndex: columnIndex\n      }, updateFooterContext);\n    }\n\n    if (column.groupFooterTemplate) {\n      this.groupFooterTemplate = compileTemplate(column.groupFooterTemplate.templateRef, {\n        column: column,\n        field: column.field\n      }, updateGroupFooterContext);\n    }\n\n    if (column.groupHeaderTemplate) {\n      this.groupHeaderTemplate = compileTemplate(column.groupHeaderTemplate.templateRef, {}, updateGroupHeaderContext);\n    }\n\n    if (column.groupHeaderColumnTemplate) {\n      this.groupHeaderColumnTemplate = compileTemplate(column.groupHeaderColumnTemplate.templateRef, {}, updateGroupHeaderContext);\n    }\n  }\n\n  destroy() {\n    if (this.footerTemplate) {\n      this.footerTemplate.destroy();\n    }\n\n    if (this.groupFooterTemplate) {\n      this.groupFooterTemplate.destroy();\n    }\n\n    if (this.groupHeaderTemplate) {\n      this.groupHeaderTemplate.destroy();\n    }\n\n    if (this.groupHeaderColumnTemplate) {\n      this.groupHeaderColumnTemplate.destroy();\n    }\n\n    destroyColumns(this.columns);\n  }\n\n}\n\nIntlService.register({\n  toString\n});\n/**\n *\n * @hidden\n */\n\nconst workbookOptions = options => {\n  const columns = toExporterColumns(options.columns);\n  const exporter = new ExcelExporter({\n    columns: columns,\n    data: options.data,\n    filterable: options.filterable,\n    groups: options.group,\n    paddingCellOptions: options.paddingCellOptions,\n    headerPaddingCellOptions: options.headerPaddingCellOptions,\n    collapsible: options.collapsible,\n    hierarchy: options.hierarchy,\n    aggregates: options.aggregates\n  });\n  const result = exporter.workbook();\n  result.creator = options.creator;\n  result.date = options.date;\n  result.rtl = options.rtl;\n  destroyColumns(columns);\n  return result;\n};\n/**\n * @hidden\n */\n\n\nconst toDataURL = options => {\n  const workbook = new Workbook(options);\n  return workbook.toDataURL();\n};\n/**\n * @hidden\n */\n\n\nconst isWorkbookOptions = value => {\n  return value && value.sheets;\n};\n/**\n * @hidden\n */\n\n\nclass ColumnBase {\n  constructor(parent) {\n    this.parent = parent;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get level() {\n    return this.parent ? this.parent.level + 1 : 0;\n  }\n\n}\n\nColumnBase.ɵfac = function ColumnBase_Factory(t) {\n  return new (t || ColumnBase)(i0.ɵɵdirectiveInject(ColumnBase));\n};\n\nColumnBase.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnBase,\n  selectors: [[\"ng-component\"]],\n  contentQueries: function ColumnBase_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ColumnBase, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.children = _t);\n    }\n  },\n  inputs: {\n    title: \"title\",\n    width: \"width\",\n    locked: \"locked\",\n    hidden: \"hidden\",\n    headerCellOptions: \"headerCellOptions\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function ColumnBase_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnBase, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], function () {\n    return [{\n      type: ColumnBase\n    }];\n  }, {\n    title: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    locked: [{\n      type: Input\n    }],\n    hidden: [{\n      type: Input\n    }],\n    headerCellOptions: [{\n      type: Input\n    }],\n    children: [{\n      type: ContentChildren,\n      args: [ColumnBase]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nconst packageMetadata = {\n  name: '@progress/kendo-angular-excel-export',\n  productName: 'Kendo UI for Angular',\n  productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n  publishDate: 1668698474,\n  version: '',\n  licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/?utm_medium=product&utm_source=kendoangular&utm_campaign=kendo-ui-angular-purchase-license-keys-warning'\n}; // eslint-disable max-line-length\n\n/**\n * Represents the [Kendo UI Excel Export component for Angular]({% slug overview_excelexport %}).\n * Configures the settings for the Excel export of the Kendo UI Grid.\n */\n\nclass ExcelExportComponent {\n  constructor(localization, zone) {\n    this.localization = localization;\n    this.zone = zone;\n    /**\n     * Specifies the name of the file that is exported to Excel.\n     * @default \"Export.xlsx\"\n     */\n\n    this.fileName = 'Export.xlsx';\n    /**\n     * @hidden\n     */\n\n    this.columns = new QueryList();\n    validatePackage(packageMetadata);\n    this.saveFile = this.saveFile.bind(this);\n  }\n  /**\n   * Saves the data to Excel.\n   *\n   * @param exportData - An optional parameter. Can be the data that will be exported or [`WorkbookOptions`]({% slug api_excel-export_workbookoptions %}).\n   */\n\n\n  save(exportData) {\n    this.toDataURL(exportData).then(this.saveFile);\n  }\n  /**\n   * Based on the specified columns and data, returns\n   * [`WorkbookOptions`]({% slug api_excel-export_workbookoptions %})\n   * ([see example]({% slug customrowsandcells_excelexport %})).\n   *\n   * @param exportData - The optional data to be exported.\n   * @returns {WorkbookOptions} - The workbook options.\n   */\n\n\n  workbookOptions(exportData) {\n    const currentData = this.getExportData(exportData);\n    const options = workbookOptions({\n      columns: this.columns,\n      data: currentData.data,\n      group: currentData.group,\n      filterable: this.filterable,\n      creator: this.creator,\n      date: this.date,\n      rtl: this.localization.rtl,\n      paddingCellOptions: this.paddingCellOptions,\n      headerPaddingCellOptions: this.headerPaddingCellOptions,\n      collapsible: this.collapsible\n    });\n    return options;\n  }\n  /**\n   * Returns a promise which will be resolved with the file data URI\n   * ([see example]({% slug filesaving_excelexport %})).\n   *\n   * @param exportData - The optional data or [`WorkbookOptions`]({% slug api_excel-export_workbookoptions %}) that will be used to generate the data URI.\n   * @returns {Promise<string>} - The promise that will be resolved by the file data URI.\n   */\n\n\n  toDataURL(exportData) {\n    const options = isWorkbookOptions(exportData) ? exportData : this.workbookOptions(exportData);\n    return this.zone.runOutsideAngular(() => toDataURL(options));\n  }\n\n  getExportData(exportData) {\n    let result;\n\n    if (exportData) {\n      if (Array.isArray(exportData)) {\n        result = {\n          data: exportData\n        };\n      } else {\n        result = exportData;\n      }\n    } else {\n      result = {\n        data: this.data,\n        group: this.group\n      };\n    }\n\n    return result;\n  }\n\n  saveFile(dataURL) {\n    saveAs(dataURL, this.fileName, {\n      forceProxy: this.forceProxy,\n      proxyURL: this.proxyURL\n    });\n  }\n\n}\n\nExcelExportComponent.ɵfac = function ExcelExportComponent_Factory(t) {\n  return new (t || ExcelExportComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nExcelExportComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ExcelExportComponent,\n  selectors: [[\"kendo-excelexport\"]],\n  contentQueries: function ExcelExportComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ColumnBase, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.columns = _t);\n    }\n  },\n  inputs: {\n    fileName: \"fileName\",\n    filterable: \"filterable\",\n    collapsible: \"collapsible\",\n    creator: \"creator\",\n    date: \"date\",\n    forceProxy: \"forceProxy\",\n    proxyURL: \"proxyURL\",\n    data: \"data\",\n    group: \"group\",\n    paddingCellOptions: \"paddingCellOptions\",\n    headerPaddingCellOptions: \"headerPaddingCellOptions\"\n  },\n  exportAs: [\"kendoExcelExport\"],\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.excelexport'\n  }])],\n  decls: 0,\n  vars: 0,\n  template: function ExcelExportComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ExcelExportComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoExcelExport',\n      selector: 'kendo-excelexport',\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.excelexport'\n      }],\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    fileName: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    collapsible: [{\n      type: Input\n    }],\n    creator: [{\n      type: Input\n    }],\n    date: [{\n      type: Input\n    }],\n    forceProxy: [{\n      type: Input\n    }],\n    proxyURL: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }],\n    paddingCellOptions: [{\n      type: Input\n    }],\n    headerPaddingCellOptions: [{\n      type: Input\n    }],\n    columns: [{\n      type: ContentChildren,\n      args: [ColumnBase, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * Represents the group header cell template of the Excel Export column component\n * ([see example]({% slug columns_excel-export %}#toc-group-header-template)).\n * Enables you to customize the content of the group header item.\n */\n\n\nclass GroupHeaderTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nGroupHeaderTemplateDirective.ɵfac = function GroupHeaderTemplateDirective_Factory(t) {\n  return new (t || GroupHeaderTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nGroupHeaderTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GroupHeaderTemplateDirective,\n  selectors: [[\"\", \"kendoExcelExportGroupHeaderTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GroupHeaderTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoExcelExportGroupHeaderTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents the group header column template of the Excel Export column component\n * ([see example]({% slug columns_excel-export %}#toc-group-header-column-template)).\n */\n\n\nclass GroupHeaderColumnTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nGroupHeaderColumnTemplateDirective.ɵfac = function GroupHeaderColumnTemplateDirective_Factory(t) {\n  return new (t || GroupHeaderColumnTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nGroupHeaderColumnTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GroupHeaderColumnTemplateDirective,\n  selectors: [[\"\", \"kendoExcelExportGroupHeaderColumnTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GroupHeaderColumnTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoExcelExportGroupHeaderColumnTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents the group footer cell template of the Excel Export column component\n * ([see example]({% slug columns_excel-export %}#toc-group-footer-template)).\n * Enables you to customize the group footer cell of the column.\n */\n\n\nclass GroupFooterTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nGroupFooterTemplateDirective.ɵfac = function GroupFooterTemplateDirective_Factory(t) {\n  return new (t || GroupFooterTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nGroupFooterTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GroupFooterTemplateDirective,\n  selectors: [[\"\", \"kendoExcelExportGroupFooterTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GroupFooterTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoExcelExportGroupFooterTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents the footer cell template of the Excel Export column component\n * ([see example]({% slug columns_excel-export %}#toc-footer-template)).\n * Enables you to customize the footer cell of the column.\n */\n\n\nclass FooterTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nFooterTemplateDirective.ɵfac = function FooterTemplateDirective_Factory(t) {\n  return new (t || FooterTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nFooterTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FooterTemplateDirective,\n  selectors: [[\"\", \"kendoExcelExportFooterTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FooterTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoExcelExportFooterTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents the columns of the Kendo UI Excel Export component for Angular.\n */\n\n\nclass ColumnComponent extends ColumnBase {\n  constructor(parent) {\n    super(parent);\n  }\n\n}\n\nColumnComponent.ɵfac = function ColumnComponent_Factory(t) {\n  return new (t || ColumnComponent)(i0.ɵɵdirectiveInject(ColumnBase, 13));\n};\n\nColumnComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnComponent,\n  selectors: [[\"kendo-excelexport-column\"]],\n  contentQueries: function ColumnComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, GroupHeaderTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, GroupHeaderColumnTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, GroupFooterTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, FooterTemplateDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.groupHeaderTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.groupHeaderColumnTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.groupFooterTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n    }\n  },\n  inputs: {\n    field: \"field\",\n    cellOptions: \"cellOptions\",\n    groupHeaderCellOptions: \"groupHeaderCellOptions\",\n    groupFooterCellOptions: \"groupFooterCellOptions\",\n    footerCellOptions: \"footerCellOptions\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ColumnBase,\n    useExisting: forwardRef(() => ColumnComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function ColumnComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: ColumnBase,\n        useExisting: forwardRef(() => ColumnComponent)\n      }],\n      selector: 'kendo-excelexport-column',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: ColumnBase,\n      decorators: [{\n        type: SkipSelf\n      }, {\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    field: [{\n      type: Input\n    }],\n    cellOptions: [{\n      type: Input\n    }],\n    groupHeaderCellOptions: [{\n      type: Input\n    }],\n    groupFooterCellOptions: [{\n      type: Input\n    }],\n    footerCellOptions: [{\n      type: Input\n    }],\n    groupHeaderTemplate: [{\n      type: ContentChild,\n      args: [GroupHeaderTemplateDirective, {\n        static: false\n      }]\n    }],\n    groupHeaderColumnTemplate: [{\n      type: ContentChild,\n      args: [GroupHeaderColumnTemplateDirective, {\n        static: false\n      }]\n    }],\n    groupFooterTemplate: [{\n      type: ContentChild,\n      args: [GroupFooterTemplateDirective, {\n        static: false\n      }]\n    }],\n    footerTemplate: [{\n      type: ContentChild,\n      args: [FooterTemplateDirective, {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * Represents the column group component of the Kendo UI Excel Export component.\n */\n\n\nclass ColumnGroupComponent extends ColumnBase {\n  constructor(parent) {\n    super(parent);\n    this.parent = parent;\n  }\n\n}\n\nColumnGroupComponent.ɵfac = function ColumnGroupComponent_Factory(t) {\n  return new (t || ColumnGroupComponent)(i0.ɵɵdirectiveInject(ColumnBase, 13));\n};\n\nColumnGroupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnGroupComponent,\n  selectors: [[\"kendo-excelexport-column-group\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ColumnBase,\n    useExisting: forwardRef(() => ColumnGroupComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function ColumnGroupComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnGroupComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: ColumnBase,\n        useExisting: forwardRef(() => ColumnGroupComponent)\n      }],\n      selector: 'kendo-excelexport-column-group',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: ColumnBase,\n      decorators: [{\n        type: SkipSelf\n      }, {\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst declarations = [ExcelExportComponent, ColumnComponent, ColumnGroupComponent, FooterTemplateDirective, GroupFooterTemplateDirective, GroupHeaderTemplateDirective, GroupHeaderColumnTemplateDirective];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Excel Export component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the ExcelExportModule module\n * import { ExcelExportModule } from '@progress/kendo-angular-excel-export';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, ExcelExportModule], // import ExcelExportModule module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\nclass ExcelExportModule {}\n\nExcelExportModule.ɵfac = function ExcelExportModule_Factory(t) {\n  return new (t || ExcelExportModule)();\n};\n\nExcelExportModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ExcelExportModule\n});\nExcelExportModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ExcelExportModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [declarations],\n      exports: [declarations]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ColumnBase, ColumnComponent, ColumnGroupComponent, ExcelExportComponent, ExcelExportModule, FooterTemplateDirective, GroupFooterTemplateDirective, GroupHeaderColumnTemplateDirective, GroupHeaderTemplateDirective, isWorkbookOptions, toDataURL, workbookOptions };","map":{"version":3,"sources":["C:/Repos/angular-kendo-grid/node_modules/@progress/kendo-angular-excel-export/fesm2015/kendo-angular-excel-export.js"],"names":["i0","Component","Input","ContentChildren","QueryList","Directive","Optional","forwardRef","SkipSelf","Host","ContentChild","NgModule","saveAs","IntlService","ExcelExporter","Workbook","toString","i1","LocalizationService","L10N_PREFIX","validatePackage","compileTemplate","templateRef","context","updateContext","embeddedView","createEmbeddedView","result","data","detectChanges","rootNodes","reduce","content","rootNode","textContent","trim","destroy","updateGroupHeaderContext","$implicit","group","field","value","aggregates","updateGroupFooterContext","updateFooterContext","toExporterColumns","sourceColumns","exporterColumns","columnIndex","addColumns","columns","level","forEach","column","exporterColumn","ExporterColumn","push","children","some","c","destroyColumns","constructor","title","hidden","locked","width","headerCellOptions","cellOptions","groupHeaderCellOptions","groupFooterCellOptions","footerCellOptions","footerTemplate","groupFooterTemplate","groupHeaderTemplate","groupHeaderColumnTemplate","register","workbookOptions","options","exporter","filterable","groups","paddingCellOptions","headerPaddingCellOptions","collapsible","hierarchy","workbook","creator","date","rtl","toDataURL","isWorkbookOptions","sheets","ColumnBase","parent","ɵfac","ɵcmp","type","args","template","packageMetadata","name","productName","productCodes","publishDate","version","licensingDocsUrl","ExcelExportComponent","localization","zone","fileName","saveFile","bind","save","exportData","then","currentData","getExportData","runOutsideAngular","Array","isArray","dataURL","forceProxy","proxyURL","NgZone","provide","useValue","exportAs","selector","providers","descendants","GroupHeaderTemplateDirective","TemplateRef","ɵdir","decorators","GroupHeaderColumnTemplateDirective","GroupFooterTemplateDirective","FooterTemplateDirective","ColumnComponent","useExisting","static","ColumnGroupComponent","declarations","ExcelExportModule","ɵmod","ɵinj","exports"],"mappings":"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","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright © 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { Component, Input, ContentChildren, QueryList, Directive, Optional, forwardRef, SkipSelf, Host, ContentChild, NgModule } from '@angular/core';\nimport { saveAs } from '@progress/kendo-file-saver';\nimport { IntlService, ExcelExporter, Workbook } from '@progress/kendo-ooxml';\nexport * from '@progress/kendo-ooxml';\nimport { toString } from '@progress/kendo-intl';\nimport * as i1 from '@progress/kendo-angular-l10n';\nimport { LocalizationService, L10N_PREFIX } from '@progress/kendo-angular-l10n';\nimport { validatePackage } from '@progress/kendo-licensing';\n\nconst compileTemplate = (templateRef, context, updateContext) => {\n    let embeddedView = templateRef.createEmbeddedView(context);\n    const result = (data) => {\n        updateContext(context, data);\n        embeddedView.detectChanges();\n        return embeddedView.rootNodes.reduce((content, rootNode) => {\n            return content + rootNode.textContent;\n        }, '').trim();\n    };\n    result.destroy = () => {\n        embeddedView.destroy();\n        embeddedView = null;\n    };\n    return result;\n};\nconst updateGroupHeaderContext = (context, data) => {\n    context.$implicit = context.group = data;\n    context.field = data.field;\n    context.value = data.value;\n    context.aggregates = data.aggregates;\n};\nconst updateGroupFooterContext = (context, data) => {\n    context.group = data.group;\n    context.$implicit = context.aggregates = data;\n};\nconst updateFooterContext = (context, data) => {\n    context.aggregates = data.aggregates;\n};\n/**\n * @hidden\n */\nconst toExporterColumns = (sourceColumns) => {\n    const exporterColumns = [];\n    let columnIndex = 0;\n    const addColumns = (columns, result, level) => {\n        columns.forEach((column) => {\n            if (column.level === level) {\n                const exporterColumn = new ExporterColumn(column, columnIndex);\n                result.push(exporterColumn);\n                if (column.children && column.children.some(c => c !== column)) {\n                    const children = exporterColumn.columns = [];\n                    addColumns(column.children, children, level + 1);\n                }\n                else {\n                    columnIndex++;\n                }\n            }\n        });\n    };\n    addColumns(sourceColumns, exporterColumns, 0);\n    return exporterColumns;\n};\n/**\n * @hidden\n */\nconst destroyColumns = (columns) => {\n    if (columns) {\n        columns.forEach(column => {\n            column.destroy();\n        });\n    }\n};\n/**\n * @hidden\n */\nclass ExporterColumn {\n    constructor(column, columnIndex) {\n        this.title = column.title;\n        this.field = column.field;\n        this.hidden = column.hidden;\n        this.locked = column.locked;\n        this.width = column.width;\n        this.headerCellOptions = column.headerCellOptions;\n        this.cellOptions = column.cellOptions;\n        this.groupHeaderCellOptions = column.groupHeaderCellOptions;\n        this.groupFooterCellOptions = column.groupFooterCellOptions;\n        this.footerCellOptions = column.footerCellOptions;\n        if (column.footerTemplate) {\n            this.footerTemplate = compileTemplate(column.footerTemplate.templateRef, {\n                $implicit: column,\n                column: column,\n                columnIndex: columnIndex\n            }, updateFooterContext);\n        }\n        if (column.groupFooterTemplate) {\n            this.groupFooterTemplate = compileTemplate(column.groupFooterTemplate.templateRef, {\n                column: column,\n                field: column.field\n            }, updateGroupFooterContext);\n        }\n        if (column.groupHeaderTemplate) {\n            this.groupHeaderTemplate = compileTemplate(column.groupHeaderTemplate.templateRef, {}, updateGroupHeaderContext);\n        }\n        if (column.groupHeaderColumnTemplate) {\n            this.groupHeaderColumnTemplate = compileTemplate(column.groupHeaderColumnTemplate.templateRef, {}, updateGroupHeaderContext);\n        }\n    }\n    destroy() {\n        if (this.footerTemplate) {\n            this.footerTemplate.destroy();\n        }\n        if (this.groupFooterTemplate) {\n            this.groupFooterTemplate.destroy();\n        }\n        if (this.groupHeaderTemplate) {\n            this.groupHeaderTemplate.destroy();\n        }\n        if (this.groupHeaderColumnTemplate) {\n            this.groupHeaderColumnTemplate.destroy();\n        }\n        destroyColumns(this.columns);\n    }\n}\n\nIntlService.register({ toString });\n/**\n *\n * @hidden\n */\nconst workbookOptions = (options) => {\n    const columns = toExporterColumns(options.columns);\n    const exporter = new ExcelExporter({\n        columns: columns,\n        data: options.data,\n        filterable: options.filterable,\n        groups: options.group,\n        paddingCellOptions: options.paddingCellOptions,\n        headerPaddingCellOptions: options.headerPaddingCellOptions,\n        collapsible: options.collapsible,\n        hierarchy: options.hierarchy,\n        aggregates: options.aggregates\n    });\n    const result = exporter.workbook();\n    result.creator = options.creator;\n    result.date = options.date;\n    result.rtl = options.rtl;\n    destroyColumns(columns);\n    return result;\n};\n/**\n * @hidden\n */\nconst toDataURL = (options) => {\n    const workbook = new Workbook(options);\n    return workbook.toDataURL();\n};\n/**\n * @hidden\n */\nconst isWorkbookOptions = (value) => {\n    return value && value.sheets;\n};\n\n/**\n * @hidden\n */\nclass ColumnBase {\n    constructor(parent) {\n        this.parent = parent;\n    }\n    /**\n     * @hidden\n     */\n    get level() {\n        return this.parent ? this.parent.level + 1 : 0;\n    }\n}\nColumnBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnBase, deps: [{ token: ColumnBase }], target: i0.ɵɵFactoryTarget.Component });\nColumnBase.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnBase, selector: \"ng-component\", inputs: { title: \"title\", width: \"width\", locked: \"locked\", hidden: \"hidden\", headerCellOptions: \"headerCellOptions\" }, queries: [{ propertyName: \"children\", predicate: ColumnBase }], ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnBase, decorators: [{\n            type: Component,\n            args: [{\n                    template: ''\n                }]\n        }], ctorParameters: function () { return [{ type: ColumnBase }]; }, propDecorators: { title: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], locked: [{\n                type: Input\n            }], hidden: [{\n                type: Input\n            }], headerCellOptions: [{\n                type: Input\n            }], children: [{\n                type: ContentChildren,\n                args: [ColumnBase]\n            }] } });\n\n/**\n * @hidden\n */\nconst packageMetadata = {\n    name: '@progress/kendo-angular-excel-export',\n    productName: 'Kendo UI for Angular',\n    productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n    publishDate: 1668698474,\n    version: '',\n    licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/?utm_medium=product&utm_source=kendoangular&utm_campaign=kendo-ui-angular-purchase-license-keys-warning'\n};\n\n// eslint-disable max-line-length\n/**\n * Represents the [Kendo UI Excel Export component for Angular]({% slug overview_excelexport %}).\n * Configures the settings for the Excel export of the Kendo UI Grid.\n */\nclass ExcelExportComponent {\n    constructor(localization, zone) {\n        this.localization = localization;\n        this.zone = zone;\n        /**\n         * Specifies the name of the file that is exported to Excel.\n         * @default \"Export.xlsx\"\n         */\n        this.fileName = 'Export.xlsx';\n        /**\n         * @hidden\n         */\n        this.columns = new QueryList();\n        validatePackage(packageMetadata);\n        this.saveFile = this.saveFile.bind(this);\n    }\n    /**\n     * Saves the data to Excel.\n     *\n     * @param exportData - An optional parameter. Can be the data that will be exported or [`WorkbookOptions`]({% slug api_excel-export_workbookoptions %}).\n     */\n    save(exportData) {\n        this.toDataURL(exportData).then(this.saveFile);\n    }\n    /**\n     * Based on the specified columns and data, returns\n     * [`WorkbookOptions`]({% slug api_excel-export_workbookoptions %})\n     * ([see example]({% slug customrowsandcells_excelexport %})).\n     *\n     * @param exportData - The optional data to be exported.\n     * @returns {WorkbookOptions} - The workbook options.\n     */\n    workbookOptions(exportData) {\n        const currentData = this.getExportData(exportData);\n        const options = workbookOptions({\n            columns: this.columns,\n            data: currentData.data,\n            group: currentData.group,\n            filterable: this.filterable,\n            creator: this.creator,\n            date: this.date,\n            rtl: this.localization.rtl,\n            paddingCellOptions: this.paddingCellOptions,\n            headerPaddingCellOptions: this.headerPaddingCellOptions,\n            collapsible: this.collapsible\n        });\n        return options;\n    }\n    /**\n     * Returns a promise which will be resolved with the file data URI\n     * ([see example]({% slug filesaving_excelexport %})).\n     *\n     * @param exportData - The optional data or [`WorkbookOptions`]({% slug api_excel-export_workbookoptions %}) that will be used to generate the data URI.\n     * @returns {Promise<string>} - The promise that will be resolved by the file data URI.\n     */\n    toDataURL(exportData) {\n        const options = isWorkbookOptions(exportData) ?\n            exportData :\n            this.workbookOptions(exportData);\n        return this.zone.runOutsideAngular(() => toDataURL(options));\n    }\n    getExportData(exportData) {\n        let result;\n        if (exportData) {\n            if (Array.isArray(exportData)) {\n                result = {\n                    data: exportData\n                };\n            }\n            else {\n                result = exportData;\n            }\n        }\n        else {\n            result = {\n                data: this.data,\n                group: this.group\n            };\n        }\n        return result;\n    }\n    saveFile(dataURL) {\n        saveAs(dataURL, this.fileName, {\n            forceProxy: this.forceProxy,\n            proxyURL: this.proxyURL\n        });\n    }\n}\nExcelExportComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExcelExportComponent, deps: [{ token: i1.LocalizationService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nExcelExportComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ExcelExportComponent, selector: \"kendo-excelexport\", inputs: { fileName: \"fileName\", filterable: \"filterable\", collapsible: \"collapsible\", creator: \"creator\", date: \"date\", forceProxy: \"forceProxy\", proxyURL: \"proxyURL\", data: \"data\", group: \"group\", paddingCellOptions: \"paddingCellOptions\", headerPaddingCellOptions: \"headerPaddingCellOptions\" }, providers: [\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.excelexport'\n        }\n    ], queries: [{ propertyName: \"columns\", predicate: ColumnBase, descendants: true }], exportAs: [\"kendoExcelExport\"], ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExcelExportComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoExcelExport',\n                    selector: 'kendo-excelexport',\n                    providers: [\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.excelexport'\n                        }\n                    ],\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: i0.NgZone }]; }, propDecorators: { fileName: [{\n                type: Input\n            }], filterable: [{\n                type: Input\n            }], collapsible: [{\n                type: Input\n            }], creator: [{\n                type: Input\n            }], date: [{\n                type: Input\n            }], forceProxy: [{\n                type: Input\n            }], proxyURL: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], group: [{\n                type: Input\n            }], paddingCellOptions: [{\n                type: Input\n            }], headerPaddingCellOptions: [{\n                type: Input\n            }], columns: [{\n                type: ContentChildren,\n                args: [ColumnBase, { descendants: true }]\n            }] } });\n\n/**\n * Represents the group header cell template of the Excel Export column component\n * ([see example]({% slug columns_excel-export %}#toc-group-header-template)).\n * Enables you to customize the content of the group header item.\n */\nclass GroupHeaderTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nGroupHeaderTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupHeaderTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nGroupHeaderTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: GroupHeaderTemplateDirective, selector: \"[kendoExcelExportGroupHeaderTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupHeaderTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoExcelExportGroupHeaderTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Represents the group header column template of the Excel Export column component\n * ([see example]({% slug columns_excel-export %}#toc-group-header-column-template)).\n */\nclass GroupHeaderColumnTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nGroupHeaderColumnTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupHeaderColumnTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nGroupHeaderColumnTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: GroupHeaderColumnTemplateDirective, selector: \"[kendoExcelExportGroupHeaderColumnTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupHeaderColumnTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoExcelExportGroupHeaderColumnTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Represents the group footer cell template of the Excel Export column component\n * ([see example]({% slug columns_excel-export %}#toc-group-footer-template)).\n * Enables you to customize the group footer cell of the column.\n */\nclass GroupFooterTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nGroupFooterTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupFooterTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nGroupFooterTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: GroupFooterTemplateDirective, selector: \"[kendoExcelExportGroupFooterTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupFooterTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoExcelExportGroupFooterTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Represents the footer cell template of the Excel Export column component\n * ([see example]({% slug columns_excel-export %}#toc-footer-template)).\n * Enables you to customize the footer cell of the column.\n */\nclass FooterTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nFooterTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FooterTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nFooterTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FooterTemplateDirective, selector: \"[kendoExcelExportFooterTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FooterTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoExcelExportFooterTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Represents the columns of the Kendo UI Excel Export component for Angular.\n */\nclass ColumnComponent extends ColumnBase {\n    constructor(parent) {\n        super(parent);\n    }\n}\nColumnComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnComponent, deps: [{ token: ColumnBase, host: true, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Component });\nColumnComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnComponent, selector: \"kendo-excelexport-column\", inputs: { field: \"field\", cellOptions: \"cellOptions\", groupHeaderCellOptions: \"groupHeaderCellOptions\", groupFooterCellOptions: \"groupFooterCellOptions\", footerCellOptions: \"footerCellOptions\" }, providers: [\n        {\n            provide: ColumnBase,\n            useExisting: forwardRef(() => ColumnComponent)\n        }\n    ], queries: [{ propertyName: \"groupHeaderTemplate\", first: true, predicate: GroupHeaderTemplateDirective, descendants: true }, { propertyName: \"groupHeaderColumnTemplate\", first: true, predicate: GroupHeaderColumnTemplateDirective, descendants: true }, { propertyName: \"groupFooterTemplate\", first: true, predicate: GroupFooterTemplateDirective, descendants: true }, { propertyName: \"footerTemplate\", first: true, predicate: FooterTemplateDirective, descendants: true }], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: ColumnBase,\n                            useExisting: forwardRef(() => ColumnComponent)\n                        }\n                    ],\n                    selector: 'kendo-excelexport-column',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: ColumnBase, decorators: [{\n                    type: SkipSelf\n                }, {\n                    type: Host\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { field: [{\n                type: Input\n            }], cellOptions: [{\n                type: Input\n            }], groupHeaderCellOptions: [{\n                type: Input\n            }], groupFooterCellOptions: [{\n                type: Input\n            }], footerCellOptions: [{\n                type: Input\n            }], groupHeaderTemplate: [{\n                type: ContentChild,\n                args: [GroupHeaderTemplateDirective, { static: false }]\n            }], groupHeaderColumnTemplate: [{\n                type: ContentChild,\n                args: [GroupHeaderColumnTemplateDirective, { static: false }]\n            }], groupFooterTemplate: [{\n                type: ContentChild,\n                args: [GroupFooterTemplateDirective, { static: false }]\n            }], footerTemplate: [{\n                type: ContentChild,\n                args: [FooterTemplateDirective, { static: false }]\n            }] } });\n\n/**\n * Represents the column group component of the Kendo UI Excel Export component.\n */\nclass ColumnGroupComponent extends ColumnBase {\n    constructor(parent) {\n        super(parent);\n        this.parent = parent;\n    }\n}\nColumnGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnGroupComponent, deps: [{ token: ColumnBase, host: true, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Component });\nColumnGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnGroupComponent, selector: \"kendo-excelexport-column-group\", providers: [\n        {\n            provide: ColumnBase,\n            useExisting: forwardRef(() => ColumnGroupComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnGroupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: ColumnBase,\n                            useExisting: forwardRef(() => ColumnGroupComponent)\n                        }\n                    ],\n                    selector: 'kendo-excelexport-column-group',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: ColumnBase, decorators: [{\n                    type: SkipSelf\n                }, {\n                    type: Host\n                }, {\n                    type: Optional\n                }] }]; } });\n\nconst declarations = [\n    ExcelExportComponent,\n    ColumnComponent,\n    ColumnGroupComponent,\n    FooterTemplateDirective,\n    GroupFooterTemplateDirective,\n    GroupHeaderTemplateDirective,\n    GroupHeaderColumnTemplateDirective\n];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Excel Export component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the ExcelExportModule module\n * import { ExcelExportModule } from '@progress/kendo-angular-excel-export';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, ExcelExportModule], // import ExcelExportModule module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass ExcelExportModule {\n}\nExcelExportModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExcelExportModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nExcelExportModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExcelExportModule, declarations: [ExcelExportComponent,\n        ColumnComponent,\n        ColumnGroupComponent,\n        FooterTemplateDirective,\n        GroupFooterTemplateDirective,\n        GroupHeaderTemplateDirective,\n        GroupHeaderColumnTemplateDirective], exports: [ExcelExportComponent,\n        ColumnComponent,\n        ColumnGroupComponent,\n        FooterTemplateDirective,\n        GroupFooterTemplateDirective,\n        GroupHeaderTemplateDirective,\n        GroupHeaderColumnTemplateDirective] });\nExcelExportModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExcelExportModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExcelExportModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [declarations],\n                    exports: [declarations]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ColumnBase, ColumnComponent, ColumnGroupComponent, ExcelExportComponent, ExcelExportModule, FooterTemplateDirective, GroupFooterTemplateDirective, GroupHeaderColumnTemplateDirective, GroupHeaderTemplateDirective, isWorkbookOptions, toDataURL, workbookOptions };\n\n"]},"metadata":{},"sourceType":"module"}