{"ast":null,"code":"/**-----------------------------------------------------------------------------------------\n* Copyright © 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, HostBinding, Input, EventEmitter, Injectable, Optional, Inject, Directive, SkipSelf, QueryList, isDevMode, ContentChildren, ContentChild, forwardRef, Host, Output, SecurityContext, ChangeDetectionStrategy, ViewChild, HostListener, ViewChildren, Self, TemplateRef, Pipe, ViewEncapsulation, NgModule } from '@angular/core';\nimport * as i1$1 from '@progress/kendo-angular-common';\nimport { isDocumentAvailable, Keys, anyChanged, isChanged as isChanged$1, KendoInput, guid, hasObservers, ResizeSensorComponent, DraggableModule, EventsModule, ResizeSensorModule } from '@progress/kendo-angular-common';\nimport { merge, of, Subject, from, Subscription, interval, fromEvent, zip as zip$1, BehaviorSubject, Observable } from 'rxjs';\nimport { switchMap, take, map, filter, takeUntil, switchMapTo, delay, auditTime, distinctUntilChanged, tap, throttleTime, debounceTime, bufferCount } from 'rxjs/operators';\nimport * as i1 from '@progress/kendo-angular-l10n';\nimport { ComponentMessages, LocalizationService, L10N_PREFIX } from '@progress/kendo-angular-l10n';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4$2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormControl, FormGroup, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { orderBy, isCompositeFilterDescriptor, process, filterBy } from '@progress/kendo-data-query';\nimport * as i1$2 from '@progress/kendo-angular-popup';\nimport { PopupModule } from '@progress/kendo-angular-popup';\nimport * as i1$3 from '@angular/platform-browser';\nimport * as i4$1 from '@progress/kendo-angular-inputs';\nimport { NumericTextBoxComponent, InputsModule, NumericTextBoxModule } from '@progress/kendo-angular-inputs';\nimport * as i1$4 from '@progress/kendo-angular-dropdowns';\nimport { DropDownListComponent, DropDownListModule, AutoCompleteModule, DropDownsModule } from '@progress/kendo-angular-dropdowns';\nimport * as i5 from '@progress/kendo-angular-label';\nimport { LabelModule } from '@progress/kendo-angular-label';\nimport * as i4$3 from '@progress/kendo-angular-dateinputs';\nimport { DatePickerModule } from '@progress/kendo-angular-dateinputs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { getter } from '@progress/kendo-common';\nimport * as i1$5 from '@progress/kendo-angular-intl';\nimport { Button } from '@progress/kendo-angular-buttons';\nimport { PDFExportMarginComponent, PDFExportTemplateDirective, PDFExportComponent } from '@progress/kendo-angular-pdf-export';\nimport { saveAs } from '@progress/kendo-file-saver';\nimport { workbookOptions, toDataURL, ColumnBase as ColumnBase$1, ExcelExportModule } from '@progress/kendo-angular-excel-export';\n\nfunction ToolbarComponent_0_ng_template_0_Template(rf, ctx) {}\n\nfunction ToolbarComponent_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ToolbarComponent_0_ng_template_0_Template, 0, 0, \"ng-template\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.toolbarTemplateRef)(\"ngTemplateOutletContext\", ctx_r0.context);\n  }\n}\n\nconst _c0 = function (a2) {\n  return {\n    \"k-link\": true,\n    \"k-pager-nav\": true,\n    \"k-disabled\": a2,\n    \"k-pager-first\": true\n  };\n};\n\nconst _c1 = function () {\n  return {\n    \"k-icon\": true,\n    \"k-i-caret-alt-to-left\": true\n  };\n};\n\nconst _c2 = function (a2) {\n  return {\n    \"k-link\": true,\n    \"k-pager-nav\": true,\n    \"k-disabled\": a2,\n    \"\": true\n  };\n};\n\nconst _c3 = function () {\n  return {\n    \"k-icon\": true,\n    \"k-i-caret-alt-left\": true\n  };\n};\n\nfunction PagerNumericButtonsComponent_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1, \"... \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"selected\", false);\n    i0.ɵɵattribute(\"aria-label\", ctx_r0.pageLabel(ctx_r0.start - 1));\n  }\n}\n\nconst _c4 = function (a1) {\n  return {\n    \"k-link\": true,\n    \"k-selected\": a1\n  };\n};\n\nfunction PagerNumericButtonsComponent_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const num_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", num_r6.toString())(\"selected\", num_r6 === ctx_r1.currentPage)(\"ngClass\", i0.ɵɵpureFunction1(6, _c4, ctx_r1.currentPage === num_r6));\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.pageLabel(num_r6))(\"aria-current\", ctx_r1.currentPage === num_r6 ? \"page\" : undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", num_r6, \" \");\n  }\n}\n\nfunction PagerNumericButtonsComponent_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1, \"... \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"selected\", false);\n    i0.ɵɵattribute(\"aria-label\", ctx_r2.pageLabel(ctx_r2.end + 1));\n  }\n}\n\nfunction PagerNumericButtonsComponent_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelementStart(1, \"span\", 10);\n    i0.ɵɵlistener(\"click\", function PagerNumericButtonsComponent_li_5_Template_span_click_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.changePage(ctx_r7.start - 2);\n    })(\"keydown.enter\", function PagerNumericButtonsComponent_li_5_Template_span_keydown_enter_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.changePage(ctx_r9.start - 2);\n    });\n    i0.ɵɵtext(2, \"...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", ctx_r3.pageLabel(ctx_r3.start - 1));\n  }\n}\n\nconst _c5 = function (a1) {\n  return {\n    \"k-link\": true,\n    \"k-selected\": a1,\n    \"k-pager-nav\": true\n  };\n};\n\nfunction PagerNumericButtonsComponent_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelementStart(1, \"span\", 11);\n    i0.ɵɵlistener(\"click\", function PagerNumericButtonsComponent_li_6_Template_span_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const num_r10 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.changePage(num_r10 - 1);\n    })(\"keydown.enter\", function PagerNumericButtonsComponent_li_6_Template_span_keydown_enter_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const num_r10 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.changePage(num_r10 - 1);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const num_r10 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c5, ctx_r4.currentPage === num_r10));\n    i0.ɵɵattribute(\"aria-label\", ctx_r4.pageLabel(num_r10));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", num_r10, \" \");\n  }\n}\n\nfunction PagerNumericButtonsComponent_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelementStart(1, \"span\", 10);\n    i0.ɵɵlistener(\"click\", function PagerNumericButtonsComponent_li_7_Template_span_click_1_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.changePage(ctx_r14.end);\n    })(\"keydown.enter\", function PagerNumericButtonsComponent_li_7_Template_span_keydown_enter_1_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.changePage(ctx_r16.end);\n    });\n    i0.ɵɵtext(2, \"...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", ctx_r5.pageLabel(ctx_r5.end + 1));\n  }\n}\n\nconst _c6 = function () {\n  return {\n    \"k-pager-numbers\": true,\n    \"k-reset\": true\n  };\n};\n\nconst _c7 = function () {\n  return {\n    \"k-pager-input\": true,\n    \"k-label\": true\n  };\n};\n\nconst _c8 = function (a0, a1) {\n  return {\n    keydown: a0,\n    focusout: a1\n  };\n};\n\nconst _c9 = function () {\n  return {\n    \"k-icon\": true,\n    \"k-i-caret-alt-right\": true\n  };\n};\n\nconst _c10 = function (a2) {\n  return {\n    \"k-link\": true,\n    \"k-pager-nav\": true,\n    \"k-disabled\": a2,\n    \"k-pager-last\": true\n  };\n};\n\nconst _c11 = function () {\n  return {\n    \"k-icon\": true,\n    \"k-i-caret-alt-to-right\": true\n  };\n};\n\nfunction PagerComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵlistener(\"focusin\", function PagerComponent_div_0_Template_div_focusin_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onInnerFocusIn($event, \"start\");\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"tabindex\", ctx_r0.focusTrapTabIndex);\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\n\nfunction PagerComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.template.templateRef)(\"ngTemplateOutletContext\", ctx_r1.templateContext);\n  }\n}\n\nfunction PagerComponent_ng_container_2_kendo_pager_prev_buttons_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-pager-prev-buttons\");\n  }\n}\n\nfunction PagerComponent_ng_container_2_kendo_pager_numeric_buttons_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-pager-numeric-buttons\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"buttonCount\", ctx_r8.settings.buttonCount);\n  }\n}\n\nfunction PagerComponent_ng_container_2_kendo_pager_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-pager-input\");\n  }\n}\n\nfunction PagerComponent_ng_container_2_kendo_pager_next_buttons_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-pager-next-buttons\");\n  }\n}\n\nfunction PagerComponent_ng_container_2_kendo_pager_info_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-pager-info\");\n  }\n}\n\nfunction PagerComponent_ng_container_2_kendo_pager_page_sizes_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-pager-page-sizes\", 9, 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"pageSizes\", ctx_r12.settings.pageSizes);\n  }\n}\n\nfunction PagerComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, PagerComponent_ng_container_2_kendo_pager_prev_buttons_1_Template, 1, 0, \"kendo-pager-prev-buttons\", 2);\n    i0.ɵɵtemplate(2, PagerComponent_ng_container_2_kendo_pager_numeric_buttons_2_Template, 1, 1, \"kendo-pager-numeric-buttons\", 6);\n    i0.ɵɵtemplate(3, PagerComponent_ng_container_2_kendo_pager_input_3_Template, 1, 0, \"kendo-pager-input\", 2);\n    i0.ɵɵtemplate(4, PagerComponent_ng_container_2_kendo_pager_next_buttons_4_Template, 1, 0, \"kendo-pager-next-buttons\", 2);\n    i0.ɵɵtemplate(5, PagerComponent_ng_container_2_kendo_pager_info_5_Template, 1, 0, \"kendo-pager-info\", 2);\n    i0.ɵɵtemplate(6, PagerComponent_ng_container_2_kendo_pager_page_sizes_6_Template, 2, 1, \"kendo-pager-page-sizes\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.settings.previousNext);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.settings.type === \"numeric\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.settings.type === \"input\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.settings.previousNext);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.settings.info);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.settings.pageSizes);\n  }\n}\n\nfunction PagerComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵlistener(\"focusin\", function PagerComponent_div_3_Template_div_focusin_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.onInnerFocusIn($event, \"end\");\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"tabindex\", ctx_r3.focusTrapTabIndex);\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\n\nfunction PagerComponent_kendo_resize_sensor_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-resize-sensor\", 11);\n    i0.ɵɵlistener(\"resize\", function PagerComponent_kendo_resize_sensor_4_Template_kendo_resize_sensor_resize_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.resizeHandler();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c12 = [\"kendoGroupIndicator\", \"\"];\n\nconst _c13 = function () {\n  return {\n    lastTarget: true\n  };\n};\n\nfunction GroupPanelComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"context\", i0.ɵɵpureFunction0(2, _c13));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.text, \" \");\n  }\n}\n\nconst _c14 = function (a0) {\n  return {\n    field: a0\n  };\n};\n\nconst _c15 = function (a0, a2) {\n  return {\n    field: a0,\n    type: \"groupIndicator\",\n    hint: a2\n  };\n};\n\nfunction GroupPanelComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"div\", 4);\n    i0.ɵɵlistener(\"directionChange\", function GroupPanelComponent_div_1_Template_div_directionChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.directionChange($event);\n    })(\"remove\", function GroupPanelComponent_div_1_Template_div_remove_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.remove($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const group_r3 = ctx.$implicit;\n    const index_r4 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"context\", i0.ɵɵpureFunction1(5, _c14, group_r3.field));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"enableDrag\", true)(\"context\", i0.ɵɵpureFunction2(7, _c15, group_r3.field, ctx_r1.groupTitles[index_r4]))(\"group\", group_r3)(\"groupTitle\", ctx_r1.groupTitles[index_r4]);\n  }\n}\n\nfunction GroupPanelComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtext(1, \"\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"context\", i0.ɵɵpureFunction0(1, _c13));\n  }\n}\n\nconst _c16 = [\"kendoGridColGroup\", \"\"];\n\nfunction ColGroupComponent_col_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"col\");\n  }\n\n  if (rf & 2) {\n    i0.ɵɵclassProp(\"k-group-col\", true);\n  }\n}\n\nfunction ColGroupComponent_col_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"col\");\n  }\n\n  if (rf & 2) {\n    i0.ɵɵclassProp(\"k-hierarchy-col\", true);\n  }\n}\n\nfunction ColGroupComponent_col_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"col\");\n  }\n\n  if (rf & 2) {\n    const column_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"width\", column_r4.width, \"px\");\n    i0.ɵɵclassProp(\"k-sorted\", ctx_r2.isSorted(ctx_r2.getColumnComponent(column_r4)));\n  }\n}\n\nconst _c17 = [\"*\"];\n\nfunction StringFilterMenuComponent_kendo_dropdownlist_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-dropdownlist\", 3);\n    i0.ɵɵlistener(\"valueChange\", function StringFilterMenuComponent_kendo_dropdownlist_1_Template_kendo_dropdownlist_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.logicChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"filterMenuDropDownLabel\", ctx_r0.filterMenuDropDownLabel)(\"data\", ctx_r0.logicOperators)(\"valuePrimitive\", true)(\"value\", ctx_r0.filter == null ? null : ctx_r0.filter.logic);\n  }\n}\n\nfunction StringFilterMenuComponent_kendo_grid_string_filter_menu_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-grid-string-filter-menu-input\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"operators\", ctx_r1.operators)(\"currentFilter\", ctx_r1.secondFilter)(\"filterService\", ctx_r1.filterService)(\"column\", ctx_r1.column)(\"filter\", ctx_r1.filter)(\"menuTabbingService\", ctx_r1.menuTabbingService);\n  }\n}\n\nfunction NumericFilterMenuComponent_kendo_dropdownlist_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-dropdownlist\", 3);\n    i0.ɵɵlistener(\"valueChange\", function NumericFilterMenuComponent_kendo_dropdownlist_1_Template_kendo_dropdownlist_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.logicChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"filterMenuDropDownLabel\", ctx_r0.filterMenuDropDownLabel)(\"data\", ctx_r0.logicOperators)(\"valuePrimitive\", true)(\"value\", ctx_r0.filter == null ? null : ctx_r0.filter.logic);\n  }\n}\n\nfunction NumericFilterMenuComponent_kendo_grid_numeric_filter_menu_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-grid-numeric-filter-menu-input\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"operators\", ctx_r1.operators)(\"currentFilter\", ctx_r1.secondFilter)(\"filterService\", ctx_r1.filterService)(\"column\", ctx_r1.column)(\"filter\", ctx_r1.filter)(\"format\", ctx_r1.format)(\"decimals\", ctx_r1.decimals)(\"spinners\", ctx_r1.spinners)(\"min\", ctx_r1.min)(\"max\", ctx_r1.max)(\"step\", ctx_r1.step)(\"menuTabbingService\", ctx_r1.menuTabbingService);\n  }\n}\n\nfunction DateFilterMenuComponent_kendo_dropdownlist_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-dropdownlist\", 3);\n    i0.ɵɵlistener(\"valueChange\", function DateFilterMenuComponent_kendo_dropdownlist_1_Template_kendo_dropdownlist_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.logicChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"filterMenuDropDownLabel\", ctx_r0.filterMenuDropDownLabel)(\"data\", ctx_r0.logicOperators)(\"valuePrimitive\", true)(\"value\", ctx_r0.filter == null ? null : ctx_r0.filter.logic);\n  }\n}\n\nfunction DateFilterMenuComponent_kendo_grid_date_filter_menu_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-grid-date-filter-menu-input\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"operators\", ctx_r1.operators)(\"currentFilter\", ctx_r1.secondFilter)(\"filterService\", ctx_r1.filterService)(\"column\", ctx_r1.column)(\"filter\", ctx_r1.filter)(\"activeView\", ctx_r1.activeView)(\"bottomView\", ctx_r1.bottomView)(\"topView\", ctx_r1.topView)(\"format\", ctx_r1.format)(\"formatPlaceholder\", ctx_r1.formatPlaceholder)(\"placeholder\", ctx_r1.placeholder)(\"min\", ctx_r1.min)(\"max\", ctx_r1.max)(\"weekNumber\", ctx_r1.weekNumber)(\"menuTabbingService\", ctx_r1.menuTabbingService);\n  }\n}\n\nfunction BooleanFilterMenuComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelementStart(1, \"input\", 2, 3);\n    i0.ɵɵlistener(\"change\", function BooleanFilterMenuComponent_li_1_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r1 = restoredCtx.$implicit;\n\n      const _r2 = i0.ɵɵreference(2);\n\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.onChange(item_r1.value, _r2);\n    })(\"keydown.shift.tab\", function BooleanFilterMenuComponent_li_1_Template_input_keydown_shift_tab_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onShiftTab($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 4);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"columnLabel\", ctx_r0.columnLabel)(\"name\", ctx_r0.idPrefix)(\"checked\", ctx_r0.isSelected(item_r1.value));\n    i0.ɵɵattribute(\"id\", ctx_r0.radioId(item_r1.value));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"for\", ctx_r0.radioId(item_r1.value));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r1.text);\n  }\n}\n\nconst _c18 = [\"resetButton\"];\nconst _c19 = [\"filterButton\"];\n\nfunction FilterMenuContainerComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementContainer(1, 9);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"filterService\", ctx_r0.childService)(\"column\", ctx_r0.column)(\"filter\", ctx_r0.childFilter)(\"menuTabbingService\", ctx_r0.menuTabbingService);\n  }\n}\n\nfunction FilterMenuContainerComponent_ng_container_4_1_ng_template_0_Template(rf, ctx) {}\n\nfunction FilterMenuContainerComponent_ng_container_4_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, FilterMenuContainerComponent_ng_container_4_1_ng_template_0_Template, 0, 0, \"ng-template\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.column.filterMenuTemplateRef)(\"ngTemplateOutletContext\", ctx_r4.templateContext);\n  }\n}\n\nfunction FilterMenuContainerComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FilterMenuContainerComponent_ng_container_4_1_Template, 1, 2, undefined, 10);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.column.filterMenuTemplateRef);\n  }\n}\n\nconst _c20 = [\"anchor\"];\nconst _c21 = [\"template\"];\n\nfunction FilterMenuComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-grid-filter-menu-container\", 4);\n    i0.ɵɵlistener(\"close\", function FilterMenuComponent_ng_template_3_Template_kendo_grid_filter_menu_container_close_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.close();\n    })(\"keydown.escape\", function FilterMenuComponent_ng_template_3_Template_kendo_grid_filter_menu_container_keydown_escape_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.close();\n    })(\"keydown.enter\", function FilterMenuComponent_ng_template_3_Template_kendo_grid_filter_menu_container_keydown_enter_0_listener($event) {\n      return $event.stopImmediatePropagation();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"column\", ctx_r2.column)(\"filter\", ctx_r2.filter);\n  }\n}\n\nconst _c22 = function (a2) {\n  return {\n    \"k-grid-filter-menu\": true,\n    \"k-grid-header-menu\": true,\n    \"k-active\": a2\n  };\n};\n\nfunction ColumnMenuItemComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.iconClass);\n  }\n}\n\nfunction ColumnMenuItemComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelementContainer(1, 5);\n    i0.ɵɵelement(2, \"div\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"overflow\", \"hidden\");\n    i0.ɵɵproperty(\"@state\", ctx_r1.contentState);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.contentTemplate.templateRef);\n  }\n}\n\nfunction ColumnMenuPositionComponent_ng_template_1_kendo_grid_columnmenu_lock_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-grid-columnmenu-lock\", 3);\n    i0.ɵɵlistener(\"keydown.tab\", function ColumnMenuPositionComponent_ng_template_1_kendo_grid_columnmenu_lock_0_Template_kendo_grid_columnmenu_lock_keydown_tab_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return ctx_r3.onTab($event, !ctx_r3.showStick);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"service\", ctx_r1.service);\n  }\n}\n\nfunction ColumnMenuPositionComponent_ng_template_1_kendo_grid_columnmenu_stick_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-grid-columnmenu-stick\", 3);\n    i0.ɵɵlistener(\"keydown.tab\", function ColumnMenuPositionComponent_ng_template_1_kendo_grid_columnmenu_stick_1_Template_kendo_grid_columnmenu_stick_keydown_tab_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.onTab($event, true);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"service\", ctx_r2.service);\n  }\n}\n\nfunction ColumnMenuPositionComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ColumnMenuPositionComponent_ng_template_1_kendo_grid_columnmenu_lock_0_Template, 1, 1, \"kendo-grid-columnmenu-lock\", 2);\n    i0.ɵɵtemplate(1, ColumnMenuPositionComponent_ng_template_1_kendo_grid_columnmenu_stick_1_Template, 1, 1, \"kendo-grid-columnmenu-stick\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showLock);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showStick);\n  }\n}\n\nconst _c23 = [\"applyButton\"];\n\nfunction ColumnListComponent_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 3);\n    i0.ɵɵelement(1, \"input\", 4);\n    i0.ɵɵelementStart(2, \"span\", 5);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r2 = ctx.$implicit;\n    const index_r3 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", !column_r2.hidden)(\"disabled\", ctx_r0.isDisabled(column_r2));\n    i0.ɵɵattribute(\"data-index\", index_r3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(column_r2.displayTitle);\n  }\n}\n\nfunction ColumnListComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelementStart(1, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ColumnListComponent_div_2_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.cancelChanges();\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 8, 9);\n    i0.ɵɵlistener(\"keydown.tab\", function ColumnListComponent_div_2_Template_button_keydown_tab_3_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onTab($event);\n    })(\"click\", function ColumnListComponent_div_2_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.applyChanges();\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.actionsClass);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.resetText);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.applyText);\n  }\n}\n\nfunction ColumnMenuChooserComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-grid-columnlist\", 2);\n    i0.ɵɵlistener(\"apply\", function ColumnMenuChooserComponent_ng_template_1_Template_kendo_grid_columnlist_apply_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.onApply($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"applyText\", ctx_r0.localization.get(\"columnsApply\"))(\"resetText\", ctx_r0.localization.get(\"columnsReset\"))(\"columns\", ctx_r0.columns)(\"autoSync\", false)(\"allowHideAll\", false)(\"actionsClass\", ctx_r0.actionsClass)(\"isLast\", ctx_r0.isLast)(\"isExpanded\", ctx_r0.expanded)(\"service\", ctx_r0.service);\n  }\n}\n\nfunction ColumnMenuFilterComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-grid-filter-menu-container\", 2);\n    i0.ɵɵlistener(\"keydown.shift.tab\", function ColumnMenuFilterComponent_ng_template_1_Template_kendo_grid_filter_menu_container_keydown_shift_tab_0_listener($event) {\n      return $event.stopImmediatePropagation();\n    })(\"close\", function ColumnMenuFilterComponent_ng_template_1_Template_kendo_grid_filter_menu_container_close_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.close();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"column\", ctx_r0.service.column)(\"menuTabbingService\", ctx_r0.service.menuTabbingService)(\"filter\", ctx_r0.service.filter)(\"actionsClass\", ctx_r0.actionsClass)(\"isLast\", ctx_r0.isLast)(\"isExpanded\", ctx_r0.expanded);\n  }\n}\n\nfunction ColumnMenuAutoSizeColumnComponent_kendo_grid_columnmenu_item_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-grid-columnmenu-item\", 1);\n    i0.ɵɵlistener(\"itemClick\", function ColumnMenuAutoSizeColumnComponent_kendo_grid_columnmenu_item_0_Template_kendo_grid_columnmenu_item_itemClick_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.autoSizeColumn();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"text\", ctx_r0.localization.get(\"autosizeThisColumn\"));\n  }\n}\n\nfunction ColumnMenuAutoSizeAllColumnsComponent_kendo_grid_columnmenu_item_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-grid-columnmenu-item\", 1);\n    i0.ɵɵlistener(\"itemClick\", function ColumnMenuAutoSizeAllColumnsComponent_kendo_grid_columnmenu_item_0_Template_kendo_grid_columnmenu_item_itemClick_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.autoSizeAllColumns();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"text\", ctx_r0.localization.get(\"autosizeAllColumns\"));\n  }\n}\n\nconst _c24 = function (a0, a1) {\n  return {\n    service: a0,\n    column: a1\n  };\n};\n\nfunction ColumnMenuComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n\n    const _r3 = i0.ɵɵreference(6);\n\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.column.columnMenuTemplateRef || ctx_r2.columnMenuTemplate || _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c24, ctx_r2.service, ctx_r2.column));\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_sort_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-grid-columnmenu-sort\", 13, 14);\n  }\n\n  if (rf & 2) {\n    const _r15 = i0.ɵɵreference(1);\n\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"kendoGridColumnMenuItem\", _r15)(\"service\", ctx_r5.service);\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_lock_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-grid-columnmenu-lock\", 13, 15);\n  }\n\n  if (rf & 2) {\n    const _r16 = i0.ɵɵreference(1);\n\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"kendoGridColumnMenuItem\", _r16)(\"service\", ctx_r6.service);\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_stick_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-grid-columnmenu-stick\", 13, 16);\n  }\n\n  if (rf & 2) {\n    const _r17 = i0.ɵɵreference(1);\n\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"kendoGridColumnMenuItem\", _r17)(\"service\", ctx_r7.service);\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_position_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-grid-columnmenu-position\", 17, 18);\n  }\n\n  if (rf & 2) {\n    const _r18 = i0.ɵɵreference(1);\n\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"showLock\", ctx_r8.hasLock)(\"showStick\", ctx_r8.hasStick)(\"kendoGridColumnMenuItem\", _r18)(\"service\", ctx_r8.service)(\"expanded\", ctx_r8.expandedPosition);\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 19);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵstyleProp(\"border-color\", \"rgba(0, 0, 0, 0.08)\");\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_chooser_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-grid-columnmenu-chooser\", 20, 21);\n  }\n\n  if (rf & 2) {\n    const _r19 = i0.ɵɵreference(1);\n\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"kendoGridColumnMenuItem\", _r19)(\"service\", ctx_r10.service)(\"expanded\", ctx_r10.expandedColumns);\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_autosize_column_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-grid-columnmenu-autosize-column\", 22, 23);\n  }\n\n  if (rf & 2) {\n    const _r20 = i0.ɵɵreference(1);\n\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"service\", ctx_r11.service)(\"kendoGridColumnMenuItem\", _r20)(\"column\", ctx_r11.column);\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_autosize_all_columns_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-grid-columnmenu-autosize-all-columns\", 24, 25);\n  }\n\n  if (rf & 2) {\n    const _r21 = i0.ɵɵreference(1);\n\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"service\", ctx_r12.service)(\"kendoGridColumnMenuItem\", _r21);\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 19);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵstyleProp(\"border-color\", \"rgba(0, 0, 0, 0.08)\");\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_filter_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-grid-columnmenu-filter\", 20, 26);\n  }\n\n  if (rf & 2) {\n    const _r22 = i0.ɵɵreference(1);\n\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"kendoGridColumnMenuItem\", _r22)(\"service\", ctx_r14.service)(\"expanded\", ctx_r14.expandedFilter);\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-grid-columnmenu-container\", 6);\n    i0.ɵɵlistener(\"keydown.escape\", function ColumnMenuComponent_ng_template_5_Template_kendo_grid_columnmenu_container_keydown_escape_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.close();\n    })(\"keydown.enter\", function ColumnMenuComponent_ng_template_5_Template_kendo_grid_columnmenu_container_keydown_enter_0_listener($event) {\n      return $event.stopImmediatePropagation();\n    });\n    i0.ɵɵtemplate(1, ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_sort_1_Template, 2, 2, \"kendo-grid-columnmenu-sort\", 7);\n    i0.ɵɵtemplate(2, ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_lock_2_Template, 2, 2, \"kendo-grid-columnmenu-lock\", 7);\n    i0.ɵɵtemplate(3, ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_stick_3_Template, 2, 2, \"kendo-grid-columnmenu-stick\", 7);\n    i0.ɵɵtemplate(4, ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_position_4_Template, 2, 5, \"kendo-grid-columnmenu-position\", 8);\n    i0.ɵɵtemplate(5, ColumnMenuComponent_ng_template_5_span_5_Template, 1, 2, \"span\", 9);\n    i0.ɵɵtemplate(6, ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_chooser_6_Template, 2, 3, \"kendo-grid-columnmenu-chooser\", 10);\n    i0.ɵɵtemplate(7, ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_autosize_column_7_Template, 2, 3, \"kendo-grid-columnmenu-autosize-column\", 11);\n    i0.ɵɵtemplate(8, ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_autosize_all_columns_8_Template, 2, 2, \"kendo-grid-columnmenu-autosize-all-columns\", 12);\n    i0.ɵɵtemplate(9, ColumnMenuComponent_ng_template_5_span_9_Template, 1, 2, \"span\", 9);\n    i0.ɵɵtemplate(10, ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_filter_10_Template, 2, 3, \"kendo-grid-columnmenu-filter\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.hasSort);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.hasLock && !ctx_r4.hasPosition);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.hasStick && !ctx_r4.hasPosition);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.hasPosition);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.hasColumnChooser || ctx_r4.hasAutoSizeColumn || ctx_r4.hasAutoSizeAllColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.hasColumnChooser);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.hasAutoSizeColumn);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.hasAutoSizeAllColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.hasColumnChooser || ctx_r4.hasAutoSizeColumn || ctx_r4.hasAutoSizeAllColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.hasFilter);\n  }\n}\n\nconst _c25 = function (a0) {\n  return {\n    \"k-active\": a0\n  };\n};\n\nconst _c26 = [\"dropdown\"];\n\nconst _c27 = function () {\n  return {\n    width: \"auto\"\n  };\n};\n\nfunction FilterCellOperatorsComponent_kendo_dropdownlist_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-dropdownlist\", 2, 3);\n    i0.ɵɵlistener(\"valueChange\", function FilterCellOperatorsComponent_kendo_dropdownlist_0_Template_kendo_dropdownlist_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.onChange($event);\n    })(\"keydown\", function FilterCellOperatorsComponent_kendo_dropdownlist_0_Template_kendo_dropdownlist_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.dropdownKeydown($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", ctx_r0.operators)(\"value\", ctx_r0.value)(\"valuePrimitive\", true)(\"popupSettings\", i0.ɵɵpureFunction0(4, _c27));\n  }\n}\n\nfunction FilterCellOperatorsComponent_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function FilterCellOperatorsComponent_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.clearClick();\n    })(\"keydown\", function FilterCellOperatorsComponent_button_1_Template_button_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.clearKeydown($event);\n    });\n    i0.ɵɵelement(1, \"span\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"title\", ctx_r1.clearText);\n  }\n}\n\nconst _c28 = [\"kendoGridFilterCell\", \"\"];\n\nfunction FilterCellComponent_ng_container_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementContainer(1, 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"column\", ctx_r1.column)(\"filter\", ctx_r1.filter);\n  }\n}\n\nfunction FilterCellComponent_ng_container_0_ng_container_3_1_ng_template_0_Template(rf, ctx) {}\n\nfunction FilterCellComponent_ng_container_0_ng_container_3_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, FilterCellComponent_ng_container_0_ng_container_3_1_ng_template_0_Template, 0, 0, \"ng-template\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.column.filterCellTemplateRef)(\"ngTemplateOutletContext\", ctx_r3.templateContext);\n  }\n}\n\nfunction FilterCellComponent_ng_container_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FilterCellComponent_ng_container_0_ng_container_3_1_Template, 1, 2, undefined, 0);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.column.filterCellTemplateRef);\n  }\n}\n\nfunction FilterCellComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementContainerStart(1, 1);\n    i0.ɵɵtemplate(2, FilterCellComponent_ng_container_0_ng_container_2_Template, 2, 2, \"ng-container\", 2);\n    i0.ɵɵtemplate(3, FilterCellComponent_ng_container_0_ng_container_3_Template, 2, 1, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r0.hasTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", true);\n  }\n}\n\nconst _c29 = [\"kendoGridFilterRow\", \"\"];\n\nfunction FilterRowComponent_td_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\", 3);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵclassProp(\"k-group-cell\", true);\n  }\n}\n\nfunction FilterRowComponent_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\", 3);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵclassProp(\"k-hierarchy-cell\", true);\n  }\n}\n\nfunction FilterRowComponent_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\", 4);\n  }\n\n  if (rf & 2) {\n    const column_r4 = ctx.$implicit;\n    const columnIndex_r5 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"k-grid-header-sticky\", column_r4.sticky);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r2.addStickyStyles(column_r4))(\"ngClass\", column_r4.filterClass)(\"column\", column_r4)(\"filter\", ctx_r2.filter)(\"logicalRowIndex\", ctx_r2.logicalRowIndex)(\"logicalColIndex\", ctx_r2.lockedColumnsCount + columnIndex_r5);\n    i0.ɵɵattribute(\"aria-label\", ctx_r2.filterLabel(column_r4));\n  }\n}\n\nconst _c30 = [\"kendoGridHeader\", \"\"];\n\nfunction HeaderComponent_tr_1_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 6);\n  }\n}\n\nfunction HeaderComponent_tr_1_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 7);\n  }\n\n  if (rf & 2) {\n    const levelIndex_r3 = i0.ɵɵnextContext().index;\n    i0.ɵɵproperty(\"logicalRowIndex\", levelIndex_r3)(\"logicalColIndex\", 0);\n  }\n}\n\nfunction HeaderComponent_tr_1_ng_container_3_th_1_ng_container_1_ng_template_3_Template(rf, ctx) {}\n\nfunction HeaderComponent_tr_1_ng_container_3_th_1_ng_container_1_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 18);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r9 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(column_r9.displayTitle);\n  }\n}\n\nfunction HeaderComponent_tr_1_ng_container_3_th_1_ng_container_1_kendo_grid_filter_menu_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-grid-filter-menu\", 19);\n  }\n\n  if (rf & 2) {\n    const column_r9 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r20 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"column\", ctx_r20.getColumnComponent(column_r9))(\"filter\", ctx_r20.filter)(\"tabIndex\", ctx_r20.tabIndex);\n  }\n}\n\nfunction HeaderComponent_tr_1_ng_container_3_th_1_ng_container_1_kendo_grid_column_menu_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-grid-column-menu\", 20);\n  }\n\n  if (rf & 2) {\n    const column_r9 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"standalone\", false)(\"settings\", ctx_r21.columnMenuSettings)(\"column\", column_r9)(\"columnMenuTemplate\", ctx_r21.columnMenuTemplate)(\"sort\", ctx_r21.sort)(\"filter\", ctx_r21.filter)(\"sortable\", ctx_r21.sortable)(\"tabIndex\", ctx_r21.tabIndex);\n  }\n}\n\nconst _c31 = function (a0, a1, a2, a3) {\n  return {\n    templateRef: a0,\n    columnIndex: a1,\n    column: a2,\n    $implicit: a3\n  };\n};\n\nfunction HeaderComponent_tr_1_ng_container_3_th_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 13);\n    i0.ɵɵelementStart(2, \"span\", 14);\n    i0.ɵɵtemplate(3, HeaderComponent_tr_1_ng_container_3_th_1_ng_container_1_ng_template_3_Template, 0, 0, \"ng-template\", 15);\n    i0.ɵɵtemplate(4, HeaderComponent_tr_1_ng_container_3_th_1_ng_container_1_ng_container_4_Template, 3, 1, \"ng-container\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, HeaderComponent_tr_1_ng_container_3_th_1_ng_container_1_kendo_grid_filter_menu_5_Template, 1, 3, \"kendo-grid-filter-menu\", 16);\n    i0.ɵɵtemplate(6, HeaderComponent_tr_1_ng_container_3_th_1_ng_container_1_kendo_grid_column_menu_6_Template, 1, 8, \"kendo-grid-column-menu\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r9 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction4(4, _c31, column_r9.headerTemplateRef, column_r9.leafIndex, column_r9, column_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !column_r9.headerTemplateRef);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.showFilterMenu && ctx_r14.isFilterable(ctx_r14.getColumnComponent(column_r9)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.showColumnMenu(column_r9));\n  }\n}\n\nfunction HeaderComponent_tr_1_ng_container_3_th_1_ng_container_2_ng_template_4_Template(rf, ctx) {}\n\nfunction HeaderComponent_tr_1_ng_container_3_th_1_ng_container_2_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 18);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r9 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(column_r9.displayTitle);\n  }\n}\n\nfunction HeaderComponent_tr_1_ng_container_3_th_1_ng_container_2_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r9 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r29 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r29.sortOrder(ctx_r29.getColumnComponent(column_r9).field));\n  }\n}\n\nfunction HeaderComponent_tr_1_ng_container_3_th_1_ng_container_2_kendo_grid_filter_menu_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-grid-filter-menu\", 19);\n  }\n\n  if (rf & 2) {\n    const column_r9 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r30 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"column\", ctx_r30.getColumnComponent(column_r9))(\"filter\", ctx_r30.filter)(\"tabIndex\", ctx_r30.tabIndex);\n  }\n}\n\nfunction HeaderComponent_tr_1_ng_container_3_th_1_ng_container_2_kendo_grid_column_menu_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-grid-column-menu\", 20);\n  }\n\n  if (rf & 2) {\n    const column_r9 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r31 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"standalone\", false)(\"settings\", ctx_r31.columnMenuSettings)(\"column\", column_r9)(\"columnMenuTemplate\", ctx_r31.columnMenuTemplate)(\"sort\", ctx_r31.sort)(\"filter\", ctx_r31.filter)(\"sortable\", ctx_r31.sortable)(\"tabIndex\", ctx_r31.tabIndex);\n  }\n}\n\nfunction HeaderComponent_tr_1_ng_container_3_th_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 13);\n    i0.ɵɵelementStart(2, \"span\", 21, 22);\n    i0.ɵɵlistener(\"click\", function HeaderComponent_tr_1_ng_container_3_th_1_ng_container_2_Template_span_click_2_listener($event) {\n      i0.ɵɵrestoreView(_r38);\n\n      const _r26 = i0.ɵɵreference(3);\n\n      const column_r9 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r36 = i0.ɵɵnextContext(2);\n      return ctx_r36.onSortClick(ctx_r36.getColumnComponent(column_r9), $event, _r26);\n    });\n    i0.ɵɵtemplate(4, HeaderComponent_tr_1_ng_container_3_th_1_ng_container_2_ng_template_4_Template, 0, 0, \"ng-template\", 15);\n    i0.ɵɵtemplate(5, HeaderComponent_tr_1_ng_container_3_th_1_ng_container_2_ng_container_5_Template, 3, 1, \"ng-container\", 11);\n    i0.ɵɵelement(6, \"span\", 23);\n    i0.ɵɵtemplate(7, HeaderComponent_tr_1_ng_container_3_th_1_ng_container_2_span_7_Template, 2, 1, \"span\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"span\", 25);\n    i0.ɵɵtemplate(9, HeaderComponent_tr_1_ng_container_3_th_1_ng_container_2_kendo_grid_filter_menu_9_Template, 1, 3, \"kendo-grid-filter-menu\", 16);\n    i0.ɵɵtemplate(10, HeaderComponent_tr_1_ng_container_3_th_1_ng_container_2_kendo_grid_column_menu_10_Template, 1, 8, \"kendo-grid-column-menu\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r9 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction4(12, _c31, column_r9.headerTemplateRef, column_r9.leafIndex, column_r9, column_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !column_r9.headerTemplateRef);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r15.sortIcon(ctx_r15.getColumnComponent(column_r9).field));\n    i0.ɵɵattribute(\"aria-label\", ctx_r15.sortableLabel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r15.showSortNumbering(ctx_r15.getColumnComponent(column_r9)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"position\", \"absolute\")(\"left\", -10000, \"px\");\n    i0.ɵɵproperty(\"innerHtml\", ctx_r15.sortStatus(ctx_r15.getColumnComponent(column_r9)), i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r15.showFilterMenu && ctx_r15.isFilterable(ctx_r15.getColumnComponent(column_r9)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r15.showColumnMenu(column_r9));\n  }\n}\n\nfunction HeaderComponent_tr_1_ng_container_3_th_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"input\", 27);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"id\", ctx_r16.selectAllCheckboxId())(\"aria-label\", ctx_r16.selectAllCheckboxLabel);\n  }\n}\n\nfunction HeaderComponent_tr_1_ng_container_3_th_1_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 28);\n  }\n\n  if (rf & 2) {\n    const column_r9 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"column\", column_r9)(\"columns\", ctx_r17.columns);\n  }\n}\n\nconst _c32 = function (a0, a2, a3, a4) {\n  return {\n    field: a0,\n    type: \"column\",\n    column: a2,\n    hint: a3,\n    lastColumn: a4\n  };\n};\n\nfunction HeaderComponent_tr_1_ng_container_3_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r43 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\", 10);\n    i0.ɵɵlistener(\"keydown\", function HeaderComponent_tr_1_ng_container_3_th_1_Template_th_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r43);\n      const column_r9 = i0.ɵɵnextContext().$implicit;\n      const ctx_r41 = i0.ɵɵnextContext(2);\n      return ctx_r41.onHeaderKeydown(ctx_r41.getColumnComponent(column_r9), $event);\n    });\n    i0.ɵɵtemplate(1, HeaderComponent_tr_1_ng_container_3_th_1_ng_container_1_Template, 7, 9, \"ng-container\", 11);\n    i0.ɵɵtemplate(2, HeaderComponent_tr_1_ng_container_3_th_1_ng_container_2_Template, 11, 17, \"ng-container\", 11);\n    i0.ɵɵtemplate(3, HeaderComponent_tr_1_ng_container_3_th_1_ng_container_3_Template, 2, 2, \"ng-container\", 11);\n    i0.ɵɵtemplate(4, HeaderComponent_tr_1_ng_container_3_th_1_span_4_Template, 1, 2, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r44 = i0.ɵɵnextContext();\n    const column_r9 = ctx_r44.$implicit;\n    const columnIndex_r10 = ctx_r44.index;\n    const last_r11 = ctx_r44.last;\n    const levelIndex_r3 = i0.ɵɵnextContext().index;\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"k-sorted\", !!ctx_r12.sortState(ctx_r12.getColumnComponent(column_r9)))(\"k-filterable\", ctx_r12.showFilterMenu && ctx_r12.isFilterable(ctx_r12.getColumnComponent(column_r9)) || ctx_r12.showColumnMenu(column_r9))(\"k-first\", ctx_r12.isFirstOnRow(ctx_r12.getColumnComponent(column_r9), columnIndex_r10))(\"k-grid-header-sticky\", column_r9.sticky);\n    i0.ɵɵproperty(\"logicalRowIndex\", levelIndex_r3)(\"logicalColIndex\", ctx_r12.logicalColumnIndex(column_r9))(\"headerLabelText\", column_r9.title || ctx_r12.getColumnComponent(column_r9).field)(\"colSpan\", column_r9.colspan)(\"rowSpan\", column_r9.rowspan(ctx_r12.totalColumnLevels))(\"enableDrag\", ctx_r12.shouldActivate(column_r9))(\"context\", i0.ɵɵpureFunction4(24, _c32, ctx_r12.getColumnComponent(column_r9).field, column_r9, column_r9.title || ctx_r12.getColumnComponent(column_r9).field, last_r11 && columnIndex_r10 === 0))(\"ngClass\", column_r9.headerClass)(\"ngStyle\", column_r9.sticky ? ctx_r12.addStickyStyles(column_r9) : column_r9.headerStyle);\n    i0.ɵɵattribute(\"aria-sort\", ctx_r12.sortState(ctx_r12.getColumnComponent(column_r9)))(\"rowspan\", column_r9.rowspan(ctx_r12.totalColumnLevels))(\"colspan\", column_r9.colspan);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r12.isSortable(ctx_r12.getColumnComponent(column_r9)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.isSortable(ctx_r12.getColumnComponent(column_r9)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.isCheckboxColumn(column_r9) && !column_r9.headerTemplateRef && column_r9.showSelectAll);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.resizable);\n  }\n}\n\nfunction HeaderComponent_tr_1_ng_container_3_th_2_ng_template_3_Template(rf, ctx) {}\n\nfunction HeaderComponent_tr_1_ng_container_3_th_2_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 18);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r9 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(column_r9.displayTitle);\n  }\n}\n\nfunction HeaderComponent_tr_1_ng_container_3_th_2_kendo_grid_column_menu_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-grid-column-menu\", 31);\n  }\n\n  if (rf & 2) {\n    const column_r9 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r48 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"standalone\", false)(\"settings\", ctx_r48.columnMenuSettings)(\"column\", column_r9)(\"columnMenuTemplate\", ctx_r48.columnMenuTemplate);\n  }\n}\n\nfunction HeaderComponent_tr_1_ng_container_3_th_2_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 28);\n  }\n\n  if (rf & 2) {\n    const column_r9 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r49 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"column\", column_r9)(\"columns\", ctx_r49.columns);\n  }\n}\n\nconst _c33 = function (a1, a2, a3) {\n  return {\n    type: \"columnGroup\",\n    column: a1,\n    hint: a2,\n    lastColumn: a3\n  };\n};\n\nfunction HeaderComponent_tr_1_ng_container_3_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 29);\n    i0.ɵɵelementStart(1, \"span\", 13);\n    i0.ɵɵelementStart(2, \"span\", 14);\n    i0.ɵɵtemplate(3, HeaderComponent_tr_1_ng_container_3_th_2_ng_template_3_Template, 0, 0, \"ng-template\", 15);\n    i0.ɵɵtemplate(4, HeaderComponent_tr_1_ng_container_3_th_2_ng_container_4_Template, 3, 1, \"ng-container\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, HeaderComponent_tr_1_ng_container_3_th_2_kendo_grid_column_menu_5_Template, 1, 4, \"kendo-grid-column-menu\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, HeaderComponent_tr_1_ng_container_3_th_2_span_6_Template, 1, 2, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r53 = i0.ɵɵnextContext();\n    const column_r9 = ctx_r53.$implicit;\n    const columnIndex_r10 = ctx_r53.index;\n    const last_r11 = ctx_r53.last;\n    const levelIndex_r3 = i0.ɵɵnextContext().index;\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"k-first\", ctx_r13.isFirstOnRow(ctx_r13.getColumnComponent(column_r9), columnIndex_r10))(\"k-filterable\", ctx_r13.showColumnMenu(column_r9))(\"k-grid-content-sticky\", column_r9.sticky);\n    i0.ɵɵproperty(\"logicalRowIndex\", levelIndex_r3)(\"logicalColIndex\", ctx_r13.logicalColumnIndex(column_r9))(\"rowSpan\", column_r9.rowspan(ctx_r13.totalColumnLevels))(\"colSpan\", column_r9.colspan)(\"headerLabelText\", column_r9.title || ctx_r13.getColumnComponent(column_r9).field)(\"enableDrag\", ctx_r13.shouldActivate(column_r9))(\"context\", i0.ɵɵpureFunction3(21, _c33, column_r9, column_r9.title, last_r11 && columnIndex_r10 === 0))(\"ngClass\", column_r9.headerClass)(\"ngStyle\", column_r9.headerStyle);\n    i0.ɵɵattribute(\"rowspan\", column_r9.rowspan(ctx_r13.totalColumnLevels))(\"colspan\", column_r9.colspan);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction4(25, _c31, column_r9.headerTemplateRef, ctx_r13.lockedColumnsCount + columnIndex_r10, column_r9, column_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !column_r9.headerTemplateRef);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.showColumnMenu(column_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.resizable);\n  }\n}\n\nfunction HeaderComponent_tr_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, HeaderComponent_tr_1_ng_container_3_th_1_Template, 5, 29, \"th\", 8);\n    i0.ɵɵtemplate(2, HeaderComponent_tr_1_ng_container_3_th_2_Template, 7, 30, \"th\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r9 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.isColumnGroupComponent(column_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.isColumnGroupComponent(column_r9));\n  }\n}\n\nfunction HeaderComponent_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 2);\n    i0.ɵɵtemplate(1, HeaderComponent_tr_1_th_1_Template, 1, 0, \"th\", 3);\n    i0.ɵɵtemplate(2, HeaderComponent_tr_1_th_2_Template, 1, 2, \"th\", 4);\n    i0.ɵɵtemplate(3, HeaderComponent_tr_1_ng_container_3_Template, 3, 2, \"ng-container\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const levelIndex_r3 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"logicalRowIndex\", levelIndex_r3)(\"logicalSlaveRow\", ctx_r0.lockedColumnsCount > 0)(\"logicalCellsCount\", ctx_r0.columns.length)(\"logicalSlaveCellsCount\", ctx_r0.unlockedColumnsCount);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.groups);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.detailTemplate == null ? null : ctx_r0.detailTemplate.templateRef);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.columnsForLevel(levelIndex_r3))(\"ngForTrackBy\", ctx_r0.trackByIndex);\n  }\n}\n\nfunction HeaderComponent_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 32);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"columns\", ctx_r1.leafColumns)(\"filter\", ctx_r1.filter)(\"groups\", ctx_r1.groups)(\"detailTemplate\", ctx_r1.detailTemplate)(\"lockedColumnsCount\", ctx_r1.lockedColumnsCount)(\"logicalRowIndex\", ctx_r1.totalColumnLevels + 1)(\"logicalSlaveRow\", ctx_r1.lockedColumnsCount > 0)(\"logicalCellsCount\", ctx_r1.columns.length)(\"logicalSlaveCellsCount\", ctx_r1.unlockedColumnsCount);\n  }\n}\n\nconst _c34 = [\"kendoGridCell\", \"\"];\n\nfunction CellComponent_ng_container_1_ng_container_1_1_ng_template_0_Template(rf, ctx) {}\n\nfunction CellComponent_ng_container_1_ng_container_1_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, CellComponent_ng_container_1_ng_container_1_1_ng_template_0_Template, 0, 0, \"ng-template\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.column.templateRef)(\"ngTemplateOutletContext\", ctx_r5.templateContext);\n  }\n}\n\nfunction CellComponent_ng_container_1_ng_container_1_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"valueOf\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const childColumn_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind3(2, 1, ctx_r10.dataItem, childColumn_r11.field, childColumn_r11.format), \" \");\n  }\n}\n\nfunction CellComponent_ng_container_1_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CellComponent_ng_container_1_ng_container_1_ng_container_2_ng_container_1_Template, 3, 5, \"ng-container\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.childColumns);\n  }\n}\n\nfunction CellComponent_ng_container_1_ng_container_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"valueOf\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind3(2, 1, ctx_r7.dataItem, ctx_r7.column.field, ctx_r7.column.format));\n  }\n}\n\nfunction CellComponent_ng_container_1_ng_container_1_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"input\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"kendoGridSelectionCheckbox\", ctx_r8.rowIndex);\n    i0.ɵɵattribute(\"id\", ctx_r8.selectionCheckboxId)(\"aria-label\", ctx_r8.selectionCheckboxLabel);\n  }\n}\n\nfunction CellComponent_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CellComponent_ng_container_1_ng_container_1_1_Template, 1, 2, undefined, 4);\n    i0.ɵɵtemplate(2, CellComponent_ng_container_1_ng_container_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵtemplate(3, CellComponent_ng_container_1_ng_container_1_ng_container_3_Template, 3, 5, \"ng-container\", 4);\n    i0.ɵɵtemplate(4, CellComponent_ng_container_1_ng_container_1_ng_container_4_Template, 2, 3, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.column.templateRef);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isSpanColumn);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isBoundColumn);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isCheckboxColumn && !ctx_r2.isNew);\n  }\n}\n\nfunction CellComponent_ng_container_1_ng_template_2_0_ng_template_0_Template(rf, ctx) {}\n\nconst _c35 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction CellComponent_ng_container_1_ng_template_2_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, CellComponent_ng_container_1_ng_template_2_0_ng_template_0_Template, 0, 0, \"ng-template\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r12.loadingTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c35, ctx_r12.column));\n  }\n}\n\nfunction CellComponent_ng_container_1_ng_template_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 9);\n  }\n}\n\nfunction CellComponent_ng_container_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, CellComponent_ng_container_1_ng_template_2_0_Template, 1, 4, undefined, 4);\n    i0.ɵɵtemplate(1, CellComponent_ng_container_1_ng_template_2_div_1_Template, 1, 0, \"div\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.loadingTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.loadingTemplate);\n  }\n}\n\nfunction CellComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CellComponent_ng_container_1_ng_container_1_Template, 5, 4, \"ng-container\", 2);\n    i0.ɵɵtemplate(2, CellComponent_ng_container_1_ng_template_2_Template, 2, 2, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(3);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.showLoading)(\"ngIfElse\", _r3);\n  }\n}\n\nfunction CellComponent_ng_container_2_1_ng_template_0_Template(rf, ctx) {}\n\nfunction CellComponent_ng_container_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, CellComponent_ng_container_2_1_ng_template_0_Template, 0, 0, \"ng-template\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r15.column.editTemplateRef)(\"ngTemplateOutletContext\", ctx_r15.editTemplateContext);\n  }\n}\n\nfunction CellComponent_ng_container_2_ng_container_2_kendo_numerictextbox_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-numerictextbox\", 14);\n  }\n\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"format\", ctx_r18.format)(\"formControl\", ctx_r18.formGroup.get(ctx_r18.column.field));\n  }\n}\n\nfunction CellComponent_ng_container_2_ng_container_2_kendo_datepicker_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-datepicker\", 14);\n  }\n\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"format\", ctx_r19.format)(\"formControl\", ctx_r19.formGroup.get(ctx_r19.column.field));\n  }\n}\n\nfunction CellComponent_ng_container_2_ng_container_2_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 15);\n  }\n\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"formControl\", ctx_r20.formGroup.get(ctx_r20.column.field));\n  }\n}\n\nfunction CellComponent_ng_container_2_ng_container_2_input_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 16);\n  }\n\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"formControl\", ctx_r21.formGroup.get(ctx_r21.column.field));\n  }\n}\n\nfunction CellComponent_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 0);\n    i0.ɵɵtemplate(1, CellComponent_ng_container_2_ng_container_2_kendo_numerictextbox_1_Template, 1, 2, \"kendo-numerictextbox\", 11);\n    i0.ɵɵtemplate(2, CellComponent_ng_container_2_ng_container_2_kendo_datepicker_2_Template, 1, 2, \"kendo-datepicker\", 11);\n    i0.ɵɵtemplate(3, CellComponent_ng_container_2_ng_container_2_input_3_Template, 1, 1, \"input\", 12);\n    i0.ɵɵtemplate(4, CellComponent_ng_container_2_ng_container_2_input_4_Template, 1, 1, \"input\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r16.column.editor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"numeric\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"date\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"boolean\");\n  }\n}\n\nfunction CellComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CellComponent_ng_container_2_1_Template, 1, 2, undefined, 4);\n    i0.ɵɵtemplate(2, CellComponent_ng_container_2_ng_container_2_Template, 5, 4, \"ng-container\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.column.editTemplateRef);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.column.editTemplateRef);\n  }\n}\n\nconst _c36 = [\"kendoGridGroupHeader\", \"\"];\n\nfunction GroupHeaderComponent_ng_container_0_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\", 3);\n  }\n}\n\nfunction GroupHeaderComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, GroupHeaderComponent_ng_container_0_td_1_Template, 1, 0, \"td\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.prefixGroupCell(ctx_r0.item));\n  }\n}\n\nfunction GroupHeaderComponent_td_1_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"valueOf\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r6.groupTitle(ctx_r6.item), \": \", i0.ɵɵpipeBind3(2, 2, ctx_r6.item.data, \"value\", ctx_r6.formatForGroup(ctx_r6.item)), \" \");\n  }\n}\n\nfunction GroupHeaderComponent_td_1_ng_container_2_ng_template_3_Template(rf, ctx) {}\n\nconst _c37 = function (a0, a1) {\n  return {\n    \"k-i-caret-alt-down\": a0,\n    \"k-i-caret-alt-right\": a1\n  };\n};\n\nconst _c38 = function (a0, a1, a2, a3, a4, a5, a6, a7) {\n  return {\n    templateRef: a0,\n    group: a1,\n    aggregates: a2,\n    value: a3,\n    field: a4,\n    index: a5,\n    expanded: a6,\n    $implicit: a7\n  };\n};\n\nfunction GroupHeaderComponent_td_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 6);\n    i0.ɵɵlistener(\"click\", function GroupHeaderComponent_td_1_ng_container_2_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.toggleGroup(ctx_r8.item);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, GroupHeaderComponent_td_1_ng_container_2_ng_container_2_Template, 3, 6, \"ng-container\", 0);\n    i0.ɵɵtemplate(3, GroupHeaderComponent_td_1_ng_container_2_ng_template_3_Template, 0, 0, \"ng-template\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(5, _c37, ctx_r5.isExpanded, !ctx_r5.isExpanded));\n    i0.ɵɵattribute(\"title\", ctx_r5.groupButtonTitle)(\"aria-label\", ctx_r5.groupButtonTitle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.groupHeaderTemplate(ctx_r5.item));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction8(8, _c38, ctx_r5.groupHeaderTemplate(ctx_r5.item), ctx_r5.item.data, ctx_r5.item.data == null ? null : ctx_r5.item.data.aggregates, ctx_r5.item.data == null ? null : ctx_r5.item.data.value, ctx_r5.item.data == null ? null : ctx_r5.item.data.field, ctx_r5.item.index, ctx_r5.isExpanded, ctx_r5.item.data));\n  }\n}\n\nfunction GroupHeaderComponent_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 4);\n    i0.ɵɵelementStart(1, \"p\", 5);\n    i0.ɵɵtemplate(2, GroupHeaderComponent_td_1_ng_container_2_Template, 4, 17, \"ng-container\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"logicalRowIndex\", ctx_r1.logicalRowIndex)(\"logicalColIndex\", 0)(\"logicalSlaveCell\", ctx_r1.skipGroupDecoration)(\"groupItem\", ctx_r1.item)(\"colSpan\", ctx_r1.logicalColSpan());\n    i0.ɵɵattribute(\"colspan\", ctx_r1.groupSpan(ctx_r1.item))(\"role\", ctx_r1.ariaRole())(\"aria-expanded\", ctx_r1.isExpanded);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.skipGroupDecoration);\n  }\n}\n\nfunction GroupHeaderComponent_ng_container_2_td_1_1_ng_template_0_Template(rf, ctx) {}\n\nconst _c39 = function (a0, a1, a2, a3, a4, a5) {\n  return {\n    group: a0,\n    aggregates: a1,\n    value: a2,\n    field: a3,\n    index: a4,\n    $implicit: a5\n  };\n};\n\nfunction GroupHeaderComponent_ng_container_2_td_1_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, GroupHeaderComponent_ng_container_2_td_1_1_ng_template_0_Template, 0, 0, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    const column_r11 = i0.ɵɵnextContext().$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", column_r11.groupHeaderColumnTemplateRef)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction6(2, _c39, ctx_r13.item.data, ctx_r13.item.data == null ? null : ctx_r13.item.data.aggregates, ctx_r13.item.data == null ? null : ctx_r13.item.data.value, ctx_r13.item.data == null ? null : ctx_r13.item.data.field, ctx_r13.item.index, ctx_r13.item.data));\n  }\n}\n\nfunction GroupHeaderComponent_ng_container_2_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 9);\n    i0.ɵɵtemplate(1, GroupHeaderComponent_ng_container_2_td_1_1_Template, 1, 9, undefined, 0);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r11 = ctx.$implicit;\n    const index_r12 = ctx.index;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"logicalRowIndex\", ctx_r10.logicalRowIndex)(\"logicalColIndex\", index_r12 + 1)(\"logicalSlaveCell\", false)(\"groupItem\", ctx_r10.item)(\"colSpan\", 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", column_r11.groupHeaderColumnTemplateRef);\n  }\n}\n\nfunction GroupHeaderComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, GroupHeaderComponent_ng_container_2_td_1_Template, 2, 6, \"td\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.groupHeaderColumns);\n  }\n}\n\nconst _c40 = [\"kendoGridTableBody\", \"\"];\n\nfunction TableBodyComponent_ng_container_0_ng_container_2_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\", 8);\n  }\n}\n\nfunction TableBodyComponent_ng_container_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBodyComponent_ng_container_0_ng_container_2_td_1_Template, 1, 0, \"td\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.groups);\n  }\n}\n\nfunction TableBodyComponent_ng_container_0_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"logicalRowIndex\", ctx_r5.addRowLogicalIndex())(\"logicalColIndex\", 0);\n  }\n}\n\nfunction TableBodyComponent_ng_container_0_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\", 10);\n  }\n\n  if (rf & 2) {\n    const column_r9 = ctx.$implicit;\n    const columnIndex_r10 = ctx.index;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"left\", column_r9.sticky ? \"0\" : undefined);\n    i0.ɵɵclassProp(\"k-grid-content-sticky\", column_r9.sticky);\n    i0.ɵɵproperty(\"rowIndex\", -1)(\"columnIndex\", ctx_r6.lockedColumnsCount + columnIndex_r10)(\"isNew\", true)(\"column\", column_r9)(\"dataItem\", ctx_r6.newDataItem)(\"ngClass\", column_r9.cssClass)(\"ngStyle\", column_r9.sticky ? ctx_r6.addStickyColumnStyles(column_r9) : column_r9.style)(\"logicalRowIndex\", ctx_r6.addRowLogicalIndex())(\"logicalColIndex\", ctx_r6.logicalColIndex(column_r9))(\"colSpan\", column_r9.colspan);\n    i0.ɵɵattribute(\"colspan\", column_r9.colspan);\n  }\n}\n\nfunction TableBodyComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\", 4);\n    i0.ɵɵtemplate(2, TableBodyComponent_ng_container_0_ng_container_2_Template, 2, 1, \"ng-container\", 0);\n    i0.ɵɵtemplate(3, TableBodyComponent_ng_container_0_td_3_Template, 1, 2, \"td\", 5);\n    i0.ɵɵtemplate(4, TableBodyComponent_ng_container_0_td_4_Template, 1, 15, \"td\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"logicalRowIndex\", ctx_r0.addRowLogicalIndex())(\"logicalSlaveRow\", ctx_r0.lockedColumnsCount > 0)(\"logicalCellsCount\", ctx_r0.columns.length)(\"logicalSlaveCellsCount\", ctx_r0.unlockedColumnsCount);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.skipGroupDecoration);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.detailTemplate == null ? null : ctx_r0.detailTemplate.templateRef);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.columns)(\"ngForTrackBy\", ctx_r0.trackByColumns);\n  }\n}\n\nfunction TableBodyComponent_tr_1_2_ng_template_0_Template(rf, ctx) {}\n\nconst _c41 = function (a0) {\n  return {\n    templateRef: a0\n  };\n};\n\nfunction TableBodyComponent_tr_1_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TableBodyComponent_tr_1_2_ng_template_0_Template, 0, 0, \"ng-template\", 12);\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction1(1, _c41, ctx_r11.noRecordsTemplate == null ? null : ctx_r11.noRecordsTemplate.templateRef));\n  }\n}\n\nfunction TableBodyComponent_tr_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r12.noRecordsText, \" \");\n  }\n}\n\nfunction TableBodyComponent_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 11);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtemplate(2, TableBodyComponent_tr_1_2_Template, 1, 3, undefined, 0);\n    i0.ɵɵtemplate(3, TableBodyComponent_tr_1_ng_container_3_Template, 2, 1, \"ng-container\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r1.colSpan);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.noRecordsTemplate == null ? null : ctx_r1.noRecordsTemplate.templateRef);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r1.noRecordsTemplate == null ? null : ctx_r1.noRecordsTemplate.templateRef));\n  }\n}\n\nfunction TableBodyComponent_ng_container_2_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 17);\n  }\n\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext();\n    const item_r14 = ctx_r20.$implicit;\n    const rowIndex_r15 = ctx_r20.index;\n    const ctx_r16 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"columns\", ctx_r16.columns)(\"groups\", ctx_r16.groups)(\"item\", item_r14)(\"hasDetails\", !!(ctx_r16.detailTemplate == null ? null : ctx_r16.detailTemplate.templateRef))(\"skipGroupDecoration\", ctx_r16.skipGroupDecoration)(\"hasGroupHeaderColumn\", ctx_r16.hasGroupHeaderColumn)(\"groupHeaderColumns\", ctx_r16.groupHeaderColumns)(\"rowIndex\", rowIndex_r15 + 1)(\"totalColumnsCount\", ctx_r16.totalColumnsCount)(\"logicalRowIndex\", ctx_r16.logicalRowIndex(rowIndex_r15))(\"logicalSlaveRow\", ctx_r16.lockedColumnsCount > 0)(\"logicalCellsCount\", ctx_r16.columns.length)(\"logicalSlaveCellsCount\", ctx_r16.groupHeaderSlaveCellsCount);\n  }\n}\n\nfunction TableBodyComponent_ng_container_2_tr_2_ng_container_1_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\", 8);\n  }\n}\n\nfunction TableBodyComponent_ng_container_2_tr_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBodyComponent_ng_container_2_tr_2_ng_container_1_td_1_Template, 1, 0, \"td\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r21.groups);\n  }\n}\n\nfunction TableBodyComponent_ng_container_2_tr_2_td_2_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 23);\n    i0.ɵɵlistener(\"click\", function TableBodyComponent_ng_container_2_tr_2_td_2_a_1_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r29);\n      const item_r14 = i0.ɵɵnextContext(3).$implicit;\n      const ctx_r27 = i0.ɵɵnextContext();\n      return ctx_r27.toggleRow(item_r14.index, item_r14.data);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r14 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r26 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r26.detailButtonStyles(item_r14));\n    i0.ɵɵattribute(\"title\", ctx_r26.detailButtonTitle(item_r14))(\"aria-label\", ctx_r26.detailButtonTitle(item_r14));\n  }\n}\n\nfunction TableBodyComponent_ng_container_2_tr_2_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 21);\n    i0.ɵɵtemplate(1, TableBodyComponent_ng_container_2_tr_2_td_2_a_1_Template, 1, 3, \"a\", 22);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(2);\n    const rowIndex_r15 = ctx_r31.index;\n    const item_r14 = ctx_r31.$implicit;\n    const ctx_r22 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"logicalRowIndex\", ctx_r22.logicalRowIndex(rowIndex_r15))(\"logicalColIndex\", 0)(\"dataRowIndex\", item_r14.index)(\"dataItem\", item_r14.data)(\"detailExpandCell\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r22.detailTemplate.showIf(item_r14.data, item_r14.index));\n  }\n}\n\nfunction TableBodyComponent_ng_container_2_tr_2_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\", 24);\n  }\n\n  if (rf & 2) {\n    const column_r32 = ctx.$implicit;\n    const columnIndex_r33 = ctx.index;\n    const ctx_r34 = i0.ɵɵnextContext(2);\n    const item_r14 = ctx_r34.$implicit;\n    const rowIndex_r15 = ctx_r34.index;\n    const ctx_r23 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"k-grid-content-sticky\", column_r32.sticky)(\"k-touch-action-none\", ctx_r23.isSelectable() && ctx_r23.selectable.drag)(\"k-touch-action-auto\", !(ctx_r23.isSelectable() && ctx_r23.selectable.drag))(\"k-grid-edit-cell\", ctx_r23.isEditingCell(item_r14.index, column_r32))(\"k-selected\", ctx_r23.isSelectable && ctx_r23.cellSelectionService.isCellSelected(item_r14, column_r32));\n    i0.ɵɵproperty(\"rowIndex\", item_r14.index)(\"columnIndex\", ctx_r23.lockedColumnsCount + columnIndex_r33)(\"column\", column_r32)(\"dataItem\", item_r14.data)(\"isLoading\", ctx_r23.isLoading)(\"isVirtual\", ctx_r23.isVirtual)(\"loadingTemplate\", ctx_r23.cellLoadingTemplate)(\"logicalRowIndex\", ctx_r23.logicalRowIndex(rowIndex_r15))(\"logicalColIndex\", ctx_r23.logicalColIndex(column_r32))(\"dataRowIndex\", item_r14.index)(\"dataItem\", item_r14.data)(\"colIndex\", columnIndex_r33)(\"colSpan\", column_r32.colspan)(\"ngClass\", column_r32.cssClass)(\"ngStyle\", column_r32.sticky ? ctx_r23.addStickyColumnStyles(column_r32) : column_r32.style);\n    i0.ɵɵattribute(\"data-kendo-grid-column-index\", ctx_r23.lockedColumnsCount + columnIndex_r33)(\"aria-selected\", ctx_r23.isSelectable() ? ctx_r23.isAriaSelected(item_r14, column_r32) : undefined)(\"colspan\", column_r32.colspan);\n  }\n}\n\nconst _c42 = function (a0, a1) {\n  return {\n    dataItem: a0,\n    index: a1\n  };\n};\n\nfunction TableBodyComponent_ng_container_2_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 18);\n    i0.ɵɵtemplate(1, TableBodyComponent_ng_container_2_tr_2_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n    i0.ɵɵtemplate(2, TableBodyComponent_ng_container_2_tr_2_td_2_Template, 2, 6, \"td\", 19);\n    i0.ɵɵtemplate(3, TableBodyComponent_ng_container_2_tr_2_td_3_Template, 1, 28, \"td\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r35 = i0.ɵɵnextContext();\n    const item_r14 = ctx_r35.$implicit;\n    const rowIndex_r15 = ctx_r35.index;\n    const ctx_r17 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"k-grid-row-sticky\", ctx_r17.rowSticky ? ctx_r17.rowSticky(i0.ɵɵpureFunction2(22, _c42, item_r14.data, item_r14.index)) : false)(\"k-alt\", ctx_r17.isOdd(item_r14))(\"k-master-row\", true)(\"k-grid-edit-row\", ctx_r17.isEditingRow(item_r14.index))(\"k-selected\", ctx_r17.isSelectable() && ctx_r17.isRowSelected(item_r14));\n    i0.ɵɵproperty(\"dataRowIndex\", item_r14.index)(\"dataItem\", item_r14.data)(\"logicalRowIndex\", ctx_r17.logicalRowIndex(rowIndex_r15))(\"logicalSlaveRow\", ctx_r17.lockedColumnsCount > 0)(\"logicalCellsCount\", ctx_r17.columns.length)(\"logicalSlaveCellsCount\", ctx_r17.unlockedColumnsCount)(\"ngClass\", ctx_r17.rowClass(i0.ɵɵpureFunction2(25, _c42, item_r14.data, item_r14.index)));\n    i0.ɵɵattribute(\"data-kendo-grid-item-index\", item_r14.index);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r17.skipGroupDecoration);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r17.detailTemplate == null ? null : ctx_r17.detailTemplate.templateRef);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r17.columns)(\"ngForTrackBy\", ctx_r17.trackByColumns);\n  }\n}\n\nfunction TableBodyComponent_ng_container_2_tr_3_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\", 30);\n  }\n}\n\nfunction TableBodyComponent_ng_container_2_tr_3_ng_template_4_Template(rf, ctx) {}\n\nconst _c43 = function (a0, a1, a2) {\n  return {\n    dataItem: a0,\n    rowIndex: a1,\n    $implicit: a2\n  };\n};\n\nfunction TableBodyComponent_ng_container_2_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 25);\n    i0.ɵɵtemplate(1, TableBodyComponent_ng_container_2_tr_3_td_1_Template, 1, 0, \"td\", 26);\n    i0.ɵɵelement(2, \"td\", 27);\n    i0.ɵɵelementStart(3, \"td\", 28);\n    i0.ɵɵtemplate(4, TableBodyComponent_ng_container_2_tr_3_ng_template_4_Template, 0, 0, \"ng-template\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r39 = i0.ɵɵnextContext();\n    const item_r14 = ctx_r39.$implicit;\n    const rowIndex_r15 = ctx_r39.index;\n    const ctx_r18 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"k-alt\", ctx_r18.isOdd(item_r14));\n    i0.ɵɵproperty(\"dataRowIndex\", item_r14.index)(\"dataItem\", item_r14.data)(\"logicalRowIndex\", ctx_r18.logicalRowIndex(rowIndex_r15) + 1)(\"logicalSlaveRow\", false)(\"logicalCellsCount\", 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r18.groups);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"logicalRowIndex\", ctx_r18.logicalRowIndex(rowIndex_r15) + 1)(\"logicalColIndex\", 0)(\"dataRowIndex\", item_r14.index)(\"dataItem\", item_r14.data)(\"colIndex\", 0)(\"colSpan\", ctx_r18.allColumnsSpan + 1);\n    i0.ɵɵattribute(\"colspan\", ctx_r18.columnsSpan);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r18.detailTemplate.templateRef)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(17, _c43, item_r14.data, item_r14.index, item_r14.data));\n  }\n}\n\nfunction TableBodyComponent_ng_container_2_tr_4_ng_container_1_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\", 30);\n  }\n}\n\nfunction TableBodyComponent_ng_container_2_tr_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBodyComponent_ng_container_2_tr_4_ng_container_1_td_1_Template, 1, 0, \"td\", 26);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r40 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r40.groups);\n  }\n}\n\nfunction TableBodyComponent_ng_container_2_tr_4_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\", 9);\n  }\n\n  if (rf & 2) {\n    const rowIndex_r15 = i0.ɵɵnextContext(2).index;\n    const ctx_r41 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"logicalRowIndex\", ctx_r41.logicalRowIndex(rowIndex_r15))(\"logicalColIndex\", 0);\n  }\n}\n\nfunction TableBodyComponent_ng_container_2_tr_4_td_3_ng_template_1_Template(rf, ctx) {}\n\nconst _c44 = function (a0, a1, a2, a3, a4, a5) {\n  return {\n    templateRef: a0,\n    group: a1,\n    field: a2,\n    column: a3,\n    aggregates: a4,\n    $implicit: a5\n  };\n};\n\nfunction TableBodyComponent_ng_container_2_tr_4_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 33);\n    i0.ɵɵtemplate(1, TableBodyComponent_ng_container_2_tr_4_td_3_ng_template_1_Template, 0, 0, \"ng-template\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r46 = ctx.$implicit;\n    const ctx_r49 = i0.ɵɵnextContext(2);\n    const rowIndex_r15 = ctx_r49.index;\n    const item_r14 = ctx_r49.$implicit;\n    const ctx_r42 = i0.ɵɵnextContext();\n    let tmp_3_0;\n    i0.ɵɵproperty(\"logicalRowIndex\", ctx_r42.logicalRowIndex(rowIndex_r15))(\"logicalColIndex\", ctx_r42.logicalColIndex(column_r46));\n    i0.ɵɵattribute(\"data-skip\", ctx_r42.skipGroupDecoration);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction6(4, _c44, column_r46.groupFooterTemplateRef, item_r14.data, column_r46.field, column_r46, (tmp_3_0 = item_r14.data) == null ? null : tmp_3_0.aggregates, (tmp_3_0 = item_r14.data) == null ? null : tmp_3_0.aggregates));\n  }\n}\n\nfunction TableBodyComponent_ng_container_2_tr_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 31);\n    i0.ɵɵtemplate(1, TableBodyComponent_ng_container_2_tr_4_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n    i0.ɵɵtemplate(2, TableBodyComponent_ng_container_2_tr_4_td_2_Template, 1, 2, \"td\", 5);\n    i0.ɵɵtemplate(3, TableBodyComponent_ng_container_2_tr_4_td_3_Template, 2, 11, \"td\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const rowIndex_r15 = i0.ɵɵnextContext().index;\n    const ctx_r19 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"logicalRowIndex\", ctx_r19.logicalRowIndex(rowIndex_r15))(\"logicalSlaveRow\", ctx_r19.lockedColumnsCount > 0)(\"logicalCellsCount\", ctx_r19.columns.length)(\"logicalSlaveCellsCount\", ctx_r19.unlockedColumnsCount);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r19.skipGroupDecoration);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r19.detailTemplate == null ? null : ctx_r19.detailTemplate.templateRef);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r19.footerColumns)(\"ngForTrackBy\", ctx_r19.trackByColumns);\n  }\n}\n\nfunction TableBodyComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBodyComponent_ng_container_2_tr_1_Template, 1, 13, \"tr\", 13);\n    i0.ɵɵtemplate(2, TableBodyComponent_ng_container_2_tr_2_Template, 4, 28, \"tr\", 14);\n    i0.ɵɵtemplate(3, TableBodyComponent_ng_container_2_tr_3_Template, 5, 21, \"tr\", 15);\n    i0.ɵɵtemplate(4, TableBodyComponent_ng_container_2_tr_4_Template, 4, 8, \"tr\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r14 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isGroup(item_r14) && ctx_r2.isParentGroupExpanded(item_r14) && ctx_r2.showGroupHeader(item_r14));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isDataItem(item_r14) && (!item_r14.group || ctx_r2.isDataItemInExpandedGroup(item_r14)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isDataItem(item_r14) && (!item_r14.group || ctx_r2.isDataItemInExpandedGroup(item_r14)) && (ctx_r2.detailTemplate == null ? null : ctx_r2.detailTemplate.templateRef) && ctx_r2.detailTemplate.showIf(item_r14.data, item_r14.index) && ctx_r2.isExpanded(item_r14));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isFooter(item_r14) && item_r14.group && (ctx_r2.isFooterItemInExpandedGroup(item_r14) || ctx_r2.showGroupFooters && ctx_r2.isParentGroupExpanded(item_r14.group)) && !item_r14.data.hideFooter);\n  }\n}\n\nfunction TableBodyComponent_kendo_resize_sensor_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r52 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-resize-sensor\", 34);\n    i0.ɵɵlistener(\"resize\", function TableBodyComponent_kendo_resize_sensor_3_Template_kendo_resize_sensor_resize_0_listener() {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r51 = i0.ɵɵnextContext();\n      return ctx_r51.resizeHandler();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c45 = [\"container\"];\nconst _c46 = [\"lockedContainer\"];\nconst _c47 = [\"lockedTable\"];\nconst _c48 = [\"table\"];\n\nconst _c49 = function (a0, a1, a2, a3) {\n  return {\n    keydown: a0,\n    scroll: a1,\n    mousewheel: a2,\n    DOMMouseScroll: a3\n  };\n};\n\nfunction ListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11, 12);\n    i0.ɵɵelementStart(2, \"div\", 3);\n    i0.ɵɵelementStart(3, \"table\", 13, 14);\n    i0.ɵɵelement(5, \"colgroup\", 6);\n    i0.ɵɵelement(6, \"tbody\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"kendo-resize-sensor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 9);\n    i0.ɵɵelement(9, \"div\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"width\", ctx_r0.lockedWidth, \"px\");\n    i0.ɵɵproperty(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction4(29, _c49, ctx_r0.lockedKeydown, ctx_r0.lockedScroll, ctx_r0.lockedMousewheel, ctx_r0.lockedMousewheel))(\"scope\", ctx_r0);\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleProp(\"width\", ctx_r0.lockedWidth, \"px\");\n    i0.ɵɵproperty(\"locked\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"groups\", ctx_r0.groups)(\"columns\", ctx_r0.lockedLeafColumns)(\"detailTemplate\", ctx_r0.detailTemplate)(\"sort\", ctx_r0.sort);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"groups\", ctx_r0.groups)(\"isLocked\", true)(\"data\", ctx_r0.data)(\"noRecordsText\", \"\")(\"columns\", ctx_r0.lockedLeafColumns)(\"totalColumnsCount\", ctx_r0.leafColumns.length)(\"detailTemplate\", ctx_r0.detailTemplate)(\"showGroupFooters\", ctx_r0.showFooter)(\"skip\", ctx_r0.skip)(\"selectable\", ctx_r0.selectable)(\"trackBy\", ctx_r0.trackBy)(\"filterable\", ctx_r0.filterable)(\"rowClass\", ctx_r0.rowClass)(\"isLoading\", ctx_r0.loading)(\"isVirtual\", ctx_r0.isVirtual)(\"cellLoadingTemplate\", ctx_r0.cellLoadingTemplate);\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleProp(\"height\", ctx_r0.totalHeight, \"px\");\n  }\n}\n\nfunction ListComponent_kendo_resize_sensor_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-resize-sensor\");\n  }\n}\n\nfunction ListComponent_kendo_resize_sensor_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-resize-sensor\");\n  }\n}\n\nfunction ListComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelement(1, \"div\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"width\", ctx_r5.totalWidth, \"px\");\n  }\n}\n\nconst _c50 = function () {\n  return [];\n};\n\nconst _c51 = [\"kendoGridFooter\", \"\"];\n\nfunction FooterComponent_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\", 4);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵclassProp(\"k-group-cell\", true);\n  }\n}\n\nfunction FooterComponent_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\", 4);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵclassProp(\"k-hierarchy-cell\", true);\n  }\n}\n\nfunction FooterComponent_td_4_ng_template_1_Template(rf, ctx) {}\n\nfunction FooterComponent_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 5);\n    i0.ɵɵtemplate(1, FooterComponent_td_4_ng_template_1_Template, 0, 0, \"ng-template\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r4 = ctx.$implicit;\n    const columnIndex_r5 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"k-grid-footer-sticky\", column_r4.sticky);\n    i0.ɵɵproperty(\"logicalRowIndex\", ctx_r2.logicalRowIndex)(\"logicalColIndex\", ctx_r2.logicalColumnIndex(column_r4))(\"ngClass\", column_r4.footerClass)(\"ngStyle\", column_r4.sticky ? ctx_r2.addStickyStyles(column_r4) : column_r4.footerStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction4(7, _c31, column_r4.footerTemplateRef, ctx_r2.lockedColumnsCount + columnIndex_r5, column_r4, column_r4));\n  }\n}\n\nconst _c52 = [\"kendoGridLoading\", \"\"];\n\nfunction LoadingComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 1);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"div\", 2);\n    i0.ɵɵelement(4, \"div\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.loadingText);\n  }\n}\n\nfunction LoadingComponent_1_ng_template_0_Template(rf, ctx) {}\n\nfunction LoadingComponent_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, LoadingComponent_1_ng_template_0_Template, 0, 0, \"ng-template\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate == null ? null : ctx_r1.loadingTemplate.templateRef);\n  }\n}\n\nconst _c53 = [\"lockedHeader\"];\nconst _c54 = [\"header\"];\nconst _c55 = [\"ariaRoot\"];\nconst _c56 = [\"footer\"];\n\nfunction GridComponent_kendo_grid_toolbar_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-grid-toolbar\", 11);\n  }\n}\n\nfunction GridComponent_kendo_pager_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-pager\", 12);\n    i0.ɵɵlistener(\"pageChange\", function GridComponent_kendo_pager_3_Template_kendo_pager_pageChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.notifyPageChange(\"pager\", $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"tabindex\", ctx_r1.navigation.pagerEnabled ? \"0\" : \"-1\")(\"template\", ctx_r1.pagerTemplate)(\"pageSize\", ctx_r1.pageSize)(\"total\", ctx_r1.view.total)(\"skip\", ctx_r1.skip)(\"options\", ctx_r1.pageable);\n    i0.ɵɵattribute(\"role\", ctx_r1.navigation.pagerEnabled ? \"application\" : undefined);\n  }\n}\n\nfunction GridComponent_kendo_grid_group_panel_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-grid-group-panel\", 13);\n    i0.ɵɵlistener(\"change\", function GridComponent_kendo_grid_group_panel_4_Template_kendo_grid_group_panel_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.groupChange.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"text\", ctx_r2.groupableEmptyText)(\"groups\", ctx_r2.group);\n  }\n}\n\nfunction GridComponent_ng_container_7_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25, 26);\n    i0.ɵɵelementStart(2, \"table\", 27);\n    i0.ɵɵelement(3, \"colgroup\", 22);\n    i0.ɵɵelement(4, \"thead\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(3);\n    i0.ɵɵstyleProp(\"width\", ctx_r15.lockedWidth, \"px\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"width\", ctx_r15.lockedWidth, \"px\");\n    i0.ɵɵproperty(\"locked\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"columns\", ctx_r15.lockedLeafColumns)(\"groups\", ctx_r15.group)(\"detailTemplate\", ctx_r15.detailTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"resizable\", ctx_r15.resizable)(\"scrollable\", true)(\"columns\", ctx_r15.lockedColumns)(\"totalColumnLevels\", ctx_r15.totalColumnLevels)(\"sort\", ctx_r15.sort)(\"groups\", ctx_r15.group)(\"filter\", ctx_r15.filter)(\"filterable\", ctx_r15.filterable)(\"groupable\", ctx_r15.showGroupPanel)(\"reorderable\", ctx_r15.reorderable)(\"sortable\", ctx_r15.sortable)(\"columnMenu\", ctx_r15.columnMenuOptions)(\"columnMenuTemplate\", ctx_r15.columnMenuTemplate)(\"totalColumnsCount\", ctx_r15.leafColumns.length)(\"detailTemplate\", ctx_r15.detailTemplate)(\"tabIndex\", ctx_r15.navigation.tableEnabled ? \"-1\" : \"0\");\n  }\n}\n\nfunction GridComponent_ng_container_7_div_1_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵelement(1, \"div\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"width\", ctx_r17.columnsContainer.unlockedWidth, \"px\");\n  }\n}\n\nfunction GridComponent_ng_container_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, GridComponent_ng_container_7_div_1_div_1_Template, 5, 24, \"div\", 18);\n    i0.ɵɵelementStart(2, \"div\", 19, 20);\n    i0.ɵɵelementStart(4, \"table\", 21);\n    i0.ɵɵelement(5, \"colgroup\", 22);\n    i0.ɵɵelement(6, \"thead\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, GridComponent_ng_container_7_div_1_div_7_Template, 2, 2, \"div\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"padding\", ctx_r13.headerPadding);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.isLocked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"kendoGridResizableContainer\", ctx_r13.lockedLeafColumns.length > 0)(\"lockedWidth\", ctx_r13.lockedWidth + ctx_r13.scrollbarWidth + 2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"width\", ctx_r13.nonLockedWidth, \"px\");\n    i0.ɵɵproperty(\"virtualColumns\", ctx_r13.virtualColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"columns\", ctx_r13.headerLeafColumns)(\"groups\", ctx_r13.isLocked ? i0.ɵɵpureFunction0(29, _c50) : ctx_r13.group)(\"detailTemplate\", ctx_r13.detailTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"resizable\", ctx_r13.resizable)(\"scrollable\", true)(\"columns\", ctx_r13.headerColumns)(\"totalColumnLevels\", ctx_r13.totalColumnLevels)(\"sort\", ctx_r13.sort)(\"filter\", ctx_r13.filter)(\"filterable\", ctx_r13.filterable)(\"groupable\", ctx_r13.showGroupPanel)(\"reorderable\", ctx_r13.reorderable)(\"groups\", ctx_r13.isLocked ? i0.ɵɵpureFunction0(30, _c50) : ctx_r13.group)(\"sortable\", ctx_r13.sortable)(\"columnMenu\", ctx_r13.columnMenuOptions)(\"columnMenuTemplate\", ctx_r13.columnMenuTemplate)(\"lockedColumnsCount\", ctx_r13.lockedLeafColumns.length)(\"totalColumnsCount\", ctx_r13.leafColumns.length)(\"detailTemplate\", ctx_r13.detailTemplate)(\"tabIndex\", ctx_r13.navigation.tableEnabled ? \"-1\" : \"0\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.virtualColumns);\n  }\n}\n\nfunction GridComponent_ng_container_7_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵelementStart(1, \"table\", 27);\n    i0.ɵɵelement(2, \"colgroup\", 35);\n    i0.ɵɵelement(3, \"tfoot\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(3);\n    i0.ɵɵstyleProp(\"width\", ctx_r19.lockedWidth, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"width\", ctx_r19.lockedWidth, \"px\");\n    i0.ɵɵproperty(\"locked\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"columns\", ctx_r19.lockedLeafColumns)(\"groups\", ctx_r19.group)(\"detailTemplate\", ctx_r19.detailTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"scrollable\", true)(\"groups\", ctx_r19.group)(\"columns\", ctx_r19.lockedLeafColumns)(\"detailTemplate\", ctx_r19.detailTemplate)(\"logicalRowIndex\", ctx_r19.ariaRowCount);\n  }\n}\n\nfunction GridComponent_ng_container_7_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, GridComponent_ng_container_7_div_3_div_1_Template, 4, 13, \"div\", 31);\n    i0.ɵɵelementStart(2, \"div\", 32, 33);\n    i0.ɵɵelementStart(4, \"table\", 34);\n    i0.ɵɵelement(5, \"colgroup\", 35);\n    i0.ɵɵelement(6, \"tfoot\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"padding\", ctx_r14.headerPadding);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.lockedLeafColumns.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"kendoGridResizableContainer\", ctx_r14.lockedLeafColumns.length > 0)(\"lockedWidth\", ctx_r14.lockedWidth + ctx_r14.scrollbarWidth + 3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"width\", ctx_r14.nonLockedWidth, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"columns\", ctx_r14.nonLockedLeafColumns)(\"groups\", ctx_r14.isLocked ? i0.ɵɵpureFunction0(16, _c50) : ctx_r14.group)(\"detailTemplate\", ctx_r14.detailTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"logicalRowIndex\", ctx_r14.ariaRowCount)(\"scrollable\", true)(\"groups\", ctx_r14.isLocked ? i0.ɵɵpureFunction0(17, _c50) : ctx_r14.group)(\"columns\", ctx_r14.nonLockedLeafColumns)(\"lockedColumnsCount\", ctx_r14.lockedLeafColumns.length)(\"detailTemplate\", ctx_r14.detailTemplate);\n  }\n}\n\nfunction GridComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, GridComponent_ng_container_7_div_1_Template, 8, 31, \"div\", 14);\n    i0.ɵɵelementStart(2, \"kendo-grid-list\", 15);\n    i0.ɵɵlistener(\"pageChange\", function GridComponent_ng_container_7_Template_kendo_grid_list_pageChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.notifyPageChange(\"list\", $event);\n    })(\"scrollBottom\", function GridComponent_ng_container_7_Template_kendo_grid_list_scrollBottom_2_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.notifyScrollBottom();\n    })(\"contentScroll\", function GridComponent_ng_container_7_Template_kendo_grid_list_contentScroll_2_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.contentScroll.emit($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, GridComponent_ng_container_7_div_3_Template, 7, 18, \"div\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.hideHeader);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"data\", ctx_r4.view)(\"rowHeight\", ctx_r4.rowHeight)(\"detailRowHeight\", ctx_r4.detailRowHeight)(\"total\", ctx_r4.totalCount)(\"take\", ctx_r4.pageSize)(\"groups\", ctx_r4.group)(\"groupable\", ctx_r4.groupable)(\"skip\", ctx_r4.skip)(\"trackBy\", ctx_r4.trackBy)(\"columns\", ctx_r4.columnsContainer)(\"selectable\", ctx_r4.selectable)(\"filterable\", ctx_r4.filterable)(\"detailTemplate\", ctx_r4.detailTemplate)(\"noRecordsTemplate\", ctx_r4.noRecordsTemplate)(\"rowClass\", ctx_r4.rowClass)(\"rowSticky\", ctx_r4.rowSticky)(\"loading\", ctx_r4.loading)(\"isVirtual\", ctx_r4.isVirtual)(\"cellLoadingTemplate\", ctx_r4.cellLoadingTemplate == null ? null : ctx_r4.cellLoadingTemplate.templateRef)(\"loadingTemplate\", ctx_r4.loadingTemplate == null ? null : ctx_r4.loadingTemplate.templateRef)(\"virtualColumns\", ctx_r4.virtualColumns)(\"enableDrag\", ctx_r4.marqueeSelection)(\"sort\", ctx_r4.sort);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.showFooter);\n  }\n}\n\nfunction GridComponent_ng_container_8_thead_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"thead\", 42);\n  }\n\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"resizable\", ctx_r25.resizable)(\"scrollable\", false)(\"columns\", ctx_r25.visibleColumns)(\"totalColumnLevels\", ctx_r25.totalColumnLevels)(\"groups\", ctx_r25.group)(\"groupable\", ctx_r25.showGroupPanel)(\"reorderable\", ctx_r25.reorderable)(\"sort\", ctx_r25.sort)(\"sortable\", ctx_r25.sortable)(\"filter\", ctx_r25.filter)(\"filterable\", ctx_r25.filterable)(\"columnMenu\", ctx_r25.columnMenuOptions)(\"columnMenuTemplate\", ctx_r25.columnMenuTemplate)(\"detailTemplate\", ctx_r25.detailTemplate)(\"tabIndex\", ctx_r25.navigation.tableEnabled ? \"-1\" : \"0\");\n  }\n}\n\nfunction GridComponent_ng_container_8_tfoot_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tfoot\", 43);\n  }\n\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"scrollable\", false)(\"logicalRowIndex\", ctx_r26.ariaRowCount)(\"groups\", ctx_r26.group)(\"columns\", ctx_r26.leafColumns)(\"detailTemplate\", ctx_r26.detailTemplate);\n  }\n}\n\nfunction GridComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"table\");\n    i0.ɵɵelement(2, \"colgroup\", 35);\n    i0.ɵɵtemplate(3, GridComponent_ng_container_8_thead_3_Template, 1, 15, \"thead\", 39);\n    i0.ɵɵelement(4, \"tbody\", 40);\n    i0.ɵɵtemplate(5, GridComponent_ng_container_8_tfoot_5_Template, 1, 5, \"tfoot\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"table-layout\", ctx_r5.resizable ? \"fixed\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"columns\", ctx_r5.leafColumns)(\"groups\", ctx_r5.group)(\"detailTemplate\", ctx_r5.detailTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.hideHeader);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"isLoading\", ctx_r5.loading)(\"groups\", ctx_r5.group)(\"data\", ctx_r5.view)(\"skip\", ctx_r5.skip)(\"columns\", ctx_r5.leafColumns)(\"selectable\", ctx_r5.selectable)(\"filterable\", ctx_r5.filterable)(\"noRecordsTemplate\", ctx_r5.noRecordsTemplate)(\"detailTemplate\", ctx_r5.detailTemplate)(\"showGroupFooters\", ctx_r5.showGroupFooters)(\"trackBy\", ctx_r5.trackBy)(\"rowClass\", ctx_r5.rowClass)(\"enableDrag\", ctx_r5.marqueeSelection);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.showFooter);\n  }\n}\n\nfunction GridComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 44);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"loadingTemplate\", ctx_r6.loadingTemplate);\n  }\n}\n\nfunction GridComponent_kendo_pager_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-pager\", 45);\n    i0.ɵɵlistener(\"pageChange\", function GridComponent_kendo_pager_10_Template_kendo_pager_pageChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return ctx_r27.notifyPageChange(\"pager\", $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"tabindex\", ctx_r7.navigation.pagerEnabled ? \"0\" : \"-1\")(\"template\", ctx_r7.pagerTemplate)(\"pageSize\", ctx_r7.pageSize)(\"total\", ctx_r7.view.total)(\"skip\", ctx_r7.skip)(\"options\", ctx_r7.pageable);\n    i0.ɵɵattribute(\"role\", ctx_r7.navigation.pagerEnabled ? \"application\" : undefined);\n  }\n}\n\nfunction GridComponent_kendo_grid_toolbar_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-grid-toolbar\", 46);\n  }\n}\n\nfunction ColumnChooserComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"kendo-grid-columnlist\", 5);\n    i0.ɵɵlistener(\"apply\", function ColumnChooserComponent_ng_template_3_Template_kendo_grid_columnlist_apply_2_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.onApply($event);\n    })(\"columnChange\", function ColumnChooserComponent_ng_template_3_Template_kendo_grid_columnlist_columnChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.localization.get(\"columns\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"columns\", ctx_r2.columns)(\"applyText\", ctx_r2.localization.get(\"columnsApply\"))(\"resetText\", ctx_r2.localization.get(\"columnsReset\"))(\"autoSync\", ctx_r2.autoSync)(\"allowHideAll\", ctx_r2.allowHideAll);\n  }\n}\n\nconst EMPTY_REGEX = /^\\s*$/;\n/**\n * @hidden\n */\n\nconst isPresent = value => value !== null && value !== undefined;\n/**\n * @hidden\n */\n\n\nconst isBlank = value => value === null || value === undefined;\n/**\n * @hidden\n */\n\n\nconst isArray = value => Array.isArray(value);\n/**\n * @hidden\n */\n\n\nconst isTruthy = value => !!value;\n/**\n * @hidden\n */\n\n\nconst isNullOrEmptyString = value => isBlank(value) || EMPTY_REGEX.test(value);\n/**\n * @hidden\n */\n\n\nconst observe = list => merge(of(list), list.changes);\n/**\n * @hidden\n */\n\n\nconst isUniversal = () => typeof document === 'undefined';\n/**\n * @hidden\n */\n\n\nconst isString = value => typeof value === 'string';\n/**\n * @hidden\n */\n\n\nconst isNumber = value => typeof value === \"number\" && !isNaN(value);\n/**\n * @hidden\n */\n\n\nconst extractFormat = format => {\n  if (isString(format) && !isNullOrEmptyString(format) && format.startsWith('{0:')) {\n    return format.slice(3, format.length - 1);\n  }\n\n  return format;\n};\n/**\n * @hidden\n */\n\n\nconst not = fn => (...args) => !fn.apply(null, args);\n/**\n * @hidden\n */\n\n\nconst or = (...conditions) => value => conditions.reduce((acc, x) => acc || x(value), false);\n/**\n * @hidden\n */\n\n\nconst and = (...conditions) => value => conditions.reduce((acc, x) => acc && x(value), true);\n/**\n * @hidden\n */\n\n\nconst Skip = new InjectionToken(\"Skip\");\n/**\n * @hidden\n */\n\nconst createPromise = () => {\n  let resolveFn, rejectFn;\n  const promise = new Promise((resolve, reject) => {\n    resolveFn = data => {\n      resolve(data);\n      return promise;\n    };\n\n    rejectFn = data => {\n      reject(data);\n      return promise;\n    };\n  });\n  promise.resolve = resolveFn;\n  promise.reject = rejectFn;\n  return promise;\n};\n/** @hidden */\n\n\nconst iterator = getIterator$1(); // TODO: Move to kendo-common\n\nfunction getIterator$1() {\n  if (typeof Symbol === 'function' && Symbol.iterator) {\n    return Symbol.iterator;\n  }\n\n  const keys = Object.getOwnPropertyNames(Map.prototype);\n  const proto = Map.prototype;\n\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n\n    if (key !== 'entries' && key !== 'size' && proto[key] === proto.entries) {\n      return key;\n    }\n  }\n}\n\nconst FRAME_DURATION = 1000 / 60;\nconst wnd = typeof window !== 'undefined' ? window : {};\n/** @hidden */\n\nconst requestAnimationFrame = wnd.requestAnimationFrame || wnd.msRequestAnimationFrame || (callback => setTimeout(callback, FRAME_DURATION));\n/** @hidden */\n\n\nconst cancelAnimationFrame = wnd.cancelAnimationFrame || wnd.msCancelRequestAnimationFrame || clearTimeout;\n/**\n * @hidden\n */\n\nconst detectIE = () => {\n  if (!isDocumentAvailable()) {\n    return;\n  }\n\n  const ua = window.navigator.userAgent;\n  const msie = ua.indexOf('MSIE ');\n  const trident = ua.indexOf('Trident/');\n  return msie > 0 || trident > 0;\n};\n/**\n * @hidden\n */\n\n\nconst nodesToArray = nodes => [].slice.call(nodes);\n/**\n * @hidden\n */\n\n\nconst replaceMessagePlaceholder = (message, name, value) => message.replace(new RegExp(`\\{\\\\s*${name}\\\\s*\\}`, 'g'), value);\n/**\n * Represents the Kendo UI GridSpacer component for Angular.\n * Used to give additional white space between the Pager inner elements,\n * and provides a way for customizing the spacer width.\n * It can also be used in any flex container within the Grid.\n */\n\n\nclass GridSpacerComponent {\n  constructor() {\n    this.hostClass = true;\n  }\n\n  get sizedClass() {\n    return isPresent(this.width);\n  }\n\n  get flexBasisStyle() {\n    return this.width;\n  }\n\n}\n\nGridSpacerComponent.ɵfac = function GridSpacerComponent_Factory(t) {\n  return new (t || GridSpacerComponent)();\n};\n\nGridSpacerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GridSpacerComponent,\n  selectors: [[\"kendo-grid-spacer\"], [\"kendo-pager-spacer\"]],\n  hostVars: 6,\n  hostBindings: function GridSpacerComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"flex-basis\", ctx.flexBasisStyle);\n      i0.ɵɵclassProp(\"k-spacer\", ctx.hostClass)(\"k-spacer-sized\", ctx.sizedClass);\n    }\n  },\n  inputs: {\n    width: \"width\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function GridSpacerComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridSpacerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-spacer, kendo-pager-spacer',\n      template: ``\n    }]\n  }], null, {\n    hostClass: [{\n      type: HostBinding,\n      args: ['class.k-spacer']\n    }],\n    sizedClass: [{\n      type: HostBinding,\n      args: ['class.k-spacer-sized']\n    }],\n    flexBasisStyle: [{\n      type: HostBinding,\n      args: ['style.flexBasis']\n    }],\n    width: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass DomEventsService {\n  constructor() {\n    this.cellClick = new EventEmitter();\n    this.cellMousedown = new EventEmitter();\n    this.cellMouseup = new EventEmitter();\n    this.click = new EventEmitter();\n    this.keydown = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.focusIn = new EventEmitter();\n    this.focusOut = new EventEmitter();\n    this.windowBlur = new EventEmitter();\n  }\n\n}\n\nDomEventsService.ɵfac = function DomEventsService_Factory(t) {\n  return new (t || DomEventsService)();\n};\n\nDomEventsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DomEventsService,\n  factory: DomEventsService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomEventsService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nclass LocalDataChangesService {\n  constructor() {\n    this.changes = new EventEmitter();\n  }\n\n}\n\nLocalDataChangesService.ɵfac = function LocalDataChangesService_Factory(t) {\n  return new (t || LocalDataChangesService)();\n};\n\nLocalDataChangesService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: LocalDataChangesService,\n  factory: LocalDataChangesService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LocalDataChangesService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nclass GridFocusableElement {\n  constructor(navigationService) {\n    this.navigationService = navigationService;\n  }\n\n  focus() {\n    this.navigationService.focusCell();\n  }\n\n  toggle(active) {\n    this.navigationService.toggle(active);\n  }\n\n  canFocus() {\n    return true;\n  }\n\n  hasFocus() {\n    return this.navigationService.hasFocus();\n  }\n\n  isNavigable() {\n    return false;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass NavigationCursor {\n  constructor(model) {\n    this.model = model;\n    this.changes = new Subject();\n    this.activeRow = 0;\n    this.activeCol = 0;\n    this.virtualCol = 0;\n    this.virtualRow = 0;\n  }\n\n  get row() {\n    return this.model.findRow(this.activeRow);\n  }\n\n  get cell() {\n    const row = this.row;\n\n    if (row) {\n      return this.model.findCell(this.activeCol, row);\n    }\n  }\n\n  get dataRowIndex() {\n    const row = this.row;\n\n    if (row) {\n      return row.dataRowIndex;\n    }\n\n    return -1;\n  }\n  /**\n   * Assumes and announces a new cursor position.\n   */\n\n\n  reset(rowIndex = this.activeRow, colIndex = this.activeCol, force = true) {\n    if (this.activate(rowIndex, colIndex, force)) {\n      this.virtualRow = rowIndex;\n      this.virtualCol = colIndex;\n    }\n  }\n\n  activate(rowIndex, colIndex, force) {\n    if (!force && this.isActiveRange(rowIndex, colIndex)) {\n      return false;\n    }\n\n    const prevColIndex = this.activeCol;\n    const prevRowIndex = this.activeRow;\n    this.activeCol = colIndex;\n    this.activeRow = rowIndex;\n    this.changes.next({\n      colIndex,\n      prevColIndex,\n      prevRowIndex,\n      rowIndex\n    });\n    return true;\n  }\n\n  isActiveRange(rowIndex, colIndex) {\n    if (this.activeRow !== rowIndex) {\n      return false;\n    }\n\n    const cell = this.cell;\n    const {\n      start,\n      end\n    } = this.model.cellRange(cell);\n    return !Boolean(cell) || start <= colIndex && colIndex <= end;\n  }\n  /**\n   * Assumes a new cursor position without announcing it.\n   */\n\n\n  assume(rowIndex = this.activeRow, colIndex = this.activeCol) {\n    this.virtualRow = rowIndex;\n    this.virtualCol = colIndex;\n    this.activeCol = colIndex;\n    this.activeRow = rowIndex;\n  }\n  /**\n   * Announces a current cursor position to subscribers.\n   */\n\n\n  announce() {\n    this.changes.next({\n      colIndex: this.activeCol,\n      prevColIndex: this.activeCol,\n      prevRowIndex: this.activeRow,\n      rowIndex: this.activeRow\n    });\n  }\n\n  activateVirtualCell(cell) {\n    const rowRange = this.model.rowRange(cell);\n    const cellRange = this.model.cellRange(cell);\n    const activeCol = this.activeCol;\n    const activeRow = this.activeRow;\n\n    if (rowRange.start <= activeRow && activeRow <= rowRange.end && cellRange.start <= activeCol && activeCol <= cellRange.end) {\n      this.activeRow = cell.rowIndex;\n      this.activeCol = cell.colIndex;\n      return true;\n    }\n  }\n\n  isActive(rowIndex, colIndex) {\n    return this.activeCol === colIndex && this.activeRow === rowIndex;\n  }\n\n  moveUp(offset = 1) {\n    return this.offsetRow(-offset);\n  }\n\n  moveDown(offset = 1) {\n    return this.offsetRow(offset);\n  }\n\n  moveLeft(offset = 1) {\n    return this.offsetCol(-offset);\n  }\n\n  moveRight(offset = 1) {\n    return this.offsetCol(offset);\n  }\n\n  lastCellIndex(row) {\n    return this.metadata.columns.leafColumnsToRender.length - 1 + (this.metadata.hasDetailTemplate && (!row || !row.groupItem) ? 1 : 0);\n  }\n\n  offsetCol(offset) {\n    const prevRow = this.model.findRow(this.virtualRow);\n    const lastIndex = this.lastCellIndex(prevRow);\n    const virtualCol = this.virtualCol;\n    this.virtualCol = Math.max(0, Math.min(virtualCol + offset, lastIndex));\n    let nextColIndex = this.virtualCol;\n    let nextRowIndex = this.virtualRow;\n    let cell = this.model.findCell(this.virtualCol, prevRow);\n\n    if (!cell && this.metadata.virtualColumns) {\n      return this.activate(nextRowIndex, nextColIndex);\n    }\n\n    if (cell.colSpan > 1 && cell.colIndex <= virtualCol && virtualCol < cell.colIndex + cell.colSpan) {\n      nextColIndex = offset > 0 ? Math.min(cell.colIndex + cell.colSpan, lastIndex) : Math.max(0, cell.colIndex + offset);\n      const nextCell = this.model.findCell(nextColIndex, prevRow);\n\n      if (cell !== nextCell) {\n        cell = nextCell;\n        this.virtualCol = cell.colIndex;\n      } else {\n        this.virtualCol = virtualCol;\n      }\n    }\n\n    return this.activate(cell.rowIndex, cell.colIndex);\n  }\n\n  offsetRow(offset) {\n    let nextColIndex = this.virtualCol;\n\n    if (this.metadata && this.metadata.isVirtual) {\n      const maxIndex = this.metadata.maxLogicalRowIndex;\n      let nextIndex = Math.max(0, Math.min(this.activeRow + offset, maxIndex));\n\n      if (this.metadata.hasDetailTemplate && !this.model.findRow(nextIndex)) {\n        nextIndex = offset > 0 ? nextIndex + 1 : nextIndex - 1;\n        nextIndex = Math.max(0, Math.min(nextIndex, maxIndex));\n      }\n\n      if (this.metadata.hasDetailTemplate && nextIndex === maxIndex) {\n        if (this.model.lastRow.index !== maxIndex) {\n          // Don't attempt to navigate past the last collapsed row.\n          nextIndex--;\n        }\n      }\n\n      const nextRow = this.model.findRow(nextIndex);\n\n      if (nextRow) {\n        // remove duplication\n        let cell = this.model.findCell(this.virtualCol, nextRow);\n\n        if (cell.rowIndex <= this.virtualRow && offset > 0 && cell.rowSpan > 1) {\n          cell = this.model.findCell(this.virtualCol, this.model.findRow(cell.rowIndex + cell.rowSpan - 1 + offset));\n        }\n\n        nextIndex = cell.rowIndex;\n        nextColIndex = cell.colIndex;\n      }\n\n      this.virtualRow = nextIndex;\n      return this.activate(nextIndex, nextColIndex);\n    }\n\n    const nextRow = this.model.findRow(this.virtualRow + offset) || this.model.nextRow(this.virtualRow, offset);\n\n    if (!nextRow) {\n      return false;\n    }\n\n    let cell = this.model.findCell(this.virtualCol, nextRow);\n\n    if (cell && cell.rowIndex <= this.virtualRow && offset > 0 && cell.rowSpan > 1) {\n      // spanned cell go to next\n      const nextPos = cell.rowIndex + cell.rowSpan - 1 + offset;\n      cell = this.model.findCell(this.virtualCol, this.model.findRow(nextPos));\n    }\n\n    if (!cell && this.metadata.virtualColumns) {\n      return this.activate(this.virtualRow + offset, this.virtualCol);\n    }\n\n    this.virtualRow = cell.rowIndex;\n    return this.activate(this.virtualRow, cell.colIndex);\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass ItemMap {\n  constructor() {\n    this.count = 0;\n    this.items = {};\n  }\n\n  get first() {\n    if (this.count > 0) {\n      let result;\n      this.forEach(item => {\n        result = item;\n        return true;\n      });\n      return result;\n    }\n  }\n\n  get last() {\n    if (this.count > 0) {\n      const keys = Object.keys(this.items);\n      return this.items[keys[keys.length - 1]];\n    }\n  }\n\n  removeItem(key) {\n    if (this.items[key]) {\n      delete this.items[key];\n      this.count--;\n    }\n  }\n\n  setItem(key, item) {\n    if (!this.items[key]) {\n      this.count++;\n    }\n\n    this.items[key] = item;\n  }\n\n  getItem(key) {\n    return this.items[key];\n  }\n\n  toArray() {\n    const result = [];\n    this.forEach(item => {\n      result.push(item);\n    });\n    return result;\n  }\n\n  forEach(callback) {\n    for (let key in this.items) {\n      if (this.items.hasOwnProperty(key) && callback(this.items[key])) {\n        return this.items[key];\n      }\n    }\n  }\n\n  find(callback) {\n    return this.forEach(callback);\n  }\n\n}\n/**\n * @hidden\n *\n * Contains information for the currently rendered rows and cells.\n */\n\n\nclass NavigationModel {\n  constructor() {\n    this.rows = new ItemMap();\n  }\n\n  get firstRow() {\n    return this.rows.first;\n  }\n\n  get lastRow() {\n    return this.rows.last;\n  }\n\n  registerCell(cell) {\n    const row = this.rows.getItem(cell.logicalRowIndex);\n\n    if (!row) {\n      return;\n    }\n\n    const colIndex = cell.logicalColIndex;\n    const modelCell = {\n      uid: cell.uid,\n      colIndex,\n      rowIndex: row.index,\n      colSpan: cell.colSpan,\n      rowSpan: cell.rowSpan,\n      detailExpandCell: cell.detailExpandCell,\n      dataItem: row.dataItem,\n      dataRowIndex: row.dataRowIndex,\n      focusGroup: cell.focusGroup\n    };\n    row.cells.setItem(colIndex, modelCell);\n\n    if (cell.groupItem) {\n      row.groupItem = cell.groupItem;\n    }\n\n    return modelCell;\n  }\n\n  unregisterCell(index, rowIndex, cell) {\n    const row = this.rows.getItem(rowIndex);\n\n    if (row) {\n      const match = row.cells.getItem(index);\n\n      if (match && match.uid === cell.uid) {\n        row.cells.removeItem(index);\n      }\n    }\n  }\n\n  registerRow(row) {\n    const modelRow = {\n      uid: row.uid,\n      index: row.logicalRowIndex,\n      dataItem: row.dataItem,\n      dataRowIndex: row.dataRowIndex,\n      cells: new ItemMap()\n    };\n    this.rows.setItem(row.logicalRowIndex, modelRow);\n  }\n\n  updateRow(row) {\n    const current = this.rows.getItem(row.logicalRowIndex);\n\n    if (current) {\n      Object.assign(current, {\n        dataItem: row.dataItem,\n        dataRowIndex: row.dataRowIndex\n      });\n    }\n  }\n\n  unregisterRow(index, row) {\n    const match = this.rows.getItem(index);\n\n    if (match && match.uid === row.uid) {\n      this.rows.removeItem(index);\n    }\n  }\n\n  cellRange(cell) {\n    if (cell) {\n      const start = cell.colIndex;\n      const end = cell.colIndex + (cell.colSpan || 1) - 1;\n      return {\n        start,\n        end\n      };\n    }\n\n    return {};\n  }\n\n  rowRange(cell) {\n    if (cell) {\n      const start = cell.rowIndex;\n      const end = cell.rowIndex + (cell.rowSpan || 1) - 1;\n      return {\n        start,\n        end\n      };\n    }\n\n    return {};\n  }\n\n  nextRow(rowIndex, offset) {\n    const rows = this.rows.toArray();\n    const row = this.rows.getItem(rowIndex);\n    const position = rows.indexOf(row);\n    const next = rows[position + offset];\n    return next;\n  }\n\n  findRow(index) {\n    return this.rows.getItem(index);\n  }\n\n  findCell(index, row) {\n    if (!row) {\n      return;\n    }\n\n    const rowIndex = row.index;\n    let cell = row.cells.getItem(index);\n    let currentIndex = rowIndex;\n\n    while (!cell && row) {\n      row = this.rows.getItem(currentIndex);\n      cell = this.rowCell(index, row);\n      currentIndex--;\n    }\n\n    if (cell && rowIndex <= row.index + (cell.rowSpan || 1) - 1) {\n      return cell;\n    }\n  }\n\n  rowCell(index, row) {\n    if (!row || !row.cells.count) {\n      return;\n    }\n\n    const firstCell = row.cells.first;\n    let cell,\n        currentIndex = index;\n\n    while (!cell && currentIndex >= firstCell.colIndex) {\n      cell = row.cells.getItem(currentIndex);\n      currentIndex--;\n    }\n\n    if (cell && index <= cell.colIndex + (cell.colSpan || 1) - 1) {\n      return cell;\n    }\n  }\n\n}\n\nconst focusableRegex = /^(?:a|input|select|option|textarea|button|object)$/i;\nconst NODE_NAME_PREDICATES = {};\n\nconst toClassList = classNames => String(classNames).trim().split(' ');\n/**\n * @hidden\n */\n\n\nconst hasClasses = (element, classNames) => {\n  const namesList = toClassList(classNames);\n  return Boolean(toClassList(element.className).find(className => namesList.indexOf(className) >= 0));\n};\n/**\n * @hidden\n */\n\n\nconst matchesClasses = classNames => element => hasClasses(element, classNames);\n/**\n * @hidden\n */\n\n\nconst matchesNodeName = nodeName => {\n  if (!NODE_NAME_PREDICATES[nodeName]) {\n    NODE_NAME_PREDICATES[nodeName] = element => String(element.nodeName).toLowerCase() === nodeName.toLowerCase();\n  }\n\n  return NODE_NAME_PREDICATES[nodeName];\n};\n/**\n * @hidden\n */\n\n\nconst closest = (node, predicate) => {\n  while (node && !predicate(node)) {\n    node = node.parentNode;\n  }\n\n  return node;\n};\n/**\n * @hidden\n */\n\n\nconst closestInScope = (node, predicate, scope) => {\n  while (node && node !== scope && !predicate(node)) {\n    node = node.parentNode;\n  }\n\n  if (node !== scope) {\n    return node;\n  }\n};\n/**\n * @hidden\n */\n\n\nconst contains$2 = (parent, node, matchSelf = false) => {\n  const outside = !closest(node, child => child === parent);\n\n  if (outside) {\n    return false;\n  }\n\n  const el = closest(node, child => child === node);\n  return el && (matchSelf || el !== parent);\n};\n/**\n * @hidden\n */\n\n\nconst isVisible = element => {\n  const rect = element.getBoundingClientRect();\n  const hasSize = rect.width > 0 && rect.height > 0;\n  const hasPosition = rect.x !== 0 && rect.y !== 0; // Elements can have zero size due to styling, but they will still count as visible.\n  // For example, the selection checkbox has no size, but is made visible through styling.\n\n  return (hasSize || hasPosition) && window.getComputedStyle(element).visibility !== 'hidden';\n};\n/**\n * @hidden\n */\n\n\nconst isFocusable = element => {\n  if (!element.tagName) {\n    return false;\n  }\n\n  const tagName = element.tagName.toLowerCase();\n  const hasTabIndex = Boolean(element.getAttribute('tabIndex'));\n  const focusable = !element.disabled && focusableRegex.test(tagName);\n  return focusable || hasTabIndex;\n};\n/**\n * @hidden\n */\n\n\nconst isFocusableWithTabKey = (element, checkVisibility = true) => {\n  if (!isFocusable(element)) {\n    return false;\n  }\n\n  const visible = !checkVisibility || isVisible(element);\n  const ariaHidden = element.getAttribute('aria-hidden') === 'true';\n  const tabIndex = element.getAttribute('tabIndex');\n  return visible && !ariaHidden && tabIndex !== '-1';\n};\n/**\n * @hidden\n */\n\n\nconst findElement = (node, predicate, matchSelf = true) => {\n  if (!node) {\n    return;\n  }\n\n  if (matchSelf && predicate(node)) {\n    return node;\n  }\n\n  node = node.firstChild;\n\n  while (node) {\n    if (node.nodeType === 1) {\n      const element = findElement(node, predicate);\n\n      if (element) {\n        return element;\n      }\n    }\n\n    node = node.nextSibling;\n  }\n};\n/**\n * @hidden\n */\n\n\nconst findLastElement = (node, predicate, matchSelf = true) => {\n  let last = null;\n  findElement(node, node => {\n    if (predicate(node)) {\n      last = node;\n    }\n\n    return false;\n  }, matchSelf);\n  return last;\n};\n/**\n * @hidden\n */\n\n\nconst findFocusable = (element, checkVisibility = true) => {\n  return findElement(element, node => isFocusableWithTabKey(node, checkVisibility));\n};\n/**\n * @hidden\n */\n\n\nconst findFocusableChild = (element, checkVisibility = true) => {\n  return findElement(element, node => isFocusableWithTabKey(node, checkVisibility), false);\n};\n/**\n * @hidden\n */\n\n\nconst findLastFocusableChild = (element, checkVisibility = true) => {\n  return findLastElement(element, node => isFocusableWithTabKey(node, checkVisibility), false);\n};\n/**\n * @hidden\n */\n\n\nfunction rtlScrollPosition(position, element, initial) {\n  let result = position;\n\n  if (initial < 0) {\n    result = -position;\n  } else if (initial > 0) {\n    result = element.scrollWidth - element.offsetWidth - position;\n  }\n\n  return result;\n}\n/**\n * @hidden\n */\n\n\nclass PagerContextService {\n  constructor() {\n    this.changes = new Subject();\n    this.pageChange = new Subject();\n  }\n\n  get currentPage() {\n    return this.skip / this.pageSize;\n  }\n\n  notifyChanges(changes) {\n    this.total = changes.total;\n    this.pageSize = changes.pageSize;\n    this.skip = changes.skip;\n    this.changes.next(changes);\n  }\n\n  changePage(page) {\n    this.pageChange.next({\n      skip: page * this.pageSize,\n      take: this.pageSize\n    });\n  }\n\n  changePageSize(value) {\n    this.pageChange.next({\n      skip: 0,\n      take: value\n    });\n  }\n\n  nextPage() {\n    const nextPage = this.currentPage + 1;\n\n    if (nextPage * this.pageSize < this.total) {\n      this.changePage(nextPage);\n    }\n  }\n\n  prevPage() {\n    const prevPage = this.currentPage - 1;\n\n    if (prevPage * this.pageSize >= 0) {\n      this.changePage(prevPage);\n    }\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass ScrollRequestService {\n  constructor() {\n    this.requests = new Subject();\n  }\n\n  scrollTo(request) {\n    this.requests.next(request);\n  }\n\n}\n\nScrollRequestService.ɵfac = function ScrollRequestService_Factory(t) {\n  return new (t || ScrollRequestService)();\n};\n\nScrollRequestService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ScrollRequestService,\n  factory: ScrollRequestService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollRequestService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nconst getGroupRowArgs = groupItem => {\n  if (!isPresent(groupItem)) {\n    return null;\n  }\n\n  return {\n    group: groupItem.data,\n    groupIndex: groupItem.index,\n    parentGroup: getGroupRowArgs(groupItem.parentGroup)\n  };\n};\n\nconst isChildIndex = (targetIndex, parentIndex) => parentIndex !== targetIndex && targetIndex.startsWith(parentIndex);\n/**\n * @hidden\n */\n\n\nclass GroupsService {\n  constructor() {\n    this.changes = new Subject();\n    this.rowState = new Set();\n  }\n\n  reset() {\n    this.rowState.clear();\n  }\n\n  ngOnDestroy() {\n    this.reset();\n  }\n\n  isExpanded(groupArgs) {\n    if (this.userCallback) {\n      return this.userCallback(groupArgs);\n    }\n\n    return !this.rowState.has(groupArgs.groupIndex);\n  }\n\n  isInExpandedGroup(groupItem) {\n    let expanded = true;\n\n    while (groupItem && expanded) {\n      expanded = this.isExpanded({\n        group: groupItem.data,\n        groupIndex: groupItem.index,\n        parentGroup: getGroupRowArgs(groupItem.parentGroup)\n      });\n      groupItem = groupItem.parentGroup;\n    }\n\n    return expanded;\n  }\n\n  toggleRow(groupItem) {\n    const parentGroup = getGroupRowArgs(groupItem.parentGroup);\n    const expand = !this.isExpanded({\n      group: groupItem.data,\n      groupIndex: groupItem.index,\n      parentGroup\n    });\n    this.changes.next({\n      group: groupItem.data,\n      expand,\n      groupIndex: groupItem.index,\n      parentGroup\n    }); // if usercallback is given, the rowState should be ignored\n\n    if (this.userCallback) {\n      return;\n    }\n\n    if (expand) {\n      this.rowState.delete(groupItem.index);\n    } else {\n      this.rowState.add(groupItem.index);\n    }\n  }\n\n  expandChildren(parentIndex) {\n    this.rowState.forEach(index => isChildIndex(index, parentIndex) && this.rowState.delete(index));\n  }\n\n}\n\nGroupsService.ɵfac = function GroupsService_Factory(t) {\n  return new (t || GroupsService)();\n};\n\nGroupsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: GroupsService,\n  factory: GroupsService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GroupsService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nclass PreventableEvent {\n  constructor() {\n    this.prevented = false;\n  }\n  /**\n   * Prevents the default action for a specified event.\n   * In this way, the source component suppresses\n   * the built-in behavior that follows the event.\n   */\n\n\n  preventDefault() {\n    this.prevented = true;\n  }\n  /**\n   * Returns `true` if the event was prevented\n   * by any of its subscribers.\n   *\n   * @returns `true` if the default action was prevented.\n   * Otherwise, returns `false`.\n   */\n\n\n  isDefaultPrevented() {\n    return this.prevented;\n  }\n\n}\n/**\n * Arguments for the `detailCollapse` event.\n */\n\n\nclass DetailCollapseEvent extends PreventableEvent {\n  constructor(args) {\n    super();\n    Object.assign(this, args);\n  }\n\n}\n/**\n * Arguments for the `detailExpand` event.\n */\n\n\nclass DetailExpandEvent extends PreventableEvent {\n  constructor(args) {\n    super();\n    Object.assign(this, args);\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass DetailsService {\n  constructor() {\n    this.changes = new Subject();\n    this.rowState = new Set();\n  }\n\n  ngOnDestroy() {\n    this.rowState.clear();\n  }\n\n  isExpanded(index, dataItem) {\n    if (this.userCallback) {\n      return this.userCallback({\n        index,\n        dataItem\n      });\n    }\n\n    return this.rowState.has(index);\n  }\n\n  toggleRow(index, dataItem) {\n    if (this.isExpanded(index, dataItem)) {\n      this.collapseRow(index, dataItem);\n    } else {\n      this.expandRow(index, dataItem);\n    }\n  }\n\n  expandRow(index, dataItem) {\n    const prevented = this.emitEvent({\n      dataItem,\n      index,\n      expand: true\n    });\n\n    if (!prevented && !this.userCallback) {\n      this.rowState.add(index);\n    }\n  }\n\n  collapseRow(index, dataItem) {\n    const prevented = this.emitEvent({\n      dataItem,\n      index,\n      expand: false\n    });\n\n    if (!prevented && !this.userCallback) {\n      this.rowState.delete(index);\n    }\n  }\n\n  emitEvent(args) {\n    const eventArg = new (args.expand ? DetailExpandEvent : DetailCollapseEvent)(args);\n    this.changes.next(eventArg);\n    return eventArg.isDefaultPrevented();\n  }\n\n}\n\nDetailsService.ɵfac = function DetailsService_Factory(t) {\n  return new (t || DetailsService)();\n};\n\nDetailsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DetailsService,\n  factory: DetailsService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DetailsService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nconst FOCUS_ROOT_ACTIVE = new InjectionToken('focus-root-initial-active-state');\n/**\n * @hidden\n */\n\nclass FocusRoot {\n  constructor(active = false) {\n    this.active = active;\n    this.groups = new Set();\n  }\n\n  registerGroup(group) {\n    if (this.active) {\n      this.groups.add(group);\n    }\n  }\n\n  unregisterGroup(group) {\n    if (this.active) {\n      this.groups.delete(group);\n    }\n  }\n\n  activate() {\n    if (this.active) {\n      this.groups.forEach(f => f.activate());\n    }\n  }\n\n  deactivate() {\n    if (this.active) {\n      this.groups.forEach(f => f.deactivate());\n    }\n  }\n\n}\n\nFocusRoot.ɵfac = function FocusRoot_Factory(t) {\n  return new (t || FocusRoot)(i0.ɵɵinject(FOCUS_ROOT_ACTIVE, 8));\n};\n\nFocusRoot.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: FocusRoot,\n  factory: FocusRoot.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FocusRoot, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [FOCUS_ROOT_ACTIVE]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Arguments for the `cellClose` event.\n */\n\n\nclass CellCloseEvent extends PreventableEvent {\n  constructor(options) {\n    super();\n    /**\n     * @hidden\n     */\n\n    this.action = 'cellClose';\n    Object.assign(this, options);\n  }\n\n}\n/**\n * @hidden\n */\n\n\nconst isEqual = index => item => item.index === index;\n/**\n * @hidden\n */\n\n\nconst isNotEqual = index => item => item.index !== index;\n/**\n * @hidden\n */\n\n\nconst isNewRow = index => index === -1 || index === undefined;\n/**\n * @hidden\n */\n\n\nclass EditService {\n  constructor(ngZone) {\n    this.ngZone = ngZone;\n    this.changes = new EventEmitter();\n    this.editedIndices = [];\n    this.keepEditCell = false;\n    this.closingCell = false;\n    this.changedSource = new Subject();\n    this.changed = this.changedSource.asObservable().pipe(switchMap(() => this.ngZone.onStable.asObservable().pipe(take(1))));\n  }\n\n  editRow(index, group = undefined) {\n    this.editedIndices.push({\n      index,\n      group\n    });\n    this.onChanged();\n  }\n\n  addRow(group) {\n    this.newItemGroup = {\n      group\n    };\n    this.onChanged();\n  }\n\n  editCell(rowIndex, column, group) {\n    if (isNewRow(rowIndex) || column.editable === false || !(column.editTemplate || column.field)) {\n      return;\n    }\n\n    this.preventCellClose();\n\n    if (!this.closeCell()) {\n      this.editRow(rowIndex, group);\n      this.column = column;\n      this.onChanged();\n    }\n  }\n\n  isEditing() {\n    return this.editedIndices.length > 0;\n  }\n\n  isEditingCell() {\n    return this.isEditing() && this.column !== undefined;\n  }\n\n  get hasNewItem() {\n    return isPresent(this.newItemGroup);\n  }\n\n  get newDataItem() {\n    if (this.hasNewItem) {\n      return this.newItemGroup.group.value;\n    }\n\n    return {};\n  }\n\n  close(index) {\n    if (isNewRow(index)) {\n      this.newItemGroup = undefined;\n      return;\n    }\n\n    this.editedIndices = this.editedIndices.filter(isNotEqual(index));\n    delete this.column;\n    this.onChanged();\n  }\n\n  closeCell(originalEvent) {\n    if (this.column && !this.closingCell) {\n      return this.ngZone.run(() => {\n        const {\n          index,\n          group\n        } = this.editedIndices[0];\n        const args = new CellCloseEvent({\n          column: this.column,\n          formGroup: group,\n          originalEvent: originalEvent,\n          rowIndex: index\n        });\n        this.closingCell = true;\n        this.changes.emit(args);\n        this.closingCell = false;\n\n        if (!args.isDefaultPrevented()) {\n          this.cancelCell();\n        }\n\n        return args.isDefaultPrevented();\n      });\n    }\n  }\n\n  cancelCell() {\n    if (this.column) {\n      this.editedIndices = [];\n      delete this.column;\n      this.onChanged();\n    }\n  }\n\n  shouldCloseCell() {\n    return this.column && !this.keepEditCell;\n  }\n\n  preventCellClose() {\n    this.ngZone.runOutsideAngular(() => {\n      window.clearTimeout(this.keepCellTimeout);\n      this.keepEditCell = true;\n      this.keepCellTimeout = window.setTimeout(() => {\n        this.keepEditCell = false;\n      }, 0);\n    });\n  }\n\n  context(index) {\n    if (isNewRow(index)) {\n      return this.newItemGroup;\n    }\n\n    return this.findByIndex(index);\n  }\n\n  columnContext(index, column) {\n    if (isNewRow(index)) {\n      return this.newItemGroup;\n    }\n\n    if (!this.column || column === this.column) {\n      return this.findByIndex(index);\n    }\n  }\n\n  isEdited(index) {\n    if (isNewRow(index) && isPresent(this.newItemGroup)) {\n      return true;\n    }\n\n    return !this.column && isPresent(this.findByIndex(index));\n  }\n\n  hasEdited(index) {\n    return isPresent(this.context(index));\n  }\n\n  isEditedColumn(index, column) {\n    if (this.column && this.column === column) {\n      return isPresent(this.findByIndex(index));\n    }\n\n    return false;\n  }\n\n  beginEdit(rowIndex) {\n    this.changes.emit({\n      action: 'edit',\n      rowIndex\n    });\n  }\n\n  beginAdd() {\n    this.changes.emit({\n      action: 'add'\n    });\n  }\n\n  endEdit(rowIndex) {\n    const {\n      group: formGroup\n    } = this.context(rowIndex);\n    this.changes.emit({\n      action: 'cancel',\n      rowIndex,\n      formGroup,\n      isNew: isNewRow(rowIndex)\n    });\n  }\n\n  save(rowIndex) {\n    const {\n      group: formGroup\n    } = this.context(rowIndex);\n    this.changes.emit({\n      action: 'save',\n      rowIndex,\n      formGroup,\n      isNew: isNewRow(rowIndex)\n    });\n  }\n\n  remove(rowIndex) {\n    this.changes.emit({\n      action: 'remove',\n      rowIndex\n    });\n  }\n\n  findByIndex(index) {\n    return this.editedIndices.find(isEqual(index));\n  }\n\n  onChanged() {\n    this.ngZone.runOutsideAngular(() => {\n      this.changedSource.next();\n    });\n  }\n\n}\n\nEditService.ɵfac = function EditService_Factory(t) {\n  return new (t || EditService)(i0.ɵɵinject(i0.NgZone));\n};\n\nEditService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: EditService,\n  factory: EditService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n\nconst isButton = matchesNodeName('button');\nconst isInputTag = matchesNodeName('input');\nconst navigableRegex = /(button|checkbox|color|file|radio|reset|submit)/i;\n\nconst isNavigableInput = element => isInputTag(element) && navigableRegex.test(element.type);\n\nconst isNavigable = element => !element.disabled && (isButton(element) || isNavigableInput(element));\n/**\n * @hidden\n */\n\n\nclass DefaultFocusableElement {\n  constructor(host, renderer) {\n    this.renderer = renderer;\n    this.element = host.nativeElement;\n    this.focusable = findFocusable(this.element, false) || this.element;\n  }\n\n  get enabled() {\n    return this.focusable && !this.focusable.disabled;\n  }\n\n  get visible() {\n    return this.focusable && isVisible(this.focusable);\n  }\n\n  isNavigable() {\n    return this.canFocus() && isNavigable(this.element);\n  }\n\n  toggle(active) {\n    this.renderer.setAttribute(this.focusable, 'tabIndex', active ? '0' : '-1');\n  }\n\n  focus() {\n    if (this.focusable) {\n      this.focusable.focus();\n    }\n  }\n\n  canFocus() {\n    return this.visible && this.enabled;\n  }\n\n  hasFocus() {\n    return document.activeElement !== this.element && closest(document.activeElement, e => e === this.element);\n  }\n\n}\n/**\n * @hidden\n */\n\n\nconst CELL_CONTEXT = new InjectionToken('grid-cell-context');\n/**\n * @hidden\n */\n\nconst EMPTY_CELL_CONTEXT = {};\n/**\n * A directive that controls the way focusable elements receive\n * [focus in a navigable Grid]({% slug keyboard_navigation_grid %}).\n *\n * @example\n * ```ts-preview\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *      <input type=\"text\" placeholder=\"Tab stop #0\" style=\"margin-bottom: 8px;\" />\n *      <kendo-grid [data]=\"data\" [navigable]=\"true\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" [width]=\"100\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\" [width]=\"150\">\n *          </kendo-grid-column>\n *          <kendo-grid-column>\n *              <ng-template kendoGridCellTemplate let-dataItem>\n *                  <!-- The first focusable element will be focused when pressing Enter on the cell -->\n *                  <input type=\"text\" kendoGridFocusable [value]=\"dataItem.ProductName\" style=\"margin-right: 8px;\" />\n *                  <button kendoGridFocusable>Update</button>\n *              </ng-template>\n *          </kendo-grid-column>\n *          <kendo-grid-column [width]=\"100\">\n *              <ng-template kendoGridCellTemplate>\n *                  <!-- A single focusable element will be focused during navigation -->\n *                  <button kendoGridFocusable>Delete</button>\n *              </ng-template>\n *          </kendo-grid-column>\n *      </kendo-grid>\n *      <input type=\"text\" placeholder=\"Tab stop #2\" style=\"margin-top: 8px;\" />\n *    `\n * })\n *\n * class AppComponent {\n *     public readonly data: any = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": true\n *     }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": false\n *     }];\n * }\n * ```\n */\n\nclass FocusableDirective {\n  constructor(cellContext, hostElement, renderer) {\n    this.cellContext = cellContext;\n    this.hostElement = hostElement;\n    this.renderer = renderer;\n    this.active = true;\n    this._enabled = true;\n\n    if (this.cellContext) {\n      this.group = this.cellContext.focusGroup;\n    }\n\n    if (this.group) {\n      this.group.registerElement(this);\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  set enabled(value) {\n    if (value === '') {\n      value = true;\n    } else {\n      value = Boolean(value);\n    }\n\n    if (value !== this.enabled) {\n      this._enabled = value;\n\n      if (this.element) {\n        this.element.toggle(this.active && value);\n      }\n    }\n  }\n\n  get enabled() {\n    return this._enabled;\n  }\n\n  ngAfterViewInit() {\n    if (!this.element) {\n      this.element = new DefaultFocusableElement(this.hostElement, this.renderer);\n    }\n\n    if (this.group && this.element) {\n      this.toggle(this.group.isActive);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.group) {\n      this.group.unregisterElement(this);\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  toggle(active) {\n    if (this.element && active !== this.active) {\n      this.element.toggle(this.enabled && active);\n      this.active = active;\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  canFocus() {\n    return this.enabled && this.element && this.element.canFocus();\n  }\n  /**\n   * @hidden\n   */\n\n\n  isNavigable() {\n    return this.enabled && this.element && this.element.isNavigable();\n  }\n  /**\n   * @hidden\n   */\n\n\n  focus() {\n    if (this.enabled && this.element) {\n      this.element.focus();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  hasFocus() {\n    return this.enabled && this.element && this.element.hasFocus();\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerElement(element) {\n    this.element = element;\n  }\n\n}\n\nFocusableDirective.ɵfac = function FocusableDirective_Factory(t) {\n  return new (t || FocusableDirective)(i0.ɵɵdirectiveInject(CELL_CONTEXT, 12), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nFocusableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FocusableDirective,\n  selectors: [[\"\", \"kendoGridFocusable\", \"\"], [\"\", \"kendoGridEditCommand\", \"\"], [\"\", \"kendoGridRemoveCommand\", \"\"], [\"\", \"kendoGridSaveCommand\", \"\"], [\"\", \"kendoGridCancelCommand\", \"\"], [\"\", \"kendoGridSelectionCheckbox\", \"\"]],\n  inputs: {\n    enabled: [\"kendoGridFocusable\", \"enabled\"]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FocusableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridFocusable]' + `,\n        [kendoGridEditCommand],\n        [kendoGridRemoveCommand],\n        [kendoGridSaveCommand],\n        [kendoGridCancelCommand],\n        [kendoGridSelectionCheckbox]\n    `\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [CELL_CONTEXT]\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    enabled: [{\n      type: Input,\n      args: ['kendoGridFocusable']\n    }]\n  });\n})();\n\nconst isInSameGrid = (element, gridElement) => closest(element, matchesNodeName('kendo-grid')) === gridElement;\n\nconst matchHeaderCell = matchesNodeName('th');\nconst matchDataCell = matchesNodeName('td');\nconst matchFooterCell = matchesNodeName('.k-grid-footer td');\n\nconst matchCell = element => matchDataCell(element) || matchHeaderCell(element) || matchFooterCell(element);\n\nconst gridCell = (element, gridElement) => {\n  let target = closest(element, matchCell);\n\n  while (target && !isInSameGrid(target, gridElement)) {\n    target = closest(target.parentElement, matchCell);\n  }\n\n  return target;\n};\n\nconst targetCell = (target, gridElement) => {\n  const cell = gridCell(target, gridElement);\n  const row = closest(cell, matchesNodeName('tr'));\n\n  if (cell && row) {\n    let rowIndex = row.getAttribute('aria-rowindex');\n    rowIndex = rowIndex ? parseInt(rowIndex, 10) - 1 : null;\n    let colIndex = cell.getAttribute('aria-colindex');\n    colIndex = colIndex ? parseInt(colIndex, 10) - 1 : null;\n\n    if (rowIndex !== null && colIndex !== null) {\n      return {\n        colIndex,\n        rowIndex,\n        element: cell\n      };\n    }\n  }\n};\n\nconst isArrowKey = keyCode => keyCode === Keys.ArrowLeft || keyCode === Keys.ArrowRight || keyCode === Keys.ArrowUp || keyCode === Keys.ArrowDown;\n\nconst isNavigationKey = keyCode => isArrowKey(keyCode) || keyCode === Keys.PageUp || keyCode === Keys.PageDown || keyCode === Keys.Home || keyCode === Keys.End;\n\nconst isInput = matchesNodeName('input');\n\nconst isTextInput = element => element && isInput(element) && element.type.toLowerCase() === 'text';\n\nconst isPrintableCharacter = str => str.length === 1 && str.match(/\\S/);\n/**\n * @hidden\n */\n\n\nclass NavigationViewport {\n  constructor(firstItemIndex, lastItemIndex) {\n    this.firstItemIndex = firstItemIndex;\n    this.lastItemIndex = lastItemIndex;\n  }\n\n  containsRow(dataRowIndex) {\n    const headerRow = dataRowIndex < 0;\n    return headerRow || dataRowIndex >= this.firstItemIndex && dataRowIndex <= this.lastItemIndex;\n  }\n\n  intersects(start, end) {\n    return start <= this.firstItemIndex && this.lastItemIndex <= end || this.firstItemIndex <= start && start <= this.lastItemIndex || this.firstItemIndex <= end && end <= this.lastItemIndex;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass NavigationService {\n  constructor(zone, domEvents, pagerContextService, scrollRequestService, groupsService, detailsService, focusRoot, editService, cd, localization, focusableParent) {\n    this.zone = zone;\n    this.domEvents = domEvents;\n    this.pagerContextService = pagerContextService;\n    this.scrollRequestService = scrollRequestService;\n    this.groupsService = groupsService;\n    this.detailsService = detailsService;\n    this.focusRoot = focusRoot;\n    this.editService = editService;\n    this.cd = cd;\n    this.localization = localization;\n    this.focusableParent = focusableParent;\n    this.cellKeydown = new EventEmitter();\n    this.activeRowIndex = 0;\n    this.alive = false;\n    this.active = true;\n    this.mode = 0\n    /* Standby */\n    ;\n    this.model = new NavigationModel();\n    this.cursor = new NavigationCursor(this.model);\n    this.pagerIsNavigable = false;\n    this.tableIsNavigable = false;\n    this.changes = this.cursor.changes;\n  }\n\n  set metadata(value) {\n    this.meta = value;\n    this.cursor.metadata = value;\n  }\n\n  get metadata() {\n    return this.meta;\n  }\n\n  get enabled() {\n    return this.alive;\n  }\n\n  get pagerEnabled() {\n    return this.alive && this.pagerIsNavigable;\n  }\n\n  get tableEnabled() {\n    return this.alive && this.tableIsNavigable;\n  }\n\n  get activeCell() {\n    if (this.mode !== 0\n    /* Standby */\n    ) {\n      return this.cursor.cell;\n    }\n  }\n\n  get activeRow() {\n    if (this.mode !== 0\n    /* Standby */\n    ) {\n      return Object.assign({}, this.cursor.row, {\n        cells: this.cursor.row.cells.toArray()\n      });\n    }\n  }\n\n  get activeDataRow() {\n    return Math.max(0, this.activeRowIndex - this.meta.headerRows);\n  }\n\n  init(meta, navigableOptions) {\n    this.setActiveSections(navigableOptions);\n    this.alive = true;\n    this.focusRoot.active = true;\n    this.metadata = meta;\n\n    const onStableSubscriber = (...operators) => args => this.zone.isStable ? from([true]).pipe(map(() => args)) : this.zone.onStable.pipe(take(1), map(() => args), ...operators);\n\n    const onStable = onStableSubscriber();\n    this.subs = new Subscription();\n    this.subs.add(this.cursor.changes.subscribe(args => this.onCursorChanges(args)));\n    this.subs.add(this.domEvents.focus.pipe(switchMap(onStable)).subscribe(args => this.navigateTo(args.target)));\n    this.subs.add(this.domEvents.focusOut.pipe(filter(() => this.mode !== 0\n    /* Standby */\n    ), switchMap(onStableSubscriber(takeUntil(this.domEvents.focus)))).subscribe(args => this.onFocusOut(args)));\n    this.subs.add(this.domEvents.windowBlur.pipe(filter(() => this.mode !== 0\n    /* Standby */\n    )).subscribe(() => this.onWindowBlur()));\n    this.subs.add( // Closing the editor will not always trigger focusout in Firefox.\n    // To get around this, we ensure that the cell is closed after editing.\n    this.editService.changes.pipe(filter(e => e.action !== 'edit' && this.mode === 2\n    /* Content */\n    ), filter(e => e.action === 'cellClose' && !e.prevented), switchMap(onStable)).subscribe(() => this.leaveCell()));\n    this.subs.add(this.pagerContextService.pageChange.subscribe(() => this.cursor.reset(0, 0)));\n    this.subs.add(this.domEvents.keydown.subscribe(args => this.onKeydown(args)));\n    this.subs.add(this.domEvents.keydown.pipe(filter(args => args.keyCode === Keys.Tab && this.mode === 2\n    /* Content */\n    ), switchMapTo(this.domEvents.focusOut.pipe(takeUntil( // Timeout if focusOut doesn't fire very soon\n    interval(0).pipe(take(1)))))).subscribe(() => this.onTabout()));\n\n    if (this.focusableParent) {\n      const element = new GridFocusableElement(this);\n      this.focusableParent.registerElement(element);\n    }\n\n    this.deactivateElements();\n  }\n\n  ngOnDestroy() {\n    if (this.subs) {\n      this.subs.unsubscribe();\n    }\n\n    this.alive = false;\n  }\n\n  registerCell(cell) {\n    if (cell.logicalRowIndex !== this.pendingRowIndex) {\n      const modelCell = this.model.registerCell(cell);\n\n      if (this.virtualCell && this.cursor.activateVirtualCell(modelCell)) {\n        this.virtualCell = false;\n      }\n    }\n  }\n\n  registerCellOnCurrentRow(cell) {\n    if (cell.logicalRowIndex === this.pendingRowIndex) {\n      this.model.registerCell(cell);\n    }\n  }\n\n  unregisterCell(index, rowIndex, cell) {\n    this.model.unregisterCell(index, rowIndex, cell);\n  }\n\n  registerRow(row) {\n    this.model.registerRow(row);\n    this.pendingRowIndex = row.logicalRowIndex;\n  }\n\n  updateRow(row) {\n    this.model.updateRow(row);\n  }\n\n  unregisterRow(index, row) {\n    this.model.unregisterRow(index, row);\n    const lastRow = this.model.lastRow;\n\n    if (lastRow && this.mode === 0\n    /* Standby */\n    ) {\n      const maxIndex = this.needsViewport() && this.viewport ? this.viewport.lastItemIndex : lastRow.index;\n\n      if (this.activeRowIndex > maxIndex) {\n        this.cursor.reset(0, 0);\n      }\n    }\n  }\n\n  isCellFocusable(cell) {\n    return this.alive && this.active && this.mode !== 2\n    /* Content */\n    && this.cursor.isActive(cell.logicalRowIndex, cell.logicalColIndex);\n  }\n\n  isCellFocused(cell) {\n    return this.mode === 1\n    /* Cursor */\n    && this.isCellFocusable(cell);\n  }\n\n  navigateTo(el) {\n    if (!this.alive) {\n      return;\n    }\n\n    const cell = targetCell(el, this.meta.gridElement.nativeElement);\n\n    if (!cell) {\n      return;\n    }\n\n    const oldMode = this.mode;\n    const focusInCell = contains$2(cell.element, document.activeElement);\n    const focusInActiveRowContent = this.mode === 2\n    /* Content */\n    && this.activeRowIndex === cell.rowIndex && el !== cell.element;\n\n    if (focusInCell) {\n      this.mode = 2\n      /* Content */\n      ;\n      this.cursor.reset(cell.rowIndex, cell.colIndex);\n      this.activateRow();\n    } else if (!focusInActiveRowContent) {\n      this.mode = 1\n      /* Cursor */\n      ;\n      this.deactivateElements();\n      const alreadyActive = this.cursor.isActive(cell.rowIndex, cell.colIndex);\n      const isCursor = oldMode === 1\n      /* Cursor */\n      && alreadyActive;\n\n      if (!isCursor) {\n        this.cursor.reset(cell.rowIndex, cell.colIndex);\n      }\n    }\n  }\n\n  tryFocus(el) {\n    this.activateElements();\n    const focusable = findFocusableChild(el);\n\n    if (focusable) {\n      const cell = targetCell(focusable, this.meta.gridElement.nativeElement);\n\n      if (cell) {\n        this.cursor.reset(cell.rowIndex, cell.colIndex);\n        this.deactivateElements();\n        this.enterCell();\n      }\n\n      focusable.focus();\n    } else {\n      this.deactivateElements();\n    }\n\n    return !!focusable;\n  }\n\n  needsViewport() {\n    return this.meta && this.meta.isVirtual;\n  }\n\n  setViewport(firstItemIndex, lastItemIndex) {\n    this.viewport = new NavigationViewport(firstItemIndex, lastItemIndex);\n\n    if (this.meta && this.meta.isVirtual && this.activeDataRow > -1) {\n      const dataRowIndex = this.activeDataRow;\n      const ahead = firstItemIndex - dataRowIndex;\n      const behind = dataRowIndex - lastItemIndex;\n\n      if (ahead > 0) {\n        this.cursor.reset(firstItemIndex + this.meta.headerRows);\n      } else if (behind > 0) {\n        this.cursor.reset(lastItemIndex - this.meta.headerRows);\n      }\n    }\n  }\n\n  setColumnViewport(firstItemIndex, lastItemIndex) {\n    this.columnViewport = new NavigationViewport(firstItemIndex, lastItemIndex);\n  }\n\n  focusCell(rowIndex = undefined, colIndex = undefined) {\n    this.mode = 1\n    /* Cursor */\n    ;\n    this.cursor.reset(rowIndex, colIndex);\n    return this.activeCell;\n  }\n\n  focusCellByElement(el) {\n    const cell = targetCell(el, this.meta.gridElement.nativeElement);\n\n    if (cell) {\n      return this.focusCell(cell.rowIndex, cell.colIndex);\n    }\n  }\n\n  focusNextCell(wrap = true) {\n    return this.focusAdjacentCell(true, wrap);\n  }\n\n  focusPrevCell(wrap = true) {\n    return this.focusAdjacentCell(false, wrap);\n  }\n\n  toggle(active) {\n    this.active = active;\n    this.cursor.announce();\n  }\n\n  hasFocus() {\n    return this.mode === 1\n    /* Cursor */\n    || this.mode === 2\n    /* Content */\n    ;\n  }\n\n  autoFocusCell(start, end) {\n    return !this.meta.virtualColumns || end < this.meta.columns.lockedLeafColumns.length || this.columnViewport.intersects(start, end);\n  }\n\n  setActiveSections(navigableOptions) {\n    this.pagerIsNavigable = navigableOptions.includes('pager');\n    this.tableIsNavigable = navigableOptions.includes('table');\n  }\n\n  focusAdjacentCell(fwd, wrap) {\n    this.focusCell();\n    let success = fwd ? this.moveCursorFwd() : this.moveCursorBwd();\n\n    if (wrap && !success) {\n      success = fwd ? this.cursor.moveDown(1) : this.cursor.moveUp(1);\n\n      if (success) {\n        const row = this.cursor.row;\n        const colIdx = fwd ? 0 : this.cursor.lastCellIndex(row);\n        this.cursor.reset(row.index, colIdx);\n      }\n    }\n\n    if (success) {\n      return this.activeCell;\n    } else {\n      this.mode = 0\n      /* Standby */\n      ;\n      this.cursor.announce();\n    }\n\n    return null;\n  }\n\n  enterCell() {\n    const cell = this.cursor.cell;\n\n    if (!cell) {\n      return;\n    }\n\n    const group = cell.focusGroup;\n    const focusable = group && group.canFocus();\n    this.mode = focusable ? 2\n    /* Content */\n    : 1\n    /* Cursor */\n    ;\n    this.cursor.announce();\n\n    if (focusable) {\n      this.activateRow();\n      group.focus();\n    }\n  }\n\n  leaveCell() {\n    const cell = this.cursor.cell;\n\n    if (!cell) {\n      return;\n    }\n\n    const group = cell.focusGroup;\n    const focusable = group && group.canFocus();\n\n    if (!focusable) {\n      this.deactivateElements();\n    }\n\n    this.mode = 1\n    /* Cursor */\n    ;\n    this.cursor.announce();\n  }\n\n  activateElements() {\n    this.focusRoot.activate();\n  }\n\n  deactivateElements() {\n    this.focusRoot.deactivate();\n  }\n\n  activateRow() {\n    this.cursor.row.cells.forEach(cell => cell.focusGroup && cell.focusGroup.activate());\n  }\n\n  moveCursorFwd() {\n    return this.localization.rtl ? this.cursor.moveLeft() : this.cursor.moveRight();\n  }\n\n  moveCursorBwd() {\n    return this.localization.rtl ? this.cursor.moveRight() : this.cursor.moveLeft();\n  }\n\n  onCursorKeydown(args) {\n    let preventDefault = false;\n    const modifier = args.ctrlKey || args.metaKey;\n    const step = modifier ? 5 : 1;\n\n    if (!this.onCellKeydown(args)) {\n      return;\n    }\n\n    const row = this.cursor.row;\n\n    switch (args.keyCode) {\n      case Keys.ArrowDown:\n        preventDefault = this.cursor.moveDown(step);\n        break;\n\n      case Keys.ArrowUp:\n        preventDefault = this.cursor.moveUp(step);\n        break;\n\n      case Keys.ArrowRight:\n        preventDefault = this.moveCursorFwd();\n        break;\n\n      case Keys.ArrowLeft:\n        preventDefault = this.moveCursorBwd();\n        break;\n\n      case Keys.PageDown:\n        if (this.metadata.isVirtual && this.viewport) {\n          let nextItemIndex = this.meta.headerRows + this.viewport.lastItemIndex + 1;\n\n          if (this.metadata.hasDetailTemplate) {\n            nextItemIndex++;\n          }\n\n          nextItemIndex = Math.min(this.meta.maxLogicalRowIndex, nextItemIndex);\n          this.cursor.reset(nextItemIndex);\n          preventDefault = true;\n        } else if (this.metadata.hasPager) {\n          this.zone.run(() => this.pagerContextService.nextPage());\n          preventDefault = true;\n        }\n\n        break;\n\n      case Keys.PageUp:\n        if (this.metadata.isVirtual && this.viewport) {\n          let viewportSize = this.viewport.lastItemIndex - this.viewport.firstItemIndex;\n          let firstItemIndex = this.viewport.firstItemIndex;\n          let nextItemIndex = Math.max(this.meta.headerRows, firstItemIndex - viewportSize - 1);\n          this.cursor.reset(nextItemIndex);\n          preventDefault = true;\n        } else if (this.metadata.hasPager) {\n          this.zone.run(() => this.pagerContextService.prevPage());\n          preventDefault = true;\n        }\n\n        break;\n\n      case Keys.Home:\n        if (modifier) {\n          if (this.meta.isVirtual) {\n            this.cursor.reset(this.meta.headerRows, 0, false);\n          } else {\n            this.cursor.reset(this.model.firstRow.index, 0, false);\n          }\n        } else {\n          this.cursor.reset(row.index, 0, false);\n        }\n\n        preventDefault = true;\n        break;\n\n      case Keys.End:\n        if (modifier) {\n          if (this.meta.isVirtual) {\n            let lastRowIndex = this.meta.maxLogicalRowIndex;\n\n            if (this.meta.hasDetailTemplate) {\n              lastRowIndex--;\n            }\n\n            this.cursor.reset(lastRowIndex, this.cursor.lastCellIndex(), false);\n          } else {\n            this.cursor.reset(this.model.lastRow.index, this.cursor.lastCellIndex(this.model.lastRow), false);\n          }\n        } else {\n          const lastIndex = this.cursor.lastCellIndex(row);\n          const cell = this.model.findCell(lastIndex, row);\n\n          if (cell) {\n            this.cursor.reset(cell.rowIndex, cell.colIndex);\n          } else {\n            this.cursor.reset(row.index, lastIndex);\n          }\n        }\n\n        preventDefault = true;\n        break;\n\n      case Keys.Enter:\n      case Keys.F2:\n        const groupItem = row.groupItem;\n\n        if (groupItem) {\n          this.zone.run(() => this.groupsService.toggleRow(groupItem));\n        } else if (this.cursor.cell.detailExpandCell) {\n          this.zone.run(() => this.detailsService.toggleRow(row.dataRowIndex, row.dataItem));\n        } else {\n          this.enterCell();\n\n          if (!this.cursor.cell.focusGroup.isNavigable()) {\n            preventDefault = true;\n          }\n        }\n\n        break;\n\n      default:\n        if (!args.ctrlKey && !args.altKey && isPrintableCharacter(args.key)) {\n          this.enterCell();\n        }\n\n    }\n\n    if (preventDefault) {\n      args.preventDefault();\n    }\n  }\n\n  onContentKeydown(args) {\n    if (!this.onCellKeydown(args)) {\n      return;\n    }\n\n    const confirm = !args.defaultPrevented && args.keyCode === Keys.Enter && isTextInput(args.srcElement);\n\n    if (args.keyCode === Keys.Escape || args.keyCode === Keys.F2 || confirm) {\n      this.leaveCell();\n      this.cursor.reset();\n      args.stopPropagation();\n    } else if (isNavigationKey(args.keyCode) && this.cursor.cell.focusGroup.isNavigable()) {\n      this.onCursorKeydown(args);\n\n      if (args.defaultPrevented) {\n        this.leaveCell();\n      }\n    }\n  }\n\n  onCellKeydown(args) {\n    if (this.editService.isEditingCell()) {\n      const confirm = args.keyCode === Keys.Enter;\n      const cancel = args.keyCode === Keys.Escape;\n      const navigate = isNavigationKey(args.keyCode);\n\n      if (confirm) {\n        this.editService.closeCell(args);\n      } else if (cancel) {\n        this.editService.closeCell(args);\n        this.cd.detectChanges();\n      } else if (navigate) {\n        return false;\n      }\n    }\n\n    this.cellKeydown.emit(args);\n    return true;\n  }\n\n  onCursorChanges(args) {\n    this.activeRowIndex = args.rowIndex;\n    const dataRowIndex = this.activeDataRow;\n\n    if (this.meta && this.meta.isVirtual && args.rowIndex >= this.meta.headerRows && this.viewport && !this.viewport.containsRow(dataRowIndex) && dataRowIndex > -1) {\n      this.scrollRequestService.scrollTo({\n        row: dataRowIndex\n      });\n    }\n\n    if (this.meta.virtualColumns && args.colIndex >= this.meta.columns.lockedLeafColumns.length) {\n      const cell = this.activeCell;\n      const {\n        start,\n        end\n      } = this.model.cellRange(cell);\n\n      if (!cell) {\n        this.virtualCell = true;\n      }\n\n      if (!cell && this.mode !== 0\n      /* Standby */\n      || cell && !this.columnViewport.intersects(start, end)) {\n        this.scrollRequestService.scrollTo({\n          column: args.colIndex - (this.metadata.hasDetailTemplate ? 1 : 0)\n        });\n      }\n    }\n  }\n\n  onFocusOut(args) {\n    if (isVisible(args.target)) {\n      this.mode = 0\n      /* Standby */\n      ;\n    } else {\n      // Focused target is no longer visible,\n      // reset to cursor mode and recapture focus.\n      this.mode = 1\n      /* Cursor */\n      ;\n    }\n\n    this.deactivateElements();\n    this.cursor.announce();\n  }\n\n  onWindowBlur() {\n    this.mode = 0\n    /* Standby */\n    ;\n    this.deactivateElements();\n    this.cursor.announce();\n  }\n\n  onKeydown(args) {\n    if (this.mode === 1\n    /* Cursor */\n    ) {\n      this.onCursorKeydown(args);\n    } else if (this.mode === 2\n    /* Content */\n    ) {\n      this.onContentKeydown(args);\n    }\n  }\n\n  onTabout() {\n    // Tabbed out of the last focusable content element\n    // reset to cursor mode and recapture focus.\n    if (this.cursor.cell.focusGroup.isNavigable()) {\n      // Unless the cell has a single focusable element,\n      // otherwise we'd return to Content mode and enter an endless loop\n      return;\n    }\n\n    this.leaveCell();\n    this.cursor.reset();\n  }\n\n}\n\nNavigationService.ɵfac = function NavigationService_Factory(t) {\n  return new (t || NavigationService)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DomEventsService), i0.ɵɵinject(PagerContextService), i0.ɵɵinject(ScrollRequestService), i0.ɵɵinject(GroupsService), i0.ɵɵinject(DetailsService), i0.ɵɵinject(FocusRoot), i0.ɵɵinject(EditService), i0.ɵɵinject(i0.ChangeDetectorRef), i0.ɵɵinject(i1.LocalizationService), i0.ɵɵinject(FocusableDirective, 8));\n};\n\nNavigationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NavigationService,\n  factory: NavigationService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NavigationService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: DomEventsService\n    }, {\n      type: PagerContextService\n    }, {\n      type: ScrollRequestService\n    }, {\n      type: GroupsService\n    }, {\n      type: DetailsService\n    }, {\n      type: FocusRoot\n    }, {\n      type: EditService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: FocusableDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass SelectionService {\n  constructor(domEvents, localDataChangesService, navigationService) {\n    this.domEvents = domEvents;\n    this.localDataChangesService = localDataChangesService;\n    this.navigationService = navigationService;\n    this.changes = new EventEmitter();\n    this.lastSelectionStartIndex = 0;\n    this.currentSelection = [];\n    this.selectAllChecked = false;\n    this.active = false;\n    this.dragging = false;\n    this.addSubscriptions();\n  }\n\n  get enableMarquee() {\n    const checkboxOnly = this.settings && typeof this.settings === 'object' && this.settings.checkboxOnly;\n\n    if (!this.settings || checkboxOnly) {\n      return false;\n    }\n\n    const selectableSettings = this.settings.selectable;\n    const dragAndMultiple = typeof selectableSettings === 'object' && isPresent(selectableSettings) && selectableSettings.mode === 'multiple' && selectableSettings.enabled !== false && !selectableSettings.checkboxOnly && selectableSettings.drag;\n    return this.active && dragAndMultiple;\n  }\n\n  init(settings) {\n    this.settings = settings;\n    this.currentSelection = [];\n\n    if (settings.selectable && settings.selectable.enabled !== false) {\n      const iterator = this.getIterator();\n      this._selectAllState = true;\n      let item = iterator.next();\n\n      while (!item.done) {\n        if (item.value && item.value.type === \"data\") {\n          const rowArgs = {\n            dataItem: item.value.data,\n            index: item.value.index\n          };\n\n          if (settings.rowSelected(rowArgs)) {\n            this.currentSelection[item.value.index] = rowArgs;\n          } else {\n            this._selectAllState = undefined;\n          }\n        }\n\n        item = iterator.next();\n      }\n\n      if (this.currentSelection.length === 0) {\n        this._selectAllState = false;\n      }\n    }\n  }\n\n  isSelected(index) {\n    if (this.settings && this.active) {\n      return this.options.enabled && isPresent(this.currentSelection[index]);\n    }\n  }\n\n  handleClick(item, event) {\n    if (this.dragging) {\n      this.dragging = false;\n      return;\n    }\n\n    let ev;\n    const ctrlKey = event.ctrlKey || event.metaKey;\n\n    if (this.options.mode === \"single\" && ctrlKey && this.isSelected(item.index)) {\n      ev = this.toggle(item);\n    } else if (this.options.mode === \"multiple\") {\n      if (ctrlKey && !event.shiftKey) {\n        ev = this.toggle(item);\n      } else if (event.shiftKey) {\n        ev = this.addAllTo(item, ctrlKey);\n      }\n    }\n\n    if (!isPresent(ev)) {\n      ev = this.select(item);\n      this.currentSelection[item.index] = {\n        dataItem: item.data,\n        index: item.index\n      };\n    }\n\n    if (!ev.selectedRows.length && !ev.deselectedRows.length) {\n      return;\n    }\n\n    ev.ctrlKey = ctrlKey;\n    ev.shiftKey = event.shiftKey;\n    this.changes.emit(ev);\n  }\n\n  toggle(item) {\n    let selectedRows = [];\n    let deselectedRows = [];\n    this.lastSelectionStartIndex = item.index;\n    const rowArgs = {\n      dataItem: item.data,\n      index: item.index\n    };\n\n    if (this.isSelected(item.index)) {\n      deselectedRows.push(rowArgs);\n    } else {\n      selectedRows.push(rowArgs);\n    }\n\n    return {\n      deselectedRows: deselectedRows,\n      selectedRows: selectedRows\n    };\n  }\n\n  toggleByIndex(index) {\n    const iterator = this.getIterator();\n\n    if (this.selectAllChecked && this.isSelected(index)) {\n      this.selectAllChecked = false;\n    }\n\n    let item = iterator.next();\n\n    while (!item.done) {\n      if (item.value && item.value.type === \"data\" && item.value.index === index) {\n        const itemToToggle = {\n          data: item.value.data,\n          index: item.value.index\n        };\n\n        if (this.isSelected(index) || this.options.mode === \"multiple\") {\n          return this.toggle(itemToToggle);\n        } else {\n          return this.select(itemToToggle);\n        }\n      }\n\n      item = iterator.next();\n    }\n  }\n\n  select(item) {\n    let deselectedRows = [];\n    let selectedRows = [];\n    this.lastSelectionStartIndex = item.index;\n\n    if (!this.isSelected(item.index)) {\n      selectedRows.push({\n        dataItem: item.data,\n        index: item.index\n      });\n    }\n\n    this.currentSelection.forEach(row => {\n      if (row.index !== item.index) {\n        deselectedRows.push(row);\n      }\n    });\n    return {\n      deselectedRows: deselectedRows,\n      selectedRows: selectedRows\n    };\n  } //Used to manually deselect removed items\n\n\n  deselect(removedItem) {\n    const iterator = this.getIterator();\n    let item = iterator.next();\n\n    while (!item.done) {\n      if (item.value && item.value.type === \"data\" && item.value.data === removedItem) {\n        const rowArgs = {\n          dataItem: item.value.data,\n          index: item.value.index\n        };\n\n        if (this.isSelected(rowArgs.index)) {\n          let ev = {\n            ctrlKey: false,\n            deselectedRows: [rowArgs],\n            selectedRows: []\n          };\n          this.changes.emit(ev);\n        }\n      }\n\n      item = iterator.next();\n    }\n  }\n\n  addAllTo(item, ctrlKey) {\n    let selectedRows = [];\n    let deselectedRows = [];\n    const start = Math.min(this.lastSelectionStartIndex, item.index);\n    const end = Math.max(this.lastSelectionStartIndex, item.index);\n    const iterator = this.getIterator();\n    let next = iterator.next();\n\n    while (!next.done) {\n      if (next.value && next.value.type === \"data\") {\n        const idx = next.value.index;\n        const rowArgs = {\n          dataItem: next.value.data,\n          index: idx\n        };\n\n        if ((idx < start || idx > end) && this.isSelected(idx) && !ctrlKey) {\n          deselectedRows.push(rowArgs);\n        }\n\n        if (idx >= start && idx <= end && !this.isSelected(idx)) {\n          selectedRows.push(rowArgs);\n        }\n      }\n\n      next = iterator.next();\n    }\n\n    return {\n      deselectedRows: deselectedRows,\n      selectedRows: selectedRows\n    };\n  }\n\n  updateAll(selectAllChecked) {\n    this.selectAllChecked = selectAllChecked;\n    let selectedRows = [];\n    let deselectedRows = [];\n    const iterator = this.getIterator();\n    let next = iterator.next();\n\n    while (!next.done) {\n      if (next.value && next.value.type === \"data\") {\n        const idx = next.value.index;\n        const rowArgs = {\n          dataItem: next.value.data,\n          index: idx\n        };\n\n        if (this.isSelected(idx) && !selectAllChecked) {\n          deselectedRows.push(rowArgs);\n        }\n\n        if (!this.isSelected(idx) && selectAllChecked) {\n          selectedRows.push(rowArgs);\n        }\n      }\n\n      next = iterator.next();\n    }\n\n    if (!selectedRows.length && !deselectedRows.length) {\n      return;\n    }\n\n    let ev = {\n      ctrlKey: true,\n      deselectedRows: deselectedRows,\n      selectedRows: selectedRows,\n      shiftKey: true\n    };\n    this.changes.emit(ev);\n  }\n\n  selectRange(startIndex, endIndex) {\n    let selectedRows = [];\n    let deselectedRows = [];\n    const start = Math.min(startIndex, endIndex);\n    const end = Math.max(startIndex, endIndex);\n    const iterator = this.getIterator();\n    let next = iterator.next();\n\n    while (!next.done) {\n      if (next.value && next.value.type === \"data\") {\n        const idx = next.value.index;\n        const rowArgs = {\n          dataItem: next.value.data,\n          index: idx\n        };\n\n        if ((idx < start || idx > end) && this.isSelected(idx)) {\n          deselectedRows.push(rowArgs);\n        }\n\n        if (idx >= start && idx <= end && !this.isSelected(idx)) {\n          selectedRows.push(rowArgs);\n        }\n      }\n\n      next = iterator.next();\n    }\n\n    return {\n      deselectedRows: deselectedRows,\n      selectedRows: selectedRows\n    };\n  }\n\n  get selectAllState() {\n    return this._selectAllState;\n  }\n\n  get selected() {\n    return this.currentSelection.map(item => {\n      return item.index;\n    }).filter(n => typeof n === \"number\");\n  }\n\n  get options() {\n    const defaultOptions = {\n      checkboxOnly: false,\n      enabled: true,\n      mode: \"multiple\"\n    };\n\n    if (!isPresent(this.settings)) {\n      return defaultOptions;\n    }\n\n    if (typeof this.settings.selectable === 'boolean') {\n      return {\n        checkboxOnly: false,\n        enabled: this.settings.selectable,\n        mode: \"multiple\"\n      };\n    } else {\n      return Object.assign(defaultOptions, this.settings.selectable);\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeSubscriptions();\n  }\n\n  targetArgs() {\n    return {\n      index: this.mouseDownEventArgs.rowIndex,\n      dataItem: this.mouseDownEventArgs.dataItem\n    };\n  }\n\n  addSubscriptions() {\n    if (!this.cellClickSubscription) {\n      this.cellClickSubscription = this.domEvents.cellClick.subscribe(args => {\n        if (this.options.enabled && !this.options.checkboxOnly && args.type !== 'contextmenu') {\n          if (this.active) {\n            this.handleClick({\n              index: args.rowIndex,\n              data: args.dataItem\n            }, args.originalEvent);\n          }\n        }\n      });\n    }\n\n    if (!this.mousedownSubscription) {\n      this.mousedownSubscription = this.domEvents.cellMousedown.subscribe(args => {\n        this.mouseDownEventArgs = args;\n\n        if (this.options.enabled && (!this.options.mode || this.options.mode === \"multiple\") && !this.options.checkboxOnly && args.originalEvent.shiftKey) {\n          if (this.active) {\n            args.originalEvent.preventDefault();\n            this.navigationService.focusCellByElement(args.originalEvent.target);\n          }\n        }\n      });\n    }\n\n    if (this.localDataChangesService && !this.dataChangedSubscription) {\n      this.dataChangedSubscription = this.localDataChangesService.changes.subscribe(args => {\n        if (this.active) {\n          if (isPresent(args.action) && args.action === 'remove') {\n            this.deselect(args.item);\n          }\n        }\n      });\n    }\n  }\n\n  getIterator() {\n    const accessor = this.settings.view.accessor();\n\n    if (!accessor) {\n      return;\n    }\n\n    return accessor[iterator]();\n  }\n\n  removeSubscriptions() {\n    if (this.cellClickSubscription) {\n      this.cellClickSubscription.unsubscribe();\n      this.cellClickSubscription = null;\n    }\n\n    if (this.mousedownSubscription) {\n      this.mousedownSubscription.unsubscribe();\n      this.mousedownSubscription = null;\n    }\n\n    if (this.dataChangedSubscription) {\n      this.dataChangedSubscription.unsubscribe();\n      this.dataChangedSubscription = null;\n    }\n  }\n\n}\n\nSelectionService.ɵfac = function SelectionService_Factory(t) {\n  return new (t || SelectionService)(i0.ɵɵinject(DomEventsService), i0.ɵɵinject(LocalDataChangesService), i0.ɵɵinject(NavigationService));\n};\n\nSelectionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SelectionService,\n  factory: SelectionService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectionService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: DomEventsService\n    }, {\n      type: LocalDataChangesService\n    }, {\n      type: NavigationService\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass CellSelectionService {\n  constructor(domEvents, localDataChangesService, navigationService) {\n    this.domEvents = domEvents;\n    this.localDataChangesService = localDataChangesService;\n    this.navigationService = navigationService;\n    this.changes = new EventEmitter();\n    this.mouseUpEvent = new EventEmitter();\n    this.currentSelection = [];\n    this.active = false;\n    this.dragging = false;\n    this.dragSelectDeselect = false;\n    this.lastSelectionItem = {\n      itemKey: 0,\n      columnKey: 0\n    };\n    this.lastSelectionItemRowIndex = 0;\n    this.lastSelectionItemColIndex = 0;\n    this.addSubscriptions();\n  }\n\n  get enableMarquee() {\n    const checkboxOnly = this.settings && typeof this.settings === 'object' && this.settings.checkboxOnly;\n\n    if (!this.settings || checkboxOnly) {\n      return false;\n    }\n\n    const selectableSettings = this.settings.selectable;\n    const dragAndMultiple = typeof selectableSettings === 'object' && isPresent(selectableSettings) && selectableSettings.mode === 'multiple' && selectableSettings.cell && selectableSettings.enabled !== false && selectableSettings.drag;\n    return this.active && dragAndMultiple;\n  }\n\n  init(settings) {\n    this.settings = settings;\n    this.currentSelection = [];\n\n    if (settings.selectable && settings.selectable.enabled !== false) {\n      const iterator = this.getIterator();\n      let item = iterator.next();\n\n      while (!item.done) {\n        if (item.value && item.value.type === \"data\") {\n          const rowArgs = {\n            dataItem: item.value.data,\n            index: item.value.index\n          };\n          settings.columns.forEach(col => {\n            const selectedCellArgs = settings.cellSelected(rowArgs, col, col.leafIndex);\n\n            if (selectedCellArgs.selected) {\n              this.currentSelection.push(selectedCellArgs.item);\n            }\n          });\n        }\n\n        item = iterator.next();\n      }\n    }\n  }\n\n  isCellSelected(item, col) {\n    if (this.settings && this.active) {\n      const selectedCellArgs = this.settings.cellSelected({\n        dataItem: item.data,\n        index: item.index\n      }, col, col.leafIndex);\n      return this.options.enabled && selectedCellArgs.selected;\n    }\n\n    return false;\n  }\n\n  handleClick(item, event) {\n    if (this.dragging) {\n      this.dragging = false;\n      return;\n    }\n\n    let ev;\n    const ctrlKey = event.ctrlKey || event.metaKey;\n\n    if (this.options.mode === \"single\" && ctrlKey && this.isCellSelected(item, item.column)) {\n      ev = this.toggle(item);\n    } else if (this.options.mode === \"multiple\") {\n      if (ctrlKey && !event.shiftKey) {\n        ev = this.toggle(item);\n      } else if (event.shiftKey) {\n        const startRowIndex = Math.min(this.lastSelectionItemRowIndex, item.index);\n        const startColIndex = Math.min(this.lastSelectionItemColIndex, item.column.leafIndex);\n        const endRowIndex = Math.max(this.lastSelectionItemRowIndex, item.index);\n        const endColIndex = Math.max(this.lastSelectionItemColIndex, item.column.leafIndex);\n        ev = this.selectRange(startRowIndex, startColIndex, endRowIndex, endColIndex);\n      }\n    }\n\n    if (!isPresent(ev)) {\n      ev = this.select(item);\n      this.currentSelection = [this.lastSelectionItem];\n    }\n\n    if (!ev.selectedCells.length && !ev.deselectedCells.length) {\n      return;\n    }\n\n    ev.ctrlKey = ctrlKey;\n    ev.shiftKey = event.shiftKey;\n    this.changes.emit(ev);\n  }\n\n  toggle(item) {\n    let selectedCells = [];\n    let deselectedCells = [];\n    this.lastSelectionItem = this.settings.cellSelected({\n      dataItem: item.data,\n      index: item.index\n    }, item.column, item.column.leafIndex).item;\n    this.lastSelectionItemRowIndex = item.index;\n    this.lastSelectionItemColIndex = item.column.leafIndex;\n\n    if (this.isCellSelected(item, item.column)) {\n      deselectedCells.push(this.lastSelectionItem);\n    } else {\n      selectedCells.push(this.lastSelectionItem);\n    }\n\n    return {\n      deselectedCells,\n      selectedCells\n    };\n  }\n\n  select(item) {\n    const selectedCells = [];\n    const deselectedCells = [];\n    this.lastSelectionItem = this.settings.cellSelected({\n      dataItem: item.data,\n      index: item.index\n    }, item.column, item.column.leafIndex).item;\n    this.lastSelectionItemRowIndex = item.index;\n    this.lastSelectionItemColIndex = item.column.leafIndex;\n\n    if (!this.isCellSelected(item, item.column)) {\n      selectedCells.push(this.lastSelectionItem);\n    }\n\n    this.currentSelection.forEach(selectedItem => {\n      if (selectedItem.itemKey !== this.lastSelectionItem.itemKey || selectedItem.columnKey !== this.lastSelectionItem.columnKey) {\n        deselectedCells.push(selectedItem);\n      }\n    });\n    return {\n      deselectedCells,\n      selectedCells\n    };\n  } //Used to manually deselect removed items\n\n\n  deselect(removedItem) {\n    const iterator = this.getIterator();\n    let item = iterator.next();\n    let rowArgs;\n\n    while (!item.done) {\n      if (item.value && item.value.type === \"data\" && item.value.data === removedItem) {\n        rowArgs = {\n          dataItem: item.value.data,\n          index: item.value.index\n        };\n        break;\n      }\n\n      item = iterator.next();\n    }\n\n    if (rowArgs) {\n      const cellsToRemove = this.currentSelection.filter(selectedItem => {\n        const contender = this.settings.cellSelected(rowArgs, null, null).item;\n        return selectedItem.itemKey === contender.itemKey;\n      });\n\n      if (cellsToRemove.length) {\n        let ev = {\n          ctrlKey: false,\n          deselectedCells: cellsToRemove,\n          selectedCells: []\n        };\n        this.changes.emit(ev);\n      }\n    }\n  }\n\n  selectRange(startRowIndex, startColIndex, endRowIndex, endColIndex) {\n    const selectedCells = [];\n    const deselectedCells = [];\n    const selectionStartRow = Math.min(startRowIndex, endRowIndex);\n    const selectionStartCol = Math.min(startColIndex, endColIndex);\n    const selectionEndRow = Math.max(startRowIndex, endRowIndex);\n    const selectionEndCol = Math.max(startColIndex, endColIndex);\n    const iterator = this.getIterator();\n    let next = iterator.next();\n\n    while (!next.done) {\n      if (next.value && next.value.type === \"data\") {\n        const idx = next.value.index;\n        const data = next.value.data;\n        const rowArgs = {\n          dataItem: data,\n          index: idx\n        };\n        this.settings.columns.forEach(col => {\n          const {\n            item\n          } = this.settings.cellSelected(rowArgs, col, col.leafIndex);\n          const selected = this.isCellSelected(next.value, col);\n          const isInRowRange = selectionStartRow <= idx && idx <= selectionEndRow;\n          const isInColRange = selectionStartCol <= col.leafIndex && col.leafIndex <= selectionEndCol;\n          const isInSelectionRect = isInRowRange && isInColRange;\n\n          if (!isInSelectionRect && selected) {\n            deselectedCells.push(item);\n          }\n\n          if (isInSelectionRect && !selected) {\n            selectedCells.push(item);\n          }\n        });\n      }\n\n      next = iterator.next();\n    }\n\n    return {\n      deselectedCells,\n      selectedCells\n    };\n  }\n\n  get options() {\n    const defaultOptions = {\n      checkboxOnly: false,\n      enabled: true,\n      mode: \"multiple\"\n    };\n\n    if (!isPresent(this.settings)) {\n      return defaultOptions;\n    }\n\n    if (typeof this.settings.selectable === 'boolean') {\n      return {\n        checkboxOnly: false,\n        enabled: this.settings.selectable,\n        mode: \"multiple\"\n      };\n    } else {\n      return Object.assign(defaultOptions, this.settings.selectable);\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeSubscriptions();\n  }\n\n  addSubscriptions() {\n    if (!this.cellClickSubscription) {\n      this.cellClickSubscription = this.domEvents.cellClick.subscribe(args => {\n        if (this.options.enabled && !this.options.checkboxOnly && args.type !== 'contextmenu') {\n          if (this.active) {\n            this.handleClick({\n              index: args.rowIndex,\n              data: args.dataItem,\n              column: args.column\n            }, args.originalEvent);\n          }\n        }\n      });\n    }\n\n    if (!this.mousedownSubscription) {\n      this.mousedownSubscription = this.domEvents.cellMousedown.subscribe(args => {\n        this.mouseDownEventArgs = args;\n\n        if (this.options.enabled && (!this.options.mode || this.options.mode === \"multiple\") && !this.options.checkboxOnly && args.originalEvent.shiftKey) {\n          if (this.active) {\n            args.originalEvent.preventDefault();\n            this.navigationService.focusCellByElement(args.originalEvent.target);\n          }\n        }\n      });\n    }\n\n    if (this.localDataChangesService && !this.dataChangedSubscription) {\n      this.dataChangedSubscription = this.localDataChangesService.changes.subscribe(args => {\n        if (this.active) {\n          if (isPresent(args.action) && args.action === 'remove') {\n            this.deselect(args.item);\n          }\n        }\n      });\n    }\n  }\n\n  getIterator() {\n    const accessor = this.settings.view.accessor();\n\n    if (!accessor) {\n      return;\n    }\n\n    return accessor[iterator]();\n  }\n\n  removeSubscriptions() {\n    if (this.cellClickSubscription) {\n      this.cellClickSubscription.unsubscribe();\n      this.cellClickSubscription = null;\n    }\n\n    if (this.mousedownSubscription) {\n      this.mousedownSubscription.unsubscribe();\n      this.mousedownSubscription = null;\n    }\n\n    if (this.dataChangedSubscription) {\n      this.dataChangedSubscription.unsubscribe();\n      this.dataChangedSubscription = null;\n    }\n  }\n\n}\n\nCellSelectionService.ɵfac = function CellSelectionService_Factory(t) {\n  return new (t || CellSelectionService)(i0.ɵɵinject(DomEventsService), i0.ɵɵinject(LocalDataChangesService), i0.ɵɵinject(NavigationService));\n};\n\nCellSelectionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CellSelectionService,\n  factory: CellSelectionService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellSelectionService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: DomEventsService\n    }, {\n      type: LocalDataChangesService\n    }, {\n      type: NavigationService\n    }];\n  }, null);\n})();\n\nconst createElement$1 = () => {\n  const marquee = document.createElement(\"div\");\n  marquee.className = \"k-marquee\";\n  const marqueeColor = document.createElement(\"div\");\n  marqueeColor.className = \"k-marquee-color\";\n  marquee.appendChild(marqueeColor);\n  return marquee;\n};\n\nconst POINTER_OFFSET = 2;\nconst MINIMAL_DRAG_DISTANCE = 5;\nconst offsets = {\n  topLeft: {\n    x: POINTER_OFFSET,\n    y: POINTER_OFFSET\n  },\n  topRight: {\n    x: -POINTER_OFFSET,\n    y: POINTER_OFFSET\n  },\n  bottomLeft: {\n    x: POINTER_OFFSET,\n    y: -POINTER_OFFSET\n  },\n  bottomRight: {\n    x: -POINTER_OFFSET,\n    y: -POINTER_OFFSET\n  }\n};\n/**\n * @hidden\n */\n\nclass GridMarqueeDirective {\n  constructor(draggable, selection, cellSelection, domEvents) {\n    this.draggable = draggable;\n    this.selection = selection;\n    this.cellSelection = cellSelection;\n    this.domEvents = domEvents;\n    this.selectionStarted = false;\n  }\n\n  get webkitUserSelection() {\n    return this.cellSelection.enableMarquee || this.selection.enableMarquee ? 'none' : null;\n  }\n\n  get userSelection() {\n    return this.cellSelection.enableMarquee || this.selection.enableMarquee;\n  }\n\n  ngOnInit() {\n    this.subscriptions = this.draggable.kendoPress.subscribe(this.start.bind(this));\n    this.subscriptions.add(this.draggable.kendoDrag.subscribe(this.moveMarquee.bind(this)));\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n    this.clean();\n  }\n\n  start(args) {\n    const isInvalidTarget = args.originalEvent.target.matches('.k-grid-content, .k-grid-content-locked, .k-grid-aria-root, .k-checkbox');\n\n    if (isInvalidTarget) {\n      this.pressArgs = null;\n      return;\n    }\n\n    this.pressArgs = args;\n    this.pressTarget = null;\n  }\n\n  moveMarquee(args) {\n    if (!this.pressTarget) {\n      this.pressTarget = this.cellSelection.active ? this.cellSelection.mouseDownEventArgs : this.selection.mouseDownEventArgs;\n    }\n\n    const press = this.pressArgs;\n\n    if (!press) {\n      return;\n    }\n\n    if (!this.selectionStarted) {\n      const distance = Math.sqrt(Math.pow(args.pageX - press.pageX, 2) + Math.pow(args.pageY - press.pageY, 2));\n\n      if (distance > MINIMAL_DRAG_DISTANCE) {\n        this.selectionStarted = true;\n        this.dragEndSubscription = merge(this.domEvents.cellMouseup.pipe(take(1)), this.draggable.kendoRelease.pipe(delay(1), take(1))).subscribe(this.endSelection.bind(this));\n      } else {\n        return;\n      }\n    }\n\n    this.initMarquee();\n    const element = this.marqueeElement;\n    const marqueeQuadrant = this.getMarqueeQuadrant(args.pageX, args.pageY, press.pageX, press.pageY);\n    let left = Math.min(args.pageX, press.pageX);\n    let top = Math.min(args.pageY, press.pageY);\n    const width = Math.abs(args.pageX - press.pageX);\n    const height = Math.abs(args.pageY - press.pageY);\n\n    if (marqueeQuadrant) {\n      left += offsets[marqueeQuadrant].x;\n      top += offsets[marqueeQuadrant].y;\n    }\n\n    element.style.left = `${left}px`;\n    element.style.top = `${top}px`;\n    element.style.width = `${width}px`;\n    element.style.height = `${height}px`;\n  }\n\n  endSelection(args) {\n    if (args.type === 'mouseup' || args.type === 'touchend') {\n      if (this.cellSelection.active) {\n        this.cellSelection.dragging = true;\n        this.cellSelection.changes.emit(this.cellSelection.selectRange(this.pressTarget.rowIndex, this.pressTarget.column.leafIndex, args.rowIndex, args.column.leafIndex));\n      } else if (this.selection.active) {\n        this.selection.dragging = true;\n        this.selection.changes.emit(this.selection.selectRange(this.pressTarget.rowIndex, args.rowIndex));\n      }\n    }\n\n    this.clean();\n  }\n\n  clean() {\n    if (this.marqueeElement) {\n      document.body.removeChild(this.marqueeElement);\n      this.marqueeElement = null;\n    }\n\n    if (this.dragEndSubscription) {\n      this.dragEndSubscription.unsubscribe();\n    }\n\n    this.dragEndSubscription = null;\n    this.pressTarget = null;\n    this.pressArgs = null;\n    this.selectionStarted = false; // eslint-disable-next-line no-unused-expressions\n\n    this.cellSelection.active ? this.cellSelection.dragging = false : this.selection.dragging = false;\n  }\n\n  initMarquee() {\n    if (!this.marqueeElement) {\n      this.marqueeElement = createElement$1();\n      document.body.appendChild(this.marqueeElement);\n    }\n  }\n\n  getMarqueeQuadrant(pointerX, pointerY, startX, startY) {\n    const leftHalf = pointerX < startX;\n    const rightHalf = pointerX > startX;\n    const topHalf = pointerY < startY;\n    const bottomHalf = pointerY > startY;\n\n    if (leftHalf && topHalf) {\n      return 'topLeft';\n    }\n\n    if (leftHalf && bottomHalf) {\n      return 'bottomLeft';\n    }\n\n    if (rightHalf && topHalf) {\n      return 'topRight';\n    }\n\n    if (rightHalf && bottomHalf) {\n      return 'bottomRight';\n    }\n\n    return null;\n  }\n\n}\n\nGridMarqueeDirective.ɵfac = function GridMarqueeDirective_Factory(t) {\n  return new (t || GridMarqueeDirective)(i0.ɵɵdirectiveInject(i1$1.DraggableDirective), i0.ɵɵdirectiveInject(SelectionService), i0.ɵɵdirectiveInject(CellSelectionService), i0.ɵɵdirectiveInject(DomEventsService));\n};\n\nGridMarqueeDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GridMarqueeDirective,\n  selectors: [[\"\", \"kendoGridSelectionMarquee\", \"\"]],\n  hostVars: 4,\n  hostBindings: function GridMarqueeDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"-webkit-user-select\", ctx.webkitUserSelection);\n      i0.ɵɵclassProp(\"user-select-none\", ctx.userSelection);\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridMarqueeDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridSelectionMarquee]'\n    }]\n  }], function () {\n    return [{\n      type: i1$1.DraggableDirective\n    }, {\n      type: SelectionService\n    }, {\n      type: CellSelectionService\n    }, {\n      type: DomEventsService\n    }];\n  }, {\n    webkitUserSelection: [{\n      type: HostBinding,\n      args: ['style.-webkit-user-select']\n    }],\n    userSelection: [{\n      type: HostBinding,\n      args: ['class.user-select-none']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass ZoneAwareEventEmitter extends EventEmitter {\n  constructor(ngZone, isAsync = false) {\n    super(isAsync);\n    this.ngZone = ngZone;\n  }\n\n  subscribe(generatorOrNext, error, complete) {\n    let schedulerFn;\n\n    let errorFn = _ => null;\n\n    let completeFn = () => null;\n\n    if (generatorOrNext && typeof generatorOrNext === 'object') {\n      schedulerFn = value => {\n        this.ngZone.run(() => generatorOrNext.next(value));\n      };\n\n      if (generatorOrNext.error) {\n        errorFn = err => {\n          this.ngZone.run(() => generatorOrNext.error(err));\n        };\n      }\n\n      if (generatorOrNext.complete) {\n        completeFn = () => {\n          this.ngZone.run(() => generatorOrNext.complete());\n        };\n      }\n    } else {\n      schedulerFn = value => {\n        this.ngZone.run(() => generatorOrNext(value));\n      };\n\n      if (error) {\n        errorFn = err => {\n          this.ngZone.run(() => error(err));\n        };\n      }\n\n      if (complete) {\n        completeFn = () => {\n          this.ngZone.run(() => complete());\n        };\n      }\n    }\n\n    return super.subscribe(schedulerFn, errorFn, completeFn);\n  }\n\n}\n/**\n * @hidden\n */\n\n\nconst packageMetadata = {\n  name: '@progress/kendo-angular-grid',\n  productName: 'Kendo UI for Angular',\n  productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n  publishDate: 1668698270,\n  version: '',\n  licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/?utm_medium=product&utm_source=kendoangular&utm_campaign=kendo-ui-angular-purchase-license-keys-warning'\n};\n/**\n * Represents the column cell template of the Grid ([more information and example]({% slug templates_columns_grid %}#toc-cell-template)).\n * Helps to customize the content of the cells. To define the cell template, nest an `<ng-template>` tag\n * with the `kendoGridCellTemplate` directive inside a `<kendo-grid-column>` tag.\n *\n * The template context is set to the current data item and the following additional fields are passed:\n * - `columnIndex`&mdash;The current column index. Use it as an alias for a template variable by utilizing the `let-columnIndex=\"columnIndex\"` syntax.\n * - `rowIndex`&mdash;The current data row index. Use it as an alias for a template variable by utilizing the `let-rowIndex=\"rowIndex\"` syntax.\n * - `dataItem`&mdash;The current data item. Represents the default context that will be assigned to any template variable which utilizes the `let-x` syntax&mdash;for example, `let-dataItem`.\n * - `column`&mdash;The current column instance. Use it as an alias for a template variable by utilizing the `let-column=\"column\"` syntax.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\n *                     Data Row #: {{rowIndex}} /\n *                     <strong>{{dataItem.ProductName}}</strong>\n *                     ({{dataItem.Discontinued ? \"discontinued\" : \"active\"}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\n\nclass CellTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nCellTemplateDirective.ɵfac = function CellTemplateDirective_Factory(t) {\n  return new (t || CellTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nCellTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CellTemplateDirective,\n  selectors: [[\"\", \"kendoGridCellTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridCellTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents the group-header cell template of the Grid which helps to customize the content of the group header item.\n * To define the group header template, nest an `<ng-template>` tag with the `kendoGridGroupHeaderTemplate`\n * directive inside `<kendo-grid-column>`.\n *\n * The template context is set to the current data item and the following additional fields are passed:\n * - `group`&mdash;The current group item.\n * - `field`&mdash;The name of the field by which data is grouped.\n * - `value`&mdash;The current group value.\n * - `aggregates`&mdash;All aggregate values for the current group.\n * - `index`&mdash;The index of the current group.\n * - `expanded`&mdash;A boolean value indicating if the group is currently expanded.\n * ([see example]({% slug groupable_grid_with_aggregates %})).\n *\n * @example\n * ```ts\n * import { process } from '@progress/kendo-data-query';\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\" [group]=\"groups\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridGroupHeaderTemplate let-group let-field=\"field\" let-value=\"value\">\n *                    <strong>{{field}}</strong>: {{value}}\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public groups = [{ field: \"ProductName\" }];\n *\n *     public gridData = process([{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ], {\n *      group: this.groups\n *     });\n * }\n *\n * ```\n */\n\n\nclass GroupHeaderTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nGroupHeaderTemplateDirective.ɵfac = function GroupHeaderTemplateDirective_Factory(t) {\n  return new (t || GroupHeaderTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nGroupHeaderTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GroupHeaderTemplateDirective,\n  selectors: [[\"\", \"kendoGridGroupHeaderTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GroupHeaderTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridGroupHeaderTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents the group-header column template of the Grid which helps to customize the content of the group headers.\n * To define the group header template, nest an `<ng-template>` tag with the `kendoGridGroupHeaderColumnTemplate`\n * directive inside `<kendo-grid-column>`. ([See example]({% slug groupable_grid_with_aggregates %})).\n *\n * The template context is set to the current data item and the following additional fields are passed:\n * - `group`&mdash;The current group item.\n * - `field`&mdash;The name of the field by which data is grouped.\n * - `value`&mdash;The current group value.\n * - `aggregates`&mdash;All aggregate values for the current group.\n *\n * @example\n * ```ts\n * <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *     <ng-template kendoGridGroupHeaderColumnTemplate let-group=\"group\" let-aggregates=\"aggregates\">\n *         <span title=\"Group Header Column Template for ProductName\">\n *             Count: {{ aggregates.Discontinued.count }}\n *         </span>\n *     </ng-template>\n * </kendo-grid-column>\n * ```\n */\n\n\nclass GroupHeaderColumnTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nGroupHeaderColumnTemplateDirective.ɵfac = function GroupHeaderColumnTemplateDirective_Factory(t) {\n  return new (t || GroupHeaderColumnTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nGroupHeaderColumnTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GroupHeaderColumnTemplateDirective,\n  selectors: [[\"\", \"kendoGridGroupHeaderColumnTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GroupHeaderColumnTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridGroupHeaderColumnTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents the column edit-cell template of the Grid ([see example]({% slug inline_editing_grid %}#toc-using-reactive-forms)).\n * Helps to customize the content of the edited cells. To define the cell template, nest an `<ng-template>`\n * tag with the `kendoGridEditTemplate` directive inside a `<kendo-grid-column>` tag.\n *\n * The template context is set to the current form group and the following additional fields are passed:\n * - `formGroup`&mdash;The current [FormGroup](link:site.data.urls.angular['formgroupapi']).\n * Represents the default context that will be assigned to any template variable which utilizes the `let-x` syntax&mdash;for example, `let-formGroup`.\n * If you use the Grid inside [Template-Driven Forms](link:site.data.urls.angular['forms']), it will be `undefined`.\n * - `rowIndex`&mdash;The current data row index. If inside a new item row, `rowIndex` is `-1`. Use it as an alias for a template variable by utilizing the `let-rowIndex=\"rowIndex\"` syntax.\n * - `dataItem`&mdash;The current data item. Use it as an alias for a template variable by utilizing the `let-dataItem=\"dataItem\"` syntax.\n * - `column`&mdash;The current column instance. Use it as an alias for a template variable by utilizing the `let-column=\"column\"` syntax.\n * - `isNew`&mdash;The state of the current item. Use it as an alias for a template variable by utilizing the `let-isNew=\"isNew\"` syntax.\n */\n\n\nclass EditTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nEditTemplateDirective.ɵfac = function EditTemplateDirective_Factory(t) {\n  return new (t || EditTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nEditTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: EditTemplateDirective,\n  selectors: [[\"\", \"kendoGridEditTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridEditTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents the column group footer cell template of the Grid which helps to customize the group footer cell for the column.\n * To define the group footer template, nest an `<ng-template>` tag with the `kendoGridGroupFooterTemplate` directive\n * inside `<kendo-grid-column>`.\n *\n * The template context is set to the current aggregates and the following additional fields are passed:\n * - `column`&mdash;Defines an instance of the `ColumnComponent` option.\n * - `field`&mdash;The current column field name.\n * - `group`&mdash;The current group data item.\n * - `aggregates`&mdash;All aggregate values for the current group.\n *\n * @example\n * ```ts-preview\n * import { process } from '@progress/kendo-data-query';\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\" [group]=\"groups\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridGroupFooterTemplate let-aggregates let-field=\"field\">\n *                    Count: {{aggregates[field].count}}\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public groups = [{ field: \"ProductName\", aggregates: [{ field: \"ProductName\", aggregate: \"count\" }] }];\n *\n *     public gridData = process([{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ], {\n *      group: this.groups\n *     });\n * }\n * ```\n */\n\n\nclass GroupFooterTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nGroupFooterTemplateDirective.ɵfac = function GroupFooterTemplateDirective_Factory(t) {\n  return new (t || GroupFooterTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nGroupFooterTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GroupFooterTemplateDirective,\n  selectors: [[\"\", \"kendoGridGroupFooterTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GroupFooterTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridGroupFooterTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents the column header cell template of the Grid\n * ([more information and example]({% slug templates_columns_grid %}#toc-header-template)).\n * Helps to customize the table header cell for the column.\n * To define a header template, nest an `<ng-template>` tag with the\n * [kendoGridHeaderTemplate]({% slug api_grid_headertemplatedirective %}) directive inside the `<kendo-grid-column>` tag.\n *\n *  The template context is set to the current column and then the following additional fields are passed:\n * * `column`&mdash;Defines an instance of the [ColumnComponent]({% slug api_grid_columncomponent %}) option.\n * * `columnIndex`&mdash;Defines the current column index.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridHeaderTemplate let-column let-columnIndex=\"columnIndex\">\n *                   {{column.field}}({{columnIndex}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *              <kendo-grid-column field=\"UnitPrice\">\n *                 <ng-template kendoGridHeaderTemplate let-column let-columnIndex=\"columnIndex\">\n *                   {{column.field}}({{columnIndex}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\n\n\nclass HeaderTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nHeaderTemplateDirective.ɵfac = function HeaderTemplateDirective_Factory(t) {\n  return new (t || HeaderTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nHeaderTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: HeaderTemplateDirective,\n  selectors: [[\"\", \"kendoGridHeaderTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeaderTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridHeaderTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents the column footer cell template of the Grid\n * ([more information and example]({% slug templates_columns_grid %}#toc-footer-template)).\n * Helps to customize the table footer cell for the column.\n * To define a footer template, nest an `<ng-template>` tag with the\n * [kendoGridFooterTemplate]({% slug api_grid_footertemplatedirective %}) directive inside the `<kendo-grid-column>` tag.\n *\n * The template context is set to the current column and the following additional fields are passed:\n * * `column`&mdash;Defines an instance of the [ColumnComponent]({% slug api_grid_columncomponent %}) option.\n * * `columnIndex`&mdash;Defines the current column index.\n *\n * For more information on how to display aggregates in the footer of the Grid,\n * refer to the article on [aggregates]({% slug groupable_grid_with_aggregates %}).\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\" scrollable=\"none\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridFooterTemplate let-column let-columnIndex=\"columnIndex\">\n *                   {{column.field}}({{columnIndex}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *              <kendo-grid-column field=\"UnitPrice\">\n *                 <ng-template kendoGridFooterTemplate let-column let-columnIndex=\"columnIndex\">\n *                   {{column.field}}({{columnIndex}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\n\n\nclass FooterTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nFooterTemplateDirective.ɵfac = function FooterTemplateDirective_Factory(t) {\n  return new (t || FooterTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nFooterTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FooterTemplateDirective,\n  selectors: [[\"\", \"kendoGridFooterTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FooterTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridFooterTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents the template for the column menu in the Grid. Provides an option for\n * customizing the content of the column menu for all or for specific columns.\n * To define the content template, nest an `<ng-template>` tag with the\n * `kendoGridColumnMenuTemplate` directive inside the `kendo-grid` or the `<kendo-grid-column>` component.\n *\n * The template context is passes through the following fields:\n * - `service`&mdash;Represents the [ColumnMenuService]({% slug api_grid_columnmenuservice %}).\n * - `column`&mdash;Represents the Grid column.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [kendoGridBinding]=\"data\" [sortable]=\"true\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-sort [service]=\"service\">\n *              </kendo-grid-columnmenu-sort>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\" [width]=\"100\">\n *              <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *                  <kendo-grid-columnmenu-lock [service]=\"service\">\n *                  </kendo-grid-columnmenu-lock>\n *                  <kendo-grid-columnmenu-sort [service]=\"service\">\n *                  </kendo-grid-columnmenu-sort>\n *              </ng-template>\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [width]=\"100\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }, { Field1: 'Foo1', Field2: 'Bar1' }];\n * }\n *\n * ```\n */\n\n\nclass ColumnMenuTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nColumnMenuTemplateDirective.ɵfac = function ColumnMenuTemplateDirective_Factory(t) {\n  return new (t || ColumnMenuTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nColumnMenuTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ColumnMenuTemplateDirective,\n  selectors: [[\"\", \"kendoGridColumnMenuTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnMenuTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridColumnMenuTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})(); // Incremented each time the service is instantiated.\n\n\nlet sequence = 0;\n/**\n * @hidden\n */\n\nclass IdService {\n  constructor() {\n    this.prefix = `k-grid${sequence++}`;\n  }\n\n  gridId() {\n    return this.prefix;\n  }\n\n  cellId(rowIndex, colIndex) {\n    return `${this.prefix}-r${rowIndex}c${colIndex}`;\n  }\n\n  selectionCheckboxId(itemIndex) {\n    return `${this.prefix}-checkbox${itemIndex}`;\n  }\n\n  selectAllCheckboxId() {\n    return `${this.prefix}-select-all`;\n  }\n\n}\n\nIdService.ɵfac = function IdService_Factory(t) {\n  return new (t || IdService)();\n};\n\nIdService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: IdService,\n  factory: IdService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IdService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nconst isSpanColumn = column => column.isSpanColumn;\n/**\n * @hidden\n */\n\n\nconst isCheckboxColumn = column => column.isCheckboxColumn;\n\nconst isColumnContainer = column => column.isColumnGroup || isSpanColumn(column);\n/**\n * The base class for the column components of the Grid.\n */\n\n\nclass ColumnBase {\n  /**\n   * @hidden\n   */\n  constructor(parent, idService) {\n    this.parent = parent;\n    /**\n     * @hidden\n     */\n\n    this.matchesMedia = true;\n    /**\n     * The column index after reordering.\n     *\n     * > `orderIndex` is a read-only property. Setting this field does not affect column order.\n     */\n\n    this.orderIndex = 0;\n    /**\n     * @hidden\n     */\n\n    this.isColumnGroup = false;\n    /**\n     * @hidden\n     */\n\n    this.isSpanColumn = false;\n    /**\n     * Indicates whether the column is resizable.\n     * @default true\n     */\n\n    this.resizable = true;\n    /**\n     * Indicates whether the column is reorderable.\n     * @default true\n     */\n\n    this.reorderable = true;\n    /**\n     * The width (in pixels) below which the user is not able to resize the column by using the UI ([see example]({% slug resizing_columns_grid %}#toc-limiting-the-resizing)).\n     * @default 10\n     */\n\n    this.minResizableWidth = 10;\n    this._locked = false;\n    /**\n     * Determines whether the column will be always visible when scrolling the Grid horizontally.\n     *\n     * @default false\n     */\n\n    this.sticky = false;\n    /**\n     * Specifies if the column can be locked or unlocked from the column menu or by reordering the columns.\n     */\n\n    this.lockable = true;\n    /**\n     * Specifies if the column can be stuck or unstuck from the column menu.\n     */\n\n    this.stickable = true;\n    /**\n     * Specifies if the column menu will be shown for the column.\n     */\n\n    this.columnMenu = true;\n    /**\n     * Specifies if the column will be included in the column-chooser list.\n     */\n\n    this.includeInChooser = true;\n    /**\n     * @hidden\n     */\n\n    this.headerTemplates = new QueryList();\n    /**\n     * @hidden\n     */\n\n    this.columnMenuTemplates = new QueryList();\n    this.idService = idService;\n\n    if (parent && idService && parent.idService.gridId() === idService.gridId() && !isColumnContainer(parent)) {\n      throw new Error('Columns can be nested only inside ColumnGroupComponent');\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  set leafIndex(value) {\n    this._leafIndex = value;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get leafIndex() {\n    return this._leafIndex;\n  }\n  /**\n   * The width of the column (in pixels).\n   */\n\n\n  set width(value) {\n    if (typeof value === 'string') {\n      const parsedValue = this._width = parseInt(value, 10);\n\n      if (isDevMode()) {\n        console.warn(`Expected numeric value for column width, but got a string \"${value}\". Treating as ${parsedValue}px.`);\n      }\n    } else {\n      this._width = value;\n    }\n  }\n\n  get width() {\n    return this._width;\n  }\n  /**\n   * Toggles the locked (frozen) state of the columns ([more information and example]({% slug locked_columns_grid %})).\n   *\n   * @default false\n   *\n   * @example\n   * ```ts\n   * _@Component({\n   *    selector: 'my-app',\n   *    template: `\n   *        <kendo-grid [data]=\"gridData\" [scrollable]=\"scrollable\" style=\"height: 200px\">\n   *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" [width]=\"120\" [locked]=\"true\">\n   *          </kendo-grid-column>\n   *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\" [width]=\"200\">\n   *          </kendo-grid-column>\n   *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" [width]=\"230\">\n   *          </kendo-grid-column>\n   *        </kendo-grid>\n   *    `\n   * })\n   *\n   * class AppComponent {\n   *    public gridData: any[];\n   *\n   *    constructor() {\n   *        this.gridData = products;\n   *    }\n   * }\n   *\n   * const products = [{\n   *    \"ProductID\": 1,\n   *    \"ProductName\": \"Chai\",\n   *    \"UnitPrice\": 18.0000,\n   *    \"Discontinued\": true\n   *  }, {\n   *    \"ProductID\": 2,\n   *    \"ProductName\": \"Chang\",\n   *    \"UnitPrice\": 19.0000,\n   *    \"Discontinued\": false\n   *  }\n   * ];\n   *\n   * ```\n   */\n\n\n  set locked(value) {\n    this._locked = value;\n  }\n\n  get locked() {\n    return this._locked;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get level() {\n    if (this.parent && isSpanColumn(this.parent)) {\n      return this.parent.level;\n    }\n\n    return this.parent ? this.parent.level + 1 : 0;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get isLocked() {\n    return this.parent ? this.parent.isLocked : this.locked;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get colspan() {\n    return 1;\n  }\n  /**\n   * @hidden\n   */\n\n\n  rowspan(totalColumnLevels) {\n    return this.level < totalColumnLevels ? totalColumnLevels - this.level + 1 : 1;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get headerTemplateRef() {\n    const template = this.headerTemplates.first;\n    return template ? template.templateRef : undefined;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get footerTemplateRef() {\n    return this.footerTemplate ? this.footerTemplate.templateRef : undefined;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get columnMenuTemplateRef() {\n    const template = this.columnMenuTemplates.first;\n    return template ? template.templateRef : null;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get displayTitle() {\n    return this.title;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get isVisible() {\n    return !this.hidden && this.matchesMedia;\n  }\n\n}\n\nColumnBase.ɵfac = function ColumnBase_Factory(t) {\n  return new (t || ColumnBase)(i0.ɵɵdirectiveInject(ColumnBase), i0.ɵɵdirectiveInject(IdService));\n};\n\nColumnBase.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnBase,\n  selectors: [[\"kendo-grid-column-base\"]],\n  contentQueries: function ColumnBase_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, FooterTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, HeaderTemplateDirective, 4);\n      i0.ɵɵcontentQuery(dirIndex, ColumnMenuTemplateDirective, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTemplates = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.columnMenuTemplates = _t);\n    }\n  },\n  inputs: {\n    resizable: \"resizable\",\n    reorderable: \"reorderable\",\n    minResizableWidth: \"minResizableWidth\",\n    maxResizableWidth: \"maxResizableWidth\",\n    title: \"title\",\n    width: \"width\",\n    autoSize: \"autoSize\",\n    locked: \"locked\",\n    sticky: \"sticky\",\n    hidden: \"hidden\",\n    media: \"media\",\n    lockable: \"lockable\",\n    stickable: \"stickable\",\n    columnMenu: \"columnMenu\",\n    includeInChooser: \"includeInChooser\",\n    style: \"style\",\n    headerStyle: \"headerStyle\",\n    filterStyle: \"filterStyle\",\n    footerStyle: \"footerStyle\",\n    cssClass: [\"class\", \"cssClass\"],\n    headerClass: \"headerClass\",\n    filterClass: \"filterClass\",\n    footerClass: \"footerClass\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function ColumnBase_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnBase, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-column-base',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: ColumnBase\n    }, {\n      type: IdService\n    }];\n  }, {\n    resizable: [{\n      type: Input\n    }],\n    reorderable: [{\n      type: Input\n    }],\n    minResizableWidth: [{\n      type: Input\n    }],\n    maxResizableWidth: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    autoSize: [{\n      type: Input\n    }],\n    locked: [{\n      type: Input\n    }],\n    sticky: [{\n      type: Input\n    }],\n    hidden: [{\n      type: Input\n    }],\n    media: [{\n      type: Input\n    }],\n    lockable: [{\n      type: Input\n    }],\n    stickable: [{\n      type: Input\n    }],\n    columnMenu: [{\n      type: Input\n    }],\n    includeInChooser: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    headerStyle: [{\n      type: Input\n    }],\n    filterStyle: [{\n      type: Input\n    }],\n    footerStyle: [{\n      type: Input\n    }],\n    cssClass: [{\n      type: Input,\n      args: ['class']\n    }],\n    headerClass: [{\n      type: Input\n    }],\n    filterClass: [{\n      type: Input\n    }],\n    footerClass: [{\n      type: Input\n    }],\n    headerTemplates: [{\n      type: ContentChildren,\n      args: [HeaderTemplateDirective, {\n        descendants: false\n      }]\n    }],\n    footerTemplate: [{\n      type: ContentChild,\n      args: [FooterTemplateDirective, {\n        static: false\n      }]\n    }],\n    columnMenuTemplates: [{\n      type: ContentChildren,\n      args: [ColumnMenuTemplateDirective]\n    }]\n  });\n})();\n/**\n * Represents the filter-cell template ([see example]({% slug filter_row %}#toc-custom-filters)).\n */\n\n\nclass FilterCellTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nFilterCellTemplateDirective.ɵfac = function FilterCellTemplateDirective_Factory(t) {\n  return new (t || FilterCellTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nFilterCellTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FilterCellTemplateDirective,\n  selectors: [[\"\", \"kendoGridFilterCellTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterCellTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridFilterCellTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents the filter-menu template\n * ([see example]({% slug filter_menu %}#toc-custom-filters)).\n */\n\n\nclass FilterMenuTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nFilterMenuTemplateDirective.ɵfac = function FilterMenuTemplateDirective_Factory(t) {\n  return new (t || FilterMenuTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nFilterMenuTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FilterMenuTemplateDirective,\n  selectors: [[\"\", \"kendoGridFilterMenuTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterMenuTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridFilterMenuTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nfunction isColumnComponent(column) {\n  return isPresent(column.field);\n}\n/**\n * Represents the columns of the [Angular Data Grid]({% slug overview_grid %}).\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" [width]=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" [width]=\"230\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"Discontinued\" [width]=\"120\">\n *              <ng-template kendoGridCellTemplate let-dataItem>\n *                  <input type=\"checkbox\" [checked]=\"dataItem.Discontinued\" disabled/>\n *              </ng-template>\n *          </kendo-grid-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\n\n\nclass ColumnComponent extends ColumnBase {\n  constructor(parent, idService) {\n    super(parent, idService);\n    /**\n     * Allows the column headers to be clicked and the `sortChange` event emitted.\n     * You have to handle the `sortChange` event yourself and sort the data.\n     */\n\n    this.sortable = true;\n    /**\n     * Determines if the column can be dragged to the group panel. The default value is `true`.\n     * If set to `false`, you can group the columns by the column field by using the API of the Grid.\n     */\n\n    this.groupable = true;\n    /**\n     * Defines the editor type ([see example]({% slug inline_editing_grid %}#toc-using-reactive-forms)).\n     * Used when the column enters the edit mode. The default value is `text`.\n     *\n     * @example\n     * ```html-no-run\n     * <kendo-grid>\n     *    <kendo-grid-column field=\"UnitPrice\" editor=\"numeric\">\n     *    </kendo-grid-column>\n     * </kendo-grid>\n     * ```\n     */\n\n    this.editor = 'text';\n    /**\n     * Defines the filter type that is displayed inside the filter row. The default value is `text`.\n     *\n     * @example\n     * ```html-no-run\n     * <kendo-grid>\n     *    <kendo-grid-column field=\"UnitPrice\" filter=\"numeric\">\n     *    </kendo-grid-column>\n     * </kendo-grid>\n     * ```\n     */\n\n    this.filter = 'text';\n    /**\n     * Defines if a filter UI will be displayed for this column. The default value is `true`.\n     *\n     * @example\n     * ```html-no-run\n     * <kendo-grid>\n     *    <kendo-grid-column field=\"UnitPrice\" [filterable]=\"false\">\n     *    </kendo-grid-column>\n     * </kendo-grid>\n     * ```\n     */\n\n    this.filterable = true;\n    /**\n     * Defines whether the column is editable. The default value is `true`.\n     *\n     * @example\n     * ```html-no-run\n     * <kendo-grid>\n     *    <kendo-grid-column field=\"UnitPrice\" [editable]=\"false\">\n     *    </kendo-grid-column>\n     * </kendo-grid>\n     * ```\n     */\n\n    this.editable = true;\n  }\n\n  get templateRef() {\n    return this.template ? this.template.templateRef : undefined;\n  }\n\n  get groupHeaderTemplateRef() {\n    return this.groupHeaderTemplate ? this.groupHeaderTemplate.templateRef : undefined;\n  }\n\n  get groupHeaderColumnTemplateRef() {\n    return this.groupHeaderColumnTemplate ? this.groupHeaderColumnTemplate.templateRef : undefined;\n  }\n\n  get groupFooterTemplateRef() {\n    return this.groupFooterTemplate ? this.groupFooterTemplate.templateRef : undefined;\n  }\n\n  get editTemplateRef() {\n    return this.editTemplate ? this.editTemplate.templateRef : undefined;\n  }\n\n  get filterCellTemplateRef() {\n    return this.filterCellTemplate ? this.filterCellTemplate.templateRef : undefined;\n  }\n\n  get filterMenuTemplateRef() {\n    return this.filterMenuTemplate ? this.filterMenuTemplate.templateRef : undefined;\n  }\n\n  get displayTitle() {\n    return this.title === undefined ? this.field : this.title;\n  }\n\n}\n\nColumnComponent.ɵfac = function ColumnComponent_Factory(t) {\n  return new (t || ColumnComponent)(i0.ɵɵdirectiveInject(ColumnBase, 13), i0.ɵɵdirectiveInject(IdService, 8));\n};\n\nColumnComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnComponent,\n  selectors: [[\"kendo-grid-column\"]],\n  contentQueries: function ColumnComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, CellTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, GroupHeaderTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, GroupHeaderColumnTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, GroupFooterTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, EditTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, FilterCellTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, FilterMenuTemplateDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.groupHeaderTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.groupHeaderColumnTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.groupFooterTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filterCellTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filterMenuTemplate = _t.first);\n    }\n  },\n  inputs: {\n    field: \"field\",\n    format: \"format\",\n    sortable: \"sortable\",\n    groupable: \"groupable\",\n    editor: \"editor\",\n    filter: \"filter\",\n    filterable: \"filterable\",\n    editable: \"editable\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ColumnBase,\n    useExisting: forwardRef(() => ColumnComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function ColumnComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: ColumnBase,\n        useExisting: forwardRef(() => ColumnComponent)\n      }],\n      selector: 'kendo-grid-column',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: ColumnBase,\n      decorators: [{\n        type: SkipSelf\n      }, {\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: IdService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    field: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    sortable: [{\n      type: Input\n    }],\n    groupable: [{\n      type: Input\n    }],\n    editor: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input\n    }],\n    template: [{\n      type: ContentChild,\n      args: [CellTemplateDirective, {\n        static: false\n      }]\n    }],\n    groupHeaderTemplate: [{\n      type: ContentChild,\n      args: [GroupHeaderTemplateDirective, {\n        static: false\n      }]\n    }],\n    groupHeaderColumnTemplate: [{\n      type: ContentChild,\n      args: [GroupHeaderColumnTemplateDirective, {\n        static: false\n      }]\n    }],\n    groupFooterTemplate: [{\n      type: ContentChild,\n      args: [GroupFooterTemplateDirective, {\n        static: false\n      }]\n    }],\n    editTemplate: [{\n      type: ContentChild,\n      args: [EditTemplateDirective, {\n        static: false\n      }]\n    }],\n    filterCellTemplate: [{\n      type: ContentChild,\n      args: [FilterCellTemplateDirective, {\n        static: false\n      }]\n    }],\n    filterMenuTemplate: [{\n      type: ContentChild,\n      args: [FilterMenuTemplateDirective, {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nfunction isSpanColumnComponent(column) {\n  return column.isSpanColumn;\n}\n/**\n * Represents a column which can be spanned over multiple data cells while the individual\n * header and footer cells are retained ([see example]({% slug spanned_columns_grid %})).\n * Enables you to achieve more flexible layout while keeping the built-in UI element for\n * [sorting]({% slug sorting_grid %}), [filtering]({% slug filtering_grid %}), and\n * [grouping]({% slug grouping_grid %}). Wrap the columns that will be\n * merged inside the `<kendo-grid-span-column>` tag.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid\n *              [sortable]=\"true\"\n *              [filterable]=\"true\"\n *              [kendoGridBinding]=\"products\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" [width]=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-span-column>\n *              <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *              </kendo-grid-column>\n *              <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" filter=\"numeric\" [width]=\"180\" format=\"{0:c}\">\n *              </kendo-grid-column>\n *          </kendo-grid-span-column>\n *          <kendo-grid-column field=\"Discontinued\" [width]=\"120\" filter=\"boolean\">\n *              <ng-template kendoGridCellTemplate let-dataItem>\n *                  <input type=\"checkbox\" [checked]=\"dataItem.Discontinued\" disabled/>\n *              </ng-template>\n *          </kendo-grid-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *   public products = [{\n *      \"ProductID\": 1,\n *      \"ProductName\": \"Chai\",\n *      \"UnitPrice\": 18.0000,\n *      \"Discontinued\": true\n *    }, {\n *      \"ProductID\": 2,\n *      \"ProductName\": \"Chang\",\n *      \"UnitPrice\": 19.0000,\n *      \"Discontinued\": false\n *    }\n *   ];\n * }\n *\n * ```\n *\n * By default, the data cell displays the data for the specified fields. To further customize\n * the span-column functionality, use a [cell template]({% slug api_grid_celltemplatedirective %}).\n *\n * ```html-no-run\n * <kendo-grid-span-column>\n *  <kendo-grid-column field=\"field1\" title=\"Field 1\"></kendo-grid-column>\n *  <kendo-grid-column field=\"field2\" title=\"Field 2\"></kendo-grid-column>\n *    <ng-template kendoGridCellTemplate let-dataItem>\n *        <h5>{{ dataItem.field1 }}</h5>\n *        <p>{{ dataItem.field2 }}</p>\n *    </ng-template>\n *  </kendo-grid-span-column>\n * ```\n */\n\n\nclass SpanColumnComponent extends ColumnBase {\n  constructor(parent, idService) {\n    super(parent, idService);\n    /*\n     * @hidden\n     */\n\n    this.isSpanColumn = true;\n    this.template = new QueryList();\n    this.editTemplate = new QueryList();\n    /**\n     * @hidden\n     */\n\n    this.childColumns = new QueryList();\n    /**\n     * @hidden\n     */\n\n    this.includeInChooser = false;\n    this._editable = true;\n\n    if (parent && parent.isSpanColumn) {\n      throw new Error('SpanColumn cannot be nested inside another SpanColumn');\n    }\n  }\n  /**\n   * Defines whether the edit template of the column will be rendered. The default value is `false`.\n   *\n   * > To enable the editing functionality for a spanned column, set an edit template for it.\n   *\n   * @example\n   * ```html-no-run\n   * <kendo-grid>\n   *    <kendo-grid-span-column [editable]=\"false\">\n   *      <kendo-grid-column field=\"UnitPrice\">\n   *      </kendo-grid-column>\n   *      <kendo-grid-column field=\"ProductName\">\n   *      </kendo-grid-column>\n   *      <ng-template kendoGridEditTemplate>\n   *         .....\n   *      </ng-template>\n   *    </kendo-grid-span-column>\n   * </kendo-grid>\n   * ```\n   */\n\n\n  set editable(value) {\n    this._editable = value;\n  }\n\n  get editable() {\n    return isPresent(this.editTemplateRef) && this._editable;\n  }\n  /**\n   * @hidden\n   * added for backwards compitability\n   */\n\n\n  set width(_value) {}\n\n  get width() {\n    return this.childColumns.reduce((total, column) => total + column.width, 0);\n  }\n  /**\n   * @hidden\n   */\n\n\n  get leafIndex() {\n    return this.childColumns.first.leafIndex;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get templateRef() {\n    const template = this.template.first;\n    return template ? template.templateRef : undefined;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get editTemplateRef() {\n    const editTemplate = this.editTemplate.first;\n    return editTemplate ? editTemplate.templateRef : undefined;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get colspan() {\n    return this.childColumns.filter(c => c.isVisible).length;\n  }\n  /**\n   * Toggles the locked (frozen) state of the columns. Locked columns are visible\n   * at all times during the horizontal scrolling of the Grid.\n   *\n   * For the option to work properly, make sure that:\n   * - Scrolling is enabled.\n   * - The `height` option of the Grid is set.\n   * - The widths of all Grid columns are explicitly set in pixels. In this way,\n   * the Grid adjusts the layout of the locked and unlocked columns.\n   *\n   * @default false\n   *\n   * @example\n   * ```ts\n   * _@Component({\n   *    selector: 'my-app',\n   *    template: `\n   *        <kendo-grid [data]=\"gridData\" [scrollable]=\"scrollable\" style=\"height: 200px\">\n   *          <kendo-grid-span-column [locked]=\"true\">\n   *             <kendo-grid-column field=\"ProductID\" title=\"Product ID\" [width]=\"120\">\n   *             </kendo-grid-column>\n   *             <kendo-grid-column field=\"ProductName\" title=\"Product Name\" [width]=\"200\">\n   *             </kendo-grid-column>\n   *          </kendo-grid-span-column>\n   *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" [width]=\"230\">\n   *          </kendo-grid-column>\n   *        </kendo-grid>\n   *    `\n   * })\n   *\n   * class AppComponent {\n   *    public gridData: any[];\n   *\n   *    constructor() {\n   *        this.gridData = products;\n   *    }\n   * }\n   *\n   * const products = [{\n   *    \"ProductID\": 1,\n   *    \"ProductName\": \"Chai\",\n   *    \"UnitPrice\": 18.0000,\n   *    \"Discontinued\": true\n   *  }, {\n   *    \"ProductID\": 2,\n   *    \"ProductName\": \"Chang\",\n   *    \"UnitPrice\": 19.0000,\n   *    \"Discontinued\": false\n   *  }\n   * ];\n   *\n   * ```\n   */\n\n\n  set locked(value) {\n    this._locked = value;\n  }\n\n  get locked() {\n    return this._locked || this.childColumns.some(c => c.locked);\n  }\n\n  get childrenArray() {\n    return this.childColumns.toArray();\n  }\n\n  get hasChildren() {\n    return this.childColumns.length > 0;\n  }\n\n}\n\nSpanColumnComponent.ɵfac = function SpanColumnComponent_Factory(t) {\n  return new (t || SpanColumnComponent)(i0.ɵɵdirectiveInject(ColumnBase, 13), i0.ɵɵdirectiveInject(IdService, 8));\n};\n\nSpanColumnComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SpanColumnComponent,\n  selectors: [[\"kendo-grid-span-column\"]],\n  contentQueries: function SpanColumnComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, CellTemplateDirective, 4);\n      i0.ɵɵcontentQuery(dirIndex, EditTemplateDirective, 4);\n      i0.ɵɵcontentQuery(dirIndex, ColumnComponent, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editTemplate = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.childColumns = _t);\n    }\n  },\n  inputs: {\n    editable: \"editable\",\n    locked: \"locked\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ColumnBase,\n    useExisting: forwardRef(() => SpanColumnComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function SpanColumnComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SpanColumnComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: ColumnBase,\n        useExisting: forwardRef(() => SpanColumnComponent)\n      }],\n      selector: 'kendo-grid-span-column',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: ColumnBase,\n      decorators: [{\n        type: SkipSelf\n      }, {\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: IdService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    template: [{\n      type: ContentChildren,\n      args: [CellTemplateDirective, {\n        descendants: false\n      }]\n    }],\n    editTemplate: [{\n      type: ContentChildren,\n      args: [EditTemplateDirective, {\n        descendants: false\n      }]\n    }],\n    childColumns: [{\n      type: ContentChildren,\n      args: [ColumnComponent]\n    }],\n    editable: [{\n      type: Input\n    }],\n    locked: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nconst expandColumns = columns => columns.reduce((acc, column) => acc.concat(isSpanColumnComponent(column) ? column.childrenArray : [column]), []);\n/**\n * @hidden\n */\n\n\nconst expandColumnsWithSpan = columns => columns.reduce((acc, column) => acc.concat(isSpanColumnComponent(column) ? [column].concat(column.childrenArray) : [column]), []);\n/**\n * @hidden\n */\n\n\nconst columnsToRender = columns => expandColumns(columns).filter(x => x.isVisible);\n\nconst sumProp = prop => array => (array || []).reduce((prev, curr) => prev + (curr[prop] || 0), 0);\n/**\n * @hidden\n */\n\n\nconst sumColumnWidths = sumProp('width');\n/**\n * @hidden\n */\n\nconst columnsSpan = sumProp('colspan');\nconst validField = new RegExp(`^[$A-Z\\_a-z][$A-Z\\_a-z0-9\\\\.]*$`);\n/**\n * @hidden\n */\n\nconst isValidFieldName = fieldName => !isNullOrEmptyString(fieldName) && validField.test(fieldName) && fieldName[0] !== \".\" && fieldName[fieldName.length - 1] !== \".\";\n/**\n * @hidden\n */\n\n\nconst children = column => column.children.filter(child => child !== column);\n/**\n * @hidden\n */\n\n\nconst leafColumns = columns => {\n  return columns.reduce((acc, column) => {\n    if (column.isColumnGroup) {\n      acc = acc.concat(leafColumns(children(column)));\n    } else if (column.isSpanColumn) {\n      acc = acc.concat(column.childrenArray);\n    } else {\n      acc.push(column);\n    }\n\n    return acc;\n  }, []).filter(x => x.isVisible);\n};\n/**\n * @hidden\n */\n\n\nconst someLeafColumn = (callback, ...columns) => leafColumns(columns).some(callback);\n/**\n * @hidden\n */\n\n\nconst resizableColumns = columns => columns.filter(column => isTruthy(column.resizable) && column.isVisible);\n/**\n * @hidden\n */\n\n\nconst sortColumns = columns => orderBy(columns, [{\n  field: 'orderIndex',\n  dir: 'asc'\n}]);\n/**\n * @hidden\n */\n\n\nconst isInSpanColumn$1 = column => isTruthy(column.parent) && isSpanColumnComponent(column.parent);\n/**\n * @hidden\n */\n\n\nfunction isColumnGroupComponent(column) {\n  return column.isColumnGroup;\n}\n/**\n * Represents the column group header of the Grid\n * ([more information and examples]({% slug multicolumnheaders_columns_grid %})).\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *     <kendo-grid [data]=\"gridData\">\n *       <kendo-grid-column-group title=\"Product Info\">\n *         <ng-template kendoGridHeaderTemplate let-columnIndex=\"columnIndex\" let-column=\"column\">\n *               Column index: {{columnIndex}} / column title: {{column.title}}\n *         </ng-template>\n *         <kendo-grid-column field=\"ProductID\" title=\"Product ID\" [width]=\"120\">\n *         </kendo-grid-column>\n *         <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *         </kendo-grid-column>\n *       </kendo-grid-column-group>\n *       <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" [width]=\"230\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"Discontinued\" [width]=\"120\">\n *           <ng-template kendoGridCellTemplate let-dataItem>\n *               <input type=\"checkbox\" [checked]=\"dataItem.Discontinued\" disabled/>\n *           </ng-template>\n *       </kendo-grid-column>\n *     </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\n\n\nclass ColumnGroupComponent extends ColumnBase {\n  constructor(parent, idService) {\n    super(parent, idService);\n    this.parent = parent;\n    /**\n     * @hidden\n     */\n\n    this.includeInChooser = false;\n    /**\n     * @hidden\n     */\n\n    this.isColumnGroup = true;\n    /**\n     * @hidden\n     */\n\n    this.minResizableWidth = 10;\n\n    if (parent && parent.isSpanColumn) {\n      throw new Error('ColumnGroupComponent cannot be nested inside SpanColumnComponent');\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  rowspan() {\n    return 1;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get colspan() {\n    if (!this.children || this.children.length === 1) {\n      return 1;\n    }\n\n    return columnsSpan(this.children.filter(child => child !== this && child.isVisible));\n  }\n  /**\n   * @hidden\n   */\n\n\n  get leafIndex() {\n    return this.children ? (this.firstChild || {}).leafIndex : -1;\n  }\n\n  get childrenArray() {\n    return this.children.filter(c => c !== this);\n  }\n\n  get hasChildren() {\n    return Boolean(this.firstChild);\n  }\n\n  get firstChild() {\n    return this.children.find(column => column !== this);\n  }\n\n}\n\nColumnGroupComponent.ɵfac = function ColumnGroupComponent_Factory(t) {\n  return new (t || ColumnGroupComponent)(i0.ɵɵdirectiveInject(ColumnBase, 13), i0.ɵɵdirectiveInject(IdService, 8));\n};\n\nColumnGroupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnGroupComponent,\n  selectors: [[\"kendo-grid-column-group\"]],\n  contentQueries: function ColumnGroupComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ColumnBase, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.children = _t);\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ColumnBase,\n    useExisting: forwardRef(() => ColumnGroupComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function ColumnGroupComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnGroupComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: ColumnBase,\n        useExisting: forwardRef(() => ColumnGroupComponent)\n      }],\n      selector: 'kendo-grid-column-group',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: ColumnBase,\n      decorators: [{\n        type: SkipSelf\n      }, {\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: IdService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    children: [{\n      type: ContentChildren,\n      args: [ColumnBase]\n    }]\n  });\n})();\n/**\n * Represents the detail template of the Grid ([more information and examples]({% slug detailrowtemplate_grid %})).\n * To define the detail template, nest an `<ng-template>` tag with the `kendoGridDetailTemplate` directive inside a `<kendo-grid>` tag.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *   selector: 'my-app',\n *   template: `\n *       <kendo-grid\n *         [data]=\"data\"\n *         selectable=\"true\"\n *         style=\"height: 160px\"\n *         >\n *         <kendo-grid-column field=\"ProductID\"></kendo-grid-column>\n *         <kendo-grid-column field=\"ProductName\"></kendo-grid-column>\n *         <kendo-grid-column field=\"UnitPrice\"></kendo-grid-column>\n *         <ng-template kendoGridDetailTemplate let-dataItem>\n *           <div *ngIf=\"dataItem.Category\">\n *             <header>{{dataItem.Category?.CategoryName}}</header>\n *             <span>{{dataItem.Category?.Description}}</span>\n *           </div>\n *         </ng-template>\n *       </kendo-grid>\n *   `\n * })\n *\n * class AppComponent {\n *     public data = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false,\n *         \"Category\": {\n *             \"CategoryID\": 1,\n *             \"CategoryName\": \"Beverages\",\n *             \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n *         }\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": false,\n *         \"Category\": {\n *             \"CategoryID\": 1,\n *             \"CategoryName\": \"Beverages\",\n *             \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n *         }\n *       }, {\n *         \"ProductID\": 3,\n *         \"ProductName\": \"Aniseed Syrup\",\n *         \"UnitPrice\": 10.0000,\n *         \"Discontinued\": false,\n *         \"Category\": {\n *             \"CategoryID\": 2,\n *             \"CategoryName\": \"Condiments\",\n *             \"Description\": \"Sweet and savory sauces, relishes, spreads, and seasonings\"\n *         }\n *     }];\n *\n * }\n *\n * ```\n *\n */\n\n\nclass DetailTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n\n    this._condition = () => true;\n  }\n  /**\n   * Defines the function that indicates if a given detail row and the associated **Expand** or **Collapse** button will be displayed.\n   */\n\n\n  set showIf(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error(`showIf must be a function, but received ${JSON.stringify(fn)}.`);\n    }\n\n    this._condition = fn;\n  }\n\n  get showIf() {\n    return this._condition;\n  }\n\n}\n\nDetailTemplateDirective.ɵfac = function DetailTemplateDirective_Factory(t) {\n  return new (t || DetailTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nDetailTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DetailTemplateDirective,\n  selectors: [[\"\", \"kendoGridDetailTemplate\", \"\"]],\n  inputs: {\n    showIf: [\"kendoGridDetailTemplateShowIf\", \"showIf\"]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DetailTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridDetailTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    showIf: [{\n      type: Input,\n      args: [\"kendoGridDetailTemplateShowIf\"]\n    }]\n  });\n})();\n\nconst canCreateElement = () => isDocumentAvailable() && document.createElement;\n\nlet cachedScrollbarWidth = null;\nlet cachedPixelRatio;\nlet cachedRtlScrollLeft = null;\n\nfunction scrollbarWidth() {\n  if (cachedScrollbarWidth === null && canCreateElement()) {\n    cachedPixelRatio = window.devicePixelRatio || 1;\n    const div = document.createElement(\"div\");\n    div.style.cssText = \"overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block\";\n    div.innerHTML = \"&nbsp;\";\n    document.body.appendChild(div);\n    cachedScrollbarWidth = div.offsetWidth - div.scrollWidth;\n    document.body.removeChild(div);\n  }\n\n  return cachedScrollbarWidth;\n}\n\nfunction rtlScrollLeft() {\n  if (cachedRtlScrollLeft === null && canCreateElement()) {\n    const outer = document.createElement('div');\n    outer.style.direction = 'rtl';\n    outer.style.display = 'block';\n    outer.style.clear = 'both';\n    outer.style.width = '100px';\n    outer.style.visibility = 'hidden';\n    outer.style.position = 'absolute';\n    outer.style.left = '-10000px';\n    outer.style.overflow = 'scroll';\n    outer.style.zoom = '1';\n    const inner = document.createElement('div');\n    inner.style.width = '200px';\n    inner.style.height = '1px';\n    outer.append(inner);\n    document.body.appendChild(outer);\n    const initial = outer.scrollLeft;\n    outer.scrollLeft = -1;\n    cachedRtlScrollLeft = outer.scrollLeft < 0 ? outer.scrollLeft : initial;\n    document.body.removeChild(outer);\n  }\n\n  return cachedRtlScrollLeft;\n}\n/**\n * @hidden\n * move to kendo-common\n */\n\n\nclass BrowserSupportService {\n  constructor(zone, changeDetector) {\n    this.zone = zone;\n    this.changeDetector = changeDetector;\n    this.changes = new EventEmitter();\n\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    this.zone.runOutsideAngular(() => {\n      this.subscriptions = fromEvent(window, 'resize').pipe(auditTime(100)).subscribe(() => {\n        if (cachedPixelRatio !== window.devicePixelRatio) {\n          zone.run(() => {\n            cachedScrollbarWidth = null;\n            this.changes.emit();\n            this.changeDetector.markForCheck();\n          });\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n      this.subscriptions = null;\n    }\n  }\n\n  get scrollbarWidth() {\n    return scrollbarWidth();\n  }\n\n  get rtlScrollLeft() {\n    return rtlScrollLeft();\n  }\n\n}\n\nBrowserSupportService.ɵfac = function BrowserSupportService_Factory(t) {\n  return new (t || BrowserSupportService)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i0.ChangeDetectorRef));\n};\n\nBrowserSupportService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BrowserSupportService,\n  factory: BrowserSupportService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserSupportService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n\nconst isGroupItem = source => {\n  return source.items !== undefined && source.field !== undefined;\n};\n\nconst isVirtualGroupItem = source => {\n  return source.offset !== undefined && source.skipHeader !== undefined;\n};\n\nconst flattenGroups = groups => groups.reduce((acc, curr) => {\n  if (isGroupItem(curr)) {\n    return acc.concat(flattenGroups(curr.items));\n  }\n\n  return acc.concat([curr]);\n}, []);\n/**\n * @hidden\n */\n\n\nconst itemAt = (data, index) => {\n  const first = data[0];\n\n  if (isPresent(first) && isGroupItem(first)) {\n    return flattenGroups(data)[index];\n  }\n\n  return data[index];\n};\n/**\n * @hidden\n */\n\n\nconst getIterator = (data, {\n  footers,\n  level,\n  dataIndex,\n  parentGroupIndex,\n  groupIndex,\n  parentGroup\n}) => {\n  const first = data[0];\n\n  if (isPresent(first) && isGroupItem(first)) {\n    if (isVirtualGroupItem(first)) {\n      groupIndex = isPresent(first.offset) ? first.offset : groupIndex;\n    }\n\n    return new GroupIterator(data, footers, level, dataIndex, parentGroupIndex, groupIndex, parentGroup);\n  }\n\n  return new ItemIterator(data, dataIndex, parentGroupIndex, parentGroup);\n};\n\nclass ArrayIterator {\n  constructor(arr, idx = 0) {\n    this.arr = arr;\n    this.idx = idx;\n    this.arr = arr || [];\n  }\n\n  [iterator]() {\n    return this;\n  }\n\n  next() {\n    return this.idx < this.arr.length ? {\n      done: false,\n      value: this.arr[this.idx++]\n    } : {\n      done: true,\n      value: undefined\n    };\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass Iterator {\n  constructor(arr, dataIndex = 0, resultMap = x => x) {\n    this.dataIndex = dataIndex;\n    this.resultMap = resultMap;\n    const iter = arr[iterator];\n    this._innerIterator = iter ? arr[iterator]() : new ArrayIterator(arr);\n  }\n\n  [iterator]() {\n    return this;\n  }\n\n  next() {\n    return this.resultMap(this._innerIterator.next(), this.dataIndex++);\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass ItemIterator extends Iterator {\n  constructor(arr, dataIndex, groupIndex, group) {\n    super(arr, dataIndex, (x, idx) => ({\n      done: x.done,\n      value: {\n        data: x.value,\n        groupIndex: groupIndex,\n        index: idx,\n        type: 'data',\n        group\n      }\n    }));\n  }\n  /**\n   * The index of the next record.\n   * @readonly\n   * @type {number}\n   */\n\n\n  get index() {\n    return this.dataIndex;\n  }\n\n}\n\nconst prefix = (s, n) => {\n  const p = s ? s + \"_\" : s;\n  return `${p}${n}`;\n};\n/**\n * @hidden\n */\n\n\nclass GroupIterator {\n  constructor(arr, outputFooters = false, level = 0, dataIndex = 0, parentIndex = \"\", groupIndex = 0, parentGroup = undefined) {\n    this.arr = arr;\n    this.outputFooters = outputFooters;\n    this.level = level;\n    this.dataIndex = dataIndex;\n    this.parentIndex = parentIndex;\n    this.groupIndex = groupIndex;\n    this.parentGroup = parentGroup;\n    this.currentGroupIndex = \"\";\n    this.arr = arr || [];\n    this._iterator = new Iterator(this.arr, this.dataIndex);\n  }\n\n  [iterator]() {\n    return this;\n  }\n\n  nextGroupItem() {\n    this.current = this._iterator.next().value;\n    this._innerIterator = null;\n\n    if (this.current) {\n      this.currentGroupIndex = prefix(this.parentIndex, this.groupIndex++);\n      return {\n        done: false,\n        value: {\n          data: this.current,\n          index: this.currentGroupIndex,\n          level: this.level,\n          type: 'group',\n          parentGroup: this.parentGroup\n        }\n      };\n    } else {\n      this.current = null;\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n  }\n\n  footerItem() {\n    if (this.current) {\n      const group = this.current;\n      this.current = null;\n      return {\n        done: false,\n        value: {\n          data: group,\n          groupIndex: this.currentGroupIndex,\n          level: this.level,\n          type: 'footer',\n          group: {\n            data: group,\n            index: this.currentGroupIndex,\n            level: this.level,\n            type: 'group',\n            parentGroup: this.parentGroup\n          }\n        }\n      };\n    } else {\n      this.current = null;\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n  }\n\n  innerIterator(group) {\n    if (!this._innerIterator) {\n      this._innerIterator = getIterator(group.items, {\n        dataIndex: this.dataIndex,\n        footers: this.outputFooters,\n        level: this.level + 1,\n        parentGroupIndex: this.currentGroupIndex,\n        parentGroup: {\n          data: this.current,\n          index: this.currentGroupIndex,\n          level: this.level,\n          type: 'group',\n          parentGroup: this.parentGroup\n        }\n      });\n    }\n\n    return this._innerIterator;\n  }\n\n  nextDataItem(group) {\n    const iterator = this.innerIterator(group);\n    const result = iterator.next();\n\n    if (isPresent(result.value) && !result.done && result.value.type === \"data\") {\n      this.dataIndex = result.value.index + 1;\n    }\n\n    return !result.done ? result : undefined;\n  }\n\n  next() {\n    if (!isPresent(this.current)) {\n      return this.nextGroupItem();\n    }\n\n    const item = this.nextDataItem(this.current);\n    return item ? item : this.outputFooters ? this.footerItem() : this.nextGroupItem();\n  }\n  /**\n   * The index of the last iterated data record.\n   * @readonly\n   * @type {number}\n   */\n\n\n  get index() {\n    return this.dataIndex + 1;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass DataResultIterator {\n  constructor(source, skip = 0, groupFooters = false) {\n    this.source = source;\n    this.skip = skip;\n    this.groupFooters = groupFooters;\n    this.source = this.source ? this.source : [];\n    this.isObject = this.isGridDataResult(this.source);\n  }\n\n  isGridDataResult(source) {\n    return source.total !== undefined && source.data !== undefined;\n  }\n\n  get total() {\n    return this.isObject ? this.source.total : this.source.length;\n  }\n\n  get data() {\n    return this.isObject ? this.source.data : this.source;\n  }\n\n  map(fn) {\n    return this.data.map(fn);\n  }\n\n  filter(fn) {\n    return this.data.filter(fn);\n  }\n\n  reduce(fn, init) {\n    return this.data.reduce(fn, init);\n  }\n\n  forEach(fn) {\n    this.data.forEach(fn);\n  }\n\n  some(fn) {\n    return this.data.some(fn);\n  }\n\n  [iterator]() {\n    return getIterator(this.data, {\n      dataIndex: this.skip,\n      footers: this.groupFooters,\n      groupIndex: this.skip\n    });\n  }\n\n  toString() {\n    return this.data.toString();\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass DataCollection {\n  constructor(accessor) {\n    this.accessor = accessor;\n  }\n\n  get total() {\n    return this.accessor().total;\n  }\n\n  get length() {\n    return this.accessor().data.length;\n  }\n\n  get first() {\n    return this.accessor().data[0];\n  }\n\n  get last() {\n    return this.accessor().data[this.length - 1];\n  }\n\n  at(index) {\n    return itemAt(this.accessor().data, index);\n  }\n\n  map(fn) {\n    return this.accessor().map(fn);\n  }\n\n  filter(fn) {\n    return this.accessor().filter(fn);\n  }\n\n  reduce(fn, init) {\n    return this.accessor().reduce(fn, init);\n  }\n\n  forEach(fn) {\n    this.accessor().forEach(fn);\n  }\n\n  some(fn) {\n    return this.accessor().some(fn);\n  }\n\n  [iterator]() {\n    return this.accessor()[iterator]();\n  }\n\n  toString() {\n    return this.accessor().toString();\n  }\n\n}\n/**\n * @hidden\n *\n * Quick look-up structure for combinations of keys.\n * Similar to the native JS Set, however, working with a couple of keys instead of with a single key.\n * Supports both primitive keys and object keys (compared by reference).\n */\n\n\nclass PairSet {\n  constructor(items, keyXField, keyYField) {\n    /**\n     * Holds a set of Y keys for each defined X key.\n     * Each X key creates a map which holds a set of Y keys.\n     *\n     * Map { 1 => Set { 1, 2, 3 } } // pairs: [1, 1], [1, 2], [1, 3]\n     */\n    this.keysX = new Map();\n    /**\n     * Count the each added or deleted key manually to avoid iterating over all items when calling `this.size`.\n     */\n\n    this.totalKeysCount = 0;\n\n    if (items && keyXField && keyYField) {\n      items.forEach(item => this.add(item[keyXField], item[keyYField]));\n    }\n  }\n  /**\n   * Gets the total number of X/Y key pairs.\n   */\n\n\n  get size() {\n    return this.totalKeysCount;\n  }\n  /**\n   * Adds a couple of items identified as a combination.\n   */\n\n\n  add(keyX, keyY) {\n    if (!this.keysX.has(keyX)) {\n      this.keysX.set(keyX, new Set());\n    }\n\n    if (!this.has(keyX, keyY)) {\n      this.keysX.get(keyX).add(keyY);\n      this.totalKeysCount += 1;\n    }\n  }\n  /**\n   * Adds a combination of a couple of items identified together.\n   */\n\n\n  delete(keyX, keyY) {\n    if (this.has(keyX, keyY)) {\n      this.keysX.get(keyX).delete(keyY);\n      this.totalKeysCount -= 1;\n    }\n  }\n  /**\n   * Checks whether the defined combination is stored.\n   */\n\n\n  has(keyX, keyY) {\n    return this.keysX.has(keyX) && this.keysX.get(keyX).has(keyY);\n  }\n  /**\n   * Clears all key combinations.\n   */\n\n\n  clear() {\n    this.keysX.clear();\n    this.totalKeysCount = 0;\n  }\n  /**\n   * Converts the persisted data structure to an array of objects,\n   * using the provided field names for the object props.\n   */\n\n\n  toArray(keyXField, keyYField) {\n    return Array.from(this.keysX).reduce((pairs, pair) => {\n      // Array.from(mapInstance) returns an array of arrays [[itemKey1, columnKeysSet1], [itemKey2, columnKeysSet2]]\n      const [keyX, keysY] = pair;\n      Array.from(keysY).forEach(keyY => pairs.push({\n        [keyXField]: keyX,\n        [keyYField]: keyY\n      }));\n      return pairs;\n    }, []);\n  }\n\n}\n/**\n * @hidden\n *\n * The Context service is used to provide common\n * services and DI tokens for a Grid instance.\n *\n * This keeps the constructor parameters stable\n * and a avoids dependency cycles between components.\n */\n\n\nclass ContextService {}\n\nContextService.ɵfac = function ContextService_Factory(t) {\n  return new (t || ContextService)();\n};\n\nContextService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ContextService,\n  factory: ContextService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContextService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nclass Selection {\n  constructor(ctx, cd) {\n    this.ctx = ctx;\n    this.cd = cd;\n    /**\n     * Defines the collection that will store the selected item keys.\n     */\n\n    this.selectedKeys = [];\n    /**\n     * Fires when the `selectedKeys` collection has been updated.\n     */\n\n    this.selectedKeysChange = new EventEmitter();\n    this.rowSelectionState = new Set();\n    this.cellSelectionState = new PairSet();\n    this.init();\n  }\n\n  get isCellSelectionMode() {\n    return isPresent(this.ctx.grid.selectable) && this.ctx.grid.selectable['cell'];\n  }\n\n  ngOnChanges(changes) {\n    // skip reinitialization if the user data is the same as the last state change\n    if (isPresent(changes.selectedKeys) && this.lastSelectionState !== this.selectedKeys) {\n      this.setState(this.selectedKeys);\n    }\n  }\n\n  init() {\n    if (!isPresent(this.ctx.grid.rowSelected)) {\n      this.ctx.grid.rowSelected = row => this.rowSelectionState.has(this.getItemKey(row));\n    }\n\n    if (!isPresent(this.ctx.grid.cellSelected)) {\n      this.ctx.grid.cellSelected = (row, column, colIndex) => {\n        const contender = this.getSelectionItem(row, column, colIndex);\n        return {\n          selected: this.cellSelectionState.has(contender.itemKey, contender.columnKey),\n          item: contender\n        };\n      };\n    }\n\n    this.selectionChangeSubscription = this.ctx.grid.selectionChange.subscribe(this.onSelectionChange.bind(this));\n  }\n  /**\n   * @hidden\n   */\n\n\n  destroy() {\n    this.selectionChangeSubscription.unsubscribe();\n  }\n  /**\n   * @hidden\n   */\n\n\n  reset() {\n    this.rowSelectionState.clear();\n    this.cellSelectionState.clear();\n  }\n\n  getItemKey(row) {\n    if (this.selectionKey) {\n      if (typeof this.selectionKey === \"string\") {\n        return row.dataItem[this.selectionKey];\n      }\n\n      if (typeof this.selectionKey === \"function\") {\n        return this.selectionKey(row);\n      }\n    }\n\n    return row.index;\n  }\n\n  getSelectionItem(row, col, colIndex) {\n    const itemIdentifiers = {};\n    itemIdentifiers.itemKey = this.getItemKey(row);\n\n    if (!isPresent(col) && !isPresent(colIndex)) {\n      return itemIdentifiers;\n    }\n\n    if (this.columnKey) {\n      if (typeof this.columnKey === \"string\") {\n        itemIdentifiers.columnKey = row.dataItem[this.columnKey];\n      }\n\n      if (typeof this.columnKey === \"function\") {\n        itemIdentifiers.columnKey = this.columnKey(col, colIndex);\n      }\n    }\n\n    return {\n      itemKey: itemIdentifiers.itemKey,\n      columnKey: itemIdentifiers.columnKey ? itemIdentifiers.columnKey : colIndex\n    };\n  }\n\n  onSelectionChange(selection) {\n    if (selection.selectedRows) {\n      selection.deselectedRows.forEach(item => {\n        const itemKey = this.getItemKey(item);\n        this.rowSelectionState.delete(itemKey);\n      });\n\n      if (this.ctx.grid.selectableSettings.mode === \"single\" && this.rowSelectionState.size > 0) {\n        this.reset();\n      }\n\n      selection.selectedRows.forEach(item => {\n        const itemKey = this.getItemKey(item);\n        this.rowSelectionState.add(itemKey);\n      });\n    } else {\n      selection.deselectedCells.forEach(({\n        itemKey,\n        columnKey\n      }) => {\n        this.cellSelectionState.delete(itemKey, columnKey);\n      });\n\n      if (this.ctx.grid.selectableSettings.mode === \"single\" && this.cellSelectionState.size > 0) {\n        this.reset();\n      }\n\n      selection.selectedCells.forEach(({\n        itemKey,\n        columnKey\n      }) => {\n        this.cellSelectionState.add(itemKey, columnKey);\n      });\n    }\n\n    this.cd.markForCheck();\n    this.notifyChange();\n  }\n\n  notifyChange() {\n    this.lastSelectionState = this.stateToArray();\n    this.selectedKeysChange.emit(this.lastSelectionState);\n  }\n\n  setState(selectedKeys) {\n    this.reset();\n\n    if (this.isCellSelectionMode) {\n      this.cellSelectionState = new PairSet(selectedKeys, 'itemKey', 'columnKey');\n    } else {\n      this.rowSelectionState = new Set(selectedKeys);\n    }\n  }\n\n  stateToArray() {\n    return this.isCellSelectionMode ? this.cellSelectionState.toArray('itemKey', 'columnKey') : Array.from(this.rowSelectionState);\n  }\n\n}\n\nSelection.ɵfac = function Selection_Factory(t) {\n  return new (t || Selection)(i0.ɵɵdirectiveInject(ContextService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nSelection.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: Selection,\n  selectors: [[\"kendo-grid-selection-base\"]],\n  inputs: {\n    selectedKeys: \"selectedKeys\",\n    selectionKey: [\"kendoGridSelectBy\", \"selectionKey\"],\n    columnKey: \"columnKey\"\n  },\n  outputs: {\n    selectedKeysChange: \"selectedKeysChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Selection, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: 'kendo-grid-selection-base'\n    }]\n  }], function () {\n    return [{\n      type: ContextService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    selectedKeys: [{\n      type: Input\n    }],\n    selectionKey: [{\n      type: Input,\n      args: [\"kendoGridSelectBy\"]\n    }],\n    columnKey: [{\n      type: Input\n    }],\n    selectedKeysChange: [{\n      type: Output\n    }]\n  });\n})();\n\nconst reset = (...lists) => {\n  let diff = false;\n\n  for (let idx = 0; idx < lists.length; idx++) {\n    const [list, columns] = lists[idx];\n    diff = diff || list.length !== columns.length;\n    list.reset(columns);\n  }\n\n  return diff;\n};\n/**\n * @hidden\n */\n\n\nclass ColumnsContainer {\n  constructor(columns) {\n    this.columns = columns;\n    this.allColumns = new QueryList();\n    this.leafColumns = new QueryList();\n    this.lockedColumns = new QueryList();\n    this.nonLockedColumns = new QueryList();\n    this.lockedLeafColumns = new QueryList();\n    this.nonLockedLeafColumns = new QueryList();\n    this.totalLevels = 0;\n    this.changes = new EventEmitter();\n    this.leafColumnsToRender = [];\n    this.lockedColumnsToRender = [];\n    this.nonLockedColumnsToRender = [];\n    this.hasGroupHeaderColumn = false;\n    this.hasGroupFooter = false;\n    this.hasFooter = false;\n    this.unlockedWidth = 0;\n  }\n\n  refresh() {\n    const currentLevels = this.totalLevels;\n    const leafColumns = new Array();\n    const lockedLeafColumns = new Array();\n    const nonLockedLeafColumns = new Array();\n    const lockedColumns = new Array();\n    const nonLockedColumns = new Array();\n    const allColumns = new Array();\n    const leafColumnsToRender = new Array();\n    const lockedColumnsToRender = new Array();\n    const nonLockedColumnsToRender = new Array();\n    let hasGroupHeaderColumn = false;\n    let hasGroupFooter = false;\n    let hasFooter = false;\n    let unlockedWidth = 0;\n    let leafIndex = 0;\n    this.totalLevels = 0;\n    this.columns().forEach(column => {\n      const containerLeafColumns = column.isLocked === true ? lockedLeafColumns : nonLockedLeafColumns;\n      const containerColumns = column.isLocked === true ? lockedColumns : nonLockedColumns;\n      const toRenderContainer = column.isLocked === true ? lockedColumnsToRender : nonLockedColumnsToRender;\n\n      if (!isColumnGroupComponent(column)) {\n        containerLeafColumns.push(column);\n        leafColumns.push(column);\n        leafColumnsToRender.push.apply(leafColumnsToRender, columnsToRender([column]));\n        toRenderContainer.push.apply(toRenderContainer, columnsToRender([column]));\n        hasGroupHeaderColumn = hasGroupHeaderColumn || someLeafColumn(leaf => Boolean(leaf.groupHeaderColumnTemplateRef), column);\n        hasGroupFooter = hasGroupFooter || someLeafColumn(leaf => Boolean(leaf.groupFooterTemplateRef), column);\n        hasFooter = hasFooter || someLeafColumn(leaf => Boolean(leaf.footerTemplateRef), column);\n\n        if (!column.isLocked) {\n          unlockedWidth += column.width || 0;\n        }\n\n        if (column.isSpanColumn) {\n          column.childColumns.forEach(c => {\n            c.leafIndex = leafIndex++;\n          });\n        } else {\n          column.leafIndex = leafIndex++;\n        }\n      }\n\n      containerColumns.push(column);\n      allColumns.push(column);\n      this.totalLevels = column.level > this.totalLevels ? column.level : this.totalLevels;\n    });\n    this.hasGroupHeaderColumn = hasGroupHeaderColumn;\n    this.hasGroupFooter = hasGroupFooter;\n    this.hasFooter = hasFooter;\n    this.leafColumnsToRender = leafColumnsToRender;\n    this.lockedColumnsToRender = lockedColumnsToRender;\n    this.nonLockedColumnsToRender = nonLockedColumnsToRender;\n    this.unlockedWidth = unlockedWidth;\n    const changes = reset([this.leafColumns, leafColumns], [this.lockedLeafColumns, lockedLeafColumns], [this.nonLockedLeafColumns, nonLockedLeafColumns], [this.lockedColumns, lockedColumns], [this.allColumns, allColumns], [this.nonLockedColumns, nonLockedColumns]) || currentLevels !== this.totalLevels;\n\n    if (changes) {\n      this.changes.emit();\n    }\n\n    return changes;\n  }\n\n}\n\nconst forEachColumn = (list, callback) => {\n  list.forEach(column => {\n    callback(column);\n\n    if (column.isColumnGroup && column.hasChildren) {\n      forEachColumn(column.childrenArray, callback);\n    }\n  });\n};\n\nconst forEachLevel = (list, callback) => {\n  sortColumns(list).forEach(column => {\n    callback(column);\n\n    if (column.isColumnGroup && column.hasChildren) {\n      forEachLevel(column.childrenArray, callback);\n    }\n  });\n};\n\nconst filterHierarchy = (list, predicate) => {\n  const result = [];\n  sortColumns(list).forEach(column => {\n    if (predicate(column)) {\n      if (column.isColumnGroup) {\n        const children = filterHierarchy(column.childrenArray, predicate);\n\n        if (children.length) {\n          result.push(column, ...children);\n        }\n      } else if (!column.isSpanColumn || filterHierarchy(column.childrenArray, predicate).length) {\n        result.push(column);\n      }\n    }\n  });\n  return result;\n};\n/**\n * @hidden\n */\n\n\nclass ColumnList {\n  constructor(columns) {\n    this.columns = columns;\n  }\n\n  static empty() {\n    return new ColumnList(new QueryList());\n  }\n\n  forEach(callback) {\n    forEachColumn(this.columns, callback);\n  }\n\n  filter(callback) {\n    const result = [];\n    forEachColumn(this.columns, column => {\n      if (callback(column)) {\n        result.push(column);\n      }\n    });\n    return result;\n  }\n\n  filterHierarchy(predicate) {\n    return filterHierarchy(this.columns.toArray(), predicate);\n  }\n\n  filterSort(callback) {\n    const result = [];\n    forEachLevel(this.columns.toArray(), column => {\n      if (callback(column)) {\n        result.push(column);\n      }\n    });\n    return result;\n  }\n\n  toArray() {\n    const result = [];\n    forEachColumn(this.columns, column => {\n      result.push(column);\n    });\n    return result;\n  }\n\n  rootColumns() {\n    return this.columns.toArray();\n  }\n\n  totalColumnLevels() {\n    let totalLevels = 0;\n    this.forEach(column => {\n      totalLevels = Math.max(column.level, totalLevels);\n    });\n    return totalLevels;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass GroupInfoService {\n  constructor() {\n    this._columnList = ColumnList.empty;\n  }\n\n  get columns() {\n    return expandColumns(this._columnList().toArray()).filter(isColumnComponent);\n  }\n\n  registerColumnsContainer(columns) {\n    this._columnList = columns;\n  }\n\n  formatForGroup(item) {\n    const column = this.columnForGroup(item);\n    return column ? column.format : \"\";\n  }\n\n  isGroupable(groupField) {\n    const [column] = this.columns.filter(x => x.field === groupField);\n    return column ? column.groupable : true;\n  }\n\n  groupTitle(item) {\n    const column = this.columnForGroup(item);\n    return column ? column.title || column.field : this.groupField(item);\n  }\n\n  groupHeaderTemplate(item) {\n    const column = this.columnForGroup(item);\n    return column ? column.groupHeaderTemplateRef || column.groupHeaderColumnTemplateRef : undefined;\n  }\n\n  groupField(group) {\n    return group.data ? group.data.field : group.field;\n  }\n\n  columnForGroup(group) {\n    const field = this.groupField(group);\n    const [column] = this.columns.filter(x => x.field === field);\n    return column;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass ChangeNotificationService {\n  constructor(ngZone) {\n    this.ngZone = ngZone;\n    this.changes = new EventEmitter();\n  }\n\n  notify() {\n    if (!this.subscription || this.subscription.closed) {\n      this.subscription = this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => this.changes.emit());\n    }\n  }\n\n}\n\nChangeNotificationService.ɵfac = function ChangeNotificationService_Factory(t) {\n  return new (t || ChangeNotificationService)(i0.ɵɵinject(i0.NgZone));\n};\n\nChangeNotificationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ChangeNotificationService,\n  factory: ChangeNotificationService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChangeNotificationService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n/**\n * Represents the no-records template of the Grid. Provides an option to customize the\n * appearance of the item that is displayed when no data is present. To define the no-records template,\n * nest an `<ng-template>` tag with the `kendoGridNoRecordsTemplate` directive inside `<kendo-grid>`.\n *\n * > When the locked columns of the Grid are in use, the template is displayed in the non-locked part of the content.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *   selector: 'my-app',\n *   template: `\n *       <kendo-grid [data]=\"data\">\n *         <kendo-grid-column field=\"ProductID\"></kendo-grid-column>\n *         <kendo-grid-column field=\"ProductName\"></kendo-grid-column>\n *         <kendo-grid-column field=\"UnitPrice\"></kendo-grid-column>\n *         <ng-template kendoGridNoRecordsTemplate>\n *            There are not products. <a href=\"#\" (click)=\"refresh()\">Click here to refresh</a>.\n *         </ng-template>\n *       </kendo-grid>\n *   `\n * })\n *\n * class AppComponent {\n *     public data = [];\n *     public refresh() {\n *       this.data = [{\n *            \"ProductID\": 1,\n *            \"ProductName\": \"Chai\",\n *            \"UnitPrice\": 18.0000,\n *            \"Discontinued\": false,\n *            \"Category\": {\n *                \"CategoryID\": 1,\n *                \"CategoryName\": \"Beverages\",\n *                \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n *            }\n *          }, {\n *            \"ProductID\": 2,\n *            \"ProductName\": \"Chang\",\n *            \"UnitPrice\": 19.0000,\n *            \"Discontinued\": false,\n *            \"Category\": {\n *                \"CategoryID\": 1,\n *                \"CategoryName\": \"Beverages\",\n *                \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n *            }\n *          }, {\n *            \"ProductID\": 3,\n *            \"ProductName\": \"Aniseed Syrup\",\n *            \"UnitPrice\": 10.0000,\n *            \"Discontinued\": false,\n *            \"Category\": {\n *                \"CategoryID\": 2,\n *                \"CategoryName\": \"Condiments\",\n *                \"Description\": \"Sweet and savory sauces, relishes, spreads, and seasonings\"\n *            }\n *        }];\n *\n *     }\n * }\n *\n * ```\n */\n\n\nclass NoRecordsTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNoRecordsTemplateDirective.ɵfac = function NoRecordsTemplateDirective_Factory(t) {\n  return new (t || NoRecordsTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nNoRecordsTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NoRecordsTemplateDirective,\n  selectors: [[\"\", \"kendoGridNoRecordsTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NoRecordsTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridNoRecordsTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst set = value => pair => pair.forEach(x => x.style.height = value);\n\nconst clearHeight = pairs => pairs.filter(([left, right]) => left.style.height || right.style.height).forEach(set(\"\"));\n\nconst zip = (arr1, arr2) => {\n  const result = [];\n\n  for (let idx = 0, len = arr1.length; idx < len; idx++) {\n    if (!arr2[idx]) {\n      break;\n    }\n\n    result.push([arr1[idx], arr2[idx]]);\n  }\n\n  return result;\n};\n\nconst setHeight$1 = heights => (row, idx) => set(`${heights[idx] + 1}px`)(row);\n\nconst getHeights = rows => rows.map(([left, right]) => {\n  const height = left.offsetHeight;\n  const offsetHeight2 = right.offsetHeight;\n\n  if (height < offsetHeight2) {\n    return offsetHeight2;\n  }\n\n  return height;\n});\n/**\n * @hidden\n */\n\n\nconst syncRowsHeight = (table1, table2) => {\n  const activeElement = document.activeElement;\n  const rows = zip(table1.rows, table2.rows);\n  clearHeight(rows);\n  const heights = getHeights(rows);\n  [table1, table2].forEach(x => x.style.display = 'none');\n  rows.forEach(setHeight$1(heights));\n  [table1, table2].forEach(x => x.style.display = '');\n\n  if (document.activeElement !== activeElement && (table1.contains(activeElement) || table2.contains(activeElement))) {\n    activeElement.focus();\n  }\n};\n/**\n * @hidden\n */\n\n\nclass MenuTabbingService {\n  constructor() {\n    this.isColumnMenu = false;\n    this.isPopupOpen = false;\n  }\n\n}\n\nMenuTabbingService.ɵfac = function MenuTabbingService_Factory(t) {\n  return new (t || MenuTabbingService)();\n};\n\nMenuTabbingService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MenuTabbingService,\n  factory: MenuTabbingService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MenuTabbingService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Represents a service to set the filter descriptor\n * ([see example]({% slug filter_row %}#toc-custom-filter-row-components)).\n */\n\n\nclass FilterService {\n  /**\n   * @hidden\n   */\n  constructor(menuTabbingService) {\n    /**\n     * Fires when the filter descriptors is set.\n     */\n    this.changes = new Subject();\n    this.menuTabbingService = menuTabbingService;\n  }\n  /**\n   * Sets the filter descriptor.\n   *\n   * @param {CompositeFilterDescriptor} value - The filter descriptor that will be set.\n   */\n\n\n  filter(value) {\n    this.changes.next(value);\n  }\n\n}\n\nFilterService.ɵfac = function FilterService_Factory(t) {\n  return new (t || FilterService)(i0.ɵɵinject(MenuTabbingService, 8));\n};\n\nFilterService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: FilterService,\n  factory: FilterService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: MenuTabbingService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents the pager template which helps to customize the pager appearance in the Grid. To define a pager\n * template, nest an `<ng-template>` tag with the `kendoPagerTemplate` directive inside `<kendo-grid>`.\n *\n * The template context provides the following fields:\n * * `currentPage`&mdash;The index of the displayed page.\n * * `pageSize`&mdash;The value of the current `pageSize`.\n * * `skip`&mdash;The current skip value.\n * * `total`&mdash;The total number of records.\n * * `totalPages`&mdash;The total number of available pages.\n * *  Needs to be provided as an input to inner pager components used within the template when the Grid is navigable.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *      <kendo-grid\n *        [kendoGridBinding]=\"gridData\"\n *        [pageSize]=\"1\"\n *        [pageable]=\"true\"\n *      >\n *       <kendo-grid-column field=\"ProductID\" title=\"ID\" [width]=\"40\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"ProductName\" title=\"Name\" [width]=\"250\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"UnitPrice\" title=\"Price\" [width]=\"80\" format=\"{0:c}\">\n *       </kendo-grid-column>\n *\n *       <ng-template kendoPagerTemplate let-totalPages=\"totalPages\" let-currentPage=\"currentPage\">\n *          <kendo-pager-prev-buttons></kendo-pager-prev-buttons>\n *          <kendo-pager-numeric-buttons [buttonCount]=\"10\"></kendo-pager-numeric-buttons>\n *          <kendo-pager-next-buttons></kendo-pager-next-buttons>\n *          <kendo-pager-info></kendo-pager-info>\n *          Current page: {{currentPage}}\n *       </ng-template>\n *\n *    </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\n\n\nclass PagerTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nPagerTemplateDirective.ɵfac = function PagerTemplateDirective_Factory(t) {\n  return new (t || PagerTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nPagerTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: PagerTemplateDirective,\n  selectors: [[\"\", \"kendoPagerTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoPagerTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass PDFService {\n  constructor() {\n    this.savePDF = new EventEmitter();\n    this.drawPDF = new EventEmitter();\n    this.exportClick = new EventEmitter();\n    this.dataChanged = new EventEmitter();\n  }\n\n  save(component) {\n    this.emitEvent(this.savePDF, component);\n  }\n\n  draw(component, promise) {\n    this.emitEvent(this.drawPDF, {\n      component,\n      promise\n    });\n  }\n  /**\n   * @hidden\n   */\n\n\n  emitEvent(emitter, args) {\n    if (emitter.observers.length === 0) {\n      if (isDevMode()) {\n        throw new Error('Creating PDF requires including the PDFModule and adding the <kendo-grid-pdf> component.');\n      }\n    } else {\n      emitter.emit(args);\n    }\n  }\n\n}\n\nPDFService.ɵfac = function PDFService_Factory(t) {\n  return new (t || PDFService)();\n};\n\nPDFService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PDFService,\n  factory: PDFService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PDFService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Arguments for the `pdfExport` event.\n */\n\n\nclass PDFExportEvent extends PreventableEvent {\n  /**\n   * @hidden\n   */\n  constructor() {\n    super();\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass SuspendService {\n  constructor() {\n    this.scroll = false;\n  }\n\n}\n\nSuspendService.ɵfac = function SuspendService_Factory(t) {\n  return new (t || SuspendService)();\n};\n\nSuspendService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SuspendService,\n  factory: SuspendService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SuspendService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nconst bootstrapToMedia = media => ({\n  \"xs\": \"(max-width: 576px)\",\n  \"sm\": \"(min-width: 576px)\",\n  \"md\": \"(min-width: 768px)\",\n  \"lg\": \"(min-width: 992px)\",\n  \"xl\": \"(min-width: 1200px)\"\n})[media] || media;\n\nconst browserMatchMedia = media => window.matchMedia(media).matches;\n/**\n * @hidden\n */\n\n\nclass ResponsiveService {\n  constructor() {\n    /**\n     * @hidden\n     */\n    this.matchMedia = browserMatchMedia;\n  }\n  /**\n   * @hidden\n   */\n\n\n  matchesMedia(media) {\n    return !media || this.matchMedia(bootstrapToMedia(media));\n  }\n\n}\n\nResponsiveService.ɵfac = function ResponsiveService_Factory(t) {\n  return new (t || ResponsiveService)();\n};\n\nResponsiveService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ResponsiveService,\n  factory: ResponsiveService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ResponsiveService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nclass ExcelService {\n  constructor() {\n    this.saveToExcel = new EventEmitter();\n    this.exportClick = new EventEmitter();\n  }\n\n  save(component) {\n    if (this.saveToExcel.observers.length === 0) {\n      if (isDevMode()) {\n        throw new Error('Saving excel requires including the ExcelModule and adding the <kendo-grid-excel> component.');\n      }\n    } else {\n      this.saveToExcel.emit(component);\n    }\n  }\n\n}\n\nExcelService.ɵfac = function ExcelService_Factory(t) {\n  return new (t || ExcelService)();\n};\n\nExcelService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ExcelService,\n  factory: ExcelService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ExcelService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Represents the toolbar template of the Grid.\n *\n * The template context has the following field:\n * - `position`&mdash;The position at which the toolbar template is rendered. The possible values are \"top\" and \"bottom\".\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <div class=\"example-config\">\n *         <input type=\"radio\" id=\"top\" name=\"position\" value=\"top\" checked (click)=\"positionChange($event)\"/>\n *         <label class=\"k-radio-label\" for=\"top\">Top</label><br/>\n *         <input type=\"radio\" id=\"bottom\" name=\"position\" value=\"bottom\" (click)=\"positionChange($event)\"/>\n *         <label class=\"k-radio-label\" for=\"bottom\">Bottom</label><br/>\n *         <input type=\"radio\" id=\"both\" name=\"position\" value=\"both\" (click)=\"positionChange($event)\"/>\n *         <label class=\"k-radio-label\" for=\"both\">Both</label><br/>\n *       </div>\n *       <kendo-grid [data]=\"gridData\" style=\"height: 200px\">\n *            <ng-template kendoGridToolbarTemplate [position]=\"position\" let-position=\"position\">\n *                <button (click)=\"onClick()\">Custom action</button>\n *            </ng-template>\n *            <kendo-grid-column field=\"ProductName\">\n *            </kendo-grid-column>\n *            <kendo-grid-column field=\"UnitPrice\">\n *            </kendo-grid-column>\n *        </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public position: 'top' | 'bottom' | 'both' = 'top';\n *\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n *\n *     public onClick(): void {\n *         console.log(\"button was clicked\");\n *     }\n *\n *     public positionChange({ target }): void {\n *        this.position = target.value;\n *     }\n * }\n *\n * ```\n */\n\n\nclass ToolbarTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n    this._position = \"top\";\n  }\n  /**\n   * The position of the toolbar ([see example]({% slug toolbartemplate_grid %})).\n   *\n   * The possible values are:\n   * - `top`&mdash;Positions the toolbar above the group panel or header.\n   * - `bottom`&mdash;Positions the toolbar below the pager.\n   * - `both`&mdash;Displays two toolbar instances. Positions the first one above\n   * the group panel or header and the second one below the pager.\n   */\n\n\n  set position(position) {\n    this._position = position;\n  }\n\n  get position() {\n    return this._position;\n  }\n\n}\n\nToolbarTemplateDirective.ɵfac = function ToolbarTemplateDirective_Factory(t) {\n  return new (t || ToolbarTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nToolbarTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ToolbarTemplateDirective,\n  selectors: [[\"\", \"kendoGridToolbarTemplate\", \"\"]],\n  inputs: {\n    position: \"position\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToolbarTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridToolbarTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    position: [{\n      type: Input,\n      args: [\"position\"]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass ScrollSyncService {\n  constructor(ngZone) {\n    this.ngZone = ngZone;\n    this.changes = new Subject();\n    this.elements = [];\n    this.subscriptions = new Subscription();\n    this.headerSubscription = new Subscription();\n    this.bodySubscription = new Subscription();\n    this.subscriptions.add(this.changes.subscribe(args => this.scrollLeft(args)));\n  }\n\n  registerEmitter(el, sourceType) {\n    this.unregister(sourceType);\n    this.elements.push({\n      element: el,\n      sourceType\n    });\n\n    if (sourceType === \"body\" || sourceType === \"header\") {\n      this.ngZone.runOutsideAngular(() => {\n        const obs = fromEvent(el, \"scroll\").pipe(map(({\n          target: {\n            scrollLeft\n          }\n        }) => ({\n          scrollLeft,\n          sourceType\n        })));\n        const subscription = obs.pipe(distinctUntilChanged((x, y) => x.scrollLeft === y.scrollLeft), filter(x => !this.source || this.source === x.sourceType), tap(x => this.source = x.sourceType)).subscribe(x => this.changes.next(x));\n        subscription.add(obs.pipe(filter(x => this.source && this.source !== x.sourceType)).subscribe(() => this.source = undefined));\n\n        if (sourceType === \"body\") {\n          this.bodySubscription.add(subscription);\n        } else {\n          this.headerSubscription.add(subscription);\n        }\n      });\n    }\n  }\n  /**\n   * destroy\n   */\n\n\n  destroy() {\n    this.subscriptions.unsubscribe();\n    this.headerSubscription.unsubscribe();\n    this.bodySubscription.unsubscribe();\n  }\n\n  scrollLeft({\n    scrollLeft,\n    sourceType\n  }) {\n    this.ngZone.runOutsideAngular(() => {\n      this.elements.filter(x => sourceType !== x.sourceType).forEach(({\n        element\n      }) => element.scrollLeft = scrollLeft);\n    });\n  }\n\n  unregister(sourceType) {\n    const index = this.elements.findIndex(x => x.sourceType === sourceType);\n\n    if (index > -1) {\n      if (sourceType === \"header\") {\n        this.headerSubscription.unsubscribe();\n        this.headerSubscription = new Subscription();\n      } else if (sourceType === \"body\") {\n        this.bodySubscription.unsubscribe();\n        this.bodySubscription = new Subscription();\n      }\n\n      this.elements.splice(index, 1);\n    }\n  }\n\n}\n\nScrollSyncService.ɵfac = function ScrollSyncService_Factory(t) {\n  return new (t || ScrollSyncService)(i0.ɵɵinject(i0.NgZone));\n};\n\nScrollSyncService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ScrollSyncService,\n  factory: ScrollSyncService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollSyncService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass ResizeService {\n  constructor() {\n    this.resizeSubscription = new Subscription(() => {});\n    this.dispatcher = new Subject();\n    this.changes = this.dispatcher.asObservable().pipe(throttleTime(100));\n  }\n\n  connect(resizes) {\n    this.resizeSubscription.add(resizes.subscribe(this.dispatcher));\n  }\n\n  destroy() {\n    if (this.resizeSubscription) {\n      this.resizeSubscription.unsubscribe();\n    }\n  }\n\n}\n\nResizeService.ɵfac = function ResizeService_Factory(t) {\n  return new (t || ResizeService)();\n};\n\nResizeService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ResizeService,\n  factory: ResizeService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ResizeService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nconst isLocked = column => column.parent ? isLocked(column.parent) : !!column.locked;\n/**\n * @hidden\n */\n\n\nconst resizeArgs = (column, extra) => Object.assign({\n  columns: leafColumns([column]),\n  locked: isLocked(column)\n}, extra);\n/**\n * @hidden\n */\n\n\nclass ColumnResizingService {\n  constructor() {\n    this.changes = new EventEmitter();\n    this.tables = [];\n    this.batch = null;\n  }\n\n  start(column) {\n    this.trackColumns(column);\n    const columns = (this.column.isColumnGroup ? [column] : []).concat(leafColumns([column]));\n    this.changes.emit({\n      columns: columns,\n      locked: isLocked(this.column),\n      type: 'start'\n    });\n  }\n\n  resizeColumns(deltaPercent) {\n    const action = resizeArgs(this.column, {\n      deltaPercent,\n      type: 'resizeColumn'\n    });\n    this.changes.emit(action);\n  }\n\n  resizeTable(column, delta) {\n    const action = resizeArgs(column, {\n      delta,\n      type: 'resizeTable'\n    });\n    this.changes.emit(action);\n  }\n\n  resizedColumn(state) {\n    this.resizedColumns.push(state);\n  }\n\n  end() {\n    this.changes.emit({\n      columns: [],\n      resizedColumns: this.resizedColumns,\n      type: 'end'\n    });\n  }\n\n  registerTable(tableMetadata) {\n    this.tables.push(tableMetadata);\n\n    const unregisterTable = () => {\n      this.tables.splice(this.tables.indexOf(tableMetadata), 1);\n    };\n\n    return unregisterTable;\n  }\n\n  measureColumns(info) {\n    if (this.batch !== null) {\n      this.batch.push(...info);\n    } else {\n      this.autoFitBatch(info, () => this.end());\n    }\n  }\n\n  autoFit(...columns) {\n    const nonLockedColumns = columns.filter(column => !column.isLocked);\n    this.autoFitStart(nonLockedColumns);\n    this.autoFitBatch(this.batch, () => {\n      if (nonLockedColumns.length < columns.length) {\n        const lockedColumns = columns.filter(column => column.isLocked);\n        this.autoFitStart(lockedColumns);\n        this.autoFitBatch(this.batch, () => this.end());\n      } else {\n        this.end();\n      }\n    });\n  }\n\n  trackColumns(column) {\n    this.resizedColumns = [];\n    this.column = column;\n  }\n\n  autoFitStart(columns) {\n    this.batch = [];\n    this.resizedColumns = [];\n\n    if (columns.length === 0) {\n      return;\n    }\n\n    const locked = columns[0].isLocked;\n    this.changes.emit({\n      type: 'start',\n      columns,\n      locked\n    });\n    this.changes.emit({\n      type: 'triggerAutoFit',\n      columns,\n      locked\n    });\n  }\n\n  autoFitBatch(info, onComplete) {\n    const locked = info.length > 0 ? info[0].column.isLocked : false;\n    const observables = this.tables.filter(table => table.locked === locked).map(table => table.autoFit(info));\n    zip$1(...observables).pipe(take(1)).subscribe(widths => {\n      this.changes.emit({\n        columns: info.map(i => i.column),\n        type: 'autoFitComplete',\n        widths,\n        locked\n      });\n\n      if (onComplete) {\n        onComplete();\n      }\n    });\n    this.batch = null;\n  }\n\n}\n\nColumnResizingService.ɵfac = function ColumnResizingService_Factory(t) {\n  return new (t || ColumnResizingService)();\n};\n\nColumnResizingService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ColumnResizingService,\n  factory: ColumnResizingService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnResizingService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nconst isFilterable = settings => settings !== false;\n/**\n * @hidden\n */\n\n\nconst hasFilterMenu = settings => typeof settings === 'string' && settings.indexOf('menu') > -1;\n/**\n * @hidden\n */\n\n\nconst hasFilterRow = settings => settings === true || typeof settings === 'string' && settings.indexOf('row') > -1;\n\nconst contains$1 = (node, predicate) => {\n  while (node) {\n    if (predicate(node)) {\n      return true;\n    }\n\n    node = node.parentNode;\n  }\n\n  return false;\n};\n/**\n * Arguments for the `close` event of the filter and column-menu popup.\n */\n\n\nclass PopupCloseEvent extends PreventableEvent {\n  constructor(e) {\n    super();\n    this.originalEvent = e;\n  }\n\n}\n\nconst DEFAULT_POPUP_CLASS = 'k-grid-filter-popup';\n/**\n * The service that is used for the popups of the filter and column menus\n * ([see example]({% slug filter_menu %}#toc-custom-filter-row-components)#toc-filter-menu-with-popup).\n */\n\nclass SinglePopupService {\n  constructor(popupService, renderer, ngZone, scrollSyncService, localization) {\n    this.popupService = popupService;\n    this.renderer = renderer;\n    this.ngZone = ngZone;\n    this.localization = localization;\n    /**\n     * Fires when the filter or column menus are about to close because the user clicked outside their popups.\n     * Used to prevent the popup from closing.\n     */\n\n    this.onClose = new Subject();\n    this.pointerEventsSub = new Subscription();\n    this.scrollSubscription = scrollSyncService.changes.subscribe(() => this.destroy());\n  }\n  /**\n   * @hidden\n   */\n\n\n  open(anchor, template, popupRef, popupClass = DEFAULT_POPUP_CLASS) {\n    var _a;\n\n    const toggle = isPresent(popupRef) && this.popupRef === popupRef;\n    this.destroy();\n\n    if (!toggle) {\n      const direction = this.localization.rtl ? 'right' : 'left';\n      this.popupRef = this.popupService.open({\n        anchorAlign: {\n          vertical: 'bottom',\n          horizontal: direction\n        },\n        popupAlign: {\n          vertical: 'top',\n          horizontal: direction\n        },\n        anchor: anchor,\n        popupClass: popupClass,\n        content: template,\n        positionMode: \"absolute\"\n      });\n      this.renderer.setAttribute(this.popupRef.popupElement, 'dir', this.localization.rtl ? 'rtl' : 'ltr');\n      this.attachClose(anchor);\n    }\n\n    const popupEl = (_a = this.popupRef) === null || _a === void 0 ? void 0 : _a.popupElement;\n\n    if (popupEl) {\n      this.attachMouseListeners(popupEl);\n    }\n\n    return this.popupRef;\n  }\n  /**\n   * @hidden\n   */\n\n\n  destroy() {\n    if (this.popupRef) {\n      this.detachClose();\n      this.pointerEventsSub.unsubscribe();\n      this.pointerEventsSub = null;\n      this.popupRef.close();\n      this.popupRef = null;\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n    this.scrollSubscription.unsubscribe();\n  }\n\n  detachClose() {\n    if (this.removeClick) {\n      this.removeClick();\n    }\n  }\n\n  attachClose(skipElement) {\n    this.detachClose();\n    this.ngZone.runOutsideAngular(() => this.removeClick = this.renderer.listen('document', 'click', e => {\n      if (!contains$1(e.target, x => this.popupRef.popupElement === x || x === skipElement)) {\n        const args = new PopupCloseEvent(e);\n        this.onClose.next(args);\n\n        if (!args.isDefaultPrevented() && this.canClosePopup) {\n          this.destroy();\n        }\n\n        this.canClosePopup = true;\n      }\n    }));\n  }\n\n  attachMouseListeners(el) {\n    this.pointerEventsSub = new Subscription();\n    this.ngZone.runOutsideAngular(() => {\n      this.pointerEventsSub.add(this.renderer.listen(el, 'pointerdown', e => {\n        e.stopImmediatePropagation();\n        this.canClosePopup = false;\n      }));\n      this.pointerEventsSub.add(this.renderer.listen(el, 'pointerup', () => {\n        this.canClosePopup = true;\n      }));\n    });\n  }\n\n}\n\nSinglePopupService.ɵfac = function SinglePopupService_Factory(t) {\n  return new (t || SinglePopupService)(i0.ɵɵinject(i1$2.PopupService), i0.ɵɵinject(i0.Renderer2), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(ScrollSyncService), i0.ɵɵinject(i1.LocalizationService));\n};\n\nSinglePopupService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SinglePopupService,\n  factory: SinglePopupService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SinglePopupService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$2.PopupService\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: ScrollSyncService\n    }, {\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/* eslint-disable  no-bitwise */\n\n/**\n * @hidden\n */\n\n\nconst append = element => {\n  let appended = false;\n  return () => {\n    if (!appended) {\n      document.body.appendChild(element);\n      appended = true;\n    }\n\n    return element;\n  };\n};\n/**\n * @hidden\n */\n\n\nconst getDocument = element => element.ownerDocument.documentElement;\n/**\n * @hidden\n */\n\n\nconst getWindow = element => element.ownerDocument.defaultView;\n/**\n * @hidden\n */\n\n\nconst offset = element => {\n  const {\n    clientTop,\n    clientLeft\n  } = getDocument(element);\n  const {\n    pageYOffset,\n    pageXOffset\n  } = getWindow(element);\n  const {\n    top,\n    left\n  } = element.getBoundingClientRect();\n  return {\n    top: top + pageYOffset - clientTop,\n    left: left + pageXOffset - clientLeft\n  };\n};\n/**\n * @hidden\n * If the target is before the draggable element, returns `true`.\n *\n * DOCUMENT_POSITION_FOLLOWING = 4\n */\n\n\nconst isTargetBefore = (draggable, target) => (target.compareDocumentPosition(draggable) & 4) !== 0;\n/**\n * @hidden\n * If the container and the element are the same\n * or if the container holds (contains) the element, returns `true`.\n *\n * DOCUMENT_POSITION_CONTAINED_BY = 16\n */\n\n\nconst contains = (element, container) => element === container || (container.compareDocumentPosition(element) & 16) !== 0;\n/**\n * @hidden\n */\n\n\nconst position = (target, before) => {\n  const targetRect = offset(target);\n  const {\n    offsetWidth,\n    offsetHeight\n  } = target;\n  const left = targetRect.left + (before ? 0 : offsetWidth);\n  const top = targetRect.top;\n  const height = offsetHeight;\n  return {\n    left,\n    top,\n    height\n  };\n};\n/**\n * @hidden\n */\n\n\nclass DragAndDropService {\n  constructor() {\n    this.changes = new EventEmitter();\n    this.register = [];\n    this.lastTarget = null;\n  }\n\n  add(target) {\n    this.register.push(target);\n  }\n\n  remove(target) {\n    this.register = this.register.filter(current => current !== target);\n  }\n\n  notifyDrag(draggable, element, mouseEvent) {\n    const target = this.targetFor(element);\n\n    if (this.lastTarget === target) {\n      return;\n    }\n\n    this.changes.next({\n      draggable,\n      mouseEvent,\n      target: this.lastTarget,\n      type: 'leave'\n    });\n\n    if (target) {\n      this.changes.next({\n        draggable,\n        mouseEvent,\n        target,\n        type: 'enter'\n      });\n    }\n\n    this.lastTarget = target;\n  }\n\n  notifyDrop(draggable, mouseEvent) {\n    this.changes.next({\n      draggable,\n      mouseEvent,\n      target: this.lastTarget,\n      type: 'drop'\n    });\n    this.lastTarget = null;\n  }\n\n  targetFor(element) {\n    const comparer = contains.bind(null, element);\n    return this.register.find(({\n      element: {\n        nativeElement\n      }\n    }) => comparer(nativeElement));\n  }\n\n}\n\nDragAndDropService.ɵfac = function DragAndDropService_Factory(t) {\n  return new (t || DragAndDropService)();\n};\n\nDragAndDropService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DragAndDropService,\n  factory: DragAndDropService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragAndDropService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nconst updateClass = (element, valid) => {\n  const icon = element.querySelector('.k-icon');\n  icon.className = icon.className.replace(/(plus|cancel)/, valid ? 'plus' : 'cancel');\n};\n\nconst updateLock = (element, locked = null) => {\n  const icon = element.querySelectorAll('.k-icon')[1];\n  const value = locked === null ? '' : locked ? 'k-i-lock' : 'k-i-unlock';\n  icon.className = icon.className.replace(/(k-i-unlock|k-i-lock)/, '') + ` ${value}`;\n};\n\nconst decorate = element => {\n  element.className = 'k-header k-drag-clue';\n  element.style.position = 'absolute';\n  element.style.zIndex = '20000';\n};\n/**\n * @hidden\n */\n\n\nclass DragHintService {\n  constructor(santizer) {\n    this.santizer = santizer;\n  }\n\n  create(title) {\n    this.dom = document.createElement(\"div\");\n    decorate(this.dom);\n    const safeTitle = this.santizer.sanitize(SecurityContext.HTML, title);\n    this.dom.innerHTML = `\n            <span class=\"k-icon k-drag-status k-i-cancel k-icon-with-modifier\">\n                <span class=\"k-icon k-icon-modifier\"></span>\n            </span>\n            ${safeTitle}\n        `;\n  }\n\n  attach() {\n    return append(this.dom);\n  }\n\n  remove() {\n    if (this.dom && this.dom.parentNode) {\n      (function (el) {\n        setTimeout(() => document.body.removeChild(el));\n      })(this.dom); // hack for IE + pointer events!\n\n\n      this.dom = null;\n    }\n  }\n\n  show() {\n    this.dom.style.display = \"\";\n  }\n\n  hide() {\n    this.dom.style.display = \"none\";\n  }\n\n  enable() {\n    updateClass(this.dom, true);\n  }\n\n  disable() {\n    updateClass(this.dom, false);\n  }\n\n  removeLock() {\n    updateLock(this.dom);\n  }\n\n  toggleLock(locked) {\n    updateLock(this.dom, locked);\n  }\n\n  move(move) {\n    this.dom.style.top = move.pageY + 'px';\n    this.dom.style.left = move.pageX + 'px';\n  }\n\n}\n\nDragHintService.ɵfac = function DragHintService_Factory(t) {\n  return new (t || DragHintService)(i0.ɵɵinject(i1$3.DomSanitizer));\n};\n\nDragHintService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DragHintService,\n  factory: DragHintService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragHintService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$3.DomSanitizer\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass DropCueService {\n  create() {\n    this.dom = document.createElement(\"div\");\n    this.dom.className = 'k-grouping-dropclue';\n    this.hide();\n  }\n\n  attach() {\n    return append(this.dom);\n  }\n\n  remove() {\n    if (this.dom && this.dom.parentElement) {\n      document.body.removeChild(this.dom);\n      this.dom = null;\n    }\n  }\n\n  hide() {\n    this.dom.style.display = \"none\";\n  }\n\n  position({\n    left,\n    top,\n    height\n  }) {\n    this.dom.style.display = 'block';\n    this.dom.style.height = height + 'px';\n    this.dom.style.top = top + 'px';\n    const width = this.dom.offsetWidth / 2;\n    this.dom.style.left = left - width + 'px';\n  }\n\n}\n\nDropCueService.ɵfac = function DropCueService_Factory(t) {\n  return new (t || DropCueService)();\n};\n\nDropCueService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DropCueService,\n  factory: DropCueService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropCueService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nclass ColumnReorderService {\n  constructor() {\n    this.changes = new EventEmitter();\n  }\n\n  reorder(e) {\n    this.changes.emit(e);\n  }\n\n}\n\nColumnReorderService.ɵfac = function ColumnReorderService_Factory(t) {\n  return new (t || ColumnReorderService)();\n};\n\nColumnReorderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ColumnReorderService,\n  factory: ColumnReorderService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnReorderService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Arguments for the `columnReorder` event.\n */\n\n\nclass ColumnReorderEvent extends PreventableEvent {\n  /**\n   * @hidden\n   */\n  constructor({\n    column,\n    newIndex,\n    oldIndex\n  }) {\n    super();\n    this.column = column;\n    this.newIndex = newIndex;\n    this.oldIndex = oldIndex;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass NavigationMetadata {\n  constructor(dataRows, headerRows, isVirtual, hasPager, hasDetailTemplate, gridElement, virtualColumns, columns) {\n    this.dataRows = dataRows;\n    this.headerRows = headerRows;\n    this.isVirtual = isVirtual;\n    this.hasPager = hasPager;\n    this.hasDetailTemplate = hasDetailTemplate;\n    this.gridElement = gridElement;\n    this.virtualColumns = virtualColumns;\n    this.columns = columns;\n  }\n\n  get maxLogicalRowIndex() {\n    const dataRows = this.hasDetailTemplate ? this.dataRows * 2 : this.dataRows;\n    return this.headerRows + dataRows - 1;\n  }\n\n}\n\nconst NO_STICKY = {\n  left: '0px',\n  right: '0px'\n};\n/**\n * @hidden\n */\n\nclass ColumnInfoService {\n  constructor() {\n    this.visibilityChange = new EventEmitter();\n    this.lockedChange = new EventEmitter();\n    this.stickyChange = new EventEmitter();\n    this.columnRangeChange = new EventEmitter();\n    this.columnsContainer = new ColumnsContainer(() => []);\n  }\n\n  get lockedLeafColumns() {\n    return this.columnsContainer.lockedLeafColumns;\n  }\n\n  get nonLockedLeafColumns() {\n    return this.columnsContainer.nonLockedLeafColumns;\n  }\n\n  get isLocked() {\n    return this.lockedLeafColumns.length > 0;\n  }\n\n  get totalLevels() {\n    return this.columnsContainer.totalLevels;\n  }\n\n  get hiddenColumns() {\n    if (!this.list) {\n      return [];\n    }\n\n    return this.list().filter(column => !column.isVisible);\n  }\n\n  get leafNamedColumns() {\n    const columns = expandColumns(this.list().filterSort(column => !column.isColumnGroup)).filter(column => column.matchesMedia && column.displayTitle);\n    return orderBy(columns, [{\n      field: 'locked',\n      dir: 'desc'\n    }]);\n  }\n\n  get unlockedRootCount() {\n    return this.list().rootColumns().filter(column => !column.locked && column.isVisible).length;\n  }\n\n  stickyColumnsStyles(column) {\n    if (!this.stickyColumns) {\n      this.stickyColumns = this.list().rootColumns().filter(column => column.sticky && !column.locked && column.isVisible);\n    }\n\n    if (this.stickyColumns.length === 0) {\n      return NO_STICKY;\n    }\n\n    const result = this.stickyColumns.reduce((acc, curr) => {\n      if (curr.leafIndex < column.leafIndex) {\n        acc.left += curr.width;\n      } else if (curr.leafIndex > column.leafIndex) {\n        acc.right += curr.width;\n      }\n\n      return acc;\n    }, {\n      left: 0,\n      right: 0\n    });\n    return {\n      left: `${result.left}px`,\n      right: `${result.right}px`\n    };\n  }\n\n  init(columns, list) {\n    this.columnsContainer = columns;\n    this.list = list;\n    this.stickyColumns = null;\n  }\n\n  changeVisibility(columns) {\n    this.stickyColumns = null;\n    this.visibilityChange.emit(columns);\n  }\n\n  changeLocked(columns) {\n    this.stickyColumns = null;\n    this.lockedChange.emit(columns);\n  }\n\n  changeStuck(columns) {\n    this.stickyColumns = null;\n    this.stickyChange.emit(columns);\n  }\n\n}\n\nColumnInfoService.ɵfac = function ColumnInfoService_Factory(t) {\n  return new (t || ColumnInfoService)();\n};\n\nColumnInfoService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ColumnInfoService,\n  factory: ColumnInfoService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnInfoService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nclass SortService {\n  constructor() {\n    this.changes = new Subject();\n  }\n\n  sort(value) {\n    this.changes.next(value);\n  }\n\n}\n/**\n * Arguments for the `columnVisibilityChange` event.\n */\n\n\nclass ColumnVisibilityChangeEvent {\n  /**\n   * @hidden\n   */\n  constructor(columns) {\n    this.columns = columns;\n  }\n\n}\n/**\n * Arguments for the `columnLockedChange` event.\n */\n\n\nclass ColumnLockedChangeEvent {\n  /**\n   * @hidden\n   */\n  constructor(columns) {\n    this.columns = columns;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nconst GROUP_CELL_WIDTH = 32; // this should be the value of group-cell inside the theme!\n\n/**\n * @hidden\n */\n\nconst RESPONSIVE_BREAKPOINT_MEDIUM = 600;\n/**\n * @hidden\n */\n\nconst RESPONSIVE_BREAKPOINT_LARGE = 768;\n/**\n * @hidden\n */\n\nfunction defaultTrackBy(index, item) {\n  if (item.type === 'data' && item.isEditing) {\n    return item.data;\n  }\n\n  return index;\n}\n/**\n * Arguments for the `columnStickyChange` event.\n */\n\n\nclass ColumnStickyChangeEvent {\n  /**\n   * @hidden\n   */\n  constructor(columns) {\n    this.columns = columns;\n  }\n\n}\n/**\n * Represents the virtual scrolling cell template of the Grid while loading new data. Provides an option to customize the\n * appearance of the indicator that is displayed while new data is loading. To define the loading cell template,\n * nest an `<ng-template>` tag with the `kendoGridCellLoadingTemplate` directive inside `<kendo-grid>` ([see example]({% slug virtualscrolling_grid %}#toc-custom-loading-skeleton)).\n *\n * The template context is set to the current column, and utilizes the `let-x` syntax&mdash;for example, `let-column`.\n *\n * @example\n * ```ts-no-run\n *       <kendo-grid [data]=\"data\" scrollable=\"virtual\" [rowHeight]=\"36\">\n *         <ng-template kendoGridCellLoadingTemplate let-column>\n *             ...\n *         </ng-template>\n *       </kendo-grid>\n * ```\n */\n\n\nclass CellLoadingTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nCellLoadingTemplateDirective.ɵfac = function CellLoadingTemplateDirective_Factory(t) {\n  return new (t || CellLoadingTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nCellLoadingTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CellLoadingTemplateDirective,\n  selectors: [[\"\", \"kendoGridCellLoadingTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellLoadingTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridCellLoadingTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Creates a loading template that overrides the default loading indicator of the Grid Component.\n * To define a loading template, nest an `<ng-template>` tag with the `kendoGridLoadingTemplate` directive inside the `<kendo-grid>` tag\n * [see example]({% slug binding_grid %}#toc-loading-template).\n */\n\n\nclass LoadingTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nLoadingTemplateDirective.ɵfac = function LoadingTemplateDirective_Factory(t) {\n  return new (t || LoadingTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nLoadingTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LoadingTemplateDirective,\n  selectors: [[\"\", \"kendoGridLoadingTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoadingTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridLoadingTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass ToolbarComponent {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.context = {};\n  }\n\n  set position(value) {\n    this.context.position = value;\n  }\n\n  get toolbarTemplateRef() {\n    return this.ctx.grid.toolbarTemplate ? this.ctx.grid.toolbarTemplate.templateRef : undefined;\n  }\n\n}\n\nToolbarComponent.ɵfac = function ToolbarComponent_Factory(t) {\n  return new (t || ToolbarComponent)(i0.ɵɵdirectiveInject(ContextService));\n};\n\nToolbarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ToolbarComponent,\n  selectors: [[\"kendo-grid-toolbar\"]],\n  inputs: {\n    position: \"position\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function ToolbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ToolbarComponent_0_Template, 1, 2, undefined, 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.toolbarTemplateRef);\n    }\n  },\n  directives: [i4.NgIf, i4.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToolbarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-toolbar',\n      template: `\n        <ng-template\n            *ngIf=\"toolbarTemplateRef\"\n            [ngTemplateOutlet]=\"toolbarTemplateRef\"\n            [ngTemplateOutletContext]=\"context\"\n            >\n        </ng-template>\n    `\n    }]\n  }], function () {\n    return [{\n      type: ContextService\n    }];\n  }, {\n    position: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nconst normalizeSettings = ({\n  buttonCount = 10,\n  info = true,\n  type = 'numeric',\n  pageSizes = false,\n  previousNext = true,\n  responsive = true,\n  position = 'bottom'\n}) => ({\n  buttonCount,\n  info,\n  pageSizes: pageSizes === true ? [5, 10, 20] : pageSizes,\n  previousNext,\n  type,\n  responsive,\n  position\n});\n/**\n * @hidden\n */\n\n\nconst normalize$1 = settings => normalizeSettings(settings === true ? {} : settings);\n/**\n * @hidden\n */\n\n\nclass FocusGroup {\n  constructor(root) {\n    this.root = root;\n    this.active = true;\n    this.children = [];\n    this.root.registerGroup(this);\n  }\n\n  get focusableChildren() {\n    return this.children.filter(el => el.canFocus());\n  }\n\n  get isActive() {\n    return this.active;\n  }\n\n  ngOnDestroy() {\n    this.root.unregisterGroup(this);\n    this.active = true;\n  }\n\n  registerElement(element) {\n    this.unregisterElement(element);\n    this.children.push(element);\n  }\n\n  unregisterElement(element) {\n    this.children = this.children.filter(f => f !== element);\n  }\n  /**\n   * Returns a Boolean value which indicates if the group will receive focus when the cell is focused.\n   * Requires a single \"simple\" focusable element such as a button or a checkbox.\n   */\n\n\n  isNavigable() {\n    const focusable = this.focusableChildren;\n    return focusable.length === 1 && focusable[0].isNavigable();\n  }\n\n  canFocus() {\n    return this.focusableChildren.length > 0;\n  }\n\n  focus() {\n    if (this.canFocus() && !this.hasFocus()) {\n      this.focusableChildren[0].focus();\n    }\n  }\n\n  activate() {\n    this.toggleState(true);\n  }\n\n  deactivate() {\n    this.toggleState(false);\n  }\n\n  hasFocus() {\n    return this.children.reduce((focused, element) => focused || element.hasFocus(), false);\n  }\n\n  toggleState(active) {\n    if (this.active !== active) {\n      this.active = active;\n      this.children.forEach(f => f.toggle(active));\n    }\n  }\n\n}\n\nFocusGroup.ɵfac = function FocusGroup_Factory(t) {\n  return new (t || FocusGroup)(i0.ɵɵinject(FocusRoot));\n};\n\nFocusGroup.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: FocusGroup,\n  factory: FocusGroup.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FocusGroup, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: FocusRoot\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass PagerElementComponent {\n  constructor(localization, pagerContext, cd) {\n    this.localization = localization;\n    this.pagerContext = pagerContext;\n    this.cd = cd;\n    this.total = this.pagerContext.total;\n    this.skip = this.pagerContext.skip;\n    this.pageSize = this.pagerContext.pageSize;\n  }\n  /**\n   * @hidden\n   *\n   * @readonly\n   * @type {number}\n   * @memberOf PagerElementComponent\n   */\n\n\n  get currentPage() {\n    return Math.floor((this.skip || 0) / this.pageSize) + 1;\n  }\n  /**\n   * @hidden\n   *\n   * @readonly\n   * @type {number}\n   * @memberOf PagerElementComponent\n   */\n\n\n  get totalPages() {\n    return Math.ceil((this.total || 0) / this.pageSize);\n  }\n  /**\n   * @hidden\n   *\n   * @param {string} key\n   * @returns {string}\n   *\n   * @memberOf PagerElementComponent\n   */\n\n\n  textFor(key) {\n    return this.localization.get(key);\n  }\n  /**\n   * @hidden\n   *\n   * @param {number} page\n   *\n   * @memberOf PagerElementComponent\n   */\n\n\n  changePage(page) {\n    this.pagerContext.changePage(page);\n    return false;\n  }\n  /**\n   * @hidden\n   *\n   * @memberOf PagerElementComponent\n   */\n\n\n  ngOnInit() {\n    this.subscriptions = this.pagerContext.changes.subscribe(this.onChanges.bind(this));\n    this.subscriptions.add(this.localization.changes.subscribe(() => this.cd.markForCheck()));\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n  }\n\n}\n\nPagerElementComponent.ɵfac = function PagerElementComponent_Factory(t) {\n  return new (t || PagerElementComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(PagerContextService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nPagerElementComponent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: PagerElementComponent\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerElementComponent, [{\n    type: Directive,\n    args: [{}]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: PagerContextService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n/**\n * Displays buttons for navigating to the first and to the previous page ([see example]({% slug paging_grid %}#toc-pager-templates)).\n */\n\n\nclass PagerPrevButtonsComponent extends PagerElementComponent {\n  constructor(localization, pagerContext, cd, navigationService) {\n    super(localization, pagerContext, cd);\n    this.navigationService = navigationService;\n  }\n  /**\n   * @hidden\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberOf PagerPrevButtonsComponent\n   */\n\n\n  get disabled() {\n    return this.currentPage === 1 || !this.total;\n  }\n\n  onChanges({\n    total,\n    skip,\n    pageSize\n  }) {\n    this.total = total;\n    this.skip = skip;\n    this.pageSize = pageSize;\n    this.cd.markForCheck();\n  }\n\n}\n\nPagerPrevButtonsComponent.ɵfac = function PagerPrevButtonsComponent_Factory(t) {\n  return new (t || PagerPrevButtonsComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(PagerContextService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(NavigationService));\n};\n\nPagerPrevButtonsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PagerPrevButtonsComponent,\n  selectors: [[\"kendo-pager-prev-buttons\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 4,\n  vars: 16,\n  consts: [[\"role\", \"button\", 3, \"kendoGridFocusable\", \"title\", \"ngClass\", \"click\", \"keydown.enter\"], [\"role\", \"note\", 3, \"ngClass\"]],\n  template: function PagerPrevButtonsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵlistener(\"click\", function PagerPrevButtonsComponent_Template_span_click_0_listener() {\n        return ctx.currentPage !== 1 ? ctx.changePage(0) : false;\n      })(\"keydown.enter\", function PagerPrevButtonsComponent_Template_span_keydown_enter_0_listener() {\n        return ctx.currentPage !== 1 ? ctx.changePage(0) : false;\n      });\n      i0.ɵɵelement(1, \"span\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"span\", 0);\n      i0.ɵɵlistener(\"click\", function PagerPrevButtonsComponent_Template_span_click_2_listener() {\n        return ctx.currentPage !== 1 ? ctx.changePage(ctx.currentPage - 2) : false;\n      })(\"keydown.enter\", function PagerPrevButtonsComponent_Template_span_keydown_enter_2_listener() {\n        return ctx.currentPage !== 1 ? ctx.changePage(ctx.currentPage - 2) : false;\n      });\n      i0.ɵɵelement(3, \"span\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"kendoGridFocusable\", !ctx.disabled)(\"title\", ctx.textFor(\"pagerFirstPage\"))(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx.disabled));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(12, _c1));\n      i0.ɵɵattribute(\"aria-label\", ctx.textFor(\"pagerFirstPage\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"kendoGridFocusable\", !ctx.disabled)(\"title\", ctx.textFor(\"pagerPreviousPage\"))(\"ngClass\", i0.ɵɵpureFunction1(13, _c2, ctx.disabled));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(15, _c3));\n      i0.ɵɵattribute(\"aria-label\", ctx.textFor(\"pagerPreviousPage\"));\n    }\n  },\n  directives: [FocusableDirective, i4.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerPrevButtonsComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'kendo-pager-prev-buttons',\n      template: `\n        <span\n            [kendoGridFocusable]=\"!disabled\"\n            [title]=\"textFor('pagerFirstPage')\"\n            (click)=\"currentPage !== 1 ? changePage(0) : false\"\n            (keydown.enter)=\"currentPage !== 1 ? changePage(0) : false\"\n            role=\"button\"\n            [ngClass]=\"{\n                'k-link': true,\n                'k-pager-nav': true,\n                'k-disabled': disabled,\n                'k-pager-first': true\n            }\">\n            <span role=\"note\"\n                  [attr.aria-label]=\"textFor('pagerFirstPage')\"\n                  [ngClass]=\"{\n                    'k-icon': true,\n                    'k-i-caret-alt-to-left': true\n                  }\">\n            </span>\n        </span>\n        <span\n            [kendoGridFocusable]=\"!disabled\"\n            [title]=\"textFor('pagerPreviousPage')\"\n            role=\"button\"\n            (click)=\"currentPage !== 1 ? changePage(currentPage-2) : false\"\n            (keydown.enter)=\"currentPage !== 1 ? changePage(currentPage-2) : false\"\n            [ngClass]=\"{\n                'k-link': true,\n                'k-pager-nav': true,\n                'k-disabled': disabled,\n                '': true\n            }\">\n            <span role=\"note\"\n                  [attr.aria-label]=\"textFor('pagerPreviousPage')\"\n                  [ngClass]=\"{\n                    'k-icon': true,\n                    'k-i-caret-alt-left': true\n                  }\">\n            </span>\n        </span>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: PagerContextService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: NavigationService\n    }];\n  }, null);\n})();\n/**\n * Displays numeric buttons to enable navigation between the pages.\n */\n\n\nclass PagerNumericButtonsComponent extends PagerElementComponent {\n  constructor(localization, cd, pagerContext) {\n    super(localization, pagerContext, cd);\n    this.pagerContext = pagerContext;\n    this.numbersWrapClass = true;\n  }\n  /**\n   * @hidden\n   *\n   * @readonly\n   * @type {number[]}\n   * @memberOf PagerNumericButtonsComponent\n   */\n\n\n  get buttons() {\n    let result = [];\n\n    for (let idx = this.start; idx <= this.end; idx++) {\n      result.push(idx);\n    }\n\n    return result;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get end() {\n    return Math.min(this.start + this.buttonCount - 1, this.totalPages);\n  }\n  /**\n   * @hidden\n   */\n\n\n  get start() {\n    const page = this.currentPage;\n    const buttonCount = this.buttonCount;\n\n    if (page > buttonCount) {\n      const reminder = page % buttonCount;\n      return reminder === 0 ? page - buttonCount + 1 : page - reminder + 1;\n    }\n\n    return 1;\n  }\n  /**\n   * @hidden\n   */\n\n\n  pageLabel(num) {\n    const pageText = this.textFor('pagerPage');\n\n    if (pageText) {\n      return pageText + ' ' + num;\n    }\n\n    return num.toString();\n  }\n  /**\n   * @hidden\n   */\n\n\n  onSelectChange(e) {\n    const target = e.target;\n    const valueAsNumber = Number(target.value);\n\n    if (!Number.isNaN(valueAsNumber)) {\n      this.changePage(valueAsNumber - 1);\n    } else {\n      if (target.value === 'previousButtons') {\n        this.changePage(this.start - 2);\n      } else {\n        this.changePage(this.end);\n      }\n    }\n  }\n\n  onChanges({\n    total,\n    skip,\n    pageSize\n  }) {\n    this.total = total;\n    this.skip = skip;\n    this.pageSize = pageSize;\n    this.cd.markForCheck();\n  }\n\n}\n\nPagerNumericButtonsComponent.ɵfac = function PagerNumericButtonsComponent_Factory(t) {\n  return new (t || PagerNumericButtonsComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PagerContextService));\n};\n\nPagerNumericButtonsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PagerNumericButtonsComponent,\n  selectors: [[\"kendo-pager-numeric-buttons\"]],\n  hostVars: 2,\n  hostBindings: function PagerNumericButtonsComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-pager-numbers-wrap\", ctx.numbersWrapClass);\n    }\n  },\n  inputs: {\n    buttonCount: \"buttonCount\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 8,\n  vars: 8,\n  consts: [[\"kendoGridFocusable\", \"\", \"tabindex\", \"0\", 1, \"k-dropdownlist\", \"k-pager-nav\", 3, \"change\"], [\"class\", \"k-link\", \"value\", \"previousButtons\", 3, \"selected\", 4, \"ngIf\"], [3, \"value\", \"selected\", \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"value\", \"nextButtons\", \"class\", \"k-link\", 3, \"selected\", 4, \"ngIf\"], [3, \"ngClass\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"value\", \"previousButtons\", 1, \"k-link\", 3, \"selected\"], [3, \"value\", \"selected\", \"ngClass\"], [\"value\", \"nextButtons\", 1, \"k-link\", 3, \"selected\"], [\"kendoGridFocusable\", \"\", \"tabindex\", \"0\", \"role\", \"button\", 1, \"k-link\", \"k-pager-nav\", 3, \"click\", \"keydown.enter\"], [\"kendoGridFocusable\", \"\", \"tabindex\", \"0\", \"role\", \"button\", 3, \"ngClass\", \"click\", \"keydown.enter\"]],\n  template: function PagerNumericButtonsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"select\", 0);\n      i0.ɵɵlistener(\"change\", function PagerNumericButtonsComponent_Template_select_change_0_listener($event) {\n        return ctx.onSelectChange($event);\n      });\n      i0.ɵɵtemplate(1, PagerNumericButtonsComponent_option_1_Template, 2, 2, \"option\", 1);\n      i0.ɵɵtemplate(2, PagerNumericButtonsComponent_option_2_Template, 2, 8, \"option\", 2);\n      i0.ɵɵtemplate(3, PagerNumericButtonsComponent_option_3_Template, 2, 2, \"option\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ul\", 4);\n      i0.ɵɵtemplate(5, PagerNumericButtonsComponent_li_5_Template, 3, 1, \"li\", 5);\n      i0.ɵɵtemplate(6, PagerNumericButtonsComponent_li_6_Template, 3, 5, \"li\", 6);\n      i0.ɵɵtemplate(7, PagerNumericButtonsComponent_li_7_Template, 3, 1, \"li\", 5);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.start > 1);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.buttons);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.end < ctx.totalPages);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(7, _c6));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.start > 1);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.buttons);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.end < ctx.totalPages);\n    }\n  },\n  directives: [FocusableDirective, i4.NgIf, i4.NgForOf, i4.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerNumericButtonsComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'kendo-pager-numeric-buttons',\n      template: `\n        <select\n            class=\"k-dropdownlist k-pager-nav\"\n            kendoGridFocusable\n            tabindex=\"0\"\n            (change)=\"onSelectChange($event)\">\n            <option *ngIf=\"start > 1\"\n                class=\"k-link\"\n                value=\"previousButtons\"\n                [selected]=\"false\"\n                [attr.aria-label]=\"pageLabel(start - 1)\">...\n            </option>\n            <option *ngFor=\"let num of buttons\"\n                [value]=\"num.toString()\"\n                [selected]=\"num === currentPage\"\n                [attr.aria-label]=\"pageLabel(num)\"\n                [attr.aria-current]=\"currentPage === num ? 'page' : undefined\"\n                [ngClass]=\"{'k-link': true, 'k-selected':currentPage === num}\">\n                {{num}}\n            </option>\n            <option *ngIf=\"end < totalPages\"\n                value=\"nextButtons\"\n                [selected]=\"false\"\n                class=\"k-link\"\n                [attr.aria-label]=\"pageLabel(end + 1)\">...\n            </option>\n        </select>\n        <ul [ngClass]=\"{'k-pager-numbers': true, 'k-reset': true}\">\n            <li *ngIf=\"start > 1\">\n                <span\n                    kendoGridFocusable\n                    tabindex=\"0\"\n                    class=\"k-link k-pager-nav\"\n                    role=\"button\"\n                    [attr.aria-label]=\"pageLabel(start - 1)\"\n                    (click)=\"changePage(start - 2)\"\n                    (keydown.enter)=\"changePage(start - 2)\">...</span>\n            </li>\n            <li *ngFor=\"let num of buttons\">\n                <span\n                    kendoGridFocusable\n                    tabindex=\"0\"\n                    role=\"button\"\n                    [attr.aria-label]=\"pageLabel(num)\"\n                    [ngClass]=\"{'k-link': true, 'k-selected':currentPage === num, 'k-pager-nav': true}\"\n                    (click)=\"changePage(num - 1)\"\n                    (keydown.enter)=\"changePage(num - 1)\">\n                    {{num}}\n                </span>\n            </li>\n            <li *ngIf=\"end < totalPages\">\n                <span\n                    kendoGridFocusable\n                    tabindex=\"0\"\n                    class=\"k-link k-pager-nav\"\n                    role=\"button\"\n                    [attr.aria-label]=\"pageLabel(end + 1)\"\n                    (click)=\"changePage(end)\"\n                    (keydown.enter)=\"changePage(end)\">...</span>\n            </li>\n        </ul>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: PagerContextService\n    }];\n  }, {\n    numbersWrapClass: [{\n      type: HostBinding,\n      args: ['class.k-pager-numbers-wrap']\n    }],\n    buttonCount: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass PagerInputDirective {\n  constructor(host, renderer) {\n    this.host = host;\n    this.renderer = renderer;\n  }\n\n  ngAfterViewInit() {\n    const inputElement = this.host.numericInput.nativeElement;\n    this.renderer.addClass(inputElement, 'k-pager-nav');\n  }\n\n}\n\nPagerInputDirective.ɵfac = function PagerInputDirective_Factory(t) {\n  return new (t || PagerInputDirective)(i0.ɵɵdirectiveInject(i4$1.NumericTextBoxComponent), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nPagerInputDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: PagerInputDirective,\n  selectors: [[\"\", \"kendoGridPagerInput\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerInputDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridPagerInput]'\n    }]\n  }], function () {\n    return [{\n      type: i4$1.NumericTextBoxComponent\n    }, {\n      type: i0.Renderer2\n    }];\n  }, null);\n})();\n/**\n * Displays an input element which allows the typing and rendering of page numbers.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *      <kendo-grid\n *        [kendoGridBinding]=\"gridData\"\n *        [pageSize]=\"1\"\n *        [pageable]=\"true\"\n *      >\n *       <kendo-grid-column field=\"ProductID\" title=\"ID\" [width]=\"40\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"ProductName\" title=\"Name\" [width]=\"250\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"UnitPrice\" title=\"Price\" [width]=\"80\" format=\"{0:c}\">\n *       </kendo-grid-column>\n *\n *       <ng-template kendoPagerTemplate let-totalPages=\"totalPages\" let-currentPage=\"currentPage\">\n *          <kendo-pager-prev-buttons></kendo-pager-prev-buttons>\n *          <kendo-pager-numeric-buttons [buttonCount]=\"10\"></kendo-pager-numeric-buttons>\n *          <kendo-pager-next-buttons></kendo-pager-next-buttons>\n *          <kendo-pager-input></kendo-pager-input>\n *          <kendo-pager-info></kendo-pager-info>\n *       </ng-template>\n *\n *    </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\n\n\nclass PagerInputComponent extends PagerElementComponent {\n  constructor(localization, pagerContext, zone, navigationService, cd) {\n    super(localization, pagerContext, cd);\n    this.pagerContext = pagerContext;\n    this.zone = zone;\n    this.navigationService = navigationService;\n    /**\n     * @hidden\n     *\n     * @param {string} value\n     *\n     * @memberOf PagerInputComponent\n     */\n\n    this.handleKeyDown = event => {\n      let incomingValue = this.numericInput.value || this.current;\n\n      if (event.keyCode === Keys.Enter) {\n        event.preventDefault();\n\n        if (incomingValue !== this.current) {\n          this.zone.run(() => {\n            this.changePage(incomingValue - 1);\n          });\n        }\n      }\n    };\n    /**\n     * @hidden\n     *\n     * @param {string} value\n     *\n     * @memberOf PagerInputComponent\n     */\n\n\n    this.handleBlur = () => {\n      const inputValue = this.numericInput.value;\n\n      if (!inputValue) {\n        this.numericInput.writeValue(this.current);\n        return;\n      }\n\n      if (inputValue !== this.current) {\n        this.zone.run(() => {\n          this.changePage(inputValue - 1);\n        });\n      }\n    };\n  }\n  /**\n   * @hidden\n   */\n\n\n  get current() {\n    return this.hasPages ? this.currentPage : 0;\n  }\n\n  get hasPages() {\n    return this.totalPages !== 0;\n  }\n\n  onChanges({\n    total,\n    skip,\n    pageSize\n  }) {\n    this.total = total;\n    this.skip = skip;\n    this.pageSize = pageSize;\n    this.cd.markForCheck();\n  }\n\n}\n\nPagerInputComponent.ɵfac = function PagerInputComponent_Factory(t) {\n  return new (t || PagerInputComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(PagerContextService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nPagerInputComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PagerInputComponent,\n  selectors: [[\"kendo-pager-input\"]],\n  viewQuery: function PagerInputComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(NumericTextBoxComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.numericInput = _t.first);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 4,\n  vars: 19,\n  consts: [[3, \"ngClass\"], [\"kendoGridPagerInput\", \"\", \"format\", \"n0\", 3, \"kendoGridFocusable\", \"tabindex\", \"spinners\", \"decimals\", \"disabled\", \"value\", \"min\", \"max\", \"autoCorrect\", \"title\", \"kendoEventsOutsideAngular\"]],\n  template: function PagerInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelement(2, \"kendo-numerictextbox\", 1);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(15, _c7));\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.textFor(\"pagerPage\"), \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"kendoGridFocusable\", ctx.hasPages)(\"tabindex\", 0)(\"spinners\", false)(\"decimals\", 0)(\"disabled\", !ctx.hasPages)(\"value\", ctx.current)(\"min\", ctx.hasPages ? 1 : 0)(\"max\", ctx.totalPages)(\"autoCorrect\", true)(\"title\", ctx.textFor(\"pagerPageNumberInputTitle\"))(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction2(16, _c8, ctx.handleKeyDown, ctx.handleBlur));\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate2(\" \", ctx.textFor(\"pagerOf\"), \" \", ctx.totalPages, \" \");\n    }\n  },\n  directives: [i4.NgClass, i4$1.NumericTextBoxComponent, PagerInputDirective, FocusableDirective, i1$1.EventsOutsideAngularDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerInputComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-pager-input',\n      template: `\n     <span [ngClass]=\"{'k-pager-input': true, 'k-label': true}\">\n        {{textFor('pagerPage')}}\n        <kendo-numerictextbox\n            kendoGridPagerInput\n            [kendoGridFocusable]=\"hasPages\"\n            [tabindex]=\"0\"\n            [spinners]=\"false\"\n            [decimals]=\"0\"\n            format=\"n0\"\n            [disabled]=\"!hasPages\"\n            [value]=\"current\"\n            [min]=\"hasPages ? 1 : 0\"\n            [max]=\"totalPages\"\n            [autoCorrect]=\"true\"\n            [title]=\"textFor('pagerPageNumberInputTitle')\"\n            [kendoEventsOutsideAngular]=\"{\n                keydown: handleKeyDown,\n                focusout: handleBlur\n            }\"\n        >\n        </kendo-numerictextbox>\n        {{textFor('pagerOf')}} {{totalPages}}\n     </span>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: PagerContextService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: NavigationService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    numericInput: [{\n      type: ViewChild,\n      args: [NumericTextBoxComponent, {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * Displays buttons for navigating to the next and to the last page ([see example]({% slug paging_grid %}#toc-pager-template)).\n */\n\n\nclass PagerNextButtonsComponent extends PagerElementComponent {\n  constructor(localization, pagerContext, cd, navigationService) {\n    super(localization, pagerContext, cd);\n    this.navigationService = navigationService;\n  }\n  /**\n   * @hidden\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberOf PagerNextButtonsComponent\n   */\n\n\n  get disabled() {\n    return this.currentPage === this.totalPages || !this.total;\n  }\n\n  onChanges({\n    total,\n    skip,\n    pageSize\n  }) {\n    this.total = total;\n    this.skip = skip;\n    this.pageSize = pageSize;\n    this.cd.markForCheck();\n  }\n\n}\n\nPagerNextButtonsComponent.ɵfac = function PagerNextButtonsComponent_Factory(t) {\n  return new (t || PagerNextButtonsComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(PagerContextService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(NavigationService));\n};\n\nPagerNextButtonsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PagerNextButtonsComponent,\n  selectors: [[\"kendo-pager-next-buttons\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 4,\n  vars: 16,\n  consts: [[\"tabindex\", \"0\", \"role\", \"button\", 3, \"kendoGridFocusable\", \"title\", \"ngClass\", \"click\", \"keydown.enter\"], [\"role\", \"note\", 3, \"ngClass\"]],\n  template: function PagerNextButtonsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵlistener(\"click\", function PagerNextButtonsComponent_Template_span_click_0_listener() {\n        return ctx.currentPage !== ctx.totalPages ? ctx.changePage(ctx.currentPage) : false;\n      })(\"keydown.enter\", function PagerNextButtonsComponent_Template_span_keydown_enter_0_listener() {\n        return ctx.currentPage !== ctx.totalPages ? ctx.changePage(ctx.currentPage) : false;\n      });\n      i0.ɵɵelement(1, \"span\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"span\", 0);\n      i0.ɵɵlistener(\"click\", function PagerNextButtonsComponent_Template_span_click_2_listener() {\n        return ctx.currentPage !== ctx.totalPages ? ctx.changePage(ctx.totalPages - 1) : false;\n      })(\"keydown.enter\", function PagerNextButtonsComponent_Template_span_keydown_enter_2_listener() {\n        return ctx.currentPage !== ctx.totalPages ? ctx.changePage(ctx.totalPages - 1) : false;\n      });\n      i0.ɵɵelement(3, \"span\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"kendoGridFocusable\", !ctx.disabled)(\"title\", ctx.textFor(\"pagerNextPage\"))(\"ngClass\", i0.ɵɵpureFunction1(10, _c2, ctx.disabled));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(12, _c9));\n      i0.ɵɵattribute(\"aria-label\", ctx.textFor(\"pagerNextPage\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"kendoGridFocusable\", !ctx.disabled)(\"title\", ctx.textFor(\"pagerLastPage\"))(\"ngClass\", i0.ɵɵpureFunction1(13, _c10, ctx.disabled));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(15, _c11));\n      i0.ɵɵattribute(\"aria-label\", ctx.textFor(\"pagerLastPage\"));\n    }\n  },\n  directives: [FocusableDirective, i4.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerNextButtonsComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'kendo-pager-next-buttons',\n      template: `\n        <span\n            [kendoGridFocusable]=\"!disabled\"\n            tabindex=\"0\"\n            [title]=\"textFor('pagerNextPage')\"\n            (click)=\"currentPage !== totalPages ? changePage(currentPage) : false\"\n            (keydown.enter)=\"currentPage !== totalPages ? changePage(currentPage) : false\"\n            role=\"button\"\n            [ngClass]=\"{\n                'k-link': true,\n                'k-pager-nav': true,\n                'k-disabled': disabled,\n                '': true\n            }\">\n            <span role=\"note\" [attr.aria-label]=\"textFor('pagerNextPage')\"\n                [ngClass]=\"{\n                    'k-icon':true,\n                    'k-i-caret-alt-right': true\n                }\">\n            </span>\n        </span>\n        <span\n            [kendoGridFocusable]=\"!disabled\"\n            tabindex=\"0\"\n            [title]=\"textFor('pagerLastPage')\"\n            (click)=\"currentPage !== totalPages ? changePage(totalPages-1) : false\"\n            (keydown.enter)=\"currentPage !== totalPages ? changePage(totalPages-1) : false\"\n            role=\"button\"\n            [ngClass]=\"{\n                'k-link': true,\n                'k-pager-nav': true,\n                'k-disabled': disabled,\n                'k-pager-last': true\n            }\">\n            <span role=\"note\" [attr.aria-label]=\"textFor('pagerLastPage')\"\n                [ngClass]=\"{\n                    'k-icon':true,\n                    'k-i-caret-alt-to-right': true\n                }\">\n            </span>\n        </span>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: PagerContextService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: NavigationService\n    }];\n  }, null);\n})(); // eslint-disable no-access-missing-member\n\n/**\n * Displays information about the current page and the total number of records ([see example]({% slug paging_grid %}#toc-pager-templates)).\n */\n\n\nclass PagerInfoComponent extends PagerElementComponent {\n  constructor(localization, cd, pagerContext) {\n    super(localization, pagerContext, cd);\n    this.pagerContext = pagerContext;\n  }\n  /**\n   * @hidden\n   *\n   * @readonly\n   * @type {number}\n   * @memberOf PagerInfoComponent\n   */\n\n\n  get maxItems() {\n    return Math.min(this.currentPage * this.pageSize, this.total);\n  }\n  /**\n   * @hidden\n   *\n   * @readonly\n   * @type {number}\n   * @memberOf PagerInfoComponent\n   */\n\n\n  get currentPageText() {\n    return this.total ? (this.currentPage - 1) * this.pageSize + 1 : 0;\n  }\n  /**\n   * @hidden\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberOf PagerInfoComponent\n   */\n\n\n  get classes() {\n    return true;\n  }\n\n  onChanges({\n    total,\n    skip,\n    pageSize\n  }) {\n    this.total = total;\n    this.skip = skip;\n    this.pageSize = pageSize;\n    this.cd.markForCheck();\n  }\n\n}\n\nPagerInfoComponent.ɵfac = function PagerInfoComponent_Factory(t) {\n  return new (t || PagerInfoComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PagerContextService));\n};\n\nPagerInfoComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PagerInfoComponent,\n  selectors: [[\"kendo-pager-info\"]],\n  hostVars: 4,\n  hostBindings: function PagerInfoComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-pager-info\", ctx.classes)(\"k-label\", ctx.classes);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 5,\n  template: function PagerInfoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵtextInterpolate5(\"\", ctx.currentPageText, \" - \", ctx.maxItems, \" \", ctx.textFor(\"pagerOf\"), \" \", ctx.total, \" \", ctx.textFor(\"pagerItems\"), \"\");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerInfoComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'kendo-pager-info',\n      template: `{{currentPageText}} - {{maxItems}} {{textFor('pagerOf')}} {{total}} {{textFor('pagerItems')}}`\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: PagerContextService\n    }];\n  }, {\n    classes: [{\n      type: HostBinding,\n      args: [\"class.k-pager-info\"]\n    }, {\n      type: HostBinding,\n      args: [\"class.k-label\"]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass PagerDropDownListDirective {\n  constructor(host) {\n    this.host = host;\n\n    this.keydownHandler = e => {\n      if (e.keyCode === Keys.Escape && this.host.isOpen) {\n        e.stopPropagation();\n        this.host.toggle(false);\n      }\n    };\n  }\n\n  ngAfterViewInit() {\n    const wrapperElement = this.host.wrapper.nativeElement;\n    wrapperElement.addEventListener('keydown', this.keydownHandler, true);\n  }\n\n  ngOnDestroy() {\n    this.host.wrapper.nativeElement.removeEventListener('keydown', this.keydownHandler);\n  }\n\n}\n\nPagerDropDownListDirective.ɵfac = function PagerDropDownListDirective_Factory(t) {\n  return new (t || PagerDropDownListDirective)(i0.ɵɵdirectiveInject(i1$4.DropDownListComponent));\n};\n\nPagerDropDownListDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: PagerDropDownListDirective,\n  selectors: [[\"\", \"kendoGridPagerDropDown\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerDropDownListDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridPagerDropDown]'\n    }]\n  }], function () {\n    return [{\n      type: i1$4.DropDownListComponent\n    }];\n  }, null);\n})();\n/**\n * Displays a drop-down list for the page size selection ([see example]({% slug paging_grid %}#toc-pager-templates)).\n */\n\n\nclass PagerPageSizesComponent extends PagerElementComponent {\n  constructor(localization, cd, pagerContext, navigationService) {\n    super(localization, pagerContext, cd);\n    this.pagerContext = pagerContext;\n    this.navigationService = navigationService;\n    this._pageSizes = [];\n  }\n  /**\n   * The page sizes collection. Can be an Array of numbers and/or PageSizeItem objects.\n   *\n   * @example\n   * ```ts-preview\n   * _@Component({\n   *    selector: 'my-app',\n   *    template: `\n   *        <kendo-grid [kendoGridBinding]=\"gridData\" [height]=\"200\"\n   *           [pageable]=\"true\"\n   *            [pageSize]=\"pageSize\">\n   *            <ng-template kendoPagerTemplate let-totalPages=\"totalPages\" let-currentPage=\"currentPage\">\n   *                <kendo-pager-page-sizes [pageSizes]=\"pagesizes\"></kendo-pager-page-sizes>\n   *            </ng-template>\n   *        </kendo-grid>\n   *    `\n   * })\n   * class AppComponent {\n   *    public gridData: any[] = products;\n   *    public pageSize = 2;\n   *    public pagesizes = [{text: 'One', value: 1}, {text: 'Two', value: 2}, {text: 'All', value : 'all'}];\n   * }\n   *\n   * const products = [{\n   *   'ProductID' : 1,\n   *   'ProductName' : \"Chai\",\n   *   'SupplierID' : 1,\n   *   'CategoryID' : 1,\n   *   'QuantityPerUnit' : \"10 boxes x 20 bags\",\n   *   'UnitPrice' : 18.0000,\n   *   'UnitsInStock' : 39,\n   *   'UnitsOnOrder' : 0,\n   *   'ReorderLevel' : 10,\n   *   'Discontinued' : false\n   *\n   * }, {\n   *   'ProductID' : 2,\n   *   'ProductName' : \"Chang\",\n   *   'SupplierID' : 1,\n   *   'CategoryID' : 1,\n   *   'QuantityPerUnit' : \"24 - 12 oz bottles\",\n   *   'UnitPrice' : 19.0000,\n   *   'UnitsInStock' : 17,\n   *   'UnitsOnOrder' : 40,\n   *   'ReorderLevel' : 25,\n   *   'Discontinued' : false\n   * }, {\n   *   'ProductID' : 3,\n   *   'ProductName' : \"Aniseed Syrup\",\n   *   'SupplierID' : 1,\n   *   'CategoryID' : 2,\n   *   'QuantityPerUnit' : \"12 - 550 ml bottles\",\n   *   'UnitPrice' : 10.0000,\n   *   'UnitsInStock' : 13,\n   *   'UnitsOnOrder' : 70,\n   *   'ReorderLevel' : 25,\n   *   'Discontinued' : false\n   * }, {\n   *   'ProductID' : 4,\n   *   'ProductName' : \"Chef Anton\\'s Cajun Seasoning\",\n   *   'SupplierID' : 2,\n   *  'CategoryID' : 2,\n   *   'QuantityPerUnit' : \"48 - 6 oz jars\",\n   *   'UnitPrice' : 22.0000,\n   *   'UnitsInStock' : 53,\n   *   'UnitsOnOrder' : 0,\n   *   'ReorderLevel' : 0,\n   *   'Discontinued' : false\n   * }, {\n   *   'ProductID' : 5,\n   *   'ProductName' : \"Chef Anton\\'s Gumbo Mix\",\n   *   'SupplierID' : 2,\n   *   'CategoryID' : 2,\n   *   'QuantityPerUnit' : \"36 boxes\",\n   *   'UnitPrice' : 21.3500,\n   *   'UnitsInStock' : 0,\n   *   'UnitsOnOrder' : 0,\n   *   'ReorderLevel' : 0,\n   *   'Discontinued' : true\n   * }, {\n   *   'ProductID' : 6,\n   *   'ProductName' : \"Grandma\\'s Boysenberry Spread\",\n   *   'SupplierID' : 3,\n   *   'CategoryID' : 2,\n   *   'QuantityPerUnit' : \"12 - 8 oz jars\",\n   *   'UnitPrice' : 25.0000,\n   *   'UnitsInStock' : 120,\n   *   'UnitsOnOrder' : 0,\n   *   'ReorderLevel' : 25,\n   *   'Discontinued' : false\n   * }];\n   * ```\n   */\n\n\n  set pageSizes(pageSizes) {\n    let normalizedItems = [];\n    pageSizes.forEach(item => {\n      if (typeof item === 'number') {\n        normalizedItems.push({\n          text: item.toString(),\n          value: item\n        });\n      } else {\n        normalizedItems.push(item);\n      }\n    });\n\n    if (this.pageSize && !normalizedItems.some(item => item.value === this.pageSize)) {\n      normalizedItems = [{\n        text: this.pageSize.toString(),\n        value: this.pageSize\n      }, ...normalizedItems];\n    }\n\n    this._pageSizes = normalizedItems;\n  }\n\n  get pageSizes() {\n    return this._pageSizes;\n  }\n  /**\n   * @hidden\n   *\n   * @readonly\n   */\n\n\n  get classes() {\n    return true;\n  }\n  /**\n   * @hidden\n   *\n   * @readonly\n   */\n\n\n  get showInitialPageSize() {\n    return this.pageSizes.filter(item => {\n      if (typeof item.value === 'number') {\n        return item.value === Number(this.pageSize);\n      }\n\n      return this.total === Number(this.pageSize);\n    }).length === 0;\n  }\n  /**\n   * @hidden\n   */\n\n\n  pageSizeChange(value) {\n    this.pageSize = typeof value === 'number' ? value : this.total;\n    this.pagerContext.changePageSize(this.pageSize);\n  }\n  /**\n   * @hidden\n   */\n\n\n  getValue(page) {\n    return typeof page.value === 'number' ? page.value : this.total;\n  }\n\n  onChanges({\n    total,\n    skip,\n    pageSize\n  }) {\n    this.total = total;\n    this.skip = skip;\n    this.pageSize = typeof pageSize === 'number' ? pageSize : this.total;\n    this.cd.markForCheck();\n  }\n\n}\n\nPagerPageSizesComponent.ɵfac = function PagerPageSizesComponent_Factory(t) {\n  return new (t || PagerPageSizesComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PagerContextService), i0.ɵɵdirectiveInject(NavigationService));\n};\n\nPagerPageSizesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PagerPageSizesComponent,\n  selectors: [[\"kendo-pager-page-sizes\"]],\n  hostVars: 4,\n  hostBindings: function PagerPageSizesComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-pager-sizes\", ctx.classes)(\"k-label\", ctx.classes);\n    }\n  },\n  inputs: {\n    pageSizes: \"pageSizes\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 6,\n  consts: [[\"kendoGridPagerDropDown\", \"\", \"kendoGridFocusable\", \"\", \"textField\", \"text\", \"valueField\", \"value\", 3, \"tabindex\", \"data\", \"valuePrimitive\", \"value\", \"valueChange\"], [\"dropdownlist\", \"\"], [3, \"for\", \"text\"]],\n  template: function PagerPageSizesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"kendo-dropdownlist\", 0, 1);\n      i0.ɵɵlistener(\"valueChange\", function PagerPageSizesComponent_Template_kendo_dropdownlist_valueChange_0_listener($event) {\n        return ctx.pageSizeChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"kendo-label\", 2);\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n\n      i0.ɵɵproperty(\"tabindex\", 0)(\"data\", ctx.pageSizes)(\"valuePrimitive\", true)(\"value\", ctx.pageSize);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"for\", _r0)(\"text\", ctx.textFor(\"pagerItemsPerPage\"));\n    }\n  },\n  directives: [i1$4.DropDownListComponent, PagerDropDownListDirective, FocusableDirective, i5.LabelComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerPageSizesComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'kendo-pager-page-sizes',\n      template: `\n        <kendo-dropdownlist\n            #dropdownlist\n            kendoGridPagerDropDown\n            [tabindex]=\"0\"\n            kendoGridFocusable\n            [data]=\"pageSizes\"\n            textField=\"text\"\n            valueField=\"value\"\n            [valuePrimitive]=\"true\"\n            [value]=\"pageSize\"\n            (valueChange)=\"pageSizeChange($event)\"></kendo-dropdownlist>\n        <kendo-label [for]=\"dropdownlist\" [text]=\"textFor('pagerItemsPerPage')\"></kendo-label>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: PagerContextService\n    }, {\n      type: NavigationService\n    }];\n  }, {\n    pageSizes: [{\n      type: Input\n    }],\n    classes: [{\n      type: HostBinding,\n      args: ['class.k-pager-sizes']\n    }, {\n      type: HostBinding,\n      args: ['class.k-label']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass PagerComponent {\n  constructor(pagerContext, navigationService, element, renderer, zone, localizationService, cellContext, focusRoot, focusGroup) {\n    this.pagerContext = pagerContext;\n    this.navigationService = navigationService;\n    this.element = element;\n    this.renderer = renderer;\n    this.zone = zone;\n    this.localizationService = localizationService;\n    this.cellContext = cellContext;\n    this.focusRoot = focusRoot;\n    this.focusGroup = focusGroup;\n    this.total = 0;\n    this.skip = 1;\n    this.pageChange = new EventEmitter();\n    this.pagerWrapClass = true;\n    this.gridPagerClass = true;\n    this.settings = normalize$1({});\n    this.subscriptions = new Subscription();\n    this._templateContext = {};\n    this._isFocused = false;\n\n    this.resizeHandler = () => {\n      const element = this.element.nativeElement;\n\n      if (this.template || !element) {\n        return;\n      }\n\n      const width = element.offsetWidth;\n\n      if (width < RESPONSIVE_BREAKPOINT_MEDIUM) {\n        this.renderer.removeClass(element, 'k-pager-md');\n        this.renderer.addClass(element, 'k-pager-sm');\n      } else if (width >= RESPONSIVE_BREAKPOINT_MEDIUM && width < RESPONSIVE_BREAKPOINT_LARGE) {\n        this.renderer.addClass(element, 'k-pager-md');\n        this.renderer.removeClass(element, 'k-pager-sm');\n      } else {\n        this.clearResponsiveClasses();\n      }\n    };\n  }\n\n  set options(value) {\n    this.settings = normalize$1(value);\n  }\n\n  get isFocused() {\n    return this._isFocused;\n  }\n\n  get pagerAriaLabel() {\n    return this.navigationService.pagerEnabled ? this.pagerLabel : undefined;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get pagerLabel() {\n    const localizationMsg = this.localizationService.get('pagerLabel') || '';\n    return replaceMessagePlaceholder(replaceMessagePlaceholder(localizationMsg, 'currentPage', this.currentPage.toString()), 'totalPages', this.totalPages.toString());\n  }\n\n  get focusTrapTabIndex() {\n    return this.focusGroup.isActive ? '0' : '-1';\n  }\n\n  onFocusIn(event) {\n    if (this.navigationService.pagerEnabled) {\n      const shouldFocusPager = event.target === this.element.nativeElement;\n\n      if (shouldFocusPager) {\n        this._isFocused = true;\n        this.focusRoot.deactivate();\n      } else {\n        this.focusRoot.activate();\n      }\n    }\n  }\n\n  onFocusOut() {\n    if (this.navigationService.pagerEnabled) {\n      this._isFocused = false;\n    }\n  }\n\n  onEscape() {\n    if (this.navigationService.pagerEnabled) {\n      this.focusRoot.deactivate();\n      this.element.nativeElement.focus();\n    }\n  }\n\n  onEnter(event) {\n    if (this.navigationService.pagerEnabled && event.target === this.element.nativeElement) {\n      this.focusRoot.activate();\n      this.focusFirstElement();\n    }\n  }\n\n  navigateToPreviousPage(e) {\n    if (this.shouldTriggerPageChange(e.target, this.currentPage > 1)) {\n      this.pagerContext.prevPage();\n    }\n  }\n\n  navigateToNextPage(e) {\n    if (this.shouldTriggerPageChange(e.target, this.currentPage < this.totalPages)) {\n      this.pagerContext.nextPage();\n    }\n  }\n\n  navigateToFirstPage(e) {\n    if (this.shouldTriggerPageChange(e.target, this.currentPage > 1)) {\n      this.pagerContext.changePage(0);\n    }\n  }\n\n  navigateToLastPage(e) {\n    if (this.shouldTriggerPageChange(e.target, this.currentPage < this.totalPages)) {\n      this.pagerContext.changePage(this.totalPages - 1);\n    }\n  }\n\n  get totalPages() {\n    return Math.ceil((this.total || 0) / this.pageSize);\n  }\n\n  get currentPage() {\n    return Math.floor((this.skip || 0) / this.pageSize) + 1;\n  }\n\n  get templateContext() {\n    const context = this._templateContext;\n    context.totalPages = this.totalPages;\n    context.total = this.total;\n    context.skip = this.skip;\n    context.pageSize = this.pageSize;\n    context.currentPage = this.currentPage;\n    return context;\n  }\n\n  ngOnInit() {\n    this.subscriptions.add(this.pagerContext.pageChange.subscribe(this.changePage.bind(this)));\n\n    if (this.navigationService.pagerEnabled) {\n      this.focusRoot.deactivate();\n    }\n  }\n\n  ngDoCheck() {\n    this.updateCellContext();\n  }\n\n  ngOnChanges(changes) {\n    if (anyChanged(['pageSize', 'skip', 'total'], changes, false)) {\n      this.pagerContext.notifyChanges({\n        pageSize: this.pageSize,\n        skip: this.skip,\n        total: this.total\n      });\n    }\n\n    if (changes.template) {\n      // eslint-disable-next-line no-unused-expressions\n      changes.template.currentValue ? this.clearResponsiveClasses() : this.resizeHandler();\n    }\n\n    if (changes.options) {\n      // eslint-disable-next-line no-unused-expressions\n      this.settings.responsive ? this.resizeHandler() : this.clearResponsiveClasses();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n  }\n\n  changePage(event) {\n    this.pageChange.emit(event);\n  }\n\n  onInnerFocusIn(event, position) {\n    this.zone.onStable.pipe(take(1)).subscribe(() => {\n      if (position === 'start') {\n        if (event.relatedTarget === this.element.nativeElement) {\n          this.focusFirstElement();\n        } else {\n          this.focusLastElement();\n        }\n      } else {\n        this.focusFirstElement();\n      }\n    });\n  }\n\n  clearResponsiveClasses() {\n    const element = this.element.nativeElement;\n    this.renderer.removeClass(element, 'k-pager-sm');\n    this.renderer.removeClass(element, 'k-pager-md');\n  }\n\n  shouldTriggerPageChange(target, condition) {\n    return this.navigationService.pagerEnabled && target === this.element.nativeElement && condition;\n  }\n\n  focusFirstElement() {\n    const first = findFocusableChild(this.element.nativeElement, true);\n\n    if (first) {\n      first.focus();\n    }\n  }\n\n  focusLastElement() {\n    const last = findLastFocusableChild(this.element.nativeElement, true);\n\n    if (last) {\n      last.focus();\n    }\n  }\n\n  updateCellContext() {\n    if (this.cellContext) {\n      this.cellContext.focusGroup = this.focusGroup;\n    }\n  }\n\n}\n\nPagerComponent.ɵfac = function PagerComponent_Factory(t) {\n  return new (t || PagerComponent)(i0.ɵɵdirectiveInject(PagerContextService), i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(CELL_CONTEXT, 8), i0.ɵɵdirectiveInject(FocusRoot), i0.ɵɵdirectiveInject(FocusGroup));\n};\n\nPagerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PagerComponent,\n  selectors: [[\"kendo-pager\"]],\n  hostVars: 7,\n  hostBindings: function PagerComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focusin\", function PagerComponent_focusin_HostBindingHandler($event) {\n        return ctx.onFocusIn($event);\n      })(\"focusout\", function PagerComponent_focusout_HostBindingHandler() {\n        return ctx.onFocusOut();\n      })(\"keydown.escape\", function PagerComponent_keydown_escape_HostBindingHandler() {\n        return ctx.onEscape();\n      })(\"keydown.enter\", function PagerComponent_keydown_enter_HostBindingHandler($event) {\n        return ctx.onEnter($event);\n      })(\"keydown.arrowleft\", function PagerComponent_keydown_arrowleft_HostBindingHandler($event) {\n        return ctx.navigateToPreviousPage($event);\n      })(\"keydown.pageup\", function PagerComponent_keydown_pageup_HostBindingHandler($event) {\n        return ctx.navigateToPreviousPage($event);\n      })(\"keydown.arrowright\", function PagerComponent_keydown_arrowright_HostBindingHandler($event) {\n        return ctx.navigateToNextPage($event);\n      })(\"keydown.pagedown\", function PagerComponent_keydown_pagedown_HostBindingHandler($event) {\n        return ctx.navigateToNextPage($event);\n      })(\"keydown.home\", function PagerComponent_keydown_home_HostBindingHandler($event) {\n        return ctx.navigateToFirstPage($event);\n      })(\"keydown.end\", function PagerComponent_keydown_end_HostBindingHandler($event) {\n        return ctx.navigateToLastPage($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-label\", ctx.pagerAriaLabel);\n      i0.ɵɵclassProp(\"k-pager-wrap\", ctx.pagerWrapClass)(\"k-grid-pager\", ctx.gridPagerClass)(\"k-focus\", ctx.isFocused);\n    }\n  },\n  inputs: {\n    total: \"total\",\n    skip: \"skip\",\n    pageSize: \"pageSize\",\n    options: \"options\",\n    template: \"template\"\n  },\n  outputs: {\n    pageChange: \"pageChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: FOCUS_ROOT_ACTIVE,\n    useValue: true\n  }, {\n    provide: FocusRoot,\n    deps: [FOCUS_ROOT_ACTIVE],\n    useClass: FocusRoot\n  }, {\n    provide: FocusGroup,\n    deps: [FocusRoot],\n    useClass: FocusGroup\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 5,\n  consts: [[\"class\", \"k-sr-only\", 3, \"tabindex\", \"focusin\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"resize\", 4, \"ngIf\"], [1, \"k-sr-only\", 3, \"tabindex\", \"focusin\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"buttonCount\", 4, \"ngIf\"], [3, \"pageSizes\", 4, \"ngIf\"], [3, \"buttonCount\"], [3, \"pageSizes\"], [\"pageSizes\", \"\"], [3, \"resize\"]],\n  template: function PagerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, PagerComponent_div_0_Template, 1, 2, \"div\", 0);\n      i0.ɵɵtemplate(1, PagerComponent_ng_container_1_Template, 1, 2, \"ng-container\", 1);\n      i0.ɵɵtemplate(2, PagerComponent_ng_container_2_Template, 7, 6, \"ng-container\", 2);\n      i0.ɵɵtemplate(3, PagerComponent_div_3_Template, 1, 2, \"div\", 0);\n      i0.ɵɵtemplate(4, PagerComponent_kendo_resize_sensor_4_Template, 1, 0, \"kendo-resize-sensor\", 3);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.navigationService.pagerEnabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.template == null ? null : ctx.template.templateRef);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.template == null ? null : ctx.template.templateRef));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.navigationService.pagerEnabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.settings.responsive);\n    }\n  },\n  directives: [i4.NgIf, i4.NgTemplateOutlet, PagerPrevButtonsComponent, PagerNumericButtonsComponent, PagerInputComponent, PagerNextButtonsComponent, PagerInfoComponent, PagerPageSizesComponent, i1$1.ResizeSensorComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-pager',\n      providers: [{\n        provide: FOCUS_ROOT_ACTIVE,\n        useValue: true\n      }, {\n        provide: FocusRoot,\n        deps: [FOCUS_ROOT_ACTIVE],\n        useClass: FocusRoot\n      }, {\n        provide: FocusGroup,\n        deps: [FocusRoot],\n        useClass: FocusGroup\n      }],\n      template: `\n        <div\n            *ngIf=\"navigationService.pagerEnabled\"\n            class=\"k-sr-only\"\n            [tabindex]=\"focusTrapTabIndex\"\n            [attr.aria-hidden]=\"true\"\n            (focusin)=\"onInnerFocusIn($event, 'start')\">\n        </div>\n        <ng-container\n            *ngIf=\"template?.templateRef\"\n            [ngTemplateOutlet]=\"template.templateRef\"\n            [ngTemplateOutletContext]=\"templateContext\">\n        </ng-container>\n        <ng-container *ngIf=\"!template?.templateRef\">\n            <kendo-pager-prev-buttons *ngIf=\"settings.previousNext\"></kendo-pager-prev-buttons>\n            <kendo-pager-numeric-buttons\n                *ngIf=\"settings.type === 'numeric'\"\n                [buttonCount]=\"settings.buttonCount\">\n            </kendo-pager-numeric-buttons>\n            <kendo-pager-input *ngIf=\"settings.type === 'input'\"></kendo-pager-input>\n            <kendo-pager-next-buttons *ngIf=\"settings.previousNext\"></kendo-pager-next-buttons>\n            <kendo-pager-info *ngIf='settings.info'></kendo-pager-info>\n            <kendo-pager-page-sizes\n                *ngIf=\"settings.pageSizes\"\n                [pageSizes]=\"$any(settings.pageSizes)\"\n                #pageSizes\n            ></kendo-pager-page-sizes>\n        </ng-container>\n        <div\n            *ngIf=\"navigationService.pagerEnabled\"\n            class=\"k-sr-only\"\n            [tabindex]=\"focusTrapTabIndex\"\n            [attr.aria-hidden]=\"true\"\n            (focusin)=\"onInnerFocusIn($event, 'end')\">\n        </div>\n        <kendo-resize-sensor *ngIf=\"settings.responsive\" (resize)=\"resizeHandler()\"></kendo-resize-sensor>\n  `\n    }]\n  }], function () {\n    return [{\n      type: PagerContextService\n    }, {\n      type: NavigationService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [CELL_CONTEXT]\n      }]\n    }, {\n      type: FocusRoot\n    }, {\n      type: FocusGroup\n    }];\n  }, {\n    total: [{\n      type: Input\n    }],\n    skip: [{\n      type: Input\n    }],\n    pageSize: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    pageChange: [{\n      type: Output\n    }],\n    pagerWrapClass: [{\n      type: HostBinding,\n      args: ['class.k-pager-wrap']\n    }],\n    gridPagerClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-pager']\n    }],\n    isFocused: [{\n      type: HostBinding,\n      args: ['class.k-focus']\n    }],\n    pagerAriaLabel: [{\n      type: HostBinding,\n      args: ['attr.aria-label']\n    }],\n    onFocusIn: [{\n      type: HostListener,\n      args: ['focusin', ['$event']]\n    }],\n    onFocusOut: [{\n      type: HostListener,\n      args: ['focusout']\n    }],\n    onEscape: [{\n      type: HostListener,\n      args: ['keydown.escape']\n    }],\n    onEnter: [{\n      type: HostListener,\n      args: ['keydown.enter', ['$event']]\n    }],\n    navigateToPreviousPage: [{\n      type: HostListener,\n      args: ['keydown.arrowleft', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.pageup', ['$event']]\n    }],\n    navigateToNextPage: [{\n      type: HostListener,\n      args: ['keydown.arrowright', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.pagedown', ['$event']]\n    }],\n    navigateToFirstPage: [{\n      type: HostListener,\n      args: ['keydown.home', ['$event']]\n    }],\n    navigateToLastPage: [{\n      type: HostListener,\n      args: ['keydown.end', ['$event']]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass DropTargetDirective {\n  constructor(element, service) {\n    this.element = element;\n    this.service = service;\n    this.context = {};\n    this.enter = new EventEmitter();\n    this.leave = new EventEmitter();\n    this.drop = new EventEmitter();\n    this.subscriptions = new Subscription();\n  }\n\n  ngOnInit() {\n    this.service.add(this);\n    const changes = this.service.changes.pipe(filter(({\n      target\n    }) => target === this));\n    this.subscriptions.add(changes.pipe(filter(({\n      type\n    }) => type === 'leave')).subscribe(e => {\n      this.leave.next(this.eventArgs(e));\n    }));\n    this.subscriptions.add(changes.pipe(filter(({\n      type\n    }) => type === 'enter')).subscribe(e => {\n      this.enter.next(this.eventArgs(e));\n    }));\n    this.subscriptions.add(changes.pipe(filter(({\n      type\n    }) => type === 'drop')).subscribe(e => {\n      this.drop.next(this.eventArgs(e));\n    }));\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n  }\n\n  eventArgs(e) {\n    return {\n      target: this,\n      mouseEvent: e.mouseEvent,\n      draggable: e.draggable\n    };\n  }\n\n}\n\nDropTargetDirective.ɵfac = function DropTargetDirective_Factory(t) {\n  return new (t || DropTargetDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DragAndDropService));\n};\n\nDropTargetDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DropTargetDirective,\n  selectors: [[\"\", \"kendoDropTarget\", \"\"]],\n  inputs: {\n    context: \"context\"\n  },\n  outputs: {\n    enter: \"enter\",\n    leave: \"leave\",\n    drop: \"drop\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropTargetDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropTarget]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: DragAndDropService\n    }];\n  }, {\n    context: [{\n      type: Input\n    }],\n    enter: [{\n      type: Output\n    }],\n    leave: [{\n      type: Output\n    }],\n    drop: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass GroupIndicatorComponent {\n  constructor() {\n    this.directionChange = new EventEmitter();\n    this.remove = new EventEmitter();\n  }\n\n  get groupIndicatorClass() {\n    return true;\n  }\n\n  get dir() {\n    return this.group.dir ? this.group.dir : \"asc\";\n  }\n\n  toggleDirection() {\n    this.directionChange.emit({\n      dir: this.dir === \"asc\" ? \"desc\" : \"asc\",\n      field: this.group.field\n    });\n    return false;\n  }\n\n  removeDescriptor() {\n    this.remove.emit({\n      dir: this.group.dir,\n      field: this.group.field\n    });\n    return false;\n  }\n\n}\n\nGroupIndicatorComponent.ɵfac = function GroupIndicatorComponent_Factory(t) {\n  return new (t || GroupIndicatorComponent)();\n};\n\nGroupIndicatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GroupIndicatorComponent,\n  selectors: [[\"\", \"kendoGroupIndicator\", \"\"]],\n  hostVars: 2,\n  hostBindings: function GroupIndicatorComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-group-indicator\", ctx.groupIndicatorClass);\n    }\n  },\n  inputs: {\n    group: \"group\",\n    groupTitle: \"groupTitle\"\n  },\n  outputs: {\n    directionChange: \"directionChange\",\n    remove: \"remove\"\n  },\n  attrs: _c12,\n  decls: 5,\n  vars: 5,\n  consts: [[\"href\", \"#\", \"tabindex\", \"-1\", 1, \"k-link\", 3, \"click\"], [1, \"k-icon\"], [\"tabindex\", \"-1\", 1, \"k-button\", \"k-button-flat-base\", \"k-button-flat\", \"k-icon-button\", \"k-button-md\", \"k-rounded-md\", \"k-button-rectangle\", \"k-icon-button\", 3, \"click\"], [1, \"k-button-icon\", \"k-icon\", \"k-i-x\"]],\n  template: function GroupIndicatorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"a\", 0);\n      i0.ɵɵlistener(\"click\", function GroupIndicatorComponent_Template_a_click_0_listener() {\n        return ctx.toggleDirection();\n      });\n      i0.ɵɵelement(1, \"span\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"a\", 2);\n      i0.ɵɵlistener(\"click\", function GroupIndicatorComponent_Template_a_click_3_listener() {\n        return ctx.removeDescriptor();\n      });\n      i0.ɵɵelement(4, \"span\", 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"k-i-sort-asc-small\", ctx.dir === \"asc\")(\"k-i-sort-desc-small\", ctx.dir === \"desc\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.groupTitle, \"\");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GroupIndicatorComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: '[kendoGroupIndicator]',\n      template: `\n        <a href=\"#\" class=\"k-link\" tabindex=\"-1\" (click)=\"toggleDirection()\">\n            <span class=\"k-icon\"\n                [class.k-i-sort-asc-small]=\"dir === 'asc'\"\n                [class.k-i-sort-desc-small]=\"dir === 'desc'\"></span>\n            {{groupTitle}}</a>\n        <a class=\"k-button k-button-flat-base k-button-flat k-icon-button k-button-md k-rounded-md k-button-rectangle k-icon-button\" tabindex=\"-1\" (click)=\"removeDescriptor()\">\n            <span class=\"k-button-icon k-icon k-i-x\"></span>\n        </a>\n    `\n    }]\n  }], null, {\n    directionChange: [{\n      type: Output\n    }],\n    remove: [{\n      type: Output\n    }],\n    group: [{\n      type: Input\n    }],\n    groupTitle: [{\n      type: Input\n    }],\n    groupIndicatorClass: [{\n      type: HostBinding,\n      args: [\"class.k-group-indicator\"]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nconst preventOnDblClick$1 = release => mouseDown => of(mouseDown).pipe(delay(150), takeUntil(release));\n\nconst hasClass = className => el => new RegExp(`(^| )${className}( |$)`).test(el.className);\n\nconst isDeleteButton = or(hasClass('k-i-x'), hasClass('k-icon-button'));\nconst isSortIcon = or(hasClass('k-i-sort-asc-small'), hasClass('k-i-sort-desc-small'));\nconst skipButtons = and(not(isDeleteButton), not(isSortIcon), not(isFocusableWithTabKey), not(matchesNodeName('label')));\n\nconst elementUnderCursor = ({\n  clientX,\n  clientY\n}) => document.elementFromPoint(clientX, clientY);\n\nconst hideThenShow = (element, cont) => {\n  element.style.display = 'none';\n  const result = cont();\n  element.style.display = 'block';\n  return result;\n};\n/**\n * @hidden\n */\n\n\nclass DraggableColumnDirective {\n  constructor(draggable, element, zone, service, hint, cue, nav, renderer) {\n    this.draggable = draggable;\n    this.element = element;\n    this.zone = zone;\n    this.service = service;\n    this.hint = hint;\n    this.cue = cue;\n    this.nav = nav;\n    this.renderer = renderer;\n    this.context = {};\n    this.drag = new EventEmitter();\n    this.subscriptions = new Subscription();\n  }\n\n  set enableDrag(enabled) {\n    this.enabled = enabled;\n    this.updateTouchAction();\n  }\n\n  get hostClass() {\n    return this.enabled;\n  }\n\n  ngOnInit() {\n    this.subscriptions.add(this.zone.runOutsideAngular(() => this.draggable.kendoPress.pipe(filter(_ => this.enabled), filter(({\n      originalEvent: {\n        target\n      }\n    }) => target === this.element.nativeElement || skipButtons(target)), tap(e => {\n      const originalEvent = e.originalEvent;\n\n      if (!e.isTouch) {\n        originalEvent.preventDefault();\n      }\n\n      this.nav.navigateTo(originalEvent.target);\n    }), switchMap(preventOnDblClick$1(this.draggable.kendoRelease)), tap(_ => {\n      this.hint.create(this.context.hint);\n      this.cue.create();\n    }), switchMap(down => this.draggable.kendoDrag.pipe(tap(e => {\n      if (e.isTouch) {\n        e.originalEvent.preventDefault();\n      }\n    }), tap(this.hint.attach()), tap(this.cue.attach()), // eslint-disable-next-line rxjs/no-unsafe-takeuntil\n    takeUntil(this.draggable.kendoRelease), map(move => ({\n      move,\n      down\n    })))), tap(this.performDrag.bind(this)), switchMapTo(this.draggable.kendoRelease)).subscribe(this.drop.bind(this))));\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n  }\n\n  drop(upEvent) {\n    this.hint.remove();\n    this.cue.remove();\n    this.service.notifyDrop(this, upEvent);\n  }\n\n  performDrag({\n    move\n  }) {\n    this.hint.move(move);\n    const cursorElement = this.elementUnderCursor(move);\n\n    if (cursorElement) {\n      this.service.notifyDrag(this, cursorElement, move);\n    }\n\n    this.drag.emit({\n      draggable: this,\n      mouseEvent: move\n    });\n  }\n\n  elementUnderCursor(mouseEvent) {\n    this.hint.hide();\n    let target = elementUnderCursor(mouseEvent);\n\n    if (target && /k-grouping-dropclue/.test(target.className)) {\n      target = hideThenShow(target, elementUnderCursor.bind(this, mouseEvent));\n    }\n\n    this.hint.show();\n    return target;\n  }\n\n  updateTouchAction() {\n    if (!this.element) {\n      return;\n    } // eslint-disable-next-line no-unused-expressions\n\n\n    this.enabled ? this.renderer.addClass(this.element.nativeElement, 'k-touch-action-none') : this.renderer.removeClass(this.element.nativeElement, 'k-touch-action-none');\n  }\n\n}\n\nDraggableColumnDirective.ɵfac = function DraggableColumnDirective_Factory(t) {\n  return new (t || DraggableColumnDirective)(i0.ɵɵdirectiveInject(i1$1.DraggableDirective, 1), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(DragAndDropService), i0.ɵɵdirectiveInject(DragHintService), i0.ɵɵdirectiveInject(DropCueService), i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nDraggableColumnDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DraggableColumnDirective,\n  selectors: [[\"\", \"kendoDraggableColumn\", \"\"]],\n  hostVars: 2,\n  hostBindings: function DraggableColumnDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-grid-draggable-header\", ctx.hostClass);\n    }\n  },\n  inputs: {\n    context: \"context\",\n    enableDrag: \"enableDrag\"\n  },\n  outputs: {\n    drag: \"drag\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DraggableColumnDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDraggableColumn]'\n    }]\n  }], function () {\n    return [{\n      type: i1$1.DraggableDirective,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: DragAndDropService\n    }, {\n      type: DragHintService\n    }, {\n      type: DropCueService\n    }, {\n      type: NavigationService\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    context: [{\n      type: Input\n    }],\n    enableDrag: [{\n      type: Input\n    }],\n    drag: [{\n      type: Output\n    }],\n    hostClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-draggable-header']\n    }]\n  });\n})();\n\nconst withoutField = ({\n  field\n}) => isNullOrEmptyString(field);\n\nconst alreadyGrouped = ({\n  groups,\n  field\n}) => groups.some(group => group.field === field);\n\nconst overSameTarget = ({\n  target,\n  field\n}) => target.field === field;\n\nconst overLastTarget = ({\n  target\n}) => target.lastTarget;\n\nconst isLastGroup = ({\n  groups,\n  field\n}) => groups.map(group => group.field).indexOf(field) === groups.length - 1;\n\nconst isNotGroupable = groupsService => ({\n  field\n}) => !groupsService.isGroupable(field);\n\nconst columnRules = groupService => or(withoutField, alreadyGrouped, isNotGroupable(groupService));\n\nconst indicatorRules = or(overSameTarget, and(overLastTarget, isLastGroup));\n/**\n * @hidden\n */\n\nclass GroupPanelComponent {\n  constructor(hint, cue, groupInfoService, localization, cd) {\n    this.hint = hint;\n    this.cue = cue;\n    this.groupInfoService = groupInfoService;\n    this.localization = localization;\n    this.cd = cd;\n    this.change = new EventEmitter();\n    this.groups = [];\n    this.dropTargets = new QueryList();\n    this.groupTitles = [];\n    this.subscription = new Subscription();\n  }\n\n  get groupHeaderClass() {\n    return true;\n  }\n\n  set text(value) {\n    this.emptyText = value;\n  }\n\n  get text() {\n    return this.emptyText ? this.emptyText : this.localization.get('groupPanelEmpty');\n  }\n\n  ngAfterViewInit() {\n    this.subscription.add(observe(this.dropTargets).subscribe(this.attachTargets.bind(this)));\n  }\n\n  ngOnInit() {\n    this.subscription.add(this.localization.changes.subscribe(() => this.cd.markForCheck()));\n  }\n\n  ngDoCheck() {\n    const currentTitles = this.groups.map(group => this.groupInfoService.groupTitle(group));\n\n    if (currentTitles.length !== this.groupTitles.length || currentTitles.some((current, idx) => current !== this.groupTitles[idx])) {\n      this.groupTitles = currentTitles;\n      this.cd.markForCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n\n    if (this.targetSubscription) {\n      this.targetSubscription.unsubscribe();\n    }\n  }\n\n  directionChange(group) {\n    const index = this.groups.findIndex(x => x.field === group.field);\n    const groups = [...this.groups.slice(0, index), group, ...this.groups.slice(index + 1)];\n    this.change.emit(groups);\n  }\n\n  insert(field, index) {\n    const groups = this.groups.filter(x => x.field !== field);\n\n    if (groups.length || this.groups.length === 0) {\n      this.change.emit([...groups.slice(0, index), {\n        field: field\n      }, ...groups.slice(index)]);\n    }\n  }\n\n  remove(group) {\n    this.change.emit(this.groups.filter(x => x.field !== group.field));\n  }\n\n  canDrop(draggable, target) {\n    const isIndicator = draggable.type === 'groupIndicator';\n    const rules = isIndicator ? indicatorRules : columnRules(this.groupInfoService);\n    return !rules({\n      field: draggable.field,\n      groups: this.groups,\n      target\n    });\n  }\n\n  attachTargets() {\n    if (this.targetSubscription) {\n      this.targetSubscription.unsubscribe();\n    }\n\n    this.targetSubscription = new Subscription();\n    const enterStream = this.dropTargets.reduce((acc, target) => merge(acc, target.enter), from([]));\n    const leaveStream = this.dropTargets.reduce((acc, target) => merge(acc, target.leave), from([]));\n    const dropStream = this.dropTargets.reduce((acc, target) => merge(acc, target.drop), from([]));\n    this.targetSubscription.add(enterStream.pipe(tap(_ => this.hint.removeLock()), filter(({\n      draggable,\n      target\n    }) => this.canDrop(draggable.context, target.context)), tap(this.enter.bind(this)), switchMapTo(dropStream.pipe(takeUntil(leaveStream.pipe(tap(this.leave.bind(this))))))).subscribe(this.drop.bind(this)));\n  }\n\n  enter({\n    draggable,\n    target\n  }) {\n    this.hint.enable();\n    let before = target.context.lastTarget || isTargetBefore(draggable.element.nativeElement, target.element.nativeElement);\n\n    if (this.localization.rtl) {\n      before = !before;\n    }\n\n    this.cue.position(position(target.element.nativeElement, before));\n  }\n\n  leave() {\n    this.hint.disable();\n    this.cue.hide();\n  }\n\n  drop({\n    target,\n    draggable\n  }) {\n    const field = draggable.context.field;\n    const index = this.dropTargets.toArray().indexOf(target);\n    this.insert(field, index);\n  }\n\n}\n\nGroupPanelComponent.ɵfac = function GroupPanelComponent_Factory(t) {\n  return new (t || GroupPanelComponent)(i0.ɵɵdirectiveInject(DragHintService), i0.ɵɵdirectiveInject(DropCueService), i0.ɵɵdirectiveInject(GroupInfoService), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nGroupPanelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GroupPanelComponent,\n  selectors: [[\"kendo-grid-group-panel\"]],\n  viewQuery: function GroupPanelComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(DropTargetDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropTargets = _t);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function GroupPanelComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-grouping-header\", ctx.groupHeaderClass)(\"k-grouping-header-flex\", ctx.groupHeaderClass);\n    }\n  },\n  inputs: {\n    text: \"text\",\n    groups: \"groups\"\n  },\n  outputs: {\n    change: \"change\"\n  },\n  decls: 3,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [\"class\", \"k-indicator-container\", \"kendoDropTarget\", \"\", 3, \"context\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"k-indicator-container\", \"kendoDropTarget\", \"\", 3, \"context\", 4, \"ngIf\"], [\"kendoDropTarget\", \"\", 1, \"k-indicator-container\", 3, \"context\"], [\"kendoDraggableColumn\", \"\", \"kendoGroupIndicator\", \"\", \"kendoDraggable\", \"\", 3, \"enableDrag\", \"context\", \"group\", \"groupTitle\", \"directionChange\", \"remove\"]],\n  template: function GroupPanelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, GroupPanelComponent_ng_container_0_Template, 3, 3, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, GroupPanelComponent_div_1_Template, 2, 10, \"div\", 1);\n      i0.ɵɵtemplate(2, GroupPanelComponent_div_2_Template, 2, 2, \"div\", 2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.groups.length === 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.groups);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.groups.length !== 0);\n    }\n  },\n  directives: [i4.NgIf, i4.NgForOf, DropTargetDirective, DraggableColumnDirective, GroupIndicatorComponent, i1$1.DraggableDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GroupPanelComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'kendo-grid-group-panel',\n      template: `\n        <ng-container *ngIf=\"groups.length === 0\">\n            <div\n                class=\"k-indicator-container\"\n                [context]=\"{\n                    lastTarget: true\n                }\"\n                kendoDropTarget>\n                {{ text }}\n            </div>\n        </ng-container>\n        <div *ngFor=\"let group of groups; let index = index;\"\n            class=\"k-indicator-container\"\n            [context]=\"{\n                field: group.field\n            }\"\n            kendoDropTarget>\n            <div\n                kendoDraggableColumn\n                [enableDrag]=\"true\"\n                [context]=\"{\n                    field: group.field,\n                    type: 'groupIndicator',\n                    hint:  groupTitles[index]\n                }\"\n                kendoGroupIndicator\n                kendoDraggable\n                [group]=\"group\"\n                [groupTitle]=\"groupTitles[index]\"\n                (directionChange)=\"directionChange($event)\"\n                (remove)=\"remove($event)\">\n            </div>\n        </div>\n        <div class=\"k-indicator-container\"\n            *ngIf=\"groups.length !== 0\"\n            [context]=\"{\n                lastTarget: true\n            }\"\n            kendoDropTarget>&nbsp;</div>\n    `\n    }]\n  }], function () {\n    return [{\n      type: DragHintService\n    }, {\n      type: DropCueService\n    }, {\n      type: GroupInfoService\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    change: [{\n      type: Output\n    }],\n    groupHeaderClass: [{\n      type: HostBinding,\n      args: [\"class.k-grouping-header\"]\n    }, {\n      type: HostBinding,\n      args: [\"class.k-grouping-header-flex\"]\n    }],\n    text: [{\n      type: Input\n    }],\n    groups: [{\n      type: Input\n    }],\n    dropTargets: [{\n      type: ViewChildren,\n      args: [DropTargetDirective]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass ColGroupComponent {\n  constructor() {\n    this.columns = [];\n    this.groups = [];\n    this.sort = new Array();\n  }\n\n  get columnsToRender() {\n    return columnsToRender(this.columns);\n  }\n\n  trackBy(index, _item) {\n    return index;\n  }\n\n  isSorted(column) {\n    const state = this.sortDescriptor(column.field);\n    return this.isSortable(column) && (state.dir === 'asc' || state.dir === 'desc');\n  }\n\n  getColumnComponent(column) {\n    return column;\n  }\n\n  isSortable(column) {\n    return !isNullOrEmptyString(column.field) && isTruthy(column.sortable);\n  }\n\n  sortDescriptor(field) {\n    return this.sort.find(item => item.field === field) || {\n      field\n    };\n  }\n\n}\n\nColGroupComponent.ɵfac = function ColGroupComponent_Factory(t) {\n  return new (t || ColGroupComponent)();\n};\n\nColGroupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColGroupComponent,\n  selectors: [[\"\", \"kendoGridColGroup\", \"\"]],\n  inputs: {\n    columns: \"columns\",\n    groups: \"groups\",\n    detailTemplate: \"detailTemplate\",\n    sort: \"sort\"\n  },\n  attrs: _c16,\n  decls: 4,\n  vars: 4,\n  consts: [[3, \"k-group-col\", 4, \"ngFor\", \"ngForOf\"], [3, \"k-hierarchy-col\", 4, \"ngIf\"], [3, \"width\", \"k-sorted\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"]],\n  template: function ColGroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainerStart(0);\n      i0.ɵɵtemplate(1, ColGroupComponent_col_1_Template, 1, 2, \"col\", 0);\n      i0.ɵɵtemplate(2, ColGroupComponent_col_2_Template, 1, 2, \"col\", 1);\n      i0.ɵɵtemplate(3, ColGroupComponent_col_3_Template, 1, 4, \"col\", 2);\n      i0.ɵɵelementContainerEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.groups);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.detailTemplate == null ? null : ctx.detailTemplate.templateRef);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.columnsToRender)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  directives: [i4.NgForOf, i4.NgIf],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColGroupComponent, [{\n    type: Component,\n    args: [{\n      selector: '[kendoGridColGroup]',\n      template: `\n    <ng-container>\n        <col [class.k-group-col]=\"true\" *ngFor=\"let g of groups\" />\n        <col [class.k-hierarchy-col]=\"true\" *ngIf=\"detailTemplate?.templateRef\"/>\n        <col *ngFor=\"let column of columnsToRender; trackBy: trackBy;\"\n        [style.width.px]=\"column.width\"\n        [class.k-sorted]=\"isSorted(getColumnComponent(column))\"/>\n    </ng-container>\n    `\n    }]\n  }], null, {\n    columns: [{\n      type: Input\n    }],\n    groups: [{\n      type: Input\n    }],\n    detailTemplate: [{\n      type: Input\n    }],\n    sort: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nconst DEFAULTS = {\n  allowUnsort: true,\n  mode: 'single',\n  showIndexes: true,\n  initialDirection: 'asc',\n  multiSortKey: 'none'\n};\n/**\n * @hidden\n */\n\nconst normalize = (...settings) => Object.assign({}, DEFAULTS, ...settings);\n/**\n * @hidden\n */\n\n\nconst hasFilter = (settings, column) => settings.filter !== false && column.field && column.filterable;\n/**\n * @hidden\n */\n\n\nconst hasSort = (settings, column) => settings.sort !== false && column.field && column.sortable;\n/**\n * @hidden\n */\n\n\nconst hasLock = (settings, column) => settings.lock && column.lockable && !(column.parent && !column.parent.isSpanColumn);\n/**\n * @hidden\n */\n\n\nconst hasStick = (settings, column) => settings.stick && column.stickable && !(column.parent && !column.parent.isSpanColumn);\n/**\n * @hidden\n */\n\n\nconst hasPosition = (settings, column) => settings.setColumnPosition && (column.stickable || column.lockable) && !(column.parent && !column.parent.isSpanColumn);\n/**\n * @hidden\n */\n\n\nconst hasColumnChooser = settings => settings.columnChooser !== false;\n/**\n * @hidden\n */\n\n\nconst hasAutoSizeColumn = settings => settings.autoSizeColumn;\n/**\n* @hidden\n*/\n\n\nconst hasAutoSizeAllColumns = settings => settings.autoSizeAllColumns;\n/**\n * @hidden\n */\n\n\nconst autoSizeColumn = (grid, service, column) => {\n  // eslint-disable-next-line no-unused-expressions\n  column ? grid.autoFitColumn(column) : grid.autoFitColumns();\n  service.close();\n};\n/**\n * @hidden\n */\n\n\nconst hasItems = (settings, column) => hasAutoSizeAllColumns(settings) || hasColumnChooser(settings) || hasFilter(settings, column) || hasAutoSizeColumn(settings) || hasLock(settings, column) || hasSort(settings, column);\n\nconst localizeOperators$1 = operators => localization => Object.keys(operators).reduce((acc, key) => {\n  acc[operators[key]] = localization.get(key);\n  return acc;\n}, {});\n\nconst operatorTexts = localizeOperators$1({\n  \"filterEqOperator\": \"eq\",\n  \"filterNotEqOperator\": \"neq\",\n  \"filterGteOperator\": \"gte\",\n  \"filterGtOperator\": \"gt\",\n  \"filterLteOperator\": \"lte\",\n  \"filterLtOperator\": \"lt\",\n  \"filterIsNullOperator\": \"isnull\",\n  \"filterIsNotNullOperator\": \"isnotnull\",\n  \"filterIsEmptyOperator\": \"isempty\",\n  \"filterIsNotEmptyOperator\": \"isnotempty\",\n  \"filterContainsOperator\": \"contains\",\n  \"filterNotContainsOperator\": \"doesnotcontain\",\n  \"filterStartsWithOperator\": \"startswith\",\n  \"filterEndsWithOperator\": \"endswith\",\n  \"filterAfterOrEqualOperator\": \"after-eq\",\n  \"filterAfterOperator\": \"after\",\n  \"filterBeforeOrEqualOperator\": \"before-eq\",\n  \"filterBeforeOperator\": \"before\"\n});\n/**\n * @hidden\n */\n\nconst toJSON = xs => xs.map(x => x.toJSON());\n/**\n * @hidden\n */\n\n\nclass FilterOperatorBase {\n  constructor(operator, localization) {\n    this.operator = operator;\n    this.localization = localization;\n    this.messages = operatorTexts(this.localization);\n    this._text = this.messages[this.operator];\n    this.subscription = this.localization.changes.subscribe(this.refreshText.bind(this));\n  }\n  /**\n   * The text that will be displayed in the drop-down list.\n   * @readonly\n   * @type {string}\n   * @memberOf FilterOperatorBase\n   */\n\n\n  get text() {\n    return this._text;\n  }\n\n  set text(value) {\n    this._text = isNullOrEmptyString(value) ? this.messages[this.operator] : value;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  toJSON() {\n    return {\n      text: this.text,\n      value: this.operator\n    };\n  }\n\n  refreshText() {\n    const update = this._text === this.messages[this.operator];\n    this.messages = operatorTexts(this.localization);\n\n    if (update) {\n      this._text = this.messages[this.operator];\n    }\n  }\n\n}\n\nFilterOperatorBase.ɵfac = function FilterOperatorBase_Factory(t) {\n  return new (t || FilterOperatorBase)(i0.ɵɵdirectiveInject('filterOperator'), i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nFilterOperatorBase.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FilterOperatorBase,\n  selectors: [[\"kendo-grid-filter-operator-base\"]],\n  inputs: {\n    text: \"text\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function FilterOperatorBase_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterOperatorBase, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-filter-operator-base',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: ['filterOperator']\n      }]\n    }, {\n      type: i1.LocalizationService\n    }];\n  }, {\n    text: [{\n      type: Input\n    }]\n  });\n})();\n\nconst insertDefaultFilter = (index, rootFilter, filter) => {\n  rootFilter = rootFilter || {\n    filters: [],\n    logic: \"and\"\n  };\n  rootFilter.filters[index] = filter;\n  return filter;\n};\n/**\n * @hidden\n */\n\n\nconst setFilter = (index, filter, field, defaultOperator) => {\n  if (isPresent(filter) && isPresent(filter.filters) && filter.filters.length > index) {\n    return filter.filters[index];\n  } else {\n    return insertDefaultFilter(index, filter, {\n      field,\n      operator: defaultOperator\n    });\n  }\n};\n/**\n * @hidden\n */\n\n\nconst logicOperators = localization => [{\n  text: localization.get(\"filterAndLogic\"),\n  value: \"and\"\n}, {\n  text: localization.get(\"filterOrLogic\"),\n  value: \"or\"\n}];\n/**\n * @hidden\n */\n\n\nconst flatten = filter => {\n  if (isPresent(filter.filters)) {\n    return filter.filters.reduce((acc, curr) => acc.concat(isCompositeFilterDescriptor(curr) ? flatten(curr) : [curr]), []);\n  }\n\n  return [];\n};\n\nconst trimFilterByField = (filter, field) => {\n  if (isPresent(filter) && isPresent(filter.filters)) {\n    filter.filters = filter.filters.filter(x => {\n      if (isCompositeFilterDescriptor(x)) {\n        trimFilterByField(x, field);\n        return x.filters.length;\n      } else {\n        return x.field !== field;\n      }\n    });\n  }\n};\n/**\n * @hidden\n */\n\n\nconst filtersByField = (filter, field) => flatten(filter || {}).filter(x => x.field === field);\n/**\n * @hidden\n */\n\n\nconst filterByField = (filter, field) => {\n  let [currentFilter] = filtersByField(filter, field);\n  return currentFilter;\n};\n/**\n * @hidden\n */\n\n\nconst removeFilter = (filter, field) => {\n  trimFilterByField(filter, field);\n  return filter;\n};\n/**\n * @hidden\n */\n\n\nconst localizeOperators = operators => localization => Object.keys(operators).map(key => ({\n  text: localization.get(key),\n  value: operators[key]\n}));\n/**\n * An abstract base class for the filter-cell component ([see example]({% slug filter_row %}#toc-custom-filter-row-components)).\n */\n\n\nclass BaseFilterCellComponent {\n  constructor(filterService) {\n    this.filterService = filterService;\n    this.operatorList = new QueryList();\n  }\n\n  get hostClasses() {\n    return true;\n  }\n\n  get operators() {\n    var _a;\n\n    return ((_a = this._operators) === null || _a === void 0 ? void 0 : _a.length) ? this._operators : this.defaultOperators;\n  }\n\n  set operators(values) {\n    this._operators = values;\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngAfterContentInit() {\n    this.operationListSubscription = observe(this.operatorList).pipe(map(q => q.toArray()), map(toJSON)).subscribe(x => {\n      this.operators = x;\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.operationListSubscription) {\n      this.operationListSubscription.unsubscribe();\n    }\n  }\n\n  filterByField(field) {\n    return filterByField(this.filter, field);\n  }\n\n  filtersByField(field) {\n    return filtersByField(this.filter, field);\n  }\n\n  removeFilter(field) {\n    return removeFilter(this.filter, field);\n  }\n\n  updateFilter(filter) {\n    const root = this.filter || {\n      filters: [],\n      logic: \"and\"\n    };\n    let [currentFilter] = flatten(root).filter(x => x.field === filter.field);\n\n    if (!isPresent(currentFilter)) {\n      root.filters.push(filter);\n    } else {\n      Object.assign(currentFilter, filter);\n    }\n\n    return root;\n  }\n\n  applyFilter(filter) {\n    this.filterService.filter(filter);\n  }\n\n}\n\nBaseFilterCellComponent.ɵfac = function BaseFilterCellComponent_Factory(t) {\n  return new (t || BaseFilterCellComponent)(i0.ɵɵdirectiveInject(FilterService));\n};\n\nBaseFilterCellComponent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: BaseFilterCellComponent,\n  contentQueries: function BaseFilterCellComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, FilterOperatorBase, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.operatorList = _t);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function BaseFilterCellComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-filtercell\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    operators: \"operators\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseFilterCellComponent, [{\n    type: Directive,\n    args: [{}]\n  }], function () {\n    return [{\n      type: FilterService\n    }];\n  }, {\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-filtercell']\n    }],\n    operatorList: [{\n      type: ContentChildren,\n      args: [FilterOperatorBase]\n    }],\n    operators: [{\n      type: Input\n    }]\n  });\n})();\n\nconst areDifferent = (a, b) => a.field !== b.field || a.operator !== b.operator || a.value !== b.value;\n\nconst isChanged = (a, b) => {\n  if (a.length !== b.length) {\n    return true;\n  }\n\n  for (let idx = 0, len = a.length; idx < len; idx++) {\n    const prev = a[idx];\n    const curr = b[idx];\n\n    if (isCompositeFilterDescriptor(prev)) {\n      if (diffFilters(prev, curr[idx])) {\n        return true;\n      }\n    } else if (areDifferent(prev, curr)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst copyObject = obj => {\n  const result = {};\n  Object.assign(result, obj);\n\n  if (obj.constructor !== Object) {\n    const proto = obj.constructor.prototype;\n    Object.getOwnPropertyNames(proto).forEach(property => {\n      if (property !== 'constructor' && proto.hasOwnProperty(property)) {\n        result[property] = obj[property];\n      }\n    });\n  }\n\n  return result;\n};\n\nconst cloneFilter = filter => copyObject(filter);\n/**\n * @hidden\n */\n\n\nconst cloneFilters = filter => {\n  if (!filter) {\n    return;\n  }\n\n  if (isCompositeFilterDescriptor(filter)) {\n    return {\n      filters: cloneFilters(filter.filters),\n      logic: filter.logic\n    };\n  } else if (Array.isArray(filter)) {\n    return filter.map(cloneFilters);\n  }\n\n  return cloneFilter(filter);\n};\n/**\n * @hidden\n */\n\n\nconst diffFilters = (a, b) => {\n  if (isPresent(a) && !isPresent(b)) {\n    return true;\n  }\n\n  if (!isPresent(a) && isPresent(b)) {\n    return true;\n  }\n\n  return isPresent(a) && isPresent(b) && isChanged(a.filters, b.filters);\n};\n/**\n * @hidden\n */\n\n\nclass FilterHostDirective {\n  constructor(host, resolver) {\n    this.host = host;\n    this.resolver = resolver;\n  }\n\n  ngOnInit() {\n    this.component = this.host.createComponent(this.resolver.resolveComponentFactory(this.componentType()));\n    this.initComponent({\n      column: this.column,\n      filter: this.filter\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.component) {\n      this.component.destroy();\n      this.component = null;\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (anyChanged([\"column\", \"filter\"], changes)) {\n      this.initComponent({\n        column: this.column,\n        filter: this.filter\n      });\n    }\n  }\n\n  initComponent({\n    column,\n    filter\n  }) {\n    const instance = this.component.instance;\n    instance.column = column;\n    instance.filter = filter;\n  }\n\n}\n\nFilterHostDirective.ɵfac = function FilterHostDirective_Factory(t) {\n  return new (t || FilterHostDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n};\n\nFilterHostDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FilterHostDirective,\n  selectors: [[\"\", \"kendoGridFilterHostBase\", \"\"]],\n  inputs: {\n    column: \"column\",\n    filter: \"filter\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterHostDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridFilterHostBase]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.ComponentFactoryResolver\n    }];\n  }, {\n    column: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }]\n  });\n})(); // eslint-disable no-access-missing-member\n\n\nconst stringOperators$1 = localizeOperators({\n  \"filterEqOperator\": \"eq\",\n  \"filterNotEqOperator\": \"neq\",\n  \"filterContainsOperator\": \"contains\",\n  \"filterNotContainsOperator\": \"doesnotcontain\",\n  \"filterStartsWithOperator\": \"startswith\",\n  \"filterEndsWithOperator\": \"endswith\",\n  \"filterIsNullOperator\": \"isnull\",\n  \"filterIsNotNullOperator\": \"isnotnull\",\n  \"filterIsEmptyOperator\": \"isempty\",\n  \"filterIsNotEmptyOperator\": \"isnotempty\"\n});\n/**\n * Represents a base string filter component.\n */\n\nclass StringFilterComponent extends BaseFilterCellComponent {\n  constructor(filterService, localization) {\n    super(filterService);\n    this.localization = localization;\n    /**\n     * The default filter operator. Defaults to `contains`.\n     * @type {string}\n     */\n\n    this.operator = \"contains\";\n  }\n  /**\n   * The current filter for the associated column field.\n   * @readonly\n   * @type {FilterDescriptor}\n   */\n\n\n  get currentFilter() {\n    return this.filterByField((this.column || {}).field);\n  }\n  /**\n   * The current filter operator for the associated column field.\n   * @readonly\n   * @type {string}\n   */\n\n\n  get currentOperator() {\n    return this.currentFilter ? this.currentFilter.operator : this.operator;\n  }\n\n  ngOnInit() {\n    this.subscription = this.localization.changes.subscribe(this.localizationChange.bind(this));\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n\n    super.ngOnDestroy();\n  }\n\n  localizationChange() {\n    this.defaultOperators = stringOperators$1(this.localization);\n\n    if (this.operatorList.length) {\n      this.operators = toJSON(this.operatorList.toArray());\n    }\n  }\n\n}\n\nStringFilterComponent.ɵfac = function StringFilterComponent_Factory(t) {\n  return new (t || StringFilterComponent)(i0.ɵɵdirectiveInject(FilterService), i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nStringFilterComponent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: StringFilterComponent,\n  inputs: {\n    column: \"column\",\n    filter: \"filter\",\n    operator: \"operator\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StringFilterComponent, [{\n    type: Directive,\n    args: [{}]\n  }], function () {\n    return [{\n      type: FilterService\n    }, {\n      type: i1.LocalizationService\n    }];\n  }, {\n    column: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    operator: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass FilterInputDirective {\n  constructor(valueAccessors, ngZone, element, renderer) {\n    this.element = element;\n    this.renderer = renderer;\n    this.change = new EventEmitter();\n    this.composing = false;\n    this.filterDelay = 500;\n    this.changeRequests = new Subject();\n    this.accessor = valueAccessors[0];\n    ngZone.runOutsideAngular(() => {\n      const unsubscribeStart = renderer.listen(element.nativeElement, 'compositionstart', () => this.composing = true);\n      const unsubscribeEnd = renderer.listen(element.nativeElement, 'compositionend', () => this.composing = false);\n\n      this.unsubscribeEvents = () => {\n        unsubscribeStart();\n        unsubscribeEnd();\n      };\n    });\n  }\n\n  set value(value) {\n    this.accessor.writeValue(value);\n  }\n\n  set disabled(value) {\n    this.accessor.setDisabledState(value);\n  }\n\n  ngAfterViewInit() {\n    this.addAriaAttributes();\n    this.accessor.registerOnChange(x => this.filterDelay > 0 ? this.changeRequests.next(x) : this.change.emit(x));\n    this.subscribeChanges();\n  }\n\n  ngOnChanges(changes) {\n    if (isChanged$1('filterDelay', changes)) {\n      this.unsubscribeChanges();\n      this.subscribeChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribeChanges();\n    this.unsubscribeEvents();\n  }\n\n  subscribeChanges() {\n    this.changeRequestsSubscription = this.changeRequests.pipe(debounceTime(this.filterDelay), filter(() => !this.composing)).subscribe(x => this.change.emit(x));\n  }\n\n  unsubscribeChanges() {\n    if (this.changeRequestsSubscription) {\n      this.changeRequestsSubscription.unsubscribe();\n    }\n  }\n\n  addAriaAttributes() {\n    const ariaValue = this.columnLabel;\n\n    if (this.kendoInput && this.kendoInput.focusableId && isDocumentAvailable()) {\n      const focusableElement = this.element.nativeElement.querySelector(`#${this.kendoInput.focusableId}`) || this.element.nativeElement;\n      this.renderer.setAttribute(focusableElement, 'aria-label', ariaValue);\n    } else {\n      this.renderer.setAttribute(this.element.nativeElement, 'aria-label', ariaValue);\n    }\n  }\n\n}\n\nFilterInputDirective.ɵfac = function FilterInputDirective_Factory(t) {\n  return new (t || FilterInputDirective)(i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nFilterInputDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FilterInputDirective,\n  selectors: [[\"\", \"kendoFilterInput\", \"\"]],\n  contentQueries: function FilterInputDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, KendoInput, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.kendoInput = _t.first);\n    }\n  },\n  inputs: {\n    filterDelay: \"filterDelay\",\n    columnLabel: \"columnLabel\",\n    value: \"value\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterInputDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoFilterInput]'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Self\n      }, {\n        type: Inject,\n        args: [NG_VALUE_ACCESSOR]\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    kendoInput: [{\n      type: ContentChild,\n      args: [KendoInput, {\n        static: true\n      }]\n    }],\n    filterDelay: [{\n      type: Input\n    }],\n    columnLabel: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\n\nconst EMPTY_VALUE_OPERATORS = new Set(['isnull', 'isnotnull', 'isempty', 'isnotempty']);\n\nconst isEmptyValueOperator = operator => EMPTY_VALUE_OPERATORS.has(operator);\n/**\n * @hidden\n */\n\n\nclass FilterInputWrapperComponent extends BaseFilterCellComponent {\n  constructor(filterService) {\n    super(filterService);\n  }\n\n  get currentFilter() {\n    return this.filterByField(this.column.field);\n  }\n\n  get currentOperator() {\n    const filter = this.currentFilter;\n\n    if (!this._operator) {\n      this._operator = filter ? filter.operator : this.defaultOperator;\n    }\n\n    return this._operator;\n  }\n\n  set currentOperator(value) {\n    this._operator = value;\n    const emptyValueOperator = isEmptyValueOperator(value);\n    this.filterInputDisabled = emptyValueOperator;\n\n    if (emptyValueOperator) {\n      this.applyNoValueFilter(value);\n    } else if (!isBlank(value) && isPresent(this.currentFilter)) {\n      this.onChange(this.currentFilter.value);\n    }\n  }\n\n  get defaultOperator() {\n    if (!isNullOrEmptyString(this._defaultOperator)) {\n      return this._defaultOperator;\n    } else if (this.operators && this.operators.length) {\n      return this.operators[0].value;\n    }\n\n    return \"eq\";\n  }\n\n  set defaultOperator(value) {\n    this._defaultOperator = value;\n  }\n\n  set filterInputDisabled(disabled) {\n    if (!this.input) {\n      return;\n    }\n\n    this.input.disabled = disabled;\n  }\n\n  ngAfterContentInit() {\n    if (isPresent(this.input)) {\n      this.changeSubscription = this.input.change.subscribe(this.onChange.bind(this));\n      this.filterInputDisabled = isEmptyValueOperator(this.currentOperator);\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    if (this.changeSubscription) {\n      this.changeSubscription.unsubscribe();\n    }\n  }\n\n  onChange(value) {\n    if (!isNullOrEmptyString(value) || this.filterByField(this.column.field)) {\n      this.filterChange(isNullOrEmptyString(value) ? this.removeFilter(this.column.field) : this.updateFilter({\n        field: this.column.field,\n        operator: this.currentOperator,\n        value: value\n      }));\n    }\n  }\n\n  onClear() {\n    this.onChange(null);\n    this.filterInputDisabled = isEmptyValueOperator(this.defaultOperator);\n  }\n\n  applyNoValueFilter(operator) {\n    this.filterChange(this.updateFilter({\n      field: this.column.field,\n      operator: operator,\n      value: null\n    }));\n  }\n\n  ngOnChanges(changes) {\n    if (isChanged$1(\"filter\", changes, false)) {\n      this._operator = null;\n      this.filterInputDisabled = isEmptyValueOperator(this.currentOperator);\n    }\n  }\n\n}\n\nFilterInputWrapperComponent.ɵfac = function FilterInputWrapperComponent_Factory(t) {\n  return new (t || FilterInputWrapperComponent)(i0.ɵɵdirectiveInject(FilterService));\n};\n\nFilterInputWrapperComponent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FilterInputWrapperComponent,\n  contentQueries: function FilterInputWrapperComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, FilterInputDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n    }\n  },\n  inputs: {\n    column: \"column\",\n    filter: \"filter\",\n    defaultOperator: \"defaultOperator\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterInputWrapperComponent, [{\n    type: Directive,\n    args: [{}]\n  }], function () {\n    return [{\n      type: FilterService\n    }];\n  }, {\n    column: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    input: [{\n      type: ContentChild,\n      args: [FilterInputDirective, {\n        static: false\n      }]\n    }],\n    defaultOperator: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass FilterMenuDropDownListDirective {\n  constructor(host) {\n    this.host = host;\n\n    this.keydownHandler = e => {\n      if (e.keyCode === Keys.Escape && this.host.isOpen) {\n        e.stopPropagation();\n        this.host.toggle(false);\n      }\n    };\n  }\n\n  ngAfterViewInit() {\n    const wrapperElement = this.host.wrapper.nativeElement;\n    wrapperElement.setAttribute('aria-label', this.filterMenuDropDownLabel);\n    wrapperElement.addEventListener('keydown', this.keydownHandler, true);\n  }\n\n  ngOnDestroy() {\n    this.host.wrapper.nativeElement.removeEventListener('keydown', this.keydownHandler);\n  }\n\n}\n\nFilterMenuDropDownListDirective.ɵfac = function FilterMenuDropDownListDirective_Factory(t) {\n  return new (t || FilterMenuDropDownListDirective)(i0.ɵɵdirectiveInject(i1$4.DropDownListComponent));\n};\n\nFilterMenuDropDownListDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FilterMenuDropDownListDirective,\n  selectors: [[\"\", \"kendoFilterMenuDropDown\", \"\"]],\n  inputs: {\n    filterMenuDropDownLabel: \"filterMenuDropDownLabel\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterMenuDropDownListDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoFilterMenuDropDown]'\n    }]\n  }], function () {\n    return [{\n      type: i1$4.DropDownListComponent\n    }];\n  }, {\n    filterMenuDropDownLabel: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass FilterMenuInputWrapperComponent extends FilterInputWrapperComponent {\n  constructor(localizationService) {\n    super(null);\n    this.localizationService = localizationService;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hostClasses() {\n    return false;\n  }\n\n  ngAfterViewInit() {\n    if (this.isFirstDropDown && this.filterService && this.filterService.menuTabbingService) {\n      this.filterService.menuTabbingService.firstFocusable = this.firstOperatorDropDown;\n      this.firstOperatorDropDown.focus();\n    }\n  }\n\n  operatorChange(dataItem) {\n    this.currentOperator = dataItem;\n  }\n\n  filterChange(filter) {\n    this.applyFilter(filter);\n  }\n  /**\n   * The current filter for the associated column field.\n   * @readonly\n   * @type {FilterDescriptor}\n   */\n\n\n  get currentFilter() {\n    return this._currentFilter;\n  }\n  /**\n   * The current filter for the associated column field.\n   * @readonly\n   * @type {FilterDescriptor}\n   */\n\n\n  set currentFilter(value) {\n    this._currentFilter = value;\n  }\n\n  updateFilter(filter) {\n    Object.assign(this.currentFilter, filter);\n    return this.filter;\n  }\n\n  onChange(value) {\n    this.filterChange(this.updateFilter({\n      field: this.column.field,\n      operator: this.currentOperator,\n      value: value\n    }));\n  }\n\n  onShiftTab(e) {\n    e.stopImmediatePropagation();\n\n    if ((!this.menuTabbingService || !this.menuTabbingService.isColumnMenu) && this.isFirstDropDown && this.filterService.menuTabbingService.lastFocusable) {\n      e.preventDefault();\n      this.filterService.menuTabbingService.lastFocusable.focus();\n    }\n  }\n\n  get filterMenuDropDownLabel() {\n    const localizationMsg = this.localizationService.get('filterMenuOperatorsDropDownLabel') || '';\n    const columnName = this.column ? this.column.title || this.column.field : '';\n    return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n  }\n\n}\n\nFilterMenuInputWrapperComponent.ɵfac = function FilterMenuInputWrapperComponent_Factory(t) {\n  return new (t || FilterMenuInputWrapperComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nFilterMenuInputWrapperComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FilterMenuInputWrapperComponent,\n  selectors: [[\"kendo-grid-filter-menu-input-wrapper\"]],\n  viewQuery: function FilterMenuInputWrapperComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(DropDownListComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.firstOperatorDropDown = _t.first);\n    }\n  },\n  inputs: {\n    filterService: \"filterService\",\n    isFirstDropDown: \"isFirstDropDown\",\n    menuTabbingService: \"menuTabbingService\",\n    currentFilter: \"currentFilter\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c17,\n  decls: 2,\n  vars: 4,\n  consts: [[\"kendoFilterMenuDropDown\", \"\", \"textField\", \"text\", \"valueField\", \"value\", 3, \"filterMenuDropDownLabel\", \"data\", \"value\", \"valuePrimitive\", \"valueChange\", \"keydown.shift.tab\"]],\n  template: function FilterMenuInputWrapperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"kendo-dropdownlist\", 0);\n      i0.ɵɵlistener(\"valueChange\", function FilterMenuInputWrapperComponent_Template_kendo_dropdownlist_valueChange_0_listener($event) {\n        return ctx.operatorChange($event);\n      })(\"keydown.shift.tab\", function FilterMenuInputWrapperComponent_Template_kendo_dropdownlist_keydown_shift_tab_0_listener($event) {\n        return ctx.onShiftTab($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵprojection(1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"filterMenuDropDownLabel\", ctx.filterMenuDropDownLabel)(\"data\", ctx.operators)(\"value\", ctx.currentOperator)(\"valuePrimitive\", true);\n    }\n  },\n  directives: [i1$4.DropDownListComponent, FilterMenuDropDownListDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterMenuInputWrapperComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-filter-menu-input-wrapper',\n      template: `\n        <kendo-dropdownlist\n            kendoFilterMenuDropDown\n            [filterMenuDropDownLabel]=\"filterMenuDropDownLabel\"\n            [data]=\"operators\"\n            (valueChange)=\"operatorChange($event)\"\n            [value]=\"currentOperator\"\n            [valuePrimitive]=\"true\"\n            textField=\"text\"\n            valueField=\"value\"\n            (keydown.shift.tab)=\"onShiftTab($event)\">\n        </kendo-dropdownlist>\n        <ng-content></ng-content>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, {\n    filterService: [{\n      type: Input\n    }],\n    isFirstDropDown: [{\n      type: Input\n    }],\n    menuTabbingService: [{\n      type: Input\n    }],\n    firstOperatorDropDown: [{\n      type: ViewChild,\n      args: [DropDownListComponent, {\n        static: false\n      }]\n    }],\n    currentFilter: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass StringFilterMenuInputComponent {\n  constructor(localizationService) {\n    this.localizationService = localizationService;\n    this.operators = [];\n  }\n\n  get columnLabel() {\n    const localizationMsg = this.localizationService.get('filterInputLabel') || '';\n    const columnName = this.column ? this.column.title || this.column.field : '';\n    return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n  }\n\n}\n\nStringFilterMenuInputComponent.ɵfac = function StringFilterMenuInputComponent_Factory(t) {\n  return new (t || StringFilterMenuInputComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nStringFilterMenuInputComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StringFilterMenuInputComponent,\n  selectors: [[\"kendo-grid-string-filter-menu-input\"]],\n  inputs: {\n    operators: \"operators\",\n    column: \"column\",\n    filter: \"filter\",\n    operator: \"operator\",\n    currentFilter: \"currentFilter\",\n    filterService: \"filterService\",\n    isFirstDropDown: \"isFirstDropDown\",\n    menuTabbingService: \"menuTabbingService\"\n  },\n  decls: 2,\n  vars: 11,\n  consts: [[3, \"column\", \"filter\", \"operators\", \"defaultOperator\", \"currentFilter\", \"filterService\", \"isFirstDropDown\", \"menuTabbingService\"], [\"kendoTextBox\", \"\", \"kendoFilterInput\", \"\", 3, \"columnLabel\", \"filterDelay\", \"ngModel\"]],\n  template: function StringFilterMenuInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"kendo-grid-filter-menu-input-wrapper\", 0);\n      i0.ɵɵelement(1, \"input\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"defaultOperator\", ctx.operator)(\"currentFilter\", ctx.currentFilter)(\"filterService\", ctx.filterService)(\"isFirstDropDown\", ctx.isFirstDropDown)(\"menuTabbingService\", ctx.menuTabbingService);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"columnLabel\", ctx.columnLabel)(\"filterDelay\", 0)(\"ngModel\", ctx.currentFilter == null ? null : ctx.currentFilter.value);\n    }\n  },\n  directives: [FilterMenuInputWrapperComponent, i4$1.TextBoxDirective, i4$2.DefaultValueAccessor, FilterInputDirective, i4$2.NgControlStatus, i4$2.NgModel],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StringFilterMenuInputComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-string-filter-menu-input',\n      template: `\n        <kendo-grid-filter-menu-input-wrapper\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [currentFilter]=\"currentFilter\"\n            [filterService]=\"filterService\"\n            [isFirstDropDown]=\"isFirstDropDown\"\n            [menuTabbingService]=\"menuTabbingService\"\n            >\n            <input\n                kendoTextBox\n                kendoFilterInput\n                [columnLabel]=\"columnLabel\"\n                [filterDelay]=\"0\"\n                [ngModel]=\"currentFilter?.value\" />\n        </kendo-grid-filter-menu-input-wrapper>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, {\n    operators: [{\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    operator: [{\n      type: Input\n    }],\n    currentFilter: [{\n      type: Input\n    }],\n    filterService: [{\n      type: Input\n    }],\n    isFirstDropDown: [{\n      type: Input\n    }],\n    menuTabbingService: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents a string-filter menu component.\n * ([see example]({% slug filter_menu %}#toc-built-in-filter-menu-components)).\n */\n\n\nclass StringFilterMenuComponent extends StringFilterComponent {\n  constructor(localization) {\n    super(null, localization);\n    this.logicOperators = logicOperators(this.localization);\n    /**\n     * The current menu filter.\n     * @type {CompositeFilterDescriptor}\n     */\n\n    this.filter = {\n      filters: [],\n      logic: \"and\"\n    };\n    /**\n     * Determines if the inputs of second criteria will displayed.\n     */\n\n    this.extra = true;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hostClasses() {\n    return false;\n  }\n\n  get firstFilter() {\n    return setFilter(0, this.filter, (this.column || {}).field, this.operator);\n  }\n\n  get secondFilter() {\n    return setFilter(1, this.filter, (this.column || {}).field, this.operator);\n  }\n\n  logicChange(value) {\n    this.filter.logic = value;\n  }\n\n  get filterMenuDropDownLabel() {\n    const localizationMsg = this.localization.get('filterMenuLogicDropDownLabel') || '';\n    const columnName = this.column ? this.column.title || this.column.field : '';\n    return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n  }\n\n  localizationChange() {\n    this.logicOperators = logicOperators(this.localization);\n    super.localizationChange();\n  }\n\n}\n\nStringFilterMenuComponent.ɵfac = function StringFilterMenuComponent_Factory(t) {\n  return new (t || StringFilterMenuComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nStringFilterMenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StringFilterMenuComponent,\n  selectors: [[\"kendo-grid-string-filter-menu\"]],\n  hostVars: 2,\n  hostBindings: function StringFilterMenuComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-filtercell\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    column: \"column\",\n    filter: \"filter\",\n    extra: \"extra\",\n    filterService: \"filterService\",\n    menuTabbingService: \"menuTabbingService\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 9,\n  consts: [[3, \"currentFilter\", \"operators\", \"filterService\", \"column\", \"filter\", \"isFirstDropDown\", \"menuTabbingService\"], [\"kendoFilterMenuDropDown\", \"\", \"class\", \"k-filter-and\", \"textField\", \"text\", \"valueField\", \"value\", 3, \"filterMenuDropDownLabel\", \"data\", \"valuePrimitive\", \"value\", \"valueChange\", 4, \"ngIf\"], [3, \"operators\", \"currentFilter\", \"filterService\", \"column\", \"filter\", \"menuTabbingService\", 4, \"ngIf\"], [\"kendoFilterMenuDropDown\", \"\", \"textField\", \"text\", \"valueField\", \"value\", 1, \"k-filter-and\", 3, \"filterMenuDropDownLabel\", \"data\", \"valuePrimitive\", \"value\", \"valueChange\"], [3, \"operators\", \"currentFilter\", \"filterService\", \"column\", \"filter\", \"menuTabbingService\"]],\n  template: function StringFilterMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"kendo-grid-string-filter-menu-input\", 0);\n      i0.ɵɵtemplate(1, StringFilterMenuComponent_kendo_dropdownlist_1_Template, 1, 4, \"kendo-dropdownlist\", 1);\n      i0.ɵɵtemplate(2, StringFilterMenuComponent_kendo_grid_string_filter_menu_input_2_Template, 1, 6, \"kendo-grid-string-filter-menu-input\", 2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"currentFilter\", ctx.firstFilter)(\"operators\", ctx.operators)(\"filterService\", ctx.filterService)(\"column\", ctx.column)(\"filter\", ctx.filter)(\"isFirstDropDown\", true)(\"menuTabbingService\", ctx.menuTabbingService);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.extra);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.extra);\n    }\n  },\n  directives: [StringFilterMenuInputComponent, i4.NgIf, i1$4.DropDownListComponent, FilterMenuDropDownListDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StringFilterMenuComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-string-filter-menu',\n      template: `\n        <kendo-grid-string-filter-menu-input\n            [currentFilter]=\"firstFilter\"\n            [operators]=\"operators\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [isFirstDropDown]=\"true\"\n            [menuTabbingService]=\"menuTabbingService\">\n        </kendo-grid-string-filter-menu-input>\n        <kendo-dropdownlist\n            *ngIf=\"extra\"\n            kendoFilterMenuDropDown\n            [filterMenuDropDownLabel]=\"filterMenuDropDownLabel\"\n            class=\"k-filter-and\"\n            [data]=\"logicOperators\"\n            [valuePrimitive]=\"true\" (valueChange)=\"logicChange($event)\"\n            [value]=\"filter?.logic\"\n            textField=\"text\"\n            valueField=\"value\">\n        </kendo-dropdownlist>\n        <kendo-grid-string-filter-menu-input\n            *ngIf=\"extra\"\n            [operators]=\"operators\"\n            [currentFilter]=\"secondFilter\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [menuTabbingService]=\"menuTabbingService\">\n        </kendo-grid-string-filter-menu-input>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, {\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-filtercell']\n    }],\n    column: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    extra: [{\n      type: Input\n    }],\n    filterService: [{\n      type: Input\n    }],\n    menuTabbingService: [{\n      type: Input\n    }]\n  });\n})(); // eslint-disable no-access-missing-member\n\n\nconst numericOperators = localizeOperators({\n  \"filterEqOperator\": \"eq\",\n  \"filterNotEqOperator\": \"neq\",\n  \"filterGteOperator\": \"gte\",\n  \"filterGtOperator\": \"gt\",\n  \"filterLteOperator\": \"lte\",\n  \"filterLtOperator\": \"lt\",\n  \"filterIsNullOperator\": \"isnull\",\n  \"filterIsNotNullOperator\": \"isnotnull\"\n});\n/**\n * Represents a base numeric filter component.\n */\n\nclass NumericFilterComponent extends BaseFilterCellComponent {\n  constructor(filterService, localization) {\n    super(filterService);\n    this.localization = localization;\n    /**\n     * The default filter operator. Defaults to `eq`.\n     * @type {string}\n     */\n\n    this.operator = \"eq\";\n    /**\n     * Specifies the value that is used to increment or decrement the component value.\n     * @type {numeric}\n     */\n\n    this.step = 1;\n    /**\n     * Specifies whether the **Up** and **Down** spin buttons will be rendered.\n     * @type {boolean}\n     */\n\n    this.spinners = true;\n    this.defaultOperators = numericOperators(this.localization);\n  }\n  /**\n   * Specifies the number format used when the component is not focused.\n   * By default, the `column.format` value is used (if set).\n   */\n\n\n  set format(value) {\n    this._format = value;\n  }\n  /**\n   * @readonly\n   * @type {string}\n   */\n\n\n  get format() {\n    return !isNullOrEmptyString(this._format) ? this._format : this.columnFormat;\n  }\n  /**\n   * The current filter for the associated column field.\n   * @readonly\n   * @type {FilterDescriptor}\n   */\n\n\n  get currentFilter() {\n    return this.filterByField(this.column.field);\n  }\n  /**\n   * The current filter operator for the associated column field.\n   * @readonly\n   * @type {string}\n   */\n\n\n  get currentOperator() {\n    return this.currentFilter ? this.currentFilter.operator : this.operator;\n  }\n\n  get columnFormat() {\n    return this.column && !isNullOrEmptyString(this.column.format) ? extractFormat(this.column.format) : \"n2\";\n  }\n\n  ngOnInit() {\n    this.subscription = this.localization.changes.subscribe(this.localizationChange.bind(this));\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n\n    super.ngOnDestroy();\n  }\n\n  localizationChange() {\n    this.defaultOperators = numericOperators(this.localization);\n\n    if (this.operatorList.length) {\n      this.operators = toJSON(this.operatorList.toArray());\n    }\n  }\n\n}\n\nNumericFilterComponent.ɵfac = function NumericFilterComponent_Factory(t) {\n  return new (t || NumericFilterComponent)(i0.ɵɵdirectiveInject(FilterService), i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nNumericFilterComponent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NumericFilterComponent,\n  inputs: {\n    column: \"column\",\n    filter: \"filter\",\n    operator: \"operator\",\n    step: \"step\",\n    min: \"min\",\n    max: \"max\",\n    spinners: \"spinners\",\n    decimals: \"decimals\",\n    format: \"format\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumericFilterComponent, [{\n    type: Directive,\n    args: [{}]\n  }], function () {\n    return [{\n      type: FilterService\n    }, {\n      type: i1.LocalizationService\n    }];\n  }, {\n    column: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    operator: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    spinners: [{\n      type: Input\n    }],\n    decimals: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass NumericFilterMenuInputComponent {\n  constructor(localization) {\n    this.localization = localization;\n    this.operators = [];\n    /**\n     * Specifies the value which is used to increment or decrement the component value.\n     * @type {numeric}\n     */\n\n    this.step = 1;\n    /**\n     * Specifies whether the **Up** and **Down** spin buttons will be rendered.\n     * @type {boolean}\n     */\n\n    this.spinners = true;\n  }\n\n  messageFor(key) {\n    return this.localization.get(key);\n  }\n  /**\n   * @hidden\n   */\n\n\n  get columnLabel() {\n    const localizationMsg = this.localization.get('filterInputLabel') || '';\n    const columnName = this.column ? this.column.title || this.column.field : '';\n    return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n  }\n\n}\n\nNumericFilterMenuInputComponent.ɵfac = function NumericFilterMenuInputComponent_Factory(t) {\n  return new (t || NumericFilterMenuInputComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nNumericFilterMenuInputComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NumericFilterMenuInputComponent,\n  selectors: [[\"kendo-grid-numeric-filter-menu-input\"]],\n  inputs: {\n    operators: \"operators\",\n    column: \"column\",\n    filter: \"filter\",\n    operator: \"operator\",\n    currentFilter: \"currentFilter\",\n    filterService: \"filterService\",\n    filterDelay: \"filterDelay\",\n    isFirstDropDown: \"isFirstDropDown\",\n    menuTabbingService: \"menuTabbingService\",\n    step: \"step\",\n    min: \"min\",\n    max: \"max\",\n    spinners: \"spinners\",\n    decimals: \"decimals\",\n    format: \"format\"\n  },\n  decls: 3,\n  vars: 20,\n  consts: [[3, \"column\", \"filter\", \"operators\", \"defaultOperator\", \"currentFilter\", \"filterService\", \"isFirstDropDown\", \"menuTabbingService\"], [\"kendoFilterInput\", \"\", 3, \"columnLabel\", \"filterDelay\", \"autoCorrect\", \"value\", \"format\", \"decimals\", \"spinners\", \"min\", \"max\", \"step\"], [3, \"increment\", \"decrement\"]],\n  template: function NumericFilterMenuInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"kendo-grid-filter-menu-input-wrapper\", 0);\n      i0.ɵɵelementStart(1, \"kendo-numerictextbox\", 1);\n      i0.ɵɵelement(2, \"kendo-numerictextbox-messages\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"defaultOperator\", ctx.operator)(\"currentFilter\", ctx.currentFilter)(\"filterService\", ctx.filterService)(\"isFirstDropDown\", ctx.isFirstDropDown)(\"menuTabbingService\", ctx.menuTabbingService);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"columnLabel\", ctx.columnLabel)(\"filterDelay\", ctx.filterDelay)(\"autoCorrect\", true)(\"value\", ctx.currentFilter == null ? null : ctx.currentFilter.value)(\"format\", ctx.format)(\"decimals\", ctx.decimals)(\"spinners\", ctx.spinners)(\"min\", ctx.min)(\"max\", ctx.max)(\"step\", ctx.step);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"increment\", ctx.messageFor(\"filterNumericIncrement\"))(\"decrement\", ctx.messageFor(\"filterNumericDecrement\"));\n    }\n  },\n  directives: [FilterMenuInputWrapperComponent, i4$1.NumericTextBoxComponent, FilterInputDirective, i4$1.NumericTextBoxCustomMessagesComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumericFilterMenuInputComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-numeric-filter-menu-input',\n      template: `\n        <kendo-grid-filter-menu-input-wrapper\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [currentFilter]=\"currentFilter\"\n            [filterService]=\"filterService\"\n            [isFirstDropDown]=\"isFirstDropDown\"\n            [menuTabbingService]=\"menuTabbingService\"\n        >\n            <kendo-numerictextbox\n                kendoFilterInput\n                [columnLabel]=\"columnLabel\"\n                [filterDelay]=\"filterDelay\"\n                [autoCorrect]=\"true\"\n                [value]=\"currentFilter?.value\"\n                [format]=\"format\"\n                [decimals]=\"decimals\"\n                [spinners]=\"spinners\"\n                [min]=\"min\"\n                [max]=\"max\"\n                [step]=\"step\"\n            >\n                <kendo-numerictextbox-messages\n                    [increment]=\"messageFor('filterNumericIncrement')\"\n                    [decrement]=\"messageFor('filterNumericDecrement')\"\n                >\n                </kendo-numerictextbox-messages>\n            </kendo-numerictextbox>\n        </kendo-grid-filter-menu-input-wrapper>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, {\n    operators: [{\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    operator: [{\n      type: Input\n    }],\n    currentFilter: [{\n      type: Input\n    }],\n    filterService: [{\n      type: Input\n    }],\n    filterDelay: [{\n      type: Input\n    }],\n    isFirstDropDown: [{\n      type: Input\n    }],\n    menuTabbingService: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    spinners: [{\n      type: Input\n    }],\n    decimals: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents a numeric-filter menu component.\n *\n * @example\n *  ```html-no-run\n *      <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\">\n *          <ng-template kendoGridFilterMenuTemplate let-filter let-column=\"column\" let-filterService=\"filterService\">\n *          <kendo-grid-numeric-filter-menu\n *              [column]=\"column\"\n *              [filter]=\"filter\"\n *              [filterService]=\"filterService\"\n *              >\n *          </kendo-grid-numeric-filter-menu>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\n\n\nclass NumericFilterMenuComponent extends NumericFilterComponent {\n  constructor(localization) {\n    super(null, localization);\n    this.logicOperators = logicOperators(this.localization);\n    /**\n     * The current menu filter.\n     * @type {CompositeFilterDescriptor}\n     */\n\n    this.filter = {\n      filters: [],\n      logic: \"and\"\n    };\n    /**\n     * Determines if the inputs of second criteria will displayed.\n     */\n\n    this.extra = true;\n    /**\n     * Determines the delay (in milliseconds) before creating a filter descriptor based on the value. A value of 0 indicates no delay. The default value is 500.\n     *\n     * @default 500\n     */\n\n    this.filterDelay = 500;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hostClasses() {\n    return false;\n  }\n\n  get firstFilter() {\n    return setFilter(0, this.filter, (this.column || {}).field, this.operator);\n  }\n\n  get secondFilter() {\n    return setFilter(1, this.filter, (this.column || {}).field, this.operator);\n  }\n\n  logicChange(value) {\n    this.filter.logic = value;\n  }\n\n  get filterMenuDropDownLabel() {\n    const localizationMsg = this.localization.get('filterMenuLogicDropDownLabel') || '';\n    const columnName = this.column ? this.column.title || this.column.field : '';\n    return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n  }\n\n  localizationChange() {\n    this.logicOperators = logicOperators(this.localization);\n    super.localizationChange();\n  }\n\n}\n\nNumericFilterMenuComponent.ɵfac = function NumericFilterMenuComponent_Factory(t) {\n  return new (t || NumericFilterMenuComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nNumericFilterMenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NumericFilterMenuComponent,\n  selectors: [[\"kendo-grid-numeric-filter-menu\"]],\n  hostVars: 2,\n  hostBindings: function NumericFilterMenuComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-filtercell\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    column: \"column\",\n    filter: \"filter\",\n    extra: \"extra\",\n    filterService: \"filterService\",\n    filterDelay: \"filterDelay\",\n    menuTabbingService: \"menuTabbingService\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 16,\n  consts: [[3, \"currentFilter\", \"operators\", \"filterService\", \"column\", \"filter\", \"filterDelay\", \"format\", \"decimals\", \"spinners\", \"min\", \"max\", \"step\", \"menuTabbingService\", \"isFirstDropDown\"], [\"kendoFilterMenuDropDown\", \"\", \"class\", \"k-filter-and\", \"textField\", \"text\", \"valueField\", \"value\", 3, \"filterMenuDropDownLabel\", \"data\", \"valuePrimitive\", \"value\", \"valueChange\", 4, \"ngIf\"], [3, \"operators\", \"currentFilter\", \"filterService\", \"column\", \"filter\", \"format\", \"decimals\", \"spinners\", \"min\", \"max\", \"step\", \"menuTabbingService\", 4, \"ngIf\"], [\"kendoFilterMenuDropDown\", \"\", \"textField\", \"text\", \"valueField\", \"value\", 1, \"k-filter-and\", 3, \"filterMenuDropDownLabel\", \"data\", \"valuePrimitive\", \"value\", \"valueChange\"], [3, \"operators\", \"currentFilter\", \"filterService\", \"column\", \"filter\", \"format\", \"decimals\", \"spinners\", \"min\", \"max\", \"step\", \"menuTabbingService\"]],\n  template: function NumericFilterMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"kendo-grid-numeric-filter-menu-input\", 0);\n      i0.ɵɵtemplate(1, NumericFilterMenuComponent_kendo_dropdownlist_1_Template, 1, 4, \"kendo-dropdownlist\", 1);\n      i0.ɵɵtemplate(2, NumericFilterMenuComponent_kendo_grid_numeric_filter_menu_input_2_Template, 1, 12, \"kendo-grid-numeric-filter-menu-input\", 2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"currentFilter\", ctx.firstFilter)(\"operators\", ctx.operators)(\"filterService\", ctx.filterService)(\"column\", ctx.column)(\"filter\", ctx.filter)(\"filterDelay\", ctx.filterDelay)(\"format\", ctx.format)(\"decimals\", ctx.decimals)(\"spinners\", ctx.spinners)(\"min\", ctx.min)(\"max\", ctx.max)(\"step\", ctx.step)(\"menuTabbingService\", ctx.menuTabbingService)(\"isFirstDropDown\", true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.extra);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.extra);\n    }\n  },\n  directives: [NumericFilterMenuInputComponent, i4.NgIf, i1$4.DropDownListComponent, FilterMenuDropDownListDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumericFilterMenuComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-numeric-filter-menu',\n      template: `\n        <kendo-grid-numeric-filter-menu-input\n            [currentFilter]=\"firstFilter\"\n            [operators]=\"operators\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [filterDelay]=\"filterDelay\"\n            [format]=\"format\"\n            [decimals]=\"decimals\"\n            [spinners]=\"spinners\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [step]=\"step\"\n            [menuTabbingService]=\"menuTabbingService\"\n            [isFirstDropDown]=\"true\"\n            >\n        </kendo-grid-numeric-filter-menu-input>\n        <kendo-dropdownlist\n            *ngIf=\"extra\"\n            kendoFilterMenuDropDown\n            [filterMenuDropDownLabel]=\"filterMenuDropDownLabel\"\n            class=\"k-filter-and\"\n            [data]=\"logicOperators\"\n            [valuePrimitive]=\"true\"\n            (valueChange)=\"logicChange($event)\"\n            [value]=\"filter?.logic\"\n            textField=\"text\"\n            valueField=\"value\">\n        </kendo-dropdownlist>\n        <kendo-grid-numeric-filter-menu-input\n            *ngIf=\"extra\"\n            [operators]=\"operators\"\n            [currentFilter]=\"secondFilter\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [format]=\"format\"\n            [decimals]=\"decimals\"\n            [spinners]=\"spinners\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [step]=\"step\"\n            [menuTabbingService]=\"menuTabbingService\"\n            >\n        </kendo-grid-numeric-filter-menu-input>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, {\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-filtercell']\n    }],\n    column: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    extra: [{\n      type: Input\n    }],\n    filterService: [{\n      type: Input\n    }],\n    filterDelay: [{\n      type: Input\n    }],\n    menuTabbingService: [{\n      type: Input\n    }]\n  });\n})(); // eslint-disable no-access-missing-member\n\n\nconst dateOperators = localizeOperators({\n  \"filterEqOperator\": \"eq\",\n  \"filterNotEqOperator\": \"neq\",\n  \"filterAfterOrEqualOperator\": \"gte\",\n  \"filterAfterOperator\": \"gt\",\n  \"filterBeforeOrEqualOperator\": \"lte\",\n  \"filterBeforeOperator\": \"lt\",\n  \"filterIsNullOperator\": \"isnull\",\n  \"filterIsNotNullOperator\": \"isnotnull\"\n});\n/**\n * @hidden\n */\n\nclass DateFilterComponent extends BaseFilterCellComponent {\n  constructor(filterService, localization) {\n    super(filterService);\n    this.localization = localization;\n    /**\n     * The default filter operator. Defaults to `contains`.\n     * @type {string}\n     */\n\n    this.operator = \"gte\";\n    /**\n     * Defines the active view that the calendar initially renders.\n     * By default, the active view is `month`.\n     *\n     * > You have to set `activeView` within the `topView`-`bottomView` range.\n     */\n\n    this.activeView = \"month\";\n    /**\n     * Defines the bottommost calendar view, to which the user can navigate.\n     */\n\n    this.bottomView = \"month\";\n    /**\n     * Defines the topmost calendar view, to which the user can navigate.\n     */\n\n    this.topView = \"century\";\n    /**\n     * Determines whether to display a week number column in the `month` view of the Calendar.\n     */\n\n    this.weekNumber = false;\n    this.defaultOperators = dateOperators(this.localization);\n  }\n  /**\n   * The current filter for the associated column field.\n   * @readonly\n   * @type {FilterDescriptor}\n   */\n\n\n  get currentFilter() {\n    return this.filterByField(this.column.field);\n  }\n  /**\n   * Specifies the date format that is used when the component is not focused.\n   * By default, the `column.format` value is used (if set).\n   */\n\n\n  set format(value) {\n    this._format = value;\n  }\n  /**\n   * Specifies the date format that is used when the component is not focused.\n   * By default, the `column.format` value is used (if set).\n   *\n   * @readonly\n   * @type {string}\n   */\n\n\n  get format() {\n    return !isNullOrEmptyString(this._format) ? this._format : this.columnFormat;\n  }\n\n  get columnFormat() {\n    return this.column && !isNullOrEmptyString(this.column.format) ? extractFormat(this.column.format) : \"d\";\n  }\n  /**\n   * The current filter operator for the associated column field.\n   * @readonly\n   * @type {string}\n   */\n\n\n  get currentOperator() {\n    return this.currentFilter ? this.currentFilter.operator : this.operator;\n  }\n\n  ngOnInit() {\n    this.subscription = this.localization.changes.subscribe(this.localizationChange.bind(this));\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n\n    super.ngOnDestroy();\n  }\n\n  localizationChange() {\n    this.defaultOperators = dateOperators(this.localization);\n\n    if (this.operatorList.length) {\n      this.operators = toJSON(this.operatorList.toArray());\n    }\n  }\n\n}\n\nDateFilterComponent.ɵfac = function DateFilterComponent_Factory(t) {\n  return new (t || DateFilterComponent)(i0.ɵɵdirectiveInject(FilterService), i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nDateFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DateFilterComponent,\n  selectors: [[\"kendo-grid-date-filter-base\"]],\n  inputs: {\n    column: \"column\",\n    filter: \"filter\",\n    operator: \"operator\",\n    format: \"format\",\n    min: \"min\",\n    max: \"max\",\n    formatPlaceholder: \"formatPlaceholder\",\n    placeholder: \"placeholder\",\n    activeView: \"activeView\",\n    bottomView: \"bottomView\",\n    topView: \"topView\",\n    weekNumber: \"weekNumber\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function DateFilterComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DateFilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-date-filter-base',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: FilterService\n    }, {\n      type: i1.LocalizationService\n    }];\n  }, {\n    column: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    operator: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    formatPlaceholder: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    activeView: [{\n      type: Input\n    }],\n    bottomView: [{\n      type: Input\n    }],\n    topView: [{\n      type: Input\n    }],\n    weekNumber: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass DateFilterMenuInputComponent {\n  constructor(popupService, localizationService) {\n    this.popupService = popupService;\n    this.localizationService = localizationService;\n    this.operators = [];\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  open(picker) {\n    this.subscription = this.popupService.onClose.pipe(filter(() => picker.isActive)).subscribe(e => e.preventDefault());\n  }\n\n  messageFor(key) {\n    return this.localizationService.get(key);\n  }\n\n  get columnLabel() {\n    const localizationMsg = this.localizationService.get('filterInputLabel') || '';\n    const columnName = this.column ? this.column.title || this.column.field : '';\n    return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n  }\n\n}\n\nDateFilterMenuInputComponent.ɵfac = function DateFilterMenuInputComponent_Factory(t) {\n  return new (t || DateFilterMenuInputComponent)(i0.ɵɵdirectiveInject(SinglePopupService), i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nDateFilterMenuInputComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DateFilterMenuInputComponent,\n  selectors: [[\"kendo-grid-date-filter-menu-input\"]],\n  inputs: {\n    operators: \"operators\",\n    column: \"column\",\n    filter: \"filter\",\n    operator: \"operator\",\n    currentFilter: \"currentFilter\",\n    filterService: \"filterService\",\n    menuTabbingService: \"menuTabbingService\",\n    format: \"format\",\n    formatPlaceholder: \"formatPlaceholder\",\n    placeholder: \"placeholder\",\n    min: \"min\",\n    max: \"max\",\n    activeView: \"activeView\",\n    bottomView: \"bottomView\",\n    topView: \"topView\",\n    weekNumber: \"weekNumber\",\n    isFirstDropDown: \"isFirstDropDown\"\n  },\n  decls: 4,\n  vars: 22,\n  consts: [[3, \"column\", \"filter\", \"operators\", \"defaultOperator\", \"currentFilter\", \"filterService\", \"isFirstDropDown\", \"menuTabbingService\"], [\"kendoFilterInput\", \"\", 3, \"columnLabel\", \"filterDelay\", \"value\", \"placeholder\", \"formatPlaceholder\", \"format\", \"min\", \"max\", \"activeView\", \"bottomView\", \"topView\", \"weekNumber\", \"open\"], [\"picker\", \"\"], [3, \"toggle\", \"today\"]],\n  template: function DateFilterMenuInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"kendo-grid-filter-menu-input-wrapper\", 0);\n      i0.ɵɵelementStart(1, \"kendo-datepicker\", 1, 2);\n      i0.ɵɵlistener(\"open\", function DateFilterMenuInputComponent_Template_kendo_datepicker_open_1_listener() {\n        i0.ɵɵrestoreView(_r1);\n\n        const _r0 = i0.ɵɵreference(2);\n\n        return ctx.open(_r0);\n      });\n      i0.ɵɵelement(3, \"kendo-datepicker-messages\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"defaultOperator\", ctx.operator)(\"currentFilter\", ctx.currentFilter)(\"filterService\", ctx.filterService)(\"isFirstDropDown\", ctx.isFirstDropDown)(\"menuTabbingService\", ctx.menuTabbingService);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"columnLabel\", ctx.columnLabel)(\"filterDelay\", 0)(\"value\", ctx.currentFilter == null ? null : ctx.currentFilter.value)(\"placeholder\", ctx.placeholder)(\"formatPlaceholder\", ctx.formatPlaceholder)(\"format\", ctx.format)(\"min\", ctx.min)(\"max\", ctx.max)(\"activeView\", ctx.activeView)(\"bottomView\", ctx.bottomView)(\"topView\", ctx.topView)(\"weekNumber\", ctx.weekNumber);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"toggle\", ctx.messageFor(\"filterDateToggle\"))(\"today\", ctx.messageFor(\"filterDateToday\"));\n    }\n  },\n  directives: [FilterMenuInputWrapperComponent, i4$3.DatePickerComponent, FilterInputDirective, i4$3.DatePickerCustomMessagesComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DateFilterMenuInputComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-date-filter-menu-input',\n      template: `\n        <kendo-grid-filter-menu-input-wrapper\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [currentFilter]=\"currentFilter\"\n            [filterService]=\"filterService\"\n            [isFirstDropDown]=\"isFirstDropDown\"\n            [menuTabbingService]=\"menuTabbingService\"\n        >\n            <kendo-datepicker\n                #picker\n                kendoFilterInput\n                [columnLabel]=\"columnLabel\"\n                [filterDelay]=\"0\"\n                (open)=\"open(picker)\"\n                [value]=\"currentFilter?.value\"\n                [placeholder]=\"placeholder\"\n                [formatPlaceholder]=\"formatPlaceholder\"\n                [format]=\"format\"\n                [min]=\"min\"\n                [max]=\"max\"\n                [activeView]=\"activeView\"\n                [bottomView]=\"bottomView\"\n                [topView]=\"topView\"\n                [weekNumber]=\"weekNumber\"\n            >\n                <kendo-datepicker-messages\n                    [toggle]=\"messageFor('filterDateToggle')\"\n                    [today]=\"messageFor('filterDateToday')\"\n                >\n                </kendo-datepicker-messages>\n            </kendo-datepicker>\n        </kendo-grid-filter-menu-input-wrapper>\n    `\n    }]\n  }], function () {\n    return [{\n      type: SinglePopupService\n    }, {\n      type: i1.LocalizationService\n    }];\n  }, {\n    operators: [{\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    operator: [{\n      type: Input\n    }],\n    currentFilter: [{\n      type: Input\n    }],\n    filterService: [{\n      type: Input\n    }],\n    menuTabbingService: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    formatPlaceholder: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    activeView: [{\n      type: Input\n    }],\n    bottomView: [{\n      type: Input\n    }],\n    topView: [{\n      type: Input\n    }],\n    weekNumber: [{\n      type: Input\n    }],\n    isFirstDropDown: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents a date-filter menu component.\n *\n * @example\n *  ```html-no-run\n *      <kendo-grid-column field=\"OrderDate\" title=\"Order Date\">\n *          <ng-template kendoGridFilterMenuTemplate let-filter let-column=\"column\" let-filterService=\"filterService\">\n *            <kendo-grid-date-filter-menu\n *                [column]=\"column\"\n *                [filter]=\"filter\"\n *                [filterService]=\"filterService\"\n *                >\n *            </kendo-grid-date-filter-menu>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\n\n\nclass DateFilterMenuComponent extends DateFilterComponent {\n  constructor(localization) {\n    super(null, localization);\n    this.logicOperators = logicOperators(this.localization);\n    /**\n     * The current menu filter.\n     * @type {CompositeFilterDescriptor}\n     */\n\n    this.filter = {\n      filters: [],\n      logic: \"and\"\n    };\n    /**\n     * Determines if the inputs of second criteria will be displayed.\n     */\n\n    this.extra = true;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hostClasses() {\n    return false;\n  }\n\n  get firstFilter() {\n    return setFilter(0, this.filter, (this.column || {}).field, this.operator);\n  }\n\n  get secondFilter() {\n    return setFilter(1, this.filter, (this.column || {}).field, this.operator);\n  }\n\n  logicChange(value) {\n    this.filter.logic = value;\n  }\n\n  get filterMenuDropDownLabel() {\n    const localizationMsg = this.localization.get('filterMenuLogicDropDownLabel') || '';\n    const columnName = this.column ? this.column.title || this.column.field : '';\n    return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n  }\n\n  localizationChange() {\n    this.logicOperators = logicOperators(this.localization);\n    super.localizationChange();\n  }\n\n}\n\nDateFilterMenuComponent.ɵfac = function DateFilterMenuComponent_Factory(t) {\n  return new (t || DateFilterMenuComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nDateFilterMenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DateFilterMenuComponent,\n  selectors: [[\"kendo-grid-date-filter-menu\"]],\n  hostVars: 2,\n  hostBindings: function DateFilterMenuComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-filtercell\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    column: \"column\",\n    filter: \"filter\",\n    extra: \"extra\",\n    filterService: \"filterService\",\n    menuTabbingService: \"menuTabbingService\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 18,\n  consts: [[3, \"currentFilter\", \"operators\", \"filterService\", \"column\", \"filter\", \"activeView\", \"bottomView\", \"topView\", \"format\", \"formatPlaceholder\", \"placeholder\", \"min\", \"max\", \"weekNumber\", \"isFirstDropDown\", \"menuTabbingService\"], [\"kendoFilterMenuDropDown\", \"\", \"class\", \"k-filter-and\", \"textField\", \"text\", \"valueField\", \"value\", 3, \"filterMenuDropDownLabel\", \"data\", \"valuePrimitive\", \"value\", \"valueChange\", 4, \"ngIf\"], [3, \"operators\", \"currentFilter\", \"filterService\", \"column\", \"filter\", \"activeView\", \"bottomView\", \"topView\", \"format\", \"formatPlaceholder\", \"placeholder\", \"min\", \"max\", \"weekNumber\", \"menuTabbingService\", 4, \"ngIf\"], [\"kendoFilterMenuDropDown\", \"\", \"textField\", \"text\", \"valueField\", \"value\", 1, \"k-filter-and\", 3, \"filterMenuDropDownLabel\", \"data\", \"valuePrimitive\", \"value\", \"valueChange\"], [3, \"operators\", \"currentFilter\", \"filterService\", \"column\", \"filter\", \"activeView\", \"bottomView\", \"topView\", \"format\", \"formatPlaceholder\", \"placeholder\", \"min\", \"max\", \"weekNumber\", \"menuTabbingService\"]],\n  template: function DateFilterMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"kendo-grid-date-filter-menu-input\", 0);\n      i0.ɵɵtemplate(1, DateFilterMenuComponent_kendo_dropdownlist_1_Template, 1, 4, \"kendo-dropdownlist\", 1);\n      i0.ɵɵtemplate(2, DateFilterMenuComponent_kendo_grid_date_filter_menu_input_2_Template, 1, 15, \"kendo-grid-date-filter-menu-input\", 2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"currentFilter\", ctx.firstFilter)(\"operators\", ctx.operators)(\"filterService\", ctx.filterService)(\"column\", ctx.column)(\"filter\", ctx.filter)(\"activeView\", ctx.activeView)(\"bottomView\", ctx.bottomView)(\"topView\", ctx.topView)(\"format\", ctx.format)(\"formatPlaceholder\", ctx.formatPlaceholder)(\"placeholder\", ctx.placeholder)(\"min\", ctx.min)(\"max\", ctx.max)(\"weekNumber\", ctx.weekNumber)(\"isFirstDropDown\", true)(\"menuTabbingService\", ctx.menuTabbingService);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.extra);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.extra);\n    }\n  },\n  directives: [DateFilterMenuInputComponent, i4.NgIf, i1$4.DropDownListComponent, FilterMenuDropDownListDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DateFilterMenuComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-date-filter-menu',\n      template: `\n        <kendo-grid-date-filter-menu-input\n            [currentFilter]=\"firstFilter\"\n            [operators]=\"operators\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [activeView]=\"activeView\"\n            [bottomView]=\"bottomView\"\n            [topView]=\"topView\"\n            [format]=\"format\"\n            [formatPlaceholder]=\"formatPlaceholder\"\n            [placeholder]=\"placeholder\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [weekNumber]=\"weekNumber\"\n            [isFirstDropDown]=\"true\"\n            [menuTabbingService]=\"menuTabbingService\"\n            >\n        </kendo-grid-date-filter-menu-input>\n        <kendo-dropdownlist\n            *ngIf=\"extra\"\n            kendoFilterMenuDropDown\n            [filterMenuDropDownLabel]=\"filterMenuDropDownLabel\"\n            class=\"k-filter-and\"\n            [data]=\"logicOperators\"\n            [valuePrimitive]=\"true\"\n            (valueChange)=\"logicChange($event)\"\n            [value]=\"filter?.logic\"\n            textField=\"text\"\n            valueField=\"value\">\n        </kendo-dropdownlist>\n        <kendo-grid-date-filter-menu-input\n            *ngIf=\"extra\"\n            [operators]=\"operators\"\n            [currentFilter]=\"secondFilter\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [activeView]=\"activeView\"\n            [bottomView]=\"bottomView\"\n            [topView]=\"topView\"\n            [format]=\"format\"\n            [formatPlaceholder]=\"formatPlaceholder\"\n            [placeholder]=\"placeholder\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [weekNumber]=\"weekNumber\"\n            [menuTabbingService]=\"menuTabbingService\"\n            >\n        </kendo-grid-date-filter-menu-input>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, {\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-filtercell']\n    }],\n    column: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    extra: [{\n      type: Input\n    }],\n    filterService: [{\n      type: Input\n    }],\n    menuTabbingService: [{\n      type: Input\n    }]\n  });\n})(); // eslint-disable no-access-missing-member\n\n/**\n * @hidden\n */\n\n\nclass BooleanFilterComponent extends BaseFilterCellComponent {\n  constructor(filterService, localization) {\n    super(filterService);\n    this.localization = localization;\n    /**\n     * @hidden\n     */\n\n    this.operator = \"eq\";\n    /**\n     * @hidden\n     */\n\n    this.items = [{\n      text: this.localization.get(\"filterIsTrue\"),\n      value: true\n    }, {\n      text: this.localization.get(\"filterIsFalse\"),\n      value: false\n    }];\n    /**\n     * @hidden\n     */\n\n    this.defaultItem = {\n      text: this.localization.get(\"filterBooleanAll\"),\n      value: null\n    };\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hostClasses() {\n    return true;\n  }\n  /**\n   * The current filter for the associated column field.\n   * @readonly\n   * @type {FilterDescriptor}\n   */\n\n\n  get currentFilter() {\n    return this.filterByField(this.column.field);\n  }\n  /**\n   * The current filter operator for the associated column field.\n   * @readonly\n   * @type {string}\n   */\n\n\n  get currentOperator() {\n    return this.currentFilter ? this.currentFilter.operator : this.operator;\n  }\n\n  ngOnInit() {\n    this.subscription = this.localization.changes.subscribe(this.localizationChange.bind(this));\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n\n    super.ngOnDestroy();\n  }\n\n  localizationChange() {\n    this.items = [{\n      text: this.localization.get(\"filterIsTrue\"),\n      value: true\n    }, {\n      text: this.localization.get(\"filterIsFalse\"),\n      value: false\n    }];\n    this.defaultItem = {\n      text: this.localization.get(\"filterBooleanAll\"),\n      value: null\n    };\n  }\n\n}\n\nBooleanFilterComponent.ɵfac = function BooleanFilterComponent_Factory(t) {\n  return new (t || BooleanFilterComponent)(i0.ɵɵdirectiveInject(FilterService), i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nBooleanFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BooleanFilterComponent,\n  selectors: [[\"kendo-grid-boolean-filter-base\"]],\n  hostVars: 2,\n  hostBindings: function BooleanFilterComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-filtercell-boolean\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    column: \"column\",\n    filter: \"filter\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function BooleanFilterComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BooleanFilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-boolean-filter-base',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: FilterService\n    }, {\n      type: i1.LocalizationService\n    }];\n  }, {\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-filtercell-boolean']\n    }],\n    column: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass BooleanFilterRadioButtonDirective {\n  constructor(hostElement, renderer) {\n    this.hostElement = hostElement;\n    this.renderer = renderer;\n  }\n\n  ngAfterViewInit() {\n    this.radioButtonEl = this.hostElement.nativeElement;\n    this.renderer.setAttribute(this.hostElement.nativeElement, 'aria-label', this.columnLabel);\n  }\n\n}\n\nBooleanFilterRadioButtonDirective.ɵfac = function BooleanFilterRadioButtonDirective_Factory(t) {\n  return new (t || BooleanFilterRadioButtonDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nBooleanFilterRadioButtonDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: BooleanFilterRadioButtonDirective,\n  selectors: [[\"\", \"kendoFilterMenuRadioButton\", \"\"]],\n  inputs: {\n    columnLabel: \"columnLabel\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BooleanFilterRadioButtonDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoFilterMenuRadioButton]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    columnLabel: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents a Boolean-filter menu component.\n *\n * @example\n *  ```html-no-run\n *      <kendo-grid-column field=\"Discontinued\" title=\"Discontinued\">\n *          <ng-template kendoGridFilterMenuTemplate let-filter let-column=\"column\" let-filterService=\"filterService\">\n *            <kendo-grid-boolean-filter-menu\n *                [column]=\"column\"\n *                [filter]=\"filter\"\n *                [filterService]=\"filterService\"\n *                >\n *            </kendo-grid-boolean-filter-menu>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\n\n\nclass BooleanFilterMenuComponent extends BooleanFilterComponent {\n  constructor(localization) {\n    super(null, localization);\n    /**\n     * The current menu filter.\n     * @type {CompositeFilterDescriptor}\n     */\n\n    this.filter = {\n      filters: [],\n      logic: \"and\"\n    };\n    this.idPrefix = guid();\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hostClasses() {\n    return false;\n  }\n\n  ngAfterViewInit() {\n    this.filterService.menuTabbingService.firstFocusable = this.radioButtons.first.radioButtonEl;\n    this.radioButtons.first.radioButtonEl.focus();\n  }\n  /**\n   * @hidden\n   */\n\n\n  radioId(value) {\n    return `${this.idPrefix}_${value}`;\n  }\n  /**\n   * @hidden\n   */\n\n\n  onChange(value, input) {\n    this.applyFilter(this.updateFilter({\n      field: this.column.field,\n      operator: \"eq\",\n      value: value\n    }));\n    this.filterService.menuTabbingService.firstFocusable = input;\n  }\n  /**\n   * @hidden\n   */\n\n\n  isSelected(radioValue) {\n    return this.filtersByField(this.column.field).some(({\n      value\n    }) => value === radioValue);\n  }\n  /**\n   * @hidden\n   */\n\n\n  onShiftTab(e) {\n    if ((!this.menuTabbingService || !this.menuTabbingService.isColumnMenu) && this.filterService.menuTabbingService.lastFocusable) {\n      e.preventDefault();\n      this.filterService.menuTabbingService.lastFocusable.focus();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  get columnLabel() {\n    const localizationMsg = this.localization.get('filterInputLabel') || '';\n    const columnName = this.column.title || this.column.field;\n    return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n  }\n\n}\n\nBooleanFilterMenuComponent.ɵfac = function BooleanFilterMenuComponent_Factory(t) {\n  return new (t || BooleanFilterMenuComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nBooleanFilterMenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BooleanFilterMenuComponent,\n  selectors: [[\"kendo-grid-boolean-filter-menu\"]],\n  viewQuery: function BooleanFilterMenuComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(BooleanFilterRadioButtonDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.radioButtons = _t);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function BooleanFilterMenuComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-filtercell\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    filter: \"filter\",\n    filterService: \"filterService\",\n    menuTabbingService: \"menuTabbingService\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"k-radio-list\", \"k-reset\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"radio\", \"kendoFilterMenuRadioButton\", \"\", \"kendoRadioButton\", \"\", 3, \"columnLabel\", \"name\", \"checked\", \"change\", \"keydown.shift.tab\"], [\"input\", \"\"], [1, \"k-radio-label\"]],\n  template: function BooleanFilterMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ul\", 0);\n      i0.ɵɵtemplate(1, BooleanFilterMenuComponent_li_1_Template, 5, 6, \"li\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  directives: [i4.NgForOf, i4$1.RadioButtonDirective, BooleanFilterRadioButtonDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BooleanFilterMenuComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-boolean-filter-menu',\n      template: `\n        <ul class=\"k-radio-list k-reset\">\n            <li *ngFor=\"let item of items\">\n                <input type=\"radio\"\n                    kendoFilterMenuRadioButton\n                    [columnLabel]=\"columnLabel\"\n                    #input\n                    [name]=\"idPrefix\"\n                    kendoRadioButton\n                    [checked]=\"isSelected(item.value)\"\n                    [attr.id]=\"radioId(item.value)\"\n                    (change)=\"onChange(item.value, input)\"\n                    (keydown.shift.tab)=\"onShiftTab($event)\"\n                />\n                <label class=\"k-radio-label\" [attr.for]=\"radioId(item.value)\">{{item.text}}</label>\n            </li>\n        </ul>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, {\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-filtercell']\n    }],\n    filter: [{\n      type: Input\n    }],\n    filterService: [{\n      type: Input\n    }],\n    menuTabbingService: [{\n      type: Input\n    }],\n    radioButtons: [{\n      type: ViewChildren,\n      args: [BooleanFilterRadioButtonDirective]\n    }]\n  });\n})();\n/**\n * @hidden\n *\n * > List the following components as `entryComponents` in the GridModule.\n */\n\n\nconst filterMenuComponentFactory = type => ({\n  \"boolean\": BooleanFilterMenuComponent,\n  \"date\": DateFilterMenuComponent,\n  \"numeric\": NumericFilterMenuComponent,\n  \"text\": StringFilterMenuComponent\n})[type];\n/**\n * @hidden\n */\n\n\nclass FilterMenuHostDirective extends FilterHostDirective {\n  constructor(host, resolver) {\n    super(host, resolver);\n  }\n\n  componentType() {\n    if (isPresent(this.column) && !isNullOrEmptyString(this.column.filter)) {\n      return filterMenuComponentFactory(this.column.filter);\n    }\n\n    return StringFilterMenuComponent;\n  }\n\n  initComponent(ctx) {\n    super.initComponent(ctx);\n    this.component.instance.filterService = this.filterService;\n    this.component.instance.menuTabbingService = this.menuTabbingService;\n  }\n\n}\n\nFilterMenuHostDirective.ɵfac = function FilterMenuHostDirective_Factory(t) {\n  return new (t || FilterMenuHostDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n};\n\nFilterMenuHostDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FilterMenuHostDirective,\n  selectors: [[\"\", \"kendoFilterMenuHost\", \"\"]],\n  inputs: {\n    filterService: \"filterService\",\n    menuTabbingService: \"menuTabbingService\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterMenuHostDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoFilterMenuHost]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.ComponentFactoryResolver\n    }];\n  }, {\n    filterService: [{\n      type: Input\n    }],\n    menuTabbingService: [{\n      type: Input\n    }]\n  });\n})();\n\nconst isNoValueOperator = operator => operator === \"isnull\" || operator === \"isnotnull\" || operator === \"isempty\" || operator === \"isnotempty\";\n\nconst validFilters = ({\n  value,\n  operator\n}) => !isNullOrEmptyString(value) || isNoValueOperator(operator);\n\nconst trimFilters = filter => {\n  filter.filters = filter.filters.filter(validFilters);\n  return filter;\n};\n\nconst findParent = (filters, field, parent) => {\n  return filters.reduce((acc, filter) => {\n    if (acc) {\n      return acc;\n    }\n\n    if (filter.filters) {\n      return findParent(filter.filters, field, filter);\n    } else if (filter.field === field) {\n      return parent;\n    }\n\n    return acc;\n  }, undefined);\n};\n\nconst parentLogicOfDefault = (filter, field, def = \"and\") => {\n  const parent = findParent((filter || {}).filters || [], field);\n  return isPresent(parent) ? parent.logic : def;\n};\n/**\n * @hidden\n */\n\n\nclass FilterMenuContainerComponent {\n  constructor(parentService, childService, localization, cd, menuTabbingService) {\n    this.parentService = parentService;\n    this.childService = childService;\n    this.localization = localization;\n    this.cd = cd;\n    this.close = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.actionsClass = 'k-action-buttons';\n    this._templateContext = {};\n    this.menuTabbingService = menuTabbingService;\n  }\n\n  get filter() {\n    return this._filter;\n  }\n  /**\n   * The current root filter.\n   * @type {CompositeFilterDescriptor}\n   */\n\n\n  set filter(value) {\n    this._filter = cloneFilters(value);\n  }\n\n  get childFilter() {\n    if (!isPresent(this._childFilter)) {\n      this._childFilter = {\n        filters: filtersByField(this.filter, (this.column || {}).field),\n        logic: parentLogicOfDefault(this.filter, (this.column || {}).field)\n      };\n    }\n\n    return this._childFilter;\n  }\n\n  ngOnInit() {\n    this.subscription = this.childService.changes.subscribe(filter => this._childFilter = filter);\n    this.subscription.add(this.localization.changes.subscribe(() => this.cd.markForCheck()));\n  }\n\n  ngAfterViewChecked() {\n    if (!this.menuTabbingService.isColumnMenu || this.isLast && this.isExpanded) {\n      this.menuTabbingService.lastFocusable = this.disabled ? this.resetButton.nativeElement : this.filterButton.nativeElement;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n\n    this.menuTabbingService.lastFocusable = undefined;\n  }\n\n  get disabled() {\n    return !this.childFilter.filters.some(validFilters);\n  }\n\n  get templateContext() {\n    this._templateContext.column = this.column;\n    this._templateContext.filter = this.childFilter;\n    this._templateContext.filterService = this.childService;\n    this._templateContext[\"$implicit\"] = this.childFilter;\n    return this._templateContext;\n  }\n\n  get hasTemplate() {\n    return isPresent(this.column) && isPresent(this.column.filterMenuTemplateRef);\n  }\n\n  submit() {\n    const filter = trimFilters(this.childFilter);\n\n    if (filter.filters.length) {\n      const root = this.filter || {\n        filters: [],\n        logic: \"and\"\n      };\n      removeFilter(root, this.column.field);\n      root.filters.push(filter);\n      this.parentService.filter(root);\n    }\n\n    this.close.emit();\n    return false;\n  }\n\n  reset() {\n    const root = this.filter || {\n      filters: [],\n      logic: \"and\"\n    };\n    removeFilter(root, this.column.field);\n    this.parentService.filter(root);\n    this.close.emit();\n  }\n\n  onTab(e, buttonType) {\n    if (this.menuTabbingService.firstFocusable && (!this.menuTabbingService.isColumnMenu || this.isLast)) {\n      e.preventDefault();\n\n      if (buttonType === 'reset') {\n        // eslint-disable-next-line no-unused-expressions\n        this.disabled ? this.menuTabbingService.firstFocusable.focus() : this.filterButton.nativeElement.focus();\n      } else {\n        this.menuTabbingService.firstFocusable.focus();\n      }\n    }\n  }\n\n  get clearText() {\n    return this.localization.get(\"filterClearButton\");\n  }\n\n  get filterText() {\n    return this.localization.get(\"filterFilterButton\");\n  }\n\n}\n\nFilterMenuContainerComponent.ɵfac = function FilterMenuContainerComponent_Factory(t) {\n  return new (t || FilterMenuContainerComponent)(i0.ɵɵdirectiveInject(FilterService, 4), i0.ɵɵdirectiveInject(FilterService), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MenuTabbingService));\n};\n\nFilterMenuContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FilterMenuContainerComponent,\n  selectors: [[\"kendo-grid-filter-menu-container\"]],\n  viewQuery: function FilterMenuContainerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c18, 5);\n      i0.ɵɵviewQuery(_c19, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.resetButton = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filterButton = _t.first);\n    }\n  },\n  inputs: {\n    column: \"column\",\n    isLast: \"isLast\",\n    isExpanded: \"isExpanded\",\n    menuTabbingService: \"menuTabbingService\",\n    filter: \"filter\",\n    actionsClass: \"actionsClass\"\n  },\n  outputs: {\n    close: \"close\"\n  },\n  features: [i0.ɵɵProvidersFeature([FilterService, MenuTabbingService])],\n  decls: 12,\n  vars: 7,\n  consts: [[1, \"k-filter-menu\", \"k-group\", \"k-reset\", \"k-state-border-up\", 3, \"submit\", \"reset\"], [1, \"k-filter-menu-container\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [3, \"ngClass\"], [\"type\", \"reset\", 1, \"k-button\", \"k-button-solid-base\", \"k-button-solid\", \"k-button-md\", \"k-rounded-md\", \"k-button-rectangle\", 3, \"keydown.tab\"], [\"resetButton\", \"\"], [\"type\", \"submit\", 1, \"k-button\", \"k-button-solid-primary\", \"k-button-solid\", \"k-button-md\", \"k-rounded-md\", \"k-button-rectangle\", 3, \"disabled\", \"keydown.tab\"], [\"filterButton\", \"\"], [\"kendoFilterMenuHost\", \"\", 3, \"filterService\", \"column\", \"filter\", \"menuTabbingService\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function FilterMenuContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function FilterMenuContainerComponent_Template_form_submit_0_listener() {\n        return ctx.submit();\n      })(\"reset\", function FilterMenuContainerComponent_Template_form_reset_0_listener() {\n        return ctx.reset();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementContainerStart(2, 2);\n      i0.ɵɵtemplate(3, FilterMenuContainerComponent_ng_container_3_Template, 2, 4, \"ng-container\", 3);\n      i0.ɵɵtemplate(4, FilterMenuContainerComponent_ng_container_4_Template, 2, 1, \"ng-container\", 3);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵelementStart(6, \"button\", 5, 6);\n      i0.ɵɵlistener(\"keydown.tab\", function FilterMenuContainerComponent_Template_button_keydown_tab_6_listener($event) {\n        return ctx.onTab($event, \"reset\");\n      });\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 7, 8);\n      i0.ɵɵlistener(\"keydown.tab\", function FilterMenuContainerComponent_Template_button_keydown_tab_9_listener($event) {\n        return ctx.onTab($event, \"filter\");\n      });\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngSwitch\", ctx.hasTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", ctx.actionsClass);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.clearText);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.disabled);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.filterText);\n    }\n  },\n  directives: [i4$2.ɵNgNoValidate, i4$2.NgControlStatusGroup, i4$2.NgForm, i4.NgSwitch, i4.NgSwitchCase, i4.NgClass, FilterMenuHostDirective, i4.NgIf, i4.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterMenuContainerComponent, [{\n    type: Component,\n    args: [{\n      providers: [FilterService, MenuTabbingService],\n      selector: 'kendo-grid-filter-menu-container',\n      template: `\n        <form (submit)=\"submit()\" (reset)=\"reset()\"\n            class=\"k-filter-menu k-group k-reset k-state-border-up\">\n            <div class=\"k-filter-menu-container\">\n                <ng-container [ngSwitch]=\"hasTemplate\">\n                    <ng-container *ngSwitchCase=\"false\">\n                        <ng-container\n                            kendoFilterMenuHost\n                            [filterService]=\"childService\"\n                            [column]=\"column\"\n                            [filter]=\"childFilter\"\n                            [menuTabbingService]=\"menuTabbingService\">\n                        </ng-container>\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"true\">\n                        <ng-template\n                            *ngIf=\"column.filterMenuTemplateRef\"\n                            [ngTemplateOutlet]=\"column.filterMenuTemplateRef\"\n                            [ngTemplateOutletContext]=\"templateContext\"\n                            >\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n                <div [ngClass]=\"actionsClass\">\n                    <button\n                        #resetButton\n                        type=\"reset\"\n                        class=\"k-button k-button-solid-base k-button-solid k-button-md k-rounded-md k-button-rectangle\"\n                        (keydown.tab)=\"onTab($event, 'reset')\">{{clearText}}</button>\n                    <button #filterButton\n                        type=\"submit\"\n                        class=\"k-button k-button-solid-primary k-button-solid k-button-md k-rounded-md k-button-rectangle\"\n                        [disabled]=\"disabled\"\n                        (keydown.tab)=\"onTab($event, 'filter')\">{{filterText}}</button>\n                </div>\n            </div>\n        </form>\n    `\n    }]\n  }], function () {\n    return [{\n      type: FilterService,\n      decorators: [{\n        type: SkipSelf\n      }]\n    }, {\n      type: FilterService\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: MenuTabbingService\n    }];\n  }, {\n    close: [{\n      type: Output\n    }],\n    column: [{\n      type: Input\n    }],\n    isLast: [{\n      type: Input\n    }],\n    isExpanded: [{\n      type: Input\n    }],\n    menuTabbingService: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    actionsClass: [{\n      type: Input\n    }],\n    resetButton: [{\n      type: ViewChild,\n      args: ['resetButton', {\n        static: false\n      }]\n    }],\n    filterButton: [{\n      type: ViewChild,\n      args: ['filterButton', {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass FilterMenuComponent {\n  constructor(filterService, popupService, localization, navigationService) {\n    this.filterService = filterService;\n    this.popupService = popupService;\n    this.localization = localization;\n    this.navigationService = navigationService;\n    this.tabIndex = '-1';\n  }\n\n  get hasFilters() {\n    return filtersByField(this.filter, (this.column || {}).field).length > 0;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get filterLabel() {\n    const localizationMsg = this.localization.get('filterMenuTitle') || '';\n    const columnName = this.column.title || this.column.field;\n    return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n  }\n\n  toggle(anchor, template) {\n    this.popupRef = this.popupService.open(anchor, template, this.popupRef);\n\n    if (!this.popupRef) {\n      if (this.navigationService.tableEnabled) {\n        this.navigationService.focusCell(0, this.column.leafIndex);\n      } else {\n        this.anchor.nativeElement.focus();\n      }\n    }\n\n    return false;\n  }\n\n  close() {\n    this.popupService.destroy();\n\n    if (this.navigationService.tableEnabled) {\n      this.navigationService.focusCell(0, this.column.leafIndex);\n    } else {\n      this.anchor.nativeElement.focus();\n    }\n  }\n\n}\n\nFilterMenuComponent.ɵfac = function FilterMenuComponent_Factory(t) {\n  return new (t || FilterMenuComponent)(i0.ɵɵdirectiveInject(FilterService), i0.ɵɵdirectiveInject(SinglePopupService), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(NavigationService));\n};\n\nFilterMenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FilterMenuComponent,\n  selectors: [[\"kendo-grid-filter-menu\"]],\n  viewQuery: function FilterMenuComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c20, 7);\n      i0.ɵɵviewQuery(_c21, 7, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.anchor = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    }\n  },\n  inputs: {\n    column: \"column\",\n    filter: \"filter\",\n    tabIndex: \"tabIndex\"\n  },\n  decls: 5,\n  vars: 5,\n  consts: [[\"href\", \"#\", 3, \"ngClass\", \"tabindex\", \"click\", \"keydown.enter\"], [\"anchor\", \"\"], [1, \"k-icon\", \"k-i-filter\"], [\"template\", \"\"], [3, \"column\", \"filter\", \"close\", \"keydown.escape\", \"keydown.enter\"]],\n  template: function FilterMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r7 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"a\", 0, 1);\n      i0.ɵɵlistener(\"click\", function FilterMenuComponent_Template_a_click_0_listener() {\n        i0.ɵɵrestoreView(_r7);\n\n        const _r0 = i0.ɵɵreference(1);\n\n        const _r1 = i0.ɵɵreference(4);\n\n        return ctx.toggle(_r0, _r1);\n      })(\"keydown.enter\", function FilterMenuComponent_Template_a_keydown_enter_0_listener($event) {\n        return $event.stopImmediatePropagation();\n      });\n      i0.ɵɵelement(2, \"span\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, FilterMenuComponent_ng_template_3_Template, 1, 2, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c22, ctx.hasFilters))(\"tabindex\", ctx.tabIndex);\n      i0.ɵɵattribute(\"title\", ctx.filterLabel);\n    }\n  },\n  directives: [i4.NgClass, FilterMenuContainerComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterMenuComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-filter-menu',\n      template: `\n        <a #anchor\n            [ngClass]=\"{'k-grid-filter-menu':true, 'k-grid-header-menu':true, 'k-active': hasFilters}\"\n            [tabindex]=\"tabIndex\"\n            (click)=\"toggle(anchor, template)\"\n            (keydown.enter)=\"$event.stopImmediatePropagation()\"\n            href=\"#\"\n            [attr.title]=\"filterLabel\">\n            <span class=\"k-icon k-i-filter\"></span>\n        </a>\n        <ng-template #template>\n            <kendo-grid-filter-menu-container\n                [column]=\"column\"\n                [filter]=\"filter\"\n                (close)=\"close()\"\n                (keydown.escape)=\"close()\"\n                (keydown.enter)=\"$event.stopImmediatePropagation()\"\n                >\n            </kendo-grid-filter-menu-container>\n        </ng-template>\n    `\n    }]\n  }], function () {\n    return [{\n      type: FilterService\n    }, {\n      type: SinglePopupService\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: NavigationService\n    }];\n  }, {\n    column: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    anchor: [{\n      type: ViewChild,\n      args: ['anchor', {\n        static: true\n      }]\n    }],\n    template: [{\n      type: ViewChild,\n      args: ['template', {\n        static: true,\n        read: TemplateRef\n      }]\n    }],\n    tabIndex: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents the service that is passed to the\n * [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <span class=\"k-icon k-i-x\" (click)=\"service.close()\"\n *                  style=\"position: absolute; right: 5px; top: 5px;cursor: pointer;\"></span>\n *              <kendo-grid-columnmenu-sort [service]=\"service\">\n *              </kendo-grid-columnmenu-sort>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\n\n\nclass ColumnMenuService {\n  /**\n   * @hidden\n   */\n  constructor(menuTabbingService) {\n    /**\n     * @hidden\n     */\n    this.closeMenu = new EventEmitter();\n    this.menuTabbingService = menuTabbingService;\n  }\n  /**\n   * Closes the column menu.\n   */\n\n\n  close() {\n    this.closeMenu.emit();\n  }\n\n}\n\nColumnMenuService.ɵfac = function ColumnMenuService_Factory(t) {\n  return new (t || ColumnMenuService)(i0.ɵɵinject(MenuTabbingService));\n};\n\nColumnMenuService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ColumnMenuService,\n  factory: ColumnMenuService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnMenuService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: MenuTabbingService\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nconst ColunnMenuErrorMessages = {\n  autoSizeColumn: 'The auto size column does not work with enabled virtual columns',\n  autoSizeAllColumns: 'The auto size all columns does not work with enabled virtual columns'\n};\n/**\n * @hidden\n */\n\nclass ColumnMenuItemBase {\n  constructor() {\n    this.hostClass = true;\n  }\n\n  ngOnInit() {\n    if (isDevMode() && !this.service) {\n      throw new Error('The service input of the predefined column menu components is mandatory.');\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  close() {\n    this.service.close();\n  }\n\n}\n\nColumnMenuItemBase.ɵfac = function ColumnMenuItemBase_Factory(t) {\n  return new (t || ColumnMenuItemBase)();\n};\n\nColumnMenuItemBase.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnMenuItemBase,\n  selectors: [[\"kendo-grid-column-menu-item-base\"]],\n  hostVars: 2,\n  hostBindings: function ColumnMenuItemBase_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-columnmenu-item-wrapper\", ctx.hostClass);\n    }\n  },\n  inputs: {\n    service: \"service\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function ColumnMenuItemBase_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnMenuItemBase, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-column-menu-item-base',\n      template: ``\n    }]\n  }], null, {\n    service: [{\n      type: Input\n    }],\n    hostClass: [{\n      type: HostBinding,\n      args: ['class.k-columnmenu-item-wrapper']\n    }]\n  });\n})();\n/**\n * Represents the content template of the\n * [kendo-grid-columnmenu-item]({% slug api_grid_columnmenuitemcomponent %}) component.\n * Provides an option for specifying the content of a column item.\n * To define the content template, nest an `<ng-template>` tag with the\n * `kendoGridColumnMenuItemContentTemplate` directive inside a `<kendo-grid-columnmenu-item>`.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate>\n *              <kendo-grid-columnmenu-item text=\"Item Text\" [expanded]=\"true\">\n *                  <ng-template kendoGridColumnMenuItemContentTemplate>\n *                      Item Content\n *                  </ng-template>\n *              </kendo-grid-columnmenu-item>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\n\n\nclass ColumnMenuItemContentTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nColumnMenuItemContentTemplateDirective.ɵfac = function ColumnMenuItemContentTemplateDirective_Factory(t) {\n  return new (t || ColumnMenuItemContentTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nColumnMenuItemContentTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ColumnMenuItemContentTemplateDirective,\n  selectors: [[\"\", \"kendoGridColumnMenuItemContentTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnMenuItemContentTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridColumnMenuItemContentTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents an item that can be placed inside a\n * [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\" [resizable]=\"true\" #grid>\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\" let-column=\"column\">\n *              <kendo-grid-columnmenu-item icon=\"arrows-resizing\" text=\"Fit column\"\n *                  (itemClick)=\"grid.autoFitColumn(column); service.close()\">\n *              </kendo-grid-columnmenu-item>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\n\n\nclass ColumnMenuItemComponent {\n  constructor() {\n    /**\n     * Fires when the item is clicked.\n     */\n    this.itemClick = new EventEmitter();\n    /**\n     * Fires when the content is expanded.\n     */\n\n    this.expand = new EventEmitter();\n    /**\n     * Fires when the content is collapsed.\n     */\n\n    this.collapse = new EventEmitter();\n    this.contentState = 'collapsed';\n  }\n\n  get iconClass() {\n    return `k-i-${this.icon}`;\n  }\n\n  ngOnChanges(changes) {\n    if (changes.expanded) {\n      this.updateContentState();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  onClick(e) {\n    this.itemClick.emit(e);\n\n    if (this.contentTemplate) {\n      this.expanded = !this.expanded;\n      this.updateContentState();\n\n      if (this.expanded) {\n        this.expand.emit();\n      } else {\n        this.collapse.emit();\n      }\n    }\n  }\n\n  updateContentState() {\n    this.contentState = this.expanded ? 'expanded' : 'collapsed';\n  }\n\n}\n\nColumnMenuItemComponent.ɵfac = function ColumnMenuItemComponent_Factory(t) {\n  return new (t || ColumnMenuItemComponent)();\n};\n\nColumnMenuItemComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnMenuItemComponent,\n  selectors: [[\"kendo-grid-columnmenu-item\"]],\n  contentQueries: function ColumnMenuItemComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ColumnMenuItemContentTemplateDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n    }\n  },\n  inputs: {\n    icon: \"icon\",\n    text: \"text\",\n    selected: \"selected\",\n    disabled: \"disabled\",\n    expanded: \"expanded\"\n  },\n  outputs: {\n    itemClick: \"itemClick\",\n    expand: \"expand\",\n    collapse: \"collapse\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 4,\n  vars: 8,\n  consts: [[\"role\", \"button\", 1, \"k-columnmenu-item\", 3, \"click\", \"keydown.enter\"], [\"class\", \"k-icon\", 3, \"ngClass\", 4, \"ngIf\"], [\"class\", \"k-columnmenu-item-content\", 3, \"overflow\", 4, \"ngIf\"], [1, \"k-icon\", 3, \"ngClass\"], [1, \"k-columnmenu-item-content\"], [3, \"ngTemplateOutlet\"]],\n  template: function ColumnMenuItemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function ColumnMenuItemComponent_Template_div_click_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"keydown.enter\", function ColumnMenuItemComponent_Template_div_keydown_enter_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵtemplate(1, ColumnMenuItemComponent_span_1_Template, 1, 1, \"span\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, ColumnMenuItemComponent_div_3_Template, 3, 4, \"div\", 2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-selected\", ctx.selected)(\"k-disabled\", ctx.disabled);\n      i0.ɵɵattribute(\"aria-expanded\", ctx.expanded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.icon);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.text, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.contentTemplate);\n    }\n  },\n  directives: [i4.NgIf, i4.NgClass, i4.NgTemplateOutlet],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('state', [state('collapsed', style({\n      display: 'none'\n    })), state('expanded', style({\n      display: 'block'\n    })), transition('collapsed => expanded', [style({\n      height: '0px',\n      display: 'block'\n    }), animate('100ms ease-in', style({\n      height: '*'\n    }))]), transition('expanded => collapsed', [style({\n      height: '*'\n    }), animate('100ms ease-in', style({\n      height: '0px'\n    }))])])]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnMenuItemComponent, [{\n    type: Component,\n    args: [{\n      animations: [trigger('state', [state('collapsed', style({\n        display: 'none'\n      })), state('expanded', style({\n        display: 'block'\n      })), transition('collapsed => expanded', [style({\n        height: '0px',\n        display: 'block'\n      }), animate('100ms ease-in', style({\n        height: '*'\n      }))]), transition('expanded => collapsed', [style({\n        height: '*'\n      }), animate('100ms ease-in', style({\n        height: '0px'\n      }))])])],\n      selector: 'kendo-grid-columnmenu-item',\n      template: `\n        <div\n            class=\"k-columnmenu-item\"\n            (click)=\"onClick($event)\"\n            (keydown.enter)=\"onClick($event)\"\n            [class.k-selected]=\"selected\"\n            [class.k-disabled]=\"disabled\"\n            role=\"button\"\n            [attr.aria-expanded]=\"expanded\">\n           <span *ngIf=\"icon\" class=\"k-icon\" [ngClass]=\"iconClass\">\n           </span>\n           {{ text }}\n        </div>\n        <div *ngIf=\"contentTemplate\" [@state]=\"contentState\" [style.overflow]=\"'hidden'\" class=\"k-columnmenu-item-content\">\n            <ng-container [ngTemplateOutlet]=\"contentTemplate.templateRef\">\n            </ng-container>\n        <div>\n    `\n    }]\n  }], null, {\n    itemClick: [{\n      type: Output\n    }],\n    expand: [{\n      type: Output\n    }],\n    collapse: [{\n      type: Output\n    }],\n    icon: [{\n      type: Input\n    }],\n    text: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    expanded: [{\n      type: Input\n    }],\n    contentTemplate: [{\n      type: ContentChild,\n      args: [ColumnMenuItemContentTemplateDirective, {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * Represents a column-menu item that can be placed inside a\n * [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n * Allows the user to lock or unlock the columns.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the service input of the `kendo-grid-columnmenu-lock` component.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-lock [service]=\"service\">\n *              </kendo-grid-columnmenu-lock>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\" [width]=\"100\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [width]=\"100\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\n\n\nclass ColumnMenuLockComponent extends ColumnMenuItemBase {\n  constructor(localization, columnInfoService, changeDetector) {\n    super();\n    this.localization = localization;\n    this.columnInfoService = columnInfoService;\n    this.changeDetector = changeDetector;\n  }\n\n  get text() {\n    return this.localization.get(this.locked ? 'unlock' : 'lock');\n  }\n\n  get icon() {\n    return this.locked ? 'unlock' : 'lock';\n  }\n\n  get disabled() {\n    return !this.locked && this.columnInfoService.unlockedRootCount < 2;\n  }\n  /**\n   * @hidden\n   */\n\n\n  toggleColumn() {\n    this.toggleHierarchy(!this.locked);\n    this.close();\n    this.changeDetector.markForCheck();\n  }\n\n  toggleHierarchy(locked) {\n    let root = this.service.column;\n\n    while (root.parent) {\n      root = root.parent;\n    }\n\n    const columns = [root];\n    const allChanged = [];\n\n    while (columns.length) {\n      const column = columns.shift();\n      column.locked = locked;\n      allChanged.push(column);\n\n      if (column.hasChildren) {\n        columns.push(...column.childrenArray);\n      }\n    }\n\n    this.columnInfoService.changeLocked(allChanged);\n  }\n\n  get locked() {\n    return this.service.column.locked;\n  }\n\n}\n\nColumnMenuLockComponent.ɵfac = function ColumnMenuLockComponent_Factory(t) {\n  return new (t || ColumnMenuLockComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(ColumnInfoService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nColumnMenuLockComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnMenuLockComponent,\n  selectors: [[\"kendo-grid-columnmenu-lock\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 3,\n  consts: [[3, \"text\", \"icon\", \"disabled\", \"itemClick\"]],\n  template: function ColumnMenuLockComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"kendo-grid-columnmenu-item\", 0);\n      i0.ɵɵlistener(\"itemClick\", function ColumnMenuLockComponent_Template_kendo_grid_columnmenu_item_itemClick_0_listener() {\n        return ctx.toggleColumn();\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"text\", ctx.text)(\"icon\", ctx.icon)(\"disabled\", ctx.disabled);\n    }\n  },\n  directives: [ColumnMenuItemComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnMenuLockComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-columnmenu-lock',\n      template: `\n       <kendo-grid-columnmenu-item\n            [text]=\"text\"\n            [icon]=\"icon\"\n            (itemClick)=\"toggleColumn()\"\n            [disabled]=\"disabled\">\n       </kendo-grid-columnmenu-item>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: ColumnInfoService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n/**\n * Represents a column-menu item that can be placed inside a\n * [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n * Allows the user to stick or unstick the columns.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the service input of the `kendo-grid-columnmenu-stick` component.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-stick [service]=\"service\">\n *              </kendo-grid-columnmenu-stick>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\" [width]=\"100\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [width]=\"100\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\n\n\nclass ColumnMenuStickComponent extends ColumnMenuItemBase {\n  constructor(localization, columnInfoService, changeDetector) {\n    super();\n    this.localization = localization;\n    this.columnInfoService = columnInfoService;\n    this.changeDetector = changeDetector;\n  }\n\n  get text() {\n    return this.localization.get(this.sticky ? 'unstick' : 'stick');\n  }\n\n  get icon() {\n    return this.sticky ? 'unstick' : 'stick';\n  }\n\n  get disabled() {\n    return !this.sticky && this.columnInfoService.unlockedRootCount < 2;\n  }\n  /**\n   * @hidden\n   */\n\n\n  toggleColumn() {\n    this.toggleHierarchy(!this.sticky);\n    this.close();\n    this.changeDetector.markForCheck();\n  }\n\n  toggleHierarchy(sticky) {\n    let root = this.service.column;\n\n    while (root.parent) {\n      root = root.parent;\n    }\n\n    const columns = [root];\n    const allChanged = [];\n\n    while (columns.length) {\n      const column = columns.shift();\n      column.sticky = sticky;\n      allChanged.push(column);\n\n      if (column.hasChildren) {\n        columns.push(...column.childrenArray);\n      }\n    }\n\n    this.columnInfoService.changeStuck(allChanged);\n  }\n\n  get sticky() {\n    return this.service.column.sticky;\n  }\n\n}\n\nColumnMenuStickComponent.ɵfac = function ColumnMenuStickComponent_Factory(t) {\n  return new (t || ColumnMenuStickComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(ColumnInfoService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nColumnMenuStickComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnMenuStickComponent,\n  selectors: [[\"kendo-grid-columnmenu-stick\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 3,\n  consts: [[3, \"text\", \"icon\", \"disabled\", \"itemClick\"]],\n  template: function ColumnMenuStickComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"kendo-grid-columnmenu-item\", 0);\n      i0.ɵɵlistener(\"itemClick\", function ColumnMenuStickComponent_Template_kendo_grid_columnmenu_item_itemClick_0_listener() {\n        return ctx.toggleColumn();\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"text\", ctx.text)(\"icon\", ctx.icon)(\"disabled\", ctx.disabled);\n    }\n  },\n  directives: [ColumnMenuItemComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnMenuStickComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-columnmenu-stick',\n      template: `\n       <kendo-grid-columnmenu-item [text]=\"text\" [icon]=\"icon\" (itemClick)=\"toggleColumn()\" [disabled]=\"disabled\">\n       </kendo-grid-columnmenu-item>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: ColumnInfoService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n/**\n * Represents the component for editing column filters in the Grid that can be placed\n * inside a [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the service input of the `kendo-grid-columnmenu-filter` component.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [kendoGridBinding]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-filter [service]=\"service\">\n *              </kendo-grid-columnmenu-filter>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\n\n\nclass ColumnMenuPositionComponent extends ColumnMenuItemBase {\n  constructor(localization, hostElement) {\n    super();\n    this.localization = localization;\n    this.hostElement = hostElement;\n    /**\n     * Fires when the content is expanded.\n     */\n\n    this.expand = new EventEmitter();\n    /**\n     * Fires when the content is collapsed.\n     */\n\n    this.collapse = new EventEmitter();\n    /**\n     * Specifies if the content is expanded.\n     */\n\n    this.expanded = false;\n    /**\n     * @hidden\n     */\n\n    this.actionsClass = 'k-columnmenu-actions';\n    this._isLast = false;\n  }\n  /**\n   * @hidden\n   */\n\n\n  set isLast(value) {\n    this.service.menuTabbingService.lastFocusable = this.getLastFocusableItem();\n    this._isLast = value;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get isLast() {\n    return this._isLast;\n  }\n  /**\n   * @hidden\n   */\n\n\n  onTab(e, isLastItem) {\n    if (this.isLast && isLastItem) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n\n      if (this.service) {\n        this.service.menuTabbingService.firstFocusable.focus();\n      }\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  onCollapse() {\n    this.expanded = false;\n\n    if (this.isLast) {\n      this.service.menuTabbingService.lastFocusable = this.getLastFocusableItem();\n    }\n\n    this.collapse.emit();\n  }\n  /**\n   * @hidden\n   */\n\n\n  onExpand() {\n    this.expanded = true;\n\n    if (this.isLast) {\n      this.service.menuTabbingService.lastFocusable = this.getLastFocusableItem();\n    }\n\n    this.expand.emit();\n  }\n\n  getLastFocusableItem() {\n    const menuItems = this.hostElement.nativeElement.querySelectorAll('.k-columnmenu-item');\n    const lastFocusableIndex = this.expanded ? menuItems.length - 1 : 0;\n    return menuItems[lastFocusableIndex];\n  }\n\n}\n\nColumnMenuPositionComponent.ɵfac = function ColumnMenuPositionComponent_Factory(t) {\n  return new (t || ColumnMenuPositionComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nColumnMenuPositionComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnMenuPositionComponent,\n  selectors: [[\"kendo-grid-columnmenu-position\"]],\n  inputs: {\n    expanded: \"expanded\",\n    showLock: \"showLock\",\n    showStick: \"showStick\",\n    isLast: \"isLast\"\n  },\n  outputs: {\n    expand: \"expand\",\n    collapse: \"collapse\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"icon\", \"set-column-position\", 3, \"text\", \"expanded\", \"keydown.tab\", \"collapse\", \"expand\"], [\"kendoGridColumnMenuItemContentTemplate\", \"\"], [3, \"service\", \"keydown.tab\", 4, \"ngIf\"], [3, \"service\", \"keydown.tab\"]],\n  template: function ColumnMenuPositionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"kendo-grid-columnmenu-item\", 0);\n      i0.ɵɵlistener(\"keydown.tab\", function ColumnMenuPositionComponent_Template_kendo_grid_columnmenu_item_keydown_tab_0_listener($event) {\n        return ctx.onTab($event, !ctx.expanded);\n      })(\"collapse\", function ColumnMenuPositionComponent_Template_kendo_grid_columnmenu_item_collapse_0_listener() {\n        return ctx.onCollapse();\n      })(\"expand\", function ColumnMenuPositionComponent_Template_kendo_grid_columnmenu_item_expand_0_listener() {\n        return ctx.onExpand();\n      });\n      i0.ɵɵtemplate(1, ColumnMenuPositionComponent_ng_template_1_Template, 2, 2, \"ng-template\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"text\", ctx.localization.get(\"setColumnPosition\"))(\"expanded\", ctx.expanded);\n    }\n  },\n  directives: [ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, i4.NgIf, ColumnMenuLockComponent, ColumnMenuStickComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnMenuPositionComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-columnmenu-position',\n      template: `\n        <kendo-grid-columnmenu-item\n            [text]=\"localization.get('setColumnPosition')\"\n            icon=\"set-column-position\"\n            [expanded]=\"expanded\"\n            (keydown.tab)=\"onTab($event, !expanded)\"\n            (collapse)=\"onCollapse()\"\n            (expand)=\"onExpand()\">\n            <ng-template kendoGridColumnMenuItemContentTemplate>\n                <kendo-grid-columnmenu-lock\n                    *ngIf=\"showLock\"\n                    (keydown.tab)=\"onTab($event, !showStick)\"\n                    [service]=\"service\">\n                </kendo-grid-columnmenu-lock>\n                <kendo-grid-columnmenu-stick\n                    *ngIf=\"showStick\"\n                    (keydown.tab)=\"onTab($event, true)\"\n                    [service]=\"service\">\n                </kendo-grid-columnmenu-stick>\n            </ng-template>\n        </kendo-grid-columnmenu-item>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    expand: [{\n      type: Output\n    }],\n    collapse: [{\n      type: Output\n    }],\n    expanded: [{\n      type: Input\n    }],\n    showLock: [{\n      type: Input\n    }],\n    showStick: [{\n      type: Input\n    }],\n    isLast: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass ColumnListComponent {\n  constructor(element, ngZone, renderer) {\n    this.element = element;\n    this.ngZone = ngZone;\n    this.renderer = renderer;\n    this.reset = new EventEmitter();\n    this.apply = new EventEmitter();\n    this.columnChange = new EventEmitter();\n    this.autoSync = true;\n    this.allowHideAll = false;\n    this.actionsClass = 'k-action-buttons';\n    this.unlockedCount = 0;\n  }\n\n  get className() {\n    return true;\n  }\n\n  set columns(value) {\n    this._columns = value.filter(column => column.includeInChooser !== false);\n    this.allColumns = value;\n    this.updateColumnState();\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  isDisabled(column) {\n    return !(this.allowHideAll || this.hasFiltered || column.hidden || this.columns.find(current => current !== column && !current.hidden)) || this.hasVisibleLocked && !this.hasUnlockedFiltered && this.unlockedCount === 1 && !column.locked && !column.hidden;\n  }\n\n  ngOnInit() {\n    if (!this.element) {\n      return;\n    }\n\n    this.ngZone.runOutsideAngular(() => {\n      this.domSubscriptions = this.renderer.listen(this.element.nativeElement, 'click', e => {\n        if (hasClasses(e.target, 'k-checkbox')) {\n          if (this.autoSync) {\n            const index = parseInt(e.target.getAttribute('data-index'), 10);\n            const column = this.columns[index];\n            const hidden = !e.target.checked;\n\n            if (Boolean(column.hidden) !== hidden) {\n              this.ngZone.run(() => {\n                column.hidden = hidden;\n                this.columnChange.emit([column]);\n              });\n            }\n          } else {\n            this.updateDisabled();\n          }\n        }\n      });\n    });\n  }\n\n  ngOnChanges(changes) {\n    if (!this.service) {\n      return;\n    }\n\n    if (changes.isLast && this.isLast) {\n      this.service.menuTabbingService.lastFocusable = this.applyButton.nativeElement;\n    }\n\n    if (changes.isExpanded && this.isExpanded && this.isLast && this.applyButton) {\n      this.service.menuTabbingService.lastFocusable = this.applyButton.nativeElement;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.domSubscriptions) {\n      this.domSubscriptions();\n    }\n  }\n\n  cancelChanges() {\n    this.forEachCheckBox((element, index) => {\n      element.checked = !this.columns[index].hidden;\n    });\n    this.updateDisabled();\n    this.reset.emit();\n  }\n\n  applyChanges() {\n    const changed = [];\n    this.forEachCheckBox((element, index) => {\n      const column = this.columns[index];\n      const hidden = !element.checked;\n\n      if (Boolean(column.hidden) !== hidden) {\n        column.hidden = hidden;\n        changed.push(column);\n      }\n    });\n    this.updateDisabled();\n    this.apply.emit(changed);\n  }\n\n  onTab(e) {\n    if (this.isLast) {\n      e.preventDefault();\n\n      if (this.service) {\n        this.service.menuTabbingService.firstFocusable.focus();\n      }\n    }\n  }\n\n  forEachCheckBox(callback) {\n    const checkboxes = this.element.nativeElement.getElementsByClassName('k-checkbox');\n    const length = checkboxes.length;\n\n    for (let idx = 0; idx < length; idx++) {\n      callback(checkboxes[idx], idx);\n    }\n  }\n\n  updateDisabled() {\n    if (this.allowHideAll && !this.hasLocked) {\n      return;\n    }\n\n    const checkedItems = [];\n    this.forEachCheckBox((checkbox, index) => {\n      if (checkbox.checked) {\n        checkedItems.push({\n          checkbox,\n          index\n        });\n      }\n\n      checkbox.disabled = false;\n    });\n\n    if (!this.allowHideAll && checkedItems.length === 1 && !this.hasFiltered) {\n      checkedItems[0].checkbox.disabled = true;\n    } else if (this.hasLocked && !this.hasUnlockedFiltered) {\n      const columns = this.columns;\n      const checkedUnlocked = checkedItems.filter(item => !columns[item.index].locked);\n\n      if (checkedUnlocked.length === 1) {\n        checkedUnlocked[0].checkbox.disabled = true;\n      }\n    }\n  }\n\n  updateColumnState() {\n    this.hasLocked = this.allColumns.filter(column => column.locked && (!column.hidden || column.includeInChooser !== false)).length > 0;\n    this.hasVisibleLocked = this.allColumns.filter(column => column.locked && !column.hidden).length > 0;\n    this.unlockedCount = this.columns.filter(column => !column.locked && !column.hidden).length;\n    const filteredColumns = this.allColumns.filter(column => column.includeInChooser === false && !column.hidden);\n\n    if (filteredColumns.length) {\n      this.hasFiltered = filteredColumns.length > 0;\n      this.hasUnlockedFiltered = filteredColumns.filter(column => !column.locked).length > 0;\n    } else {\n      this.hasFiltered = false;\n      this.hasUnlockedFiltered = false;\n    }\n  }\n\n}\n\nColumnListComponent.ɵfac = function ColumnListComponent_Factory(t) {\n  return new (t || ColumnListComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nColumnListComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnListComponent,\n  selectors: [[\"kendo-grid-columnlist\"]],\n  viewQuery: function ColumnListComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c23, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.applyButton = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function ColumnListComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-column-list-wrapper\", ctx.className);\n    }\n  },\n  inputs: {\n    columns: \"columns\",\n    autoSync: \"autoSync\",\n    allowHideAll: \"allowHideAll\",\n    applyText: \"applyText\",\n    resetText: \"resetText\",\n    actionsClass: \"actionsClass\",\n    isLast: \"isLast\",\n    isExpanded: \"isExpanded\",\n    service: \"service\"\n  },\n  outputs: {\n    reset: \"reset\",\n    apply: \"apply\",\n    columnChange: \"columnChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 2,\n  consts: [[1, \"k-column-list\"], [\"class\", \"k-column-list-item\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", 4, \"ngIf\"], [1, \"k-column-list-item\"], [\"type\", \"checkbox\", 1, \"k-checkbox\", \"k-checkbox-md\", \"k-rounded-md\", 3, \"checked\", \"disabled\"], [1, \"k-checkbox-label\"], [3, \"ngClass\"], [\"type\", \"button\", 1, \"k-button\", \"k-button-solid-base\", \"k-button-solid\", \"k-button-md\", \"k-rounded-md\", \"k-button-rectangle\", 3, \"click\"], [\"type\", \"button\", 1, \"k-button\", \"k-button-solid-primary\", \"k-button-solid\", \"k-button-md\", \"k-rounded-md\", \"k-button-rectangle\", 3, \"keydown.tab\", \"click\"], [\"applyButton\", \"\"]],\n  template: function ColumnListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ColumnListComponent_label_1_Template, 4, 4, \"label\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ColumnListComponent_div_2_Template, 6, 3, \"div\", 2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.columns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.autoSync);\n    }\n  },\n  directives: [i4.NgForOf, i4.NgIf, i4.NgClass],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnListComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-columnlist',\n      template: `\n        <div class=\"k-column-list\">\n            <label *ngFor=\"let column of columns; let index = index;\" class='k-column-list-item'>\n                <input class=\"k-checkbox k-checkbox-md k-rounded-md\" type=\"checkbox\" [attr.data-index]=\"index\" [checked]=\"!column.hidden\" [disabled]=\"isDisabled(column)\" /><span class=\"k-checkbox-label\">{{ column.displayTitle }}</span>\n            </label>\n        </div>\n        <div [ngClass]=\"actionsClass\" *ngIf=\"!autoSync\">\n            <button type=\"button\" class=\"k-button k-button-solid-base k-button-solid k-button-md k-rounded-md k-button-rectangle\" (click)=\"cancelChanges()\">{{ resetText }}</button>\n            <button #applyButton type=\"button\" (keydown.tab)=\"onTab($event)\" class=\"k-button k-button-solid-primary k-button-solid k-button-md k-rounded-md k-button-rectangle\" (click)=\"applyChanges()\">{{ applyText }}</button>\n        </div>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    className: [{\n      type: HostBinding,\n      args: [\"class.k-column-list-wrapper\"]\n    }],\n    reset: [{\n      type: Output\n    }],\n    apply: [{\n      type: Output\n    }],\n    columnChange: [{\n      type: Output\n    }],\n    columns: [{\n      type: Input\n    }],\n    autoSync: [{\n      type: Input\n    }],\n    allowHideAll: [{\n      type: Input\n    }],\n    applyText: [{\n      type: Input\n    }],\n    resetText: [{\n      type: Input\n    }],\n    actionsClass: [{\n      type: Input\n    }],\n    isLast: [{\n      type: Input\n    }],\n    isExpanded: [{\n      type: Input\n    }],\n    service: [{\n      type: Input\n    }],\n    applyButton: [{\n      type: ViewChild,\n      args: ['applyButton', {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * Represents the component for selecting columns in the Grid that can be placed\n * inside a [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the service input of the `kendo-grid-columnmenu-chooser` component.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-chooser [service]=\"service\">\n *              </kendo-grid-columnmenu-chooser>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [hidden]=\"true\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\n\n\nclass ColumnMenuChooserComponent extends ColumnMenuItemBase {\n  constructor(localization, columnInfoService, changeDetector, hostElement) {\n    super();\n    this.localization = localization;\n    this.columnInfoService = columnInfoService;\n    this.changeDetector = changeDetector;\n    this.hostElement = hostElement;\n    /**\n     * Fires when the content is expanded.\n     */\n\n    this.expand = new EventEmitter();\n    /**\n     * Fires when the content is collapsed.\n     */\n\n    this.collapse = new EventEmitter();\n    /**\n     * Specifies if the content is expanded.\n     */\n\n    this.expanded = false;\n    /**\n     * @hidden\n     */\n\n    this.isLast = false;\n    /**\n     * @hidden\n     */\n\n    this.actionsClass = 'k-columnmenu-actions';\n  }\n\n  get columns() {\n    return this.columnInfoService.leafNamedColumns;\n  }\n  /**\n   * @hidden\n   */\n\n\n  onApply(changed) {\n    this.close();\n\n    if (changed.length) {\n      this.changeDetector.markForCheck();\n      this.columnInfoService.changeVisibility(changed);\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  onCollapse() {\n    this.expanded = false;\n\n    if (this.isLast) {\n      this.service.menuTabbingService.lastFocusable = this.hostElement.nativeElement.querySelector('.k-columnmenu-item');\n    }\n\n    this.collapse.emit();\n  }\n  /**\n   * @hidden\n   */\n\n\n  onExpand() {\n    this.expanded = true;\n    this.expand.emit();\n  }\n\n}\n\nColumnMenuChooserComponent.ɵfac = function ColumnMenuChooserComponent_Factory(t) {\n  return new (t || ColumnMenuChooserComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(ColumnInfoService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nColumnMenuChooserComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnMenuChooserComponent,\n  selectors: [[\"kendo-grid-columnmenu-chooser\"]],\n  inputs: {\n    expanded: \"expanded\",\n    isLast: \"isLast\"\n  },\n  outputs: {\n    expand: \"expand\",\n    collapse: \"collapse\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"icon\", \"columns\", 3, \"text\", \"expanded\", \"collapse\", \"expand\"], [\"kendoGridColumnMenuItemContentTemplate\", \"\"], [3, \"applyText\", \"resetText\", \"columns\", \"autoSync\", \"allowHideAll\", \"actionsClass\", \"isLast\", \"isExpanded\", \"service\", \"apply\"]],\n  template: function ColumnMenuChooserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"kendo-grid-columnmenu-item\", 0);\n      i0.ɵɵlistener(\"collapse\", function ColumnMenuChooserComponent_Template_kendo_grid_columnmenu_item_collapse_0_listener() {\n        return ctx.onCollapse();\n      })(\"expand\", function ColumnMenuChooserComponent_Template_kendo_grid_columnmenu_item_expand_0_listener() {\n        return ctx.onExpand();\n      });\n      i0.ɵɵtemplate(1, ColumnMenuChooserComponent_ng_template_1_Template, 1, 9, \"ng-template\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"text\", ctx.localization.get(\"columns\"))(\"expanded\", ctx.expanded);\n    }\n  },\n  directives: [ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, ColumnListComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnMenuChooserComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-columnmenu-chooser',\n      template: `\n        <kendo-grid-columnmenu-item\n            [text]=\"localization.get('columns')\"\n            icon=\"columns\"\n            [expanded]=\"expanded\"\n            (collapse)=\"onCollapse()\"\n            (expand)=\"onExpand()\">\n            <ng-template kendoGridColumnMenuItemContentTemplate>\n                <kendo-grid-columnlist\n                    [applyText]=\"localization.get('columnsApply')\"\n                    [resetText]=\"localization.get('columnsReset')\"\n                    [columns]=\"columns\"\n                    [autoSync]=\"false\"\n                    [allowHideAll]=\"false\"\n                    [actionsClass]=\"actionsClass\"\n                    [isLast]=\"isLast\"\n                    [isExpanded]=\"expanded\"\n                    [service]=\"service\"\n                    (apply)=\"onApply($event)\">\n                </kendo-grid-columnlist>\n            </ng-template>\n        </kendo-grid-columnmenu-item>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: ColumnInfoService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    expand: [{\n      type: Output\n    }],\n    collapse: [{\n      type: Output\n    }],\n    expanded: [{\n      type: Input\n    }],\n    isLast: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents the component for editing column filters in the Grid that can be placed\n * inside a [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the service input of the `kendo-grid-columnmenu-filter` component.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [kendoGridBinding]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-filter [service]=\"service\">\n *              </kendo-grid-columnmenu-filter>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\n\n\nclass ColumnMenuFilterComponent extends ColumnMenuItemBase {\n  constructor(localization, hostElement) {\n    super();\n    this.localization = localization;\n    this.hostElement = hostElement;\n    /**\n     * Fires when the content is expanded.\n     */\n\n    this.expand = new EventEmitter();\n    /**\n     * Fires when the content is collapsed.\n     */\n\n    this.collapse = new EventEmitter();\n    /**\n     * Specifies if the content is expanded.\n     */\n\n    this.expanded = false;\n    /**\n     * @hidden\n     */\n\n    this.isLast = false;\n    /**\n     * @hidden\n     */\n\n    this.actionsClass = 'k-columnmenu-actions';\n  }\n  /**\n   * @hidden\n   */\n\n\n  onCollapse() {\n    this.expanded = false;\n\n    if (this.isLast) {\n      this.service.menuTabbingService.lastFocusable = this.hostElement.nativeElement.querySelector('.k-columnmenu-item');\n    }\n\n    this.collapse.emit();\n  }\n  /**\n   * @hidden\n   */\n\n\n  onExpand() {\n    this.expanded = true;\n    this.expand.emit();\n  }\n\n}\n\nColumnMenuFilterComponent.ɵfac = function ColumnMenuFilterComponent_Factory(t) {\n  return new (t || ColumnMenuFilterComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nColumnMenuFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnMenuFilterComponent,\n  selectors: [[\"kendo-grid-columnmenu-filter\"]],\n  inputs: {\n    expanded: \"expanded\",\n    isLast: \"isLast\"\n  },\n  outputs: {\n    expand: \"expand\",\n    collapse: \"collapse\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"icon\", \"filter\", 3, \"text\", \"expanded\", \"collapse\", \"expand\"], [\"kendoGridColumnMenuItemContentTemplate\", \"\"], [3, \"column\", \"menuTabbingService\", \"filter\", \"actionsClass\", \"isLast\", \"isExpanded\", \"keydown.shift.tab\", \"close\"]],\n  template: function ColumnMenuFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"kendo-grid-columnmenu-item\", 0);\n      i0.ɵɵlistener(\"collapse\", function ColumnMenuFilterComponent_Template_kendo_grid_columnmenu_item_collapse_0_listener() {\n        return ctx.onCollapse();\n      })(\"expand\", function ColumnMenuFilterComponent_Template_kendo_grid_columnmenu_item_expand_0_listener() {\n        return ctx.onExpand();\n      });\n      i0.ɵɵtemplate(1, ColumnMenuFilterComponent_ng_template_1_Template, 1, 6, \"ng-template\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"text\", ctx.localization.get(\"filter\"))(\"expanded\", ctx.expanded);\n    }\n  },\n  directives: [ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, FilterMenuContainerComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnMenuFilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-columnmenu-filter',\n      template: `\n        <kendo-grid-columnmenu-item\n            [text]=\"localization.get('filter')\"\n            icon=\"filter\"\n            [expanded]=\"expanded\"\n            (collapse)=\"onCollapse()\"\n            (expand)=\"onExpand()\">\n            <ng-template kendoGridColumnMenuItemContentTemplate>\n                <kendo-grid-filter-menu-container\n                    [column]=\"service.column\"\n                    [menuTabbingService]=\"service.menuTabbingService\"\n                    [filter]=\"service.filter\"\n                    [actionsClass]=\"actionsClass\"\n                    [isLast]=\"isLast\"\n                    [isExpanded]=\"expanded\"\n                    (keydown.shift.tab)=\"$event.stopImmediatePropagation()\"\n                    (close)=\"close()\">\n                </kendo-grid-filter-menu-container>\n            </ng-template>\n        </kendo-grid-columnmenu-item>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    expand: [{\n      type: Output\n    }],\n    collapse: [{\n      type: Output\n    }],\n    expanded: [{\n      type: Input\n    }],\n    isLast: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass ColumnMenuItemDirective {\n  constructor(hostElement, renderer, ngZone) {\n    this.hostElement = hostElement;\n    this.renderer = renderer;\n    this.ngZone = ngZone;\n    this._isFirst = false;\n    this._isLast = false;\n    this.subs = new Subscription();\n\n    this.onTab = e => {\n      if (e.keyCode !== Keys.Tab) {\n        return;\n      }\n\n      if (this.isFirst && e.shiftKey && e.target === this.columnMenuItems[0]) {\n        e.preventDefault();\n        this.menuItemComponent.service.menuTabbingService.lastFocusable.focus();\n      }\n\n      if (this.isLast && !e.shiftKey) {\n        const lastColumnMenuItem = this.getLastColumnMenuItem();\n        const isExpanded = this.menuItemComponent.expanded;\n\n        if (lastColumnMenuItem === e.target && !isExpanded) {\n          e.preventDefault();\n          this.menuItemComponent.service.menuTabbingService.firstFocusable.focus();\n        }\n      }\n    };\n  }\n\n  set isFirst(value) {\n    if (value) {\n      const focusableElement = this.columnMenuItems[0];\n      this.menuItemComponent.service.menuTabbingService.firstFocusable = focusableElement;\n      this.ngZone.runOutsideAngular(() => {\n        const firstItemKeydownSub = this.renderer.listen(focusableElement, 'keydown', this.onTab);\n        this.subs.add(firstItemKeydownSub);\n      });\n    }\n\n    this._isFirst = value;\n  }\n\n  get isFirst() {\n    return this._isFirst;\n  }\n\n  set isLast(value) {\n    if (!this.columnMenuItems) {\n      return;\n    }\n\n    if (value) {\n      const lastFocusableElement = this.getLastColumnMenuItem();\n      this.menuItemComponent.service.menuTabbingService.lastFocusable = lastFocusableElement;\n      this.ngZone.runOutsideAngular(() => {\n        const lastItemKeydownSub = this.renderer.listen(lastFocusableElement, 'keydown', this.onTab);\n        this.subs.add(lastItemKeydownSub);\n      });\n\n      if (this.isExpandableItem()) {\n        this.menuItemComponent.isLast = true;\n      }\n    }\n\n    this._isLast = value;\n  }\n\n  get isLast() {\n    return this._isLast;\n  }\n\n  ngAfterViewInit() {\n    this.columnMenuItems = this.hostElement.nativeElement.querySelectorAll('.k-columnmenu-item');\n    [].slice.apply(this.columnMenuItems).forEach(el => this.renderer.setAttribute(el, 'tabindex', '0'));\n\n    if (this.menuItemComponent instanceof ColumnMenuFilterComponent) {\n      this.menuItemComponent.service.menuTabbingService.isColumnMenu = true;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subs) {\n      this.subs.unsubscribe();\n    }\n  }\n\n  getLastColumnMenuItem() {\n    return this.columnMenuItems.length === 1 ? this.columnMenuItems[0] : this.columnMenuItems[1];\n  }\n\n  isExpandableItem() {\n    return this.menuItemComponent instanceof ColumnMenuFilterComponent || this.menuItemComponent instanceof ColumnMenuChooserComponent || this.menuItemComponent instanceof ColumnMenuPositionComponent;\n  }\n\n}\n\nColumnMenuItemDirective.ɵfac = function ColumnMenuItemDirective_Factory(t) {\n  return new (t || ColumnMenuItemDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nColumnMenuItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ColumnMenuItemDirective,\n  selectors: [[\"\", \"kendoGridColumnMenuItem\", \"\"]],\n  inputs: {\n    menuItemComponent: [\"kendoGridColumnMenuItem\", \"menuItemComponent\"]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnMenuItemDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridColumnMenuItem]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    menuItemComponent: [{\n      type: Input,\n      args: ['kendoGridColumnMenuItem']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass ColumnMenuContainerComponent {\n  constructor(service, ngZone) {\n    this.service = service;\n    this.ngZone = ngZone;\n  }\n\n  ngAfterContentInit() {\n    if (!this.columnMenuItems.length) {\n      return;\n    }\n\n    this.columnMenuItems.first.isFirst = true;\n    this.columnMenuItems.last.isLast = true;\n    this.ngZone.onStable.pipe(take(1)).subscribe(() => this.service.menuTabbingService.firstFocusable.focus());\n  }\n\n}\n\nColumnMenuContainerComponent.ɵfac = function ColumnMenuContainerComponent_Factory(t) {\n  return new (t || ColumnMenuContainerComponent)(i0.ɵɵdirectiveInject(ColumnMenuService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nColumnMenuContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnMenuContainerComponent,\n  selectors: [[\"kendo-grid-columnmenu-container\"]],\n  contentQueries: function ColumnMenuContainerComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ColumnMenuItemDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.columnMenuItems = _t);\n    }\n  },\n  ngContentSelectors: _c17,\n  decls: 1,\n  vars: 0,\n  template: function ColumnMenuContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnMenuContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-columnmenu-container',\n      template: `\n        <ng-content></ng-content>\n    `\n    }]\n  }], function () {\n    return [{\n      type: ColumnMenuService\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    columnMenuItems: [{\n      type: ContentChildren,\n      args: [ColumnMenuItemDirective, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * Represents a column-menu item for sorting Grid columns that can be placed inside a\n * [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n * Allows the user to sort the column.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the service input of the `kendo-grid-columnmenu-sort` component.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [kendoGridBinding]=\"data\" [sortable]=\"true\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-sort [service]=\"service\">\n *              </kendo-grid-columnmenu-sort>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\" [width]=\"100\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [width]=\"100\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }, { Field1: 'Foo1', Field2: 'Bar1' }];\n * }\n *\n * ```\n */\n\n\nclass ColumnMenuSortComponent extends ColumnMenuItemBase {\n  constructor(localization, sortService, renderer) {\n    super();\n    this.localization = localization;\n    this.sortService = sortService;\n    this.renderer = renderer;\n  }\n\n  get sortedAsc() {\n    const descriptor = this.descriptor;\n    return descriptor && (!descriptor.dir || descriptor.dir === 'asc');\n  }\n\n  get sortedDesc() {\n    const descriptor = this.descriptor;\n    return descriptor && descriptor.dir === 'desc';\n  }\n  /**\n   * @hidden\n   */\n\n\n  toggleSort(dir) {\n    const field = this.service.column.field;\n    const {\n      mode,\n      allowUnsort\n    } = normalize(this.service.sortable);\n    const descriptor = this.descriptor;\n    const sort = mode === 'multiple' ? this.service.sort.filter(s => s.field !== field) : [];\n\n    if (descriptor && descriptor.dir === dir) {\n      if (!allowUnsort) {\n        return;\n      }\n    } else {\n      sort.push({\n        field,\n        dir\n      });\n    }\n\n    this.sortService.sort(sort);\n    this.close();\n  }\n\n  get descriptor() {\n    return [].concat(this.service.sort || []).find(s => s.field === this.service.column.field);\n  }\n\n}\n\nColumnMenuSortComponent.ɵfac = function ColumnMenuSortComponent_Factory(t) {\n  return new (t || ColumnMenuSortComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(SortService), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nColumnMenuSortComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnMenuSortComponent,\n  selectors: [[\"kendo-grid-columnmenu-sort\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 4,\n  consts: [[\"icon\", \"sort-asc-small\", 3, \"text\", \"selected\", \"itemClick\"], [\"icon\", \"sort-desc-small\", 3, \"text\", \"selected\", \"itemClick\"]],\n  template: function ColumnMenuSortComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"kendo-grid-columnmenu-item\", 0);\n      i0.ɵɵlistener(\"itemClick\", function ColumnMenuSortComponent_Template_kendo_grid_columnmenu_item_itemClick_0_listener() {\n        return ctx.toggleSort(\"asc\");\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1, \"kendo-grid-columnmenu-item\", 1);\n      i0.ɵɵlistener(\"itemClick\", function ColumnMenuSortComponent_Template_kendo_grid_columnmenu_item_itemClick_1_listener() {\n        return ctx.toggleSort(\"desc\");\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"text\", ctx.localization.get(\"sortAscending\"))(\"selected\", ctx.sortedAsc);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"text\", ctx.localization.get(\"sortDescending\"))(\"selected\", ctx.sortedDesc);\n    }\n  },\n  directives: [ColumnMenuItemComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnMenuSortComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-columnmenu-sort',\n      template: `\n        <kendo-grid-columnmenu-item\n            [text]=\"localization.get('sortAscending')\"\n            icon=\"sort-asc-small\"\n            (itemClick)=\"toggleSort('asc')\"\n            [selected]=\"sortedAsc\">\n        </kendo-grid-columnmenu-item>\n        <kendo-grid-columnmenu-item\n            [text]=\"localization.get('sortDescending')\"\n            icon=\"sort-desc-small\"\n            (itemClick)=\"toggleSort('desc')\"\n            [selected]=\"sortedDesc\">\n        </kendo-grid-columnmenu-item>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: SortService\n    }, {\n      type: i0.Renderer2\n    }];\n  }, null);\n})();\n/**\n * Represents the component for resizing the specified column to the minimum possible width so that it fits the header or cell content without wrapping.\n * The component can be placed inside a [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * > To enable the autosize-column option, set the [`resizable`]({% slug api_grid_gridcomponent %}#toc-resizable)\n * > property of the Grid to `true`.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) and `column` that are passed by\n * > the template to the `service` and `column` input of the `kendo-grid-columnmenu-autosize-column` component.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\" let-column=\"column\">\n *              <kendo-grid-columnmenu-autosize-column [column]=\"column\" [service]=\"service\">\n *              </kendo-grid-columnmenu-autosize-column>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\n\n\nclass ColumnMenuAutoSizeColumnComponent extends ColumnMenuItemBase {\n  constructor(localization, ctx) {\n    super();\n    this.localization = localization;\n    this.ctx = ctx;\n  }\n\n  ngOnInit() {\n    const isVirtualColumns = this.ctx.grid.columnMenuTemplate && this.ctx.grid.virtualColumns;\n\n    if (isVirtualColumns && isDevMode()) {\n      console.warn(ColunnMenuErrorMessages.autoSizeColumn);\n    }\n  }\n\n  autoSizeColumn() {\n    autoSizeColumn(this.ctx.grid, this.service, this.column);\n  }\n\n}\n\nColumnMenuAutoSizeColumnComponent.ɵfac = function ColumnMenuAutoSizeColumnComponent_Factory(t) {\n  return new (t || ColumnMenuAutoSizeColumnComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(ContextService));\n};\n\nColumnMenuAutoSizeColumnComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnMenuAutoSizeColumnComponent,\n  selectors: [[\"kendo-grid-columnmenu-autosize-column\"]],\n  inputs: {\n    column: \"column\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"k-grid-columnmenu-autosize-column\", \"icon\", \"max-width\", 3, \"text\", \"itemClick\", 4, \"ngIf\"], [\"icon\", \"max-width\", 1, \"k-grid-columnmenu-autosize-column\", 3, \"text\", \"itemClick\"]],\n  template: function ColumnMenuAutoSizeColumnComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ColumnMenuAutoSizeColumnComponent_kendo_grid_columnmenu_item_0_Template, 1, 1, \"kendo-grid-columnmenu-item\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.ctx.grid.virtualColumns);\n    }\n  },\n  directives: [i4.NgIf, ColumnMenuItemComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnMenuAutoSizeColumnComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-columnmenu-autosize-column',\n      template: `\n        <kendo-grid-columnmenu-item\n            *ngIf=\"!this.ctx.grid.virtualColumns\"\n            class=\"k-grid-columnmenu-autosize-column\"\n            [text]=\"localization.get('autosizeThisColumn')\"\n            icon=\"max-width\"\n            (itemClick)=\"autoSizeColumn()\"\n        >\n        </kendo-grid-columnmenu-item>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: ContextService\n    }];\n  }, {\n    column: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents the component for resizing all columns to the minimum possible width so that they fit the widest header or cell content without wrapping.\n * The component can be placed inside a [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * > To enable the autosize-all-columns option, set the [`resizable`]({% slug api_grid_gridcomponent %}#toc-resizable)\n * > property of the Grid to `true`.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the `service` input of the `kendo-grid-columnmenu-autosize-all-columns` component.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-autosize-all-columns [service]=\"service\">\n *              </kendo-grid-columnmenu-autosize-all-columns>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\n\n\nclass ColumnMenuAutoSizeAllColumnsComponent extends ColumnMenuItemBase {\n  constructor(localization, ctx) {\n    super();\n    this.localization = localization;\n    this.ctx = ctx;\n  }\n\n  ngOnInit() {\n    const isVirtualColumns = this.ctx.grid.columnMenuTemplate && this.ctx.grid.virtualColumns;\n\n    if (isVirtualColumns && isDevMode()) {\n      console.warn(ColunnMenuErrorMessages.autoSizeAllColumns);\n    }\n  }\n\n  autoSizeAllColumns() {\n    autoSizeColumn(this.ctx.grid, this.service);\n  }\n\n}\n\nColumnMenuAutoSizeAllColumnsComponent.ɵfac = function ColumnMenuAutoSizeAllColumnsComponent_Factory(t) {\n  return new (t || ColumnMenuAutoSizeAllColumnsComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(ContextService));\n};\n\nColumnMenuAutoSizeAllColumnsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnMenuAutoSizeAllColumnsComponent,\n  selectors: [[\"kendo-grid-columnmenu-autosize-all-columns\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"icon\", \"display-inline-block\", 3, \"text\", \"itemClick\", 4, \"ngIf\"], [\"icon\", \"display-inline-block\", 3, \"text\", \"itemClick\"]],\n  template: function ColumnMenuAutoSizeAllColumnsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ColumnMenuAutoSizeAllColumnsComponent_kendo_grid_columnmenu_item_0_Template, 1, 1, \"kendo-grid-columnmenu-item\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.ctx.grid.virtualColumns);\n    }\n  },\n  directives: [i4.NgIf, ColumnMenuItemComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnMenuAutoSizeAllColumnsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-columnmenu-autosize-all-columns',\n      template: `\n        <kendo-grid-columnmenu-item\n            *ngIf=\"!this.ctx.grid.virtualColumns\"\n            [text]=\"localization.get('autosizeAllColumns')\"\n            icon=\"display-inline-block\"\n            (itemClick)=\"autoSizeAllColumns()\"\n        >\n        </kendo-grid-columnmenu-item>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: ContextService\n    }];\n  }, null);\n})();\n\nconst POPUP_CLASS = 'k-grid-columnmenu-popup';\n/**\n * Represents the [column menu]({% slug columnmenu_grid %}) component.\n */\n\nclass ColumnMenuComponent {\n  constructor(navigationService, popupService, localization, service, ctx) {\n    this.navigationService = navigationService;\n    this.popupService = popupService;\n    this.localization = localization;\n    this.service = service;\n    this.ctx = ctx;\n    /**\n     * @hidden\n     */\n\n    this.standalone = true;\n    /**\n     * The settings for the Column Menu.\n     */\n\n    this.settings = {};\n    /**\n     * @hidden\n     */\n\n    this.sortable = true;\n    /**\n     * @hidden\n     */\n\n    this.tabIndex = '-1';\n    /**\n     * @hidden\n     */\n\n    this.expandedFilter = false;\n    /**\n     * @hidden\n     */\n\n    this.expandedColumns = false;\n    /**\n     * @hidden\n     */\n\n    this.expandedPosition = false;\n    this.closeSubscription = service.closeMenu.subscribe(this.close.bind(this));\n  }\n  /**\n   * @hidden\n   */\n\n\n  get isActive() {\n    return this.hasFilter && filtersByField(this.filter, this.column.field).length > 0 || !this.sortable && this.hasSort && this.sort.find(descriptor => descriptor.field === this.column.field);\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hasFilter() {\n    return hasFilter(this.settings, this.column);\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hasSort() {\n    return hasSort(this.settings, this.column);\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hasColumnChooser() {\n    return hasColumnChooser(this.settings);\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hasAutoSizeColumn() {\n    return hasAutoSizeColumn(this.settings);\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hasAutoSizeAllColumns() {\n    return hasAutoSizeAllColumns(this.settings);\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hasLock() {\n    return hasLock(this.settings, this.column);\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hasStick() {\n    return hasStick(this.settings, this.column);\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hasPosition() {\n    return hasPosition(this.settings, this.column);\n  }\n\n  ngAfterViewInit() {\n    if (this.ctx.grid.virtualColumns && isDevMode()) {\n      if (this.settings.autoSizeAllColumns) {\n        this.settings.autoSizeAllColumns = false;\n        console.warn(ColunnMenuErrorMessages.autoSizeAllColumns);\n      }\n\n      if (this.settings.autoSizeColumn) {\n        this.settings.autoSizeColumn = false;\n        console.warn(ColunnMenuErrorMessages.autoSizeColumn);\n      }\n    }\n  }\n\n  ngOnChanges() {\n    this.service.column = this.column;\n    this.service.sort = this.sort;\n    this.service.filter = this.filter;\n    this.service.sortable = this.sortable;\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this.closeSubscription.unsubscribe();\n  }\n  /**\n   * @hidden\n   */\n\n\n  toggle(e, anchor, template) {\n    if (e) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n\n    this.expandedFilter = this.getExpandedState(this.settings.filter);\n    this.expandedColumns = this.getExpandedState(this.settings.columnChooser);\n    this.expandedPosition = this.getExpandedState(this.settings.setColumnPosition);\n    this.popupRef = this.popupService.open(anchor, template, this.popupRef, POPUP_CLASS);\n\n    if (!this.popupRef) {\n      if (this.navigationService.tableEnabled) {\n        this.navigationService.focusCell(0, this.column.leafIndex);\n      } else {\n        this.anchor.nativeElement.focus();\n      }\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  close() {\n    this.popupService.destroy();\n    this.popupRef = null;\n\n    if (this.navigationService.tableEnabled) {\n      this.navigationService.focusCell(0, this.column.leafIndex);\n    } else {\n      this.anchor.nativeElement.focus();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  get columnMenuTitle() {\n    const localizationMsg = this.localization.get('columnMenu') || '';\n    const columnName = this.column.title || this.column.field;\n    return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n  }\n\n  getExpandedState(menuItemSettings) {\n    return typeof menuItemSettings === 'object' ? menuItemSettings.expanded : false;\n  }\n\n}\n\nColumnMenuComponent.ɵfac = function ColumnMenuComponent_Factory(t) {\n  return new (t || ColumnMenuComponent)(i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(SinglePopupService), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(ColumnMenuService), i0.ɵɵdirectiveInject(ContextService));\n};\n\nColumnMenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnMenuComponent,\n  selectors: [[\"kendo-grid-column-menu\"]],\n  viewQuery: function ColumnMenuComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c20, 7);\n      i0.ɵɵviewQuery(_c21, 7, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.anchor = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function ColumnMenuComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-grid-column-menu-standalone\", ctx.standalone);\n    }\n  },\n  inputs: {\n    standalone: \"standalone\",\n    column: \"column\",\n    settings: \"settings\",\n    sort: \"sort\",\n    filter: \"filter\",\n    sortable: \"sortable\",\n    columnMenuTemplate: \"columnMenuTemplate\",\n    tabIndex: \"tabIndex\"\n  },\n  features: [i0.ɵɵProvidersFeature([ColumnMenuService, MenuTabbingService]), i0.ɵɵNgOnChangesFeature],\n  decls: 7,\n  vars: 5,\n  consts: [[\"href\", \"#\", 1, \"k-grid-header-menu\", \"k-grid-column-menu\", 3, \"ngClass\", \"tabindex\", \"click\", \"keydown.enter\"], [\"anchor\", \"\"], [1, \"k-icon\", \"k-i-more-vertical\"], [\"template\", \"\"], [\"defaultTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"keydown.escape\", \"keydown.enter\"], [3, \"kendoGridColumnMenuItem\", \"service\", 4, \"ngIf\"], [3, \"showLock\", \"showStick\", \"kendoGridColumnMenuItem\", \"service\", \"expanded\", 4, \"ngIf\"], [\"class\", \"k-separator\", 3, \"borderColor\", 4, \"ngIf\"], [3, \"kendoGridColumnMenuItem\", \"service\", \"expanded\", 4, \"ngIf\"], [3, \"service\", \"kendoGridColumnMenuItem\", \"column\", 4, \"ngIf\"], [3, \"service\", \"kendoGridColumnMenuItem\", 4, \"ngIf\"], [3, \"kendoGridColumnMenuItem\", \"service\"], [\"sortItem\", \"\"], [\"lockItem\", \"\"], [\"stickItem\", \"\"], [3, \"showLock\", \"showStick\", \"kendoGridColumnMenuItem\", \"service\", \"expanded\"], [\"positionItem\", \"\"], [1, \"k-separator\"], [3, \"kendoGridColumnMenuItem\", \"service\", \"expanded\"], [\"chooserItem\", \"\"], [3, \"service\", \"kendoGridColumnMenuItem\", \"column\"], [\"autoSizeColumnItem\", \"\"], [3, \"service\", \"kendoGridColumnMenuItem\"], [\"autoSizeAllColumnsItem\", \"\"], [\"filterItem\", \"\"]],\n  template: function ColumnMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r26 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"a\", 0, 1);\n      i0.ɵɵlistener(\"click\", function ColumnMenuComponent_Template_a_click_0_listener($event) {\n        i0.ɵɵrestoreView(_r26);\n\n        const _r0 = i0.ɵɵreference(1);\n\n        const _r1 = i0.ɵɵreference(4);\n\n        return ctx.toggle($event, _r0, _r1);\n      })(\"keydown.enter\", function ColumnMenuComponent_Template_a_keydown_enter_0_listener($event) {\n        return $event.stopImmediatePropagation();\n      });\n      i0.ɵɵelement(2, \"span\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, ColumnMenuComponent_ng_template_3_Template, 1, 5, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(5, ColumnMenuComponent_ng_template_5_Template, 11, 10, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c25, ctx.isActive))(\"tabindex\", ctx.tabIndex);\n      i0.ɵɵattribute(\"title\", ctx.columnMenuTitle);\n    }\n  },\n  directives: [i4.NgClass, i4.NgTemplateOutlet, ColumnMenuContainerComponent, i4.NgIf, ColumnMenuSortComponent, ColumnMenuItemDirective, ColumnMenuLockComponent, ColumnMenuStickComponent, ColumnMenuPositionComponent, ColumnMenuChooserComponent, ColumnMenuAutoSizeColumnComponent, ColumnMenuAutoSizeAllColumnsComponent, ColumnMenuFilterComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnMenuComponent, [{\n    type: Component,\n    args: [{\n      providers: [ColumnMenuService, MenuTabbingService],\n      selector: 'kendo-grid-column-menu',\n      template: `\n        <a #anchor\n            class=\"k-grid-header-menu k-grid-column-menu\"\n            [ngClass]=\"{ 'k-active': isActive }\"\n            (click)=\"toggle($event, anchor, template)\"\n            (keydown.enter)=\"$event.stopImmediatePropagation()\"\n            href=\"#\"\n            [tabindex]=\"tabIndex\"\n            [attr.title]=\"columnMenuTitle\">\n            <span class=\"k-icon k-i-more-vertical\"></span>\n        </a>\n        <ng-template #template>\n            <ng-container\n                [ngTemplateOutlet]=\"column.columnMenuTemplateRef || columnMenuTemplate || defaultTemplate\"\n                [ngTemplateOutletContext]=\"{ service: service, column: column }\">\n            </ng-container>\n        </ng-template>\n        <ng-template #defaultTemplate>\n            <kendo-grid-columnmenu-container\n                (keydown.escape)=\"close()\"\n                (keydown.enter)=\"$event.stopImmediatePropagation()\">\n                <kendo-grid-columnmenu-sort #sortItem [kendoGridColumnMenuItem]=\"sortItem\" *ngIf=\"hasSort\" [service]=\"service\">\n                </kendo-grid-columnmenu-sort>\n                <kendo-grid-columnmenu-lock #lockItem *ngIf=\"hasLock && !hasPosition\" [kendoGridColumnMenuItem]=\"lockItem\" [service]=\"service\">\n                </kendo-grid-columnmenu-lock>\n                <kendo-grid-columnmenu-stick #stickItem *ngIf=\"hasStick && !hasPosition\" [kendoGridColumnMenuItem]=\"stickItem\" [service]=\"service\">\n                </kendo-grid-columnmenu-stick>\n                <kendo-grid-columnmenu-position\n                    #positionItem\n                    *ngIf=\"hasPosition\"\n                    [showLock]=\"hasLock\"\n                    [showStick]=\"hasStick\"\n                    [kendoGridColumnMenuItem]=\"positionItem\"\n                    [service]=\"service\"\n                    [expanded]=\"expandedPosition\">\n                </kendo-grid-columnmenu-position>\n                <span [style.borderColor]=\"'rgba(0, 0, 0, 0.08)'\" *ngIf=\"hasColumnChooser || hasAutoSizeColumn || hasAutoSizeAllColumns\" class=\"k-separator\"></span>\n                <kendo-grid-columnmenu-chooser\n                    #chooserItem\n                    *ngIf=\"hasColumnChooser\"\n                    [kendoGridColumnMenuItem]=\"chooserItem\"\n                    [service]=\"service\"\n                    [expanded]=\"expandedColumns\">\n                </kendo-grid-columnmenu-chooser>\n                <kendo-grid-columnmenu-autosize-column\n                    #autoSizeColumnItem\n                    *ngIf=\"hasAutoSizeColumn\"\n                    [service]=\"service\"\n                    [kendoGridColumnMenuItem]=\"autoSizeColumnItem\"\n                    [column]=\"column\"\n                >\n                </kendo-grid-columnmenu-autosize-column>\n\n                <kendo-grid-columnmenu-autosize-all-columns\n                    #autoSizeAllColumnsItem\n                    *ngIf=\"hasAutoSizeAllColumns\"\n                    [service]=\"service\"\n                    [kendoGridColumnMenuItem]=\"autoSizeAllColumnsItem\"\n                >\n                </kendo-grid-columnmenu-autosize-all-columns>\n                <span [style.borderColor]=\"'rgba(0, 0, 0, 0.08)'\" *ngIf=\"hasColumnChooser || hasAutoSizeColumn || hasAutoSizeAllColumns\" class=\"k-separator\"></span>\n                <kendo-grid-columnmenu-filter\n                    #filterItem\n                    *ngIf=\"hasFilter\"\n                    [kendoGridColumnMenuItem]=\"filterItem\"\n                    [service]=\"service\"\n                    [expanded]=\"expandedFilter\">\n                </kendo-grid-columnmenu-filter>\n            </kendo-grid-columnmenu-container>\n        </ng-template>\n    `\n    }]\n  }], function () {\n    return [{\n      type: NavigationService\n    }, {\n      type: SinglePopupService\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: ColumnMenuService\n    }, {\n      type: ContextService\n    }];\n  }, {\n    standalone: [{\n      type: HostBinding,\n      args: ['class.k-grid-column-menu-standalone']\n    }, {\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }],\n    settings: [{\n      type: Input\n    }],\n    sort: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    sortable: [{\n      type: Input\n    }],\n    columnMenuTemplate: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    anchor: [{\n      type: ViewChild,\n      args: ['anchor', {\n        static: true\n      }]\n    }],\n    template: [{\n      type: ViewChild,\n      args: ['template', {\n        static: true,\n        read: TemplateRef\n      }]\n    }]\n  });\n})();\n/**\n * Represents a component which accommodates the filter operators.\n */\n\n\nclass FilterCellOperatorsComponent {\n  constructor(localization) {\n    this.localization = localization;\n    this.clearText = 'Clear';\n    /**\n     * The filter operators that will be displayed.\n     */\n\n    this.operators = [];\n    /**\n     * Determines if the list of operators will be displayed.\n     * @type {boolean}\n     */\n\n    this.showOperators = true;\n    /**\n     * Fires when the operator is selected.\n     * @type {EventEmitter<string>}\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires when the **Clear** button is clicked.\n     * @type {EventEmitter<{}>}\n     */\n\n    this.clear = new EventEmitter();\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hostClasses() {\n    return true;\n  }\n  /**\n   * @hidden\n   */\n\n\n  onChange(dataItem) {\n    this.valueChange.emit(dataItem);\n  }\n  /**\n   * @hidden\n   */\n\n\n  clearClick() {\n    this.clear.emit();\n    return false;\n  }\n  /**\n   * @hidden\n   */\n\n\n  clearKeydown(args) {\n    if (args.keyCode === Keys.Enter || args.keyCode === Keys.Space) {\n      this.clear.emit();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  dropdownKeydown(args) {\n    if (args.defaultPrevented) {\n      return;\n    }\n\n    if (args.keyCode === Keys.Enter && !this.dropdown.isOpen) {\n      this.dropdown.toggle(true);\n      args.preventDefault();\n    }\n  }\n\n  ngOnInit() {\n    this.subscription = this.localization.changes.subscribe(() => this.clearText = this.localization.get(\"filterClearButton\"));\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nFilterCellOperatorsComponent.ɵfac = function FilterCellOperatorsComponent_Factory(t) {\n  return new (t || FilterCellOperatorsComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nFilterCellOperatorsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FilterCellOperatorsComponent,\n  selectors: [[\"kendo-grid-filter-cell-operators\"]],\n  viewQuery: function FilterCellOperatorsComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c26, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdown = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function FilterCellOperatorsComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-filtercell-operator\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    operators: \"operators\",\n    showButton: \"showButton\",\n    showOperators: \"showOperators\",\n    value: \"value\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    clear: \"clear\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[\"kendoGridFocusable\", \"\", \"class\", \"k-dropdown-operator\", \"iconClass\", \"k-i-filter\", \"textField\", \"text\", \"valueField\", \"value\", 3, \"data\", \"value\", \"valuePrimitive\", \"popupSettings\", \"valueChange\", \"keydown\", 4, \"ngIf\"], [\"type\", \"button\", \"kendoGridFocusable\", \"\", \"class\", \"k-button k-button-solid-base k-button-solid k-button-md k-rounded-md k-button-rectangle k-icon-button\", 3, \"title\", \"click\", \"keydown\", 4, \"ngIf\"], [\"kendoGridFocusable\", \"\", \"iconClass\", \"k-i-filter\", \"textField\", \"text\", \"valueField\", \"value\", 1, \"k-dropdown-operator\", 3, \"data\", \"value\", \"valuePrimitive\", \"popupSettings\", \"valueChange\", \"keydown\"], [\"dropdown\", \"\"], [\"type\", \"button\", \"kendoGridFocusable\", \"\", 1, \"k-button\", \"k-button-solid-base\", \"k-button-solid\", \"k-button-md\", \"k-rounded-md\", \"k-button-rectangle\", \"k-icon-button\", 3, \"title\", \"click\", \"keydown\"], [1, \"k-icon\", \"k-button-icon\", \"k-i-filter-clear\"]],\n  template: function FilterCellOperatorsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FilterCellOperatorsComponent_kendo_dropdownlist_0_Template, 2, 5, \"kendo-dropdownlist\", 0);\n      i0.ɵɵtemplate(1, FilterCellOperatorsComponent_button_1_Template, 2, 1, \"button\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.showOperators);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showButton);\n    }\n  },\n  directives: [i4.NgIf, i1$4.DropDownListComponent, FocusableDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterCellOperatorsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-filter-cell-operators',\n      template: `\n        <kendo-dropdownlist\n            #dropdown\n            *ngIf=\"showOperators\"\n            kendoGridFocusable\n            [data]=\"operators\"\n            class=\"k-dropdown-operator\"\n            (valueChange)=\"onChange($event)\"\n            [value]=\"value\"\n            iconClass=\"k-i-filter\"\n            [valuePrimitive]=\"true\"\n            textField=\"text\"\n            [popupSettings]=\"{ width: 'auto' }\"\n            valueField=\"value\"\n            (keydown)=\"dropdownKeydown($event)\">\n        </kendo-dropdownlist>\n        <button type=\"button\"\n            kendoGridFocusable\n            *ngIf=\"showButton\"\n            class=\"k-button k-button-solid-base k-button-solid k-button-md k-rounded-md k-button-rectangle k-icon-button\"\n            [title]=\"clearText\"\n            (click)=\"clearClick()\"\n            (keydown)=\"clearKeydown($event)\">\n                <span class=\"k-icon k-button-icon k-i-filter-clear\"></span>\n        </button>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, {\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-filtercell-operator']\n    }],\n    dropdown: [{\n      type: ViewChild,\n      args: ['dropdown', {\n        static: false\n      }]\n    }],\n    operators: [{\n      type: Input\n    }],\n    showButton: [{\n      type: Input\n    }],\n    showOperators: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    clear: [{\n      type: Output\n    }]\n  });\n})();\n\nconst EMPTY_FILTER_OPERATORS = ['isnull', 'isnotnull', 'isempty', 'isnotempty'];\n/**\n * @hidden\n */\n\nclass FilterCellWrapperComponent extends FilterInputWrapperComponent {\n  constructor(filterService) {\n    super(filterService);\n    this.showOperators = true;\n  }\n\n  get hostClasses() {\n    return true;\n  }\n\n  get overrideBaseClasses() {\n    return false;\n  }\n\n  get showButton() {\n    const filter = this.currentFilter;\n    return isPresent(filter) && (!isNullOrEmptyString(filter.value) || EMPTY_FILTER_OPERATORS.indexOf(String(filter.operator)) >= 0);\n  }\n\n  filterChange(filter) {\n    this.applyFilter(filter);\n  }\n\n}\n\nFilterCellWrapperComponent.ɵfac = function FilterCellWrapperComponent_Factory(t) {\n  return new (t || FilterCellWrapperComponent)(i0.ɵɵdirectiveInject(FilterService));\n};\n\nFilterCellWrapperComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FilterCellWrapperComponent,\n  selectors: [[\"kendo-grid-filter-wrapper-cell\"]],\n  hostVars: 4,\n  hostBindings: function FilterCellWrapperComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-filtercell-wrapper\", ctx.hostClasses)(\"k-filtercell\", ctx.overrideBaseClasses);\n    }\n  },\n  inputs: {\n    showOperators: \"showOperators\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c17,\n  decls: 2,\n  vars: 4,\n  consts: [[3, \"showOperators\", \"operators\", \"showButton\", \"value\", \"clear\", \"valueChange\"]],\n  template: function FilterCellWrapperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n      i0.ɵɵelementStart(1, \"kendo-grid-filter-cell-operators\", 0);\n      i0.ɵɵlistener(\"clear\", function FilterCellWrapperComponent_Template_kendo_grid_filter_cell_operators_clear_1_listener() {\n        return ctx.onClear();\n      })(\"valueChange\", function FilterCellWrapperComponent_Template_kendo_grid_filter_cell_operators_valueChange_1_listener($event) {\n        return ctx.currentOperator = $event;\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"showOperators\", ctx.showOperators)(\"operators\", ctx.operators)(\"showButton\", ctx.showButton)(\"value\", ctx.currentOperator);\n    }\n  },\n  directives: [FilterCellOperatorsComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterCellWrapperComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-filter-wrapper-cell',\n      template: `\n        <ng-content></ng-content>\n        <kendo-grid-filter-cell-operators\n            [showOperators]=\"showOperators\"\n            [operators]=\"operators\"\n            (clear)=\"onClear()\"\n            [showButton]=\"showButton\"\n            [(value)]=\"currentOperator\">\n        </kendo-grid-filter-cell-operators>\n    `\n    }]\n  }], function () {\n    return [{\n      type: FilterService\n    }];\n  }, {\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-filtercell-wrapper']\n    }],\n    overrideBaseClasses: [{\n      type: HostBinding,\n      args: ['class.k-filtercell']\n    }],\n    showOperators: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents a string-filter cell component\n * ([see example]({% slug filter_row %}#toc-hiding-filter-operators)).\n *\n * @example\n *\n *  ```html-no-run\n *      <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          <ng-template kendoGridFilterCellTemplate let-filter let-column=\"column\">\n *          <kendo-grid-string-filter-cell\n *              [showOperators]=\"false\"\n *              [column]=\"column\"\n *              [filter]=\"filter\">\n *          </kendo-grid-string-filter-cell>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\n\n\nclass StringFilterCellComponent extends StringFilterComponent {\n  constructor(filterService, localization) {\n    super(filterService, localization);\n    /**\n     * Determines the delay time (in milliseconds) before the filter value is submitted.\n     * A value of `0` indicates no delay. The default value is `500`.\n     * @type {boolean}\n     */\n\n    this.filterDelay = 500;\n    /**\n     * Determines if the drop-down filter operators will be displayed.\n     * The default value is `true`.\n     * @type {boolean}\n     */\n\n    this.showOperators = true;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get columnLabel() {\n    const localizationMsg = this.localization.get('filterInputLabel') || '';\n    const columnName = this.column.title || this.column.field;\n    return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n  }\n\n}\n\nStringFilterCellComponent.ɵfac = function StringFilterCellComponent_Factory(t) {\n  return new (t || StringFilterCellComponent)(i0.ɵɵdirectiveInject(FilterService), i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nStringFilterCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StringFilterCellComponent,\n  selectors: [[\"kendo-grid-string-filter-cell\"]],\n  inputs: {\n    filterDelay: \"filterDelay\",\n    showOperators: \"showOperators\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 8,\n  consts: [[3, \"column\", \"filter\", \"operators\", \"defaultOperator\", \"showOperators\"], [\"kendoTextBox\", \"\", \"kendoGridFocusable\", \"\", \"kendoFilterInput\", \"\", 3, \"columnLabel\", \"filterDelay\", \"ngModel\"]],\n  template: function StringFilterCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"kendo-grid-filter-wrapper-cell\", 0);\n      i0.ɵɵelement(1, \"input\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"defaultOperator\", ctx.operator)(\"showOperators\", ctx.showOperators);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"columnLabel\", ctx.columnLabel)(\"filterDelay\", ctx.filterDelay)(\"ngModel\", ctx.currentFilter == null ? null : ctx.currentFilter.value);\n    }\n  },\n  directives: [FilterCellWrapperComponent, i4$1.TextBoxDirective, i4$2.DefaultValueAccessor, FocusableDirective, FilterInputDirective, i4$2.NgControlStatus, i4$2.NgModel],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StringFilterCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-string-filter-cell',\n      template: `\n        <kendo-grid-filter-wrapper-cell\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [showOperators]=\"showOperators\">\n            <input\n                kendoTextBox\n                kendoGridFocusable\n                kendoFilterInput\n                [columnLabel]=\"columnLabel\"\n                [filterDelay]=\"filterDelay\"\n                [ngModel]=\"currentFilter?.value\" />\n        </kendo-grid-filter-wrapper-cell>\n    `\n    }]\n  }], function () {\n    return [{\n      type: FilterService\n    }, {\n      type: i1.LocalizationService\n    }];\n  }, {\n    filterDelay: [{\n      type: Input\n    }],\n    showOperators: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents a numeric filter cell.\n *\n * @example\n *  ```html-no-run\n *      <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          <ng-template kendoGridFilterCellTemplate let-filter let-column=\"column\">\n *          <kendo-grid-numeric-filter-cell\n *              [column]=\"column\"\n *              [filter]=\"filter\">\n *          </kendo-grid-numeric-filter-cell>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\n\n\nclass NumericFilterCellComponent extends NumericFilterComponent {\n  constructor(filterService, localization) {\n    super(filterService, localization);\n    this.localization = localization;\n    /**\n     * Determines the delay time (in milliseconds) before the filter value is submitted.\n     * A value of `0` indicates no delay. The default value is `500`.\n     * @type {boolean}\n     */\n\n    this.filterDelay = 500;\n    /**\n     * Determines if the drop-down filter operators will be displayed.\n     * The default value is `true`.\n     * @type {boolean}\n     */\n\n    this.showOperators = true;\n  }\n  /**\n   * @hidden\n   */\n\n\n  messageFor(key) {\n    return this.localization.get(key);\n  }\n  /**\n   * @hidden\n   */\n\n\n  get columnLabel() {\n    const localizationMsg = this.localization.get('filterInputLabel') || '';\n    const columnName = this.column.title || this.column.field;\n    return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n  }\n\n}\n\nNumericFilterCellComponent.ɵfac = function NumericFilterCellComponent_Factory(t) {\n  return new (t || NumericFilterCellComponent)(i0.ɵɵdirectiveInject(FilterService), i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nNumericFilterCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NumericFilterCellComponent,\n  selectors: [[\"kendo-grid-numeric-filter-cell\"]],\n  inputs: {\n    filterDelay: \"filterDelay\",\n    showOperators: \"showOperators\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 17,\n  consts: [[3, \"column\", \"filter\", \"operators\", \"defaultOperator\", \"showOperators\"], [\"kendoGridFocusable\", \"\", \"kendoFilterInput\", \"\", 3, \"columnLabel\", \"filterDelay\", \"autoCorrect\", \"value\", \"format\", \"decimals\", \"spinners\", \"min\", \"max\", \"step\"], [3, \"increment\", \"decrement\"]],\n  template: function NumericFilterCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"kendo-grid-filter-wrapper-cell\", 0);\n      i0.ɵɵelementStart(1, \"kendo-numerictextbox\", 1);\n      i0.ɵɵelement(2, \"kendo-numerictextbox-messages\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"defaultOperator\", ctx.operator)(\"showOperators\", ctx.showOperators);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"columnLabel\", ctx.columnLabel)(\"filterDelay\", ctx.filterDelay)(\"autoCorrect\", true)(\"value\", ctx.currentFilter == null ? null : ctx.currentFilter.value)(\"format\", ctx.format)(\"decimals\", ctx.decimals)(\"spinners\", ctx.spinners)(\"min\", ctx.min)(\"max\", ctx.max)(\"step\", ctx.step);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"increment\", ctx.messageFor(\"filterNumericIncrement\"))(\"decrement\", ctx.messageFor(\"filterNumericDecrement\"));\n    }\n  },\n  directives: [FilterCellWrapperComponent, i4$1.NumericTextBoxComponent, FocusableDirective, FilterInputDirective, i4$1.NumericTextBoxCustomMessagesComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumericFilterCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-numeric-filter-cell',\n      template: `\n        <kendo-grid-filter-wrapper-cell\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [showOperators]=\"showOperators\"\n        >\n            <kendo-numerictextbox\n                kendoGridFocusable\n                kendoFilterInput\n                [columnLabel]=\"columnLabel\"\n                [filterDelay]=\"filterDelay\"\n                [autoCorrect]=\"true\"\n                [value]=\"currentFilter?.value\"\n                [format]=\"format\"\n                [decimals]=\"decimals\"\n                [spinners]=\"spinners\"\n                [min]=\"min\"\n                [max]=\"max\"\n                [step]=\"step\"\n            >\n                <kendo-numerictextbox-messages\n                    [increment]=\"messageFor('filterNumericIncrement')\"\n                    [decrement]=\"messageFor('filterNumericDecrement')\"\n                >\n                </kendo-numerictextbox-messages>\n            </kendo-numerictextbox>\n        </kendo-grid-filter-wrapper-cell>\n    `\n    }]\n  }], function () {\n    return [{\n      type: FilterService\n    }, {\n      type: i1.LocalizationService\n    }];\n  }, {\n    filterDelay: [{\n      type: Input\n    }],\n    showOperators: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents a Boolean filter-cell component.\n *\n * @example\n *\n *  ```html-no-run\n *      <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          <ng-template kendoGridFilterCellTemplate let-filter let-column=\"column\">\n *          <kendo-grid-boolean-filter-cell\n *              [column]=\"column\"\n *              [filter]=\"filter\">\n *          </kendo-grid-boolean-filter-cell>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\n\n\nclass BooleanFilterCellComponent extends BooleanFilterComponent {\n  constructor(filterService, localization, cd) {\n    super(filterService, localization);\n    this.cd = cd;\n  }\n\n  localizationChange() {\n    super.localizationChange();\n    this.cd.markForCheck();\n  }\n  /**\n   * @hidden\n   */\n\n\n  get columnLabel() {\n    const localizationMsg = this.localization.get('filterInputLabel') || '';\n    const columnName = this.column.title || this.column.field;\n    return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n  }\n\n}\n\nBooleanFilterCellComponent.ɵfac = function BooleanFilterCellComponent_Factory(t) {\n  return new (t || BooleanFilterCellComponent)(i0.ɵɵdirectiveInject(FilterService), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nBooleanFilterCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BooleanFilterCellComponent,\n  selectors: [[\"kendo-grid-boolean-filter-cell\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 11,\n  consts: [[3, \"column\", \"filter\", \"showOperators\", \"defaultOperator\"], [\"kendoFilterInput\", \"\", \"kendoGridFocusable\", \"\", \"textField\", \"text\", \"valueField\", \"value\", 3, \"columnLabel\", \"defaultItem\", \"data\", \"popupSettings\", \"valuePrimitive\", \"value\"]],\n  template: function BooleanFilterCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"kendo-grid-filter-wrapper-cell\", 0);\n      i0.ɵɵelement(1, \"kendo-dropdownlist\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"showOperators\", false)(\"defaultOperator\", ctx.operator);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"columnLabel\", ctx.columnLabel)(\"defaultItem\", ctx.defaultItem)(\"data\", ctx.items)(\"popupSettings\", i0.ɵɵpureFunction0(10, _c27))(\"valuePrimitive\", true)(\"value\", ctx.currentFilter == null ? null : ctx.currentFilter.value);\n    }\n  },\n  directives: [FilterCellWrapperComponent, i1$4.DropDownListComponent, FilterInputDirective, FocusableDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BooleanFilterCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-boolean-filter-cell',\n      template: `\n        <kendo-grid-filter-wrapper-cell\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [showOperators]=\"false\"\n            [defaultOperator]=\"operator\">\n            <kendo-dropdownlist\n                kendoFilterInput\n                kendoGridFocusable\n                [columnLabel]=\"columnLabel\"\n                [defaultItem]=\"defaultItem\"\n                [data]=\"items\"\n                textField=\"text\"\n                valueField=\"value\"\n                [popupSettings]=\"{ width: 'auto' }\"\n                [valuePrimitive]=\"true\"\n                [value]=\"currentFilter?.value\">\n            </kendo-dropdownlist>\n        </kendo-grid-filter-wrapper-cell>\n    `\n    }]\n  }], function () {\n    return [{\n      type: FilterService\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n/**\n * Represents a date-filter cell component.\n *\n * @example\n *\n *  ```html-no-run\n *      <kendo-grid-column field=\"OrderDate\" title=\"Order Date\">\n *          <ng-template kendoGridFilterCellTemplate let-filter let-column=\"column\">\n *          <kendo-grid-date-filter-cell\n *              [showOperators]=\"false\"\n *              [column]=\"column\"\n *              [filter]=\"filter\">\n *          </kendo-grid-date-filter-cell>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\n\n\nclass DateFilterCellComponent extends DateFilterComponent {\n  constructor(filterService, localization) {\n    super(filterService, localization);\n    this.localization = localization;\n    /**\n     * Determines if the drop-down filter operators will be displayed. The default value is `true`.\n     * @type {boolean}\n     */\n\n    this.showOperators = true;\n  }\n  /**\n   * @hidden\n   */\n\n\n  messageFor(key) {\n    return this.localization.get(key);\n  }\n  /**\n   * @hidden\n   */\n\n\n  get columnLabel() {\n    const localizationMsg = this.localization.get('filterInputLabel') || '';\n    const columnName = this.column.title || this.column.field;\n    return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n  }\n\n}\n\nDateFilterCellComponent.ɵfac = function DateFilterCellComponent_Factory(t) {\n  return new (t || DateFilterCellComponent)(i0.ɵɵdirectiveInject(FilterService), i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nDateFilterCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DateFilterCellComponent,\n  selectors: [[\"kendo-grid-date-filter-cell\"]],\n  inputs: {\n    showOperators: \"showOperators\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 18,\n  consts: [[3, \"column\", \"filter\", \"operators\", \"defaultOperator\", \"showOperators\"], [\"kendoFilterInput\", \"\", \"kendoGridFocusable\", \"\", 3, \"columnLabel\", \"value\", \"format\", \"formatPlaceholder\", \"placeholder\", \"activeView\", \"bottomView\", \"topView\", \"min\", \"max\", \"weekNumber\"], [3, \"toggle\", \"today\"]],\n  template: function DateFilterCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"kendo-grid-filter-wrapper-cell\", 0);\n      i0.ɵɵelementStart(1, \"kendo-datepicker\", 1);\n      i0.ɵɵelement(2, \"kendo-datepicker-messages\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"defaultOperator\", ctx.operator)(\"showOperators\", ctx.showOperators);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"columnLabel\", ctx.columnLabel)(\"value\", ctx.currentFilter == null ? null : ctx.currentFilter.value)(\"format\", ctx.format)(\"formatPlaceholder\", ctx.formatPlaceholder)(\"placeholder\", ctx.placeholder)(\"activeView\", ctx.activeView)(\"bottomView\", ctx.bottomView)(\"topView\", ctx.topView)(\"min\", ctx.min)(\"max\", ctx.max)(\"weekNumber\", ctx.weekNumber);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"toggle\", ctx.messageFor(\"filterDateToggle\"))(\"today\", ctx.messageFor(\"filterDateToday\"));\n    }\n  },\n  directives: [FilterCellWrapperComponent, i4$3.DatePickerComponent, FilterInputDirective, FocusableDirective, i4$3.DatePickerCustomMessagesComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DateFilterCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-date-filter-cell',\n      template: `\n        <kendo-grid-filter-wrapper-cell\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [showOperators]=\"showOperators\"\n        >\n            <kendo-datepicker\n                kendoFilterInput\n                kendoGridFocusable\n                [columnLabel]=\"columnLabel\"\n                [value]=\"currentFilter?.value\"\n                [format]=\"format\"\n                [formatPlaceholder]=\"formatPlaceholder\"\n                [placeholder]=\"placeholder\"\n                [activeView]=\"activeView\"\n                [bottomView]=\"bottomView\"\n                [topView]=\"topView\"\n                [min]=\"min\"\n                [max]=\"max\"\n                [weekNumber]=\"weekNumber\"\n            >\n                <kendo-datepicker-messages\n                    [toggle]=\"messageFor('filterDateToggle')\"\n                    [today]=\"messageFor('filterDateToday')\"\n                >\n                </kendo-datepicker-messages>\n            </kendo-datepicker>\n        </kendo-grid-filter-wrapper-cell>\n    `\n    }]\n  }], function () {\n    return [{\n      type: FilterService\n    }, {\n      type: i1.LocalizationService\n    }];\n  }, {\n    showOperators: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n *\n * > List the following components in the GridModule as `entryComponents`.\n */\n\n\nconst filterComponentFactory = type => ({\n  \"boolean\": BooleanFilterCellComponent,\n  \"date\": DateFilterCellComponent,\n  \"numeric\": NumericFilterCellComponent,\n  \"text\": StringFilterCellComponent\n})[type];\n/**\n * @hidden\n */\n\n\nclass FilterCellHostDirective extends FilterHostDirective {\n  constructor(host, resolver) {\n    super(host, resolver);\n  }\n\n  componentType() {\n    if (!isNullOrEmptyString(this.column.filter)) {\n      return filterComponentFactory(this.column.filter);\n    }\n\n    return StringFilterCellComponent;\n  }\n\n}\n\nFilterCellHostDirective.ɵfac = function FilterCellHostDirective_Factory(t) {\n  return new (t || FilterCellHostDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n};\n\nFilterCellHostDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FilterCellHostDirective,\n  selectors: [[\"\", \"kendoFilterCellHost\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterCellHostDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoFilterCellHost]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.ComponentFactoryResolver\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass FilterCellComponent {\n  constructor() {\n    this._templateContext = {};\n  }\n\n  get filter() {\n    return this._filter;\n  }\n\n  set filter(value) {\n    this._filter = cloneFilters(value);\n  }\n\n  get templateContext() {\n    this._templateContext.column = this.column;\n    this._templateContext.filter = this.filter;\n    this._templateContext['$implicit'] = this.filter;\n    return this._templateContext;\n  }\n\n  get hasTemplate() {\n    return isPresent(this.column.filterCellTemplateRef);\n  }\n\n  get isFilterable() {\n    return isPresent(this.column) && !isNullOrEmptyString(this.column.field) && this.column.filterable;\n  }\n\n}\n\nFilterCellComponent.ɵfac = function FilterCellComponent_Factory(t) {\n  return new (t || FilterCellComponent)();\n};\n\nFilterCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FilterCellComponent,\n  selectors: [[\"\", \"kendoGridFilterCell\", \"\"]],\n  inputs: {\n    column: \"column\",\n    filter: \"filter\"\n  },\n  attrs: _c28,\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"kendoFilterCellHost\", \"\", 3, \"column\", \"filter\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function FilterCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FilterCellComponent_ng_container_0_Template, 4, 3, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isFilterable);\n    }\n  },\n  directives: [i4.NgIf, i4.NgSwitch, i4.NgSwitchCase, FilterCellHostDirective, i4.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterCellComponent, [{\n    type: Component,\n    args: [{\n      selector: '[kendoGridFilterCell]',\n      template: `\n        <ng-container *ngIf=\"isFilterable\">\n            <ng-container [ngSwitch]=\"hasTemplate\">\n                <ng-container *ngSwitchCase=\"false\">\n                    <ng-container kendoFilterCellHost [column]=\"column\" [filter]=\"filter\"></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"true\">\n                    <ng-template\n                        *ngIf=\"column.filterCellTemplateRef\"\n                        [ngTemplateOutlet]=\"column.filterCellTemplateRef\"\n                        [ngTemplateOutletContext]=\"templateContext\">\n                    </ng-template>\n                </ng-container>\n            </ng-container>\n        </ng-container>\n    `\n    }]\n  }], null, {\n    column: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }]\n  });\n})();\n\nlet id$1 = 0;\n\nfunction nextId$1() {\n  return id$1++;\n}\n/**\n * @hidden\n */\n\n\nclass LogicalCellDirective {\n  constructor(focusGroup, element, columnInfoService, idService, navigationService, renderer, zone, cellContext) {\n    this.focusGroup = focusGroup;\n    this.element = element;\n    this.columnInfoService = columnInfoService;\n    this.idService = idService;\n    this.navigationService = navigationService;\n    this.renderer = renderer;\n    this.zone = zone;\n    this.cellContext = cellContext;\n    this.logicalSlaveCell = false;\n    this.colSpan = 1;\n    this.rowSpan = 1;\n    this.dataRowIndex = -1;\n    this.detailExpandCell = false;\n    this.uid = nextId$1();\n  }\n\n  get id() {\n    if (!this.logicalSlaveCell && this.columnInfoService.isLocked) {\n      return this.idService.cellId(this.logicalRowIndex, this.logicalColIndex);\n    }\n  }\n\n  get ariaColIndex() {\n    if (this.logicalSlaveCell || this.logicalColIndex === -1) {\n      return undefined;\n    }\n\n    return this.logicalColIndex + 1;\n  }\n\n  ngOnInit() {\n    if (!this.navigationService.tableEnabled) {\n      return;\n    }\n\n    this.navigationChange = this.navigationService.changes.subscribe(e => this.onNavigationChange(e));\n  }\n\n  ngDoCheck() {\n    if (!this.navigationService.tableEnabled || this.logicalColIndex === -1) {\n      return;\n    }\n\n    if (this.cellContext) {\n      this.cellContext.focusGroup = this.focusGroup;\n    }\n\n    this.registerNoChanges();\n  }\n\n  ngOnChanges(changes) {\n    if (!this.navigationService.tableEnabled) {\n      return;\n    }\n\n    const keys = Object.keys(changes);\n\n    if (keys.length === 1 && keys[0] === 'groupItem' || this.logicalColIndex === -1) {\n      // Ignore groupItem changes as the reference is not stable\n      return;\n    }\n\n    const indexChange = changes.logicalColIndex;\n    const rowIndexChange = changes.logicalRowIndex;\n    const index = indexChange && !indexChange.isFirstChange() ? indexChange.previousValue : this.logicalColIndex;\n    const rowIndex = rowIndexChange && !rowIndexChange.isFirstChange() ? rowIndexChange.previousValue : this.logicalRowIndex;\n    this.navigationService.unregisterCell(index, rowIndex, this);\n    this.registerChanges();\n    this.updateElement();\n  }\n\n  ngOnDestroy() {\n    if (this.navigationChange) {\n      this.navigationChange.unsubscribe();\n    }\n\n    this.navigationService.unregisterCell(this.logicalColIndex, this.logicalRowIndex, this);\n  }\n\n  onNavigationChange(e) {\n    const active = this.logicalColIndex === e.colIndex && this.logicalRowIndex === e.rowIndex;\n    const wasActive = this.logicalColIndex === e.prevColIndex && this.logicalRowIndex === e.prevRowIndex;\n\n    if (active || wasActive) {\n      this.updateElement();\n    }\n  }\n\n  updateElement() {\n    const el = this.element.nativeElement;\n    this.renderer.setAttribute(el, 'tabIndex', this.isFocusable() && !this.logicalSlaveCell ? '0' : '-1');\n\n    if (this.isFocused()) {\n      if (this.focusGroup.isNavigable()) {\n        this.focusGroup.focus();\n      } else {\n        if (!this.logicalSlaveCell && this.navigationService.autoFocusCell(this.logicalColIndex, this.logicalColIndex + this.colSpan - 1)) {\n          this.microtask(() => this.isFocused() && el.focus());\n        }\n\n        this.renderer.addClass(el, 'k-focus');\n      }\n\n      if (this.headerLabelText) {\n        el.setAttribute('aria-label', '');\n      }\n    } else {\n      this.renderer.removeClass(el, 'k-focus');\n\n      if (this.headerLabelText) {\n        el.setAttribute('aria-label', this.headerLabelText);\n      }\n    }\n  }\n\n  microtask(callback) {\n    this.zone.runOutsideAngular(() => Promise.resolve(null).then(callback));\n  }\n\n  registerChanges() {\n    if (!this.logicalSlaveCell) {\n      this.navigationService.registerCell(this);\n    }\n  }\n\n  registerNoChanges() {\n    if (!this.logicalSlaveCell) {\n      this.navigationService.registerCellOnCurrentRow(this);\n    }\n  }\n\n  isFocusable() {\n    return this.navigationService.isCellFocusable(this);\n  }\n\n  isFocused() {\n    return this.navigationService.isCellFocused(this);\n  }\n\n}\n\nLogicalCellDirective.ɵfac = function LogicalCellDirective_Factory(t) {\n  return new (t || LogicalCellDirective)(i0.ɵɵdirectiveInject(FocusGroup), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ColumnInfoService), i0.ɵɵdirectiveInject(IdService), i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(CELL_CONTEXT, 8));\n};\n\nLogicalCellDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LogicalCellDirective,\n  selectors: [[\"\", \"kendoGridLogicalCell\", \"\"]],\n  hostVars: 2,\n  hostBindings: function LogicalCellDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"id\", ctx.id)(\"aria-colindex\", ctx.ariaColIndex);\n    }\n  },\n  inputs: {\n    logicalColIndex: \"logicalColIndex\",\n    logicalRowIndex: \"logicalRowIndex\",\n    logicalSlaveCell: \"logicalSlaveCell\",\n    colIndex: \"colIndex\",\n    colSpan: \"colSpan\",\n    rowSpan: \"rowSpan\",\n    groupItem: \"groupItem\",\n    dataRowIndex: \"dataRowIndex\",\n    dataItem: \"dataItem\",\n    detailExpandCell: \"detailExpandCell\",\n    headerLabelText: \"headerLabelText\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: FocusGroup,\n    deps: [FocusRoot],\n    useClass: FocusGroup\n  }]), i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LogicalCellDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: FocusGroup,\n        deps: [FocusRoot],\n        useClass: FocusGroup\n      }],\n      selector: '[kendoGridLogicalCell]'\n    }]\n  }], function () {\n    return [{\n      type: FocusGroup\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: ColumnInfoService\n    }, {\n      type: IdService\n    }, {\n      type: NavigationService\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [CELL_CONTEXT]\n      }]\n    }];\n  }, {\n    logicalColIndex: [{\n      type: Input\n    }],\n    logicalRowIndex: [{\n      type: Input\n    }],\n    logicalSlaveCell: [{\n      type: Input\n    }],\n    colIndex: [{\n      type: Input\n    }],\n    colSpan: [{\n      type: Input\n    }],\n    rowSpan: [{\n      type: Input\n    }],\n    groupItem: [{\n      type: Input\n    }],\n    dataRowIndex: [{\n      type: Input\n    }],\n    dataItem: [{\n      type: Input\n    }],\n    detailExpandCell: [{\n      type: Input\n    }],\n    headerLabelText: [{\n      type: Input\n    }],\n    id: [{\n      type: HostBinding,\n      args: ['attr.id']\n    }],\n    ariaColIndex: [{\n      type: HostBinding,\n      args: ['attr.aria-colindex']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass FilterRowComponent {\n  constructor(localization, columnInfoService) {\n    this.localization = localization;\n    this.columnInfoService = columnInfoService;\n    this.columns = [];\n    this.groups = [];\n    this.filterRowClass = true;\n  }\n\n  addStickyStyles(column) {\n    const sticky = column.sticky ? this.columnInfoService.stickyColumnsStyles(column) : null;\n    return Object.assign(Object.assign({}, sticky), column.filterStyle);\n  }\n\n  filterLabel(column) {\n    const localizationMsg = this.localization.get('filterInputLabel') || '';\n    const columnName = column.title || column.field;\n    return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n  }\n\n}\n\nFilterRowComponent.ɵfac = function FilterRowComponent_Factory(t) {\n  return new (t || FilterRowComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(ColumnInfoService));\n};\n\nFilterRowComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FilterRowComponent,\n  selectors: [[\"\", \"kendoGridFilterRow\", \"\"]],\n  hostVars: 2,\n  hostBindings: function FilterRowComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-filter-row\", ctx.filterRowClass);\n    }\n  },\n  inputs: {\n    columns: \"columns\",\n    filter: \"filter\",\n    groups: \"groups\",\n    detailTemplate: \"detailTemplate\",\n    logicalRowIndex: \"logicalRowIndex\",\n    lockedColumnsCount: \"lockedColumnsCount\"\n  },\n  attrs: _c29,\n  decls: 3,\n  vars: 3,\n  consts: [[\"role\", \"presentation\", 3, \"k-group-cell\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"presentation\", 3, \"k-hierarchy-cell\", 4, \"ngIf\"], [\"kendoGridFilterCell\", \"\", \"kendoGridLogicalCell\", \"\", 3, \"k-grid-header-sticky\", \"ngStyle\", \"ngClass\", \"column\", \"filter\", \"logicalRowIndex\", \"logicalColIndex\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"presentation\"], [\"kendoGridFilterCell\", \"\", \"kendoGridLogicalCell\", \"\", 3, \"ngStyle\", \"ngClass\", \"column\", \"filter\", \"logicalRowIndex\", \"logicalColIndex\"]],\n  template: function FilterRowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FilterRowComponent_td_0_Template, 1, 2, \"td\", 0);\n      i0.ɵɵtemplate(1, FilterRowComponent_td_1_Template, 1, 2, \"td\", 1);\n      i0.ɵɵtemplate(2, FilterRowComponent_td_2_Template, 1, 9, \"td\", 2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.groups);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.detailTemplate == null ? null : ctx.detailTemplate.templateRef);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.columns);\n    }\n  },\n  directives: [i4.NgForOf, i4.NgIf, FilterCellComponent, LogicalCellDirective, i4.NgStyle, i4.NgClass],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterRowComponent, [{\n    type: Component,\n    args: [{\n      selector: '[kendoGridFilterRow]',\n      template: `\n        <td\n            [class.k-group-cell]=\"true\"\n            *ngFor=\"let g of groups\"\n            role=\"presentation\">\n        </td>\n        <td\n            [class.k-hierarchy-cell]=\"true\"\n            *ngIf=\"detailTemplate?.templateRef\"\n            role=\"presentation\">\n        </td>\n        <td *ngFor=\"let column of columns; let columnIndex = index\"\n            [class.k-grid-header-sticky]=\"column.sticky\"\n            [ngStyle]=\"addStickyStyles(column)\"\n            [ngClass]=\"column.filterClass\"\n            [attr.aria-label]=\"filterLabel($any(column))\"\n            kendoGridFilterCell\n                [column]=\"$any(column)\"\n                [filter]=\"filter\"\n            kendoGridLogicalCell\n                [logicalRowIndex]=\"logicalRowIndex\"\n                [logicalColIndex]=\"lockedColumnsCount + columnIndex\"\n      ></td>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: ColumnInfoService\n    }];\n  }, {\n    columns: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    groups: [{\n      type: Input\n    }],\n    detailTemplate: [{\n      type: Input\n    }],\n    logicalRowIndex: [{\n      type: Input\n    }],\n    lockedColumnsCount: [{\n      type: Input\n    }],\n    filterRowClass: [{\n      type: HostBinding,\n      args: ['class.k-filter-row']\n    }]\n  });\n})();\n\nlet id = 0;\n\nfunction nextId() {\n  return id++;\n}\n/**\n * @hidden\n */\n\n\nclass LogicalRowDirective {\n  constructor(idService, navigation) {\n    this.idService = idService;\n    this.navigation = navigation;\n    this.logicalSlaveRow = false;\n    this.logicalSlaveCellsCount = 0;\n    this.dataRowIndex = -1;\n    this.uid = nextId();\n  }\n\n  get hostRole() {\n    return this.logicalSlaveRow ? 'presentation' : 'row';\n  }\n\n  get ariaRowIndex() {\n    return this.logicalRowIndex + 1;\n  }\n\n  get ariaOwns() {\n    if (!this.navigation.enabled || this.logicalSlaveRow || this.logicalSlaveCellsCount === 0) {\n      return undefined;\n    }\n\n    const ids = [];\n    const total = this.logicalCellsCount + this.logicalSlaveCellsCount;\n\n    for (let cellIndex = this.logicalCellsCount; cellIndex < total; cellIndex++) {\n      ids.push(this.idService.cellId(this.logicalRowIndex, cellIndex));\n    }\n\n    return ids.join(' ');\n  }\n\n  ngOnChanges(changes) {\n    if (!this.navigation.enabled || this.logicalSlaveRow) {\n      return;\n    }\n\n    const indexChange = changes.logicalRowIndex;\n    const logicalSlaveRowChange = changes.logicalSlaveRow;\n\n    if (indexChange || logicalSlaveRowChange) {\n      const index = indexChange && !indexChange.isFirstChange() ? indexChange.previousValue : this.logicalRowIndex;\n      this.navigation.unregisterRow(index, this);\n      this.navigation.registerRow(this);\n    } else if (anyChanged(['dataRowIndex', 'dataItem'], changes)) {\n      this.navigation.updateRow(this);\n    }\n  }\n\n  ngOnDestroy() {\n    this.navigation.unregisterRow(this.logicalRowIndex, this);\n  }\n\n}\n\nLogicalRowDirective.ɵfac = function LogicalRowDirective_Factory(t) {\n  return new (t || LogicalRowDirective)(i0.ɵɵdirectiveInject(IdService), i0.ɵɵdirectiveInject(NavigationService));\n};\n\nLogicalRowDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LogicalRowDirective,\n  selectors: [[\"\", \"kendoGridLogicalRow\", \"\"]],\n  hostVars: 3,\n  hostBindings: function LogicalRowDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"role\", ctx.hostRole)(\"aria-rowindex\", ctx.ariaRowIndex)(\"aria-owns\", ctx.ariaOwns);\n    }\n  },\n  inputs: {\n    logicalRowIndex: \"logicalRowIndex\",\n    logicalSlaveRow: \"logicalSlaveRow\",\n    logicalCellsCount: \"logicalCellsCount\",\n    logicalSlaveCellsCount: \"logicalSlaveCellsCount\",\n    dataRowIndex: \"dataRowIndex\",\n    dataItem: \"dataItem\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LogicalRowDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridLogicalRow]'\n    }]\n  }], function () {\n    return [{\n      type: IdService\n    }, {\n      type: NavigationService\n    }];\n  }, {\n    logicalRowIndex: [{\n      type: Input\n    }],\n    logicalSlaveRow: [{\n      type: Input\n    }],\n    logicalCellsCount: [{\n      type: Input\n    }],\n    logicalSlaveCellsCount: [{\n      type: Input\n    }],\n    dataRowIndex: [{\n      type: Input\n    }],\n    dataItem: [{\n      type: Input\n    }],\n    hostRole: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    ariaRowIndex: [{\n      type: HostBinding,\n      args: ['attr.aria-rowindex']\n    }],\n    ariaOwns: [{\n      type: HostBinding,\n      args: ['attr.aria-owns']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass TemplateContextDirective {\n  constructor(viewContainerRef) {\n    this.viewContainerRef = viewContainerRef;\n  }\n\n  set templateContext(context) {\n    this.removeView();\n\n    if (context.templateRef) {\n      this.insertedViewRef = this.viewContainerRef.createEmbeddedView(context.templateRef, context);\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeView();\n  }\n\n  removeView() {\n    if (this.insertedViewRef) {\n      this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.insertedViewRef));\n      this.insertedViewRef = undefined;\n    }\n  }\n\n}\n\nTemplateContextDirective.ɵfac = function TemplateContextDirective_Factory(t) {\n  return new (t || TemplateContextDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n};\n\nTemplateContextDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TemplateContextDirective,\n  selectors: [[\"\", \"templateContext\", \"\"]],\n  inputs: {\n    templateContext: \"templateContext\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplateContextDirective, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: '[templateContext]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ViewContainerRef\n    }];\n  }, {\n    templateContext: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents the select-all checkbox feature of the Grid ([see example]({% slug selection_grid %}#toc-select-all-feature)).\n */\n\n\nclass SelectAllCheckboxDirective {\n  constructor(selectionService, el, renderer, ngZone) {\n    this.selectionService = selectionService;\n    this.el = el;\n    this.renderer = renderer;\n    this.ngZone = ngZone;\n    /**\n     * Fires when the user clicks the `kendoGridSelectAllCheckbox` select-all checkbox\n     * ([see example]({% slug selection_grid %}#toc-select-all-feature)).\n     */\n\n    this.selectAllChange = new EventEmitter();\n    this.type = 'checkbox';\n    this.stateSet = false;\n    this.ngZone.runOutsideAngular(() => {\n      this.destroyClick = this.renderer.listen(this.el.nativeElement, 'click', this.onClick.bind(this));\n    });\n  }\n\n  ngAfterContentChecked() {\n    this.setState();\n  }\n\n  ngOnChanges() {\n    this.stateSet = true;\n  }\n\n  ngOnDestroy() {\n    if (this.destroyClick) {\n      this.destroyClick();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  onClick() {\n    // yields consistent cross-browser behavior when clicking an indeterminate checkbox\n    const undefinedCheckedStateInIE = detectIE() && this.selectionService.selectAllState === undefined;\n    const isChecked = undefinedCheckedStateInIE ? true : this.el.nativeElement.checked;\n    const options = this.selectionService.options;\n    const enabledAndMultiple = options.enabled && options.mode === 'multiple';\n    const shouldEmitSelectAll = hasObservers(this.selectAllChange);\n\n    if (enabledAndMultiple || shouldEmitSelectAll) {\n      this.ngZone.run(() => {\n        if (enabledAndMultiple) {\n          this.selectionService.updateAll(isChecked);\n        }\n\n        if (shouldEmitSelectAll) {\n          this.selectAllChange.emit(isChecked ? 'checked' : 'unchecked');\n        }\n      });\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  setState() {\n    const state = this.stateSet ? this.stateToBool() : this.selectionService.selectAllState;\n    const elem = this.el.nativeElement;\n    this.renderer.setProperty(elem, 'indeterminate', !isPresent(state));\n    this.renderer.setProperty(elem, 'checked', isPresent(state) ? state : false);\n  }\n  /**\n   * @hidden\n   */\n\n\n  stateToBool() {\n    switch (this.state) {\n      case 'checked':\n        return true;\n\n      case 'unchecked':\n        return false;\n\n      default:\n        return undefined;\n    }\n  }\n\n}\n\nSelectAllCheckboxDirective.ɵfac = function SelectAllCheckboxDirective_Factory(t) {\n  return new (t || SelectAllCheckboxDirective)(i0.ɵɵdirectiveInject(SelectionService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nSelectAllCheckboxDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: SelectAllCheckboxDirective,\n  selectors: [[\"\", \"kendoGridSelectAllCheckbox\", \"\"]],\n  hostVars: 1,\n  hostBindings: function SelectAllCheckboxDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"type\", ctx.type);\n    }\n  },\n  inputs: {\n    state: \"state\"\n  },\n  outputs: {\n    selectAllChange: \"selectAllChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectAllCheckboxDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridSelectAllCheckbox]'\n    }]\n  }], function () {\n    return [{\n      type: SelectionService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    state: [{\n      type: Input\n    }],\n    selectAllChange: [{\n      type: Output\n    }],\n    type: [{\n      type: HostBinding,\n      args: ['attr.type']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nconst fromPercentage = (value, percent) => {\n  const sign = percent < 0 ? -1 : 1;\n  return Math.ceil(Math.abs(percent) / 100 * value) * sign;\n};\n/**\n * @hidden\n */\n\n\nconst toPercentage = (value, whole) => value / whole * 100;\n/**\n * @hidden\n */\n\n\nconst headerWidth = handle => handle.nativeElement.parentElement.offsetWidth;\n/**\n * @hidden\n */\n\n\nconst allLeafColumns = columns => expandColumns(columns).filter(c => !c.isColumnGroup);\n/**\n * @hidden\n */\n\n\nconst stopPropagation = ({\n  originalEvent: event\n}) => {\n  event.stopPropagation();\n  event.preventDefault();\n};\n/**\n * @hidden\n */\n\n\nconst createMoveStream = (service, draggable) => mouseDown => draggable.kendoDrag.pipe( // eslint-disable-next-line rxjs/no-unsafe-takeuntil\ntakeUntil(draggable.kendoRelease.pipe(tap(() => service.end()))), map(({\n  pageX\n}) => ({\n  originalX: mouseDown.pageX,\n  pageX\n})));\n/**\n * @hidden\n */\n\n\nconst preventOnDblClick = release => mouseDown => of(mouseDown).pipe(delay(150), takeUntil(release));\n/**\n * @hidden\n */\n\n\nconst isInSpanColumn = column => !!(column.parent && column.parent.isSpanColumn);\n/**\n * @hidden\n *\n * Calculates the column index. If the column is stated in `SpanColumn`,\n * the index for all child columns equals the index of the first child.\n */\n\n\nconst indexOf = (target, list) => {\n  let index = 0;\n  let ignore = 0;\n  let skip = 0;\n\n  while (index < list.length) {\n    const current = list[index];\n    const isParentSpanColumn = isInSpanColumn(current);\n\n    if (current === target) {\n      break;\n    }\n\n    if (ignore-- <= 0 && isParentSpanColumn) {\n      ignore = current.parent.childColumns.length - 1;\n      skip += ignore;\n    }\n\n    index++;\n  }\n\n  return index - skip;\n};\n/**\n * @hidden\n */\n\n\nclass ColumnHandleDirective {\n  constructor(draggable, element, service, zone, cdr, localization, columnInfoService) {\n    this.draggable = draggable;\n    this.element = element;\n    this.service = service;\n    this.zone = zone;\n    this.cdr = cdr;\n    this.localization = localization;\n    this.columnInfoService = columnInfoService;\n    this.columns = [];\n    this.subscriptions = new Subscription();\n    this.rtl = false;\n  }\n\n  get visible() {\n    return this.column.resizable ? 'block' : 'none';\n  }\n\n  get leftStyle() {\n    return isTruthy(this.rtl) ? 0 : null;\n  }\n\n  get rightStyle() {\n    return isTruthy(this.rtl) ? null : 0;\n  }\n\n  autoFit() {\n    const allLeafs = allLeafColumns(this.columns);\n    const currentLeafs = leafColumns([this.column]).filter(column => isTruthy(column.resizable));\n    const columnInfo = currentLeafs.map(column => {\n      const isParentSpan = isInSpanColumn(column);\n      const isLastInSpan = isParentSpan ? column.parent.childColumns.last === column : false;\n      const index = indexOf(column, allLeafs);\n      return {\n        column,\n        headerIndex: this.columnsForLevel(column.level).indexOf(column),\n        index,\n        isLastInSpan,\n        isParentSpan,\n        level: column.level\n      };\n    });\n    currentLeafs.forEach(column => column.width = 0);\n    this.service.measureColumns(columnInfo);\n  }\n\n  ngOnInit() {\n    if (isBlank(this.column.width)) {\n      this.column.implicitWidth = headerWidth(this.element);\n    }\n\n    const service = this.service.changes.pipe(filter(() => this.column.resizable), filter(e => isPresent(e.columns.find(column => column === this.column))));\n    this.subscriptions.add(service.pipe(filter(e => e.type === 'start')).subscribe(this.initState.bind(this)));\n    this.subscriptions.add(service.pipe(filter(e => e.type === 'resizeColumn')).subscribe(this.resize.bind(this)));\n    this.subscriptions.add(this.service.changes.pipe(filter(e => e.type === 'start'), filter(this.shouldUpdate.bind(this)), take(1) //on first resize only\n    ).subscribe(this.initColumnWidth.bind(this)));\n    this.subscriptions.add(this.zone.runOutsideAngular(() => this.draggable.kendoPress.pipe(tap(stopPropagation), tap(() => this.service.start(this.column)), switchMap(preventOnDblClick(this.draggable.kendoRelease)), switchMap(createMoveStream(this.service, this.draggable))).subscribe(({\n      pageX,\n      originalX\n    }) => {\n      const delta = pageX - originalX;\n      const percent = toPercentage(delta, this.column.resizeStartWidth || this.column.width);\n      this.service.resizeColumns(percent);\n    })));\n    this.subscriptions.add(service.pipe(filter(e => e.type === 'autoFitComplete')).subscribe(this.sizeToFit.bind(this)));\n    this.subscriptions.add(service.pipe(filter(e => e.type === 'triggerAutoFit')).subscribe(this.autoFit.bind(this)));\n    this.subscriptions.add(this.localization.changes.subscribe(({\n      rtl\n    }) => this.rtl = rtl));\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n  }\n\n  shouldUpdate() {\n    return !allLeafColumns(this.columns).map(column => column.width).some(isBlank);\n  }\n\n  initColumnWidth() {\n    this.column.width = headerWidth(this.element);\n  }\n\n  initState() {\n    this.column.resizeStartWidth = headerWidth(this.element);\n    this.service.resizedColumn({\n      column: this.column,\n      oldWidth: this.column.resizeStartWidth\n    });\n  }\n\n  resize({\n    deltaPercent\n  }) {\n    let delta = fromPercentage(this.column.resizeStartWidth, deltaPercent);\n\n    if (isTruthy(this.rtl)) {\n      delta *= -1;\n    }\n\n    let newWidth = Math.max(this.column.resizeStartWidth + delta, this.column.minResizableWidth);\n\n    if (isPresent(this.column.maxResizableWidth)) {\n      newWidth = Math.min(newWidth, this.column.maxResizableWidth);\n    }\n\n    const tableDelta = this.getTableDelta(newWidth, delta);\n    this.updateWidth(this.column, newWidth);\n    this.service.resizeTable(this.column, tableDelta);\n  }\n\n  sizeToFit({\n    columns,\n    widths\n  }) {\n    const index = columns.indexOf(this.column);\n    const width = Math.max(...widths.map(w => w[index])) + 1; //add 1px for IE\n\n    const tableDelta = width - this.column.resizeStartWidth;\n    this.updateWidth(this.column, width);\n    this.service.resizeTable(this.column, tableDelta);\n  }\n\n  updateWidth(column, width) {\n    column.width = width;\n    this.columnInfoService.hiddenColumns.forEach(col => {\n      if (isBlank(col.width) && isPresent(col.implicitWidth)) {\n        // Resize hidden columns to their implicit width so they\n        // can be displayed with the same width if made visible.\n        col.width = col.implicitWidth;\n      }\n    });\n    this.cdr.markForCheck(); //force CD cycle\n  }\n\n  columnsForLevel(level) {\n    return columnsToRender(this.columns ? this.columns.filter(column => column.level === level) : []);\n  }\n\n  getTableDelta(newWidth, delta) {\n    const minWidth = this.column.minResizableWidth;\n    const maxWidth = this.column.maxResizableWidth;\n    const startWidth = this.column.resizeStartWidth;\n    const isAboveMin = newWidth > minWidth;\n    const isBelowMax = newWidth < maxWidth;\n    const isInBoundaries = isPresent(maxWidth) ? isAboveMin && isBelowMax : isAboveMin;\n\n    if (isInBoundaries) {\n      return delta;\n    } else if (newWidth <= minWidth) {\n      return minWidth - startWidth;\n    } else {\n      return startWidth - maxWidth;\n    }\n  }\n\n}\n\nColumnHandleDirective.ɵfac = function ColumnHandleDirective_Factory(t) {\n  return new (t || ColumnHandleDirective)(i0.ɵɵdirectiveInject(i1$1.DraggableDirective, 1), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ColumnResizingService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(ColumnInfoService));\n};\n\nColumnHandleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ColumnHandleDirective,\n  selectors: [[\"\", \"kendoGridColumnHandle\", \"\"]],\n  hostVars: 6,\n  hostBindings: function ColumnHandleDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"dblclick\", function ColumnHandleDirective_dblclick_HostBindingHandler() {\n        return ctx.autoFit();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"display\", ctx.visible)(\"left\", ctx.leftStyle)(\"right\", ctx.rightStyle);\n    }\n  },\n  inputs: {\n    columns: \"columns\",\n    column: \"column\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnHandleDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridColumnHandle]'\n    }]\n  }], function () {\n    return [{\n      type: i1$1.DraggableDirective,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: ColumnResizingService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: ColumnInfoService\n    }];\n  }, {\n    columns: [{\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }],\n    visible: [{\n      type: HostBinding,\n      args: ['style.display']\n    }],\n    leftStyle: [{\n      type: HostBinding,\n      args: ['style.left']\n    }],\n    rightStyle: [{\n      type: HostBinding,\n      args: ['style.right']\n    }],\n    autoFit: [{\n      type: HostListener,\n      args: ['dblclick']\n    }]\n  });\n})();\n\nconst mergeObjects = (...args) => Object.assign.apply(null, [{}].concat(args));\n\nconst directions = initialDirection => initialDirection === \"asc\" ? [\"asc\", \"desc\"] : [\"desc\", \"asc\"];\n/**\n * @hidden\n */\n\n\nconst isRootLevel = ({\n  parent\n}) => !isTruthy(parent);\n\nconst ofColumnType = ({\n  draggable\n}) => ['column', 'columnGroup'].indexOf(draggable.context.type) >= 0;\n\nconst notSameElement = ({\n  draggable,\n  target\n}) => draggable.element.nativeElement !== target.element.nativeElement;\n\nconst inSameParent = (x, y) => x.parent === y.parent || isInSpanColumn$1(y) && inSameParent(x, y.parent);\n\nconst sameParent = ({\n  draggable,\n  target\n}) => inSameParent(draggable.context.column, target.context.column);\n\nconst lastNonLocked = ({\n  draggable\n}) => !isTruthy(draggable.context.column.locked) && isRootLevel(draggable.context.column) && draggable.context.lastColumn;\n\nconst notInSpanColumn = ({\n  draggable\n}) => !isInSpanColumn$1(draggable.context.column);\n\nconst reorderable = ({\n  draggable\n}) => draggable.context.column.reorderable;\n\nconst lockable = ({\n  draggable,\n  target\n}) => draggable.context.column.lockable !== false || draggable.context.column.isLocked === target.context.column.isLocked;\n\nconst rules = and(ofColumnType, reorderable, notInSpanColumn, notSameElement, sameParent, not(lastNonLocked), lockable);\nconst modifierKeys = ['alt', 'ctrl', 'shift', 'meta'];\n/**\n * @hidden\n */\n\nclass HeaderComponent {\n  constructor(popupService, hint, cue, reorderService, idService, sortService, localization, columnInfoService, cd) {\n    this.popupService = popupService;\n    this.hint = hint;\n    this.cue = cue;\n    this.reorderService = reorderService;\n    this.idService = idService;\n    this.sortService = sortService;\n    this.localization = localization;\n    this.columnInfoService = columnInfoService;\n    this.cd = cd;\n    this.columns = [];\n    this.groups = [];\n    this.sort = new Array();\n    this.sortable = false;\n    this.groupable = false;\n    this.lockedColumnsCount = 0;\n    this.resizable = false;\n    this.reorderable = false;\n    this.columnMenu = false;\n    this.totalColumnsCount = 0;\n    this.sortedFields = {};\n    this.dropTargets = new QueryList();\n    this.subscription = new Subscription();\n  }\n\n  get headerClass() {\n    return !this.scrollable;\n  }\n\n  get sortableLabel() {\n    return this.localization.get('sortable');\n  }\n\n  get columnMenuSettings() {\n    return this.columnMenu;\n  } // Number of unlocked columns in the next table, if any\n\n\n  get unlockedColumnsCount() {\n    return this.totalColumnsCount - this.lockedColumnsCount - this.columns.length;\n  }\n\n  sortColumn(descriptor) {\n    this.sortService.sort(descriptor);\n  }\n\n  getColumnComponent(column) {\n    return column;\n  }\n\n  onSortClick(column, event, link) {\n    const target = event.target;\n\n    if (column.headerTemplateRef && target !== link) {\n      const hasFocusableParent = Boolean(closestInScope(target, isFocusable, link));\n\n      if (hasFocusableParent) {\n        // Do not sort when clicking focusable template elements.\n        return;\n      }\n    }\n\n    const modifier = this.matchModifier(event);\n    const toggledColumn = this.toggleSort(column, modifier);\n    this.sortColumn(toggledColumn);\n  }\n\n  onHeaderKeydown(column, args) {\n    if (args.keyCode === Keys.ArrowDown && args.altKey && this.showFilterMenu) {\n      args.preventDefault();\n      args.stopImmediatePropagation();\n      const filterMenu = this.filterMenus.find(fm => fm.column === column);\n      filterMenu.toggle(filterMenu.anchor.nativeElement, filterMenu.template);\n    }\n\n    if (args.keyCode === Keys.ArrowDown && args.altKey && this.showColumnMenu(column)) {\n      args.preventDefault();\n      args.stopImmediatePropagation();\n      const columnMenu = this.columnMenus.find(cm => cm.column === column);\n      columnMenu.toggle(null, columnMenu.anchor.nativeElement, columnMenu.template);\n    }\n\n    if (!this.sortable || args.defaultPrevented || column.sortable === false) {\n      return;\n    }\n\n    if (args.keyCode === Keys.Enter && isPresent(column.field)) {\n      const modifier = this.matchModifier(args);\n      this.sortService.sort(this.toggleSort(column, modifier));\n    }\n  }\n\n  showSortNumbering(column) {\n    const {\n      showIndexes\n    } = normalize(this.sortable);\n    return showIndexes && this.sort && this.sort.filter(({\n      dir\n    }) => isPresent(dir)).length > 1 && this.sortOrder(column.field) > 0;\n  }\n\n  sortOrder(field) {\n    return this.sort.filter(({\n      dir\n    }) => isPresent(dir)).findIndex(x => x.field === field) + 1;\n  }\n\n  sortIcon(field) {\n    const state = this.sortDescriptor(field);\n    return {\n      'k-icon': isPresent(state.dir),\n      'k-i-sort-desc-small': state.dir === \"desc\",\n      'k-i-sort-asc-small': state.dir === \"asc\"\n    };\n  }\n\n  sortState(column) {\n    if (!this.isSortable(column)) {\n      return;\n    }\n\n    const state = this.sortDescriptor(column.field);\n\n    if (state.dir === 'asc') {\n      return 'ascending';\n    }\n\n    if (state.dir === 'desc') {\n      return 'descending';\n    }\n  }\n\n  sortStatus(column) {\n    if (!this.sortedFields[column.field] || !this.isSortable(column)) {\n      return;\n    }\n\n    let msg = 'sortedDefault';\n    const state = this.sortDescriptor(column.field);\n\n    if (state.dir === 'asc') {\n      msg = 'sortedAscending';\n    } else if (state.dir === 'desc') {\n      msg = 'sortedDescending';\n    }\n\n    return this.localization.get(msg);\n  }\n  /**\n   *\n   * @param column\n   * @param modifier - Indicates whether the client-defined `multiSortKey` modifier is met. Defaults to `true`.\n   * @returns - SortDescriptor[]\n   */\n\n\n  toggleSort(column, modifier = true) {\n    const {\n      allowUnsort,\n      mode,\n      initialDirection\n    } = normalize(this.sortable, column.sortable);\n    const descriptor = this.toggleDirection(column.field, allowUnsort, initialDirection);\n\n    if (mode === 'single' || !modifier) {\n      return [descriptor];\n    }\n\n    return [...this.sort.filter(desc => desc.field !== column.field), descriptor];\n  }\n  /**\n   *\n   * Determines whether the modifier key (if any) passed\n   * with a click/keyboard event matches the user-defined multiSortKey.\n   */\n\n\n  matchModifier(event) {\n    const {\n      multiSortKey\n    } = normalize(this.sortable);\n\n    if (multiSortKey === 'none') {\n      return modifierKeys.every(key => !event[`${key}Key`]);\n    }\n\n    return multiSortKey === 'ctrl' ? event.ctrlKey || event.metaKey : event[`${multiSortKey}Key`];\n  }\n\n  ngAfterViewInit() {\n    this.subscription.add(observe(this.dropTargets).subscribe(this.attachTargets.bind(this)));\n  }\n\n  ngDoCheck() {\n    this._leafColumns = columnsToRender(this.columns || []).filter(x => !isColumnGroupComponent(x));\n  }\n\n  ngOnChanges(changes) {\n    const sortChange = changes.sort;\n\n    if (sortChange && !sortChange.isFirstChange()) {\n      sortChange.currentValue.forEach(change => {\n        this.sortedFields[change.field] = true;\n      });\n    }\n  }\n\n  ngOnInit() {\n    this.subscription.add(this.localization.changes.subscribe(() => this.cd.markForCheck()));\n  }\n\n  ngOnDestroy() {\n    if (this.targetSubscription) {\n      this.targetSubscription.unsubscribe();\n    }\n\n    if (this.popupService) {\n      this.popupService.destroy();\n    }\n\n    this.subscription.unsubscribe();\n  }\n\n  selectAllCheckboxId() {\n    return this.idService.selectAllCheckboxId();\n  }\n\n  get selectAllCheckboxLabel() {\n    return this.localization.get('selectAllCheckboxLabel');\n  }\n\n  isFirstOnRow(column, index) {\n    const isTailing = c => c && (this.columnsForLevel(c.level).indexOf(c) > 0 || isTailing(c.parent));\n\n    return index === 0 && !this.groups.length && !this.detailTemplate && isTailing(column.parent);\n  }\n\n  logicalColumnIndex(column) {\n    const index = column.leafIndex;\n\n    if (isPresent(index)) {\n      return index + (isPresent(this.detailTemplate) ? 1 : 0);\n    }\n\n    return -1;\n  }\n\n  get showFilterMenu() {\n    return !this.columnMenu && hasFilterMenu(this.filterable);\n  }\n\n  get showFilterRow() {\n    return hasFilterRow(this.filterable);\n  }\n\n  showColumnMenu(column) {\n    return this.columnMenu && column.columnMenu && (this.columnMenuTemplate || column.columnMenuTemplates.length || hasItems(this.columnMenu, column));\n  }\n\n  isFilterable(column) {\n    return !isNullOrEmptyString(column.field) && column.filterable === true;\n  }\n\n  canDrop(draggable, target) {\n    return this.reorderable && rules({\n      draggable,\n      target\n    });\n  }\n\n  shouldActivate(column) {\n    const canReorder = this.reorderable && column.reorderable;\n\n    if (!canReorder && !isColumnComponent(column)) {\n      return false;\n    }\n\n    const groupable = this.groupable && isColumnComponent(column) && column.groupable !== false;\n    return groupable || canReorder;\n  }\n\n  isSortable(column) {\n    return !isNullOrEmptyString(column.field) && isTruthy(this.sortable) && isTruthy(column.sortable);\n  }\n\n  isCheckboxColumn(column) {\n    return isCheckboxColumn(column) && !column.templateRef;\n  }\n\n  trackByIndex(index, _item) {\n    return index;\n  }\n\n  addStickyStyles(column) {\n    const stickyStyles = this.columnInfoService.stickyColumnsStyles(column);\n    return Object.assign(Object.assign({}, column.style), stickyStyles);\n  }\n\n  toggleDirection(field, allowUnsort, initialDirection) {\n    const descriptor = this.sortDescriptor(field);\n    const [first, second] = directions(initialDirection);\n    let dir = first;\n\n    if (descriptor.dir === first) {\n      dir = second;\n    } else if (descriptor.dir === second && allowUnsort) {\n      dir = undefined;\n    }\n\n    return {\n      dir,\n      field\n    };\n  }\n\n  columnsForLevel(level) {\n    const columns = this.columns ? this.columns.filter(column => column.level === level) : [];\n    return sortColumns(columnsToRender(columns));\n  }\n\n  isColumnGroupComponent(column) {\n    return isColumnGroupComponent(column);\n  }\n\n  get columnLevels() {\n    return new Array((this.totalColumnLevels || 0) + 1);\n  }\n\n  sortDescriptor(field) {\n    return this.sort.find(item => item.field === field) || {\n      field\n    };\n  }\n\n  get leafColumns() {\n    return this._leafColumns;\n  }\n\n  attachTargets() {\n    if (this.targetSubscription) {\n      this.targetSubscription.unsubscribe();\n    }\n\n    this.targetSubscription = new Subscription();\n    const enterStream = merge(...this.dropTargets.map(target => target.enter));\n    const leaveStream = merge(...this.dropTargets.map(target => target.leave));\n    const dropStream = merge(...this.dropTargets.map(target => target.drop));\n    this.targetSubscription.add(enterStream.pipe(tap(({\n      target,\n      draggable\n    }) => {\n      if (draggable.context.type === 'groupIndicator') {\n        return;\n      }\n\n      const targetLocked = isTruthy(target.context.column.isLocked);\n      const draggableLocked = isTruthy(draggable.context.column.isLocked);\n\n      if (this.lockedColumnsCount > 0 || targetLocked || draggableLocked) {\n        this.hint.toggleLock(targetLocked);\n      }\n    }), filter(({\n      draggable,\n      target\n    }) => this.canDrop(draggable, target)), switchMap(this.trackMove.bind(this, leaveStream, dropStream)), map(e => mergeObjects(e, {\n      before: this.calculateBefore(e),\n      changeContainer: e.changeContainer\n    })), map(this.normalizeTarget.bind(this)), tap(this.enter.bind(this)), switchMap(args => dropStream.pipe(map(() => args), takeUntil(leaveStream.pipe(tap(this.leave.bind(this))))))).subscribe(this.drop.bind(this)));\n  }\n\n  normalizeTarget(e) {\n    let target = e.target;\n    const parent = target.context.column.parent;\n\n    if (parent && parent.isSpanColumn) {\n      const arr = this.dropTargets.toArray();\n      const firstSpan = arr.find(t => t.context.column.parent === parent);\n      const index = arr.indexOf(firstSpan);\n      const adjust = e.before ? 0 : parent.childColumns.length - 1;\n      target = arr[index + adjust];\n    }\n\n    return mergeObjects(e, {\n      target\n    });\n  }\n\n  trackMove(leaveStream, dropStream, e) {\n    const column = e.target.context.column;\n    const levelColumns = this.columnsForLevel(column.level);\n    const index = levelColumns.indexOf(column);\n    const isFirst = column.locked ? index === levelColumns.length - 1 : index === 0;\n    const changed = e.draggable.context.column.isLocked !== column.isLocked;\n\n    if (changed && isFirst) {\n      return e.draggable.drag.pipe(takeUntil(leaveStream), takeUntil(dropStream), map(({\n        mouseEvent\n      }) => mergeObjects({\n        changeContainer: true\n      }, e, {\n        mouseEvent\n      })));\n    }\n\n    return of(mergeObjects({\n      changeContainer: changed\n    }, e));\n  }\n\n  calculateBefore({\n    draggable,\n    target,\n    mouseEvent,\n    changeContainer = false\n  }) {\n    const targetElement = target.element.nativeElement;\n    let before = false;\n\n    if (changeContainer) {\n      const {\n        left\n      } = offset(targetElement);\n      const halfWidth = targetElement.offsetWidth / 2;\n      const middle = left + halfWidth;\n      before = middle > mouseEvent.pageX;\n\n      if (this.localization.rtl) {\n        before = !before;\n      }\n    } else {\n      before = isTargetBefore(draggable.element.nativeElement, targetElement);\n    }\n\n    return before;\n  }\n\n  enter({\n    target,\n    before\n  }) {\n    this.hint.enable();\n\n    if (this.localization.rtl) {\n      before = !before;\n    }\n\n    this.cue.position(position(target.element.nativeElement, before));\n  }\n\n  leave() {\n    this.hint.disable();\n    this.cue.hide();\n  }\n\n  drop({\n    draggable,\n    target,\n    before,\n    changeContainer\n  }) {\n    this.reorderService.reorder({\n      before,\n      changeContainer,\n      source: draggable.context.column,\n      target: target.context.column\n    });\n  }\n\n}\n\nHeaderComponent.ɵfac = function HeaderComponent_Factory(t) {\n  return new (t || HeaderComponent)(i0.ɵɵdirectiveInject(SinglePopupService), i0.ɵɵdirectiveInject(DragHintService), i0.ɵɵdirectiveInject(DropCueService), i0.ɵɵdirectiveInject(ColumnReorderService), i0.ɵɵdirectiveInject(IdService), i0.ɵɵdirectiveInject(SortService), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(ColumnInfoService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nHeaderComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HeaderComponent,\n  selectors: [[\"\", \"kendoGridHeader\", \"\"]],\n  viewQuery: function HeaderComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(DropTargetDirective, 5);\n      i0.ɵɵviewQuery(FilterMenuComponent, 5);\n      i0.ɵɵviewQuery(ColumnMenuComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropTargets = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filterMenus = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.columnMenus = _t);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function HeaderComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-grid-header\", ctx.headerClass);\n    }\n  },\n  inputs: {\n    totalColumnLevels: \"totalColumnLevels\",\n    columns: \"columns\",\n    groups: \"groups\",\n    detailTemplate: \"detailTemplate\",\n    scrollable: \"scrollable\",\n    filterable: \"filterable\",\n    sort: \"sort\",\n    filter: \"filter\",\n    sortable: \"sortable\",\n    groupable: \"groupable\",\n    lockedColumnsCount: \"lockedColumnsCount\",\n    resizable: \"resizable\",\n    reorderable: \"reorderable\",\n    columnMenu: \"columnMenu\",\n    columnMenuTemplate: \"columnMenuTemplate\",\n    totalColumnsCount: \"totalColumnsCount\",\n    tabIndex: \"tabIndex\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c30,\n  decls: 3,\n  vars: 2,\n  consts: [[\"kendoGridLogicalRow\", \"\", 3, \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", 4, \"ngFor\", \"ngForOf\"], [\"kendoGridFilterRow\", \"\", \"kendoGridLogicalRow\", \"\", 3, \"columns\", \"filter\", \"groups\", \"detailTemplate\", \"lockedColumnsCount\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", 4, \"ngIf\"], [\"kendoGridLogicalRow\", \"\", 3, \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\"], [\"class\", \"k-group-cell k-header\", \"role\", \"presentation\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"k-hierarchy-cell k-header\", \"role\", \"gridcell\", \"kendoGridLogicalCell\", \"\", \"aria-selected\", \"false\", 3, \"logicalRowIndex\", \"logicalColIndex\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"role\", \"presentation\", 1, \"k-group-cell\", \"k-header\"], [\"role\", \"gridcell\", \"kendoGridLogicalCell\", \"\", \"aria-selected\", \"false\", 1, \"k-hierarchy-cell\", \"k-header\", 3, \"logicalRowIndex\", \"logicalColIndex\"], [\"kendoGridLogicalCell\", \"\", \"role\", \"columnheader\", \"aria-selected\", \"false\", \"kendoDropTarget\", \"\", \"kendoDraggable\", \"\", \"kendoDraggableColumn\", \"\", \"class\", \"k-header\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"headerLabelText\", \"colSpan\", \"rowSpan\", \"k-sorted\", \"enableDrag\", \"context\", \"k-filterable\", \"k-first\", \"k-grid-header-sticky\", \"ngClass\", \"ngStyle\", \"keydown\", 4, \"ngIf\"], [\"kendoGridLogicalCell\", \"\", \"kendoDropTarget\", \"\", \"kendoDraggable\", \"\", \"kendoDraggableColumn\", \"\", \"class\", \"k-header\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"rowSpan\", \"colSpan\", \"headerLabelText\", \"enableDrag\", \"context\", \"k-first\", \"k-filterable\", \"k-grid-content-sticky\", \"ngClass\", \"ngStyle\", 4, \"ngIf\"], [\"kendoGridLogicalCell\", \"\", \"role\", \"columnheader\", \"aria-selected\", \"false\", \"kendoDropTarget\", \"\", \"kendoDraggable\", \"\", \"kendoDraggableColumn\", \"\", 1, \"k-header\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"headerLabelText\", \"colSpan\", \"rowSpan\", \"enableDrag\", \"context\", \"ngClass\", \"ngStyle\", \"keydown\"], [4, \"ngIf\"], [\"kendoGridColumnHandle\", \"\", \"kendoDraggable\", \"\", \"class\", \"k-column-resizer\", 3, \"column\", \"columns\", 4, \"ngIf\"], [1, \"k-cell-inner\"], [1, \"k-link\"], [3, \"templateContext\"], [3, \"column\", \"filter\", \"tabIndex\", 4, \"ngIf\"], [3, \"standalone\", \"settings\", \"column\", \"columnMenuTemplate\", \"sort\", \"filter\", \"sortable\", \"tabIndex\", 4, \"ngIf\"], [1, \"k-column-title\"], [3, \"column\", \"filter\", \"tabIndex\"], [3, \"standalone\", \"settings\", \"column\", \"columnMenuTemplate\", \"sort\", \"filter\", \"sortable\", \"tabIndex\"], [1, \"k-link\", 3, \"click\"], [\"link\", \"\"], [\"role\", \"note\", 3, \"ngClass\"], [\"class\", \"k-sort-order\", 4, \"ngIf\"], [\"role\", \"status\", 1, \"k-sort-status\", 3, \"innerHtml\"], [1, \"k-sort-order\"], [\"kendoGridSelectAllCheckbox\", \"\", \"kendoGridFocusable\", \"\", 1, \"k-checkbox\", \"k-checkbox-md\", \"k-rounded-md\"], [\"kendoGridColumnHandle\", \"\", \"kendoDraggable\", \"\", 1, \"k-column-resizer\", 3, \"column\", \"columns\"], [\"kendoGridLogicalCell\", \"\", \"kendoDropTarget\", \"\", \"kendoDraggable\", \"\", \"kendoDraggableColumn\", \"\", 1, \"k-header\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"rowSpan\", \"colSpan\", \"headerLabelText\", \"enableDrag\", \"context\", \"ngClass\", \"ngStyle\"], [3, \"standalone\", \"settings\", \"column\", \"columnMenuTemplate\", 4, \"ngIf\"], [3, \"standalone\", \"settings\", \"column\", \"columnMenuTemplate\"], [\"kendoGridFilterRow\", \"\", \"kendoGridLogicalRow\", \"\", 3, \"columns\", \"filter\", \"groups\", \"detailTemplate\", \"lockedColumnsCount\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\"]],\n  template: function HeaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainerStart(0);\n      i0.ɵɵtemplate(1, HeaderComponent_tr_1_Template, 4, 8, \"tr\", 0);\n      i0.ɵɵtemplate(2, HeaderComponent_tr_2_Template, 1, 9, \"tr\", 1);\n      i0.ɵɵelementContainerEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.columnLevels);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showFilterRow);\n    }\n  },\n  directives: [i4.NgForOf, i4.NgIf, LogicalRowDirective, LogicalCellDirective, DropTargetDirective, i1$1.DraggableDirective, DraggableColumnDirective, i4.NgClass, i4.NgStyle, TemplateContextDirective, FilterMenuComponent, ColumnMenuComponent, SelectAllCheckboxDirective, FocusableDirective, ColumnHandleDirective, FilterRowComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeaderComponent, [{\n    type: Component,\n    args: [{\n      selector: '[kendoGridHeader]',\n      template: `\n    <ng-container>\n        <tr *ngFor=\"let i of columnLevels; let levelIndex = index\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"levelIndex\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"unlockedColumnsCount\">\n            <th\n                class=\"k-group-cell k-header\"\n                role=\"presentation\"\n                *ngFor=\"let g of groups\">\n            </th>\n            <th class=\"k-hierarchy-cell k-header\"\n                role=\"gridcell\"\n                *ngIf=\"detailTemplate?.templateRef\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"levelIndex\"\n                    [logicalColIndex]=\"0\"\n                    aria-selected=\"false\"\n            >\n            </th>\n            <ng-container *ngFor=\"let column of columnsForLevel(levelIndex); trackBy: trackByIndex; let columnIndex = index; let last = last;\">\n                <th *ngIf=\"!isColumnGroupComponent(column)\"\n                    kendoGridLogicalCell\n                    [logicalRowIndex]=\"levelIndex\"\n                    [logicalColIndex]=\"logicalColumnIndex(column)\"\n                    [headerLabelText]=\"column.title || getColumnComponent(column).field\"\n                    [colSpan]=\"column.colspan\"\n                    [rowSpan]=\"column.rowspan(totalColumnLevels)\"\n                    role=\"columnheader\"\n                    aria-selected=\"false\"\n                    [attr.aria-sort]=\"sortState(getColumnComponent(column))\"\n                    [class.k-sorted]=\"!!sortState(getColumnComponent(column))\"\n                    (keydown)=\"onHeaderKeydown(getColumnComponent(column), $event)\"\n                    kendoDropTarget\n                    kendoDraggable\n                    kendoDraggableColumn\n                    [enableDrag]=\"shouldActivate(column)\"\n                    [context]=\"{\n                        field: getColumnComponent(column).field,\n                        type: 'column',\n                        column: column,\n                        hint: column.title || getColumnComponent(column).field,\n                        lastColumn: last && columnIndex === 0\n                    }\"\n                    class=\"k-header\"\n                    [class.k-filterable]=\"(showFilterMenu && isFilterable(getColumnComponent(column))) || showColumnMenu(column)\"\n                    [class.k-first]=\"isFirstOnRow(getColumnComponent(column), columnIndex)\"\n                    [class.k-grid-header-sticky]=\"column.sticky\"\n                    [ngClass]=\"column.headerClass\"\n                    [ngStyle]=\"column.sticky ? addStickyStyles(column) : column.headerStyle\"\n                    [attr.rowspan]=\"column.rowspan(totalColumnLevels)\"\n                    [attr.colspan]=\"column.colspan\">\n\n                    <ng-container *ngIf=\"!isSortable(getColumnComponent(column))\">\n                        <span class=\"k-cell-inner\">\n                            <span class=\"k-link\">\n                                <ng-template\n                                    [templateContext]=\"{\n                                        templateRef: column.headerTemplateRef,\n                                        columnIndex: column.leafIndex,\n                                        column: column,\n                                        $implicit: column\n                                    }\">\n                                </ng-template>\n                                <ng-container *ngIf=\"!column.headerTemplateRef\">\n                                    <span class=\"k-column-title\">{{column.displayTitle}}</span>\n                                </ng-container>\n                            </span>\n                            <kendo-grid-filter-menu\n                                *ngIf=\"showFilterMenu && isFilterable(getColumnComponent(column))\"\n                                [column]=\"getColumnComponent(column)\"\n                                [filter]=\"filter\"\n                                [tabIndex]=\"tabIndex\">\n                            </kendo-grid-filter-menu>\n                            <kendo-grid-column-menu *ngIf=\"showColumnMenu(column)\"\n                                [standalone]=\"false\"\n                                [settings]=\"columnMenuSettings\"\n                                [column]=\"column\"\n                                [columnMenuTemplate]=\"columnMenuTemplate\"\n                                [sort]=\"sort\"\n                                [filter]=\"filter\"\n                                [sortable]=\"sortable\"\n                                [tabIndex]=\"tabIndex\">\n                            </kendo-grid-column-menu>\n                        </span>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"isSortable(getColumnComponent(column))\">\n                        <span class=\"k-cell-inner\">\n                            <span #link class=\"k-link\" (click)=\"onSortClick(getColumnComponent(column), $event, link)\">\n                                <ng-template\n                                    [templateContext]=\"{\n                                        templateRef: column.headerTemplateRef,\n                                        columnIndex: column.leafIndex,\n                                        column: column,\n                                        $implicit: column\n                                    }\">\n                                </ng-template>\n                                <ng-container *ngIf=\"!column.headerTemplateRef\">\n                                    <span class=\"k-column-title\">{{column.displayTitle}}</span>\n                                </ng-container>\n                                <span role=\"note\" [attr.aria-label]=\"sortableLabel\" [ngClass]=\"sortIcon(getColumnComponent(column).field)\"></span>\n                                <span *ngIf=\"showSortNumbering(getColumnComponent(column))\" class=\"k-sort-order\">{{sortOrder(getColumnComponent(column).field)}}</span>\n                            </span>\n                            <span role=\"status\"\n                                class=\"k-sort-status\"\n                                [style.position]=\"'absolute'\"\n                                [style.left.px]=\"-10000\"\n                                [innerHtml]=\"sortStatus(getColumnComponent(column))\">\n                            </span>\n                            <kendo-grid-filter-menu\n                                *ngIf=\"showFilterMenu && isFilterable(getColumnComponent(column))\"\n                                [column]=\"getColumnComponent(column)\"\n                                [filter]=\"filter\"\n                                [tabIndex]=\"tabIndex\">\n                            </kendo-grid-filter-menu>\n                            <kendo-grid-column-menu *ngIf=\"showColumnMenu(column)\"\n                                [standalone]=\"false\"\n                                [settings]=\"columnMenuSettings\"\n                                [column]=\"column\"\n                                [columnMenuTemplate]=\"columnMenuTemplate\"\n                                [sort]=\"sort\"\n                                [filter]=\"filter\"\n                                [sortable]=\"sortable\"\n                                [tabIndex]=\"tabIndex\">\n                            </kendo-grid-column-menu>\n                        </span>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"isCheckboxColumn(column) && !column.headerTemplateRef && $any(column).showSelectAll\">\n                        <input\n                            class=\"k-checkbox k-checkbox-md k-rounded-md\"\n                            [attr.id]=\"selectAllCheckboxId()\"\n                            [attr.aria-label]=\"selectAllCheckboxLabel\"\n                            kendoGridSelectAllCheckbox\n                            kendoGridFocusable>\n                    </ng-container>\n                    <span kendoGridColumnHandle\n                        kendoDraggable\n                        class=\"k-column-resizer\"\n                        *ngIf=\"resizable\"\n                        [column]=\"column\"\n                        [columns]=\"columns\">\n                    </span>\n                </th>\n                <th *ngIf=\"isColumnGroupComponent(column)\"\n                    kendoGridLogicalCell\n                    [logicalRowIndex]=\"levelIndex\"\n                    [logicalColIndex]=\"logicalColumnIndex(column)\"\n                    [rowSpan]=\"column.rowspan(totalColumnLevels)\"\n                    [colSpan]=\"column.colspan\"\n                    [headerLabelText]=\"column.title || getColumnComponent(column).field\"\n                    kendoDropTarget\n                    kendoDraggable\n                    kendoDraggableColumn\n                    [enableDrag]=\"shouldActivate(column)\"\n                    [context]=\"{\n                        type: 'columnGroup',\n                        column: column,\n                        hint: column.title,\n                        lastColumn: last && columnIndex === 0\n                    }\"\n                    class=\"k-header\"\n                    [class.k-first]=\"isFirstOnRow(getColumnComponent(column), columnIndex)\"\n                    [class.k-filterable]=\"showColumnMenu(column)\"\n                    [class.k-grid-content-sticky]=\"column.sticky\"\n                    [ngClass]=\"column.headerClass\"\n                    [ngStyle]=\"column.headerStyle\"\n                    [attr.rowspan]=\"column.rowspan(totalColumnLevels)\"\n                    [attr.colspan]=\"column.colspan\">\n                    <span class=\"k-cell-inner\">\n                        <span class=\"k-link\">\n                            <ng-template\n                                [templateContext]=\"{\n                                    templateRef: column.headerTemplateRef,\n                                    columnIndex: lockedColumnsCount + columnIndex,\n                                    column: column,\n                                    $implicit: column\n                                }\">\n                            </ng-template>\n                            <ng-container *ngIf=\"!column.headerTemplateRef\">\n                                <span class=\"k-column-title\">{{column.displayTitle}}</span>\n                            </ng-container>\n                        </span>\n                        <kendo-grid-column-menu *ngIf=\"showColumnMenu(column)\"\n                            [standalone]=\"false\"\n                            [settings]=\"columnMenuSettings\"\n                            [column]=\"column\"\n                            [columnMenuTemplate]=\"columnMenuTemplate\">\n                        </kendo-grid-column-menu>\n                    </span>\n                    <span kendoGridColumnHandle\n                        kendoDraggable\n                        class=\"k-column-resizer\"\n                        *ngIf=\"resizable\"\n                        [column]=\"column\"\n                        [columns]=\"columns\">\n                    </span>\n                </th>\n            </ng-container>\n        </tr>\n        <tr *ngIf=\"showFilterRow\"\n            kendoGridFilterRow\n                [columns]=\"leafColumns\"\n                [filter]=\"filter\"\n                [groups]=\"groups\"\n                [detailTemplate]=\"detailTemplate\"\n                [lockedColumnsCount]=\"lockedColumnsCount\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"totalColumnLevels + 1\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"unlockedColumnsCount\"\n        ></tr>\n    </ng-container>\n    `\n    }]\n  }], function () {\n    return [{\n      type: SinglePopupService\n    }, {\n      type: DragHintService\n    }, {\n      type: DropCueService\n    }, {\n      type: ColumnReorderService\n    }, {\n      type: IdService\n    }, {\n      type: SortService\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: ColumnInfoService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    totalColumnLevels: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    groups: [{\n      type: Input\n    }],\n    detailTemplate: [{\n      type: Input\n    }],\n    scrollable: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    sort: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    sortable: [{\n      type: Input\n    }],\n    groupable: [{\n      type: Input\n    }],\n    lockedColumnsCount: [{\n      type: Input\n    }],\n    resizable: [{\n      type: Input\n    }],\n    reorderable: [{\n      type: Input\n    }],\n    columnMenu: [{\n      type: Input\n    }],\n    columnMenuTemplate: [{\n      type: Input\n    }],\n    totalColumnsCount: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    headerClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-header']\n    }],\n    dropTargets: [{\n      type: ViewChildren,\n      args: [DropTargetDirective]\n    }],\n    filterMenus: [{\n      type: ViewChildren,\n      args: [FilterMenuComponent]\n    }],\n    columnMenus: [{\n      type: ViewChildren,\n      args: [ColumnMenuComponent]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nconst update = (arr, idx, value) => [...arr.slice(0, idx + 1), ...arr.slice(idx + 1).map(x => x + value)];\n/**\n * @hidden\n */\n\n\nclass RowHeightService {\n  constructor(total = 0, rowHeight, detailRowHeight) {\n    this.total = total;\n    this.rowHeight = rowHeight;\n    this.detailRowHeight = detailRowHeight;\n    this.offsets = [];\n    this.heights = [];\n    let agg = 0;\n\n    for (let idx = 0; idx < total; idx++) {\n      this.offsets.push(agg);\n      agg += rowHeight;\n      this.heights.push(rowHeight);\n    }\n  }\n\n  height(rowIndex) {\n    return this.heights[rowIndex];\n  }\n\n  expandDetail(rowIndex) {\n    if (this.height(rowIndex) === this.rowHeight) {\n      this.updateRowHeight(rowIndex, this.detailRowHeight);\n    }\n  }\n\n  collapseDetail(rowIndex) {\n    if (this.height(rowIndex) > this.rowHeight) {\n      this.updateRowHeight(rowIndex, this.detailRowHeight * -1);\n    }\n  }\n\n  isExpanded(rowIndex) {\n    return this.height(rowIndex) > this.rowHeight;\n  }\n\n  index(position) {\n    if (position < 0) {\n      return undefined;\n    }\n\n    const result = this.offsets.reduce((prev, current, idx) => {\n      if (prev !== undefined) {\n        return prev;\n      } else if (current === position) {\n        return idx;\n      } else if (current > position) {\n        return idx - 1;\n      }\n\n      return undefined;\n    }, undefined);\n    return result === undefined ? this.total - 1 : result;\n  }\n\n  offset(rowIndex) {\n    return this.offsets[rowIndex];\n  }\n\n  totalHeight() {\n    return this.heights.reduce((prev, curr) => prev + curr, 0);\n  }\n\n  updateRowHeight(rowIndex, value) {\n    if (this.total > 0) {\n      this.heights[rowIndex] += value;\n      this.offsets = update(this.offsets, rowIndex, value);\n    }\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass ScrollAction {\n  constructor(offset) {\n    this.offset = offset;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass PageAction {\n  constructor(skip, take) {\n    this.skip = skip;\n    this.take = take;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass ScrollBottomAction {}\n\nconst SCROLL_BOTTOM_THRESHOLD = 2;\n/**\n * @hidden\n */\n\nclass ScrollerService {\n  constructor(scrollObservable) {\n    this.scrollObservable = scrollObservable;\n    this.firstLoaded = 0;\n  }\n\n  create(rowHeightService, skip, take, total) {\n    this.rowHeightService = rowHeightService;\n    this.firstLoaded = skip;\n    this.lastLoaded = skip + take;\n    this.take = take;\n    this.total = total;\n    this.lastScrollTop = 0;\n    const subject = new BehaviorSubject(new ScrollAction(this.rowHeightService.offset(skip)));\n    this.subscription = Observable.create(observer => {\n      this.unsubscribe();\n      this.scrollSubscription = this.scrollObservable.subscribe(x => this.onScroll(x, observer));\n    }).subscribe(x => subject.next(x));\n    return subject;\n  }\n\n  destroy() {\n    this.unsubscribe();\n\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  onScroll({\n    scrollTop,\n    offsetHeight,\n    scrollHeight,\n    clientHeight\n  }, observer) {\n    if (this.lastScrollTop === scrollTop) {\n      return;\n    }\n\n    const up = this.lastScrollTop >= scrollTop;\n    this.lastScrollTop = scrollTop;\n    let firstItemIndex = this.rowHeightService.index(scrollTop);\n    let firstItemOffset = this.rowHeightService.offset(firstItemIndex);\n    const lastItemIndex = this.rowHeightService.index(scrollTop + offsetHeight);\n\n    if (!up) {\n      if (lastItemIndex >= this.lastLoaded && this.lastLoaded < this.total) {\n        const overflow = firstItemIndex + this.take - this.total;\n\n        if (overflow > 0) {\n          firstItemIndex = firstItemIndex - overflow;\n          firstItemOffset = this.rowHeightService.offset(firstItemIndex);\n        }\n\n        this.firstLoaded = firstItemIndex;\n        observer.next(new ScrollAction(firstItemOffset));\n        let nextTake = this.firstLoaded + this.take;\n        this.lastLoaded = Math.min(nextTake, this.total);\n        nextTake = nextTake > this.total ? this.total - this.firstLoaded : this.take;\n        observer.next(new PageAction(this.firstLoaded, this.take));\n      } else {\n        const atBottom = scrollHeight - clientHeight - scrollTop < SCROLL_BOTTOM_THRESHOLD;\n\n        if (atBottom) {\n          observer.next(new ScrollBottomAction());\n        }\n      }\n    }\n\n    if (up && firstItemIndex < this.firstLoaded) {\n      const nonVisibleBuffer = Math.floor(this.take * 0.3);\n      this.firstLoaded = Math.max(firstItemIndex - nonVisibleBuffer, 0);\n      observer.next(new ScrollAction(this.rowHeightService.offset(this.firstLoaded)));\n      this.lastLoaded = Math.min(this.firstLoaded + this.take, this.total);\n      observer.next(new PageAction(this.firstLoaded, this.take));\n    }\n  }\n\n  unsubscribe() {\n    if (this.scrollSubscription) {\n      this.scrollSubscription.unsubscribe();\n      this.scrollSubscription = undefined;\n    }\n  }\n\n}\n/**\n * @hidden\n */\n\n\nconst NON_DATA_CELL_CLASSES = 'k-hierarchy-cell k-detail-cell k-group-cell';\n/**\n * @hidden\n */\n\nconst NON_DATA_ROW_CLASSES = 'k-grouping-row k-group-footer k-detail-row k-grid-norecords';\n/**\n * @hidden\n */\n\nconst IGNORE_TARGET_CLASSSES = 'k-icon';\n/**\n * @hidden\n */\n\nconst IGNORE_CONTAINER_CLASSES = 'k-grid k-grid-ignore-click';\n/**\n * Represents the command columns of the Grid. You have to define the content of the\n * column inside an `<ng-template>` tag. The template context is set to the current\n * data item. For more information and examples on using the passed fields\n * and the command directives, refer to the article on\n * [editing the Grid in Angular Reactive Forms]({% slug inline_editing_grid %}#toc-using-reactive-forms).\n *\n * The following additional fields are passed:\n * - `columnIndex`&mdash;The current column index.\n * - `rowIndex`&mdash;The current data row index. If inside a new item row, `rowIndex`is `-1`.\n * - `dataItem`&mdash;The current data item.\n * - `column`&mdash;The current column instance.\n * - `isNew`&mdash;The state of the current item.\n *\n * Usually, the template contains CRUD command directives such as:\n * - [EditCommandDirective]({% slug api_grid_editcommanddirective %})\n * - [RemoveCommandDirective]({% slug api_grid_removecommanddirective %})\n * - [CancelCommandDirective]({% slug api_grid_cancelcommanddirective %})\n * - [SaveCommandDirective]({% slug api_grid_savecommanddirective %})\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" [width]=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" [width]=\"230\">\n *          </kendo-grid-column>\n *          <kendo-grid-command-column title=\"command\" [width]=\"220\">\n *               <ng-template kendoGridCellTemplate>\n *                   <button kendoGridEditCommand class=\"k-primary\">Edit</button>\n *                   <button kendoGridRemoveCommand>Remove</button>\n *               </ng-template>\n *           </kendo-grid-command-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\n\nclass CommandColumnComponent extends ColumnBase {\n  constructor(parent, idService) {\n    super(parent, idService);\n    this.parent = parent;\n  }\n\n  get templateRef() {\n    return this.template ? this.template.templateRef : undefined;\n  }\n\n}\n\nCommandColumnComponent.ɵfac = function CommandColumnComponent_Factory(t) {\n  return new (t || CommandColumnComponent)(i0.ɵɵdirectiveInject(ColumnBase, 13), i0.ɵɵdirectiveInject(IdService, 8));\n};\n\nCommandColumnComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CommandColumnComponent,\n  selectors: [[\"kendo-grid-command-column\"]],\n  contentQueries: function CommandColumnComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, CellTemplateDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ColumnBase,\n    useExisting: forwardRef(() => CommandColumnComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function CommandColumnComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CommandColumnComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: ColumnBase,\n        useExisting: forwardRef(() => CommandColumnComponent)\n      }],\n      selector: 'kendo-grid-command-column',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: ColumnBase,\n      decorators: [{\n        type: SkipSelf\n      }, {\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: IdService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    template: [{\n      type: ContentChild,\n      args: [CellTemplateDirective, {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * Represents the row-selection checkbox of the Grid. The directive expects the\n * index of the current row as an input parameter. Inside the\n * [CheckboxColumnComponent]({% slug api_grid_checkboxcolumncomponent %}), apply the\n * directive to an `input` element. When the user clicks the checkbox that is associated\n * with the directive, a [selectionChange]({% slug api_grid_gridcomponent %}#toc-selectionChange)\n * event is triggered.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\" [selectable]=\"{enabled: true, checkboxOnly: true}\">\n *          <kendo-grid-checkbox-column title=\"Custom checkbox\">\n *            <ng-template kendoGridCellTemplate let-idx=\"rowIndex\">\n *              Select row <input [kendoGridSelectionCheckbox]=\"idx\" />\n *            </ng-template>\n *          </kendo-grid-checkbox-column>\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" [width]=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\n\n\nclass SelectionCheckboxDirective {\n  constructor(selectionService, el, renderer, ngZone) {\n    this.selectionService = selectionService;\n    this.el = el;\n    this.renderer = renderer;\n    this.ngZone = ngZone;\n    this.type = 'checkbox';\n    this.ngZone.runOutsideAngular(() => {\n      this.destroyClick = this.renderer.listen(this.el.nativeElement, 'click', this.onClick.bind(this));\n      this.destroyKeyDown = this.renderer.listen(this.el.nativeElement, 'keydown', this.onKeyDown.bind(this));\n    });\n  }\n\n  ngAfterContentChecked() {\n    this.setCheckedState();\n  }\n\n  ngOnDestroy() {\n    if (this.destroyClick) {\n      this.destroyClick();\n    }\n\n    if (this.destroyKeyDown) {\n      this.destroyKeyDown();\n    }\n  }\n\n  onClick() {\n    if (this.selectionService.options.enabled) {\n      this.ngZone.run(() => {\n        const ev = this.selectionService.toggleByIndex(this.itemIndex);\n        ev.ctrlKey = true;\n        ev.shiftKey = false;\n        this.selectionService.changes.emit(ev);\n      });\n    }\n  }\n\n  onKeyDown(e) {\n    if (e.keyCode === Keys.Enter) {\n      this.onClick();\n    }\n  }\n  /*\n   * @hidden\n   */\n\n\n  setCheckedState() {\n    this.renderer.setProperty(this.el.nativeElement, 'checked', this.selectionService.isSelected(this.itemIndex));\n  }\n\n}\n\nSelectionCheckboxDirective.ɵfac = function SelectionCheckboxDirective_Factory(t) {\n  return new (t || SelectionCheckboxDirective)(i0.ɵɵdirectiveInject(SelectionService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nSelectionCheckboxDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: SelectionCheckboxDirective,\n  selectors: [[\"\", \"kendoGridSelectionCheckbox\", \"\"]],\n  hostVars: 1,\n  hostBindings: function SelectionCheckboxDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"type\", ctx.type);\n    }\n  },\n  inputs: {\n    itemIndex: [\"kendoGridSelectionCheckbox\", \"itemIndex\"]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectionCheckboxDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridSelectionCheckbox]'\n    }]\n  }], function () {\n    return [{\n      type: SelectionService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    itemIndex: [{\n      type: Input,\n      args: ['kendoGridSelectionCheckbox']\n    }],\n    type: [{\n      type: HostBinding,\n      args: ['attr.type']\n    }]\n  });\n})();\n\nconst FORMAT_REGEX = /\\{\\d+:?/;\n/**\n * @hidden\n */\n\nclass FieldAccessorPipe {\n  constructor(intlService) {\n    this.intlService = intlService;\n  }\n\n  transform(dataItem, fieldName, format) {\n    if (!isNullOrEmptyString(fieldName)) {\n      const value = getter(fieldName)(dataItem);\n\n      if (!isNullOrEmptyString(format)) {\n        return this.formatValue(format, value);\n      }\n\n      return value;\n    }\n\n    return dataItem;\n  }\n\n  formatValue(format, value) {\n    const intl = this.intlService;\n\n    if (isString(format) && format.match(FORMAT_REGEX)) {\n      return intl.format(format, value);\n    }\n\n    return intl.toString(value, format);\n  }\n\n}\n\nFieldAccessorPipe.ɵfac = function FieldAccessorPipe_Factory(t) {\n  return new (t || FieldAccessorPipe)(i0.ɵɵdirectiveInject(i1$5.IntlService, 16));\n};\n\nFieldAccessorPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"valueOf\",\n  type: FieldAccessorPipe,\n  pure: false\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FieldAccessorPipe, [{\n    type: Pipe,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/pipe-prefix\n      name: 'valueOf',\n      pure: false\n    }]\n  }], function () {\n    return [{\n      type: i1$5.IntlService\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass CellComponent {\n  constructor(editService, idService, localizationService, cellContext) {\n    this.editService = editService;\n    this.idService = idService;\n    this.localizationService = localizationService;\n    this.cellContext = cellContext;\n    this.isNew = false;\n    this.isLoading = false;\n    this.isVirtual = false;\n    this._templateContext = {};\n    this._editTemplateContext = {};\n  }\n\n  get commandCellClass() {\n    return this.isCommand(this.column);\n  }\n\n  set rowIndex(index) {\n    this._rowIndex = index;\n    this.updateCellContext();\n  }\n\n  get rowIndex() {\n    return this._rowIndex;\n  }\n\n  get isEdited() {\n    if (!(this.editService.isEditing() || this.isNew) || !this.isColumnEditable) {\n      return false;\n    }\n\n    const editContext = this.editService.columnContext(this.rowIndex, this.column);\n    return this.isFieldEditable(editContext, this.column);\n  }\n\n  get showLoading() {\n    return this.isVirtual && this.isLoading;\n  }\n\n  get formGroup() {\n    return this.editService.context(this.rowIndex).group;\n  }\n\n  get templateContext() {\n    return this._templateContext;\n  }\n\n  get editTemplateContext() {\n    this._editTemplateContext.$implicit = this.formGroup;\n    this._editTemplateContext.isNew = this.isNew;\n    this._editTemplateContext.column = this.column;\n    this._editTemplateContext.dataItem = this.dataItem;\n    this._editTemplateContext.formGroup = this.formGroup;\n    this._editTemplateContext.rowIndex = this.rowIndex;\n    return this._editTemplateContext;\n  }\n\n  get format() {\n    if (isColumnComponent(this.column) && !isNullOrEmptyString(this.column.format)) {\n      return extractFormat(this.column.format);\n    }\n\n    return undefined;\n  }\n\n  get isBoundColumn() {\n    return this.column.field && !this.column.templateRef;\n  }\n\n  get isCheckboxColumn() {\n    return isCheckboxColumn(this.column) && !this.column.templateRef;\n  }\n\n  get selectionCheckboxId() {\n    return this.idService.selectionCheckboxId(this.rowIndex);\n  }\n\n  get selectionCheckboxLabel() {\n    return this.localizationService.get('selectionCheckboxLabel');\n  }\n\n  get isSpanColumn() {\n    return isSpanColumn(this.column) && !this.column.templateRef;\n  }\n\n  get childColumns() {\n    return columnsToRender([this.column]);\n  }\n\n  get isColumnEditable() {\n    if (!this.column || this.isCommand(this.column)) {\n      return false;\n    }\n\n    return this.column.editable !== false;\n  }\n\n  ngDoCheck() {\n    this.updateCellContext();\n  }\n\n  ngOnChanges(_changes) {\n    this.updateTemplateContext();\n  }\n\n  ngAfterContentChecked() {\n    this.updateTemplateContext();\n  }\n\n  isCommand(column) {\n    return column instanceof CommandColumnComponent;\n  }\n\n  isFieldEditable(editContext, column) {\n    if (!isPresent(editContext)) {\n      return false;\n    }\n\n    if (isPresent(column.editTemplate)) {\n      return true;\n    }\n\n    return isPresent(editContext.group) && isPresent(editContext.group.get(column.field));\n  }\n\n  updateCellContext() {\n    if (this.cellContext) {\n      this.cellContext.rowIndex = this._rowIndex;\n    }\n  }\n\n  updateTemplateContext() {\n    if (!this.column.templateRef) {\n      return;\n    }\n\n    const context = this._templateContext;\n    context.isNew = this.isNew;\n    context.column = this.column;\n    context.dataItem = this.dataItem;\n    context.rowIndex = this.rowIndex;\n    context.columnIndex = this.columnIndex;\n    context.$implicit = this.dataItem;\n  }\n\n}\n\nCellComponent.ɵfac = function CellComponent_Factory(t) {\n  return new (t || CellComponent)(i0.ɵɵdirectiveInject(EditService), i0.ɵɵdirectiveInject(IdService), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(CELL_CONTEXT, 8));\n};\n\nCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CellComponent,\n  selectors: [[\"\", \"kendoGridCell\", \"\"]],\n  hostVars: 2,\n  hostBindings: function CellComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-command-cell\", ctx.commandCellClass);\n    }\n  },\n  inputs: {\n    column: \"column\",\n    columnIndex: \"columnIndex\",\n    isNew: \"isNew\",\n    isLoading: \"isLoading\",\n    isVirtual: \"isVirtual\",\n    loadingTemplate: \"loadingTemplate\",\n    rowIndex: \"rowIndex\",\n    dataItem: \"dataItem\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c34,\n  decls: 3,\n  vars: 3,\n  consts: [[3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngIf\", \"ngIfElse\"], [\"loading\", \"\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [4, \"ngFor\", \"ngForOf\"], [1, \"k-checkbox\", \"k-checkbox-md\", \"k-rounded-md\", 3, \"kendoGridSelectionCheckbox\"], [\"class\", \"k-skeleton-text k-skeleton\", 4, \"ngIf\"], [1, \"k-skeleton-text\", \"k-skeleton\"], [3, \"ngSwitch\", 4, \"ngIf\"], [\"kendoGridFocusable\", \"\", 3, \"format\", \"formControl\", 4, \"ngSwitchCase\"], [\"type\", \"checkbox\", \"class\", \"k-checkbox k-checkbox-md k-rounded-md\", \"kendoGridFocusable\", \"\", 3, \"formControl\", 4, \"ngSwitchCase\"], [\"type\", \"text\", \"class\", \"k-textbox k-input k-rounded-md\", \"kendoGridFocusable\", \"\", 3, \"formControl\", 4, \"ngSwitchDefault\"], [\"kendoGridFocusable\", \"\", 3, \"format\", \"formControl\"], [\"type\", \"checkbox\", \"kendoGridFocusable\", \"\", 1, \"k-checkbox\", \"k-checkbox-md\", \"k-rounded-md\", 3, \"formControl\"], [\"type\", \"text\", \"kendoGridFocusable\", \"\", 1, \"k-textbox\", \"k-input\", \"k-rounded-md\", 3, \"formControl\"]],\n  template: function CellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainerStart(0, 0);\n      i0.ɵɵtemplate(1, CellComponent_ng_container_1_Template, 4, 2, \"ng-container\", 1);\n      i0.ɵɵtemplate(2, CellComponent_ng_container_2_Template, 3, 2, \"ng-container\", 1);\n      i0.ɵɵelementContainerEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngSwitch\", ctx.isEdited);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", true);\n    }\n  },\n  directives: [i4.NgSwitch, i4.NgSwitchCase, i4.NgIf, i4.NgTemplateOutlet, i4.NgForOf, FocusableDirective, SelectionCheckboxDirective, i4.NgSwitchDefault, i4$1.NumericTextBoxComponent, i4$2.NgControlStatus, i4$2.FormControlDirective, i4$3.DatePickerComponent, i4$2.CheckboxControlValueAccessor, i4$2.DefaultValueAccessor],\n  pipes: [FieldAccessorPipe],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellComponent, [{\n    type: Component,\n    args: [{\n      selector: '[kendoGridCell]',\n      template: `\n        <ng-container [ngSwitch]=\"isEdited\">\n            <ng-container *ngSwitchCase=\"false\">\n                <ng-container *ngIf=\"!showLoading; else loading\">\n                    <ng-template *ngIf=\"column.templateRef\"\n                        [ngTemplateOutlet]=\"column.templateRef\"\n                        [ngTemplateOutletContext]=\"templateContext\">\n                    </ng-template>\n                    <ng-container *ngIf=\"isSpanColumn\">\n                        <ng-container *ngFor=\"let childColumn of childColumns\">\n                            {{ dataItem | valueOf: childColumn.field: childColumn.format}}\n                        </ng-container>\n                    </ng-container>\n                    <ng-container *ngIf=\"isBoundColumn\">{{ dataItem | valueOf: column.field: column.format}}</ng-container>\n                    <ng-container *ngIf=\"isCheckboxColumn && !isNew\">\n                        <input\n                            class=\"k-checkbox k-checkbox-md k-rounded-md\"\n                            [kendoGridSelectionCheckbox]=\"rowIndex\"\n                            [attr.id]=\"selectionCheckboxId\"\n                            [attr.aria-label]=\"selectionCheckboxLabel\" />\n                    </ng-container>\n                </ng-container>\n                <ng-template #loading>\n                    <ng-template\n                        *ngIf=\"loadingTemplate\"\n                        [ngTemplateOutlet]=\"loadingTemplate\"\n                        [ngTemplateOutletContext]=\"{$implicit: column}\">\n                    </ng-template>\n                    <div *ngIf=\"!loadingTemplate\" class=\"k-skeleton-text k-skeleton\"></div>\n                </ng-template>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"true\">\n                <ng-template\n                    *ngIf=\"column.editTemplateRef\"\n                    [ngTemplateOutlet]=\"column.editTemplateRef\"\n                    [ngTemplateOutletContext]=\"editTemplateContext\">\n                </ng-template>\n                <ng-container [ngSwitch]=\"column.editor\" *ngIf=\"!column.editTemplateRef\">\n                    <kendo-numerictextbox\n                        *ngSwitchCase=\"'numeric'\"\n                        [format]=\"format\"\n                        [formControl]=\"$any(formGroup.get(column.field))\"\n                        kendoGridFocusable\n                    ></kendo-numerictextbox>\n\n                    <kendo-datepicker\n                        *ngSwitchCase=\"'date'\"\n                        [format]=\"format\"\n                        [formControl]=\"$any(formGroup.get(column.field))\"\n                        kendoGridFocusable\n                    ></kendo-datepicker>\n\n                    <input\n                        *ngSwitchCase=\"'boolean'\"\n                        type=\"checkbox\"\n                        class=\"k-checkbox k-checkbox-md k-rounded-md\"\n                        [formControl]=\"$any(formGroup.get(column.field))\"\n                        kendoGridFocusable\n                    />\n\n                    <input\n                        *ngSwitchDefault\n                        type=\"text\"\n                        class=\"k-textbox k-input k-rounded-md\"\n                        [formControl]=\"$any(formGroup.get(column.field))\"\n                        kendoGridFocusable\n                    />\n                </ng-container>\n            </ng-container>\n        </ng-container>\n    `\n    }]\n  }], function () {\n    return [{\n      type: EditService\n    }, {\n      type: IdService\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [CELL_CONTEXT]\n      }]\n    }];\n  }, {\n    commandCellClass: [{\n      type: HostBinding,\n      args: ['class.k-command-cell']\n    }],\n    column: [{\n      type: Input\n    }],\n    columnIndex: [{\n      type: Input\n    }],\n    isNew: [{\n      type: Input\n    }],\n    isLoading: [{\n      type: Input\n    }],\n    isVirtual: [{\n      type: Input\n    }],\n    loadingTemplate: [{\n      type: Input\n    }],\n    rowIndex: [{\n      type: Input\n    }],\n    dataItem: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass GroupHeaderComponent {\n  constructor(groupsService, groupInfoService, localization) {\n    this.groupsService = groupsService;\n    this.groupInfoService = groupInfoService;\n    this.localization = localization;\n    this.skipGroupDecoration = false;\n    this.hasDetails = false;\n    this.totalColumnsCount = 0;\n    this.groups = [];\n    this.isExpanded = false;\n  }\n\n  get groupItemClass() {\n    return true;\n  }\n\n  ngDoCheck() {\n    const groupArgs = {\n      group: this.item.data,\n      groupIndex: this.item.index,\n      parentGroup: getGroupRowArgs(this.item.parentGroup)\n    };\n    this.isExpanded = this.groupsService.isExpanded(groupArgs);\n  }\n\n  prefixGroupCell(item) {\n    return new Array(item.level);\n  }\n\n  toggleGroup(item) {\n    this.groupsService.toggleRow(item);\n    return false;\n  }\n\n  groupSpan(item) {\n    const groupCount = (this.groups || []).length;\n    const detailOffset = this.hasDetails ? 1 : 0;\n\n    if (this.hasGroupHeaderColumn) {\n      return groupCount + 1 + detailOffset - item.level;\n    }\n\n    let columnCount = columnsSpan(this.columns);\n\n    if (this.skipGroupDecoration) {\n      return columnCount;\n    }\n\n    return groupCount + columnCount + detailOffset - item.level;\n  }\n\n  logicalColSpan() {\n    return this.skipGroupDecoration ? 1 : this.totalColumnsCount;\n  }\n\n  ariaRole() {\n    if (this.skipGroupDecoration) {\n      return 'presentation';\n    }\n\n    return 'gridcell';\n  }\n\n  formatForGroup(item) {\n    return this.groupInfoService.formatForGroup(item);\n  }\n\n  groupTitle(item) {\n    return this.groupInfoService.groupTitle(item);\n  }\n\n  groupHeaderTemplate(item) {\n    return this.groupInfoService.groupHeaderTemplate(item);\n  }\n\n  get groupButtonTitle() {\n    const messageKey = this.isExpanded ? 'groupCollapse' : 'groupExpand';\n    return this.localization.get(messageKey);\n  }\n\n}\n\nGroupHeaderComponent.ɵfac = function GroupHeaderComponent_Factory(t) {\n  return new (t || GroupHeaderComponent)(i0.ɵɵdirectiveInject(GroupsService), i0.ɵɵdirectiveInject(GroupInfoService), i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nGroupHeaderComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GroupHeaderComponent,\n  selectors: [[\"\", \"kendoGridGroupHeader\", \"\"]],\n  hostVars: 2,\n  hostBindings: function GroupHeaderComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-grouping-row\", ctx.groupItemClass);\n    }\n  },\n  inputs: {\n    rowIndex: \"rowIndex\",\n    logicalRowIndex: \"logicalRowIndex\",\n    item: \"item\",\n    skipGroupDecoration: \"skipGroupDecoration\",\n    hasDetails: \"hasDetails\",\n    totalColumnsCount: \"totalColumnsCount\",\n    hasGroupHeaderColumn: \"hasGroupHeaderColumn\",\n    groupHeaderColumns: \"groupHeaderColumns\",\n    columns: \"columns\",\n    groups: \"groups\"\n  },\n  attrs: _c36,\n  decls: 3,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [\"aria-selected\", \"false\", \"kendoGridLogicalCell\", \"\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"logicalSlaveCell\", \"groupItem\", \"colSpan\", 4, \"ngIf\"], [\"class\", \"k-group-cell\", \"role\", \"presentation\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"presentation\", 1, \"k-group-cell\"], [\"aria-selected\", \"false\", \"kendoGridLogicalCell\", \"\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"logicalSlaveCell\", \"groupItem\", \"colSpan\"], [1, \"k-reset\"], [\"href\", \"#\", \"tabindex\", \"-1\", \"role\", \"presentation\", 1, \"k-icon\", 3, \"ngClass\", \"click\"], [3, \"templateContext\"], [\"role\", \"gridcell\", \"aria-selected\", \"false\", \"kendoGridLogicalCell\", \"\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"logicalSlaveCell\", \"groupItem\", \"colSpan\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"gridcell\", \"aria-selected\", \"false\", \"kendoGridLogicalCell\", \"\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"logicalSlaveCell\", \"groupItem\", \"colSpan\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function GroupHeaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, GroupHeaderComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, GroupHeaderComponent_td_1_Template, 3, 9, \"td\", 1);\n      i0.ɵɵtemplate(2, GroupHeaderComponent_ng_container_2_Template, 2, 1, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.skipGroupDecoration);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.skipGroupDecoration && ctx.hasGroupHeaderColumn));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGroupHeaderColumn);\n    }\n  },\n  directives: [i4.NgIf, i4.NgForOf, LogicalCellDirective, i4.NgClass, TemplateContextDirective, i4.NgTemplateOutlet],\n  pipes: [FieldAccessorPipe],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GroupHeaderComponent, [{\n    type: Component,\n    args: [{\n      selector: '[kendoGridGroupHeader]',\n      template: `\n        <ng-container *ngIf=\"!skipGroupDecoration\">\n            <td class=\"k-group-cell\"\n                role=\"presentation\"\n                *ngFor=\"let g of prefixGroupCell(item)\"></td>\n        </ng-container>\n        <td [attr.colspan]=\"groupSpan(item)\" *ngIf=\"!(skipGroupDecoration && hasGroupHeaderColumn)\"\n            [attr.role]=\"ariaRole()\"\n            aria-selected=\"false\"\n            [attr.aria-expanded]=\"isExpanded\"\n            kendoGridLogicalCell\n            [logicalRowIndex]=\"logicalRowIndex\"\n            [logicalColIndex]=\"0\"\n            [logicalSlaveCell]=\"skipGroupDecoration\"\n            [groupItem]=\"item\"\n            [colSpan]=\"logicalColSpan()\">\n            <p class=\"k-reset\">\n                <ng-container *ngIf=\"!skipGroupDecoration\">\n                    <a href=\"#\" tabindex=\"-1\" (click)=\"toggleGroup(item)\"\n                        class=\"k-icon\"\n                        [ngClass]=\"{ 'k-i-caret-alt-down': isExpanded, 'k-i-caret-alt-right': !isExpanded }\" role=\"presentation\"\n                        [attr.title]=\"groupButtonTitle\"\n                        [attr.aria-label]=\"groupButtonTitle\">\n                    </a>\n                    <ng-container *ngIf=\"!groupHeaderTemplate(item)\">\n                    {{groupTitle(item)}}: {{item.data | valueOf:\"value\": formatForGroup(item)}}\n                    </ng-container>\n                    <ng-template\n                        [templateContext]=\"{\n                            templateRef: groupHeaderTemplate(item),\n                            group: item.data,\n                            aggregates: item.data?.aggregates,\n                            value: item.data?.value,\n                            field: item.data?.field,\n                            index: item.index,\n                            expanded: isExpanded,\n                            $implicit: item.data\n                            }\">\n                    </ng-template>\n                </ng-container>\n            </p>\n        </td>\n        <ng-container *ngIf=\"hasGroupHeaderColumn\">\n            <td *ngFor=\"let column of groupHeaderColumns; let index = index\"\n                role=\"gridcell\"\n                aria-selected=\"false\"\n                kendoGridLogicalCell\n                [logicalRowIndex]=\"logicalRowIndex\"\n                [logicalColIndex]=\"index + 1\"\n                [logicalSlaveCell]=\"false\"\n                [groupItem]=\"item\"\n                [colSpan]=\"1\"\n            >\n                <ng-template *ngIf=\"column.groupHeaderColumnTemplateRef\" [ngTemplateOutlet]=\"column.groupHeaderColumnTemplateRef\"\n                    [ngTemplateOutletContext]=\"{\n                        group: item.data,\n                        aggregates: item.data?.aggregates,\n                        value: item.data?.value,\n                        field: item.data?.field,\n                        index: item.index,\n                        $implicit: item.data\n                        }\">\n                </ng-template>\n            </td>\n        </ng-container>\n    `\n    }]\n  }], function () {\n    return [{\n      type: GroupsService\n    }, {\n      type: GroupInfoService\n    }, {\n      type: i1.LocalizationService\n    }];\n  }, {\n    rowIndex: [{\n      type: Input\n    }],\n    logicalRowIndex: [{\n      type: Input\n    }],\n    item: [{\n      type: Input\n    }],\n    skipGroupDecoration: [{\n      type: Input\n    }],\n    hasDetails: [{\n      type: Input\n    }],\n    totalColumnsCount: [{\n      type: Input\n    }],\n    hasGroupHeaderColumn: [{\n      type: Input\n    }],\n    groupHeaderColumns: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    groups: [{\n      type: Input\n    }],\n    groupItemClass: [{\n      type: HostBinding,\n      args: ['class.k-grouping-row']\n    }]\n  });\n})();\n\nconst columnCellIndex = (cell, cells) => {\n  let cellIndex = 0;\n\n  for (let idx = 0; idx < cells.length; idx++) {\n    if (cells[idx] === cell) {\n      return cellIndex;\n    }\n\n    if (!hasClasses(cells[idx], 'k-hierarchy-cell k-group-cell')) {\n      cellIndex++;\n    }\n  }\n};\n/**\n * @hidden\n */\n\n\nclass TableBodyComponent {\n  constructor(detailsService, groupsService, changeNotification, editService, localization, ngZone, renderer, element, domEvents, selectionService, cellSelectionService, columnInfoService, navigationService) {\n    this.detailsService = detailsService;\n    this.groupsService = groupsService;\n    this.changeNotification = changeNotification;\n    this.editService = editService;\n    this.localization = localization;\n    this.ngZone = ngZone;\n    this.renderer = renderer;\n    this.element = element;\n    this.domEvents = domEvents;\n    this.selectionService = selectionService;\n    this.cellSelectionService = cellSelectionService;\n    this.columnInfoService = columnInfoService;\n    this.navigationService = navigationService;\n    this.columns = [];\n    this.groups = [];\n    this.skip = 0;\n    this.noRecordsText = this.localization.get('noRecords');\n    this.isLocked = false;\n    this.skipGroupDecoration = false;\n    this.showGroupFooters = false;\n    this.lockedColumnsCount = 0;\n    this.totalColumnsCount = 0;\n    this.trackBy = defaultTrackBy;\n\n    this.rowClass = () => null;\n\n    this.cellKeydownSubscription = this.navigationService.cellKeydown.subscribe(args => this.cellKeydownHandler(args));\n    this.trackByWrapper = this.trackByWrapper.bind(this);\n    this.trackByColumns = this.trackByColumns.bind(this);\n  }\n\n  get newDataItem() {\n    return this.editService.newDataItem;\n  } // Number of unlocked columns in the next table, if any\n\n\n  get unlockedColumnsCount() {\n    return this.totalColumnsCount - this.lockedColumnsCount - (this.allColumns || this.columns).length;\n  }\n\n  isAriaSelected(item, column) {\n    return this.cellSelectionService.isCellSelected(item, column) || this.isRowSelected(item) ? 'true' : 'false';\n  }\n\n  toggleRow(index, dataItem) {\n    this.detailsService.toggleRow(index, dataItem);\n    return false;\n  }\n\n  isExpanded(viewItem) {\n    return this.detailsService.isExpanded(viewItem.index, viewItem.data);\n  }\n\n  detailButtonStyles(viewItem) {\n    const expanded = this.isExpanded(viewItem);\n    return expanded ? 'k-i-minus' : 'k-i-plus';\n  }\n\n  detailButtonTitle(viewItem) {\n    const messageKey = this.isExpanded(viewItem) ? 'detailCollapse' : 'detailExpand';\n    return this.localization.get(messageKey);\n  }\n\n  isGroup(item) {\n    return item.type === 'group';\n  }\n\n  isDataItem(item) {\n    return !this.isGroup(item) && !this.isFooter(item);\n  }\n\n  isFooter(item) {\n    return item.type === 'footer';\n  }\n\n  isFooterItemInExpandedGroup(item) {\n    const footerItem = {\n      data: item.data,\n      index: item.groupIndex,\n      parentGroup: item.group.parentGroup\n    };\n    return this.isInExpandedGroup(footerItem);\n  }\n\n  isDataItemInExpandedGroup(item) {\n    const dataItem = {\n      data: item.group.data,\n      index: item.groupIndex,\n      parentGroup: item.group.parentGroup\n    };\n    return this.isInExpandedGroup(dataItem);\n  }\n\n  isInExpandedGroup(item) {\n    return this.groupsService.isInExpandedGroup(item);\n  }\n\n  isParentGroupExpanded(item) {\n    return this.groupsService.isInExpandedGroup(item.parentGroup);\n  }\n\n  isOdd(item) {\n    return item.index % 2 !== 0;\n  }\n\n  isSelectable() {\n    return this.selectable && this.selectable.enabled !== false;\n  }\n\n  isRowSelected(item) {\n    return this.selectionService.isSelected(item.index);\n  }\n\n  trackByWrapper(index, item) {\n    if (item.type === 'data') {\n      item.isEditing = this.editService.hasEdited(item.index);\n    }\n\n    return this.trackBy(index, item);\n  }\n\n  trackByColumns(index, item) {\n    return this.virtualColumns ? index : item;\n  }\n\n  ngDoCheck() {\n    if (this.hasGroupHeaderColumn) {\n      this.groupHeaderColumns = columnsToRender(this.skipGroupDecoration ? this.columns : this.columns.toArray().slice(1));\n    } else {\n      this.groupHeaderColumns = [];\n    }\n\n    if (this.isLocked) {\n      this.groupHeaderSlaveCellsCount = this.hasGroupHeaderColumn ? this.columnsContainer.nonLockedColumnsToRender.length : 1;\n    } else {\n      this.groupHeaderSlaveCellsCount = 0;\n    }\n  }\n\n  ngAfterViewChecked() {\n    if (this.rowSticky) {\n      this.applyStickyRowsStyling();\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (isChanged$1('columns', changes, false)) {\n      this.changeNotification.notify();\n    }\n  }\n\n  logicalRowIndex(rowIndex) {\n    let pos = this.skip + rowIndex;\n\n    if (this.hasDetailTemplate) {\n      pos *= 2;\n    }\n\n    const absoluteRowIndex = 1 + pos;\n    const addRowOffset = this.editService.hasNewItem ? 1 : 0;\n    const filterRowOffset = hasFilterRow(this.filterable) ? 1 : 0;\n    const headerRowCount = this.columnInfoService.totalLevels + filterRowOffset + addRowOffset;\n    return absoluteRowIndex + headerRowCount;\n  }\n\n  addRowLogicalIndex() {\n    return this.columnInfoService.totalLevels + 1 + (hasFilterRow(this.filterable) ? 1 : 0);\n  }\n\n  logicalColIndex(column) {\n    if (!isPresent(column.leafIndex)) {\n      return -1;\n    }\n\n    return column.leafIndex + (this.hasDetailTemplate ? 1 : 0);\n  }\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      const clickHandler = this.clickHandler.bind(this);\n      const mousedownSubscription = this.renderer.listen(this.element.nativeElement, 'mousedown', clickHandler);\n      const mouseupSubscription = this.renderer.listen(this.element.nativeElement, 'mouseup', clickHandler);\n      const clickSubscription = this.renderer.listen(this.element.nativeElement, 'click', clickHandler);\n      const contextmenuSubscription = this.renderer.listen(this.element.nativeElement, 'contextmenu', clickHandler);\n      const touchstartSubscription = this.renderer.listen(this.element.nativeElement, 'touchstart', clickHandler);\n      const touchendSubscription = this.renderer.listen(this.element.nativeElement, 'touchend', clickHandler);\n\n      this.clickSubscription = () => {\n        mousedownSubscription();\n        mouseupSubscription();\n        clickSubscription();\n        contextmenuSubscription();\n      };\n\n      this.touchSubscription = () => {\n        touchstartSubscription();\n        touchendSubscription();\n      };\n    });\n    let originalNoRecordText = this.localization.get('noRecords');\n    this.l10nSubscription = this.localization.changes.subscribe(() => {\n      if (this.noRecordsText === originalNoRecordText) {\n        this.noRecordsText = this.localization.get('noRecords');\n        originalNoRecordText = this.noRecordsText;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.clickSubscription) {\n      this.clickSubscription();\n    }\n\n    if (this.touchSubscription) {\n      this.touchSubscription();\n    }\n\n    if (this.l10nSubscription) {\n      this.l10nSubscription.unsubscribe();\n    }\n\n    this.cellKeydownSubscription.unsubscribe();\n    clearTimeout(this.clickTimeout);\n  }\n\n  isEditingCell(index, column) {\n    return this.editService.isEditing() && this.editService.isEditedColumn(index, column);\n  }\n\n  isEditingRow(index) {\n    return this.editService.isEditing() && this.editService.hasEdited(index);\n  }\n\n  get hasGroupHeaderColumn() {\n    return this.columnsContainer.hasGroupHeaderColumn;\n  }\n\n  get columnsContainer() {\n    return this.columnInfoService.columnsContainer;\n  }\n\n  get columnsSpan() {\n    return columnsSpan(this.columns);\n  }\n\n  get allColumnsSpan() {\n    return columnsSpan(this.allColumns || this.columns);\n  }\n\n  get colSpan() {\n    return this.columnsSpan + this.groups.length + (this.hasDetailTemplate ? 1 : 0);\n  }\n\n  get footerColumns() {\n    return this.isLocked ? this.columnsContainer.lockedColumnsToRender : this.columnsContainer.nonLockedColumnsToRender;\n  }\n\n  showGroupHeader(item) {\n    return !item.data.skipHeader;\n  }\n\n  addStickyColumnStyles(column) {\n    const stickyStyles = this.columnInfoService.stickyColumnsStyles(column);\n    return Object.assign(Object.assign({}, column.style), stickyStyles);\n  }\n\n  resizeHandler() {\n    this.applyStickyRowsStyling();\n  }\n\n  get hasDetailTemplate() {\n    return isPresent(this.detailTemplate);\n  }\n\n  clickHandler(eventArg) {\n    const element = this.element.nativeElement;\n    const target = this.eventTarget(eventArg);\n    let cell, row, body, gridElement;\n    let currentTarget = target;\n\n    do {\n      cell = closest(currentTarget, matchesNodeName('td'));\n      row = closest(cell, matchesNodeName('tr'));\n      body = closest(row, matchesNodeName('tbody'));\n      currentTarget = body;\n      gridElement = closestInScope(currentTarget, matchesClasses('k-grid'), element);\n    } while (body && body !== element && !gridElement);\n\n    if (cell && !hasClasses(cell, NON_DATA_CELL_CLASSES) && !hasClasses(row, NON_DATA_ROW_CLASSES) && body === element && !gridElement) {\n      this.editService.preventCellClose();\n      const focusable = target !== cell && isFocusableWithTabKey(target, false);\n\n      if (!focusable && !matchesNodeName('label')(target) && !hasClasses(target, IGNORE_TARGET_CLASSSES) && !closestInScope(target, matchesClasses(IGNORE_CONTAINER_CLASSES), cell)) {\n        const args = this.cellClickArgs(cell, row, eventArg);\n\n        if (eventArg.type === 'mousedown' || eventArg.type === 'touchstart') {\n          this.domEvents.cellMousedown.emit(args);\n        } else if (eventArg.type === 'mouseup' || eventArg.type === 'touchend') {\n          this.domEvents.cellMouseup.emit(args);\n        } else {\n          if (args.isEditedColumn || !this.editService.closeCell(eventArg)) {\n            if (eventArg.type === 'click') {\n              this.clickTimeout = setTimeout(() => {\n                this.emitCellClick(args);\n              }, 0);\n            } else {\n              this.emitCellClick(args);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  emitCellClick(args) {\n    this.domEvents.cellClick.emit(Object.assign(args, {\n      isEdited: args.isEditedRow || args.isEditedColumn\n    }));\n  }\n\n  cellKeydownHandler(args) {\n    if (args.keyCode === Keys.Enter) {\n      this.clickHandler(args);\n    }\n  }\n\n  cellClickArgs(cell, row, eventArg) {\n    const index = columnCellIndex(cell, row.cells);\n    const column = this.columns.toArray()[index];\n    const columnIndex = this.lockedColumnsCount + index;\n    let rowIndex = row.getAttribute('data-kendo-grid-item-index');\n    rowIndex = rowIndex ? parseInt(rowIndex, 10) : -1;\n    const dataItem = rowIndex === -1 ? this.editService.newDataItem : this.data.at(rowIndex - this.skip);\n    const isEditedColumn = this.editService.isEditedColumn(rowIndex, column);\n    const isEditedRow = this.editService.isEdited(rowIndex);\n    const type = eventArg.type === 'keydown' ? 'click' : eventArg.type;\n    return {\n      column: column,\n      columnIndex: columnIndex,\n      dataItem: dataItem,\n      isEditedColumn: isEditedColumn,\n      isEditedRow: isEditedRow,\n      originalEvent: eventArg,\n      rowIndex: rowIndex,\n      type: type\n    };\n  }\n\n  eventTarget(args) {\n    if (args.type === 'touchend') {\n      const touch = args.changedTouches[0];\n      return document.elementFromPoint(touch.clientX, touch.clientY);\n    }\n\n    return args.target;\n  }\n\n  applyStickyRowsStyling() {\n    const stickyRows = nodesToArray(this.element.nativeElement.querySelectorAll('.k-grid-row-sticky'));\n    const length = stickyRows.length;\n\n    if (length) {\n      let accumulatedHeight = 0;\n      const stickyRowsOffsets = [];\n      stickyRows.forEach(row => {\n        const rowHeight = row.getBoundingClientRect().height;\n        stickyRowsOffsets.push({\n          accumulatedHeight,\n          rowHeight\n        });\n        accumulatedHeight += rowHeight;\n      });\n      stickyRows.forEach((row, index) => {\n        this.renderer.setStyle(row, 'top', `${stickyRowsOffsets[index].accumulatedHeight}px`);\n        this.renderer.setStyle(row, 'bottom', `${accumulatedHeight - stickyRowsOffsets[index].accumulatedHeight - stickyRowsOffsets[index].rowHeight}px`);\n      });\n    }\n  }\n\n}\n\nTableBodyComponent.ɵfac = function TableBodyComponent_Factory(t) {\n  return new (t || TableBodyComponent)(i0.ɵɵdirectiveInject(DetailsService), i0.ɵɵdirectiveInject(GroupsService), i0.ɵɵdirectiveInject(ChangeNotificationService), i0.ɵɵdirectiveInject(EditService), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DomEventsService), i0.ɵɵdirectiveInject(SelectionService), i0.ɵɵdirectiveInject(CellSelectionService), i0.ɵɵdirectiveInject(ColumnInfoService), i0.ɵɵdirectiveInject(NavigationService));\n};\n\nTableBodyComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TableBodyComponent,\n  selectors: [[\"\", \"kendoGridTableBody\", \"\"]],\n  inputs: {\n    columns: \"columns\",\n    allColumns: \"allColumns\",\n    groups: \"groups\",\n    detailTemplate: \"detailTemplate\",\n    noRecordsTemplate: \"noRecordsTemplate\",\n    data: \"data\",\n    skip: \"skip\",\n    selectable: \"selectable\",\n    filterable: \"filterable\",\n    noRecordsText: \"noRecordsText\",\n    isLocked: \"isLocked\",\n    isLoading: \"isLoading\",\n    isVirtual: \"isVirtual\",\n    cellLoadingTemplate: \"cellLoadingTemplate\",\n    skipGroupDecoration: \"skipGroupDecoration\",\n    showGroupFooters: \"showGroupFooters\",\n    lockedColumnsCount: \"lockedColumnsCount\",\n    totalColumnsCount: \"totalColumnsCount\",\n    virtualColumns: \"virtualColumns\",\n    trackBy: \"trackBy\",\n    rowSticky: \"rowSticky\",\n    rowClass: \"rowClass\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c40,\n  decls: 4,\n  vars: 5,\n  consts: [[4, \"ngIf\"], [\"class\", \"k-grid-norecords\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"resize\", 4, \"ngIf\"], [\"kendoGridLogicalRow\", \"\", 1, \"k-grid-add-row\", \"k-grid-edit-row\", \"k-master-row\", 3, \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\"], [\"class\", \"k-hierarchy-cell\", \"kendoGridLogicalCell\", \"\", \"aria-selected\", \"false\", 3, \"logicalRowIndex\", \"logicalColIndex\", 4, \"ngIf\"], [\"kendoGridCell\", \"\", \"kendoGridLogicalCell\", \"\", \"role\", \"gridcell\", 3, \"rowIndex\", \"columnIndex\", \"isNew\", \"column\", \"dataItem\", \"k-grid-content-sticky\", \"ngClass\", \"left\", \"ngStyle\", \"logicalRowIndex\", \"logicalColIndex\", \"colSpan\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"class\", \"k-group-cell\", \"role\", \"presentation\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"presentation\", 1, \"k-group-cell\"], [\"kendoGridLogicalCell\", \"\", \"aria-selected\", \"false\", 1, \"k-hierarchy-cell\", 3, \"logicalRowIndex\", \"logicalColIndex\"], [\"kendoGridCell\", \"\", \"kendoGridLogicalCell\", \"\", \"role\", \"gridcell\", 3, \"rowIndex\", \"columnIndex\", \"isNew\", \"column\", \"dataItem\", \"ngClass\", \"ngStyle\", \"logicalRowIndex\", \"logicalColIndex\", \"colSpan\"], [1, \"k-grid-norecords\"], [3, \"templateContext\"], [\"kendoGridGroupHeader\", \"\", \"kendoGridLogicalRow\", \"\", 3, \"columns\", \"groups\", \"item\", \"hasDetails\", \"skipGroupDecoration\", \"hasGroupHeaderColumn\", \"groupHeaderColumns\", \"rowIndex\", \"totalColumnsCount\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", 4, \"ngIf\"], [\"kendoGridLogicalRow\", \"\", 3, \"dataRowIndex\", \"dataItem\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", \"k-grid-row-sticky\", \"ngClass\", \"k-alt\", \"k-master-row\", \"k-grid-edit-row\", \"k-selected\", 4, \"ngIf\"], [\"class\", \"k-detail-row\", \"kendoGridLogicalRow\", \"\", 3, \"k-alt\", \"dataRowIndex\", \"dataItem\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", 4, \"ngIf\"], [\"class\", \"k-group-footer\", \"kendoGridLogicalRow\", \"\", 3, \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", 4, \"ngIf\"], [\"kendoGridGroupHeader\", \"\", \"kendoGridLogicalRow\", \"\", 3, \"columns\", \"groups\", \"item\", \"hasDetails\", \"skipGroupDecoration\", \"hasGroupHeaderColumn\", \"groupHeaderColumns\", \"rowIndex\", \"totalColumnsCount\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\"], [\"kendoGridLogicalRow\", \"\", 3, \"dataRowIndex\", \"dataItem\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", \"ngClass\"], [\"class\", \"k-hierarchy-cell\", \"kendoGridLogicalCell\", \"\", \"aria-selected\", \"false\", \"role\", \"gridcell\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"dataRowIndex\", \"dataItem\", \"detailExpandCell\", 4, \"ngIf\"], [\"kendoGridCell\", \"\", \"kendoGridLogicalCell\", \"\", \"role\", \"gridcell\", 3, \"rowIndex\", \"columnIndex\", \"column\", \"dataItem\", \"isLoading\", \"isVirtual\", \"loadingTemplate\", \"logicalRowIndex\", \"logicalColIndex\", \"dataRowIndex\", \"colIndex\", \"colSpan\", \"k-grid-content-sticky\", \"k-touch-action-none\", \"k-touch-action-auto\", \"ngClass\", \"k-grid-edit-cell\", \"ngStyle\", \"k-selected\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"kendoGridLogicalCell\", \"\", \"aria-selected\", \"false\", \"role\", \"gridcell\", 1, \"k-hierarchy-cell\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"dataRowIndex\", \"dataItem\", \"detailExpandCell\"], [\"class\", \"k-icon\", \"href\", \"#\", \"tabindex\", \"-1\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", \"tabindex\", \"-1\", 1, \"k-icon\", 3, \"ngClass\", \"click\"], [\"kendoGridCell\", \"\", \"kendoGridLogicalCell\", \"\", \"role\", \"gridcell\", 3, \"rowIndex\", \"columnIndex\", \"column\", \"dataItem\", \"isLoading\", \"isVirtual\", \"loadingTemplate\", \"logicalRowIndex\", \"logicalColIndex\", \"dataRowIndex\", \"colIndex\", \"colSpan\", \"ngClass\", \"ngStyle\"], [\"kendoGridLogicalRow\", \"\", 1, \"k-detail-row\", 3, \"dataRowIndex\", \"dataItem\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\"], [\"class\", \"k-group-cell\", 4, \"ngFor\", \"ngForOf\"], [1, \"k-hierarchy-cell\"], [\"kendoGridLogicalCell\", \"\", \"role\", \"gridcell\", \"aria-selected\", \"false\", 1, \"k-detail-cell\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"dataRowIndex\", \"dataItem\", \"colIndex\", \"colSpan\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"k-group-cell\"], [\"kendoGridLogicalRow\", \"\", 1, \"k-group-footer\", 3, \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\"], [\"kendoGridLogicalCell\", \"\", 3, \"logicalRowIndex\", \"logicalColIndex\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"kendoGridLogicalCell\", \"\", 3, \"logicalRowIndex\", \"logicalColIndex\"], [3, \"resize\"]],\n  template: function TableBodyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TableBodyComponent_ng_container_0_Template, 5, 8, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, TableBodyComponent_tr_1_Template, 4, 3, \"tr\", 1);\n      i0.ɵɵtemplate(2, TableBodyComponent_ng_container_2_Template, 5, 4, \"ng-container\", 2);\n      i0.ɵɵtemplate(3, TableBodyComponent_kendo_resize_sensor_3_Template, 1, 0, \"kendo-resize-sensor\", 3);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.editService.hasNewItem);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.data == null ? null : ctx.data.length) === 0 || ctx.data === null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.data)(\"ngForTrackBy\", ctx.trackByWrapper);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.rowSticky);\n    }\n  },\n  directives: [i4.NgIf, i4.NgForOf, LogicalRowDirective, LogicalCellDirective, CellComponent, i4.NgClass, i4.NgStyle, TemplateContextDirective, GroupHeaderComponent, i4.NgTemplateOutlet, i1$1.ResizeSensorComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableBodyComponent, [{\n    type: Component,\n    args: [{\n      selector: '[kendoGridTableBody]',\n      template: `\n    <ng-container *ngIf=\"editService.hasNewItem\">\n        <tr class=\"k-grid-add-row k-grid-edit-row k-master-row\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"addRowLogicalIndex()\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"unlockedColumnsCount\">\n            <ng-container *ngIf=\"!skipGroupDecoration\">\n                <td class=\"k-group-cell\" *ngFor=\"let g of groups\" role=\"presentation\"></td>\n            </ng-container>\n            <td class=\"k-hierarchy-cell\"\n                *ngIf=\"detailTemplate?.templateRef\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"addRowLogicalIndex()\"\n                    [logicalColIndex]=\"0\"\n                    aria-selected=\"false\"\n                >\n            </td>\n            <td *ngFor=\"let column of columns; let columnIndex = index; trackBy: trackByColumns;\"\n                kendoGridCell\n                    [rowIndex]=\"-1\"\n                    [columnIndex]=\"lockedColumnsCount + columnIndex\"\n                    [isNew]=\"true\"\n                    [column]=\"column\"\n                    [dataItem]=\"newDataItem\"\n                [class.k-grid-content-sticky]=\"column.sticky\"\n                [ngClass]=\"column.cssClass\"\n                [style.left]=\"column.sticky ? '0' : undefined\"\n                [ngStyle]=\"column.sticky ? addStickyColumnStyles(column) : column.style\"\n                [attr.colspan]=\"column.colspan\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"addRowLogicalIndex()\"\n                    [logicalColIndex]=\"logicalColIndex(column)\"\n                    [colSpan]=\"column.colspan\"\n                role=\"gridcell\">\n            </td>\n        </tr>\n    </ng-container>\n    <tr *ngIf=\"data?.length === 0 || data === null\" class=\"k-grid-norecords\">\n        <td [attr.colspan]=\"colSpan\">\n            <ng-template\n                *ngIf=\"noRecordsTemplate?.templateRef\"\n                [templateContext]=\"{\n                    templateRef: noRecordsTemplate?.templateRef\n                 }\">\n            </ng-template>\n            <ng-container *ngIf=\"!noRecordsTemplate?.templateRef\">\n                {{noRecordsText}}\n            </ng-container>\n        </td>\n    </tr>\n\n    <ng-container *ngFor=\"let item of data; trackBy: trackByWrapper; let rowIndex = index;\">\n        <tr *ngIf=\"isGroup(item) && isParentGroupExpanded($any(item)) && showGroupHeader(item)\"\n            kendoGridGroupHeader\n                [columns]=\"columns\"\n                [groups]=\"groups\"\n                [item]=\"$any(item)\"\n                [hasDetails]=\"!!detailTemplate?.templateRef\"\n                [skipGroupDecoration]=\"skipGroupDecoration\"\n                [hasGroupHeaderColumn]=\"hasGroupHeaderColumn\"\n                [groupHeaderColumns]=\"groupHeaderColumns\"\n                [rowIndex]=\"rowIndex + 1\"\n                [totalColumnsCount]=\"totalColumnsCount\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"groupHeaderSlaveCellsCount\">\n        </tr>\n        <tr\n            *ngIf=\"isDataItem(item) && (!$any(item).group || isDataItemInExpandedGroup($any(item)))\"\n            kendoGridLogicalRow\n                [dataRowIndex]=\"$any(item).index\"\n                [dataItem]=\"item.data\"\n                [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"unlockedColumnsCount\"\n            [class.k-grid-row-sticky]=\"rowSticky ? rowSticky({ dataItem: item.data, index: $any(item).index }) : false\"\n            [ngClass]=\"rowClass({ dataItem: item.data, index: $any(item).index })\"\n            [class.k-alt]=\"isOdd(item)\"\n            [class.k-master-row]=\"true\"\n            [class.k-grid-edit-row]=\"isEditingRow($any(item).index)\"\n            [attr.data-kendo-grid-item-index]=\"$any(item).index\"\n            [class.k-selected]=\"isSelectable() && isRowSelected(item)\">\n            <ng-container *ngIf=\"!skipGroupDecoration\">\n                <td class=\"k-group-cell\" *ngFor=\"let g of groups\" role=\"presentation\"></td>\n            </ng-container>\n            <td class=\"k-hierarchy-cell\"\n                *ngIf=\"detailTemplate?.templateRef\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                    [logicalColIndex]=\"0\"\n                    [dataRowIndex]=\"$any(item).index\"\n                    [dataItem]=\"item.data\"\n                    [detailExpandCell]=\"true\"\n                    aria-selected=\"false\"\n                    role=\"gridcell\">\n                <a class=\"k-icon\"\n                    *ngIf=\"detailTemplate.showIf(item.data, $any(item).index)\"\n                    [ngClass]=\"detailButtonStyles(item)\"\n                    [attr.title]=\"detailButtonTitle(item)\"\n                    [attr.aria-label]=\"detailButtonTitle(item)\"\n                    href=\"#\" tabindex=\"-1\" (click)=\"toggleRow($any(item).index, item.data)\"></a>\n            </td>\n            <td\n                kendoGridCell\n                    [rowIndex]=\"$any(item).index\"\n                    [columnIndex]=\"lockedColumnsCount + columnIndex\"\n                    [attr.data-kendo-grid-column-index]=\"lockedColumnsCount + columnIndex\"\n                    [column]=\"column\"\n                    [dataItem]=\"item.data\"\n                    [isLoading]=\"isLoading\"\n                    [isVirtual]=\"isVirtual\"\n                    [loadingTemplate]=\"cellLoadingTemplate\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                    [logicalColIndex]=\"logicalColIndex(column)\"\n                    [dataRowIndex]=\"$any(item).index\"\n                    [dataItem]=\"item.data\"\n                    [colIndex]=\"columnIndex\"\n                    [colSpan]=\"column.colspan\"\n                    role=\"gridcell\"\n                    [attr.aria-selected]=\"isSelectable() ? isAriaSelected(item, column) : undefined\"\n                    [class.k-grid-content-sticky]=\"column.sticky\"\n                    [class.k-touch-action-none]=\"isSelectable() && $any(selectable).drag\"\n                    [class.k-touch-action-auto]=\"!(isSelectable() && $any(selectable).drag)\"\n                [ngClass]=\"column.cssClass\"\n                [class.k-grid-edit-cell]=\"isEditingCell($any(item).index, column)\"\n                [ngStyle]=\"column.sticky ? addStickyColumnStyles(column) : column.style\"\n                [attr.colspan]=\"column.colspan\"\n                [class.k-selected]=\"isSelectable && cellSelectionService.isCellSelected(item, column)\"\n                *ngFor=\"let column of columns; let columnIndex = index; trackBy: trackByColumns;\">\n            </td>\n        </tr>\n        <tr *ngIf=\"isDataItem(item) &&\n                (!$any(item).group || isDataItemInExpandedGroup($any(item))) &&\n                detailTemplate?.templateRef &&\n                detailTemplate.showIf(item.data, $any(item).index) &&\n                isExpanded(item)\"\n            class=\"k-detail-row\"\n            [class.k-alt]=\"isOdd(item)\"\n            kendoGridLogicalRow\n                [dataRowIndex]=\"$any(item).index\"\n                [dataItem]=\"item.data\"\n                [logicalRowIndex]=\"logicalRowIndex(rowIndex) + 1\"\n                [logicalSlaveRow]=\"false\"\n                [logicalCellsCount]=\"1\"\n            >\n            <td class=\"k-group-cell\" *ngFor=\"let g of groups\"></td>\n            <td class=\"k-hierarchy-cell\"></td>\n            <td class=\"k-detail-cell\"\n                [attr.colspan]=\"columnsSpan\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex(rowIndex) + 1\"\n                    [logicalColIndex]=\"0\"\n                    [dataRowIndex]=\"$any(item).index\"\n                    [dataItem]=\"item.data\"\n                    [colIndex]=\"0\"\n                    [colSpan]=\"allColumnsSpan + 1\"\n                    role=\"gridcell\" aria-selected=\"false\"\n                >\n                <ng-template\n                    [ngTemplateOutlet]=\"detailTemplate.templateRef\"\n                    [ngTemplateOutletContext]=\"{\n                        dataItem: item.data,\n                        rowIndex: $any(item).index,\n                        $implicit: item.data\n                    }\">\n                </ng-template>\n            </td>\n        </tr>\n        <tr *ngIf=\"isFooter(item) &&\n                $any(item).group &&\n                (isFooterItemInExpandedGroup($any(item)) || (showGroupFooters && isParentGroupExpanded($any(item).group))) &&\n                !$any(item.data).hideFooter\"\n            class=\"k-group-footer\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"unlockedColumnsCount\">\n            <ng-container *ngIf=\"!skipGroupDecoration\">\n                <td class=\"k-group-cell\" *ngFor=\"let g of groups\"></td>\n            </ng-container>\n            <td class=\"k-hierarchy-cell\"\n                *ngIf=\"detailTemplate?.templateRef\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                    [logicalColIndex]=\"0\"\n                    aria-selected=\"false\"\n                >\n            </td>\n            <td kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                    [logicalColIndex]=\"logicalColIndex(column)\"\n                [attr.data-skip]=\"skipGroupDecoration\"\n                *ngFor=\"let column of footerColumns; let columnIndex = index; trackBy: trackByColumns;\">\n                <ng-template\n                    [templateContext]=\"{\n                        templateRef: $any(column).groupFooterTemplateRef,\n                        group: $any(item.data),\n                        field: $any(column).field,\n                        column: column,\n                        aggregates: $any(item.data)?.aggregates,\n                        $implicit: $any(item.data)?.aggregates\n                    }\">\n                </ng-template>\n           </td>\n        </tr>\n    </ng-container>\n    <kendo-resize-sensor *ngIf=\"rowSticky\" (resize)=\"resizeHandler()\"></kendo-resize-sensor>\n    `\n    }]\n  }], function () {\n    return [{\n      type: DetailsService\n    }, {\n      type: GroupsService\n    }, {\n      type: ChangeNotificationService\n    }, {\n      type: EditService\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: DomEventsService\n    }, {\n      type: SelectionService\n    }, {\n      type: CellSelectionService\n    }, {\n      type: ColumnInfoService\n    }, {\n      type: NavigationService\n    }];\n  }, {\n    columns: [{\n      type: Input\n    }],\n    allColumns: [{\n      type: Input\n    }],\n    groups: [{\n      type: Input\n    }],\n    detailTemplate: [{\n      type: Input\n    }],\n    noRecordsTemplate: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    skip: [{\n      type: Input\n    }],\n    selectable: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    noRecordsText: [{\n      type: Input\n    }],\n    isLocked: [{\n      type: Input\n    }],\n    isLoading: [{\n      type: Input\n    }],\n    isVirtual: [{\n      type: Input\n    }],\n    cellLoadingTemplate: [{\n      type: Input\n    }],\n    skipGroupDecoration: [{\n      type: Input\n    }],\n    showGroupFooters: [{\n      type: Input\n    }],\n    lockedColumnsCount: [{\n      type: Input\n    }],\n    totalColumnsCount: [{\n      type: Input\n    }],\n    virtualColumns: [{\n      type: Input\n    }],\n    trackBy: [{\n      type: Input\n    }],\n    rowSticky: [{\n      type: Input\n    }],\n    rowClass: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nconst columnsToResize = ({\n  columns\n}) => Math.max(1, resizableColumns(columns).length);\n/**\n * @hidden\n */\n\n\nconst row = selector => element => element.querySelector(selector);\n/**\n * @hidden\n */\n\n\nconst headerRow = index => element => element.querySelectorAll('thead>tr')[index];\n/**\n * @hidden\n */\n\n\nconst cell = (index, selector = 'td') => element => element.querySelectorAll(`${selector}:not(.k-group-cell):not(.k-hierarchy-cell)`)[index];\n/**\n * @hidden\n */\n\n\nconst offsetWidth = element => element.offsetWidth;\n/**\n * @hidden\n */\n\n\nconst pipe = (...fns) => data => fns.reduce((state, fn) => state ? fn(state) : 0, data);\n/**\n * @hidden\n */\n\n\nclass TableDirective {\n  constructor(element, renderer, service, zone, cdr) {\n    this.element = element;\n    this.renderer = renderer;\n    this.service = service;\n    this.zone = zone;\n    this.cdr = cdr;\n    this.locked = false;\n    this.firstResize = false;\n  }\n\n  get minWidth() {\n    return this.firstResize ? 0 : null;\n  }\n\n  ngOnInit() {\n    const obs = this.service.changes.pipe(filter(e => this.locked === e.locked));\n    this.subscription = obs.pipe(filter(e => e.type === 'start'), tap(this.initState.bind(this)), map(columnsToResize), switchMap(take => obs.pipe(filter(e => e.type === 'resizeTable'), map(e => e.delta), bufferCount(take)))).subscribe(this.resize.bind(this));\n    this.autoFitSubscription = this.service.registerTable({\n      autoFit: this.autoFitObservable.bind(this),\n      locked: this.locked\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n\n    if (this.autoFitSubscription) {\n      this.autoFitSubscription();\n      this.autoFitSubscription = null;\n    }\n  }\n\n  initState() {\n    this.firstResize = true;\n\n    if (!this.virtualColumns || this.locked) {\n      this.originalWidth = offsetWidth(this.element.nativeElement);\n    }\n  }\n\n  resize(deltas) {\n    if (!this.virtualColumns || this.locked) {\n      const delta = deltas.reduce((sum, item) => sum + item, 0);\n      const width = this.originalWidth + delta;\n      this.renderer.setStyle(this.element.nativeElement, 'width', width + 'px');\n    }\n\n    this.cdr.detectChanges();\n  }\n\n  autoFitObservable(columnInfo) {\n    return Observable.create(observer => {\n      this.zone.runOutsideAngular(() => {\n        this.renderer.addClass(this.element.nativeElement, 'k-autofitting');\n        this.cdr.detectChanges();\n        const widths = columnInfo.map(this.measureColumn.bind(this));\n        this.renderer.removeClass(this.element.nativeElement, 'k-autofitting');\n        observer.next(widths);\n      });\n    });\n  }\n\n  measureColumn(info) {\n    const dom = this.element.nativeElement;\n    const header = pipe(headerRow(info.level), cell(info.headerIndex, 'th'), offsetWidth)(dom);\n    let data = 0;\n\n    if (!info.isParentSpan || info.isParentSpan && info.isLastInSpan) {\n      data = pipe(row('tbody>tr:not(.k-grouping-row):not(.k-grid-norecords)'), cell(info.index), offsetWidth)(dom);\n    }\n\n    const footer = pipe(row('tfoot>tr'), cell(info.index), offsetWidth)(dom);\n    return Math.max(header, data, footer);\n  }\n\n}\n\nTableDirective.ɵfac = function TableDirective_Factory(t) {\n  return new (t || TableDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(ColumnResizingService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nTableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TableDirective,\n  selectors: [[\"table\"]],\n  hostVars: 2,\n  hostBindings: function TableDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"min-width\", ctx.minWidth);\n    }\n  },\n  inputs: {\n    locked: \"locked\",\n    virtualColumns: \"virtualColumns\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableDirective, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: 'table'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: ColumnResizingService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    locked: [{\n      type: Input\n    }],\n    virtualColumns: [{\n      type: Input\n    }],\n    minWidth: [{\n      type: HostBinding,\n      args: ['style.min-width']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass ResizableContainerDirective {\n  constructor(el, renderer, resizeService, ctx) {\n    this.el = el;\n    this.renderer = renderer;\n    this.resizeService = resizeService;\n    this.ctx = ctx;\n    this.enabled = false;\n  }\n\n  set lockedWidth(value) {\n    this._lockedWidth = value;\n\n    if (this.enabled) {\n      this.attachResize();\n      this.resize();\n    }\n  }\n\n  set kendoGridResizableContainer(enabled) {\n    const refresh = enabled !== this.enabled;\n    this.enabled = enabled;\n\n    if (refresh) {\n      this.attachResize();\n      this.resize();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.resizeSubscription) {\n      this.resizeSubscription.unsubscribe();\n    }\n  }\n\n  attachResize() {\n    if (this.resizeSubscription && !this.enabled) {\n      this.resizeSubscription.unsubscribe();\n      this.resizeSubscription = null;\n    }\n\n    if (!this.resizeSubscription && this.enabled) {\n      this.resizeSubscription = this.resizeService.changes.subscribe(this.resize.bind(this));\n    }\n  }\n\n  resize() {\n    if (this.ctx.grid && this.ctx.grid.wrapper) {\n      const containerElement = this.ctx.grid.wrapper.nativeElement;\n      const width = Math.max(containerElement.clientWidth - this._lockedWidth, 0);\n\n      if (this.enabled && width > 0) {\n        this.renderer.setStyle(this.el.nativeElement, \"width\", width + \"px\");\n      } else {\n        this.renderer.setStyle(this.el.nativeElement, \"width\", \"\");\n      }\n    }\n  }\n\n}\n\nResizableContainerDirective.ɵfac = function ResizableContainerDirective_Factory(t) {\n  return new (t || ResizableContainerDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(ResizeService), i0.ɵɵdirectiveInject(ContextService));\n};\n\nResizableContainerDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ResizableContainerDirective,\n  selectors: [[\"\", \"kendoGridResizableContainer\", \"\"]],\n  inputs: {\n    lockedWidth: \"lockedWidth\",\n    kendoGridResizableContainer: \"kendoGridResizableContainer\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ResizableContainerDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridResizableContainer]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: ResizeService\n    }, {\n      type: ContextService\n    }];\n  }, {\n    lockedWidth: [{\n      type: Input,\n      args: ['lockedWidth']\n    }],\n    kendoGridResizableContainer: [{\n      type: Input\n    }]\n  });\n})();\n\nconst elementAt = (index, elements, elementOffset) => {\n  for (let idx = 0, elementIdx = 0; idx < elements.length; idx++) {\n    const offset = elementOffset(elements[idx]);\n\n    if (elementIdx <= index && index <= elementIdx + offset - 1) {\n      return elements[idx];\n    }\n\n    elementIdx += offset;\n  }\n};\n\nconst rowAt = (index, rows) => elementAt(index, rows, row => row.hasAttribute('data-kendo-grid-item-index') ? 1 : 0);\n\nconst cellAt = (index, cells) => elementAt(index, cells, cell => !hasClasses(cell, NON_DATA_CELL_CLASSES) ? parseInt(cell.getAttribute('colSpan'), 10) || 1 : 0);\n\nconst EMPTY_OBJECT = {};\n/**\n * @hidden\n */\n\nconst SCROLLER_FACTORY_TOKEN = new InjectionToken('grid-scroll-service-factory');\n/**\n * @hidden\n */\n\nfunction DEFAULT_SCROLLER_FACTORY(observable) {\n  return new ScrollerService(observable);\n}\n\nconst wheelDeltaY = e => {\n  const deltaY = e.wheelDeltaY;\n\n  if (e.wheelDelta && (deltaY === undefined || deltaY)) {\n    return e.wheelDelta;\n  } else if (e.detail && e.axis === e.VERTICAL_AXIS) {\n    return -e.detail * 10;\n  }\n\n  return 0;\n};\n\nconst preventLockedScroll = (args, element) => {\n  const delta = wheelDeltaY(args);\n  const scrollTop = element.scrollTop;\n  const allowScroll = scrollTop === 0 && 0 < delta || element.scrollHeight <= element.offsetHeight + scrollTop && delta < 0;\n\n  if (!allowScroll) {\n    event.preventDefault();\n  }\n};\n\nconst translateY = (renderer, value) => el => renderer.setStyle(el, \"transform\", `translateY(${value}px)`);\n\nconst maybeNativeElement = el => el ? el.nativeElement : null;\n\nconst hasScrollbar = (el, parent) => el.nativeElement.offsetWidth > parent.nativeElement.clientWidth;\n\nconst setHeight = renderer => ({\n  el,\n  height\n}) => renderer.setStyle(el, \"height\", `${height}px`);\n\nconst bufferSize = 1;\n/**\n * @hidden\n */\n\nclass ListComponent {\n  constructor(scrollerFactory, detailsService, changeNotification, suspendService, groupsService, ngZone, renderer, scrollSyncService, resizeService, editService, supportService, navigationService, scrollRequestService, localization, columnResizingService, changeDetector, pdfService, columnInfo) {\n    this.changeNotification = changeNotification;\n    this.suspendService = suspendService;\n    this.groupsService = groupsService;\n    this.ngZone = ngZone;\n    this.renderer = renderer;\n    this.scrollSyncService = scrollSyncService;\n    this.resizeService = resizeService;\n    this.editService = editService;\n    this.supportService = supportService;\n    this.navigationService = navigationService;\n    this.localization = localization;\n    this.columnResizingService = columnResizingService;\n    this.changeDetector = changeDetector;\n    this.pdfService = pdfService;\n    this.columnInfo = columnInfo;\n    this.groups = [];\n    this.skip = 0;\n    this.columns = new ColumnsContainer(() => []);\n    this.selectable = false;\n    this.groupable = false;\n    this.trackBy = defaultTrackBy;\n    this.sort = new Array();\n    this.contentScroll = new EventEmitter();\n    this.pageChange = new EventEmitter();\n    this.scrollBottom = new EventEmitter();\n    this.columnsStartIdx = 0;\n    this.resizeSensors = new QueryList();\n    this.dispatcher = new Subject();\n    this.containerScrollTop = 0;\n    this.scrollLeft = 0;\n    this.rtl = false;\n    this.scroller = scrollerFactory(this.dispatcher);\n    this.subscriptions = detailsService.changes.subscribe(x => this.detailExpand(x));\n    this.subscriptions.add(scrollRequestService.requests.subscribe(x => this.scrollTo(x)));\n  }\n\n  get hostClass() {\n    return true;\n  }\n\n  get hostRole() {\n    return 'presentation';\n  }\n\n  get showFooter() {\n    return this.groupable && this.groupable.showFooter;\n  }\n\n  get totalWidth() {\n    if (this.virtualColumns && this.columns.unlockedWidth) {\n      return this.columns.unlockedWidth;\n    }\n  }\n\n  get lockedLeafColumns() {\n    return this.columns.lockedLeafColumns;\n  }\n\n  get nonLockedLeafColumns() {\n    return this.columns.nonLockedLeafColumns;\n  }\n\n  get nonLockedColumnsToRender() {\n    if (this.virtualColumns && !this.pdfService.exporting) {\n      return this.viewportColumns;\n    }\n\n    return this.nonLockedLeafColumns;\n  }\n\n  get leafColumns() {\n    return this.columns.leafColumnsToRender;\n  }\n\n  get lockedWidth() {\n    const groupCellsWidth = this.groups.length * GROUP_CELL_WIDTH;\n    return expandColumns(this.lockedLeafColumns.toArray()).reduce((prev, curr) => prev + (curr.width || 0), groupCellsWidth);\n  }\n\n  get nonLockedWidth() {\n    if (!this.rtl && this.lockedLeafColumns.length || this.virtualColumns) {\n      return sumColumnWidths(expandColumns(this.nonLockedColumnsToRender.toArray()));\n    }\n\n    return undefined;\n  }\n\n  get isLocked() {\n    return this.lockedLeafColumns.length > 0;\n  }\n\n  ngOnInit() {\n    this.init();\n    this.subscriptions.add(this.ngZone.runOutsideAngular(this.handleRowSync.bind(this)));\n    this.subscriptions.add(this.ngZone.runOutsideAngular(this.handleRowNavigationLocked.bind(this)));\n    this.subscriptions.add(merge(this.columns.changes, this.resizeService.changes).subscribe(() => {\n      if (this.virtualColumns) {\n        this.ngZone.run(() => {\n          this.updateViewportColumns();\n          this.changeDetector.markForCheck();\n        });\n      }\n    }));\n    this.subscriptions.add(this.localization.changes.subscribe(({\n      rtl\n    }) => this.rtl = rtl));\n  }\n\n  ngOnChanges(changes) {\n    const hasInitialSkip = changes.skip && changes.skip.firstChange && changes.skip.currentValue > 0;\n\n    if (hasInitialSkip) {\n      this.handleInitialScrollToSkip();\n    }\n\n    if (isChanged$1(\"skip\", changes) && !this.rebind) {\n      this.skipScroll = true;\n      this.container.nativeElement.scrollTop = this.rowHeightService.offset(this.skip);\n    }\n\n    if (anyChanged([\"total\", \"take\"], changes)) {\n      this.init();\n    }\n\n    this.rebind = false;\n  }\n\n  ngDoCheck() {\n    if (this.virtualColumns && (!this.viewportColumns || this.viewportWidthChange())) {\n      this.updateViewportColumns();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.skip && this.isVirtual) {\n      this.container.nativeElement.scrollTop = this.rowHeightService.offset(this.skip);\n    }\n\n    this.resetNavigationViewport();\n    this.attachContainerScroll();\n    this.initResizeService();\n  }\n\n  ngAfterViewChecked() {\n    const isLocked = this.isLocked;\n\n    if (isLocked && !this.hasLockedContainer) {\n      this.syncRowsHeight();\n    }\n\n    this.hasLockedContainer = isLocked;\n  }\n\n  syncRowsHeight() {\n    if (this.lockedContainer) {\n      syncRowsHeight(this.lockedTable.nativeElement, this.table.nativeElement);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n\n    if (this.resizeService) {\n      this.resizeService.destroy();\n    }\n\n    this.cleanupScroller();\n  }\n\n  init() {\n    if (this.suspendService.scroll) {\n      return;\n    }\n\n    this.rowHeightService = new RowHeightService(this.total, this.rowHeight, this.detailRowHeight);\n    this.totalHeight = this.rowHeightService.totalHeight();\n\n    if (!isUniversal()) {\n      this.ngZone.runOutsideAngular(this.createScroller.bind(this));\n    }\n  }\n\n  lockedScroll() {\n    if (!this.suspendService.scroll) {\n      const lockedScrollTop = this.lockedContainer.nativeElement.scrollTop;\n\n      if (lockedScrollTop !== this.containerScrollTop) {\n        this.container.nativeElement.scrollTop = this.containerScrollTop = lockedScrollTop;\n      }\n    }\n  }\n\n  lockedMousewheel(args) {\n    if (!args.ctrlKey) {\n      preventLockedScroll(args, this.container.nativeElement);\n      const scrollDelta = wheelDeltaY(args);\n      this.container.nativeElement.scrollTop -= scrollDelta;\n    }\n  }\n\n  lockedKeydown(args) {\n    if (args.keyCode === Keys.PageDown || args.keyCode === Keys.PageUp) {\n      const dir = args.keyCode === Keys.PageDown ? 1 : -1;\n      const element = this.container.nativeElement;\n      element.scrollTop += element.offsetHeight * dir * 0.8;\n      args.preventDefault();\n    }\n  }\n\n  detailExpand({\n    index,\n    expand\n  }) {\n    if (expand) {\n      this.rowHeightService.expandDetail(index);\n    } else {\n      this.rowHeightService.collapseDetail(index);\n    }\n\n    this.totalHeight = this.rowHeightService.totalHeight();\n    this.resetNavigationViewport();\n  }\n\n  attachContainerScroll() {\n    if (isUniversal()) {\n      return;\n    }\n\n    this.ngZone.runOutsideAngular(() => {\n      this.subscriptions.add(fromEvent(this.container.nativeElement, 'scroll').pipe(map(event => event.target), filter(() => !this.suspendService.scroll), tap(target => {\n        this.onContainerScroll(target);\n        this.resetNavigationViewport();\n\n        if (this.virtualColumns) {\n          this.handleColumnScroll();\n        }\n\n        const rowViewport = this.navigationService.viewport || EMPTY_OBJECT;\n        const columnViewport = this.navigationService.columnViewport || EMPTY_OBJECT;\n        this.contentScroll.emit({\n          scrollLeft: target.scrollLeft,\n          scrollTop: target.scrollTop,\n          startRow: rowViewport.firstItemIndex,\n          endRow: rowViewport.lastItemIndex,\n          startColumn: columnViewport.firstItemIndex,\n          endColumn: columnViewport.lastItemIndex\n        });\n      })).subscribe(this.dispatcher));\n    });\n    this.scrollSyncService.registerEmitter(this.container.nativeElement, \"body\");\n  }\n\n  createScroller() {\n    this.cleanupScroller();\n    const observable = this.scroller.create(this.rowHeightService, this.skip, this.take, this.total);\n    this.skipScroll = false;\n    this.scrollerSubscription = observable.pipe(filter(x => x instanceof PageAction), filter(() => {\n      const temp = this.skipScroll;\n      this.skipScroll = false;\n      return !temp;\n    }), tap(() => this.rebind = true)).subscribe(x => this.ngZone.run(() => this.pageChange.emit(x)));\n    this.scrollerSubscription.add(observable.pipe(filter(x => x instanceof ScrollAction)).subscribe(this.scroll.bind(this)));\n    this.scrollerSubscription.add(observable.pipe(filter(x => x instanceof ScrollBottomAction)).subscribe(() => this.scrollBottom.emit()));\n  }\n\n  scroll({\n    offset = 0\n  }) {\n    if (this.isVirtual) {\n      [maybeNativeElement(this.table), maybeNativeElement(this.lockedTable)].filter(isPresent).forEach(translateY(this.renderer, offset));\n    }\n\n    this.resetNavigationViewport();\n  }\n\n  onContainerScroll({\n    scrollTop\n  }) {\n    this.containerScrollTop = scrollTop;\n\n    if (this.lockedContainer) {\n      this.lockedContainer.nativeElement.scrollTop = scrollTop;\n    }\n  }\n\n  handleInitialScrollToSkip() {\n    const shouldScroll = () => this.isVirtual && this.skip > 0 && this.total > 0;\n\n    const sub = this.changeNotification.changes.pipe(filter(shouldScroll)).subscribe(_ => {\n      this.scrollTo({\n        row: this.skip\n      });\n      sub.unsubscribe();\n    });\n  }\n\n  handleRowSync() {\n    const isLocked = () => isPresent(this.lockedContainer);\n\n    const onStable = () => this.ngZone.onStable.asObservable().pipe(take(1));\n\n    return merge(this.changeNotification.changes, this.groupsService.changes.pipe(filter(isLocked), switchMapTo(onStable())), this.editService.changed, this.resizeService.changes, this.columnResizingService.changes.pipe(filter(change => change.type === 'end')), this.supportService.changes).pipe(tap(() => this.resetNavigationViewport()), filter(isLocked)).subscribe(() => {\n      const scrollTop = this.container.nativeElement.scrollTop;\n      const scrollLeft = this.container.nativeElement.scrollLeft;\n      this.syncRowsHeight();\n      this.syncContainerHeight();\n      this.lockedContainer.nativeElement.scrollTop = this.container.nativeElement.scrollTop = scrollTop; // fixes scroll left position in IE when editing\n\n      this.container.nativeElement.scrollLeft = scrollLeft;\n      this.resizeSensors.forEach(sensor => sensor.acceptSize());\n    });\n  }\n\n  handleRowNavigationLocked() {\n    return this.navigationService.changes.pipe(filter(() => isPresent(this.lockedContainer)), delay(10)).subscribe(args => {\n      if (this.lockedLeafColumns.length <= args.prevColIndex && args.colIndex < this.lockedLeafColumns.length) {\n        const cell = this.navigationService.activeCell;\n\n        if (cell && cell.colIndex + cell.colSpan < args.prevColIndex) {\n          this.container.nativeElement.scrollLeft = 0;\n        }\n      }\n    });\n  }\n\n  scrollToVirtualRow(itemIndex) {\n    if (isPresent(this.detailTemplate)) {\n      itemIndex = Math.floor(itemIndex / 2);\n    }\n\n    const offset = this.rowHeightService.offset(itemIndex);\n    this.container.nativeElement.scrollTop = offset;\n    this.resetNavigationViewport();\n  }\n\n  scrollTo({\n    row,\n    column\n  }) {\n    if (isNumber(row)) {\n      if (this.isVirtual) {\n        this.scrollToVirtualRow(row);\n      } else {\n        const element = rowAt(row, this.table.nativeElement.rows);\n\n        if (element) {\n          this.container.nativeElement.scrollTop = element.offsetTop;\n        }\n      }\n    }\n\n    if (isNumber(column)) {\n      column -= this.lockedLeafColumns.length;\n\n      if (this.virtualColumns) {\n        const columns = this.columns.leafColumnsToRender;\n        let offset = 0;\n\n        for (let idx = 0; idx < column; idx++) {\n          offset += columns[idx].width || 0;\n        }\n\n        const startOffset = this.lockedLeafColumns.length ? 0 : this.groups.length * GROUP_CELL_WIDTH + (this.detailTemplate && column > 0 ? GROUP_CELL_WIDTH : 0);\n        this.container.nativeElement.scrollLeft = this.normalizeScrollLeft(offset + startOffset);\n      } else if (column === 0 && this.detailTemplate) {\n        this.container.nativeElement.scrollLeft = this.normalizeScrollLeft(0);\n      } else {\n        const firstRow = rowAt(0, this.table.nativeElement.rows);\n\n        if (firstRow) {\n          const element = cellAt(column, firstRow.cells);\n\n          if (element) {\n            this.container.nativeElement.scrollLeft = this.elementScrollLeft(element);\n          }\n        }\n      }\n    }\n  }\n\n  resetNavigationViewport() {\n    if (!this.container || !this.navigationService.tableEnabled || !this.navigationService.needsViewport() || this.data.length === 0) {\n      return;\n    }\n\n    const {\n      scrollTop,\n      offsetHeight\n    } = this.container.nativeElement;\n    const scrollBottom = scrollTop + offsetHeight;\n    const firstItemIndex = this.rowHeightService.index(scrollTop);\n    let lastItemIndex = this.rowHeightService.index(scrollBottom);\n    const lastItemOffset = this.rowHeightService.offset(lastItemIndex);\n    const lastItemOverflows = lastItemOffset + this.rowHeight > scrollBottom;\n\n    if (lastItemIndex > 0 && lastItemOverflows) {\n      lastItemIndex--;\n    }\n\n    let viewportStart = firstItemIndex;\n    let viewportEnd = lastItemIndex;\n\n    if (isPresent(this.detailTemplate)) {\n      viewportStart *= 2;\n      viewportEnd *= 2;\n      const firstItemHeight = this.rowHeightService.offset(firstItemIndex);\n\n      if (firstItemHeight + this.rowHeight < scrollTop) {\n        viewportStart++;\n      }\n\n      const lastItemHeight = this.rowHeightService.height(lastItemIndex);\n      const lastItemExpanded = this.rowHeightService.isExpanded(lastItemIndex);\n      const lastItemDetailOverflows = lastItemOffset + lastItemHeight > scrollBottom;\n\n      if (lastItemExpanded && !lastItemDetailOverflows) {\n        viewportEnd++;\n      }\n    }\n\n    this.navigationService.setViewport(viewportStart, viewportEnd);\n  }\n\n  cleanupScroller() {\n    if (this.scrollerSubscription) {\n      this.scrollerSubscription.unsubscribe();\n    }\n\n    if (this.scroller) {\n      this.scroller.destroy();\n    }\n  }\n\n  initResizeService() {\n    this.resizeService.connect(merge(...this.resizeSensors.map(sensor => sensor.resize)));\n  }\n\n  syncContainerHeight() {\n    [maybeNativeElement(this.lockedContainer)].filter(isPresent).map(el => {\n      el.style.height = '';\n      let height = this.container.nativeElement.offsetHeight;\n\n      if (hasScrollbar(this.table, this.container)) {\n        height -= this.supportService.scrollbarWidth;\n      }\n\n      return {\n        el,\n        height\n      };\n    }).forEach(setHeight(this.renderer));\n  }\n\n  updateViewportColumns(range) {\n    const columns = this.columns.nonLockedLeafColumns.toArray();\n    let {\n      startIdx,\n      endIdx,\n      offset\n    } = range || this.calculateViewportColumns();\n    const start = Math.max(0, startIdx - bufferSize);\n    const end = Math.min(endIdx + bufferSize, columns.length - 1);\n\n    if (start < startIdx) {\n      for (let idx = startIdx - 1; idx >= start; idx--) {\n        offset -= columns[idx].width;\n      }\n    }\n\n    let currentColumns = columns.slice(start, end + 1);\n    this.viewportColumnsWidth = currentColumns.reduce((total, column) => total + column.width, 0);\n\n    if (start > 0) {\n      const offsetColumn = new ColumnBase();\n      offsetColumn.width = offset;\n      currentColumns.unshift(offsetColumn);\n    }\n\n    this.viewportColumns = new QueryList();\n    this.viewportColumns.reset(currentColumns);\n    this.columnsStartIdx = start;\n    this.columnsEndIdx = end;\n    this.columnInfo.columnRangeChange.emit({\n      start,\n      end,\n      offset\n    });\n\n    if (!range) {\n      this.updateColumnViewport(startIdx, endIdx);\n    }\n  }\n\n  handleColumnScroll() {\n    const container = this.container.nativeElement;\n    const scrollLeft = container.scrollLeft;\n\n    if (this.scrollLeft !== scrollLeft) {\n      this.scrollLeft = scrollLeft;\n      const range = this.calculateViewportColumns();\n      this.updateColumnViewport(range.startIdx, range.endIdx);\n\n      if (range.startIdx < this.columnsStartIdx || this.columnsEndIdx < range.endIdx) {\n        cancelAnimationFrame(this.columnUpdateFrame);\n        this.columnUpdateFrame = requestAnimationFrame(() => {\n          this.ngZone.run(() => {\n            this.updateViewportColumns(range);\n            this.changeDetector.markForCheck();\n          });\n        });\n      }\n    }\n  }\n\n  updateColumnViewport(startIdx, endIdx) {\n    const lockedCount = this.lockedLeafColumns.length;\n    const leafColumns = this.nonLockedLeafColumns.toArray();\n    const viewportStart = lockedCount + startIdx + (this.detailTemplate && startIdx > 0 ? 1 : 0);\n    let viewportEnd = lockedCount + endIdx + (this.detailTemplate ? 1 : 0);\n\n    for (let idx = 0; idx < leafColumns.length; idx++) {\n      const column = leafColumns[idx];\n\n      if (column.isSpanColumn) {\n        viewportEnd += column.childColumns.length;\n      }\n    }\n\n    this.navigationService.setColumnViewport(viewportStart, viewportEnd);\n  }\n\n  calculateViewportColumns() {\n    const {\n      scrollLeft,\n      clientWidth\n    } = this.container.nativeElement;\n    const columns = this.columns.nonLockedLeafColumns.toArray();\n    const normalizedScrollLeft = this.normalizeScrollLeft(scrollLeft);\n    const viewportEnd = normalizedScrollLeft + clientWidth;\n    let startIdx;\n    let endIdx = 0;\n    let current = 0;\n    let offset = 0;\n    let idx;\n\n    for (idx = 0; idx < columns.length; idx++) {\n      const column = columns[idx];\n      current += column.width || 0;\n\n      if (startIdx === undefined && current > normalizedScrollLeft) {\n        startIdx = idx;\n        offset = current - (column.width || 0);\n      }\n\n      if (current >= viewportEnd) {\n        endIdx = idx;\n        break;\n      }\n    }\n\n    if (!endIdx && idx > 0) {\n      endIdx = columns.length - 1;\n    }\n\n    return {\n      startIdx,\n      endIdx,\n      offset\n    };\n  }\n\n  viewportWidthChange() {\n    const currentWidth = this.viewportColumns.toArray().reduce((total, column) => total + column.width, 0);\n    return currentWidth !== this.viewportColumnsWidth;\n  }\n\n  normalizeScrollLeft(position) {\n    return this.rtl ? rtlScrollPosition(position, this.container.nativeElement, this.supportService.rtlScrollLeft) : position;\n  }\n\n  elementScrollLeft(element) {\n    if (this.rtl) {\n      return this.normalizeScrollLeft(this.container.nativeElement.scrollWidth - element.offsetLeft - element.offsetWidth);\n    }\n\n    return element.offsetLeft;\n  }\n\n}\n\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)(i0.ɵɵdirectiveInject(SCROLLER_FACTORY_TOKEN), i0.ɵɵdirectiveInject(DetailsService), i0.ɵɵdirectiveInject(ChangeNotificationService), i0.ɵɵdirectiveInject(SuspendService), i0.ɵɵdirectiveInject(GroupsService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(ScrollSyncService), i0.ɵɵdirectiveInject(ResizeService), i0.ɵɵdirectiveInject(EditService), i0.ɵɵdirectiveInject(BrowserSupportService), i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(ScrollRequestService), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(ColumnResizingService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PDFService), i0.ɵɵdirectiveInject(ColumnInfoService));\n};\n\nListComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"kendo-grid-list\"]],\n  viewQuery: function ListComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c45, 7);\n      i0.ɵɵviewQuery(_c46, 5);\n      i0.ɵɵviewQuery(_c47, 5);\n      i0.ɵɵviewQuery(_c48, 7);\n      i0.ɵɵviewQuery(ResizeSensorComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.lockedContainer = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.lockedTable = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.resizeSensors = _t);\n    }\n  },\n  hostVars: 3,\n  hostBindings: function ListComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"role\", ctx.hostRole);\n      i0.ɵɵclassProp(\"k-grid-container\", ctx.hostClass);\n    }\n  },\n  inputs: {\n    data: \"data\",\n    groups: \"groups\",\n    total: \"total\",\n    rowHeight: \"rowHeight\",\n    stickyRowHeight: \"stickyRowHeight\",\n    detailRowHeight: \"detailRowHeight\",\n    take: \"take\",\n    skip: \"skip\",\n    columns: \"columns\",\n    detailTemplate: \"detailTemplate\",\n    noRecordsTemplate: \"noRecordsTemplate\",\n    selectable: \"selectable\",\n    groupable: \"groupable\",\n    filterable: \"filterable\",\n    rowClass: \"rowClass\",\n    rowSticky: \"rowSticky\",\n    loading: \"loading\",\n    trackBy: \"trackBy\",\n    virtualColumns: \"virtualColumns\",\n    isVirtual: \"isVirtual\",\n    cellLoadingTemplate: \"cellLoadingTemplate\",\n    loadingTemplate: \"loadingTemplate\",\n    sort: \"sort\"\n  },\n  outputs: {\n    contentScroll: \"contentScroll\",\n    pageChange: \"pageChange\",\n    scrollBottom: \"scrollBottom\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: SCROLLER_FACTORY_TOKEN,\n    useValue: DEFAULT_SCROLLER_FACTORY\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 13,\n  vars: 36,\n  consts: [[\"class\", \"k-grid-content-locked\", \"role\", \"presentation\", \"tabindex\", \"-1\", 3, \"width\", \"kendoEventsOutsideAngular\", \"scope\", 4, \"ngIf\"], [\"role\", \"presentation\", \"tabindex\", \"-1\", 1, \"k-grid-content\", \"k-virtual-content\", 3, \"kendoGridResizableContainer\", \"lockedWidth\"], [\"container\", \"\"], [\"role\", \"presentation\", 1, \"k-grid-table-wrap\"], [\"role\", \"presentation\", 1, \"k-grid-table\", 3, \"virtualColumns\"], [\"table\", \"\"], [\"kendoGridColGroup\", \"\", \"role\", \"presentation\", 3, \"groups\", \"columns\", \"detailTemplate\", \"sort\"], [\"kendoGridTableBody\", \"\", \"role\", \"presentation\", 3, \"skipGroupDecoration\", \"data\", \"groups\", \"showGroupFooters\", \"columns\", \"allColumns\", \"detailTemplate\", \"noRecordsTemplate\", \"lockedColumnsCount\", \"totalColumnsCount\", \"skip\", \"selectable\", \"trackBy\", \"filterable\", \"rowClass\", \"rowSticky\", \"virtualColumns\", \"isLoading\", \"isVirtual\", \"cellLoadingTemplate\"], [4, \"ngIf\"], [\"role\", \"presentation\", 1, \"k-height-container\"], [\"class\", \"k-width-container\", \"role\", \"presentation\", 4, \"ngIf\"], [\"role\", \"presentation\", \"tabindex\", \"-1\", 1, \"k-grid-content-locked\", 3, \"kendoEventsOutsideAngular\", \"scope\"], [\"lockedContainer\", \"\"], [\"role\", \"presentation\", 1, \"k-grid-table\", 3, \"locked\"], [\"lockedTable\", \"\"], [\"kendoGridTableBody\", \"\", \"role\", \"presentation\", 3, \"groups\", \"isLocked\", \"data\", \"noRecordsText\", \"columns\", \"totalColumnsCount\", \"detailTemplate\", \"showGroupFooters\", \"skip\", \"selectable\", \"trackBy\", \"filterable\", \"rowClass\", \"isLoading\", \"isVirtual\", \"cellLoadingTemplate\"], [\"role\", \"presentation\", 1, \"k-width-container\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ListComponent_div_0_Template, 10, 34, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1, 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵelementStart(4, \"table\", 4, 5);\n      i0.ɵɵelement(6, \"colgroup\", 6);\n      i0.ɵɵelement(7, \"tbody\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, ListComponent_kendo_resize_sensor_8_Template, 1, 0, \"kendo-resize-sensor\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, ListComponent_kendo_resize_sensor_9_Template, 1, 0, \"kendo-resize-sensor\", 8);\n      i0.ɵɵelementStart(10, \"div\", 9);\n      i0.ɵɵelement(11, \"div\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, ListComponent_div_12_Template, 2, 2, \"div\", 10);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isLocked);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"kendoGridResizableContainer\", ctx.lockedLeafColumns.length > 0)(\"lockedWidth\", ctx.lockedWidth + 1);\n      i0.ɵɵadvance(3);\n      i0.ɵɵstyleProp(\"width\", ctx.nonLockedWidth, \"px\");\n      i0.ɵɵproperty(\"virtualColumns\", ctx.virtualColumns);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"groups\", ctx.isLocked ? i0.ɵɵpureFunction0(35, _c50) : ctx.groups)(\"columns\", ctx.nonLockedColumnsToRender)(\"detailTemplate\", ctx.detailTemplate)(\"sort\", ctx.sort);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"skipGroupDecoration\", ctx.isLocked)(\"data\", ctx.data)(\"groups\", ctx.groups)(\"showGroupFooters\", ctx.showFooter)(\"columns\", ctx.nonLockedColumnsToRender)(\"allColumns\", ctx.nonLockedLeafColumns)(\"detailTemplate\", ctx.detailTemplate)(\"noRecordsTemplate\", ctx.noRecordsTemplate)(\"lockedColumnsCount\", ctx.lockedLeafColumns.length)(\"totalColumnsCount\", ctx.leafColumns.length)(\"skip\", ctx.skip)(\"selectable\", ctx.selectable)(\"trackBy\", ctx.trackBy)(\"filterable\", ctx.filterable)(\"rowClass\", ctx.rowClass)(\"rowSticky\", ctx.rowSticky)(\"virtualColumns\", ctx.virtualColumns)(\"isLoading\", ctx.loading)(\"isVirtual\", ctx.isVirtual)(\"cellLoadingTemplate\", ctx.cellLoadingTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLocked);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLocked || ctx.virtualColumns);\n      i0.ɵɵadvance(2);\n      i0.ɵɵstyleProp(\"height\", ctx.totalHeight, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.virtualColumns);\n    }\n  },\n  directives: [i4.NgIf, ResizableContainerDirective, TableDirective, ColGroupComponent, TableBodyComponent, i1$1.EventsOutsideAngularDirective, i1$1.ResizeSensorComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: SCROLLER_FACTORY_TOKEN,\n        useValue: DEFAULT_SCROLLER_FACTORY\n      }],\n      selector: 'kendo-grid-list',\n      template: `\n    <div #lockedContainer class=\"k-grid-content-locked\" role=\"presentation\"\n        *ngIf=\"isLocked\" [style.width.px]=\"lockedWidth\" tabindex=\"-1\"\n        [kendoEventsOutsideAngular]=\"{\n            keydown: lockedKeydown,\n            scroll: lockedScroll,\n            mousewheel: lockedMousewheel,\n            DOMMouseScroll: lockedMousewheel\n        }\"\n        [scope]=\"this\"\n        >\n        <div role=\"presentation\" class=\"k-grid-table-wrap\">\n            <table [locked]=\"true\" #lockedTable class=\"k-grid-table\" role=\"presentation\" [style.width.px]=\"lockedWidth\">\n                <colgroup kendoGridColGroup\n                    role=\"presentation\"\n                    [groups]=\"groups\"\n                    [columns]=\"$any(lockedLeafColumns)\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [sort]=\"sort\">\n                </colgroup>\n                <tbody kendoGridTableBody\n                    role=\"presentation\"\n                    [groups]=\"groups\"\n                    [isLocked]=\"true\"\n                    [data]=\"data\"\n                    [noRecordsText]=\"''\"\n                    [columns]=\"$any(lockedLeafColumns)\"\n                    [totalColumnsCount]=\"leafColumns.length\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [showGroupFooters]=\"showFooter\"\n                    [skip]=\"skip\"\n                    [selectable]=\"selectable\"\n                    [trackBy]=\"trackBy\"\n                    [filterable]=\"filterable\"\n                    [rowClass]=\"rowClass\"\n                    [isLoading]=\"loading\"\n                    [isVirtual]=\"isVirtual\"\n                    [cellLoadingTemplate]=\"cellLoadingTemplate\">\n                </tbody>\n            </table>\n            <kendo-resize-sensor></kendo-resize-sensor>\n        </div>\n        <div class=\"k-height-container\" role=\"presentation\">\n            <div [style.height.px]=\"totalHeight\"></div>\n        </div>\n    </div><div #container\n               class=\"k-grid-content k-virtual-content\"\n               role=\"presentation\" tabindex=\"-1\"\n               [kendoGridResizableContainer]=\"lockedLeafColumns.length > 0\"\n               [lockedWidth]=\"lockedWidth + 1\">\n        <div role=\"presentation\" class=\"k-grid-table-wrap\">\n            <table [style.width.px]=\"nonLockedWidth\" #table [virtualColumns]=\"virtualColumns\"\n              class=\"k-grid-table\" role=\"presentation\">\n                <colgroup kendoGridColGroup\n                    role=\"presentation\"\n                    [groups]=\"isLocked ? [] : groups\"\n                    [columns]=\"$any(nonLockedColumnsToRender)\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [sort]=\"sort\">\n                </colgroup>\n                <tbody kendoGridTableBody\n                    role=\"presentation\"\n                    [skipGroupDecoration]=\"isLocked\"\n                    [data]=\"data\"\n                    [groups]=\"groups\"\n                    [showGroupFooters]=\"showFooter\"\n                    [columns]=\"$any(nonLockedColumnsToRender)\"\n                    [allColumns]=\"$any(nonLockedLeafColumns)\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [noRecordsTemplate]=\"noRecordsTemplate\"\n                    [lockedColumnsCount]=\"lockedLeafColumns.length\"\n                    [totalColumnsCount]=\"leafColumns.length\"\n                    [skip]=\"skip\"\n                    [selectable]=\"selectable\"\n                    [trackBy]=\"trackBy\"\n                    [filterable]=\"filterable\"\n                    [rowClass]=\"rowClass\"\n                    [rowSticky]=\"rowSticky\"\n                    [virtualColumns]=\"virtualColumns\"\n                    [isLoading]=\"loading\"\n                    [isVirtual]=\"isVirtual\"\n                    [cellLoadingTemplate]=\"cellLoadingTemplate\">\n                </tbody>\n            </table>\n            <kendo-resize-sensor *ngIf=\"isLocked\"></kendo-resize-sensor>\n        </div>\n        <kendo-resize-sensor *ngIf=\"isLocked || virtualColumns\"></kendo-resize-sensor>\n        <div class=\"k-height-container\" role=\"presentation\">\n            <div [style.height.px]=\"totalHeight\"></div>\n        </div>\n        <div *ngIf=\"virtualColumns\" class=\"k-width-container\" role=\"presentation\">\n            <div [style.width.px]=\"totalWidth\"></div>\n        </div>\n    </div>\n    `\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [SCROLLER_FACTORY_TOKEN]\n      }]\n    }, {\n      type: DetailsService\n    }, {\n      type: ChangeNotificationService\n    }, {\n      type: SuspendService\n    }, {\n      type: GroupsService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: ScrollSyncService\n    }, {\n      type: ResizeService\n    }, {\n      type: EditService\n    }, {\n      type: BrowserSupportService\n    }, {\n      type: NavigationService\n    }, {\n      type: ScrollRequestService\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: ColumnResizingService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: PDFService\n    }, {\n      type: ColumnInfoService\n    }];\n  }, {\n    hostClass: [{\n      type: HostBinding,\n      args: [\"class.k-grid-container\"]\n    }],\n    hostRole: [{\n      type: HostBinding,\n      args: [\"attr.role\"]\n    }],\n    data: [{\n      type: Input\n    }],\n    groups: [{\n      type: Input\n    }],\n    total: [{\n      type: Input\n    }],\n    rowHeight: [{\n      type: Input\n    }],\n    stickyRowHeight: [{\n      type: Input\n    }],\n    detailRowHeight: [{\n      type: Input\n    }],\n    take: [{\n      type: Input\n    }],\n    skip: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    detailTemplate: [{\n      type: Input\n    }],\n    noRecordsTemplate: [{\n      type: Input\n    }],\n    selectable: [{\n      type: Input\n    }],\n    groupable: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    rowClass: [{\n      type: Input\n    }],\n    rowSticky: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    trackBy: [{\n      type: Input\n    }],\n    virtualColumns: [{\n      type: Input\n    }],\n    isVirtual: [{\n      type: Input\n    }],\n    cellLoadingTemplate: [{\n      type: Input\n    }],\n    loadingTemplate: [{\n      type: Input\n    }],\n    sort: [{\n      type: Input\n    }],\n    contentScroll: [{\n      type: Output\n    }],\n    pageChange: [{\n      type: Output\n    }],\n    scrollBottom: [{\n      type: Output\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        static: true\n      }]\n    }],\n    lockedContainer: [{\n      type: ViewChild,\n      args: ['lockedContainer', {\n        static: false\n      }]\n    }],\n    lockedTable: [{\n      type: ViewChild,\n      args: ['lockedTable', {\n        static: false\n      }]\n    }],\n    table: [{\n      type: ViewChild,\n      args: ['table', {\n        static: true\n      }]\n    }],\n    resizeSensors: [{\n      type: ViewChildren,\n      args: [ResizeSensorComponent]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass FooterComponent {\n  constructor(columnInfoService) {\n    this.columnInfoService = columnInfoService;\n    this.columns = [];\n    this.groups = [];\n    this.lockedColumnsCount = 0;\n    this.logicalRowIndex = 0;\n  }\n\n  get footerClass() {\n    return !this.scrollable;\n  }\n\n  get columnsToRender() {\n    return columnsToRender(this.columns || []);\n  }\n\n  logicalColumnIndex(column) {\n    const index = column.leafIndex;\n\n    if (isPresent(index)) {\n      return index + (isPresent(this.detailTemplate) ? 1 : 0);\n    }\n\n    return -1;\n  }\n\n  addStickyStyles(column) {\n    const stickyStyles = this.columnInfoService.stickyColumnsStyles(column);\n    return Object.assign(Object.assign({}, column.style), stickyStyles);\n  }\n\n}\n\nFooterComponent.ɵfac = function FooterComponent_Factory(t) {\n  return new (t || FooterComponent)(i0.ɵɵdirectiveInject(ColumnInfoService));\n};\n\nFooterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FooterComponent,\n  selectors: [[\"\", \"kendoGridFooter\", \"\"]],\n  hostVars: 2,\n  hostBindings: function FooterComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-grid-footer\", ctx.footerClass);\n    }\n  },\n  inputs: {\n    columns: \"columns\",\n    groups: \"groups\",\n    detailTemplate: \"detailTemplate\",\n    scrollable: \"scrollable\",\n    lockedColumnsCount: \"lockedColumnsCount\",\n    logicalRowIndex: \"logicalRowIndex\"\n  },\n  attrs: _c51,\n  decls: 5,\n  vars: 9,\n  consts: [[\"kendoGridLogicalRow\", \"\", 3, \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\"], [\"role\", \"presentation\", 3, \"k-group-cell\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"presentation\", 3, \"k-hierarchy-cell\", 4, \"ngIf\"], [\"kendoGridLogicalCell\", \"\", \"role\", \"columnfooter\", \"aria-selected\", \"false\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"k-grid-footer-sticky\", \"ngClass\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"presentation\"], [\"kendoGridLogicalCell\", \"\", \"role\", \"columnfooter\", \"aria-selected\", \"false\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"ngClass\", \"ngStyle\"], [3, \"templateContext\"]],\n  template: function FooterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainerStart(0);\n      i0.ɵɵelementStart(1, \"tr\", 0);\n      i0.ɵɵtemplate(2, FooterComponent_td_2_Template, 1, 2, \"td\", 1);\n      i0.ɵɵtemplate(3, FooterComponent_td_3_Template, 1, 2, \"td\", 2);\n      i0.ɵɵtemplate(4, FooterComponent_td_4_Template, 2, 12, \"td\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementContainerEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"k-footer-template\", true);\n      i0.ɵɵproperty(\"logicalRowIndex\", ctx.logicalRowIndex)(\"logicalSlaveRow\", ctx.lockedColumnsCount > 0)(\"logicalCellsCount\", ctx.columns.length)(\"logicalSlaveCellsCount\", ctx.columns.length - ctx.lockedColumnsCount);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.groups);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.detailTemplate == null ? null : ctx.detailTemplate.templateRef);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.columnsToRender);\n    }\n  },\n  directives: [LogicalRowDirective, i4.NgForOf, i4.NgIf, LogicalCellDirective, i4.NgClass, i4.NgStyle, TemplateContextDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FooterComponent, [{\n    type: Component,\n    args: [{\n      selector: '[kendoGridFooter]',\n      template: `\n    <ng-container>\n        <tr\n            [class.k-footer-template]=\"true\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"logicalRowIndex\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"columns.length - lockedColumnsCount\"\n            >\n            <td\n                [class.k-group-cell]=\"true\"\n                role=\"presentation\"\n                *ngFor=\"let g of groups\">\n            </td>\n            <td\n                [class.k-hierarchy-cell]=\"true\"\n                role=\"presentation\"\n                *ngIf=\"detailTemplate?.templateRef\">\n            </td>\n            <td\n                *ngFor=\"let column of columnsToRender; let columnIndex = index\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex\"\n                    [logicalColIndex]=\"logicalColumnIndex(column)\"\n                    role=\"columnfooter\"\n                    aria-selected=\"false\"\n                [class.k-grid-footer-sticky]=\"column.sticky\"\n                [ngClass]=\"column.footerClass\"\n                [ngStyle]=\"column.sticky ? addStickyStyles(column) : column.footerStyle\">\n                <ng-template\n                    [templateContext]=\"{\n                        templateRef: column.footerTemplateRef,\n                        columnIndex: lockedColumnsCount + columnIndex,\n                        column: column,\n                        $implicit: column\n                    }\">\n                </ng-template>\n            </td>\n        </tr>\n    </ng-container>\n    `\n    }]\n  }], function () {\n    return [{\n      type: ColumnInfoService\n    }];\n  }, {\n    columns: [{\n      type: Input\n    }],\n    groups: [{\n      type: Input\n    }],\n    detailTemplate: [{\n      type: Input\n    }],\n    scrollable: [{\n      type: Input\n    }],\n    lockedColumnsCount: [{\n      type: Input\n    }],\n    logicalRowIndex: [{\n      type: Input\n    }],\n    footerClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-footer']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass LoadingComponent {\n  constructor(localization) {\n    this.localization = localization;\n    this.hostClass = true;\n  }\n\n  get loadingText() {\n    return this.localization.get('loading');\n  }\n\n}\n\nLoadingComponent.ɵfac = function LoadingComponent_Factory(t) {\n  return new (t || LoadingComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nLoadingComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LoadingComponent,\n  selectors: [[\"\", \"kendoGridLoading\", \"\"]],\n  hostVars: 2,\n  hostBindings: function LoadingComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-loading-mask\", ctx.hostClass);\n    }\n  },\n  inputs: {\n    loadingTemplate: \"loadingTemplate\"\n  },\n  attrs: _c52,\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [1, \"k-loading-text\"], [1, \"k-loading-image\"], [1, \"k-loading-color\"], [3, \"ngTemplateOutlet\"]],\n  template: function LoadingComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LoadingComponent_ng_container_0_Template, 5, 1, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, LoadingComponent_1_Template, 1, 1, undefined, 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.loadingTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loadingTemplate);\n    }\n  },\n  directives: [i4.NgIf, i4.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoadingComponent, [{\n    type: Component,\n    args: [{\n      selector: '[kendoGridLoading]',\n      template: `\n        <ng-container *ngIf=\"!loadingTemplate\">\n            <span class=\"k-loading-text\">{{ loadingText }}</span>\n            <div class=\"k-loading-image\"></div>\n            <div class=\"k-loading-color\"></div>\n        </ng-container>\n        <ng-template *ngIf=\"loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate?.templateRef\">\n        </ng-template>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, {\n    hostClass: [{\n      type: HostBinding,\n      args: ['class.k-loading-mask']\n    }],\n    loadingTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass GridMessages extends ComponentMessages {}\n\nGridMessages.ɵfac = /* @__PURE__ */function () {\n  let ɵGridMessages_BaseFactory;\n  return function GridMessages_Factory(t) {\n    return (ɵGridMessages_BaseFactory || (ɵGridMessages_BaseFactory = i0.ɵɵgetInheritedFactory(GridMessages)))(t || GridMessages);\n  };\n}();\n\nGridMessages.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GridMessages,\n  selectors: [[\"kendo-grid-messages-base\"]],\n  inputs: {\n    groupPanelEmpty: \"groupPanelEmpty\",\n    noRecords: \"noRecords\",\n    pagerLabel: \"pagerLabel\",\n    pagerFirstPage: \"pagerFirstPage\",\n    pagerLastPage: \"pagerLastPage\",\n    pagerPreviousPage: \"pagerPreviousPage\",\n    pagerNextPage: \"pagerNextPage\",\n    pagerPage: \"pagerPage\",\n    pagerItemsPerPage: \"pagerItemsPerPage\",\n    pagerOf: \"pagerOf\",\n    pagerItems: \"pagerItems\",\n    pagerPageNumberInputTitle: \"pagerPageNumberInputTitle\",\n    filter: \"filter\",\n    filterInputLabel: \"filterInputLabel\",\n    filterMenuTitle: \"filterMenuTitle\",\n    filterMenuOperatorsDropDownLabel: \"filterMenuOperatorsDropDownLabel\",\n    filterMenuLogicDropDownLabel: \"filterMenuLogicDropDownLabel\",\n    filterEqOperator: \"filterEqOperator\",\n    filterNotEqOperator: \"filterNotEqOperator\",\n    filterIsNullOperator: \"filterIsNullOperator\",\n    filterIsNotNullOperator: \"filterIsNotNullOperator\",\n    filterIsEmptyOperator: \"filterIsEmptyOperator\",\n    filterIsNotEmptyOperator: \"filterIsNotEmptyOperator\",\n    filterStartsWithOperator: \"filterStartsWithOperator\",\n    filterContainsOperator: \"filterContainsOperator\",\n    filterNotContainsOperator: \"filterNotContainsOperator\",\n    filterEndsWithOperator: \"filterEndsWithOperator\",\n    filterGteOperator: \"filterGteOperator\",\n    filterGtOperator: \"filterGtOperator\",\n    filterLteOperator: \"filterLteOperator\",\n    filterLtOperator: \"filterLtOperator\",\n    filterIsTrue: \"filterIsTrue\",\n    filterIsFalse: \"filterIsFalse\",\n    filterBooleanAll: \"filterBooleanAll\",\n    filterAfterOrEqualOperator: \"filterAfterOrEqualOperator\",\n    filterAfterOperator: \"filterAfterOperator\",\n    filterBeforeOperator: \"filterBeforeOperator\",\n    filterBeforeOrEqualOperator: \"filterBeforeOrEqualOperator\",\n    filterFilterButton: \"filterFilterButton\",\n    filterClearButton: \"filterClearButton\",\n    filterAndLogic: \"filterAndLogic\",\n    filterOrLogic: \"filterOrLogic\",\n    loading: \"loading\",\n    gridLabel: \"gridLabel\",\n    columnMenu: \"columnMenu\",\n    setColumnPosition: \"setColumnPosition\",\n    columns: \"columns\",\n    lock: \"lock\",\n    unlock: \"unlock\",\n    stick: \"stick\",\n    unstick: \"unstick\",\n    sortable: \"sortable\",\n    sortAscending: \"sortAscending\",\n    sortDescending: \"sortDescending\",\n    autosizeThisColumn: \"autosizeThisColumn\",\n    autosizeAllColumns: \"autosizeAllColumns\",\n    sortedAscending: \"sortedAscending\",\n    sortedDescending: \"sortedDescending\",\n    sortedDefault: \"sortedDefault\",\n    columnsApply: \"columnsApply\",\n    columnsReset: \"columnsReset\",\n    detailExpand: \"detailExpand\",\n    detailCollapse: \"detailCollapse\",\n    filterDateToday: \"filterDateToday\",\n    filterDateToggle: \"filterDateToggle\",\n    filterNumericDecrement: \"filterNumericDecrement\",\n    filterNumericIncrement: \"filterNumericIncrement\",\n    selectionCheckboxLabel: \"selectionCheckboxLabel\",\n    selectAllCheckboxLabel: \"selectAllCheckboxLabel\",\n    groupCollapse: \"groupCollapse\",\n    groupExpand: \"groupExpand\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridMessages, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: 'kendo-grid-messages-base'\n    }]\n  }], null, {\n    groupPanelEmpty: [{\n      type: Input\n    }],\n    noRecords: [{\n      type: Input\n    }],\n    pagerLabel: [{\n      type: Input\n    }],\n    pagerFirstPage: [{\n      type: Input\n    }],\n    pagerLastPage: [{\n      type: Input\n    }],\n    pagerPreviousPage: [{\n      type: Input\n    }],\n    pagerNextPage: [{\n      type: Input\n    }],\n    pagerPage: [{\n      type: Input\n    }],\n    pagerItemsPerPage: [{\n      type: Input\n    }],\n    pagerOf: [{\n      type: Input\n    }],\n    pagerItems: [{\n      type: Input\n    }],\n    pagerPageNumberInputTitle: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    filterInputLabel: [{\n      type: Input\n    }],\n    filterMenuTitle: [{\n      type: Input\n    }],\n    filterMenuOperatorsDropDownLabel: [{\n      type: Input\n    }],\n    filterMenuLogicDropDownLabel: [{\n      type: Input\n    }],\n    filterEqOperator: [{\n      type: Input\n    }],\n    filterNotEqOperator: [{\n      type: Input\n    }],\n    filterIsNullOperator: [{\n      type: Input\n    }],\n    filterIsNotNullOperator: [{\n      type: Input\n    }],\n    filterIsEmptyOperator: [{\n      type: Input\n    }],\n    filterIsNotEmptyOperator: [{\n      type: Input\n    }],\n    filterStartsWithOperator: [{\n      type: Input\n    }],\n    filterContainsOperator: [{\n      type: Input\n    }],\n    filterNotContainsOperator: [{\n      type: Input\n    }],\n    filterEndsWithOperator: [{\n      type: Input\n    }],\n    filterGteOperator: [{\n      type: Input\n    }],\n    filterGtOperator: [{\n      type: Input\n    }],\n    filterLteOperator: [{\n      type: Input\n    }],\n    filterLtOperator: [{\n      type: Input\n    }],\n    filterIsTrue: [{\n      type: Input\n    }],\n    filterIsFalse: [{\n      type: Input\n    }],\n    filterBooleanAll: [{\n      type: Input\n    }],\n    filterAfterOrEqualOperator: [{\n      type: Input\n    }],\n    filterAfterOperator: [{\n      type: Input\n    }],\n    filterBeforeOperator: [{\n      type: Input\n    }],\n    filterBeforeOrEqualOperator: [{\n      type: Input\n    }],\n    filterFilterButton: [{\n      type: Input\n    }],\n    filterClearButton: [{\n      type: Input\n    }],\n    filterAndLogic: [{\n      type: Input\n    }],\n    filterOrLogic: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    gridLabel: [{\n      type: Input\n    }],\n    columnMenu: [{\n      type: Input\n    }],\n    setColumnPosition: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    lock: [{\n      type: Input\n    }],\n    unlock: [{\n      type: Input\n    }],\n    stick: [{\n      type: Input\n    }],\n    unstick: [{\n      type: Input\n    }],\n    sortable: [{\n      type: Input\n    }],\n    sortAscending: [{\n      type: Input\n    }],\n    sortDescending: [{\n      type: Input\n    }],\n    autosizeThisColumn: [{\n      type: Input\n    }],\n    autosizeAllColumns: [{\n      type: Input\n    }],\n    sortedAscending: [{\n      type: Input\n    }],\n    sortedDescending: [{\n      type: Input\n    }],\n    sortedDefault: [{\n      type: Input\n    }],\n    columnsApply: [{\n      type: Input\n    }],\n    columnsReset: [{\n      type: Input\n    }],\n    detailExpand: [{\n      type: Input\n    }],\n    detailCollapse: [{\n      type: Input\n    }],\n    filterDateToday: [{\n      type: Input\n    }],\n    filterDateToggle: [{\n      type: Input\n    }],\n    filterNumericDecrement: [{\n      type: Input\n    }],\n    filterNumericIncrement: [{\n      type: Input\n    }],\n    selectionCheckboxLabel: [{\n      type: Input\n    }],\n    selectAllCheckboxLabel: [{\n      type: Input\n    }],\n    groupCollapse: [{\n      type: Input\n    }],\n    groupExpand: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass LocalizedMessagesDirective extends GridMessages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n}\n\nLocalizedMessagesDirective.ɵfac = function LocalizedMessagesDirective_Factory(t) {\n  return new (t || LocalizedMessagesDirective)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nLocalizedMessagesDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LocalizedMessagesDirective,\n  selectors: [[\"\", \"kendoGridLocalizedMessages\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: GridMessages,\n    useExisting: forwardRef(() => LocalizedMessagesDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LocalizedMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: GridMessages,\n        useExisting: forwardRef(() => LocalizedMessagesDirective)\n      }],\n      selector: '[kendoGridLocalizedMessages]'\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n\nconst createControl = source => (acc, key) => {\n  acc[key] = new FormControl(source[key]);\n  return acc;\n};\n\nconst validateColumnsField = columns => expandColumns(columns.toArray()).filter(isColumnComponent).filter(({\n  field\n}) => !isValidFieldName(field)).forEach(({\n  field\n}) => console.warn(`\n                Grid column field name '${field}' does not look like a valid JavaScript identifier.\n                Identifiers can contain only alphanumeric characters (including \"$\" or \"_\"), and may not start with a digit.\n                Please use only valid identifier names to ensure error-free operation.\n            `));\n\nconst handleExpandCollapseGroupsService = (service, expandEmitter, collapseEmitter, map) => service.changes.pipe(filter(({\n  group\n}) => isPresent(group))).subscribe(x => x.expand ? expandEmitter.emit(map(x)) : collapseEmitter.emit(map(x)));\n\nconst handleExpandCollapseDetailsService = (service, expandEmitter, collapseEmitter, map) => service.changes.pipe(filter(({\n  dataItem\n}) => isPresent(dataItem))).subscribe(x => x.expand ? expandEmitter.emit(map(x)) : collapseEmitter.emit(map(x)));\n\nconst isInEditedCell = (element, gridElement) => closest(element, matchesClasses('k-grid-edit-cell')) && closest(element, matchesNodeName('kendo-grid')) === gridElement;\n/**\n * Represents the Kendo UI Grid component for Angular.\n *\n * @example\n * ```ts-preview\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\">\n *        </kendo-grid>\n *    `\n * })\n * class AppComponent {\n *    public gridData: any[] = products;\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n * ```\n */\n\n\nclass GridComponent {\n  constructor(supportService, selectionService, cellSelectionService, wrapper, groupInfoService, groupsService, changeNotification, detailsService, editService, filterService, pdfService, responsiveService, renderer, excelService, ngZone, scrollSyncService, domEvents, columnResizingService, changeDetectorRef, columnReorderService, columnInfoService, navigationService, sortService, scrollRequestService, localization, ctx) {\n    this.supportService = supportService;\n    this.selectionService = selectionService;\n    this.cellSelectionService = cellSelectionService;\n    this.wrapper = wrapper;\n    this.groupInfoService = groupInfoService;\n    this.groupsService = groupsService;\n    this.changeNotification = changeNotification;\n    this.detailsService = detailsService;\n    this.editService = editService;\n    this.filterService = filterService;\n    this.pdfService = pdfService;\n    this.responsiveService = responsiveService;\n    this.renderer = renderer;\n    this.excelService = excelService;\n    this.ngZone = ngZone;\n    this.scrollSyncService = scrollSyncService;\n    this.domEvents = domEvents;\n    this.columnResizingService = columnResizingService;\n    this.changeDetectorRef = changeDetectorRef;\n    this.columnReorderService = columnReorderService;\n    this.columnInfoService = columnInfoService;\n    this.navigationService = navigationService;\n    this.sortService = sortService;\n    this.scrollRequestService = scrollRequestService;\n    this.localization = localization;\n    this.ctx = ctx;\n    /**\n     * Sets the data of the Grid. If an array is provided, the Grid automatically gets the total count\n     * ([more information and example]({% slug binding_grid %})).\n     */\n\n    this.data = [];\n    /**\n     * Defines the scroll mode used by the Grid.\n     *\n     * The available options are:\n     *  - `none`&mdash;Renders no scrollbar.\n     *  - `scrollable`&mdash;The default scroll mode. It requires the setting of the `height` option.\n     *  - `virtual`&mdash;Displays no pager and renders a portion of the data (optimized rendering) while the user is scrolling the content.\n     */\n\n    this.scrollable = 'scrollable';\n    /**\n     * Enables the single-row [selection]({% slug selection_grid %}) of the Grid.\n     */\n\n    this.selectable = false;\n    /**\n     * A function that defines how to track changes for the data rows.\n     *\n     * By default, the Grid tracks changes by the index of the data item.\n     * Edited rows are tracked by reference.\n     * In some cases, you might need to override the default behavior,\n     * for example, when you implement editing with immutable data items.\n     *\n     * The following example demonstrates how to track items only by index.\n     *\n     * @example\n     * ```ts\n     * import { Component } from '@angular/core';\n     * import { GridItem } from '@progress/kendo-angular-grid';\n     *\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-grid [data]=\"gridData\" [trackBy]=\"trackBy\">\n     *        </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     *\n     *    public trackBy(index: number, item: GridItem): any {\n     *        console.log(item);\n     *        return index;\n     *    }\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     * ```\n     */\n\n    this.trackBy = defaultTrackBy;\n    /**\n     * If set to `true`, the grid will render only the columns in the current viewport.\n     */\n\n    this.virtualColumns = false;\n    /**\n     * Enables the [filtering]({% slug filtering_grid %}) of the Grid columns that have their `field` option set.\n     */\n\n    this.filterable = false;\n    /**\n     * Enables the [sorting]({% slug sorting_grid %}) of the Grid columns that have their `field` option set.\n     */\n\n    this.sortable = false;\n    /**\n     * Configures the pager of the Grid ([see example]({% slug paging_grid %})).\n     *\n     * The available options are:\n     * - `buttonCount: Number`&mdash;Sets the maximum numeric buttons count before the buttons are collapsed. Defaults to `10`.\n     * - `info: Boolean`&mdash;Toggles the information about the current page and the total number of records. Defaults to `true`.\n     * - `type: PagerType`&mdash;Accepts the `numeric` (buttons with numbers) and `input` (input for typing the page number) values. Defaults to `'numeric'`.\n     * - `pageSizes: Boolean` or `Array<number>`&mdash;Shows a menu for selecting the page size. Defaults to `false`.\n     * - `previousNext: Boolean`&mdash;Toggles the **Previous** and **Next** buttons. Defaults to `true`.\n     * - `responsive: Boolean`&mdash;Toggles the built-in responsive behavior of the Pager. Defaults to `true`.\n     */\n\n    this.pageable = false;\n    /**\n     * If set to `true`, the user can group the Grid by dragging the column header cells.\n     * By default, grouping is disabled ([see example]({% slug grouping_grid %})).\n     */\n\n    this.groupable = false;\n    /**\n     * Indicates whether the Grid columns will be resized during initialization so that\n     * they fit their headers and row content. Defaults to `false`.\n     * Columns with `autoSize` set to `false` are excluded.\n     * To dynamically update the column width to match the new content,\n     * refer to [this example]({% slug resizing_columns_grid %}).\n     */\n\n    this.autoSize = false;\n    /**\n     * If set to `true`, the user can resize columns by dragging the edges (resize handles) of their header cells\n     * ([see example]({% slug resizing_columns_grid %})).\n     *\n     * @default false\n     */\n\n    this.resizable = false;\n    /**\n     * If set to `true`, the user can reorder columns by dragging their header cells\n     * ([see example]({% slug reordering_columns_grid %})).\n     *\n     * @default false\n     */\n\n    this.reorderable = false;\n    /**\n     * Specifies if the loading indicator of the Grid will be displayed ([see example]({% slug binding_grid %})).\n     *\n     * @default false\n     */\n\n    this.loading = false;\n    /**\n     * Specifies if the column menu of the columns will be displayed ([see example]({% slug columnmenu_grid %})).\n     *\n     * @default false\n     */\n\n    this.columnMenu = false;\n    /**\n     * Specifies if the header of the grid will be hidden. The header is visible by default.\n     *\n     * > The header includes column headers and the [filter row]({% slug filtering_grid %}#toc-filter-row).\n     */\n\n    this.hideHeader = false;\n    /**\n     * Fires when the Grid filter is modified through the UI.\n     * You have to handle the event yourself and filter the data.\n     */\n\n    this.filterChange = new EventEmitter();\n    /**\n     * Fires when the page of the Grid is changed ([see example]({% slug paging_grid %})).\n     * You have to handle the event yourself and page the data.\n     */\n\n    this.pageChange = new EventEmitter();\n    /**\n     * Fires when the grouping of the Grid is changed.\n     * You have to handle the event yourself and group the data ([see example]({% slug grouping_grid %})).\n     */\n\n    this.groupChange = new ZoneAwareEventEmitter(this.ngZone);\n    /**\n     * Fires when the sorting of the Grid is changed ([see example]({% slug sorting_grid %})).\n     * You have to handle the event yourself and sort the data.\n     */\n\n    this.sortChange = new EventEmitter();\n    /**\n     * Fires when the user selects a Grid row.\n     * Emits the [SelectionEvent]({% slug api_grid_selectionevent %}#toc-selectionchange).\n     */\n\n    this.selectionChange = new EventEmitter();\n    /**\n     * Fires when the data state of the Grid is changed.\n     */\n\n    this.dataStateChange = new EventEmitter();\n    /**\n     * Fires when the user expands a group header.\n     */\n\n    this.groupExpand = new EventEmitter();\n    /**\n     * Fires when the user collapses a group header.\n     */\n\n    this.groupCollapse = new EventEmitter();\n    /**\n     * Fires when the user expands a master row.\n     */\n\n    this.detailExpand = new EventEmitter();\n    /**\n     * Fires when the user collapses a master row.\n     */\n\n    this.detailCollapse = new EventEmitter();\n    /**\n     * Fires when the user clicks the **Edit** command button to edit a row\n     * ([see example]({% slug inline_editing_grid %}#toc-editing-records-1).\n     */\n\n    this.edit = new EventEmitter();\n    /**\n     * Fires when the user clicks the **Cancel** command button to close a row\n     * ([see example]({% slug inline_editing_grid %}#toc-canceling-editing-1)).\n     */\n\n    this.cancel = new EventEmitter();\n    /**\n     * Fires when the user clicks the **Save** command button to save changes in a row\n     * ([see example]({% slug inline_editing_grid %}#toc-saving-records-1)).\n     */\n\n    this.save = new EventEmitter();\n    /**\n     * Fires when the user clicks the **Remove** command button to remove a row\n     * ([see example]({% slug inline_editing_grid %}#toc-removing-records-1)).\n     */\n\n    this.remove = new EventEmitter();\n    /**\n     * Fires when the user clicks the **Add** command button to add a new row\n     * ([see example]({% slug inline_editing_grid %}#toc-adding-records-1)).\n     */\n\n    this.add = new EventEmitter();\n    /**\n     * Fires when the user leaves an edited cell ([see example]({% slug editing_incell_grid %}#toc-basic-concepts)).\n     */\n\n    this.cellClose = new EventEmitter();\n    /**\n     * Fires when the user clicks a cell ([see example]({% slug editing_incell_grid %}#toc-basic-concepts)).\n     */\n\n    this.cellClick = new ZoneAwareEventEmitter(this.ngZone);\n    /**\n     * Fires when the user clicks the **Export to PDF** command button.\n     */\n\n    this.pdfExport = new EventEmitter();\n    /**\n     * Fires when the user clicks the **Export to Excel** command button.\n     */\n\n    this.excelExport = new EventEmitter();\n    /**\n     * Fires when the user completes the resizing of the column.\n     */\n\n    this.columnResize = new ZoneAwareEventEmitter(this.ngZone);\n    /**\n     * Fires when the user completes the reordering of the column.\n     */\n\n    this.columnReorder = new EventEmitter();\n    /**\n     * Fires when the user changes the visibility of the columns from the column menu or column chooser.\n     */\n\n    this.columnVisibilityChange = new EventEmitter();\n    /**\n     * Fires when the user changes the locked state of the columns from the column menu or by reordering the columns.\n     */\n\n    this.columnLockedChange = new EventEmitter();\n    /**\n     * Fires when the user changes the sticky state of the columns from the column menu.\n     */\n\n    this.columnStickyChange = new EventEmitter();\n    /**\n     * Fires when the user scrolls to the last record on the page and enables endless scrolling\n     * ([see example]({% slug scrollmmodes_grid %}#toc-endless-scrolling)).\n     * You have to handle the event yourself and page the data.\n     */\n\n    this.scrollBottom = new EventEmitter();\n    /**\n     * Fires when the grid content is scrolled.\n     * For performance reasons, the event is triggered outside the Angular zone. Enter the Angular zone if you make any changes that require change detection.\n     */\n\n    this.contentScroll = new EventEmitter();\n    /**\n     * A query list of all declared columns.\n     */\n\n    this.columns = new QueryList();\n    this.footer = new QueryList();\n    this.selectionDirective = false;\n    this.columnsContainer = new ColumnsContainer(() => this.columnList.filterHierarchy(column => {\n      column.matchesMedia = this.matchesMedia(column);\n      return column.isVisible;\n    }));\n    this.view = new DataCollection(() => new DataResultIterator(this.data, this.skip, this.hasGroupFooters));\n    this.shouldGenerateColumns = true;\n    this._sort = new Array();\n    this._group = new Array();\n    this._skip = 0;\n    this.cachedWindowWidth = 0;\n    this._rowSelected = null;\n    this._cellSelected = null;\n    this._navigable = [];\n    this.rtl = false;\n\n    this._rowClass = () => null;\n\n    validatePackage(packageMetadata);\n    this.ctx.grid = this;\n    this.localizationSubscription = this.localization.changes.subscribe(({\n      rtl\n    }) => {\n      this.rtl = rtl;\n      this.direction = this.rtl ? 'rtl' : 'ltr';\n    });\n    this.groupInfoService.registerColumnsContainer(() => this.columnList);\n    this.columnInfoService.init(this.columnsContainer, () => this.columnList);\n    this.columnVisibilityChangeSubscription = this.columnInfoService.visibilityChange.subscribe(changed => {\n      this.columnVisibilityChange.emit(new ColumnVisibilityChangeEvent(changed));\n    });\n    this.columnLockedChangeSubscription = this.columnInfoService.lockedChange.subscribe(changed => {\n      this.columnLockedChange.emit(new ColumnLockedChangeEvent(changed));\n    });\n    this.columnStickyChangeSubscription = this.columnInfoService.stickyChange.subscribe(changed => {\n      this.columnStickyChange.emit(new ColumnStickyChangeEvent(changed));\n    });\n    this.groupExpandCollapseSubscription = handleExpandCollapseGroupsService(groupsService, this.groupExpand, this.groupCollapse, ({\n      group,\n      groupIndex,\n      parentGroup\n    }) => ({\n      group,\n      groupIndex,\n      parentGroup\n    }));\n    this.detailsServiceSubscription = handleExpandCollapseDetailsService(detailsService, this.detailExpand, this.detailCollapse, args => args);\n    this.filterSubscription = this.filterService.changes.subscribe(x => {\n      this.filterChange.emit(x);\n    });\n    this.sortSubscription = this.sortService.changes.subscribe(x => {\n      this.sortChange.emit(x);\n    });\n    this.attachStateChangesEmitter();\n    this.attachEditHandlers();\n    this.attachDomEventHandlers();\n    this.pdfSubscription = this.pdfService.exportClick.subscribe(this.emitPDFExportEvent.bind(this));\n    this.excelSubscription = this.excelService.exportClick.subscribe(this.saveAsExcel.bind(this));\n    this.columnsContainerChange();\n    this.handleColumnResize();\n    this.columnList = new ColumnList(this.columns);\n    this.columnReorderSubscription = this.columnReorderService.changes.subscribe(this.reorder.bind(this));\n    this.columnRangeChangeSubscription = this.columnInfoService.columnRangeChange.subscribe(this.onColumnRangeChange.bind(this));\n  }\n  /**\n   * Defines the number of records to be skipped by the pager.\n   * Required by the [paging]({% slug paging_grid %}) functionality.\n   */\n\n\n  get skip() {\n    return this._skip;\n  }\n\n  set skip(value) {\n    if (typeof value === 'number' && value >= 0) {\n      this._skip = value;\n    }\n  }\n  /**\n   * The descriptors by which the data will be sorted ([see example]({% slug sorting_grid %})).\n   */\n\n\n  set sort(value) {\n    if (isArray(value)) {\n      this._sort = value;\n    }\n  }\n\n  get sort() {\n    return this._sort;\n  }\n  /**\n   * The descriptors by which the data will be grouped ([see example]({% slug grouping_grid %})).\n   */\n\n\n  set group(value) {\n    if (isArray(value)) {\n      this._group = value;\n    }\n  }\n  /**\n   */\n\n\n  get group() {\n    return this._group;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get showTopToolbar() {\n    return this.toolbarTemplate && ['top', 'both'].indexOf(this.toolbarTemplate.position) > -1;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get showBottomToolbar() {\n    return this.toolbarTemplate && ['bottom', 'both'].indexOf(this.toolbarTemplate.position) > -1;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get isLocked() {\n    return this.lockedLeafColumns.length > 0;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get showTopPager() {\n    const position = this.pageable.position;\n    return !this.isVirtual && this.pageable !== false && ['top', 'both'].indexOf(position) > -1;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get showBottomPager() {\n    const position = this.pageable.position;\n    return !this.isVirtual && this.pageable !== false && position !== 'top';\n  }\n  /**\n   * @hidden\n   */\n\n\n  get hasPager() {\n    return this.showTopPager || this.showBottomPager;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get showGroupPanel() {\n    return this.groupable && this.groupable.enabled !== false;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get groupableEmptyText() {\n    return this.groupable.emptyText;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get marqueeSelection() {\n    return this.selectionService.enableMarquee || this.cellSelectionService.enableMarquee;\n  }\n  /**\n   * If set to `true`, the user can use dedicated shortcuts to interact with the Grid.\n   * By default, navigation is disabled and the Grid content is accessible in the normal tab sequence.\n   * To enable navigation through separate Grid sections only, provide a [`GridNavigableSection`]({% slug api_grid_gridnavigablesection %}) array.\n   */\n\n\n  set navigable(value) {\n    if (typeof value === 'boolean') {\n      this._navigable = value ? ['table', 'pager'] : [];\n      return;\n    }\n\n    this._navigable = value;\n  }\n\n  get navigable() {\n    return this._navigable;\n  }\n  /**\n   * @hidden\n   *\n   * An alias for `navigable` for users who migrate from Kendo UI for jQuery.\n   */\n\n\n  set navigatable(value) {\n    this.navigable = value;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get navigatable() {\n    return this.navigable;\n  }\n  /**\n   * Defines a function that is executed for every data row in the component.\n   *\n   * @example\n   * ```ts\n   * import { Component, ViewEncapsulation } from '@angular/core';\n   * import { RowClassArgs } from '@progress/kendo-angular-grid';\n   *\n   * _@Component({\n   *    selector: 'my-app',\n   *    encapsulation: ViewEncapsulation.None,\n   *    styles: [`\n   *        .k-grid tr.even { background-color: #f45c42; }\n   *        .k-grid tr.odd { background-color: #41f4df; }\n   *    `],\n   *    template: `\n   *        <kendo-grid [data]=\"gridData\" [rowClass]=\"rowCallback\">\n   *        </kendo-grid>\n   *    `\n   * })\n   * class AppComponent {\n   *    public gridData: any[] = products;\n   *\n   *    public rowCallback(context: RowClassArgs) {\n   *        const isEven = context.index % 2 === 0;\n   *        return {\n   *            even: isEven,\n   *            odd: !isEven\n   *        };\n   *    }\n   * }\n   *\n   * const products = [{\n   *    \"ProductID\": 1,\n   *    \"ProductName\": \"Chai\",\n   *    \"UnitPrice\": 18.0000,\n   *    \"Discontinued\": true\n   *  }, {\n   *    \"ProductID\": 2,\n   *    \"ProductName\": \"Chang\",\n   *    \"UnitPrice\": 19.0000,\n   *    \"Discontinued\": false\n   *  }\n   * ];\n   * ```\n   */\n\n\n  set rowClass(fn) {\n    if (isDevMode() && typeof fn !== 'function') {\n      throw new Error(`rowClass must be a function, but received ${JSON.stringify(fn)}.`);\n    }\n\n    this._rowClass = fn;\n  }\n\n  get rowClass() {\n    return this._rowClass;\n  }\n  /**\n   * Defines a function that is executed for every data row in the component,\n   * and determines whether the row will be sticky, i.e. always visible after scrolling.\n   */\n\n\n  set rowSticky(fn) {\n    if (isDevMode() && isPresent(fn) && typeof fn !== 'function') {\n      throw new Error(`rowSticky must be a function, but received ${JSON.stringify(fn)}.`);\n    }\n\n    if (isPresent(fn)) {\n      this._rowSticky = fn;\n    }\n  }\n\n  get rowSticky() {\n    return this._rowSticky;\n  }\n  /**\n   * Defines a Boolean function that is executed for each data row in the component\n   * ([see example]({% slug grid_selection_custom %}#toc-setting-the-selected-rows)).\n   * Determines whether the row will be selected.\n   */\n\n\n  set rowSelected(fn) {\n    if (isDevMode() && typeof fn !== 'function') {\n      throw new Error(`rowSelected must be a function, but received ${JSON.stringify(fn)}.`);\n    }\n\n    this._rowSelected = fn;\n  }\n\n  get rowSelected() {\n    return this._rowSelected;\n  }\n  /**\n   * Defines a function that determines the selected state of a data cell.\n   * Returns an object with `selected` and `item` properties.\n   * The cell is marked as selected only if the `selected` property equals `true`.\n   *\n   * The function is executed for each data cell and may be called more than once\n   * as part of a change detection cycle. ([see example]({% slug grid_selection_custom %}#toc-setting-the-selected-cells))\n   */\n\n\n  set cellSelected(fn) {\n    if (isDevMode() && typeof fn !== 'function') {\n      throw new Error(`cellSelected must be a function, but received ${JSON.stringify(fn)}.`);\n    }\n\n    this._cellSelected = fn;\n  }\n\n  get cellSelected() {\n    return this._cellSelected;\n  }\n  /**\n   * Returns the currently focused cell (if any).\n   */\n\n\n  get activeCell() {\n    return this.navigationService.activeCell;\n  }\n  /**\n   * Returns the currently focused row (if any).\n   */\n\n\n  get activeRow() {\n    return this.navigationService.activeRow;\n  }\n\n  get dir() {\n    return this.direction;\n  }\n\n  get hostClasses() {\n    return true;\n  }\n\n  get lockedClasses() {\n    return this.lockedLeafColumns.length > 0;\n  }\n\n  get virtualClasses() {\n    return this.isVirtual;\n  }\n\n  get noScrollbarClass() {\n    return this.scrollbarWidth === 0;\n  }\n\n  get detailTemplate() {\n    if (this._customDetailTemplate) {\n      return this._customDetailTemplate;\n    }\n\n    return this.detailTemplateChildren ? this.detailTemplateChildren.first : undefined;\n  }\n\n  set detailTemplate(detailTemplate) {\n    this._customDetailTemplate = detailTemplate;\n  }\n\n  get cellLoadingTemplate() {\n    if (this._cellLoadingTemplate) {\n      return this._customDetailTemplate;\n    }\n\n    return this.cellLoadingTemplateChildren ? this.cellLoadingTemplateChildren.first : undefined;\n  }\n\n  set cellLoadingTemplate(cellLoadingTemplate) {\n    this._cellLoadingTemplate = cellLoadingTemplate;\n  }\n\n  get loadingTemplate() {\n    if (this._loadingTemplate) {\n      return this._loadingTemplate;\n    }\n\n    return this.loadingTemplateChildren ? this.loadingTemplateChildren.first : undefined;\n  }\n\n  set loadingTemplate(loadingTemplate) {\n    this._loadingTemplate = loadingTemplate;\n  }\n\n  get noRecordsTemplate() {\n    if (this._customNoRecordsTemplate) {\n      return this._customNoRecordsTemplate;\n    }\n\n    return this.noRecordsTemplateChildren ? this.noRecordsTemplateChildren.first : undefined;\n  }\n\n  set noRecordsTemplate(customNoRecordsTemplate) {\n    this._customNoRecordsTemplate = customNoRecordsTemplate;\n  }\n\n  get pagerTemplate() {\n    if (this._customPagerTemplate) {\n      return this._customPagerTemplate;\n    }\n\n    return this.pagerTemplateChildren ? this.pagerTemplateChildren.first : undefined;\n  }\n\n  set pagerTemplate(customPagerTemplate) {\n    this._customPagerTemplate = customPagerTemplate;\n  }\n\n  get toolbarTemplate() {\n    if (this._customToolbarTemplate) {\n      return this._customToolbarTemplate;\n    }\n\n    return this.toolbarTemplateChildren ? this.toolbarTemplateChildren.first : undefined;\n  }\n\n  set toolbarTemplate(customToolbarTemplate) {\n    this._customToolbarTemplate = customToolbarTemplate;\n  }\n\n  get scrollbarWidth() {\n    return this.supportService.scrollbarWidth;\n  }\n\n  get headerPadding() {\n    if (isUniversal()) {\n      return \"\";\n    }\n\n    const padding = Math.max(0, this.scrollbarWidth) + 'px';\n    const right = this.rtl ? 0 : padding;\n    const left = this.rtl ? padding : 0;\n    return `0 ${right} 0 ${left}`;\n  }\n\n  get hasGroupFooters() {\n    return this.columnsContainer.hasGroupFooter;\n  }\n\n  get showFooter() {\n    return this.columnsContainer.hasFooter;\n  }\n\n  get showGroupFooters() {\n    return this.groupable && this.groupable.showFooter;\n  }\n\n  get ariaRowCount() {\n    return this.totalColumnLevels + 1 + this.view.total;\n  }\n\n  get ariaColCount() {\n    return this.columnsContainer.leafColumnsToRender.length;\n  }\n\n  get navigation() {\n    return this.navigationService;\n  }\n\n  get isVirtual() {\n    return this.scrollable === 'virtual';\n  }\n\n  get isScrollable() {\n    return this.scrollable !== 'none';\n  }\n\n  get visibleColumns() {\n    return this.columnsContainer.allColumns;\n  }\n\n  get lockedColumns() {\n    return this.columnsContainer.lockedColumns;\n  }\n\n  get nonLockedColumns() {\n    return this.columnsContainer.nonLockedColumns;\n  }\n\n  get lockedLeafColumns() {\n    return this.columnsContainer.lockedLeafColumns;\n  }\n\n  get stickyColumns() {\n    return this.columns.filter(column => column.sticky);\n  }\n\n  get nonLockedLeafColumns() {\n    return this.columnsContainer.nonLockedLeafColumns;\n  }\n\n  get leafColumns() {\n    return this.columnsContainer.leafColumns;\n  }\n\n  get totalColumnLevels() {\n    return this.columnsContainer.totalLevels;\n  }\n\n  get headerColumns() {\n    if (this.virtualColumns && !this.pdfService.exporting) {\n      return this.viewportColumns;\n    }\n\n    return this.nonLockedColumns;\n  }\n\n  get headerLeafColumns() {\n    if (this.virtualColumns && !this.pdfService.exporting) {\n      return this.leafViewportColumns;\n    }\n\n    return this.nonLockedLeafColumns;\n  }\n\n  get lockedWidth() {\n    const groupCellsWidth = this.group.length * GROUP_CELL_WIDTH;\n    return expandColumns(this.lockedLeafColumns.toArray()).reduce((prev, curr) => prev + (curr.width || 0), groupCellsWidth);\n  }\n\n  get nonLockedWidth() {\n    if (!this.rtl && this.lockedLeafColumns.length || this.virtualColumns) {\n      return !this.virtualColumns ? this.columnsContainer.unlockedWidth : this.leafViewportColumns.reduce((acc, column) => acc + (column.width || 0), 0);\n    }\n\n    return undefined;\n  }\n\n  get selectableSettings() {\n    if (this.selectionService) {\n      return this.selectionService.options;\n    }\n\n    return undefined;\n  }\n\n  get columnMenuTemplate() {\n    const template = this.columnMenuTemplates.first;\n    return template ? template.templateRef : null;\n  }\n\n  get totalCount() {\n    if (this.isVirtual || !isPresent(this.pageSize)) {\n      return this.view.total;\n    }\n\n    return this.pageSize;\n  }\n  /**\n   * Expands the specified master row ([see example]({% slug hierarchy_grid %})).\n   *\n   * This method is provided only for backwards-compatibility with legacy versions.\n   * These versions tracked the expanded state internally using the data row index.\n   *\n   * For new development, use the [kendoGridDetailsExpandBy directive]({% slug api_grid_expanddetailsdirective %})\n   * or provide an isDetailExpanded callback. See [Controlling the Expanded State]({% slug master_detail_expanded_state_grid %})\n   * for examples on how to control the expanded state.\n   *\n   * @param index - The data row index of the master row.\n   */\n\n\n  expandRow(index) {\n    this.toggleDetailRowLegacy(index, true);\n  }\n  /**\n   * Collapses the specified master row ([see example]({% slug hierarchy_grid %})).\n   *\n   * This method is provided only for backwards-compatibility with legacy versions.\n   * These versions tracked the expanded state internally using the data row index.\n   *\n   * For new development, use the [kendoGridDetailsExpandBy directive]({% slug api_grid_expanddetailsdirective %})\n   * or provide an isDetailExpanded callback. See [Controlling the Expanded State]({% slug master_detail_expanded_state_grid %})\n   * for examples on how to control the expanded state.\n   *\n   * @param index - The data row index of the master row.\n   */\n\n\n  collapseRow(index) {\n    this.toggleDetailRowLegacy(index, false);\n  }\n  /**\n   * Expands a group header item for the given index. For example,\n   * `0_1` expands the second inner group of the first master group.\n   *\n   * This method is provided only for backwards-compatibility with legacy versions.\n   * These versions tracked the expanded group state internally using the hierarchical group index.\n   *\n   * > * When you use the [kendoGridGroupBinding]({% slug api_grid_groupbindingdirective %}) directive,\n   * > the `expandGroup` method is not supported.\n   * > * When a Grid is pageable, the indexes of the groups are offset by the current Grid [skip]({% slug api_grid_gridcomponent %}#toc-skip).\n   *\n   * @param {string} index - The underscore separated hierarchical index of the group.\n   */\n\n\n  expandGroup(index) {\n    this.toggleGroupRowLegacy(index, true);\n  }\n  /**\n   * Collapses a group header item for the given index. For example,\n   * `0_1` collapses the second inner group of the first master group.\n   *\n   * This method is provided only for backwards-compatibility with legacy versions.\n   * These versions tracked the expanded group state internally using the hierarchical group index.\n   *\n   * > * When you use the [kendoGridGroupBinding]({% slug api_grid_groupbindingdirective %}) directive,\n   * > the `collapseGroup` method is not supported.\n   * > * When a Grid is pageable, the indexes of the groups are offset by the current Grid [skip]({% slug api_grid_gridcomponent %}#toc-skip).\n   *\n   * @param {string} index - The underscore separated hierarchical index of the group.\n   */\n\n\n  collapseGroup(index) {\n    this.toggleGroupRowLegacy(index, false);\n  }\n  /**\n   * @hidden\n   */\n\n\n  resetGroupsState() {\n    this.groupsService.reset();\n  }\n  /**\n   * @hidden\n   */\n\n\n  expandGroupChildren(groupIndex) {\n    this.groupsService.expandChildren(groupIndex);\n  }\n  /**\n   * @hidden\n   */\n\n\n  onDataChange() {\n    this.autoGenerateColumns();\n    this.changeNotification.notify();\n    this.pdfService.dataChanged.emit();\n\n    if (isPresent(this.defaultSelection)) {\n      this.defaultSelection.reset();\n    }\n\n    this.initSelectionService();\n    this.updateNavigationMetadata();\n  }\n\n  ngOnChanges(changes) {\n    if (isChanged$1(\"data\", changes)) {\n      this.onDataChange();\n    }\n\n    if (this.lockedLeafColumns.length && anyChanged([\"pageSize\", \"skip\", \"sort\", \"group\"], changes)) {\n      this.changeNotification.notify();\n    }\n\n    if (anyChanged([\"pageSize\", \"scrollable\", 'virtualColumns'], changes)) {\n      this.updateNavigationMetadata();\n    }\n\n    if (isChanged$1(\"virtualColumns\", changes)) {\n      this.viewportColumns = this.leafViewportColumns = null;\n    }\n\n    if (isChanged$1(\"height\", changes, false)) {\n      this.renderer.setStyle(this.wrapper.nativeElement, 'height', `${this.height}px`);\n    }\n\n    if (isChanged$1(\"filterable\", changes) && this.lockedColumns.length) {\n      this.syncHeaderHeight(this.ngZone.onStable.asObservable().pipe(take(1)));\n    }\n\n    if (anyChanged([\"columnMenu\", \"sortable\", \"filterable\"], changes, false)) {\n      this.columnMenuOptions = this.columnMenu && Object.assign({\n        filter: Boolean(this.filterable),\n        sort: Boolean(this.sortable)\n      }, this.columnMenu);\n    }\n\n    if (isChanged$1(\"scrollable\", changes) && this.isScrollable) {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => this.attachScrollSync());\n    }\n\n    if (isChanged$1(\"selectable\", changes) && this.shouldResetSelection(changes.selectable)) {\n      if (this.defaultSelection) {\n        this.defaultSelection.reset();\n      } else if (this.selectionDirective) {\n        this.selectionDirective.reset();\n      }\n    }\n\n    if (isChanged$1('groupable', changes, true)) {\n      this.groupable = changes.groupable.currentValue;\n    }\n\n    if (isChanged$1('navigable', changes, true)) {\n      if (this.navigationService.enabled) {\n        this.navigationService.setActiveSections(this.navigable);\n      } else {\n        if (this.navigable.length) {\n          this.navigationService.init(this.navigationMetadata(), this.navigable);\n        }\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    this.attachScrollSync();\n    this.attachElementEventHandlers();\n    this.updateNavigationMetadata();\n    this.applyAutoSize();\n  }\n\n  ngAfterContentChecked() {\n    this.columnsContainer.refresh();\n    this.verifySettings();\n    this.initSelectionService();\n  }\n\n  ngAfterContentInit() {\n    this.shouldGenerateColumns = !this.columns.length;\n    this.autoGenerateColumns();\n    this.columnList = new ColumnList(this.columns);\n    this.columnsChangeSubscription = this.columns.changes.subscribe(() => this.verifySettings());\n  }\n\n  ngOnInit() {\n    if (this.navigable.length) {\n      this.navigationService.init(this.navigationMetadata(), this.navigable);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.selectionSubscription) {\n      this.selectionSubscription.unsubscribe();\n    }\n\n    if (this.stateChangeSubscription) {\n      this.stateChangeSubscription.unsubscribe();\n    }\n\n    if (this.groupExpandCollapseSubscription) {\n      this.groupExpandCollapseSubscription.unsubscribe();\n    }\n\n    if (this.detailsServiceSubscription) {\n      this.detailsServiceSubscription.unsubscribe();\n    }\n\n    if (this.editServiceSubscription) {\n      this.editServiceSubscription.unsubscribe();\n    }\n\n    if (this.pdfSubscription) {\n      this.pdfSubscription.unsubscribe();\n    }\n\n    if (this.filterSubscription) {\n      this.filterSubscription.unsubscribe();\n    }\n\n    if (this.sortSubscription) {\n      this.sortSubscription.unsubscribe();\n    }\n\n    if (this.columnsChangeSubscription) {\n      this.columnsChangeSubscription.unsubscribe();\n    }\n\n    if (this.excelSubscription) {\n      this.excelSubscription.unsubscribe();\n    }\n\n    if (this.columnsContainerChangeSubscription) {\n      this.columnsContainerChangeSubscription.unsubscribe();\n    }\n\n    if (this.scrollSyncService) {\n      this.scrollSyncService.destroy();\n    }\n\n    if (this.detachElementEventHandlers) {\n      this.detachElementEventHandlers();\n    }\n\n    if (this.defaultSelection) {\n      this.defaultSelection.destroy();\n    }\n\n    if (this.cellClickSubscription) {\n      this.cellClickSubscription.unsubscribe();\n    }\n\n    if (this.footerChangeSubscription) {\n      this.footerChangeSubscription.unsubscribe();\n    }\n\n    this.ngZone = null;\n\n    if (this.columnResizingSubscription) {\n      this.columnResizingSubscription.unsubscribe();\n    }\n\n    if (this.columnReorderSubscription) {\n      this.columnReorderSubscription.unsubscribe();\n    }\n\n    if (this.localizationSubscription) {\n      this.localizationSubscription.unsubscribe();\n    }\n\n    if (this.columnVisibilityChangeSubscription) {\n      this.columnVisibilityChangeSubscription.unsubscribe();\n    }\n\n    if (this.columnLockedChangeSubscription) {\n      this.columnLockedChangeSubscription.unsubscribe();\n    }\n\n    if (this.columnStickyChangeSubscription) {\n      this.columnStickyChangeSubscription.unsubscribe();\n    }\n\n    if (this.focusElementSubscription) {\n      this.focusElementSubscription.unsubscribe();\n    }\n\n    this.columnRangeChangeSubscription.unsubscribe();\n  }\n  /**\n   * @hidden\n   */\n\n\n  attachScrollSync() {\n    if (isUniversal()) {\n      return;\n    }\n\n    if (this.header) {\n      this.scrollSyncService.registerEmitter(this.header.nativeElement, \"header\");\n    }\n\n    if (this.footer) {\n      this.footerChangeSubscription = observe(this.footer).subscribe(footers => footers.map(footer => footer.nativeElement).filter(isPresent).forEach(element => this.scrollSyncService.registerEmitter(element, \"footer\")));\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  get ariaLabel() {\n    return this.localization.get('gridLabel');\n  }\n  /**\n   * Switches the specified table row in the edit mode ([see example]({% slug inline_editing_grid %}#toc-editing-records-1)).\n   *\n   * @param rowIndex - The data row index that will be switched in the edit mode.\n   * @param group - The [FormGroup](link:site.data.urls.angular['formgroupapi'])\n   * that describes the edit form.\n   * @param options - Additional options configuring the focus target once the editor opens.\n   */\n\n\n  editRow(rowIndex, group, options) {\n    this.editService.editRow(rowIndex, group);\n\n    if (isPresent(options) && options.skipFocus) {\n      return;\n    }\n\n    const row = `tr[data-kendo-grid-item-index=\"${rowIndex}\"]`;\n    const columnIndex = options && options.columnIndex;\n    const target = isNaN(columnIndex) ? row : `${row} td[data-kendo-grid-column-index=\"${columnIndex}\"]`;\n    this.focusEditElement(target);\n  }\n  /**\n   * Closes the editor for a given row ([see example]({% slug inline_editing_grid %}#toc-canceling-editing-1)).\n   *\n   * @param {number} index - The row index that will be switched out of the edit mode. If no index is provided, it is assumed\n   * that the new item editor will be closed.\n   */\n\n\n  closeRow(index) {\n    this.editService.close(index);\n  }\n  /**\n   * Creates a new row editor ([see example]({% slug inline_editing_grid %}#toc-adding-records-1)).\n   *\n   * @param {FormGroup} group - The [FormGroup](link:site.data.urls.angular['formgroupapi']) that describes\n   * the edit form. If called with a data item, it will build the `FormGroup` from the data item fields.\n   */\n\n\n  addRow(group) {\n    const isFormGroup = group instanceof FormGroup;\n\n    if (!isFormGroup) {\n      const fields = Object.keys(group).reduce(createControl(group), {}); // FormBuilder?\n\n      group = new FormGroup(fields);\n    }\n\n    this.editService.addRow(group);\n    this.focusEditElement('.k-grid-add-row');\n  }\n  /**\n   * Puts the cell that is specified by the table row and column in edit mode.\n   *\n   * @param {number} rowIndex - The data row index that will be switched in the edit mode.\n   * @param {number|string|any} column - The leaf column index, or the field name or the column instance that should be edited.\n   * @param {FormGroup} group - The [FormGroup](link:site.data.urls.angular['formgroupapi'])\n   * that describes the edit form.\n   */\n\n\n  editCell(rowIndex, column, group) {\n    const instance = this.columnInstance(column);\n    this.editService.editCell(rowIndex, instance, group);\n    this.focusEditElement('.k-grid-edit-cell');\n  }\n  /**\n   * Closes the current cell in edit mode and fires\n   * the [cellClose]({% slug api_grid_gridcomponent %}#toc-cellclose) event.\n   *\n   * @return {boolean} Indicates whether the edited cell was closed.\n   * A `false` value indicates that the\n   * [cellClose]({% slug api_grid_gridcomponent %}#toc-cellclose) event was prevented.\n   */\n\n\n  closeCell() {\n    return !this.editService.closeCell();\n  }\n  /**\n   * Closes the current cell in edit mode.\n   */\n\n\n  cancelCell() {\n    this.editService.cancelCell();\n  }\n  /**\n   * Returns a flag which indicates if a row or a cell is currently edited.\n   *\n   * @return {boolean} A flag which indicates if a row or a cell is currently edited.\n   */\n\n\n  isEditing() {\n    return this.editService.isEditing();\n  }\n  /**\n   * Returns a flag which indicates if a cell is currently edited.\n   *\n   * @return {boolean} A flag which indicates if a cell is currently being edited.\n   */\n\n\n  isEditingCell() {\n    return this.editService.isEditingCell();\n  }\n  /**\n   * Initiates the PDF export ([see example]({% slug pdfexport_grid %})).\n   */\n\n\n  saveAsPDF() {\n    this.pdfService.save(this);\n  }\n  /**\n   * Exports the Grid element to a Drawing [Group]({% slug api_kendo-drawing_group %}) by using the `kendo-grid-pdf` component options.\n   * ([see example]({% slug pdfexport_grid %}#toc-exporting-multiple-grids-to-the-same-pdf)).\n   *\n   * @return {Promise} - A promise that will be resolved with the Drawing `Group`.\n   */\n\n\n  drawPDF() {\n    const promise = createPromise();\n    this.pdfService.draw(this, promise);\n    return promise;\n  }\n  /**\n   * Initiates the Excel export ([see example]({% slug excelexport_grid %})).\n   */\n\n\n  saveAsExcel() {\n    this.excelService.save(this);\n  }\n  /**\n   * Applies the minimum possible width for the specified column,\n   * so that the whole text fits without wrapping. This method expects the Grid\n   * to be resizable (set `resizable` to `true`).\n   * Makes sense to execute this method only\n   * after the Grid is already populated with data.\n   *\n   * @example\n   * ```ts\n   * _@Component({\n   *    selector: 'my-app',\n   *    template: `\n   *        <kendo-grid\n   *            #grid\n   *            [data]=\"gridData\"\n   *            [resizable]=\"true\"\n   *            style=\"height: 300px\">\n   *            <ng-template kendoGridToolbarTemplate>\n   *                 <button kendoButton (click)=\"grid.autoFitColumn(groupColumn)\">\n   *                     Auto-fit the group column\n   *                 </button>\n   *            </ng-template>\n   *            <kendo-grid-column-group #groupColumn title=\"Product Info\">\n   *                <kendo-grid-column\n   *                    field=\"ProductID\"\n   *                    [width]=\"50\"\n   *                    [minResizableWidth]=\"30\"\n   *                    title=\"ID\">\n   *                </kendo-grid-column>\n   *\n   *                <kendo-grid-column\n   *                    field=\"ProductName\"\n   *                    title=\"Product Name\">\n   *                </kendo-grid-column>\n   *            </kendo-grid-column-group>\n   *\n   *            <kendo-grid-column\n   *                field=\"UnitPrice\"\n   *                title=\"Unit Price\"\n   *                [width]=\"180\"\n   *                filter=\"numeric\"\n   *                format=\"{0:c}\">\n   *            </kendo-grid-column>\n   *        </kendo-grid>\n   *    `\n   * })\n   * class AppComponent {\n   *    public gridData: any[] = products;\n   * }\n   *\n   * const products = [{\n   *    \"ProductID\": 1,\n   *    \"ProductName\": \"Chai\",\n   *    \"UnitPrice\": 18.0000,\n   *    \"Discontinued\": true\n   *  }, {\n   *    \"ProductID\": 2,\n   *    \"ProductName\": \"Chang\",\n   *    \"UnitPrice\": 19.0000,\n   *    \"Discontinued\": false\n   *  }\n   * ];\n   * ```\n   */\n\n\n  autoFitColumn(column) {\n    this.columnResizingService.autoFit(column);\n  }\n  /**\n   * Adjusts the width of the specified columns to fit the entire content, including headers, without wrapping.\n   * If no columns are specified, `autoFitColumns` is applied to all columns.\n   *\n   * This method requires the Grid to be resizable (set `resizable` to `true`).\n   *\n   * @example\n   * ```ts\n   * _@Component({\n   *    selector: 'my-app',\n   *    template: `\n   *      <kendo-grid\n   *          #grid\n   *          [data]=\"gridData\"\n   *          [resizable]=\"true\"\n   *          style=\"height: 300px\">\n   *          <ng-template kendoGridToolbarTemplate>\n   *              <button kendoButton (click)=\"grid.autoFitColumns([firstColumn, lastColumn])\">\n   *                  Auto-fit the first and last column\n   *              </button>\n   *              <button kendoButton (click)=\"grid.autoFitColumns()\">\n   *                  Auto-fit all columns\n   *              </button>\n   *          </ng-template>\n   *          <kendo-grid-column-group title=\"Product Info\">\n   *              <kendo-grid-column\n   *                  #firstColumn\n   *                  field=\"ProductID\"\n   *                  [width]=\"50\"\n   *                  [minResizableWidth]=\"30\"\n   *                  title=\"ID\">\n   *              </kendo-grid-column>\n   *\n   *              <kendo-grid-column\n   *                  field=\"ProductName\"\n   *                  title=\"Product Name\"\n   *                  >\n   *              </kendo-grid-column>\n   *          </kendo-grid-column-group>\n   *\n   *          <kendo-grid-column\n   *              #lastColumn\n   *              field=\"UnitPrice\"\n   *              title=\"Unit Price\"\n   *              [width]=\"180\"\n   *              filter=\"numeric\"\n   *              format=\"{0:c}\">\n   *          </kendo-grid-column>\n   *      </kendo-grid>\n   *    `\n   * })\n   * class AppComponent {\n   *    public gridData: any[] = products;\n   * }\n   *\n   * const products = [{\n   *    \"ProductID\": 1,\n   *    \"ProductName\": \"Chai\",\n   *    \"UnitPrice\": 18.0000,\n   *    \"Discontinued\": true\n   *  }, {\n   *    \"ProductID\": 2,\n   *    \"ProductName\": \"Chang\",\n   *    \"UnitPrice\": 19.0000,\n   *    \"Discontinued\": false\n   *  }\n   * ];\n   * ```\n   */\n\n\n  autoFitColumns(columns = this.columns) {\n    let cols;\n\n    if (columns instanceof QueryList) {\n      cols = columns.toArray();\n    } else {\n      cols = columns;\n    }\n\n    this.columnResizingService.autoFit(...cols);\n  }\n  /**\n   * @hidden\n   */\n\n\n  notifyPageChange(source, event) {\n    if (source === \"list\" && !this.isVirtual) {\n      return;\n    }\n\n    this.pageChange.emit(event);\n  }\n  /**\n   * @hidden\n   */\n\n\n  notifyScrollBottom() {\n    if (this.scrollable === 'none') {\n      return;\n    }\n\n    if (hasObservers(this.scrollBottom)) {\n      this.ngZone.run(() => this.scrollBottom.emit({\n        sender: this\n      }));\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  focusEditElement(containerSelector) {\n    if (this.focusElementSubscription) {\n      this.focusElementSubscription.unsubscribe();\n    }\n\n    this.ngZone.runOutsideAngular(() => {\n      this.focusElementSubscription = this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        const wrapper = this.wrapper.nativeElement;\n\n        if (!this.setEditFocus(wrapper.querySelector(containerSelector)) && this.isLocked) {\n          this.setEditFocus(wrapper.querySelector(`.k-grid-content ${containerSelector}`));\n        }\n\n        this.focusElementSubscription = null;\n      });\n    });\n  }\n  /**\n   * Focuses the last active or the first cell of the Grid.\n   *\n   * @returns {NavigationCell} The focused cell.\n   */\n\n\n  focus() {\n    this.assertNavigable();\n    return this.navigationService.focusCell();\n  }\n  /**\n   * Focuses the cell with the specified row and column index.\n   *\n   * The row index is based on the logical structure of the Grid and does not correspond to the data item index:\n   * * Header rows are included, starting at index 0.\n   * * Group headers and footers are included.\n   * * The row indexing is absolute and does not change with paging.\n   *\n   * If the Grid is configured for scrolling, including virtual scrolling, the scroll position will be updated.\n   * If the row is not present on the current page, the method will have no effect.\n   *\n   * @param rowIndex - The logical row index to focus. The top header row has an index 0.\n   * @param colIndex - The column index to focus.\n   * @returns {NavigationCell} The focused cell.\n   *\n   */\n\n\n  focusCell(rowIndex, colIndex) {\n    this.assertNavigable();\n    return this.navigationService.focusCell(rowIndex, colIndex);\n  }\n  /**\n   * Focuses the next cell, optionally wrapping to the next row.\n   *\n   * @param wrap - A Boolean value which indicates if the focus will move to the next row. Defaults to `true`.\n   * @returns {NavigationCell} The focused cell. If the focus is already on the last cell, returns `null`.\n   */\n\n\n  focusNextCell(wrap = true) {\n    this.assertNavigable();\n    return this.navigationService.focusNextCell(wrap);\n  }\n  /**\n   * Focuses the previous cell. Optionally wraps to the previous row.\n   *\n   * @param wrap - A Boolean value which indicates if the focus will move to the next row. Defaults to `true`.\n   * @returns {NavigationCell} The focused cell. If the focus is already on the first cell, returns `null`.\n   */\n\n\n  focusPrevCell(wrap = true) {\n    this.assertNavigable();\n    return this.navigationService.focusPrevCell(wrap);\n  }\n  /**\n   * Scrolls to the specified row and column ([see example]({% slug scrollmmodes_grid %}#toc-scrolling-to-a-specific-row-and-column-index)).\n   */\n\n\n  scrollTo(request) {\n    this.scrollRequestService.scrollTo(request);\n  }\n  /**\n   * Changes the position of the specified column.\n   * The reordering of columns operates only on the level\n   * which is inferred by the source column.\n   * For the `reorderColumn` method to work properly,\n   * the `source` column has to be visible.\n   *\n   * @param {ColumnBase} source - The column whose position will be changed.\n   * @param {number} destIndex - The new position of the column.\n   * @param {ColumnReorderConfig} options - Additional options.\n   *\n   * @example\n   * ```ts\n   * _@Component({\n   *    selector: 'my-app',\n   *    template: `\n   *        <kendo-grid\n   *            #grid\n   *            [data]=\"gridData\"\n   *            [reorderable]=\"true\"\n   *            style=\"height: 300px\">\n   *            <ng-template kendoGridToolbarTemplate>\n   *                 <button kendoButton\n   *                     (click)=\"grid.reorderColumn(groupColumn, 2, { before: true })\">\n   *                     Move the group column before the last one.\n   *                 </button>\n   *            </ng-template>\n   *            <kendo-grid-column-group #groupColumn title=\"Product Info\">\n   *                <kendo-grid-column\n   *                    field=\"ProductID\"\n   *                    [width]=\"50\"\n   *                    title=\"ID\">\n   *                </kendo-grid-column>\n   *\n   *                <kendo-grid-column\n   *                    field=\"ProductName\"\n   *                    title=\"Product Name\">\n   *                </kendo-grid-column>\n   *            </kendo-grid-column-group>\n   *\n   *            <kendo-grid-column\n   *                field=\"UnitPrice\"\n   *                title=\"Unit Price\"\n   *                [width]=\"180\"\n   *                format=\"{0:c}\">\n   *            </kendo-grid-column>\n   *\n   *            <kendo-grid-column\n   *                field=\"Discontinued\"\n   *                title=\"Discontinued\"\n   *                [width]=\"100\">\n   *            </kendo-grid-column>\n   *        </kendo-grid>\n   *    `\n   * })\n   * class AppComponent {\n   *    public gridData: any[] = products;\n   * }\n   *\n   * const products = [{\n   *    \"ProductID\": 1,\n   *    \"ProductName\": \"Chai\",\n   *    \"UnitPrice\": 18.0000,\n   *    \"Discontinued\": true\n   *  }, {\n   *    \"ProductID\": 2,\n   *    \"ProductName\": \"Chang\",\n   *    \"UnitPrice\": 19.0000,\n   *    \"Discontinued\": false\n   *  }\n   * ];\n   * ```\n   */\n\n\n  reorderColumn(source, destIndex, options = {\n    before: false\n  }) {\n    const columnsForLevel = sortColumns(this.allColumnsForLevel(source.level));\n    let target = columnsForLevel[destIndex];\n\n    if (!target) {\n      return;\n    }\n\n    const lastNonLocked = target.isLocked && !source.isLocked && this.columnsContainer.nonLockedColumns.length === 1;\n\n    if (lastNonLocked) {\n      return;\n    }\n\n    if (isSpanColumnComponent(target) && !options.before) {\n      target = target.childColumns.last;\n    }\n\n    this.reorder({\n      before: options.before,\n      source: source,\n      target: target\n    });\n  }\n  /**\n   * A function which determines if a specific row is expanded.\n   */\n\n\n  set isDetailExpanded(callback) {\n    this.detailsService.userCallback = callback;\n  }\n\n  get isDetailExpanded() {\n    return this.detailsService.userCallback;\n  }\n  /**\n   * A function which determines if a specific group row is expanded.\n   */\n\n\n  set isGroupExpanded(callback) {\n    this.groupsService.userCallback = callback;\n    this.groupable = isPresent(callback);\n  }\n\n  get isGroupExpanded() {\n    return this.groupsService.userCallback;\n  }\n  /**\n   * @hidden\n   */\n\n\n  reorder({\n    target,\n    source,\n    before,\n    changeContainer\n  }) {\n    this.ngZone.run(() => {\n      const columnsForLevel = sortColumns(this.allColumnsForLevel(source.level));\n      let newIndex = columnsForLevel.indexOf(target);\n\n      if (target.parent && target.parent.isSpanColumn) {\n        newIndex = columnsForLevel.indexOf(target.parent);\n\n        if (before) {\n          target = target.parent;\n        }\n      }\n\n      let oldIndex = columnsForLevel.indexOf(source);\n\n      if (changeContainer) {\n        if (before && 0 < newIndex && oldIndex < newIndex) {\n          // dropped before the first not locked column\n          newIndex--;\n        } else if (!before && oldIndex > newIndex) {\n          // dropped after the last locked column\n          newIndex++;\n        }\n      }\n\n      const args = new ColumnReorderEvent({\n        column: source,\n        oldIndex: oldIndex,\n        newIndex: newIndex\n      });\n      this.columnReorder.emit(args);\n\n      if (args.isDefaultPrevented()) {\n        return;\n      }\n\n      if (changeContainer) {\n        this.columnLockedChange.emit(new ColumnLockedChangeEvent([source]));\n      }\n\n      this.updateColumnIndices({\n        columnsForLevel,\n        source,\n        target,\n        before\n      });\n\n      if (source.locked !== target.locked) {\n        source.locked = target.locked;\n      }\n\n      this.columnsContainer.refresh();\n      this.changeDetectorRef.markForCheck();\n    });\n  }\n\n  updateColumnIndices({\n    columnsForLevel,\n    source,\n    target,\n    before\n  }) {\n    const expandedColumns = expandColumnsWithSpan(columnsForLevel);\n    const sourceColumnIndex = expandedColumns.indexOf(source);\n    let nextSourceIndex = 0;\n    let nextIndex = 0;\n    let toSkip = 1; // Possible only when called from the API.\n\n    if (source.isSpanColumn) {\n      toSkip += source.childColumns.length;\n    }\n\n    let i = 0;\n\n    while (i < expandedColumns.length) {\n      let column = expandedColumns[i];\n\n      if (column === target) {\n        nextSourceIndex = before ? nextIndex : nextIndex + 1;\n        nextIndex = before ? nextIndex + toSkip : nextIndex;\n        column.orderIndex = nextIndex;\n\n        if (nextSourceIndex === nextIndex + 1) {\n          nextIndex += toSkip;\n        }\n      } else if (column === source) {\n        i += toSkip;\n        continue;\n      } else {\n        column.orderIndex = nextIndex;\n      }\n\n      nextIndex++;\n      i++;\n    }\n\n    for (i = sourceColumnIndex; i < sourceColumnIndex + toSkip; i++) {\n      expandedColumns[i].orderIndex = nextSourceIndex++;\n    }\n\n    this.updateIndicesForLevel(source.level + 1);\n  }\n\n  updateIndicesForLevel(level) {\n    const colsForParentLevel = this.allColumnsForLevel(level - 1);\n    const colsForLevel = [];\n    sortColumns(colsForParentLevel).forEach(c => {\n      if (c.isColumnGroup) {\n        colsForLevel.push(...c.childrenArray.sort((a, b) => a.orderIndex - b.orderIndex));\n      }\n    });\n    expandColumnsWithSpan(colsForLevel).map((c, i) => c.orderIndex = i);\n\n    if (level < this.columnList.totalColumnLevels()) {\n      this.updateIndicesForLevel(level + 1);\n    }\n  }\n\n  allColumnsForLevel(level) {\n    return this.columnList.toArray().filter(column => column.level === level);\n  }\n\n  initSelectionService() {\n    if (!this.selectable) {\n      this.selectionService.ngOnDestroy();\n      this.cellSelectionService.ngOnDestroy();\n      return;\n    }\n\n    if (!this.selectionDirective && !isPresent(this.defaultSelection)) {\n      this.defaultSelection = new Selection(this.ctx, this.changeDetectorRef);\n    }\n\n    const cellSelectionMode = this.selectable['cell'];\n    const activeService = cellSelectionMode ? this.cellSelectionService : this.selectionService;\n    const inactiveService = cellSelectionMode ? this.selectionService : this.cellSelectionService;\n\n    if (inactiveService.active) {\n      inactiveService.ngOnDestroy();\n      activeService.addSubscriptions();\n      inactiveService.active = false;\n    }\n\n    activeService.active = true;\n    activeService.init({\n      cellSelected: cellSelectionMode ? this.cellSelected : undefined,\n      rowSelected: cellSelectionMode ? undefined : this.rowSelected,\n      selectable: this.selectable,\n      view: this.view,\n      columns: cellSelectionMode ? this.columnList.toArray() : undefined\n    });\n\n    if (!this.selectionDirective && !this.selectableSettings.enabled) {\n      this.defaultSelection.reset();\n    }\n\n    if (this.selectionSubscription) {\n      this.selectionSubscription.unsubscribe();\n    }\n\n    if (cellSelectionMode) {\n      this.selectionSubscription = this.cellSelectionService.changes.subscribe(event => {\n        this.ngZone.run(() => this.selectionChange.emit(event));\n      });\n    } else {\n      this.selectionSubscription = this.selectionService.changes.subscribe(event => {\n        this.ngZone.run(() => this.selectionChange.emit(event));\n      });\n    }\n  }\n\n  setEditFocus(element) {\n    if (element) {\n      return this.navigationService.tryFocus(element);\n    }\n  }\n\n  columnInstance(column) {\n    let instance;\n\n    if (typeof column === 'number') {\n      instance = this.columnsContainer.lockedLeafColumns.toArray().concat(this.columnsContainer.nonLockedLeafColumns.toArray())[column];\n    } else if (typeof column === 'string') {\n      instance = this.columnList.filter(item => item.field === column)[0];\n    } else {\n      instance = column;\n    }\n\n    if (!instance && isDevMode()) {\n      throw new Error(`Invalid column ${column}`);\n    }\n\n    return instance;\n  }\n\n  verifySettings() {\n    if (isDevMode()) {\n      const locked = this.lockedLeafColumns.length || this.columnMenu && this.columnMenu.lock;\n      const stickyColumns = this.stickyColumns.length || this.columnMenu && this.columnMenu.stick;\n\n      if (locked && this.detailTemplate) {\n        throw new Error('Having both detail template and locked columns is not supported.');\n      }\n\n      if (stickyColumns && this.detailTemplate) {\n        throw new Error('Having both detail template and sticky columns is not supported.');\n      }\n\n      if (this.lockedLeafColumns.length && !this.nonLockedLeafColumns.length) {\n        throw new Error('There should be at least one non-locked column');\n      }\n\n      if ((locked || this.virtualColumns) && expandColumns(this.columnList.toArray()).filter(column => !column.width && !isColumnGroupComponent(column)).length) {\n        throw new Error((locked ? 'Locked' : 'Virtual') + ' columns feature requires all columns to have set width.');\n      }\n\n      if (locked && !this.isScrollable) {\n        throw new Error('Locked columns are only supported when scrolling is enabled.');\n      }\n\n      if (this.columnList.filter(isColumnGroupComponent).filter(x => !x.hasChildren).length) {\n        throw new Error('ColumnGroupComponent should contain ColumnComponent or CommandColumnComponent.');\n      }\n\n      if (this.columnList.filter(x => x.locked && x.parent && !x.parent.isLocked).length) {\n        throw new Error('Locked child columns require their parent columns to be locked.');\n      }\n\n      if ((this.rowHeight || this.detailRowHeight) && !this.isVirtual) {\n        throw new Error('Row height and detail row height settings require virtual scrolling mode to be enabled.');\n      }\n\n      if (stickyColumns && expandColumns(this.columnList.toArray()).filter(column => !column.width && !isColumnGroupComponent(column)).length) {\n        throw new Error('Sticky columns feature requires all columns to have set width.');\n      }\n\n      if (stickyColumns && !this.isScrollable) {\n        throw new Error('Sticky columns are only supported when scrolling is enabled.');\n      }\n\n      if (stickyColumns && this.virtualColumns) {\n        throw new Error('Having both sticky columns and column virtualization is not supported.');\n      }\n\n      if (this.rowSticky && this.scrollable === 'virtual') {\n        throw new Error('Having both sticky rows and row virtualization (scrollable=\"virtual\") is not supported.');\n      }\n\n      if (this.rowSticky && this.groupable) {\n        throw new Error('Having both sticky rows and grouping is not supported.');\n      }\n\n      validateColumnsField(this.columnList);\n    }\n  }\n\n  autoGenerateColumns() {\n    if (this.shouldGenerateColumns && !this.columns.length && this.view.length) {\n      this.columns.reset(Object.keys(this.view.at(0)).map(field => {\n        let column = new ColumnComponent();\n        column.field = field;\n        return column;\n      }));\n    }\n  }\n\n  attachStateChangesEmitter() {\n    this.stateChangeSubscription = merge(this.pageChange.pipe(map(x => ({\n      filter: this.filter,\n      group: this.group,\n      skip: x.skip,\n      sort: this.sort,\n      take: x.take\n    }))), this.sortChange.pipe(map(sort => ({\n      filter: this.filter,\n      group: this.group,\n      skip: this.skip,\n      sort: sort,\n      take: this.pageSize\n    }))), this.groupChange.pipe(map(group => ({\n      filter: this.filter,\n      group: group,\n      skip: this.skip,\n      sort: this.sort,\n      take: this.pageSize\n    }))), this.filterChange.pipe(map(filter => ({\n      filter: filter,\n      group: this.group,\n      skip: 0,\n      sort: this.sort,\n      take: this.pageSize\n    })))).subscribe(x => {\n      this.closeCell();\n      this.cancelCell();\n      this.dataStateChange.emit(x);\n    });\n  }\n\n  attachEditHandlers() {\n    if (!this.editService) {\n      return;\n    }\n\n    this.editServiceSubscription = this.editService.changes.subscribe(this.emitCRUDEvent.bind(this));\n  }\n\n  emitCRUDEvent(args) {\n    const {\n      action,\n      rowIndex,\n      formGroup\n    } = args;\n    let dataItem = this.view.at(rowIndex - this.skip);\n\n    if (action !== 'add' && !dataItem) {\n      dataItem = formGroup.value;\n    }\n\n    this.closeCell();\n    Object.assign(args, {\n      dataItem: dataItem,\n      sender: this\n    });\n\n    switch (action) {\n      case 'add':\n        this.add.emit(args);\n        break;\n\n      case 'cancel':\n        this.cancel.emit(args);\n        break;\n\n      case 'edit':\n        this.edit.emit(args);\n        break;\n\n      case 'remove':\n        this.remove.emit(args);\n        break;\n\n      case 'save':\n        this.save.emit(args);\n        break;\n\n      case 'cellClose':\n        this.cellClose.emit(args);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  attachDomEventHandlers() {\n    this.cellClickSubscription = this.domEvents.cellClick.subscribe(args => {\n      this.cellClick.emit(Object.assign({\n        sender: this\n      }, args));\n    });\n  }\n\n  attachElementEventHandlers() {\n    if (isUniversal()) {\n      return;\n    }\n\n    const wrapper = this.wrapper.nativeElement;\n    const ariaRoot = this.ariaRoot.nativeElement;\n    this.ngZone.runOutsideAngular(() => {\n      const resizeCheck = this.resizeCheck.bind(this);\n      const resizeSubscription = this.renderer.listen('window', 'resize', resizeCheck);\n      const orientationSubscription = this.renderer.listen('window', 'orientationchange', resizeCheck);\n      const documentClickSubscription = this.renderer.listen('document', 'click', args => {\n        const activeElement = document.activeElement;\n\n        if (this.editService.shouldCloseCell() && !closest(args.target, matchesClasses('k-animation-container k-grid-ignore-click')) && !(activeElement && (closest(activeElement, matchesClasses('k-animation-container')) || isInEditedCell(activeElement, this.wrapper.nativeElement)))) {\n          this.editService.closeCell(args);\n        }\n      });\n      const windowBlurSubscription = this.renderer.listen('window', 'blur', args => {\n        const activeElement = document.activeElement;\n\n        if (activeElement && !(matchesNodeName('input')(activeElement) && activeElement.type === 'file' && isInEditedCell(activeElement, this.wrapper.nativeElement))) {\n          this.editService.closeCell(args);\n        }\n\n        this.domEvents.windowBlur.emit(args);\n      });\n      const clickSubscription = this.renderer.listen(wrapper, 'click', args => {\n        this.domEvents.click.emit(args);\n      });\n      const keydownSubscription = this.renderer.listen(wrapper, 'keydown', args => {\n        this.domEvents.keydown.emit(args);\n      }); // focusIn and focusOut are relative to the element with ARIA role \"grid\"\n\n      let focused = false;\n      const focusInSubscription = this.renderer.listen(ariaRoot, 'focusin', args => {\n        this.domEvents.focus.emit(args);\n\n        if (!focused) {\n          this.domEvents.focusIn.emit(args);\n          focused = true;\n        }\n      });\n      const focusOutSubscription = this.renderer.listen(ariaRoot, 'focusout', args => {\n        const next = args.relatedTarget || document.activeElement;\n        const outside = !closest(next, node => node === ariaRoot);\n\n        if (outside) {\n          this.domEvents.focusOut.emit(args);\n          focused = false;\n        }\n      });\n\n      this.detachElementEventHandlers = () => {\n        resizeSubscription();\n        orientationSubscription();\n        documentClickSubscription();\n        windowBlurSubscription();\n        clickSubscription();\n        keydownSubscription();\n        focusInSubscription();\n        focusOutSubscription();\n      };\n    });\n  }\n\n  matchesMedia(c) {\n    return this.responsiveService.matchesMedia(c.media);\n  }\n\n  resizeCheck() {\n    if (window.innerWidth !== this.cachedWindowWidth) {\n      this.cachedWindowWidth = window.innerWidth;\n      let hasChanges = false;\n      this.columnList.filterHierarchy(column => {\n        const matchesMedia = this.matchesMedia(column);\n\n        if (column.matchesMedia !== matchesMedia) {\n          hasChanges = true;\n          column.matchesMedia = matchesMedia;\n        }\n\n        return column.isVisible;\n      });\n\n      if (hasChanges) {\n        this.ngZone.run(() => {\n          this.changeDetectorRef.markForCheck();\n        });\n      }\n    }\n  }\n\n  emitPDFExportEvent() {\n    const args = new PDFExportEvent();\n    this.pdfExport.emit(args);\n\n    if (!args.isDefaultPrevented()) {\n      this.saveAsPDF();\n    }\n  }\n\n  syncHeaderHeight(observable) {\n    return observable.pipe(filter(() => isPresent(this.lockedHeader))).subscribe(() => syncRowsHeight(this.lockedHeader.nativeElement.children[0], this.header.nativeElement.children[0]));\n  }\n\n  columnsContainerChange() {\n    this.columnsContainerChangeSubscription = this.syncHeaderHeight(this.columnsContainer.changes.pipe(filter(() => this.lockedColumns.length > 0), switchMap(() => this.ngZone.onStable.asObservable().pipe(take(1)))));\n  }\n\n  handleColumnResize() {\n    const resizes = this.columnResizingService.changes;\n    this.columnResizingSubscription = resizes.pipe(tap(e => {\n      if (e.type === 'start') {\n        this.renderer.addClass(this.wrapper.nativeElement, 'k-grid-column-resizing');\n      } else if (e.type === 'end') {\n        this.renderer.removeClass(this.wrapper.nativeElement, 'k-grid-column-resizing');\n      }\n    }), filter(e => e.type === 'start'), switchMap(() => resizes.pipe( // eslint-disable-next-line rxjs/no-unsafe-takeuntil\n    takeUntil(resizes.pipe(filter(e => e.type === 'triggerAutoFit'))), filter(e => e.type === 'end')))).subscribe(this.notifyResize.bind(this));\n  }\n\n  notifyResize(e) {\n    const args = e.resizedColumns.filter(item => isTruthy(item.column.resizable) && !item.column.isColumnGroup).map(item => ({\n      column: item.column,\n      newWidth: item.column.width,\n      oldWidth: item.oldWidth\n    }));\n    this.columnResize.emit(args);\n  }\n\n  assertNavigable() {\n    if (isDevMode() && !this.navigationService.enabled) {\n      throw new Error('The Grid should be configured as navigable to control focus');\n    }\n  }\n\n  navigationMetadata() {\n    const isVirtual = this.isVirtual;\n    const pageSize = this.pageSize;\n    const dataRows = isVirtual ? this.view.total : pageSize;\n    const addRowOffset = this.editService.hasNewItem ? 1 : 0;\n    const filterRowOffset = hasFilterRow(this.filterable) ? 1 : 0;\n    const headerRows = this.totalColumnLevels + 1 + filterRowOffset + addRowOffset;\n    return new NavigationMetadata(dataRows, headerRows, isVirtual, this.hasPager, isPresent(this.detailTemplate), this.wrapper, this.virtualColumns, this.columnsContainer);\n  }\n\n  updateNavigationMetadata() {\n    this.navigationService.metadata = this.navigationMetadata();\n  }\n\n  applyAutoSize() {\n    const cols = this.columns.filter(c => this.autoSize ? c.autoSize !== false : c.autoSize);\n\n    if (cols.length > 0) {\n      this.ngZone.onStable.pipe(take(1)).subscribe(_ => this.autoFitColumns(cols));\n    }\n  }\n\n  onColumnRangeChange(range) {\n    const viewportColumns = this.viewportColumns = [];\n    const leafViewportColumns = this.columnsContainer.nonLockedLeafColumns.toArray().slice(range.start, range.end + 1);\n\n    for (let idx = 0; idx < leafViewportColumns.length; idx++) {\n      let column = leafViewportColumns[idx];\n\n      while (column.parent) {\n        column = column.parent;\n      }\n\n      const toAdd = [column];\n\n      while (toAdd.length) {\n        column = toAdd.shift();\n        viewportColumns.push(column);\n\n        if (column.isColumnGroup) {\n          toAdd.unshift.apply(toAdd, column.childrenArray);\n        }\n      }\n\n      const lastFromGroup = viewportColumns[viewportColumns.length - 1];\n      column = leafViewportColumns[idx];\n\n      while (column !== lastFromGroup && idx < leafViewportColumns.length) {\n        idx++;\n        column = leafViewportColumns[idx];\n      }\n    }\n\n    if (range.start > 0) {\n      const first = leafViewportColumns[0];\n      let offset = range.offset;\n      let current = viewportColumns[0];\n      let index = 0;\n\n      while (current !== first) {\n        offset -= current.isColumnGroup ? 0 : current.width;\n        index++;\n        current = viewportColumns[index];\n      }\n\n      if (offset > 0) {\n        const totalLevels = this.columnsContainer.totalLevels;\n        let previous;\n\n        for (let idx = 0; idx <= totalLevels; idx++) {\n          const offsetColumn = idx < totalLevels ? new ColumnGroupComponent(previous) : new ColumnBase(previous);\n          previous = offsetColumn;\n          offsetColumn.title = \"\\u00A0\";\n          offsetColumn.width = offset;\n          viewportColumns.unshift(offsetColumn);\n        }\n      }\n    }\n\n    this.leafViewportColumns = viewportColumns.filter(c => !c.isColumnGroup);\n  }\n\n  toggleDetailRowLegacy(index, expand) {\n    const hasCallback = typeof this.isDetailExpanded === 'function';\n\n    if (isDevMode() && hasCallback) {\n      throw new Error('The expandRow and collapseRow methods should not be called when using the ' + 'kendoGridDetailsExpandBy directive or the isDetailExpanded callback. ' + 'These methods are provided only for backwards compatibility with legacy versions.');\n    }\n\n    if (!isDevMode() && hasCallback) {\n      return;\n    }\n\n    if (this.detailsService.isExpanded(index, null) !== expand) {\n      this.detailsService.toggleRow(index, null);\n    }\n  }\n\n  toggleGroupRowLegacy(index, expand) {\n    const hasCallback = typeof this.isGroupExpanded === 'function';\n\n    if (isDevMode() && hasCallback) {\n      throw new Error('The expandGroup and collapseGroup methods should not be called when using the ' + 'kendoGridExpandGroupBy directive or the isGroupExpanded callback. ' + 'These methods are provided only for backwards compatibility with legacy versions.');\n    }\n\n    if (!isDevMode() && hasCallback) {\n      return;\n    }\n\n    if (this.groupsService.isExpanded({\n      groupIndex: index\n    }) !== expand) {\n      this.groupsService.toggleRow({\n        index\n      });\n    }\n  }\n\n  shouldResetSelection(selectableChanges) {\n    const previousValue = selectableChanges.previousValue;\n\n    if (!previousValue) {\n      // Selection was disabled, no need to reset.\n      return false;\n    }\n\n    const currentValue = selectableChanges.currentValue;\n\n    if (!currentValue || currentValue.enabled === false) {\n      // Selection disabled, reset.\n      return true;\n    }\n\n    return previousValue.cell !== currentValue.cell;\n  }\n\n}\n\nGridComponent.ɵfac = function GridComponent_Factory(t) {\n  return new (t || GridComponent)(i0.ɵɵdirectiveInject(BrowserSupportService), i0.ɵɵdirectiveInject(SelectionService), i0.ɵɵdirectiveInject(CellSelectionService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GroupInfoService), i0.ɵɵdirectiveInject(GroupsService), i0.ɵɵdirectiveInject(ChangeNotificationService), i0.ɵɵdirectiveInject(DetailsService), i0.ɵɵdirectiveInject(EditService), i0.ɵɵdirectiveInject(FilterService), i0.ɵɵdirectiveInject(PDFService), i0.ɵɵdirectiveInject(ResponsiveService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(ExcelService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ScrollSyncService), i0.ɵɵdirectiveInject(DomEventsService), i0.ɵɵdirectiveInject(ColumnResizingService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(ColumnReorderService), i0.ɵɵdirectiveInject(ColumnInfoService), i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(SortService), i0.ɵɵdirectiveInject(ScrollRequestService), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(ContextService));\n};\n\nGridComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GridComponent,\n  selectors: [[\"kendo-grid\"]],\n  contentQueries: function GridComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ColumnBase, 4);\n      i0.ɵɵcontentQuery(dirIndex, DetailTemplateDirective, 4);\n      i0.ɵɵcontentQuery(dirIndex, CellLoadingTemplateDirective, 4);\n      i0.ɵɵcontentQuery(dirIndex, LoadingTemplateDirective, 4);\n      i0.ɵɵcontentQuery(dirIndex, NoRecordsTemplateDirective, 4);\n      i0.ɵɵcontentQuery(dirIndex, PagerTemplateDirective, 4);\n      i0.ɵɵcontentQuery(dirIndex, ToolbarTemplateDirective, 4);\n      i0.ɵɵcontentQuery(dirIndex, ColumnMenuTemplateDirective, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.columns = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.detailTemplateChildren = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cellLoadingTemplateChildren = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplateChildren = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.noRecordsTemplateChildren = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.pagerTemplateChildren = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toolbarTemplateChildren = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.columnMenuTemplates = _t);\n    }\n  },\n  viewQuery: function GridComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c53, 5);\n      i0.ɵɵviewQuery(_c54, 5);\n      i0.ɵɵviewQuery(_c55, 7);\n      i0.ɵɵviewQuery(_c56, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.lockedHeader = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.header = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ariaRoot = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footer = _t);\n    }\n  },\n  hostVars: 9,\n  hostBindings: function GridComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx.dir);\n      i0.ɵɵclassProp(\"k-grid\", ctx.hostClasses)(\"k-grid-lockedcolumns\", ctx.lockedClasses)(\"k-grid-virtual\", ctx.virtualClasses)(\"k-grid-no-scrollbar\", ctx.noScrollbarClass);\n    }\n  },\n  inputs: {\n    data: \"data\",\n    pageSize: \"pageSize\",\n    height: \"height\",\n    rowHeight: \"rowHeight\",\n    detailRowHeight: \"detailRowHeight\",\n    skip: \"skip\",\n    scrollable: \"scrollable\",\n    selectable: \"selectable\",\n    sort: \"sort\",\n    trackBy: \"trackBy\",\n    filter: \"filter\",\n    group: \"group\",\n    virtualColumns: \"virtualColumns\",\n    filterable: \"filterable\",\n    sortable: \"sortable\",\n    pageable: \"pageable\",\n    groupable: \"groupable\",\n    navigable: \"navigable\",\n    navigatable: \"navigatable\",\n    autoSize: \"autoSize\",\n    rowClass: \"rowClass\",\n    rowSticky: \"rowSticky\",\n    rowSelected: \"rowSelected\",\n    cellSelected: \"cellSelected\",\n    resizable: \"resizable\",\n    reorderable: \"reorderable\",\n    loading: \"loading\",\n    columnMenu: \"columnMenu\",\n    hideHeader: \"hideHeader\",\n    isDetailExpanded: \"isDetailExpanded\",\n    isGroupExpanded: \"isGroupExpanded\"\n  },\n  outputs: {\n    filterChange: \"filterChange\",\n    pageChange: \"pageChange\",\n    groupChange: \"groupChange\",\n    sortChange: \"sortChange\",\n    selectionChange: \"selectionChange\",\n    dataStateChange: \"dataStateChange\",\n    groupExpand: \"groupExpand\",\n    groupCollapse: \"groupCollapse\",\n    detailExpand: \"detailExpand\",\n    detailCollapse: \"detailCollapse\",\n    edit: \"edit\",\n    cancel: \"cancel\",\n    save: \"save\",\n    remove: \"remove\",\n    add: \"add\",\n    cellClose: \"cellClose\",\n    cellClick: \"cellClick\",\n    pdfExport: \"pdfExport\",\n    excelExport: \"excelExport\",\n    columnResize: \"columnResize\",\n    columnReorder: \"columnReorder\",\n    columnVisibilityChange: \"columnVisibilityChange\",\n    columnLockedChange: \"columnLockedChange\",\n    columnStickyChange: \"columnStickyChange\",\n    scrollBottom: \"scrollBottom\",\n    contentScroll: \"contentScroll\"\n  },\n  exportAs: [\"kendoGrid\"],\n  features: [i0.ɵɵProvidersFeature([BrowserSupportService, LocalizationService, ColumnInfoService, SelectionService, CellSelectionService, DetailsService, GroupsService, GroupInfoService, ChangeNotificationService, EditService, PDFService, SuspendService, {\n    provide: CELL_CONTEXT,\n    useValue: EMPTY_CELL_CONTEXT\n  }, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.grid'\n  }, FilterService, ResponsiveService, PagerContextService, ExcelService, ScrollSyncService, ResizeService, LocalDataChangesService, DomEventsService, ColumnResizingService, SinglePopupService, DragAndDropService, DragHintService, DropCueService, ColumnReorderService, NavigationService, FocusRoot, IdService, ScrollRequestService, SortService, ContextService]), i0.ɵɵNgOnChangesFeature],\n  decls: 12,\n  vars: 17,\n  consts: function () {\n    let i18n_57;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label visible in the Grid group panel when it is empty\n       * @meaning kendo.grid.groupPanelEmpty\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_58 = goog.getMsg(\"Drag a column header and drop it here to group by that column\");\n      i18n_57 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_58;\n    } else {\n      i18n_57 = $localize`:kendo.grid.groupPanelEmpty|The label visible in the Grid group panel when it is empty:Drag a column header and drop it here to group by that column`;\n    }\n\n    let i18n_59;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label visible in the Grid when there are no records\n       * @meaning kendo.grid.noRecords\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_60 = goog.getMsg(\"No records available.\");\n      i18n_59 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_60;\n    } else {\n      i18n_59 = $localize`:kendo.grid.noRecords|The label visible in the Grid when there are no records:No records available.`;\n    }\n\n    let i18n_61;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the first page button in Grid pager\n       * @meaning kendo.grid.pagerFirstPage\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_62 = goog.getMsg(\"Go to the first page\");\n      i18n_61 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_62;\n    } else {\n      i18n_61 = $localize`:kendo.grid.pagerFirstPage|The label for the first page button in Grid pager:Go to the first page`;\n    }\n\n    let i18n_63;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the previous page button in Grid pager\n       * @meaning kendo.grid.pagerPreviousPage\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_64 = goog.getMsg(\"Go to the previous page\");\n      i18n_63 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_64;\n    } else {\n      i18n_63 = $localize`:kendo.grid.pagerPreviousPage|The label for the previous page button in Grid pager:Go to the previous page`;\n    }\n\n    let i18n_65;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the next page button in Grid pager\n       * @meaning kendo.grid.pagerNextPage\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_66 = goog.getMsg(\"Go to the next page\");\n      i18n_65 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_66;\n    } else {\n      i18n_65 = $localize`:kendo.grid.pagerNextPage|The label for the next page button in Grid pager:Go to the next page`;\n    }\n\n    let i18n_67;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the last page button in Grid pager\n       * @meaning kendo.grid.pagerLastPage\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_68 = goog.getMsg(\"Go to the last page\");\n      i18n_67 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_68;\n    } else {\n      i18n_67 = $localize`:kendo.grid.pagerLastPage|The label for the last page button in Grid pager:Go to the last page`;\n    }\n\n    let i18n_69;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label before the current page number in the Grid pager\n       * @meaning kendo.grid.pagerPage\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_70 = goog.getMsg(\"Page\");\n      i18n_69 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_70;\n    } else {\n      i18n_69 = $localize`:kendo.grid.pagerPage|The label before the current page number in the Grid pager:Page`;\n    }\n\n    let i18n_71;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label before the total pages number in the Grid pager\n       * @meaning kendo.grid.pagerOf\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_72 = goog.getMsg(\"of\");\n      i18n_71 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_72;\n    } else {\n      i18n_71 = $localize`:kendo.grid.pagerOf|The label before the total pages number in the Grid pager:of`;\n    }\n\n    let i18n_73;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label after the total pages number in the Grid pager\n       * @meaning kendo.grid.pagerItems\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_74 = goog.getMsg(\"items\");\n      i18n_73 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_74;\n    } else {\n      i18n_73 = $localize`:kendo.grid.pagerItems|The label after the total pages number in the Grid pager:items`;\n    }\n\n    let i18n_75;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the pager input in the Grid pager\n       * @meaning kendo.grid.pagerPageNumberInputTitle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_76 = goog.getMsg(\"Page Number\");\n      i18n_75 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_76;\n    } else {\n      i18n_75 = $localize`:kendo.grid.pagerPageNumberInputTitle|The label for the pager input in the Grid pager:Page Number`;\n    }\n\n    let i18n_77;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the page size chooser in the Grid pager\n       * @meaning kendo.grid.pagerItemsPerPage\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_78 = goog.getMsg(\"items per page\");\n      i18n_77 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_78;\n    } else {\n      i18n_77 = $localize`:kendo.grid.pagerItemsPerPage|The label for the page size chooser in the Grid pager:items per page`;\n    }\n\n    let i18n_79;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the filter cell or icon\n       * @meaning kendo.grid.filter\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_80 = goog.getMsg(\"Filter\");\n      i18n_79 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_80;\n    } else {\n      i18n_79 = $localize`:kendo.grid.filter|The label of the filter cell or icon:Filter`;\n    }\n\n    let i18n_81;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the equal filter operator\n       * @meaning kendo.grid.filterEqOperator\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_82 = goog.getMsg(\"Is equal to\");\n      i18n_81 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_82;\n    } else {\n      i18n_81 = $localize`:kendo.grid.filterEqOperator|The text of the equal filter operator:Is equal to`;\n    }\n\n    let i18n_83;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the not equal filter operator\n       * @meaning kendo.grid.filterNotEqOperator\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_84 = goog.getMsg(\"Is not equal to\");\n      i18n_83 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_84;\n    } else {\n      i18n_83 = $localize`:kendo.grid.filterNotEqOperator|The text of the not equal filter operator:Is not equal to`;\n    }\n\n    let i18n_85;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the is null filter operator\n       * @meaning kendo.grid.filterIsNullOperator\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_86 = goog.getMsg(\"Is null\");\n      i18n_85 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_86;\n    } else {\n      i18n_85 = $localize`:kendo.grid.filterIsNullOperator|The text of the is null filter operator:Is null`;\n    }\n\n    let i18n_87;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the is not null filter operator\n       * @meaning kendo.grid.filterIsNotNullOperator\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_88 = goog.getMsg(\"Is not null\");\n      i18n_87 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_88;\n    } else {\n      i18n_87 = $localize`:kendo.grid.filterIsNotNullOperator|The text of the is not null filter operator:Is not null`;\n    }\n\n    let i18n_89;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the is empty filter operator\n       * @meaning kendo.grid.filterIsEmptyOperator\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_90 = goog.getMsg(\"Is empty\");\n      i18n_89 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_90;\n    } else {\n      i18n_89 = $localize`:kendo.grid.filterIsEmptyOperator|The text of the is empty filter operator:Is empty`;\n    }\n\n    let i18n_91;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the is not empty filter operator\n       * @meaning kendo.grid.filterIsNotEmptyOperator\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_92 = goog.getMsg(\"Is not empty\");\n      i18n_91 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_92;\n    } else {\n      i18n_91 = $localize`:kendo.grid.filterIsNotEmptyOperator|The text of the is not empty filter operator:Is not empty`;\n    }\n\n    let i18n_93;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the starts with filter operator\n       * @meaning kendo.grid.filterStartsWithOperator\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_94 = goog.getMsg(\"Starts with\");\n      i18n_93 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_94;\n    } else {\n      i18n_93 = $localize`:kendo.grid.filterStartsWithOperator|The text of the starts with filter operator:Starts with`;\n    }\n\n    let i18n_95;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the contains filter operator\n       * @meaning kendo.grid.filterContainsOperator\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_96 = goog.getMsg(\"Contains\");\n      i18n_95 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_96;\n    } else {\n      i18n_95 = $localize`:kendo.grid.filterContainsOperator|The text of the contains filter operator:Contains`;\n    }\n\n    let i18n_97;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the does not contain filter operator\n       * @meaning kendo.grid.filterNotContainsOperator\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_98 = goog.getMsg(\"Does not contain\");\n      i18n_97 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_98;\n    } else {\n      i18n_97 = $localize`:kendo.grid.filterNotContainsOperator|The text of the does not contain filter operator:Does not contain`;\n    }\n\n    let i18n_99;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the ends with filter operator\n       * @meaning kendo.grid.filterEndsWithOperator\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_100 = goog.getMsg(\"Ends with\");\n      i18n_99 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_100;\n    } else {\n      i18n_99 = $localize`:kendo.grid.filterEndsWithOperator|The text of the ends with filter operator:Ends with`;\n    }\n\n    let i18n_101;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the greater than or equal filter operator\n       * @meaning kendo.grid.filterGteOperator\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_102 = goog.getMsg(\"Is greater than or equal to\");\n      i18n_101 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_102;\n    } else {\n      i18n_101 = $localize`:kendo.grid.filterGteOperator|The text of the greater than or equal filter operator:Is greater than or equal to`;\n    }\n\n    let i18n_103;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the greater than filter operator\n       * @meaning kendo.grid.filterGtOperator\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_104 = goog.getMsg(\"Is greater than\");\n      i18n_103 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_104;\n    } else {\n      i18n_103 = $localize`:kendo.grid.filterGtOperator|The text of the greater than filter operator:Is greater than`;\n    }\n\n    let i18n_105;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the less than or equal filter operator\n       * @meaning kendo.grid.filterLteOperator\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_106 = goog.getMsg(\"Is less than or equal to\");\n      i18n_105 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_106;\n    } else {\n      i18n_105 = $localize`:kendo.grid.filterLteOperator|The text of the less than or equal filter operator:Is less than or equal to`;\n    }\n\n    let i18n_107;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the less than filter operator\n       * @meaning kendo.grid.filterLtOperator\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_108 = goog.getMsg(\"Is less than\");\n      i18n_107 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_108;\n    } else {\n      i18n_107 = $localize`:kendo.grid.filterLtOperator|The text of the less than filter operator:Is less than`;\n    }\n\n    let i18n_109;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the IsTrue boolean filter option\n       * @meaning kendo.grid.filterIsTrue\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_110 = goog.getMsg(\"Is True\");\n      i18n_109 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_110;\n    } else {\n      i18n_109 = $localize`:kendo.grid.filterIsTrue|The text of the IsTrue boolean filter option:Is True`;\n    }\n\n    let i18n_111;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the IsFalse boolean filter option\n       * @meaning kendo.grid.filterIsFalse\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_112 = goog.getMsg(\"Is False\");\n      i18n_111 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_112;\n    } else {\n      i18n_111 = $localize`:kendo.grid.filterIsFalse|The text of the IsFalse boolean filter option:Is False`;\n    }\n\n    let i18n_113;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the (All) boolean filter option\n       * @meaning kendo.grid.filterBooleanAll\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_114 = goog.getMsg(\"(All)\");\n      i18n_113 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_114;\n    } else {\n      i18n_113 = $localize`:kendo.grid.filterBooleanAll|The text of the (All) boolean filter option:(All)`;\n    }\n\n    let i18n_115;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the after or equal date filter operator\n       * @meaning kendo.grid.filterAfterOrEqualOperator\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_116 = goog.getMsg(\"Is after or equal to\");\n      i18n_115 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_116;\n    } else {\n      i18n_115 = $localize`:kendo.grid.filterAfterOrEqualOperator|The text of the after or equal date filter operator:Is after or equal to`;\n    }\n\n    let i18n_117;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the after date filter operator\n       * @meaning kendo.grid.filterAfterOperator\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_118 = goog.getMsg(\"Is after\");\n      i18n_117 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_118;\n    } else {\n      i18n_117 = $localize`:kendo.grid.filterAfterOperator|The text of the after date filter operator:Is after`;\n    }\n\n    let i18n_119;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the before date filter operator\n       * @meaning kendo.grid.filterBeforeOperator\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_120 = goog.getMsg(\"Is before\");\n      i18n_119 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_120;\n    } else {\n      i18n_119 = $localize`:kendo.grid.filterBeforeOperator|The text of the before date filter operator:Is before`;\n    }\n\n    let i18n_121;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the before or equal date filter operator\n       * @meaning kendo.grid.filterBeforeOrEqualOperator\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_122 = goog.getMsg(\"Is before or equal to\");\n      i18n_121 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_122;\n    } else {\n      i18n_121 = $localize`:kendo.grid.filterBeforeOrEqualOperator|The text of the before or equal date filter operator:Is before or equal to`;\n    }\n\n    let i18n_123;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the filter button\n       * @meaning kendo.grid.filterFilterButton\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_124 = goog.getMsg(\"Filter\");\n      i18n_123 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_124;\n    } else {\n      i18n_123 = $localize`:kendo.grid.filterFilterButton|The text of the filter button:Filter`;\n    }\n\n    let i18n_125;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the clear filter button\n       * @meaning kendo.grid.filterClearButton\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_126 = goog.getMsg(\"Clear\");\n      i18n_125 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_126;\n    } else {\n      i18n_125 = $localize`:kendo.grid.filterClearButton|The text of the clear filter button:Clear`;\n    }\n\n    let i18n_127;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the And filter logic\n       * @meaning kendo.grid.filterAndLogic\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_128 = goog.getMsg(\"And\");\n      i18n_127 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_128;\n    } else {\n      i18n_127 = $localize`:kendo.grid.filterAndLogic|The text of the And filter logic:And`;\n    }\n\n    let i18n_129;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the Or filter logic\n       * @meaning kendo.grid.filterOrLogic\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_130 = goog.getMsg(\"Or\");\n      i18n_129 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_130;\n    } else {\n      i18n_129 = $localize`:kendo.grid.filterOrLogic|The text of the Or filter logic:Or`;\n    }\n\n    let i18n_131;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The loading text\n       * @meaning kendo.grid.loading\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_132 = goog.getMsg(\"Loading\");\n      i18n_131 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_132;\n    } else {\n      i18n_131 = $localize`:kendo.grid.loading|The loading text:Loading`;\n    }\n\n    let i18n_133;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The Grid aria-label\n       * @meaning kendo.grid.gridLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_134 = goog.getMsg(\"Data table\");\n      i18n_133 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_134;\n    } else {\n      i18n_133 = $localize`:kendo.grid.gridLabel|The Grid aria-label:Data table`;\n    }\n\n    let i18n_135;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text shown in the column menu for the columns item\n       * @meaning kendo.grid.columns\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_136 = goog.getMsg(\"Columns\");\n      i18n_135 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_136;\n    } else {\n      i18n_135 = $localize`:kendo.grid.columns|The text shown in the column menu for the columns item:Columns`;\n    }\n\n    let i18n_137;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text shown in the column menu for the lock item\n       * @meaning kendo.grid.lock\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_138 = goog.getMsg(\"Lock\");\n      i18n_137 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_138;\n    } else {\n      i18n_137 = $localize`:kendo.grid.lock|The text shown in the column menu for the lock item:Lock`;\n    }\n\n    let i18n_139;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text shown in the column menu for the unlock item\n       * @meaning kendo.grid.unlock\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_140 = goog.getMsg(\"Unlock\");\n      i18n_139 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_140;\n    } else {\n      i18n_139 = $localize`:kendo.grid.unlock|The text shown in the column menu for the unlock item:Unlock`;\n    }\n\n    let i18n_141;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text shown in the column menu for the set column position item\n       * @meaning kendo.grid.setColumnPosition\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_142 = goog.getMsg(\"Set Column Position\");\n      i18n_141 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_142;\n    } else {\n      i18n_141 = $localize`:kendo.grid.setColumnPosition|The text shown in the column menu for the set column position item:Set Column Position`;\n    }\n\n    let i18n_143;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text shown in the column menu for the stick item\n       * @meaning kendo.grid.stick\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_144 = goog.getMsg(\"Stick\");\n      i18n_143 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_144;\n    } else {\n      i18n_143 = $localize`:kendo.grid.stick|The text shown in the column menu for the stick item:Stick`;\n    }\n\n    let i18n_145;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text shown in the column menu for the unstick item\n       * @meaning kendo.grid.unstick\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_146 = goog.getMsg(\"Unstick\");\n      i18n_145 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_146;\n    } else {\n      i18n_145 = $localize`:kendo.grid.unstick|The text shown in the column menu for the unstick item:Unstick`;\n    }\n\n    let i18n_147;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the sort icon\n       * @meaning kendo.grid.sortable\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_148 = goog.getMsg(\"Sortable\");\n      i18n_147 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_148;\n    } else {\n      i18n_147 = $localize`:kendo.grid.sortable|The label of the sort icon:Sortable`;\n    }\n\n    let i18n_149;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text shown in the column menu for the sort ascending item\n       * @meaning kendo.grid.sortAscending\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_150 = goog.getMsg(\"Sort Ascending\");\n      i18n_149 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_150;\n    } else {\n      i18n_149 = $localize`:kendo.grid.sortAscending|The text shown in the column menu for the sort ascending item:Sort Ascending`;\n    }\n\n    let i18n_151;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text shown in the column menu for the sort descending item\n       * @meaning kendo.grid.sortDescending\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_152 = goog.getMsg(\"Sort Descending\");\n      i18n_151 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_152;\n    } else {\n      i18n_151 = $localize`:kendo.grid.sortDescending|The text shown in the column menu for the sort descending item:Sort Descending`;\n    }\n\n    let i18n_153;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text shown in the column menu for the autosize all columns item\n       * @meaning kendo.grid.autosizeAllColumns\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_154 = goog.getMsg(\"Autosize All Columns\");\n      i18n_153 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_154;\n    } else {\n      i18n_153 = $localize`:kendo.grid.autosizeAllColumns|The text shown in the column menu for the autosize all columns item:Autosize All Columns`;\n    }\n\n    let i18n_155;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text shown in the column menu for the autosize this column item\n       * @meaning kendo.grid.autosizeThisColumn\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_156 = goog.getMsg(\"Autosize This Column\");\n      i18n_155 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_156;\n    } else {\n      i18n_155 = $localize`:kendo.grid.autosizeThisColumn|The text shown in the column menu for the autosize this column item:Autosize This Column`;\n    }\n\n    let i18n_157;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The status announcement when a column is sorted ascending\n       * @meaning kendo.grid.sortedAscending\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_158 = goog.getMsg(\"Sorted Ascending\");\n      i18n_157 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_158;\n    } else {\n      i18n_157 = $localize`:kendo.grid.sortedAscending|The status announcement when a column is sorted ascending:Sorted Ascending`;\n    }\n\n    let i18n_159;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The status announcement when a column is sorted descending\n       * @meaning kendo.grid.sortedDescending\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_160 = goog.getMsg(\"Sorted Descending\");\n      i18n_159 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_160;\n    } else {\n      i18n_159 = $localize`:kendo.grid.sortedDescending|The status announcement when a column is sorted descending:Sorted Descending`;\n    }\n\n    let i18n_161;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The status announcement when a column is no longer sorted\n       * @meaning kendo.grid.sortedDefault\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_162 = goog.getMsg(\"Not Sorted\");\n      i18n_161 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_162;\n    } else {\n      i18n_161 = $localize`:kendo.grid.sortedDefault|The status announcement when a column is no longer sorted:Not Sorted`;\n    }\n\n    let i18n_163;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text shown in the column menu or column chooser for the columns apply button\n       * @meaning kendo.grid.columnsApply\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_164 = goog.getMsg(\"Apply\");\n      i18n_163 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_164;\n    } else {\n      i18n_163 = $localize`:kendo.grid.columnsApply|The text shown in the column menu or column chooser for the columns apply button:Apply`;\n    }\n\n    let i18n_165;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text shown in the column menu or column chooser for the columns reset button\n       * @meaning kendo.grid.columnsReset\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_166 = goog.getMsg(\"Reset\");\n      i18n_165 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_166;\n    } else {\n      i18n_165 = $localize`:kendo.grid.columnsReset|The text shown in the column menu or column chooser for the columns reset button:Reset`;\n    }\n\n    let i18n_167;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the expand icon of detail rows.\n       * @meaning kendo.grid.detailExpand\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_168 = goog.getMsg(\"Expand Details\");\n      i18n_167 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_168;\n    } else {\n      i18n_167 = $localize`:kendo.grid.detailExpand|The title of the expand icon of detail rows.:Expand Details`;\n    }\n\n    let i18n_169;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the collapse icon of detail rows.\n       * @meaning kendo.grid.detailCollapse\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_170 = goog.getMsg(\"Collapse Details\");\n      i18n_169 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_170;\n    } else {\n      i18n_169 = $localize`:kendo.grid.detailCollapse|The title of the collapse icon of detail rows.:Collapse Details`;\n    }\n\n    let i18n_171;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the Today button of the Date filter.\n       * @meaning kendo.grid.filterDateToday\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_172 = goog.getMsg(\"TODAY\");\n      i18n_171 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_172;\n    } else {\n      i18n_171 = $localize`:kendo.grid.filterDateToday|The text of the Today button of the Date filter.:TODAY`;\n    }\n\n    let i18n_173;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the Toggle button of the Date filter.\n       * @meaning kendo.grid.filterDateToggle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_174 = goog.getMsg(\"Toggle Calendar\");\n      i18n_173 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_174;\n    } else {\n      i18n_173 = $localize`:kendo.grid.filterDateToggle|The title of the Toggle button of the Date filter.:Toggle Calendar`;\n    }\n\n    let i18n_175;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the Decrement button of the Numeric filter.\n       * @meaning kendo.grid.filterNumericDecrement\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_176 = goog.getMsg(\"Decrement\");\n      i18n_175 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_176;\n    } else {\n      i18n_175 = $localize`:kendo.grid.filterNumericDecrement|The title of the Decrement button of the Numeric filter.:Decrement`;\n    }\n\n    let i18n_177;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the Increment button of the Numeric filter.\n       * @meaning kendo.grid.filterNumericIncrement\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_178 = goog.getMsg(\"Increment\");\n      i18n_177 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_178;\n    } else {\n      i18n_177 = $localize`:kendo.grid.filterNumericIncrement|The title of the Increment button of the Numeric filter.:Increment`;\n    }\n\n    let i18n_179;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The labels of the checkbox column checkboxes.\n       * @meaning kendo.grid.selectionCheckboxLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_180 = goog.getMsg(\"Select Row\");\n      i18n_179 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_180;\n    } else {\n      i18n_179 = $localize`:kendo.grid.selectionCheckboxLabel|The labels of the checkbox column checkboxes.:Select Row`;\n    }\n\n    let i18n_181;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the checkbox column select all checkbox.\n       * @meaning kendo.grid.selectAllCheckboxLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_182 = goog.getMsg(\"Select All Rows\");\n      i18n_181 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_182;\n    } else {\n      i18n_181 = $localize`:kendo.grid.selectAllCheckboxLabel|The label of the checkbox column select all checkbox.:Select All Rows`;\n    }\n\n    let i18n_183;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the title and aria-label attributes applied to the collapse icon of group rows.\n       * @meaning kendo.grid.groupCollapse\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_184 = goog.getMsg(\"Collapse Group\");\n      i18n_183 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_184;\n    } else {\n      i18n_183 = $localize`:kendo.grid.groupCollapse|The text of the title and aria-label attributes applied to the collapse icon of group rows.:Collapse Group`;\n    }\n\n    let i18n_185;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the title and aria-label attributes applied to the expand icon of group rows.\n       * @meaning kendo.grid.groupExpand\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_186 = goog.getMsg(\"Expand Group\");\n      i18n_185 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_186;\n    } else {\n      i18n_185 = $localize`:kendo.grid.groupExpand|The text of the title and aria-label attributes applied to the expand icon of group rows.:Expand Group`;\n    }\n\n    let i18n_187;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the Grid pager\n       * @meaning kendo.grid.pagerLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_188 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_187 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_188;\n    } else {\n      i18n_187 = $localize`:kendo.grid.pagerLabel|The label for the Grid pager:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n    }\n\n    let i18n_189;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the filter row and menu inputs\n       * @meaning kendo.grid.filterInputLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_190 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_189 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_190;\n    } else {\n      i18n_189 = $localize`:kendo.grid.filterInputLabel|The label of the filter row and menu inputs:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n    }\n\n    let i18n_191;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the filter menu icon\n       * @meaning kendo.grid.filterMenuTitle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_192 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_191 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_192;\n    } else {\n      i18n_191 = $localize`:kendo.grid.filterMenuTitle|The title of the filter menu icon:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n    }\n\n    let i18n_193;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the filter menu operators dropdown\n       * @meaning kendo.grid.filterMenuOperatorsDropDownLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_194 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_193 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_194;\n    } else {\n      i18n_193 = $localize`:kendo.grid.filterMenuOperatorsDropDownLabel|The label of the filter menu operators dropdown:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n    }\n\n    let i18n_195;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the filter menu logic dropdown\n       * @meaning kendo.grid.filterMenuLogicDropDownLabel\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_196 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_195 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_196;\n    } else {\n      i18n_195 = $localize`:kendo.grid.filterMenuLogicDropDownLabel|The label of the filter menu logic dropdown:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n    }\n\n    let i18n_197;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the column menu icon\n       * @meaning kendo.grid.columnMenu\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_198 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_197 = MSG_C__REPOS_ANGULAR_KENDO_GRID_REACTIVE_NODE_MODULES__PROGRESS_KENDO_ANGULAR_GRID_FESM2015_KENDO_ANGULAR_GRID_JS_198;\n    } else {\n      i18n_197 = $localize`:kendo.grid.columnMenu|The title of the column menu icon:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n    }\n\n    return [[\"kendoGridLocalizedMessages\", \"\", \"groupPanelEmpty\", i18n_57, \"noRecords\", i18n_59, \"pagerFirstPage\", i18n_61, \"pagerPreviousPage\", i18n_63, \"pagerNextPage\", i18n_65, \"pagerLastPage\", i18n_67, \"pagerPage\", i18n_69, \"pagerOf\", i18n_71, \"pagerItems\", i18n_73, \"pagerPageNumberInputTitle\", i18n_75, \"pagerItemsPerPage\", i18n_77, \"filter\", i18n_79, \"filterEqOperator\", i18n_81, \"filterNotEqOperator\", i18n_83, \"filterIsNullOperator\", i18n_85, \"filterIsNotNullOperator\", i18n_87, \"filterIsEmptyOperator\", i18n_89, \"filterIsNotEmptyOperator\", i18n_91, \"filterStartsWithOperator\", i18n_93, \"filterContainsOperator\", i18n_95, \"filterNotContainsOperator\", i18n_97, \"filterEndsWithOperator\", i18n_99, \"filterGteOperator\", i18n_101, \"filterGtOperator\", i18n_103, \"filterLteOperator\", i18n_105, \"filterLtOperator\", i18n_107, \"filterIsTrue\", i18n_109, \"filterIsFalse\", i18n_111, \"filterBooleanAll\", i18n_113, \"filterAfterOrEqualOperator\", i18n_115, \"filterAfterOperator\", i18n_117, \"filterBeforeOperator\", i18n_119, \"filterBeforeOrEqualOperator\", i18n_121, \"filterFilterButton\", i18n_123, \"filterClearButton\", i18n_125, \"filterAndLogic\", i18n_127, \"filterOrLogic\", i18n_129, \"loading\", i18n_131, \"gridLabel\", i18n_133, \"columns\", i18n_135, \"lock\", i18n_137, \"unlock\", i18n_139, \"setColumnPosition\", i18n_141, \"stick\", i18n_143, \"unstick\", i18n_145, \"sortable\", i18n_147, \"sortAscending\", i18n_149, \"sortDescending\", i18n_151, \"autosizeAllColumns\", i18n_153, \"autosizeThisColumn\", i18n_155, \"sortedAscending\", i18n_157, \"sortedDescending\", i18n_159, \"sortedDefault\", i18n_161, \"columnsApply\", i18n_163, \"columnsReset\", i18n_165, \"detailExpand\", i18n_167, \"detailCollapse\", i18n_169, \"filterDateToday\", i18n_171, \"filterDateToggle\", i18n_173, \"filterNumericDecrement\", i18n_175, \"filterNumericIncrement\", i18n_177, \"selectionCheckboxLabel\", i18n_179, \"selectAllCheckboxLabel\", i18n_181, \"groupCollapse\", i18n_183, \"groupExpand\", i18n_185, 6, \"pagerLabel\", \"filterInputLabel\", \"filterMenuTitle\", \"filterMenuOperatorsDropDownLabel\", \"filterMenuLogicDropDownLabel\", \"columnMenu\"], [\"pagerLabel\", i18n_187, \"filterInputLabel\", i18n_189, \"filterMenuTitle\", i18n_191, \"filterMenuOperatorsDropDownLabel\", i18n_193, \"filterMenuLogicDropDownLabel\", i18n_195, \"columnMenu\", i18n_197], [\"class\", \"k-toolbar k-grid-toolbar\", \"position\", \"top\", 4, \"ngIf\"], [\"class\", \"k-grid-pager-top\", 3, \"tabindex\", \"template\", \"pageSize\", \"total\", \"skip\", \"options\", \"pageChange\", 4, \"ngIf\"], [3, \"text\", \"groups\", \"change\", 4, \"ngIf\"], [\"role\", \"grid\", 1, \"k-grid-aria-root\"], [\"ariaRoot\", \"\"], [4, \"ngIf\"], [\"kendoGridLoading\", \"\", 3, \"loadingTemplate\", 4, \"ngIf\"], [3, \"tabindex\", \"template\", \"pageSize\", \"total\", \"skip\", \"options\", \"pageChange\", 4, \"ngIf\"], [\"class\", \"k-toolbar k-grid-toolbar k-grid-toolbar-bottom\", \"position\", \"bottom\", 4, \"ngIf\"], [\"position\", \"top\", 1, \"k-toolbar\", \"k-grid-toolbar\"], [1, \"k-grid-pager-top\", 3, \"tabindex\", \"template\", \"pageSize\", \"total\", \"skip\", \"options\", \"pageChange\"], [3, \"text\", \"groups\", \"change\"], [\"class\", \"k-grid-header\", \"role\", \"presentation\", 3, \"padding\", 4, \"ngIf\"], [\"kendoDraggable\", \"\", \"kendoGridSelectionMarquee\", \"\", 3, \"data\", \"rowHeight\", \"detailRowHeight\", \"total\", \"take\", \"groups\", \"groupable\", \"skip\", \"trackBy\", \"columns\", \"selectable\", \"filterable\", \"detailTemplate\", \"noRecordsTemplate\", \"rowClass\", \"rowSticky\", \"loading\", \"isVirtual\", \"cellLoadingTemplate\", \"loadingTemplate\", \"virtualColumns\", \"enableDrag\", \"sort\", \"pageChange\", \"scrollBottom\", \"contentScroll\"], [\"class\", \"k-grid-footer\", 3, \"padding\", 4, \"ngIf\"], [\"role\", \"presentation\", 1, \"k-grid-header\"], [\"role\", \"presentation\", \"class\", \"k-grid-header-locked\", 3, \"width\", 4, \"ngIf\"], [\"role\", \"presentation\", \"data-scrollable\", \"\", 1, \"k-grid-header-wrap\", 3, \"kendoGridResizableContainer\", \"lockedWidth\"], [\"header\", \"\"], [\"role\", \"presentation\", 3, \"virtualColumns\"], [\"kendoGridColGroup\", \"\", \"role\", \"presentation\", 3, \"columns\", \"groups\", \"detailTemplate\"], [\"kendoGridHeader\", \"\", \"role\", \"presentation\", 3, \"resizable\", \"scrollable\", \"columns\", \"totalColumnLevels\", \"sort\", \"filter\", \"filterable\", \"groupable\", \"reorderable\", \"groups\", \"sortable\", \"columnMenu\", \"columnMenuTemplate\", \"lockedColumnsCount\", \"totalColumnsCount\", \"detailTemplate\", \"tabIndex\"], [\"class\", \"k-width-container\", \"role\", \"presentation\", 4, \"ngIf\"], [\"role\", \"presentation\", 1, \"k-grid-header-locked\"], [\"lockedHeader\", \"\"], [\"role\", \"presentation\", 3, \"locked\"], [\"kendoGridHeader\", \"\", 3, \"resizable\", \"scrollable\", \"columns\", \"totalColumnLevels\", \"sort\", \"groups\", \"filter\", \"filterable\", \"groupable\", \"reorderable\", \"sortable\", \"columnMenu\", \"columnMenuTemplate\", \"totalColumnsCount\", \"detailTemplate\", \"tabIndex\"], [\"role\", \"presentation\", 1, \"k-width-container\"], [1, \"k-grid-footer\"], [\"class\", \"k-grid-footer-locked\", 3, \"width\", 4, \"ngIf\"], [\"data-scrollable\", \"\", 1, \"k-grid-footer-wrap\", 3, \"kendoGridResizableContainer\", \"lockedWidth\"], [\"footer\", \"\"], [\"role\", \"presentation\"], [\"kendoGridColGroup\", \"\", 3, \"columns\", \"groups\", \"detailTemplate\"], [\"kendoGridFooter\", \"\", 3, \"logicalRowIndex\", \"scrollable\", \"groups\", \"columns\", \"lockedColumnsCount\", \"detailTemplate\"], [1, \"k-grid-footer-locked\"], [\"kendoGridFooter\", \"\", 3, \"scrollable\", \"groups\", \"columns\", \"detailTemplate\", \"logicalRowIndex\"], [\"kendoGridHeader\", \"\", 3, \"resizable\", \"scrollable\", \"columns\", \"totalColumnLevels\", \"groups\", \"groupable\", \"reorderable\", \"sort\", \"sortable\", \"filter\", \"filterable\", \"columnMenu\", \"columnMenuTemplate\", \"detailTemplate\", \"tabIndex\", 4, \"ngIf\"], [\"kendoGridTableBody\", \"\", \"kendoDraggable\", \"\", \"kendoGridSelectionMarquee\", \"\", 3, \"isLoading\", \"groups\", \"data\", \"skip\", \"columns\", \"selectable\", \"filterable\", \"noRecordsTemplate\", \"detailTemplate\", \"showGroupFooters\", \"trackBy\", \"rowClass\", \"enableDrag\"], [\"kendoGridFooter\", \"\", 3, \"scrollable\", \"logicalRowIndex\", \"groups\", \"columns\", \"detailTemplate\", 4, \"ngIf\"], [\"kendoGridHeader\", \"\", 3, \"resizable\", \"scrollable\", \"columns\", \"totalColumnLevels\", \"groups\", \"groupable\", \"reorderable\", \"sort\", \"sortable\", \"filter\", \"filterable\", \"columnMenu\", \"columnMenuTemplate\", \"detailTemplate\", \"tabIndex\"], [\"kendoGridFooter\", \"\", 3, \"scrollable\", \"logicalRowIndex\", \"groups\", \"columns\", \"detailTemplate\"], [\"kendoGridLoading\", \"\", 3, \"loadingTemplate\"], [3, \"tabindex\", \"template\", \"pageSize\", \"total\", \"skip\", \"options\", \"pageChange\"], [\"position\", \"bottom\", 1, \"k-toolbar\", \"k-grid-toolbar\", \"k-grid-toolbar-bottom\"]];\n  },\n  template: function GridComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainerStart(0, 0);\n      i0.ɵɵi18nAttributes(1, 1);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(2, GridComponent_kendo_grid_toolbar_2_Template, 1, 0, \"kendo-grid-toolbar\", 2);\n      i0.ɵɵtemplate(3, GridComponent_kendo_pager_3_Template, 1, 7, \"kendo-pager\", 3);\n      i0.ɵɵtemplate(4, GridComponent_kendo_grid_group_panel_4_Template, 1, 2, \"kendo-grid-group-panel\", 4);\n      i0.ɵɵelementStart(5, \"div\", 5, 6);\n      i0.ɵɵtemplate(7, GridComponent_ng_container_7_Template, 4, 25, \"ng-container\", 7);\n      i0.ɵɵtemplate(8, GridComponent_ng_container_8_Template, 6, 20, \"ng-container\", 7);\n      i0.ɵɵtemplate(9, GridComponent_div_9_Template, 1, 1, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, GridComponent_kendo_pager_10_Template, 1, 7, \"kendo-pager\", 9);\n      i0.ɵɵtemplate(11, GridComponent_kendo_grid_toolbar_11_Template, 1, 0, \"kendo-grid-toolbar\", 10);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵi18nExp(\"Page navigation, page {currentPage} of {totalPages}\")(\"{columnName} Filter\")(\"{columnName} Filter Menu\")(\"{columnName} Filter Operators\")(\"{columnName} Filter Logic\")(\"{columnName} Column Menu\");\n      i0.ɵɵi18nApply(1);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showTopToolbar);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showTopPager);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showGroupPanel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-rowcount\", ctx.ariaRowCount)(\"aria-colcount\", ctx.ariaColCount);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isScrollable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isScrollable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showBottomPager);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showBottomToolbar);\n    }\n  },\n  directives: [LocalizedMessagesDirective, i4.NgIf, ToolbarComponent, PagerComponent, GroupPanelComponent, ListComponent, i1$1.DraggableDirective, GridMarqueeDirective, ResizableContainerDirective, TableDirective, ColGroupComponent, HeaderComponent, FooterComponent, TableBodyComponent, LoadingComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'kendoGrid',\n      providers: [BrowserSupportService, LocalizationService, ColumnInfoService, SelectionService, CellSelectionService, DetailsService, GroupsService, GroupInfoService, ChangeNotificationService, EditService, PDFService, SuspendService, {\n        provide: CELL_CONTEXT,\n        useValue: EMPTY_CELL_CONTEXT\n      }, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.grid'\n      }, FilterService, ResponsiveService, PagerContextService, ExcelService, ScrollSyncService, ResizeService, LocalDataChangesService, DomEventsService, ColumnResizingService, SinglePopupService, DragAndDropService, DragHintService, DropCueService, ColumnReorderService, NavigationService, FocusRoot, IdService, ScrollRequestService, SortService, ContextService],\n      selector: 'kendo-grid',\n      template: `\n        <ng-container kendoGridLocalizedMessages\n            i18n-groupPanelEmpty=\"kendo.grid.groupPanelEmpty|The label visible in the Grid group panel when it is empty\"\n            groupPanelEmpty=\"Drag a column header and drop it here to group by that column\"\n\n            i18n-noRecords=\"kendo.grid.noRecords|The label visible in the Grid when there are no records\"\n            noRecords=\"No records available.\"\n\n            i18n-pagerLabel=\"kendo.grid.pagerLabel|The label for the Grid pager\"\n            pagerLabel=\"{{ 'Page navigation, page {currentPage} of {totalPages}' }}\"\n\n            i18n-pagerFirstPage=\"kendo.grid.pagerFirstPage|The label for the first page button in Grid pager\"\n            pagerFirstPage=\"Go to the first page\"\n\n            i18n-pagerPreviousPage=\"kendo.grid.pagerPreviousPage|The label for the previous page button in Grid pager\"\n            pagerPreviousPage=\"Go to the previous page\"\n\n            i18n-pagerNextPage=\"kendo.grid.pagerNextPage|The label for the next page button in Grid pager\"\n            pagerNextPage=\"Go to the next page\"\n\n            i18n-pagerLastPage=\"kendo.grid.pagerLastPage|The label for the last page button in Grid pager\"\n            pagerLastPage=\"Go to the last page\"\n\n            i18n-pagerPage=\"kendo.grid.pagerPage|The label before the current page number in the Grid pager\"\n            pagerPage=\"Page\"\n\n            i18n-pagerOf=\"kendo.grid.pagerOf|The label before the total pages number in the Grid pager\"\n            pagerOf=\"of\"\n\n            i18n-pagerItems=\"kendo.grid.pagerItems|The label after the total pages number in the Grid pager\"\n            pagerItems=\"items\"\n\n            i18n-pagerPageNumberInputTitle=\"kendo.grid.pagerPageNumberInputTitle|The label for the pager input in the Grid pager\"\n            pagerPageNumberInputTitle=\"Page Number\"\n\n            i18n-pagerItemsPerPage=\"kendo.grid.pagerItemsPerPage|The label for the page size chooser in the Grid pager\"\n            pagerItemsPerPage=\"items per page\"\n\n            i18n-filter=\"kendo.grid.filter|The label of the filter cell or icon\"\n            filter=\"Filter\"\n\n            i18n-filterInputLabel=\"kendo.grid.filterInputLabel|The label of the filter row and menu inputs\"\n            filterInputLabel=\"{{ '{columnName} Filter' }}\"\n\n            i18n-filterMenuTitle=\"kendo.grid.filterMenuTitle|The title of the filter menu icon\"\n            filterMenuTitle=\"{{ '{columnName} Filter Menu' }}\"\n\n            i18n-filterMenuOperatorsDropDownLabel=\"kendo.grid.filterMenuOperatorsDropDownLabel|The label of the filter menu operators dropdown\"\n            filterMenuOperatorsDropDownLabel=\"{{ '{columnName} Filter Operators' }}\"\n\n            i18n-filterMenuLogicDropDownLabel=\"kendo.grid.filterMenuLogicDropDownLabel|The label of the filter menu logic dropdown\"\n            filterMenuLogicDropDownLabel=\"{{ '{columnName} Filter Logic' }}\"\n\n            i18n-filterEqOperator=\"kendo.grid.filterEqOperator|The text of the equal filter operator\"\n            filterEqOperator=\"Is equal to\"\n\n            i18n-filterNotEqOperator=\"kendo.grid.filterNotEqOperator|The text of the not equal filter operator\"\n            filterNotEqOperator=\"Is not equal to\"\n\n            i18n-filterIsNullOperator=\"kendo.grid.filterIsNullOperator|The text of the is null filter operator\"\n            filterIsNullOperator=\"Is null\"\n\n            i18n-filterIsNotNullOperator=\"kendo.grid.filterIsNotNullOperator|The text of the is not null filter operator\"\n            filterIsNotNullOperator=\"Is not null\"\n\n            i18n-filterIsEmptyOperator=\"kendo.grid.filterIsEmptyOperator|The text of the is empty filter operator\"\n            filterIsEmptyOperator=\"Is empty\"\n\n            i18n-filterIsNotEmptyOperator=\"kendo.grid.filterIsNotEmptyOperator|The text of the is not empty filter operator\"\n            filterIsNotEmptyOperator=\"Is not empty\"\n\n            i18n-filterStartsWithOperator=\"kendo.grid.filterStartsWithOperator|The text of the starts with filter operator\"\n            filterStartsWithOperator=\"Starts with\"\n\n            i18n-filterContainsOperator=\"kendo.grid.filterContainsOperator|The text of the contains filter operator\"\n            filterContainsOperator=\"Contains\"\n\n            i18n-filterNotContainsOperator=\"kendo.grid.filterNotContainsOperator|The text of the does not contain filter operator\"\n            filterNotContainsOperator=\"Does not contain\"\n\n            i18n-filterEndsWithOperator=\"kendo.grid.filterEndsWithOperator|The text of the ends with filter operator\"\n            filterEndsWithOperator=\"Ends with\"\n\n            i18n-filterGteOperator=\"kendo.grid.filterGteOperator|The text of the greater than or equal filter operator\"\n            filterGteOperator=\"Is greater than or equal to\"\n\n            i18n-filterGtOperator=\"kendo.grid.filterGtOperator|The text of the greater than filter operator\"\n            filterGtOperator=\"Is greater than\"\n\n            i18n-filterLteOperator=\"kendo.grid.filterLteOperator|The text of the less than or equal filter operator\"\n            filterLteOperator=\"Is less than or equal to\"\n\n            i18n-filterLtOperator=\"kendo.grid.filterLtOperator|The text of the less than filter operator\"\n            filterLtOperator=\"Is less than\"\n\n            i18n-filterIsTrue=\"kendo.grid.filterIsTrue|The text of the IsTrue boolean filter option\"\n            filterIsTrue=\"Is True\"\n\n            i18n-filterIsFalse=\"kendo.grid.filterIsFalse|The text of the IsFalse boolean filter option\"\n            filterIsFalse=\"Is False\"\n\n            i18n-filterBooleanAll=\"kendo.grid.filterBooleanAll|The text of the (All) boolean filter option\"\n            filterBooleanAll=\"(All)\"\n\n            i18n-filterAfterOrEqualOperator=\"kendo.grid.filterAfterOrEqualOperator|The text of the after or equal date filter operator\"\n            filterAfterOrEqualOperator=\"Is after or equal to\"\n\n            i18n-filterAfterOperator=\"kendo.grid.filterAfterOperator|The text of the after date filter operator\"\n            filterAfterOperator=\"Is after\"\n\n            i18n-filterBeforeOperator=\"kendo.grid.filterBeforeOperator|The text of the before date filter operator\"\n            filterBeforeOperator=\"Is before\"\n\n            i18n-filterBeforeOrEqualOperator=\"kendo.grid.filterBeforeOrEqualOperator|The text of the before or equal date filter operator\"\n            filterBeforeOrEqualOperator=\"Is before or equal to\"\n\n            i18n-filterFilterButton=\"kendo.grid.filterFilterButton|The text of the filter button\"\n            filterFilterButton=\"Filter\"\n\n            i18n-filterClearButton=\"kendo.grid.filterClearButton|The text of the clear filter button\"\n            filterClearButton=\"Clear\"\n\n            i18n-filterAndLogic=\"kendo.grid.filterAndLogic|The text of the And filter logic\"\n            filterAndLogic=\"And\"\n\n            i18n-filterOrLogic=\"kendo.grid.filterOrLogic|The text of the Or filter logic\"\n            filterOrLogic=\"Or\"\n\n            i18n-loading=\"kendo.grid.loading|The loading text\"\n            loading=\"Loading\"\n\n            i18n-gridLabel=\"kendo.grid.gridLabel|The Grid aria-label\"\n            gridLabel=\"Data table\"\n\n            i18n-columnMenu=\"kendo.grid.columnMenu|The title of the column menu icon\"\n            columnMenu=\"{{ '{columnName} Column Menu' }}\"\n\n            i18n-columns=\"kendo.grid.columns|The text shown in the column menu for the columns item\"\n            columns=\"Columns\"\n\n            i18n-lock=\"kendo.grid.lock|The text shown in the column menu for the lock item\"\n            lock=\"Lock\"\n\n            i18n-unlock=\"kendo.grid.unlock|The text shown in the column menu for the unlock item\"\n            unlock=\"Unlock\"\n\n            i18n-setColumnPosition=\"kendo.grid.setColumnPosition|The text shown in the column menu for the set column position item\"\n            setColumnPosition=\"Set Column Position\"\n\n            i18n-stick=\"kendo.grid.stick|The text shown in the column menu for the stick item\"\n            stick=\"Stick\"\n\n            i18n-unstick=\"kendo.grid.unstick|The text shown in the column menu for the unstick item\"\n            unstick=\"Unstick\"\n\n            i18n-sortable=\"kendo.grid.sortable|The label of the sort icon\"\n            sortable=\"Sortable\"\n\n            i18n-sortAscending=\"kendo.grid.sortAscending|The text shown in the column menu for the sort ascending item\"\n            sortAscending=\"Sort Ascending\"\n\n            i18n-sortDescending=\"kendo.grid.sortDescending|The text shown in the column menu for the sort descending item\"\n            sortDescending=\"Sort Descending\"\n\n            i18n-autosizeAllColumns=\"kendo.grid.autosizeAllColumns|The text shown in the column menu for the autosize all columns item\"\n            autosizeAllColumns=\"Autosize All Columns\"\n\n            i18n-autosizeThisColumn=\"kendo.grid.autosizeThisColumn|The text shown in the column menu for the autosize this column item\"\n            autosizeThisColumn=\"Autosize This Column\"\n\n            i18n-sortedAscending=\"kendo.grid.sortedAscending|The status announcement when a column is sorted ascending\"\n            sortedAscending=\"Sorted Ascending\"\n\n            i18n-sortedDescending=\"kendo.grid.sortedDescending|The status announcement when a column is sorted descending\"\n            sortedDescending=\"Sorted Descending\"\n\n            i18n-sortedDefault=\"kendo.grid.sortedDefault|The status announcement when a column is no longer sorted\"\n            sortedDefault=\"Not Sorted\"\n\n            i18n-columnsApply=\"kendo.grid.columnsApply|The text shown in the column menu or column chooser for the columns apply button\"\n            columnsApply=\"Apply\"\n\n            i18n-columnsReset=\"kendo.grid.columnsReset|The text shown in the column menu or column chooser for the columns reset button\"\n            columnsReset=\"Reset\"\n\n            i18n-detailExpand=\"kendo.grid.detailExpand|The title of the expand icon of detail rows.\"\n            detailExpand=\"Expand Details\"\n\n            i18n-detailCollapse=\"kendo.grid.detailCollapse|The title of the collapse icon of detail rows.\"\n            detailCollapse=\"Collapse Details\"\n\n            i18n-filterDateToday=\"kendo.grid.filterDateToday|The text of the Today button of the Date filter.\"\n            filterDateToday=\"TODAY\"\n\n            i18n-filterDateToggle=\"kendo.grid.filterDateToggle|The title of the Toggle button of the Date filter.\"\n            filterDateToggle=\"Toggle Calendar\"\n\n            i18n-filterNumericDecrement=\"kendo.grid.filterNumericDecrement|The title of the Decrement button of the Numeric filter.\"\n            filterNumericDecrement=\"Decrement\"\n\n            i18n-filterNumericIncrement=\"kendo.grid.filterNumericIncrement|The title of the Increment button of the Numeric filter.\"\n            filterNumericIncrement=\"Increment\"\n\n            i18n-selectionCheckboxLabel=\"kendo.grid.selectionCheckboxLabel|The labels of the checkbox column checkboxes.\"\n            selectionCheckboxLabel=\"Select Row\"\n\n            i18n-selectAllCheckboxLabel=\"kendo.grid.selectAllCheckboxLabel|The label of the checkbox column select all checkbox.\"\n            selectAllCheckboxLabel=\"Select All Rows\"\n\n            i18n-groupCollapse=\"kendo.grid.groupCollapse|The text of the title and aria-label attributes applied to the collapse icon of group rows.\"\n            groupCollapse=\"Collapse Group\"\n\n            i18n-groupExpand=\"kendo.grid.groupExpand|The text of the title and aria-label attributes applied to the expand icon of group rows.\"\n            groupExpand=\"Expand Group\"\n        >\n        </ng-container>\n        <kendo-grid-toolbar class=\"k-toolbar k-grid-toolbar\" *ngIf=\"showTopToolbar\" position=\"top\"></kendo-grid-toolbar>\n        <kendo-pager\n            *ngIf=\"showTopPager\"\n            [tabindex]=\"navigation.pagerEnabled ? '0' : '-1'\"\n            [attr.role]=\"navigation.pagerEnabled ? 'application' : undefined\"\n            class=\"k-grid-pager-top\"\n            [template]=\"pagerTemplate\"\n            [pageSize]=\"pageSize\"\n            [total]=\"view.total\"\n            [skip]=\"skip\"\n            [options]=\"pageable\"\n            (pageChange)=\"notifyPageChange('pager', $event)\">\n        </kendo-pager>\n        <kendo-grid-group-panel\n            *ngIf=\"showGroupPanel\"\n            [text]=\"groupableEmptyText\"\n            [groups]=\"group\"\n            (change)=\"groupChange.emit($event)\">\n        </kendo-grid-group-panel>\n        <div #ariaRoot\n            class=\"k-grid-aria-root\"\n            role=\"grid\"\n            [attr.aria-label]=\"ariaLabel\"\n            [attr.aria-rowcount]=\"ariaRowCount\"\n            [attr.aria-colcount]=\"ariaColCount\">\n        <ng-container *ngIf=\"isScrollable\">\n            <div *ngIf=\"!hideHeader\"\n                class=\"k-grid-header\"\n                role=\"presentation\"\n                [style.padding]=\"headerPadding\">\n                <div *ngIf=\"isLocked\"\n                     #lockedHeader\n                     role=\"presentation\"\n                     class=\"k-grid-header-locked\"\n                     [style.width.px]=\"lockedWidth\">\n                    <table [locked]=\"true\" role=\"presentation\" [style.width.px]=\"lockedWidth\">\n                        <colgroup kendoGridColGroup\n                            role=\"presentation\"\n                            [columns]=\"$any(lockedLeafColumns)\"\n                            [groups]=\"group\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </colgroup>\n                        <thead kendoGridHeader\n                            [resizable]=\"resizable\"\n                            [scrollable]=\"true\"\n                            [columns]=\"$any(lockedColumns)\"\n                            [totalColumnLevels]=\"totalColumnLevels\"\n                            [sort]=\"sort\"\n                            [groups]=\"group\"\n                            [filter]=\"filter\"\n                            [filterable]=\"filterable\"\n                            [groupable]=\"showGroupPanel\"\n                            [reorderable]=\"reorderable\"\n                            [sortable]=\"sortable\"\n                            [columnMenu]=\"columnMenuOptions\"\n                            [columnMenuTemplate]=\"columnMenuTemplate\"\n                            [totalColumnsCount]=\"leafColumns.length\"\n                            [detailTemplate]=\"detailTemplate\"\n                            [tabIndex]=\"navigation.tableEnabled ? '-1' : '0'\">\n                        </thead>\n                    </table>\n                </div><div #header class=\"k-grid-header-wrap\" role=\"presentation\" data-scrollable\n                    [kendoGridResizableContainer]=\"lockedLeafColumns.length > 0\"\n                    [lockedWidth]=\"lockedWidth + scrollbarWidth + 2\">\n                    <table role=\"presentation\" [style.width.px]=\"nonLockedWidth\" [virtualColumns]=\"virtualColumns\">\n                        <colgroup kendoGridColGroup\n                            role=\"presentation\"\n                            [columns]=\"headerLeafColumns\"\n                            [groups]=\"isLocked ? [] : group\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </colgroup>\n                        <thead kendoGridHeader\n                            [resizable]=\"resizable\"\n                            role=\"presentation\"\n                            [scrollable]=\"true\"\n                            [columns]=\"headerColumns\"\n                            [totalColumnLevels]=\"totalColumnLevels\"\n                            [sort]=\"sort\"\n                            [filter]=\"filter\"\n                            [filterable]=\"filterable\"\n                            [groupable]=\"showGroupPanel\"\n                            [reorderable]=\"reorderable\"\n                            [groups]=\"isLocked ? [] : group\"\n                            [sortable]=\"sortable\"\n                            [columnMenu]=\"columnMenuOptions\"\n                            [columnMenuTemplate]=\"columnMenuTemplate\"\n                            [lockedColumnsCount]=\"lockedLeafColumns.length\"\n                            [totalColumnsCount]=\"leafColumns.length\"\n                            [detailTemplate]=\"detailTemplate\"\n                            [tabIndex]=\"navigation.tableEnabled ? '-1' : '0'\">\n                        </thead>\n                    </table>\n                    <div *ngIf=\"virtualColumns\" class=\"k-width-container\" role=\"presentation\">\n                        <div [style.width.px]=\"columnsContainer.unlockedWidth\"></div>\n                    </div>\n                </div>\n            </div>\n            <kendo-grid-list\n                [data]=\"$any(view)\"\n                [rowHeight]=\"rowHeight\"\n                [detailRowHeight]=\"detailRowHeight\"\n                [total]=\"totalCount\"\n                [take]=\"pageSize\"\n                [groups]=\"group\"\n                [groupable]=\"groupable\"\n                [skip]=\"skip\"\n                [trackBy]=\"trackBy\"\n                [columns]=\"columnsContainer\"\n                [selectable]=\"selectable\"\n                [filterable]=\"filterable\"\n                [detailTemplate]=\"detailTemplate\"\n                [noRecordsTemplate]=\"noRecordsTemplate\"\n                (pageChange)=\"notifyPageChange('list', $event)\"\n                [rowClass]=\"rowClass\"\n                [rowSticky]=\"rowSticky\"\n                [loading]=\"loading\"\n                [isVirtual]=\"isVirtual\"\n                [cellLoadingTemplate]=\"cellLoadingTemplate?.templateRef\"\n                [loadingTemplate]=\"loadingTemplate?.templateRef\"\n                [virtualColumns]=\"virtualColumns\"\n                (scrollBottom)=\"notifyScrollBottom()\"\n                (contentScroll)=\"contentScroll.emit($event)\"\n                kendoDraggable\n                kendoGridSelectionMarquee\n                [enableDrag]=\"marqueeSelection\"\n                [sort]=\"sort\"\n                >\n            </kendo-grid-list>\n            <div\n                *ngIf=\"showFooter\"\n                class=\"k-grid-footer\"\n                [style.padding]=\"headerPadding\">\n                <div\n                    *ngIf=\"lockedLeafColumns.length\"\n                    class=\"k-grid-footer-locked\"\n                    [style.width.px]=\"lockedWidth\">\n                    <table role=\"presentation\" [locked]=\"true\" [style.width.px]=\"lockedWidth\">\n                        <colgroup kendoGridColGroup\n                            [columns]=\"$any(lockedLeafColumns)\"\n                            [groups]=\"group\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </colgroup>\n                        <tfoot kendoGridFooter\n                            [scrollable]=\"true\"\n                            [groups]=\"group\"\n                            [columns]=\"$any(lockedLeafColumns)\"\n                            [detailTemplate]=\"detailTemplate\"\n                            [logicalRowIndex]=\"ariaRowCount\">\n                        </tfoot>\n                    </table>\n                </div><div #footer\n                    class=\"k-grid-footer-wrap\" data-scrollable\n                    [kendoGridResizableContainer]=\"lockedLeafColumns.length > 0\"\n                    [lockedWidth]=\"lockedWidth + scrollbarWidth + 3\">\n                    <table role=\"presentation\" [style.width.px]=\"nonLockedWidth\">\n                        <colgroup kendoGridColGroup\n                            [columns]=\"$any(nonLockedLeafColumns)\"\n                            [groups]=\"isLocked ? [] : group\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </colgroup>\n                        <tfoot kendoGridFooter\n                            [logicalRowIndex]=\"ariaRowCount\"\n                            [scrollable]=\"true\"\n                            [groups]=\"isLocked ? [] : group\"\n                            [columns]=\"$any(nonLockedLeafColumns)\"\n                            [lockedColumnsCount]=\"lockedLeafColumns.length\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </tfoot>\n                    </table>\n                </div>\n            </div>\n        </ng-container>\n        <ng-container *ngIf=\"!isScrollable\">\n            <table [style.table-layout]=\"resizable ? 'fixed' : null\">\n                <colgroup kendoGridColGroup\n                    [columns]=\"$any(leafColumns)\"\n                    [groups]=\"group\"\n                    [detailTemplate]=\"detailTemplate\">\n                </colgroup>\n                <thead kendoGridHeader\n                    *ngIf=\"!hideHeader\"\n                    [resizable]=\"resizable\"\n                    [scrollable]=\"false\"\n                    [columns]=\"$any(visibleColumns)\"\n                    [totalColumnLevels]=\"totalColumnLevels\"\n                    [groups]=\"group\"\n                    [groupable]=\"showGroupPanel\"\n                    [reorderable]=\"reorderable\"\n                    [sort]=\"sort\"\n                    [sortable]=\"sortable\"\n                    [filter]=\"filter\"\n                    [filterable]=\"filterable\"\n                    [columnMenu]=\"columnMenuOptions\"\n                    [columnMenuTemplate]=\"columnMenuTemplate\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [tabIndex]=\"navigation.tableEnabled ? '-1' : '0'\">\n                </thead>\n                <tbody kendoGridTableBody\n                    [isLoading]=\"loading\"\n                    [groups]=\"group\"\n                    [data]=\"$any(view)\"\n                    [skip]=\"skip\"\n                    [columns]=\"$any(leafColumns)\"\n                    [selectable]=\"selectable\"\n                    [filterable]=\"filterable\"\n                    [noRecordsTemplate]=\"noRecordsTemplate\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [showGroupFooters]=\"showGroupFooters\"\n                    [trackBy]=\"trackBy\"\n                    [rowClass]=\"rowClass\"\n                    kendoDraggable\n                    kendoGridSelectionMarquee\n                    [enableDrag]=\"marqueeSelection\">\n                </tbody>\n                <tfoot kendoGridFooter\n                    *ngIf=\"showFooter\"\n                    [scrollable]=\"false\"\n                    [logicalRowIndex]=\"ariaRowCount\"\n                    [groups]=\"group\"\n                    [columns]=\"$any(leafColumns)\"\n                    [detailTemplate]=\"detailTemplate\">\n                </tfoot>\n            </table>\n        </ng-container>\n        <div [loadingTemplate]=\"loadingTemplate\" *ngIf=\"loading\" kendoGridLoading>\n        </div>\n        </div>\n        <kendo-pager\n            *ngIf=\"showBottomPager\"\n            [tabindex]=\"navigation.pagerEnabled ? '0' : '-1'\"\n            [attr.role]=\"navigation.pagerEnabled ? 'application' : undefined\"\n            [template]=\"pagerTemplate\"\n            [pageSize]=\"pageSize\"\n            [total]=\"view.total\"\n            [skip]=\"skip\"\n            [options]=\"pageable\"\n            (pageChange)=\"notifyPageChange('pager', $event)\">\n        </kendo-pager>\n        <kendo-grid-toolbar class=\"k-toolbar k-grid-toolbar k-grid-toolbar-bottom\" *ngIf=\"showBottomToolbar\" position=\"bottom\"></kendo-grid-toolbar>\n    `\n    }]\n  }], function () {\n    return [{\n      type: BrowserSupportService\n    }, {\n      type: SelectionService\n    }, {\n      type: CellSelectionService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: GroupInfoService\n    }, {\n      type: GroupsService\n    }, {\n      type: ChangeNotificationService\n    }, {\n      type: DetailsService\n    }, {\n      type: EditService\n    }, {\n      type: FilterService\n    }, {\n      type: PDFService\n    }, {\n      type: ResponsiveService\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: ExcelService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: ScrollSyncService\n    }, {\n      type: DomEventsService\n    }, {\n      type: ColumnResizingService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: ColumnReorderService\n    }, {\n      type: ColumnInfoService\n    }, {\n      type: NavigationService\n    }, {\n      type: SortService\n    }, {\n      type: ScrollRequestService\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: ContextService\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    pageSize: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    rowHeight: [{\n      type: Input\n    }],\n    detailRowHeight: [{\n      type: Input\n    }],\n    skip: [{\n      type: Input\n    }],\n    scrollable: [{\n      type: Input\n    }],\n    selectable: [{\n      type: Input\n    }],\n    sort: [{\n      type: Input\n    }],\n    trackBy: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }],\n    virtualColumns: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    sortable: [{\n      type: Input\n    }],\n    pageable: [{\n      type: Input\n    }],\n    groupable: [{\n      type: Input\n    }],\n    navigable: [{\n      type: Input\n    }],\n    navigatable: [{\n      type: Input\n    }],\n    autoSize: [{\n      type: Input\n    }],\n    rowClass: [{\n      type: Input\n    }],\n    rowSticky: [{\n      type: Input\n    }],\n    rowSelected: [{\n      type: Input\n    }],\n    cellSelected: [{\n      type: Input\n    }],\n    resizable: [{\n      type: Input\n    }],\n    reorderable: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    columnMenu: [{\n      type: Input\n    }],\n    hideHeader: [{\n      type: Input\n    }],\n    filterChange: [{\n      type: Output\n    }],\n    pageChange: [{\n      type: Output\n    }],\n    groupChange: [{\n      type: Output\n    }],\n    sortChange: [{\n      type: Output\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    dataStateChange: [{\n      type: Output\n    }],\n    groupExpand: [{\n      type: Output\n    }],\n    groupCollapse: [{\n      type: Output\n    }],\n    detailExpand: [{\n      type: Output\n    }],\n    detailCollapse: [{\n      type: Output\n    }],\n    edit: [{\n      type: Output\n    }],\n    cancel: [{\n      type: Output\n    }],\n    save: [{\n      type: Output\n    }],\n    remove: [{\n      type: Output\n    }],\n    add: [{\n      type: Output\n    }],\n    cellClose: [{\n      type: Output\n    }],\n    cellClick: [{\n      type: Output\n    }],\n    pdfExport: [{\n      type: Output\n    }],\n    excelExport: [{\n      type: Output\n    }],\n    columnResize: [{\n      type: Output\n    }],\n    columnReorder: [{\n      type: Output\n    }],\n    columnVisibilityChange: [{\n      type: Output\n    }],\n    columnLockedChange: [{\n      type: Output\n    }],\n    columnStickyChange: [{\n      type: Output\n    }],\n    scrollBottom: [{\n      type: Output\n    }],\n    contentScroll: [{\n      type: Output\n    }],\n    columns: [{\n      type: ContentChildren,\n      args: [ColumnBase]\n    }],\n    dir: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-grid']\n    }],\n    lockedClasses: [{\n      type: HostBinding,\n      args: ['class.k-grid-lockedcolumns']\n    }],\n    virtualClasses: [{\n      type: HostBinding,\n      args: ['class.k-grid-virtual']\n    }],\n    noScrollbarClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-no-scrollbar']\n    }],\n    detailTemplateChildren: [{\n      type: ContentChildren,\n      args: [DetailTemplateDirective]\n    }],\n    cellLoadingTemplateChildren: [{\n      type: ContentChildren,\n      args: [CellLoadingTemplateDirective]\n    }],\n    loadingTemplateChildren: [{\n      type: ContentChildren,\n      args: [LoadingTemplateDirective]\n    }],\n    noRecordsTemplateChildren: [{\n      type: ContentChildren,\n      args: [NoRecordsTemplateDirective]\n    }],\n    pagerTemplateChildren: [{\n      type: ContentChildren,\n      args: [PagerTemplateDirective]\n    }],\n    toolbarTemplateChildren: [{\n      type: ContentChildren,\n      args: [ToolbarTemplateDirective]\n    }],\n    columnMenuTemplates: [{\n      type: ContentChildren,\n      args: [ColumnMenuTemplateDirective]\n    }],\n    lockedHeader: [{\n      type: ViewChild,\n      args: ['lockedHeader', {\n        static: false\n      }]\n    }],\n    header: [{\n      type: ViewChild,\n      args: ['header', {\n        static: false\n      }]\n    }],\n    footer: [{\n      type: ViewChildren,\n      args: ['footer']\n    }],\n    ariaRoot: [{\n      type: ViewChild,\n      args: ['ariaRoot', {\n        static: true\n      }]\n    }],\n    isDetailExpanded: [{\n      type: Input\n    }],\n    isGroupExpanded: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A directive which encapsulates the in-memory handling of data operations such as [paging]({% slug paging_grid %}),\n * [sorting]({% slug sorting_grid %}), and [grouping]({% slug grouping_grid %})\n * ([more information and examples]({% slug local_data_grid %}#toc-using-the-data-binding-directive)).\n */\n\n\nclass DataBindingDirective {\n  constructor(grid, changeDetector, localDataChangesService) {\n    this.grid = grid;\n    this.changeDetector = changeDetector;\n    this.localDataChangesService = localDataChangesService;\n    this.state = {\n      skip: 0\n    };\n    this.originalData = [];\n\n    if (localDataChangesService) {\n      this.dataChangedSubscription = this.localDataChangesService.changes.subscribe(this.rebind.bind(this));\n    }\n  }\n  /**\n   * Defines the number of records that will be skipped by the pager.\n   */\n\n\n  set skip(value) {\n    if (!isPresent(value)) {\n      value = 0;\n    }\n\n    this.grid.skip = this.state.skip = value;\n  }\n  /**\n   * Defines the descriptors by which the data will be sorted.\n   */\n\n\n  set sort(value) {\n    this.grid.sort = this.state.sort = value;\n  }\n  /**\n   * Defines the descriptor by which the data will be filtered.\n   */\n\n\n  set filter(value) {\n    this.grid.filter = this.state.filter = value;\n  }\n  /**\n   * Defines the page size used by the Grid pager.\n   */\n\n\n  set pageSize(value) {\n    this.grid.pageSize = this.state.take = value;\n  }\n  /**\n   * The descriptors by which the data will be grouped.\n   */\n\n\n  set group(value) {\n    this.grid.group = this.state.group = value;\n  }\n  /**\n   * The array of data which will be used to populate the Grid.\n   */\n\n\n  set data(value) {\n    this.originalData = value || [];\n\n    if (this.localDataChangesService) {\n      this.localDataChangesService.data = value;\n    }\n\n    this.dataChanged = true;\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngOnInit() {\n    this.applyState(this.state);\n    this.stateChangeSubscription = this.grid.dataStateChange.subscribe(this.onStateChange.bind(this));\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngOnDestroy() {\n    if (this.stateChangeSubscription) {\n      this.stateChangeSubscription.unsubscribe();\n    }\n\n    if (this.dataChangedSubscription) {\n      this.dataChangedSubscription.unsubscribe();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngOnChanges(changes) {\n    if (anyChanged([\"pageSize\", \"skip\", \"sort\", \"group\", \"filter\"], changes)) {\n      this.rebind();\n    }\n  }\n\n  ngDoCheck() {\n    if (this.dataChanged) {\n      this.updateGridData();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  onStateChange(state) {\n    this.applyState(state);\n    this.rebind();\n  }\n  /**\n   * @hidden\n   */\n\n\n  rebind() {\n    this.data = this.originalData;\n    this.updateGridData();\n    this.notifyDataChange();\n  }\n  /**\n   * Notifies the Grid that its data has changed.\n   */\n\n\n  notifyDataChange() {\n    this.grid.onDataChange();\n\n    if (this.changeDetector) {\n      this.changeDetector.markForCheck();\n    }\n  }\n\n  process(state) {\n    return process(this.originalData, state);\n  }\n\n  applyState({\n    skip,\n    take,\n    sort,\n    group,\n    filter\n  }) {\n    this.skip = skip;\n    this.pageSize = take;\n    this.sort = sort;\n    this.group = group;\n    this.filter = filter;\n  }\n\n  updateGridData() {\n    this.grid.data = this.process(this.state);\n    this.dataChanged = false;\n  }\n\n}\n\nDataBindingDirective.ɵfac = function DataBindingDirective_Factory(t) {\n  return new (t || DataBindingDirective)(i0.ɵɵdirectiveInject(GridComponent), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(LocalDataChangesService));\n};\n\nDataBindingDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DataBindingDirective,\n  selectors: [[\"\", \"kendoGridBinding\", \"\"]],\n  inputs: {\n    skip: \"skip\",\n    sort: \"sort\",\n    filter: \"filter\",\n    pageSize: \"pageSize\",\n    group: \"group\",\n    data: [\"kendoGridBinding\", \"data\"]\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataBindingDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridBinding]'\n    }]\n  }], function () {\n    return [{\n      type: GridComponent\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: LocalDataChangesService\n    }];\n  }, {\n    skip: [{\n      type: Input\n    }],\n    sort: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    pageSize: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }],\n    data: [{\n      type: Input,\n      args: [\"kendoGridBinding\"]\n    }]\n  });\n})();\n/**\n * A directive which stores the row selection state of the Grid in memory\n * ([see example]({% slug selection_grid %}#toc-during-data-operations)).\n */\n\n\nclass SelectionDirective extends Selection {\n  constructor(ctx, cd) {\n    super(ctx, cd);\n    this.ctx = ctx;\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngOnInit() {\n    if (this.ctx.grid.selectable === false) {\n      this.ctx.grid.selectable = true;\n    }\n\n    this.ctx.grid.selectionDirective = this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngOnDestroy() {\n    super.destroy();\n  }\n\n}\n\nSelectionDirective.ɵfac = function SelectionDirective_Factory(t) {\n  return new (t || SelectionDirective)(i0.ɵɵdirectiveInject(ContextService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nSelectionDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: SelectionDirective,\n  selectors: [[\"\", \"kendoGridSelectBy\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectionDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridSelectBy]'\n    }]\n  }], function () {\n    return [{\n      type: ContextService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n/**\n * A directive which controls the expanded state of the master detail rows.\n */\n\n\nclass ExpandDetailsDirective {\n  constructor(grid) {\n    this.grid = grid;\n    /**\n     * Fires when the expandedDetailKeys are changed.\n     */\n\n    this.expandedDetailKeysChange = new EventEmitter();\n    /**\n     * Defines the collection that will store the expanded keys.\n     */\n\n    this.expandedDetailKeys = [];\n    /**\n     * Specifies if the items should be initially expanded.\n     * When set to `true` items added to the `expandedDetailKeys` collection will be collapsed, and items that are not present in it will be expanded.\n     *\n     * @default false\n     */\n\n    this.initiallyExpanded = false;\n    this.expandedState = new Set();\n    this.subscriptions = new Subscription();\n    this.grid.isDetailExpanded = this.isExpanded.bind(this);\n    this.subscriptions.add(merge(this.grid.detailExpand.pipe(map(e => Object.assign({\n      expand: true\n    }, e))), this.grid.detailCollapse.pipe(map(e => Object.assign({\n      expand: false\n    }, e)))).subscribe(this.toggleState.bind(this)));\n  }\n  /**\n   * Defines the item key that will be stored in the `expandedDetailKeys` collection ([see example]({% slug master_detail_expanded_state_grid %}#toc-built-in-directive)).\n   */\n\n\n  get expandDetailsKey() {\n    return this._expandBy;\n  }\n\n  set expandDetailsKey(key) {\n    if (isString(key)) {\n      this._expandBy = getter(key);\n    } else {\n      this._expandBy = key;\n    }\n  }\n  /**\n   *\n   * @hidden\n   * A deprecated alias for setting the `expandDetailsKey` property.\n   */\n\n\n  get expandDetailBy() {\n    return this.expandDetailsKey;\n  }\n\n  set expandDetailBy(key) {\n    this.expandDetailsKey = key;\n  }\n\n  ngOnChanges(changes) {\n    // skip reinitialization if the user data is the same as the last state change\n    if (isPresent(changes.expandedDetailKeys) && this.lastExpandedState !== this.expandedDetailKeys) {\n      this.expandedState = new Set(this.expandedDetailKeys);\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  get keyGetter() {\n    return this._expandBy || getter(undefined);\n  }\n  /**\n   * @hidden\n   */\n\n\n  isExpanded(args) {\n    const key = this.keyGetter(args.dataItem);\n    const hasKey = this.expandedState.has(key); // when [initiallyExpanded]=\"true\" a present key means the corresponding detail row is collapsed\n\n    return this.initiallyExpanded ? !hasKey : hasKey;\n  }\n\n  toggleState(args) {\n    const key = this.keyGetter(args.dataItem);\n\n    if (Boolean(this.initiallyExpanded) !== args.expand) {\n      this.expandedState.add(key);\n    } else {\n      this.expandedState.delete(key);\n    }\n\n    this.notifyChange();\n  }\n\n  notifyChange() {\n    this.lastExpandedState = Array.from(this.expandedState);\n    this.expandedDetailKeysChange.emit(this.lastExpandedState);\n  }\n\n}\n\nExpandDetailsDirective.ɵfac = function ExpandDetailsDirective_Factory(t) {\n  return new (t || ExpandDetailsDirective)(i0.ɵɵdirectiveInject(GridComponent));\n};\n\nExpandDetailsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ExpandDetailsDirective,\n  selectors: [[\"\", \"kendoGridExpandDetailsBy\", \"\"]],\n  inputs: {\n    expandDetailsKey: [\"kendoGridExpandDetailsBy\", \"expandDetailsKey\"],\n    expandDetailBy: \"expandDetailBy\",\n    expandedDetailKeys: \"expandedDetailKeys\",\n    initiallyExpanded: \"initiallyExpanded\"\n  },\n  outputs: {\n    expandedDetailKeysChange: \"expandedDetailKeysChange\"\n  },\n  exportAs: [\"kendoGridExpandDetailsBy\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ExpandDetailsDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridExpandDetailsBy]',\n      exportAs: 'kendoGridExpandDetailsBy'\n    }]\n  }], function () {\n    return [{\n      type: GridComponent\n    }];\n  }, {\n    expandedDetailKeysChange: [{\n      type: Output\n    }],\n    expandDetailsKey: [{\n      type: Input,\n      args: ['kendoGridExpandDetailsBy']\n    }],\n    expandDetailBy: [{\n      type: Input\n    }],\n    expandedDetailKeys: [{\n      type: Input\n    }],\n    initiallyExpanded: [{\n      type: Input\n    }]\n  });\n})();\n\nconst mapParentGroup = parentGroup => {\n  const parentGroupKeys = [];\n\n  while (parentGroup) {\n    parentGroupKeys.push({\n      field: parentGroup.group.field,\n      value: parentGroup.group.value\n    });\n    parentGroup = parentGroup.parentGroup;\n  }\n\n  return parentGroupKeys;\n};\n\nconst DEFAULT_KEY_GETTER = groupRowArgs => ({\n  field: groupRowArgs.group.field,\n  value: groupRowArgs.group.value,\n  parentGroupKeys: mapParentGroup(groupRowArgs.parentGroup)\n});\n/**\n * A directive which controls the expanded state of the group rows\n * ([see example]({% slug groups_expanded_state_grid %}#toc-built-in-directive)).\n */\n\n\nclass ExpandGroupDirective {\n  constructor(grid) {\n    this.grid = grid;\n    /**\n     * Fires when the expandedGroupKeys are changed.\n     */\n\n    this.expandedGroupKeysChange = new EventEmitter();\n    /**\n     * Specifies if the group items should be initially expanded.\n     * @default false\n     */\n\n    this.groupsInitiallyExpanded = false;\n    this.subscriptions = new Subscription();\n    this.grid.isGroupExpanded = this.isExpanded.bind(this);\n    this.subscriptions.add(merge(this.grid.groupExpand.pipe(map(e => Object.assign({\n      expand: true\n    }, e))), this.grid.groupCollapse.pipe(map(e => Object.assign({\n      expand: false\n    }, e)))).subscribe(this.toggleState.bind(this)));\n  }\n  /**\n   * Defines the item format that will be stored in the `expandedGroupKeys`\n   * ([see example]({% slug groups_expanded_state_grid %}#toc-custom-group-key-format)).\n   */\n\n\n  get expandGroupBy() {\n    return this._expandGroupBy;\n  }\n\n  set expandGroupBy(key) {\n    if (typeof key === 'function') {\n      this._expandGroupBy = key;\n    }\n  }\n  /**\n   * Defines the collection that will store the expanded group keys.\n   */\n\n\n  get expandedGroupKeys() {\n    return this._expandedGroupKeys;\n  }\n\n  set expandedGroupKeys(expandedGroups) {\n    this._expandedGroupKeys = (expandedGroups || []).slice();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  get keyGetter() {\n    return this.expandGroupBy || DEFAULT_KEY_GETTER;\n  }\n  /**\n   * @hidden\n   */\n\n\n  isExpanded(groupArgs) {\n    const itemIndex = this.getItemIndex(groupArgs);\n    return itemIndex > -1 ? !this.groupsInitiallyExpanded : this.groupsInitiallyExpanded;\n  }\n\n  getItemIndex(groupArgs) {\n    if (this.expandGroupBy) {\n      return this.expandedGroupKeys.indexOf(this.keyGetter(groupArgs));\n    }\n\n    return this.expandedGroupKeys.findIndex(item => {\n      let index = 0;\n      let parentGroup = groupArgs.parentGroup;\n\n      while (isPresent(parentGroup)) {\n        if (!isPresent(item.parentGroupKeys) || !isPresent(item.parentGroupKeys[index]) || parentGroup.group.value !== item.parentGroupKeys[index].value || parentGroup.group.field !== item.parentGroupKeys[index].field) {\n          return false;\n        }\n\n        parentGroup = parentGroup.parentGroup;\n        index++;\n      }\n\n      return item.value === groupArgs.group.value && item.field === groupArgs.group.field;\n    });\n  }\n\n  toggleState(groupArgs) {\n    const key = this.keyGetter(groupArgs);\n\n    if (Boolean(this.groupsInitiallyExpanded) !== groupArgs.expand) {\n      this.expandedGroupKeys.push(key);\n    } else {\n      const index = this.expandedGroupKeys.indexOf(key);\n      this.expandedGroupKeys.splice(index, 1);\n    }\n\n    this.expandedGroupKeysChange.emit(this.expandedGroupKeys.slice());\n  }\n\n}\n\nExpandGroupDirective.ɵfac = function ExpandGroupDirective_Factory(t) {\n  return new (t || ExpandGroupDirective)(i0.ɵɵdirectiveInject(GridComponent));\n};\n\nExpandGroupDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ExpandGroupDirective,\n  selectors: [[\"\", \"kendoGridExpandGroupBy\", \"\"]],\n  inputs: {\n    expandGroupBy: [\"kendoGridExpandGroupBy\", \"expandGroupBy\"],\n    expandedGroupKeys: \"expandedGroupKeys\",\n    groupsInitiallyExpanded: \"groupsInitiallyExpanded\"\n  },\n  outputs: {\n    expandedGroupKeysChange: \"expandedGroupKeysChange\"\n  },\n  exportAs: [\"kendoGridExpandGroupBy\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ExpandGroupDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridExpandGroupBy]',\n      exportAs: 'kendoGridExpandGroupBy'\n    }]\n  }], function () {\n    return [{\n      type: GridComponent\n    }];\n  }, {\n    expandedGroupKeysChange: [{\n      type: Output\n    }],\n    expandGroupBy: [{\n      type: Input,\n      args: ['kendoGridExpandGroupBy']\n    }],\n    expandedGroupKeys: [{\n      type: Input\n    }],\n    groupsInitiallyExpanded: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Custom component messages override default component messages\n * ([see example]({% slug globalization_grid %}#toc-localization)).\n */\n\n\nclass CustomMessagesComponent extends GridMessages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n  get override() {\n    return true;\n  }\n\n}\n\nCustomMessagesComponent.ɵfac = function CustomMessagesComponent_Factory(t) {\n  return new (t || CustomMessagesComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nCustomMessagesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CustomMessagesComponent,\n  selectors: [[\"kendo-grid-messages\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: GridMessages,\n    useExisting: forwardRef(() => CustomMessagesComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function CustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomMessagesComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: GridMessages,\n        useExisting: forwardRef(() => CustomMessagesComponent)\n      }],\n      selector: 'kendo-grid-messages',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})(); // eslint-disable no-access-missing-member\n\n\nconst stringOperators = localizeOperators({\n  \"filterContainsOperator\": \"contains\",\n  \"filterNotContainsOperator\": \"doesnotcontain\",\n  \"filterEqOperator\": \"eq\",\n  \"filterNotEqOperator\": \"neq\",\n  \"filterStartsWithOperator\": \"startswith\",\n  \"filterEndsWithOperator\": \"endswith\",\n  \"filterIsNullOperator\": \"isnull\",\n  \"filterIsNotNullOperator\": \"isnotnull\",\n  \"filterIsEmptyOperator\": \"isempty\",\n  \"filterIsNotEmptyOperator\": \"isnotempty\"\n});\n/**\n * @hidden\n */\n\nclass AutoCompleteFilterCellComponent extends BaseFilterCellComponent {\n  constructor(filterService, column, localization) {\n    super(filterService);\n    this.localization = localization;\n    this.showOperators = true;\n    this.defaultOperators = stringOperators(this.localization);\n    this.column = column;\n  }\n\n  set valueField(value) {\n    this._valueField = value;\n  }\n\n  get valueField() {\n    return this._valueField ? this._valueField : this.column.field;\n  }\n\n  get currentFilter() {\n    return this.filterByField(this.column.field);\n  }\n\n  get currentOperator() {\n    return this.currentFilter ? this.currentFilter.operator : \"contains\";\n  }\n\n}\n\nAutoCompleteFilterCellComponent.ɵfac = function AutoCompleteFilterCellComponent_Factory(t) {\n  return new (t || AutoCompleteFilterCellComponent)(i0.ɵɵdirectiveInject(FilterService), i0.ɵɵdirectiveInject(ColumnComponent), i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nAutoCompleteFilterCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AutoCompleteFilterCellComponent,\n  selectors: [[\"kendo-grid-autocomplete-filter-cell\"]],\n  inputs: {\n    showOperators: \"showOperators\",\n    column: \"column\",\n    filter: \"filter\",\n    data: \"data\",\n    valueField: \"valueField\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 7,\n  consts: [[3, \"column\", \"filter\", \"operators\", \"showOperators\"], [\"kendoFilterInput\", \"\", 3, \"data\", \"valueField\", \"value\"]],\n  template: function AutoCompleteFilterCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"kendo-grid-filter-wrapper-cell\", 0);\n      i0.ɵɵelement(1, \"kendo-autocomplete\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"showOperators\", ctx.showOperators);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"data\", ctx.data)(\"valueField\", ctx.valueField)(\"value\", ctx.currentFilter == null ? null : ctx.currentFilter.value);\n    }\n  },\n  directives: [FilterCellWrapperComponent, i1$4.AutoCompleteComponent, FilterInputDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoCompleteFilterCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-autocomplete-filter-cell',\n      template: `\n        <kendo-grid-filter-wrapper-cell\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [showOperators]=\"showOperators\">\n            <kendo-autocomplete\n                kendoFilterInput\n                [data]=\"data\"\n                [valueField]=\"valueField\"\n                [value]=\"currentFilter?.value\">\n            </kendo-autocomplete>\n        </kendo-grid-filter-wrapper-cell>\n    `\n    }]\n  }], function () {\n    return [{\n      type: FilterService\n    }, {\n      type: ColumnComponent\n    }, {\n      type: i1.LocalizationService\n    }];\n  }, {\n    showOperators: [{\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    valueField: [{\n      type: Input\n    }]\n  });\n})();\n\nconst exportedModules$5 = [ColumnComponent, ColumnGroupComponent, LogicalCellDirective, LogicalRowDirective, FocusableDirective, FooterTemplateDirective, ColGroupComponent, ResizableContainerDirective, TemplateContextDirective, FieldAccessorPipe, DetailTemplateDirective, SpanColumnComponent, TableDirective, LoadingComponent];\n/**\n * @hidden\n */\n\nclass SharedModule {\n  static exports() {\n    return [ColumnComponent, SpanColumnComponent, ColumnGroupComponent, FooterTemplateDirective, DetailTemplateDirective, FocusableDirective];\n  }\n\n}\n\nSharedModule.ɵfac = function SharedModule_Factory(t) {\n  return new (t || SharedModule)();\n};\n\nSharedModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SharedModule\n});\nSharedModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule], DraggableModule, EventsModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SharedModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [exportedModules$5],\n      exports: [exportedModules$5, DraggableModule, EventsModule],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * Represents the `Contains` (**Contains**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\n\n\nclass ContainsFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"contains\", localization);\n  }\n\n}\n\nContainsFilterOperatorComponent.ɵfac = function ContainsFilterOperatorComponent_Factory(t) {\n  return new (t || ContainsFilterOperatorComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nContainsFilterOperatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ContainsFilterOperatorComponent,\n  selectors: [[\"kendo-filter-contains-operator\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => ContainsFilterOperatorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function ContainsFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContainsFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(() => ContainsFilterOperatorComponent)\n      }],\n      selector: 'kendo-filter-contains-operator',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the `DoesNotContain` (**Does not contain**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\n\n\nclass DoesNotContainFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"doesnotcontain\", localization);\n  }\n\n}\n\nDoesNotContainFilterOperatorComponent.ɵfac = function DoesNotContainFilterOperatorComponent_Factory(t) {\n  return new (t || DoesNotContainFilterOperatorComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nDoesNotContainFilterOperatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DoesNotContainFilterOperatorComponent,\n  selectors: [[\"kendo-filter-not-contains-operator\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => DoesNotContainFilterOperatorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function DoesNotContainFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DoesNotContainFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(() => DoesNotContainFilterOperatorComponent)\n      }],\n      selector: 'kendo-filter-not-contains-operator',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the `EndsWith` (**Ends with**) string filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\n\n\nclass EndsWithFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"endswith\", localization);\n  }\n\n}\n\nEndsWithFilterOperatorComponent.ɵfac = function EndsWithFilterOperatorComponent_Factory(t) {\n  return new (t || EndsWithFilterOperatorComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nEndsWithFilterOperatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: EndsWithFilterOperatorComponent,\n  selectors: [[\"kendo-filter-endswith-operator\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => EndsWithFilterOperatorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function EndsWithFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EndsWithFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(() => EndsWithFilterOperatorComponent)\n      }],\n      selector: 'kendo-filter-endswith-operator',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the `Equal` (**Is equal to**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\n\n\nclass EqualFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"eq\", localization);\n  }\n\n}\n\nEqualFilterOperatorComponent.ɵfac = function EqualFilterOperatorComponent_Factory(t) {\n  return new (t || EqualFilterOperatorComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nEqualFilterOperatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: EqualFilterOperatorComponent,\n  selectors: [[\"kendo-filter-eq-operator\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => EqualFilterOperatorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function EqualFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EqualFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(() => EqualFilterOperatorComponent)\n      }],\n      selector: 'kendo-filter-eq-operator',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the `IsEmpty` (**Is empty**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\n\n\nclass IsEmptyFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"isempty\", localization);\n  }\n\n}\n\nIsEmptyFilterOperatorComponent.ɵfac = function IsEmptyFilterOperatorComponent_Factory(t) {\n  return new (t || IsEmptyFilterOperatorComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nIsEmptyFilterOperatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: IsEmptyFilterOperatorComponent,\n  selectors: [[\"kendo-filter-isempty-operator\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => IsEmptyFilterOperatorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function IsEmptyFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IsEmptyFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(() => IsEmptyFilterOperatorComponent)\n      }],\n      selector: 'kendo-filter-isempty-operator',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the `IsNotEmpty` (**Is not empty**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\n\n\nclass IsNotEmptyFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"isnotempty\", localization);\n  }\n\n}\n\nIsNotEmptyFilterOperatorComponent.ɵfac = function IsNotEmptyFilterOperatorComponent_Factory(t) {\n  return new (t || IsNotEmptyFilterOperatorComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nIsNotEmptyFilterOperatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: IsNotEmptyFilterOperatorComponent,\n  selectors: [[\"kendo-filter-isnotempty-operator\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => IsNotEmptyFilterOperatorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function IsNotEmptyFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IsNotEmptyFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(() => IsNotEmptyFilterOperatorComponent)\n      }],\n      selector: 'kendo-filter-isnotempty-operator',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the `IsNotNull` (**Is not null**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\n\n\nclass IsNotNullFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"isnotnull\", localization);\n  }\n\n}\n\nIsNotNullFilterOperatorComponent.ɵfac = function IsNotNullFilterOperatorComponent_Factory(t) {\n  return new (t || IsNotNullFilterOperatorComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nIsNotNullFilterOperatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: IsNotNullFilterOperatorComponent,\n  selectors: [[\"kendo-filter-isnotnull-operator\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => IsNotNullFilterOperatorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function IsNotNullFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IsNotNullFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(() => IsNotNullFilterOperatorComponent)\n      }],\n      selector: 'kendo-filter-isnotnull-operator',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the `IsNull` (**Is null**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\n\n\nclass IsNullFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"isnull\", localization);\n  }\n\n}\n\nIsNullFilterOperatorComponent.ɵfac = function IsNullFilterOperatorComponent_Factory(t) {\n  return new (t || IsNullFilterOperatorComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nIsNullFilterOperatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: IsNullFilterOperatorComponent,\n  selectors: [[\"kendo-filter-isnull-operator\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => IsNullFilterOperatorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function IsNullFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IsNullFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(() => IsNullFilterOperatorComponent)\n      }],\n      selector: 'kendo-filter-isnull-operator',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the `NotEqual` (**Is not equal to**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\n\n\nclass NotEqualFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"neq\", localization);\n  }\n\n}\n\nNotEqualFilterOperatorComponent.ɵfac = function NotEqualFilterOperatorComponent_Factory(t) {\n  return new (t || NotEqualFilterOperatorComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nNotEqualFilterOperatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NotEqualFilterOperatorComponent,\n  selectors: [[\"kendo-filter-neq-operator\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => NotEqualFilterOperatorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function NotEqualFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NotEqualFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(() => NotEqualFilterOperatorComponent)\n      }],\n      selector: 'kendo-filter-neq-operator',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the `StartsWith` (**Starts with**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\n\n\nclass StartsWithFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"startswith\", localization);\n  }\n\n}\n\nStartsWithFilterOperatorComponent.ɵfac = function StartsWithFilterOperatorComponent_Factory(t) {\n  return new (t || StartsWithFilterOperatorComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nStartsWithFilterOperatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StartsWithFilterOperatorComponent,\n  selectors: [[\"kendo-filter-startswith-operator\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => StartsWithFilterOperatorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function StartsWithFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StartsWithFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(() => StartsWithFilterOperatorComponent)\n      }],\n      selector: 'kendo-filter-startswith-operator',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/*\n * Represents the `Greater` (**Is greater than**) numeric filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\n\n\nclass GreaterFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"gt\", localization);\n  }\n\n}\n\nGreaterFilterOperatorComponent.ɵfac = function GreaterFilterOperatorComponent_Factory(t) {\n  return new (t || GreaterFilterOperatorComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nGreaterFilterOperatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GreaterFilterOperatorComponent,\n  selectors: [[\"kendo-filter-gt-operator\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => GreaterFilterOperatorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function GreaterFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GreaterFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(() => GreaterFilterOperatorComponent)\n      }],\n      selector: 'kendo-filter-gt-operator',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the `GreaterOrEqualTo` (**Is greater than or equal to**) numeric filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\n\n\nclass GreaterOrEqualToFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"gte\", localization);\n  }\n\n}\n\nGreaterOrEqualToFilterOperatorComponent.ɵfac = function GreaterOrEqualToFilterOperatorComponent_Factory(t) {\n  return new (t || GreaterOrEqualToFilterOperatorComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nGreaterOrEqualToFilterOperatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GreaterOrEqualToFilterOperatorComponent,\n  selectors: [[\"kendo-filter-gte-operator\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => GreaterOrEqualToFilterOperatorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function GreaterOrEqualToFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GreaterOrEqualToFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(() => GreaterOrEqualToFilterOperatorComponent)\n      }],\n      selector: 'kendo-filter-gte-operator',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/*\n * Represents the `Less` (**Is less than**) numeric filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\n\n\nclass LessFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"lt\", localization);\n  }\n\n}\n\nLessFilterOperatorComponent.ɵfac = function LessFilterOperatorComponent_Factory(t) {\n  return new (t || LessFilterOperatorComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nLessFilterOperatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LessFilterOperatorComponent,\n  selectors: [[\"kendo-filter-lt-operator\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => LessFilterOperatorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function LessFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LessFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(() => LessFilterOperatorComponent)\n      }],\n      selector: 'kendo-filter-lt-operator',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/*\n * Represents the `LessOrEqualTo` (**Is less than or equal to**) numeric filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\n\n\nclass LessOrEqualToFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"lte\", localization);\n  }\n\n}\n\nLessOrEqualToFilterOperatorComponent.ɵfac = function LessOrEqualToFilterOperatorComponent_Factory(t) {\n  return new (t || LessOrEqualToFilterOperatorComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nLessOrEqualToFilterOperatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LessOrEqualToFilterOperatorComponent,\n  selectors: [[\"kendo-filter-lte-operator\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => LessOrEqualToFilterOperatorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function LessOrEqualToFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LessOrEqualToFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(() => LessOrEqualToFilterOperatorComponent)\n      }],\n      selector: 'kendo-filter-lte-operator',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/*\n * Represents the `Greater` (**Is after**) date filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\n\n\nclass AfterFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"after\", localization);\n  }\n  /**\n   * @hidden\n   */\n\n\n  toJSON() {\n    return {\n      text: this.text,\n      value: \"gt\"\n    };\n  }\n\n}\n\nAfterFilterOperatorComponent.ɵfac = function AfterFilterOperatorComponent_Factory(t) {\n  return new (t || AfterFilterOperatorComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nAfterFilterOperatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AfterFilterOperatorComponent,\n  selectors: [[\"kendo-filter-after-operator\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => AfterFilterOperatorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function AfterFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AfterFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(() => AfterFilterOperatorComponent)\n      }],\n      selector: 'kendo-filter-after-operator',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/*\n * Represents the `GreaterOrEqualTo` (**Is after or equal to**) date filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\n\n\nclass AfterEqFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"after-eq\", localization);\n  }\n  /**\n   * @hidden\n   */\n\n\n  toJSON() {\n    return {\n      text: this.text,\n      value: \"gte\"\n    };\n  }\n\n}\n\nAfterEqFilterOperatorComponent.ɵfac = function AfterEqFilterOperatorComponent_Factory(t) {\n  return new (t || AfterEqFilterOperatorComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nAfterEqFilterOperatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AfterEqFilterOperatorComponent,\n  selectors: [[\"kendo-filter-after-eq-operator\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => AfterEqFilterOperatorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function AfterEqFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AfterEqFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(() => AfterEqFilterOperatorComponent)\n      }],\n      selector: 'kendo-filter-after-eq-operator',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/*\n * Represents the `LessOrEqualTo` (**Is before or equal to**) date filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\n\n\nclass BeforeEqFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"before-eq\", localization);\n  }\n  /**\n   * @hidden\n   */\n\n\n  toJSON() {\n    return {\n      text: this.text,\n      value: \"lte\"\n    };\n  }\n\n}\n\nBeforeEqFilterOperatorComponent.ɵfac = function BeforeEqFilterOperatorComponent_Factory(t) {\n  return new (t || BeforeEqFilterOperatorComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nBeforeEqFilterOperatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BeforeEqFilterOperatorComponent,\n  selectors: [[\"kendo-filter-before-eq-operator\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => BeforeEqFilterOperatorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function BeforeEqFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BeforeEqFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(() => BeforeEqFilterOperatorComponent)\n      }],\n      selector: 'kendo-filter-before-eq-operator',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n/*\n * Represents the `Less then` (**Is before**) date filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\n\n\nclass BeforeFilterOperatorComponent extends FilterOperatorBase {\n  constructor(localization) {\n    super(\"before\", localization);\n  }\n  /**\n   * @hidden\n   */\n\n\n  toJSON() {\n    return {\n      text: this.text,\n      value: \"lt\"\n    };\n  }\n\n}\n\nBeforeFilterOperatorComponent.ɵfac = function BeforeFilterOperatorComponent_Factory(t) {\n  return new (t || BeforeFilterOperatorComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nBeforeFilterOperatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BeforeFilterOperatorComponent,\n  selectors: [[\"kendo-filter-before-operator\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(() => BeforeFilterOperatorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function BeforeFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BeforeFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(() => BeforeFilterOperatorComponent)\n      }],\n      selector: 'kendo-filter-before-operator',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n\nconst FILTER_OPERATORS = [FilterCellOperatorsComponent, ContainsFilterOperatorComponent, DoesNotContainFilterOperatorComponent, EndsWithFilterOperatorComponent, EqualFilterOperatorComponent, IsEmptyFilterOperatorComponent, IsNotEmptyFilterOperatorComponent, IsNotNullFilterOperatorComponent, IsNullFilterOperatorComponent, NotEqualFilterOperatorComponent, StartsWithFilterOperatorComponent, GreaterFilterOperatorComponent, GreaterOrEqualToFilterOperatorComponent, LessFilterOperatorComponent, LessOrEqualToFilterOperatorComponent, AfterFilterOperatorComponent, AfterEqFilterOperatorComponent, BeforeEqFilterOperatorComponent, BeforeFilterOperatorComponent];\nconst importedModules$4 = [CommonModule, ReactiveFormsModule, FormsModule, DropDownListModule, AutoCompleteModule, InputsModule, DatePickerModule, PopupModule, SharedModule];\nconst COMPONENTS$1 = [FilterInputDirective];\n/**\n * @hidden\n */\n\nclass SharedFilterModule {\n  static exports() {\n    return [...FILTER_OPERATORS];\n  }\n\n}\n\nSharedFilterModule.ɵfac = function SharedFilterModule_Factory(t) {\n  return new (t || SharedFilterModule)();\n};\n\nSharedFilterModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SharedFilterModule\n});\nSharedFilterModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[...importedModules$4], CommonModule, ReactiveFormsModule, FormsModule, DropDownListModule, AutoCompleteModule, InputsModule, DatePickerModule, PopupModule, SharedModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SharedFilterModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [FILTER_OPERATORS, COMPONENTS$1],\n      exports: [FILTER_OPERATORS, importedModules$4, COMPONENTS$1],\n      imports: [...importedModules$4]\n    }]\n  }], null, null);\n})();\n\nconst INTERNAL_COMPONENTS$2 = [FilterRowComponent, FilterCellComponent, FilterCellTemplateDirective, StringFilterCellComponent, NumericFilterCellComponent, AutoCompleteFilterCellComponent, BooleanFilterCellComponent, FilterCellHostDirective, FilterCellWrapperComponent, DateFilterCellComponent];\nconst ENTRY_COMPONENTS$1 = [StringFilterCellComponent, NumericFilterCellComponent, BooleanFilterCellComponent, DateFilterCellComponent];\n/**\n * @hidden\n */\n\nclass RowFilterModule {\n  static exports() {\n    return [FilterRowComponent, FilterCellComponent, FilterCellTemplateDirective, FilterCellOperatorsComponent, StringFilterCellComponent, NumericFilterCellComponent, AutoCompleteFilterCellComponent, BooleanFilterCellComponent, DateFilterCellComponent, SharedFilterModule.exports()];\n  }\n\n}\n\nRowFilterModule.ɵfac = function RowFilterModule_Factory(t) {\n  return new (t || RowFilterModule)();\n};\n\nRowFilterModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: RowFilterModule\n});\nRowFilterModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[SharedFilterModule], SharedFilterModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RowFilterModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [INTERNAL_COMPONENTS$2],\n      entryComponents: ENTRY_COMPONENTS$1,\n      exports: [INTERNAL_COMPONENTS$2, SharedFilterModule],\n      imports: [SharedFilterModule]\n    }]\n  }], null, null);\n})();\n\nconst importedModules$3 = [CommonModule, InputsModule, LabelModule, DropDownsModule, ResizeSensorModule, SharedModule];\nconst INTERNAL_COMPONENTS$1 = [PagerComponent, PagerPrevButtonsComponent, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerInputComponent, PagerInfoComponent, PagerPageSizesComponent, PagerTemplateDirective, PagerDropDownListDirective, PagerInputDirective];\n/**\n * @hidden\n */\n\nclass PagerModule {\n  static exports() {\n    return [PagerComponent, PagerPrevButtonsComponent, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerInputComponent, PagerInfoComponent, PagerPageSizesComponent, PagerTemplateDirective, PagerDropDownListDirective, PagerInputDirective];\n  }\n\n}\n\nPagerModule.ɵfac = function PagerModule_Factory(t) {\n  return new (t || PagerModule)();\n};\n\nPagerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PagerModule\n});\nPagerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[...importedModules$3]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [INTERNAL_COMPONENTS$1],\n      exports: [INTERNAL_COMPONENTS$1],\n      imports: [...importedModules$3]\n    }]\n  }], null, null);\n})();\n\nconst exported$1 = [DraggableColumnDirective, DropTargetDirective];\n/**\n * @hidden\n */\n\nclass DragAndDropModule {}\n\nDragAndDropModule.ɵfac = function DragAndDropModule_Factory(t) {\n  return new (t || DragAndDropModule)();\n};\n\nDragAndDropModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: DragAndDropModule\n});\nDragAndDropModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragAndDropModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [exported$1],\n      exports: [exported$1]\n    }]\n  }], null, null);\n})();\n\nconst exportedModules$4 = [GroupHeaderTemplateDirective, GroupHeaderColumnTemplateDirective, GroupFooterTemplateDirective, GroupHeaderComponent, GroupPanelComponent, GroupIndicatorComponent];\n/**\n * @hidden\n */\n\nclass GroupModule {\n  static exports() {\n    return [GroupHeaderTemplateDirective, GroupHeaderColumnTemplateDirective, GroupFooterTemplateDirective];\n  }\n\n}\n\nGroupModule.ɵfac = function GroupModule_Factory(t) {\n  return new (t || GroupModule)();\n};\n\nGroupModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: GroupModule\n});\nGroupModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, SharedModule, DragAndDropModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GroupModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [exportedModules$4],\n      exports: [exportedModules$4],\n      imports: [CommonModule, SharedModule, DragAndDropModule]\n    }]\n  }], null, null);\n})();\n\nconst INTERNAL_COMPONENTS = [FilterMenuComponent, FilterMenuContainerComponent, FilterMenuInputWrapperComponent, StringFilterMenuInputComponent, StringFilterMenuComponent, FilterMenuTemplateDirective, NumericFilterMenuComponent, NumericFilterMenuInputComponent, DateFilterMenuInputComponent, DateFilterMenuComponent, FilterMenuHostDirective, BooleanFilterMenuComponent, FilterMenuDropDownListDirective, BooleanFilterRadioButtonDirective];\nconst ENTRY_COMPONENTS = [StringFilterMenuComponent, NumericFilterMenuComponent, DateFilterMenuComponent, BooleanFilterMenuComponent];\n/**\n * @hidden\n */\n\nclass FilterMenuModule {\n  static exports() {\n    return [StringFilterMenuComponent, FilterMenuTemplateDirective, NumericFilterMenuComponent, DateFilterMenuComponent, BooleanFilterMenuComponent, FilterMenuDropDownListDirective, BooleanFilterRadioButtonDirective, SharedFilterModule.exports()];\n  }\n\n}\n\nFilterMenuModule.ɵfac = function FilterMenuModule_Factory(t) {\n  return new (t || FilterMenuModule)();\n};\n\nFilterMenuModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FilterMenuModule\n});\nFilterMenuModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[SharedFilterModule], SharedFilterModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterMenuModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [INTERNAL_COMPONENTS],\n      entryComponents: ENTRY_COMPONENTS,\n      exports: [INTERNAL_COMPONENTS, SharedFilterModule],\n      imports: [SharedFilterModule]\n    }]\n  }], null, null);\n})();\n/**\n * Represents the component for selecting columns in the Grid. To enable the user to show or hide columns,\n * add the component inside a [ToolbarTemplate]({% slug api_grid_toolbartemplatedirective %}) directive.\n *\n * @example\n * ```ts-preview\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\">\n *          <ng-template kendoGridToolbarTemplate>\n *             <kendo-grid-column-chooser></kendo-grid-column-chooser>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [hidden]=\"true\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n * ```\n */\n\n\nclass ColumnChooserComponent {\n  constructor(localization, columnInfoService, popupService, ngZone, renderer, changeDetector) {\n    this.localization = localization;\n    this.columnInfoService = columnInfoService;\n    this.popupService = popupService;\n    this.ngZone = ngZone;\n    this.renderer = renderer;\n    this.changeDetector = changeDetector;\n    /**\n     * Specifies if the changes in the visibility of the column will be immediately applied.\n     */\n\n    this.autoSync = false;\n    /**\n     * Specifies if all columns can be hidden.\n     */\n\n    this.allowHideAll = true;\n  }\n\n  get columns() {\n    return this.columnInfoService.leafNamedColumns;\n  }\n\n  ngOnDestroy() {\n    this.close();\n  }\n  /**\n   * @hidden\n   */\n\n\n  toggle(anchor, template) {\n    if (!this.popupRef) {\n      const direction = this.localization.rtl ? 'right' : 'left';\n      this.popupRef = this.popupService.open({\n        anchor: anchor,\n        content: template,\n        positionMode: 'absolute',\n        anchorAlign: {\n          vertical: 'bottom',\n          horizontal: direction\n        },\n        popupAlign: {\n          vertical: 'top',\n          horizontal: direction\n        }\n      });\n      this.renderer.setAttribute(this.popupRef.popupElement, 'dir', this.localization.rtl ? 'rtl' : 'ltr');\n      this.ngZone.runOutsideAngular(() => this.closeClick = this.renderer.listen(\"document\", \"click\", ({\n        target\n      }) => {\n        if (!closest(target, node => node === this.popupRef.popupElement || node === anchor)) {\n          this.close();\n        }\n      }));\n    } else {\n      this.close();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  onApply(changed) {\n    this.close();\n\n    if (changed.length) {\n      this.changeDetector.markForCheck();\n      this.columnInfoService.changeVisibility(changed);\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  onChange(changed) {\n    this.changeDetector.markForCheck();\n    this.columnInfoService.changeVisibility(changed);\n  }\n\n  close() {\n    if (this.popupRef) {\n      this.popupRef.close();\n      this.popupRef = null;\n    }\n\n    this.detachClose();\n  }\n\n  detachClose() {\n    if (this.closeClick) {\n      this.closeClick();\n      this.closeClick = null;\n    }\n  }\n\n}\n\nColumnChooserComponent.ɵfac = function ColumnChooserComponent_Factory(t) {\n  return new (t || ColumnChooserComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(ColumnInfoService), i0.ɵɵdirectiveInject(i1$2.PopupService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nColumnChooserComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnChooserComponent,\n  selectors: [[\"kendo-grid-column-chooser\"]],\n  inputs: {\n    autoSync: \"autoSync\",\n    allowHideAll: \"allowHideAll\"\n  },\n  decls: 5,\n  vars: 1,\n  consts: [[\"type\", \"button\", 1, \"k-button\", \"k-button-flat-base\", \"k-button-flat\", \"k-icon-button\", \"k-button-md\", \"k-rounded-md\", \"k-button-rectangle\", \"k-icon-button\", 3, \"click\"], [\"anchor\", \"\"], [1, \"k-button-icon\", \"k-icon\", \"k-i-columns\"], [\"template\", \"\"], [1, \"k-column-chooser-title\"], [3, \"columns\", \"applyText\", \"resetText\", \"autoSync\", \"allowHideAll\", \"apply\", \"columnChange\"]],\n  template: function ColumnChooserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r6 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"button\", 0, 1);\n      i0.ɵɵlistener(\"click\", function ColumnChooserComponent_Template_button_click_0_listener() {\n        i0.ɵɵrestoreView(_r6);\n\n        const _r0 = i0.ɵɵreference(1);\n\n        const _r1 = i0.ɵɵreference(4);\n\n        return ctx.toggle(_r0, _r1);\n      });\n      i0.ɵɵelement(2, \"span\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, ColumnChooserComponent_ng_template_3_Template, 3, 6, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"title\", ctx.localization.get(\"columns\"));\n    }\n  },\n  directives: [ColumnListComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnChooserComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-column-chooser',\n      template: `\n        <button #anchor\n            type=\"button\"\n            (click)=\"toggle(anchor, template)\"\n            class=\"k-button k-button-flat-base k-button-flat k-icon-button k-button-md k-rounded-md k-button-rectangle k-icon-button\"\n            [attr.title]=\"localization.get('columns')\">\n            <span class=\"k-button-icon k-icon k-i-columns\"></span>\n        </button>\n        <ng-template #template>\n            <span class='k-column-chooser-title'>{{ localization.get('columns') }}</span>\n            <kendo-grid-columnlist\n                [columns]=\"columns\"\n                [applyText]=\"localization.get('columnsApply')\"\n                [resetText]=\"localization.get('columnsReset')\"\n                [autoSync]=\"autoSync\"\n                [allowHideAll]=\"allowHideAll\"\n                (apply)=\"onApply($event)\"\n                (columnChange)=\"onChange($event)\">\n            </kendo-grid-columnlist>\n        </ng-template>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: ColumnInfoService\n    }, {\n      type: i1$2.PopupService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    autoSync: [{\n      type: Input\n    }],\n    allowHideAll: [{\n      type: Input\n    }]\n  });\n})();\n\nconst COMPONENTS = [ColumnListComponent, ColumnChooserComponent, ColumnMenuChooserComponent, ColumnMenuFilterComponent, ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, ColumnMenuSortComponent, ColumnMenuComponent, ColumnMenuLockComponent, ColumnMenuTemplateDirective, ColumnMenuContainerComponent, ColumnMenuItemDirective, ColumnMenuStickComponent, ColumnMenuPositionComponent, ColumnMenuAutoSizeColumnComponent, ColumnMenuAutoSizeAllColumnsComponent];\n/**\n * @hidden\n */\n\nclass ColumnMenuModule {\n  static exports() {\n    return [ColumnChooserComponent, ColumnMenuFilterComponent, ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, ColumnMenuSortComponent, ColumnMenuLockComponent, ColumnMenuStickComponent, ColumnMenuPositionComponent, ColumnMenuChooserComponent, ColumnMenuTemplateDirective, ColumnMenuContainerComponent, ColumnMenuItemDirective, ColumnMenuComponent, ColumnMenuAutoSizeColumnComponent, ColumnMenuAutoSizeAllColumnsComponent];\n  }\n\n}\n\nColumnMenuModule.ɵfac = function ColumnMenuModule_Factory(t) {\n  return new (t || ColumnMenuModule)();\n};\n\nColumnMenuModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ColumnMenuModule\n});\nColumnMenuModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FilterMenuModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnMenuModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [COMPONENTS],\n      imports: [CommonModule, FilterMenuModule],\n      exports: [COMPONENTS]\n    }]\n  }], null, null);\n})();\n\nconst exportedModules$3 = [HeaderComponent, HeaderTemplateDirective, ColumnHandleDirective, SelectAllCheckboxDirective];\nconst importedModules$2 = [CommonModule, GroupModule, RowFilterModule, FilterMenuModule, SharedModule, DragAndDropModule, ColumnMenuModule];\n/**\n * @hidden\n */\n\nclass HeaderModule {\n  static exports() {\n    return [HeaderTemplateDirective, SelectAllCheckboxDirective];\n  }\n\n}\n\nHeaderModule.ɵfac = function HeaderModule_Factory(t) {\n  return new (t || HeaderModule)();\n};\n\nHeaderModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: HeaderModule\n});\nHeaderModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[...importedModules$2]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeaderModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [exportedModules$3],\n      exports: [exportedModules$3],\n      imports: [...importedModules$2]\n    }]\n  }], null, null);\n})();\n/**\n * Represents the checkbox for selecting columns in the Grid. If the column is\n * defined as empty, it renders a default checkbox for row selection.\n * You can also define the content of the column inside an `<ng-template>` tag.\n * The input requires you to include the `SelectionCheckbox` option.\n *\n * The template context is set to the current data item and the following additional fields are passed:\n * - `columnIndex`&mdash;The current column index.\n * - `rowIndex`&mdash;The current data row index. If inside a new item row, it will be `-1`.\n * - `dataItem`&mdash;The current data item.\n * - `column`&mdash;The current column instance.\n * - `isNew`&mdash;The state of the current item.\n *\n * For more examples, refer to:\n * - [Selecting or deselecting all items on a page]({% slug selection_grid %}#toc-select-all-feature)\n * - [Persisting the selection]({% slug selection_grid %}#toc-in-combination-with-the-select-all-feature)\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\" [selectable]=\"{enabled: true, checkboxOnly: true}\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" [width]=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *          <kendo-grid-checkbox-column title=\"Default checkbox\">\n *          </kendo-grid-checkbox-column>\n *          <kendo-grid-checkbox-column title=\"Custom checkbox\">\n *            <ng-template kendoGridCellTemplate let-idx=\"rowIndex\">\n *              Select row <input [kendoGridSelectionCheckbox]=\"idx\" />\n *            </ng-template>\n *          </kendo-grid-checkbox-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\n\n\nclass CheckboxColumnComponent extends ColumnBase {\n  constructor(parent, idService) {\n    super(parent, idService);\n    this.parent = parent;\n    /*\n     * @hidden\n     */\n\n    this.isCheckboxColumn = true;\n  }\n\n  get templateRef() {\n    return this.template ? this.template.templateRef : undefined;\n  }\n\n}\n\nCheckboxColumnComponent.ɵfac = function CheckboxColumnComponent_Factory(t) {\n  return new (t || CheckboxColumnComponent)(i0.ɵɵdirectiveInject(ColumnBase, 13), i0.ɵɵdirectiveInject(IdService, 8));\n};\n\nCheckboxColumnComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CheckboxColumnComponent,\n  selectors: [[\"kendo-grid-checkbox-column\"]],\n  contentQueries: function CheckboxColumnComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, CellTemplateDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    }\n  },\n  inputs: {\n    showSelectAll: \"showSelectAll\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ColumnBase,\n    useExisting: forwardRef(() => CheckboxColumnComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function CheckboxColumnComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxColumnComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: ColumnBase,\n        useExisting: forwardRef(() => CheckboxColumnComponent)\n      }],\n      selector: 'kendo-grid-checkbox-column',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: ColumnBase,\n      decorators: [{\n        type: SkipSelf\n      }, {\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: IdService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    showSelectAll: [{\n      type: Input\n    }],\n    template: [{\n      type: ContentChild,\n      args: [CellTemplateDirective, {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * Represents the `edit` command of the Grid. You can apply this directive to any `button`\n * element inside a [CommandColumnComponent]({% slug api_grid_commandcolumncomponent %}).\n * When an associated button with the directive is clicked, the\n * [edit]({% slug api_grid_gridcomponent %}#toc-edit) event\n * is triggered ([see example]({% slug basics_editing_grid %})).\n *\n * > When the row is in the edit mode, the button with `kendoGridEditCommand` is automatically hidden.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate>\n *       <button kendoGridEditCommand class=\"k-primary\">Edit</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n *\n */\n\n\nclass EditCommandDirective extends Button {\n  constructor(editService, cellContext, element, renderer, localization, ngZone) {\n    super(element, renderer, null, localization, ngZone);\n    this.editService = editService;\n    this.cellContext = cellContext;\n    /**\n     * @hidden\n     */\n\n    this.commandClass = true;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get visible() {\n    return this.isEdited ? 'none' : '';\n  }\n  /**\n   * @hidden\n   */\n\n\n  onClick(e) {\n    e.preventDefault();\n    this.editService.beginEdit(this.rowIndex);\n  }\n\n  ngDoCheck() {\n    if (this.cellContext) {\n      this.rowIndex = this.cellContext.rowIndex;\n      this.isEdited = this.editService.isEdited(this.rowIndex);\n    }\n  }\n\n}\n\nEditCommandDirective.ɵfac = function EditCommandDirective_Factory(t) {\n  return new (t || EditCommandDirective)(i0.ɵɵdirectiveInject(EditService), i0.ɵɵdirectiveInject(CELL_CONTEXT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nEditCommandDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: EditCommandDirective,\n  selectors: [[\"\", \"kendoGridEditCommand\", \"\"]],\n  hostVars: 4,\n  hostBindings: function EditCommandDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function EditCommandDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"display\", ctx.visible);\n      i0.ɵɵclassProp(\"k-grid-edit-command\", ctx.commandClass);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditCommandDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridEditCommand]'\n    }]\n  }], function () {\n    return [{\n      type: EditService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CELL_CONTEXT]\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    visible: [{\n      type: HostBinding,\n      args: ['style.display']\n    }],\n    commandClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-edit-command']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n/**\n * Represents the `cancel` command of the Grid. You can apply this directive to any `button`\n * element inside a [CommandColumnComponent]({% slug api_grid_commandcolumncomponent %}).\n * When an associated button with the directive is clicked, the\n * [cancel]({% slug api_grid_gridcomponent %}#toc-cancel) event\n * is triggered ([see example]({% slug basics_editing_grid %})).\n *\n * > When the row is not in the edit mode, the button with the `kendoGridCancelCommand` is automatically hidden.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate>\n *       <button kendoGridCancelCommand>Cancel changes</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n *\n * You can control the content of the button based on the state of the row.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate let-isNew=\"isNew\">\n *       <button kendoGridCancelCommand>{{isNew ? 'Discard' : 'Cancel changes'}}</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n */\n\n\nclass CancelCommandDirective extends Button {\n  constructor(editService, cellContext, element, renderer, localization, ngZone) {\n    super(element, renderer, null, localization, ngZone);\n    this.editService = editService;\n    this.cellContext = cellContext;\n    /**\n     * @hidden\n     */\n\n    this.commandClass = true;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get visible() {\n    return !this.isEdited ? 'none' : '';\n  }\n  /**\n   * @hidden\n   */\n\n\n  onClick(e) {\n    e.preventDefault();\n\n    if (this.isEdited) {\n      this.editService.endEdit(this.rowIndex);\n    }\n  }\n\n  ngDoCheck() {\n    if (this.cellContext) {\n      this.rowIndex = this.cellContext.rowIndex;\n      this.isEdited = this.editService.isEdited(this.rowIndex);\n    }\n  }\n\n}\n\nCancelCommandDirective.ɵfac = function CancelCommandDirective_Factory(t) {\n  return new (t || CancelCommandDirective)(i0.ɵɵdirectiveInject(EditService), i0.ɵɵdirectiveInject(CELL_CONTEXT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nCancelCommandDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CancelCommandDirective,\n  selectors: [[\"\", \"kendoGridCancelCommand\", \"\"]],\n  hostVars: 4,\n  hostBindings: function CancelCommandDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function CancelCommandDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"display\", ctx.visible);\n      i0.ɵɵclassProp(\"k-grid-cancel-command\", ctx.commandClass);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CancelCommandDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridCancelCommand]'\n    }]\n  }], function () {\n    return [{\n      type: EditService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CELL_CONTEXT]\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    visible: [{\n      type: HostBinding,\n      args: ['style.display']\n    }],\n    commandClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-cancel-command']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n/**\n * Represents the `save` command of the Grid. You can apply this directive to any `button`\n * element inside a [CommandColumnComponent]({% slug api_grid_commandcolumncomponent %}).\n * When an associated button with the directive is clicked, the\n * [save]({% slug api_grid_gridcomponent %}#toc-save) event\n * is triggered ([see example]({% slug basics_editing_grid %})).\n *\n * > When the row is not in the edit mode, the button with `kendoGridSaveCommand` is automatically hidden.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate>\n *       <button kendoGridSaveCommand>Save changes</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n *\n * You can control the content of the button based on the state of the row.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate let-isNew=\"isNew\">\n *       <button kendoGridSaveCommand>{{isNew ? 'Add' : 'Update'}}</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n */\n\n\nclass SaveCommandDirective extends Button {\n  constructor(editService, cellContext, element, renderer, localization, ngZone) {\n    super(element, renderer, null, localization, ngZone);\n    this.editService = editService;\n    this.cellContext = cellContext;\n    /**\n     * @hidden\n     */\n\n    this.commandClass = true;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get visible() {\n    return !this.isEdited ? 'none' : '';\n  }\n  /**\n   * @hidden\n   */\n\n\n  onClick(e) {\n    e.preventDefault();\n\n    if (this.isEdited) {\n      this.editService.save(this.rowIndex);\n    }\n  }\n\n  ngDoCheck() {\n    if (this.cellContext) {\n      this.rowIndex = this.cellContext.rowIndex;\n      this.isEdited = this.editService.isEdited(this.rowIndex);\n    }\n  }\n\n}\n\nSaveCommandDirective.ɵfac = function SaveCommandDirective_Factory(t) {\n  return new (t || SaveCommandDirective)(i0.ɵɵdirectiveInject(EditService), i0.ɵɵdirectiveInject(CELL_CONTEXT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nSaveCommandDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: SaveCommandDirective,\n  selectors: [[\"\", \"kendoGridSaveCommand\", \"\"]],\n  hostVars: 4,\n  hostBindings: function SaveCommandDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function SaveCommandDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"display\", ctx.visible);\n      i0.ɵɵclassProp(\"k-grid-save-command\", ctx.commandClass);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SaveCommandDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridSaveCommand]'\n    }]\n  }], function () {\n    return [{\n      type: EditService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CELL_CONTEXT]\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    visible: [{\n      type: HostBinding,\n      args: ['style.display']\n    }],\n    commandClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-save-command']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n/**\n * Represents the `remove` command of the Grid. You can apply this directive to any `button` element\n * inside a [CommandColumnComponent]({% slug api_grid_commandcolumncomponent %}).\n * When an associated button with the directive is clicked, the\n * [remove event]({% slug api_grid_gridcomponent %}#toc-remove)\n * is triggered ([see example]({% slug inline_editing_grid %}#toc-using-reactive-forms))).\n *\n * > When the row is in the edit mode, the button with the `kendoGridRemoveCommand` is automatically hidden.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate>\n *       <button kendoGridRemoveCommand>Remove row</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n */\n\n\nclass RemoveCommandDirective extends Button {\n  constructor(editService, cellContext, element, renderer, localization, ngZone) {\n    super(element, renderer, null, localization, ngZone);\n    this.editService = editService;\n    this.cellContext = cellContext;\n    /**\n     * @hidden\n     */\n\n    this.commandClass = true;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get visible() {\n    return this.isEdited ? 'none' : '';\n  }\n  /**\n   * @hidden\n   */\n\n\n  onClick(e) {\n    e.preventDefault();\n    this.editService.remove(this.rowIndex);\n  }\n\n  ngDoCheck() {\n    if (this.cellContext) {\n      this.rowIndex = this.cellContext.rowIndex;\n      this.isEdited = this.editService.isEdited(this.rowIndex);\n    }\n  }\n\n}\n\nRemoveCommandDirective.ɵfac = function RemoveCommandDirective_Factory(t) {\n  return new (t || RemoveCommandDirective)(i0.ɵɵdirectiveInject(EditService), i0.ɵɵdirectiveInject(CELL_CONTEXT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nRemoveCommandDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: RemoveCommandDirective,\n  selectors: [[\"\", \"kendoGridRemoveCommand\", \"\"]],\n  hostVars: 4,\n  hostBindings: function RemoveCommandDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function RemoveCommandDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"display\", ctx.visible);\n      i0.ɵɵclassProp(\"k-grid-remove-command\", ctx.commandClass);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RemoveCommandDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridRemoveCommand]'\n    }]\n  }], function () {\n    return [{\n      type: EditService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CELL_CONTEXT]\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    visible: [{\n      type: HostBinding,\n      args: ['style.display']\n    }],\n    commandClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-remove-command']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n/**\n * Represents the command for adding a new item to the Grid. You can apply this directive to any\n * `button` element inside a [ToolbarTemplate]({% slug api_grid_commandcolumncomponent %}).\n * When an associated button with the directive is clicked, the\n * [add]({% slug api_grid_gridcomponent %}#toc-add) event is triggered\n * ([see example]({% slug basics_editing_grid %})).\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *    <ng-template kendoGridToolbarTemplate>\n *       <button kendoGridAddCommand>Add new</button>\n *    </ng-template>\n * </kendo-grid>\n * ```\n */\n\n\nclass AddCommandDirective extends Button {\n  constructor(editService, element, renderer, localization, ngZone) {\n    super(element, renderer, null, localization, ngZone);\n    this.editService = editService;\n  }\n  /**\n   * @hidden\n   */\n\n\n  onClick(e) {\n    e.preventDefault();\n    this.editService.beginAdd();\n  }\n  /**\n   * @hidden\n   */\n\n\n  get commandClass() {\n    return true;\n  }\n\n}\n\nAddCommandDirective.ɵfac = function AddCommandDirective_Factory(t) {\n  return new (t || AddCommandDirective)(i0.ɵɵdirectiveInject(EditService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nAddCommandDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: AddCommandDirective,\n  selectors: [[\"\", \"kendoGridAddCommand\", \"\"]],\n  hostVars: 2,\n  hostBindings: function AddCommandDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function AddCommandDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-grid-add-command\", ctx.commandClass);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AddCommandDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridAddCommand]'\n    }]\n  }], function () {\n    return [{\n      type: EditService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    commandClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-add-command']\n    }]\n  });\n})();\n\nconst exported = [CommandColumnComponent, CheckboxColumnComponent, SelectionCheckboxDirective, CellTemplateDirective, EditTemplateDirective, TableBodyComponent, NoRecordsTemplateDirective, CellComponent, EditCommandDirective, CancelCommandDirective, SaveCommandDirective, RemoveCommandDirective, AddCommandDirective, CellLoadingTemplateDirective, LoadingTemplateDirective];\nconst importedModules$1 = [CommonModule, ReactiveFormsModule, FormsModule, SharedModule, GroupModule, NumericTextBoxModule, DatePickerModule, ResizeSensorModule];\n/**\n * @hidden\n */\n\nclass BodyModule {\n  static exports() {\n    return [CommandColumnComponent, CheckboxColumnComponent, SelectionCheckboxDirective, CellTemplateDirective, NoRecordsTemplateDirective, EditTemplateDirective, EditCommandDirective, CancelCommandDirective, SaveCommandDirective, RemoveCommandDirective, AddCommandDirective, CellLoadingTemplateDirective, LoadingTemplateDirective];\n  }\n\n}\n\nBodyModule.ɵfac = function BodyModule_Factory(t) {\n  return new (t || BodyModule)();\n};\n\nBodyModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BodyModule\n});\nBodyModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[...importedModules$1]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BodyModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [exported],\n      exports: [exported],\n      imports: [...importedModules$1]\n    }]\n  }], null, null);\n})();\n\nconst exportedModules$2 = [FooterComponent];\nconst importedModules = [CommonModule, SharedModule];\n/**\n * @hidden\n */\n\nclass FooterModule {\n  static exports() {\n    return [];\n  }\n\n}\n\nFooterModule.ɵfac = function FooterModule_Factory(t) {\n  return new (t || FooterModule)();\n};\n\nFooterModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FooterModule\n});\nFooterModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[...importedModules]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FooterModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [exportedModules$2],\n      exports: [exportedModules$2],\n      imports: [...importedModules]\n    }]\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nclass LocalEditService {\n  constructor(grid, localDataChangesService) {\n    this.grid = grid;\n    this.localDataChangesService = localDataChangesService;\n  }\n\n  create(item) {\n    if (this.hasLocalData && this.grid.skip) {\n      this.localDataChangesService.data.splice(this.grid.skip, 0, item);\n    } else {\n      this.data.unshift(item);\n    }\n\n    this.dataChanged();\n  }\n\n  update(_item) {} // eslint-disable-line no-empty\n\n\n  remove(item) {\n    const data = this.data;\n\n    for (let idx = 0; idx < data.length; idx++) {\n      if (item === data[idx]) {\n        data.splice(idx, 1);\n        this.dataChanged({\n          action: 'remove',\n          item: item\n        });\n        break;\n      }\n    }\n  }\n\n  assignValues(target, source) {\n    Object.assign(target, source);\n  }\n\n  dataChanged(args = {}) {\n    if (this.hasLocalData) {\n      this.localDataChangesService.changes.emit(args);\n    }\n  }\n\n  get hasLocalData() {\n    return Array.isArray(this.localDataChangesService.data);\n  }\n\n  get data() {\n    if (this.hasLocalData) {\n      return this.localDataChangesService.data;\n    }\n\n    const data = this.grid.data;\n\n    if (Array.isArray(data)) {\n      return data;\n    }\n\n    if (isDevMode()) {\n      throw new Error('The default edit service of the editing directives works only when binding to plain array.' + 'Please provide an editService.');\n    }\n\n    return [];\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass EditingDirectiveBase {\n  constructor(grid, localDataChangesService) {\n    this.grid = grid;\n    this.localDataChangesService = localDataChangesService;\n    this.defaultEditService = this.createDefaultService();\n  } // Consider adding support for the dependency injection of the service to allow for specifying a generic service without code.\n  // The Input should still be kept.\n\n  /**\n   * The edit service that will handle the operations.\n   */\n\n\n  set editService(value) {\n    this.userEditService = value;\n  }\n\n  get editService() {\n    return this.userEditService || this.defaultEditService;\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngOnInit() {\n    this.subscriptions = this.grid.add.subscribe(this.addHandler.bind(this));\n    this.subscriptions.add(this.grid.remove.subscribe(this.removeHandler.bind(this)));\n    this.subscriptions.add(this.grid.cancel.subscribe(this.cancelHandler.bind(this)));\n    this.subscriptions.add(this.grid.save.subscribe(this.saveHandler.bind(this)));\n    this.subscriptions.add(this.grid.dataStateChange.subscribe(this.onStateChange.bind(this)));\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  createDefaultService() {\n    return new LocalEditService(this.grid, this.localDataChangesService);\n  }\n\n  addHandler() {\n    this.grid.addRow(this.createModel({\n      isNew: true\n    }));\n  }\n\n  saveHandler(args) {\n    const item = this.saveModel(args);\n\n    if (item) {\n      if (args.isNew) {\n        this.editService.create(item);\n      } else {\n        this.editService.update(item);\n      }\n    }\n\n    this.grid.closeRow(args.rowIndex);\n  }\n\n  cancelHandler({\n    rowIndex\n  }) {\n    this.closeEditor(rowIndex);\n  }\n\n  removeHandler({\n    dataItem\n  }) {\n    const removeItem = shouldRemove => {\n      if (shouldRemove) {\n        this.editService.remove(dataItem);\n      }\n    };\n\n    if (this.removeConfirmation) {\n      const result = this.removeConfirmation(dataItem);\n\n      if (result instanceof Promise) {\n        result.then(removeItem);\n      } else if (result instanceof Observable) {\n        result.pipe(take(1)).subscribe(removeItem);\n      } else {\n        removeItem(result);\n      }\n    } else {\n      removeItem(true);\n    }\n  }\n\n  onStateChange() {\n    this.closeEditor();\n  }\n\n  closeEditor(rowIndex) {\n    this.grid.closeRow(rowIndex);\n  }\n\n}\n\nEditingDirectiveBase.ɵfac = function EditingDirectiveBase_Factory(t) {\n  return new (t || EditingDirectiveBase)(i0.ɵɵdirectiveInject(GridComponent), i0.ɵɵdirectiveInject(LocalDataChangesService));\n};\n\nEditingDirectiveBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: EditingDirectiveBase,\n  selectors: [[\"\", \"kendoGridEditingDirectiveBase\", \"\"]],\n  inputs: {\n    editService: \"editService\",\n    removeConfirmation: \"removeConfirmation\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditingDirectiveBase, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridEditingDirectiveBase]'\n    }]\n  }], function () {\n    return [{\n      type: GridComponent\n    }, {\n      type: LocalDataChangesService\n    }];\n  }, {\n    editService: [{\n      type: Input\n    }],\n    removeConfirmation: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass LocalRowEditService extends LocalEditService {\n  update(_item) {\n    this.dataChanged();\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass RowEditingDirectiveBase extends EditingDirectiveBase {\n  /**\n   * @hidden\n   */\n  ngOnInit() {\n    super.ngOnInit();\n    this.subscriptions.add(this.grid.edit.subscribe(this.editHandler.bind(this)));\n  }\n\n  createDefaultService() {\n    return new LocalRowEditService(this.grid, this.localDataChangesService);\n  }\n\n  addHandler() {\n    this.closeEditor();\n    super.addHandler();\n  }\n\n  editHandler(args) {\n    this.closeEditor();\n    this.rowIndex = args.rowIndex;\n    this.grid.editRow(args.rowIndex, this.createModel(args));\n  }\n\n  saveHandler(args) {\n    super.saveHandler(args);\n    this.clean();\n  }\n\n  closeEditor(rowIndex = this.rowIndex) {\n    super.closeEditor(rowIndex);\n    this.clean();\n  }\n\n  clean() {\n    delete this.rowIndex;\n  }\n\n}\n\nRowEditingDirectiveBase.ɵfac = /* @__PURE__ */function () {\n  let ɵRowEditingDirectiveBase_BaseFactory;\n  return function RowEditingDirectiveBase_Factory(t) {\n    return (ɵRowEditingDirectiveBase_BaseFactory || (ɵRowEditingDirectiveBase_BaseFactory = i0.ɵɵgetInheritedFactory(RowEditingDirectiveBase)))(t || RowEditingDirectiveBase);\n  };\n}();\n\nRowEditingDirectiveBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: RowEditingDirectiveBase,\n  selectors: [[\"\", \"kendoGridRowEditingDirectiveBase\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RowEditingDirectiveBase, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridRowEditingDirectiveBase]'\n    }]\n  }], null, null);\n})();\n/**\n * A directive which encapsulates the editing operations of the Grid when using\n * the Template-Driven Angular Forms ([see example]({% slug editing_directives_grid %}#toc-the-template-directive)).\n */\n\n\nclass TemplateEditingDirective extends RowEditingDirectiveBase {\n  constructor(grid, localDataChangesService) {\n    super(grid, localDataChangesService);\n    this.grid = grid;\n    this.localDataChangesService = localDataChangesService;\n  }\n\n  editHandler(args) {\n    super.editHandler(args);\n    this.dataItem = args.dataItem;\n    this.originalValues = {};\n    this.editService.assignValues(this.originalValues, this.dataItem);\n  }\n\n  closeEditor(rowIndex) {\n    if (this.dataItem) {\n      this.editService.assignValues(this.dataItem, this.originalValues);\n    }\n\n    super.closeEditor(rowIndex);\n  }\n\n  createModel(args) {\n    if (args.isNew) {\n      return this.createNewItem();\n    }\n  }\n\n  saveModel(args) {\n    return args.dataItem;\n  }\n\n  clean() {\n    super.clean();\n    delete this.dataItem;\n  }\n\n}\n\nTemplateEditingDirective.ɵfac = function TemplateEditingDirective_Factory(t) {\n  return new (t || TemplateEditingDirective)(i0.ɵɵdirectiveInject(GridComponent), i0.ɵɵdirectiveInject(LocalDataChangesService));\n};\n\nTemplateEditingDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TemplateEditingDirective,\n  selectors: [[\"\", \"kendoGridTemplateEditing\", \"\"]],\n  inputs: {\n    createNewItem: [\"kendoGridTemplateEditing\", \"createNewItem\"]\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplateEditingDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridTemplateEditing]'\n    }]\n  }], function () {\n    return [{\n      type: GridComponent\n    }, {\n      type: LocalDataChangesService\n    }];\n  }, {\n    createNewItem: [{\n      type: Input,\n      args: ['kendoGridTemplateEditing']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nconst markAllAsTouched = control => {\n  control.markAsTouched();\n\n  if (control.hasOwnProperty('controls')) {\n    let controls = control.controls;\n\n    for (let inner in controls) {\n      if (controls.hasOwnProperty(inner)) {\n        markAllAsTouched(controls[inner]);\n      }\n    }\n  }\n};\n/**\n * A directive which encapsulates the editing operations of the Grid when using the\n * Reactive Forms ([see example]({% slug editing_directives_grid %}#toc-the-reactive-directive)).\n */\n\n\nclass ReactiveEditingDirective extends RowEditingDirectiveBase {\n  constructor(grid, localDataChangesService) {\n    super(grid, localDataChangesService);\n    this.grid = grid;\n    this.localDataChangesService = localDataChangesService;\n  }\n\n  createModel(args) {\n    return this.createFormGroup(args);\n  }\n\n  saveModel({\n    dataItem,\n    formGroup,\n    isNew\n  }) {\n    if (!formGroup.dirty && !isNew) {\n      return;\n    }\n\n    if (formGroup.valid) {\n      this.editService.assignValues(dataItem, formGroup.value);\n      return dataItem;\n    }\n\n    markAllAsTouched(formGroup);\n  }\n\n}\n\nReactiveEditingDirective.ɵfac = function ReactiveEditingDirective_Factory(t) {\n  return new (t || ReactiveEditingDirective)(i0.ɵɵdirectiveInject(GridComponent), i0.ɵɵdirectiveInject(LocalDataChangesService));\n};\n\nReactiveEditingDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ReactiveEditingDirective,\n  selectors: [[\"\", \"kendoGridReactiveEditing\", \"\"]],\n  inputs: {\n    createFormGroup: [\"kendoGridReactiveEditing\", \"createFormGroup\"]\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReactiveEditingDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridReactiveEditing]'\n    }]\n  }], function () {\n    return [{\n      type: GridComponent\n    }, {\n      type: LocalDataChangesService\n    }];\n  }, {\n    createFormGroup: [{\n      type: Input,\n      args: ['kendoGridReactiveEditing']\n    }]\n  });\n})();\n/**\n * A directive which encapsulates the editing operations of the Grid when using the in-cell\n * editing with Reactive Forms ([see example]({% slug editing_directives_grid %}#toc-the-incell-directive)).\n */\n\n\nclass InCellEditingDirective extends EditingDirectiveBase {\n  constructor(grid, localDataChangesService, cdr) {\n    super(grid, localDataChangesService);\n    this.grid = grid;\n    this.localDataChangesService = localDataChangesService;\n    this.cdr = cdr;\n  } // Need mixin\n\n\n  createModel(args) {\n    return this.createFormGroup(args);\n  }\n\n  saveModel({\n    dataItem,\n    formGroup,\n    isNew\n  }) {\n    if (!formGroup.dirty && !isNew) {\n      return;\n    }\n\n    if (formGroup.valid) {\n      this.editService.assignValues(dataItem, formGroup.value);\n      return dataItem;\n    }\n\n    markAllAsTouched(formGroup);\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.subscriptions.add(this.grid.cellClick.subscribe(this.cellClickHandler.bind(this)));\n    this.subscriptions.add(this.grid.cellClose.subscribe(this.cellCloseHandler.bind(this)));\n  }\n\n  removeHandler(args) {\n    super.removeHandler(args);\n    this.grid.cancelCell();\n  }\n\n  cellClickHandler(args) {\n    if (!args.isEdited && args.type !== 'contextmenu') {\n      this.grid.editCell(args.rowIndex, args.columnIndex, this.createFormGroup(args));\n      this.cdr.markForCheck();\n    }\n  }\n\n  cellCloseHandler(args) {\n    const {\n      formGroup,\n      dataItem\n    } = args;\n\n    if (!formGroup.valid) {\n      args.preventDefault();\n    } else if (formGroup.dirty) {\n      if (args.originalEvent && args.originalEvent.keyCode === Keys.Escape) {\n        return;\n      }\n\n      this.editService.assignValues(dataItem, formGroup.value);\n      this.editService.update(dataItem);\n    }\n  }\n\n}\n\nInCellEditingDirective.ɵfac = function InCellEditingDirective_Factory(t) {\n  return new (t || InCellEditingDirective)(i0.ɵɵdirectiveInject(GridComponent), i0.ɵɵdirectiveInject(LocalDataChangesService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nInCellEditingDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: InCellEditingDirective,\n  selectors: [[\"\", \"kendoGridInCellEditing\", \"\"]],\n  inputs: {\n    createFormGroup: [\"kendoGridInCellEditing\", \"createFormGroup\"]\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InCellEditingDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridInCellEditing]'\n    }]\n  }], function () {\n    return [{\n      type: GridComponent\n    }, {\n      type: LocalDataChangesService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    createFormGroup: [{\n      type: Input,\n      args: ['kendoGridInCellEditing']\n    }]\n  });\n})();\n\nconst hasGroups = items => items && items.length && items[0].field && items[0].items;\n\nconst groupDescriptorsPresent = descriptors => isPresent(descriptors) && descriptors.length > 0;\n\nconst processGroups = (data, state) => process(data, state).data;\n\nconst removeParentDescriptors = (parents, owner) => g => g.field !== owner.field && !parents.some(y => y.field === g.field);\n\nconst findGroup = (groupIndex, groups) => {\n  const parents = [];\n  return {\n    group: groupIndex.split(\"_\").reduce((acc, x) => {\n      const idx = parseInt(x, 10);\n\n      if (acc.items) {\n        parents.push(acc);\n        return acc.items[idx];\n      }\n\n      return isArray(acc) ? acc[idx] : acc;\n    }, groups),\n    parents\n  };\n};\n\nconst findChildren = (data, parents) => {\n  const filters = parents.map(p => ({\n    field: p.field,\n    operator: \"eq\",\n    value: p.value\n  }));\n  return filterBy(data, {\n    filters: filters,\n    logic: \"and\"\n  });\n};\n/**\n * @hidden\n */\n\n\nconst count = (groups, includeFooters = false) => groups.reduce((acc, group) => {\n  if (!group.skipHeader) {\n    acc++;\n  }\n\n  if (group.items) {\n    const children = count(group.items, includeFooters);\n\n    if (includeFooters && children && !group.hideFooter) {\n      acc++;\n    }\n\n    acc += children;\n  }\n\n  return acc;\n}, 0);\n/**\n * @hidden\n */\n\n\nconst slice = (groups, skip, take, includeFooters = false) => {\n  if (!isPresent(take)) {\n    return groups;\n  }\n\n  const result = [];\n\n  for (let idx = 0, length = groups.length; idx < length; idx++) {\n    if (take <= 0) {\n      break;\n    }\n\n    const group = groups[idx];\n    const groupItems = group.items;\n    let itemCount = count(groupItems, includeFooters);\n\n    if (includeFooters && groupItems.length) {\n      itemCount++;\n    }\n\n    const skipHeader = skip > 0;\n\n    if (skip) {\n      skip--;\n\n      if (itemCount && skip >= itemCount) {\n        skip -= itemCount;\n        continue;\n      }\n    }\n\n    if (!skipHeader || itemCount) {\n      const items = [];\n      let hideFooter = true;\n\n      if (!skipHeader) {\n        take--;\n      }\n\n      if (take) {\n        if (hasGroups(groupItems)) {\n          const children = slice(groupItems, skip, take, includeFooters);\n          items.push(...children);\n          take -= count(children, includeFooters);\n        } else {\n          items.push(...groupItems.slice(skip, Math.min(skip + take, groupItems.length)));\n          take -= items.length;\n        }\n\n        if (take && includeFooters) {\n          hideFooter = false;\n          take--;\n        }\n\n        skip = 0;\n      }\n\n      result.push({\n        aggregates: group.aggregates,\n        field: group.field,\n        hideFooter,\n        items,\n        offset: idx,\n        skipHeader,\n        value: group.value\n      });\n    }\n  }\n\n  return result;\n};\n\nconst skippedHeaders = groupItem => {\n  let total = 0;\n\n  while (groupItem) {\n    if (groupItem.skipHeader) {\n      total++;\n    }\n\n    groupItem = groupItem.items && groupItem.items[0] || null;\n  }\n\n  return total;\n};\n/**\n * A directive which encapsulates the in-memory handling of grouping with virtual scrolling.\n */\n\n\nclass GroupBindingDirective extends DataBindingDirective {\n  constructor(grid, changeDetector, localDataChangesService) {\n    super(grid, changeDetector, localDataChangesService);\n  }\n  /**\n   * The array of data which will be used to populate the Grid.\n   */\n\n\n  set kendoGridGroupBinding(value) {\n    this.groups = null;\n    this.grid.resetGroupsState();\n    this.data = value;\n  }\n  /**\n   * @hidden\n   */\n\n\n  set data(value) {\n    this.originalData = value || [];\n    this.dataChanged = true;\n  }\n  /**\n   * Defines the descriptors by which the data will be sorted.\n   */\n\n\n  set sort(value) {\n    const clear = this.state.sort !== value;\n    this.grid.sort = this.state.sort = value;\n\n    if (clear) {\n      this.groups = null;\n      this.grid.resetGroupsState();\n    }\n  }\n  /**\n   * Defines the descriptor by which the data will be filtered.\n   */\n\n\n  set filter(value) {\n    const clear = diffFilters(this.state.filter, value);\n\n    if (clear) {\n      this.state.filter = value;\n      this.grid.filter = cloneFilters(value);\n      this.groups = null;\n      this.grid.resetGroupsState();\n    }\n  }\n  /**\n   * Defines the descriptors by which the data will be grouped.\n   */\n\n\n  set group(value) {\n    // don't clear if no groups are present in previous and current value\n    const groupsPresent = groupDescriptorsPresent(this.state.group) || groupDescriptorsPresent(value);\n    const clear = this.state.group !== value && groupsPresent;\n    this.grid.group = this.state.group = value;\n\n    if (clear) {\n      this.groups = null;\n      this.grid.resetGroupsState();\n      this.skip = 0;\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.grid.groupExpand.subscribe(this.groupExpand.bind(this));\n    this.grid.groupCollapse.subscribe(this.groupCollapse.bind(this));\n  }\n\n  ngAfterContentInit() {\n    if (isDevMode() && this.grid.isGroupExpanded) {\n      throw new Error('Using the `kendoGridGroupBinding` directive in combination with the `kendoGridExpandGroupBy` directive ' + 'or the `isGroupExpanded` callback is not supported. To use grouping with the `kendoGridGroupBinding` directive, ' + 'set the Grid `groupable` property to `true`.');\n    }\n  }\n\n  groupExpand({\n    groupIndex\n  }) {\n    this.grid.expandGroupChildren(groupIndex);\n    const {\n      group,\n      parents\n    } = findGroup(groupIndex, this.groups);\n\n    if (!group.items.length) {\n      const descriptors = this.state.group.filter(removeParentDescriptors(parents, group));\n      const children = findChildren(this.originalData, parents.concat(group));\n      group.items = processGroups(children, {\n        filter: this.state.filter,\n        group: descriptors,\n        sort: this.state.sort\n      });\n    }\n\n    this.grid.data = this.dataResult(this.state.skip, this.state.take);\n  }\n\n  groupCollapse({\n    groupIndex\n  }) {\n    const {\n      group\n    } = findGroup(groupIndex, this.groups);\n\n    if (group) {\n      group.items = [];\n    }\n\n    this.grid.data = this.dataResult(this.state.skip, this.state.take);\n  }\n\n  process(state) {\n    if (state.group && state.group.length) {\n      const groups = this.processGroups(state);\n      this.grid.skip -= skippedHeaders(groups.data[0]);\n      return groups;\n    } else {\n      this.groups = null;\n    }\n\n    return super.process(state);\n  }\n\n  processGroups(state) {\n    if (!this.groups || !this.groups.length) {\n      this.groups = processGroups(this.originalData, {\n        filter: state.filter,\n        group: state.group,\n        sort: state.sort\n      });\n    }\n\n    return this.dataResult(state.skip, state.take);\n  }\n\n  dataResult(skip, take) {\n    const includeFooters = this.grid.showGroupFooters;\n    return {\n      data: slice(this.groups, skip, take, includeFooters),\n      total: count(this.groups, includeFooters)\n    };\n  }\n\n  applyState({\n    skip,\n    take,\n    sort,\n    group,\n    filter\n  }) {\n    this.skip = skip;\n    this.state.take = take; // this.pageSize = take; // do need to update take as the process with slice correctly\n\n    this.sort = sort;\n    this.group = group;\n    this.filter = filter;\n  }\n\n}\n\nGroupBindingDirective.ɵfac = function GroupBindingDirective_Factory(t) {\n  return new (t || GroupBindingDirective)(i0.ɵɵdirectiveInject(GridComponent), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(LocalDataChangesService));\n};\n\nGroupBindingDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GroupBindingDirective,\n  selectors: [[\"\", \"kendoGridGroupBinding\", \"\"]],\n  inputs: {\n    kendoGridGroupBinding: \"kendoGridGroupBinding\",\n    sort: \"sort\",\n    filter: \"filter\",\n    group: \"group\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GroupBindingDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridGroupBinding]'\n    }]\n  }], function () {\n    return [{\n      type: GridComponent\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: LocalDataChangesService\n    }];\n  }, {\n    kendoGridGroupBinding: [{\n      type: Input,\n      args: [\"kendoGridGroupBinding\"]\n    }],\n    sort: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }]\n  });\n})();\n\nconst exportedModules$1 = [GridComponent, ToolbarTemplateDirective, ToolbarComponent, GridSpacerComponent, DataBindingDirective, SelectionDirective, CustomMessagesComponent, GroupBindingDirective, TemplateEditingDirective, ReactiveEditingDirective, InCellEditingDirective, ExpandDetailsDirective, ExpandGroupDirective, ...GroupModule.exports(), ...SharedModule.exports(), ...BodyModule.exports(), ...HeaderModule.exports(), ...FooterModule.exports(), ...PagerModule.exports(), ...RowFilterModule.exports(), ...FilterMenuModule.exports(), ...ColumnMenuModule.exports()];\nconst declarations$2 = [GridComponent, ListComponent, ToolbarComponent, LocalizedMessagesDirective, CustomMessagesComponent, DataBindingDirective, ToolbarTemplateDirective, SelectionDirective, TemplateEditingDirective, ReactiveEditingDirective, InCellEditingDirective, ExpandDetailsDirective, ExpandGroupDirective, GroupBindingDirective, GridMarqueeDirective, GridSpacerComponent];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Grid component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Grid module\n * import { GridModule } from '@progress/kendo-angular-grid';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, GridModule], // import Grid module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\nclass GridModule {}\n\nGridModule.ɵfac = function GridModule_Factory(t) {\n  return new (t || GridModule)();\n};\n\nGridModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: GridModule\n});\nGridModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, GroupModule, SharedModule, BodyModule, HeaderModule, FooterModule, PagerModule, RowFilterModule, FilterMenuModule, ResizeSensorModule, ColumnMenuModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [declarations$2],\n      exports: [exportedModules$1],\n      imports: [CommonModule, GroupModule, SharedModule, BodyModule, HeaderModule, FooterModule, PagerModule, RowFilterModule, FilterMenuModule, ResizeSensorModule, ColumnMenuModule]\n    }]\n  }], null, null);\n})();\n\nclass PDFMarginComponent extends PDFExportMarginComponent {}\n\nPDFMarginComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵPDFMarginComponent_BaseFactory;\n  return function PDFMarginComponent_Factory(t) {\n    return (ɵPDFMarginComponent_BaseFactory || (ɵPDFMarginComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PDFMarginComponent)))(t || PDFMarginComponent);\n  };\n}();\n\nPDFMarginComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PDFMarginComponent,\n  selectors: [[\"kendo-grid-pdf-margin\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function PDFMarginComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PDFMarginComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-pdf-margin',\n      template: ''\n    }]\n  }], null, null);\n})();\n/**\n * Represents the PDF page template of the Grid that helps to customize the PDF pages. To define a page template,\n * nest an `<ng-template>` tag with the `kendoGridPDFTemplate` directive inside `<kendo-grid-pdf>`.\n *\n * The template context provides the following fields:\n * - `pageNumber`&mdash;Defines PDF page number.\n * - `totalPages`&mdash;Defines the total number of PDF pages.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\">\n *             <ng-template kendoGridToolbarTemplate>\n *                 <button kendoGridPDFCommand icon=\"file-pdf\">Export to PDF</button>\n *             </ng-template>\n *             <kendo-grid-column field=\"ProductName\">\n *             </kendo-grid-column>\n *              <kendo-grid-column field=\"UnitPrice\">\n *             </kendo-grid-column>\n *             <kendo-grid-pdf fileName=\"Products.pdf\" paperSize=\"A4\" [margin]=\"{ top: '1cm', left: '1cm', right: '1cm', bottom: '1cm' }\">\n *                 <ng-template kendoGridPDFTemplate let-pageNum=\"pageNum\" let-totalPages=\"totalPages\">\n *                     <div style=\"position: absolute;top: 5px; left: 5px;\">\n *                         Page {{ pageNum }} of {{ totalPages }}\n *                     </div>\n *                 </ng-template>\n *             </kendo-grid-pdf>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000\n *       }\n *     ];\n * }\n *\n * ```\n */\n\n\nclass PDFTemplateDirective extends PDFExportTemplateDirective {\n  constructor(templateRef) {\n    super(templateRef);\n  }\n\n}\n\nPDFTemplateDirective.ɵfac = function PDFTemplateDirective_Factory(t) {\n  return new (t || PDFTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\n\nPDFTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: PDFTemplateDirective,\n  selectors: [[\"\", \"kendoGridPDFTemplate\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PDFTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridPDFTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nconst HEADER_CLASS = 'k-grid-header';\n/**\n * @hidden\n */\n\nconst FOOTER_CLASS = 'k-grid-footer';\nconst GRID_LIST = 'KENDO-GRID-LIST';\nconst TABLE = 'TABLE';\nconst matchesList = matchesNodeName(GRID_LIST);\nconst matchesTable = matchesNodeName(TABLE);\n\nconst suffix = locked => locked ? 'locked' : 'wrap';\n/**\n * @hidden\n */\n\n\nclass GridQuery {\n  constructor(element) {\n    this.element = element;\n    this.list = findElement(element, matchesList);\n  }\n\n  content(locked) {\n    return findElement(this.list, matchesClasses(`k-grid-content${locked ? '-locked' : ''}`));\n  }\n\n  header(locked) {\n    this.headerWrap = this.headerWrap || findElement(this.element, matchesClasses(HEADER_CLASS));\n    return findElement(this.headerWrap, matchesClasses(`${HEADER_CLASS}-${suffix(locked)}`));\n  }\n\n  footer(locked) {\n    this.footerWrap = this.footerWrap || findElement(this.element, matchesClasses(FOOTER_CLASS));\n    return findElement(this.footerWrap, matchesClasses(`${FOOTER_CLASS}-${suffix(locked)}`));\n  }\n\n  table() {\n    return findElement(this.element, matchesTable);\n  }\n\n}\n\nconst FIRST_CLASS = 'k-first';\nconst INPUTS = ['input', 'select', 'textarea', 'option'];\n/** @hidden */\n\nconst cloneNode = node => {\n  const clone = node.cloneNode(false);\n\n  if (node._kendoExportVisual) {\n    clone._kendoExportVisual = node._kendoExportVisual;\n  }\n\n  if (INPUTS.indexOf(String(node.nodeName).toLowerCase()) >= 0) {\n    clone.removeAttribute(\"id\");\n    clone.removeAttribute(\"name\");\n    clone.value = node.value;\n    clone.checked = node.checked;\n    clone.selected = node.selected;\n  }\n\n  let child = node.firstChild;\n\n  while (child) {\n    clone.appendChild(cloneNode(child));\n    child = child.nextSibling;\n  }\n\n  return clone;\n};\n\nconst appendNodes = (element, nodes) => {\n  const length = nodes.length;\n\n  for (let idx = 0; idx < length; idx++) {\n    element.appendChild(cloneNode(nodes[idx]));\n  }\n};\n\nconst wrapTable = table => {\n  const wrapper = document.createElement('div');\n  wrapper.className = 'k-grid';\n  wrapper.appendChild(table);\n  return wrapper;\n};\n\nconst createTableElement = sources => {\n  const sourceCount = sources.length;\n  const element = cloneNode(sources[0]);\n  const rowsCount = element.rows.length;\n\n  if (sourceCount > 1) {\n    for (let rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n      for (let sourceIdx = 1; sourceIdx < sourceCount; sourceIdx++) {\n        appendNodes(element.rows[rowIdx], sources[sourceIdx].rows[rowIdx].cells);\n      }\n    }\n  }\n\n  return element;\n};\n\nconst setFirstCellClass = (header, headers) => {\n  if (headers.length > 1 && header.rows.length > 1) {\n    for (let idx = 1; idx < header.rows.length; idx++) {\n      const firstCellIndex = headers[0].rows[idx].cells.length;\n      const cell = header.rows[idx].cells[firstCellIndex];\n\n      if (String(cell.className).indexOf(FIRST_CLASS) === -1) {\n        cell.className += ` ${FIRST_CLASS}`;\n      }\n    }\n  }\n};\n\nconst createTable = (colGroups, headers, bodies, footers) => {\n  const table = document.createElement('table');\n  const colGroup = colGroups[0].cloneNode(true);\n\n  for (let idx = 1; idx < colGroups.length; idx++) {\n    appendNodes(colGroup, colGroups[idx].querySelectorAll('col'));\n  }\n\n  const header = createTableElement(headers);\n  const body = createTableElement(bodies);\n  header.className = HEADER_CLASS;\n  setFirstCellClass(header, headers);\n  table.appendChild(colGroup);\n  table.appendChild(header);\n  table.appendChild(body);\n\n  if (footers.length) {\n    const footer = createTableElement(footers);\n    footer.className = FOOTER_CLASS;\n    table.appendChild(footer);\n  }\n\n  return wrapTable(table);\n};\n/**\n * @hidden\n */\n\n\nconst exportElement = wrapper => {\n  const query = new GridQuery(wrapper);\n  const content = query.content();\n  let result;\n\n  if (content) {\n    const colGroups = [content.querySelector('colgroup')];\n    const headers = [query.header().querySelector('thead')];\n    const bodies = [content.querySelector('tbody')];\n    const footer = query.footer();\n    const footers = [];\n\n    if (footer) {\n      footers.push(footer.querySelector('tfoot'));\n    }\n\n    const lockedContent = query.content(true);\n\n    if (lockedContent) {\n      colGroups.unshift(lockedContent.querySelector('colgroup'));\n      headers.unshift(query.header(true).querySelector('thead'));\n      bodies.unshift(lockedContent.querySelector('tbody'));\n\n      if (footer) {\n        footers.unshift(query.footer(true).querySelector('tfoot'));\n      }\n    }\n\n    result = createTable(colGroups, headers, bodies, footers);\n  } else {\n    result = wrapTable(query.table().cloneNode(true));\n  }\n\n  return result;\n};\n\nconst createElement = (tagName, className) => {\n  const element = document.createElement(tagName);\n\n  if (className) {\n    element.className = className;\n  }\n\n  return element;\n};\n\nconst createDiv = className => {\n  return createElement('div', className);\n};\n/**\n * Configures the settings for the export of Grid in PDF ([see example]({% slug pdfexport_grid %})).\n */\n\n\nclass PDFComponent extends PDFExportComponent {\n  constructor(pdfService, suspendService, ngZone, element) {\n    super(element);\n    this.pdfService = pdfService;\n    this.suspendService = suspendService;\n    this.ngZone = ngZone;\n    /**\n     * The delay in milliseconds before exporting the Grid content.\n     * Useful for scenarios which involve exporting complex components used in the Grid\n     * templates such as charts or data-bound components with asynchronous data retrieval ([see example]({% slug pdfexport_grid %}#toc-exporting-all-pages)).\n     *\n     * @default 0\n     */\n\n    this.delay = 0;\n    this.columns = new QueryList();\n    this.saveSubscription = pdfService.savePDF.subscribe(this.savePDF.bind(this));\n    this.drawSubscription = pdfService.drawPDF.subscribe(this.drawPDF.bind(this));\n    this.reset = this.reset.bind(this);\n    this.draw = this.draw.bind(this);\n  }\n\n  ngOnDestroy() {\n    this.saveSubscription.unsubscribe();\n    this.drawSubscription.unsubscribe();\n    this.reset();\n  }\n  /**\n   * @hidden\n   */\n\n\n  saveAs(_) {\n    throw new Error('Not supported. Use GridComponent.saveAsPDF');\n  }\n  /**\n   * @hidden\n   */\n\n\n  export() {\n    throw new Error('Not supported. Use GridComponent.drawPDF');\n  }\n\n  savePDF(component) {\n    this.createPDF(component, this.draw);\n  }\n\n  drawPDF({\n    component,\n    promise\n  }) {\n    this.createPDF(component, () => {\n      this.createExportGroup(promise);\n    });\n  }\n\n  createPDF(component, callback) {\n    const pageSize = component.pageSize;\n    const total = component.view.total;\n    const columns = this.columns.toArray();\n\n    if (columns.length) {\n      this.originalColumns = component.columns.toArray();\n    }\n\n    this.component = component;\n    this.suspendService.scroll = true;\n    this.pdfService.exporting = true;\n    this.initProgress();\n    this.renderAllPages = this.allPages && pageSize < total;\n\n    if (this.renderAllPages) {\n      this.skip = component.skip;\n      this.pageSize = pageSize;\n      this.changePage(0, total, callback, columns);\n    } else if (columns.length || component.virtualColumns) {\n      this.changeColumns(columns, callback);\n    } else {\n      callback();\n    }\n  }\n\n  initProgress() {\n    const wrapperElement = this.component.wrapper.nativeElement;\n    const progress = this.progress = createDiv('k-loading-pdf-mask');\n    const overlay = cloneNode(wrapperElement);\n    progress.appendChild(overlay);\n    progress.appendChild(createDiv('k-loading-color'));\n    progress.appendChild(createElement('span', 'k-i-loading k-icon'));\n    this.originalHeight = wrapperElement.style.height;\n    this.originalOverflow = wrapperElement.style.overflow;\n    wrapperElement.style.height = wrapperElement.offsetHeight + 'px';\n    wrapperElement.style.overflow = 'hidden';\n    wrapperElement.appendChild(progress);\n    this.applyScroll(overlay);\n  }\n\n  applyScroll(overlay) {\n    const query = new GridQuery(this.component.wrapper.nativeElement);\n    const content = query.content();\n\n    if (content) {\n      const overlayQuery = new GridQuery(overlay);\n      const overlayContent = overlayQuery.content();\n      overlayContent.scrollTop = content.scrollTop;\n      overlayContent.scrollLeft = content.scrollLeft;\n      overlayQuery.header().scrollLeft = query.header().scrollLeft;\n      const footer = query.footer();\n\n      if (footer) {\n        overlayQuery.footer().scrollLeft = footer.scrollLeft;\n      }\n\n      const lockedContent = query.content(true);\n\n      if (lockedContent) {\n        const overlayLockedContent = overlayQuery.content(true);\n        overlayLockedContent.scrollTop = lockedContent.scrollTop;\n        overlayLockedContent.scrollLeft = lockedContent.scrollLeft;\n      }\n    }\n  }\n\n  draw() {\n    this.createExportElement(element => {\n      this.save(element, this.fileName);\n    });\n  }\n\n  createExportGroup(promise) {\n    this.createExportElement(element => {\n      this.exportElement(element).then(group => promise.resolve(group));\n    });\n  }\n\n  createExportElement(callback) {\n    this.ngZone.runOutsideAngular(() => {\n      const container = this.container = createDiv('k-grid-pdf-export-element');\n      const element = exportElement(this.component.wrapper.nativeElement);\n      container.appendChild(element);\n      document.body.appendChild(container);\n      callback(element);\n    });\n  }\n\n  drawOptions() {\n    const options = super.drawOptions();\n    options._destructive = true;\n    return options;\n  }\n\n  cleanup() {\n    super.cleanup();\n    this.pdfService.exporting = false;\n\n    if (this.component) {\n      const originalColumns = this.originalColumns;\n      delete this.originalColumns;\n\n      if (this.renderAllPages) {\n        this.changePage(this.skip, this.pageSize, this.reset, originalColumns);\n      } else if (originalColumns || this.component.virtualColumns) {\n        this.changeColumns(originalColumns, this.reset);\n      } else {\n        this.reset();\n      }\n    } else {\n      this.reset();\n    }\n\n    this.removeContainer();\n  }\n\n  removeContainer() {\n    if (this.container) {\n      document.body.removeChild(this.container);\n      delete this.container;\n    }\n  }\n\n  changePage(skip, _take, callback, columns) {\n    this.ngZone.run(() => {\n      this.pdfService.dataChanged.pipe(take(1)).subscribe(() => {\n        if (columns && columns.length || this.component.virtualColumns) {\n          this.changeColumns(columns, callback);\n        } else {\n          this.onStable(callback);\n        }\n      });\n      this.component.notifyPageChange('pdf', {\n        skip: skip,\n        take: _take\n      });\n    });\n  }\n\n  changeColumns(columns, callback) {\n    this.ngZone.run(() => {\n      this.onStable(callback);\n\n      if (columns && columns.length) {\n        this.component.columns.reset(columns);\n      }\n    });\n  }\n\n  reset() {\n    this.suspendService.scroll = false;\n    this.renderAllPages = false;\n\n    if (!this.component) {\n      return;\n    }\n\n    const wrapperElement = this.component.wrapper.nativeElement;\n    wrapperElement.removeChild(this.progress);\n    wrapperElement.style.height = this.originalHeight;\n    wrapperElement.style.overflow = this.originalOverflow;\n    delete this.progress;\n    delete this.component;\n  }\n\n  onStable(callback) {\n    // not sure if it is an actual scenario. occurs in the tests.\n    // onStable is triggered in the same pass without the change detection.\n    // thus, the callback is called before the changes are applied without the timeout.\n    setTimeout(() => {\n      let onStable = this.ngZone.onStable.asObservable().pipe(take(1));\n\n      if (this.delay > 0) {\n        onStable = onStable.pipe(delay(this.delay));\n      }\n\n      onStable.subscribe(callback);\n    }, 0);\n  }\n\n}\n\nPDFComponent.ɵfac = function PDFComponent_Factory(t) {\n  return new (t || PDFComponent)(i0.ɵɵdirectiveInject(PDFService), i0.ɵɵdirectiveInject(SuspendService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nPDFComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PDFComponent,\n  selectors: [[\"kendo-grid-pdf\"]],\n  contentQueries: function PDFComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PDFMarginComponent, 5);\n      i0.ɵɵcontentQuery(dirIndex, PDFTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, ColumnBase, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.marginComponent = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.pageTemplateDirective = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.columns = _t);\n    }\n  },\n  inputs: {\n    allPages: \"allPages\",\n    delay: \"delay\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function PDFComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PDFComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-pdf',\n      template: ''\n    }]\n  }], function () {\n    return [{\n      type: PDFService\n    }, {\n      type: SuspendService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    allPages: [{\n      type: Input\n    }],\n    delay: [{\n      type: Input\n    }],\n    columns: [{\n      type: ContentChildren,\n      args: [ColumnBase]\n    }],\n    marginComponent: [{\n      type: ContentChild,\n      args: [PDFMarginComponent, {\n        static: false\n      }]\n    }],\n    pageTemplateDirective: [{\n      type: ContentChild,\n      args: [PDFTemplateDirective, {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * Represents the `export-to-PDF` command of the Grid.\n * You can apply this directive to any `button` element inside a\n * [ToolbarTemplate]({% slug api_grid_commandcolumncomponent %}).\n * When the user clicks a button that is associated with the directive, the\n * [pdfExport]({% slug api_grid_gridcomponent %}#toc-pdfexport) event\n * fires ([see example]({% slug pdfexport_grid %})).\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *      <ng-template kendoGridToolbarTemplate>\n *          <button kendoGridPDFCommand>Export to PDF</button>\n *      </ng-template>\n *      <kendo-grid-pdf fileName=\"Grid.pdf\">\n *      </kendo-grid-pdf>\n * </kendo-grid>\n * ```\n */\n\n\nclass PDFCommandDirective extends Button {\n  constructor(pdfService, element, renderer, localization, ngZone) {\n    super(element, renderer, null, localization, ngZone);\n    this.pdfService = pdfService;\n    this.ngZone = ngZone;\n  }\n  /**\n   * @hidden\n   */\n\n\n  onClick(e) {\n    e.preventDefault();\n    this.pdfService.exportClick.emit();\n  }\n  /**\n   * @hidden\n   */\n\n\n  get pdfClass() {\n    return true;\n  }\n\n}\n\nPDFCommandDirective.ɵfac = function PDFCommandDirective_Factory(t) {\n  return new (t || PDFCommandDirective)(i0.ɵɵdirectiveInject(PDFService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nPDFCommandDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: PDFCommandDirective,\n  selectors: [[\"\", \"kendoGridPDFCommand\", \"\"]],\n  hostVars: 2,\n  hostBindings: function PDFCommandDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function PDFCommandDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-grid-pdf\", ctx.pdfClass);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PDFCommandDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridPDFCommand]'\n    }]\n  }], function () {\n    return [{\n      type: PDFService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    pdfClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-pdf']\n    }]\n  });\n})();\n\nconst exportedModules = [PDFComponent, PDFMarginComponent, PDFCommandDirective, PDFTemplateDirective];\nconst declarations$1 = [PDFComponent, PDFMarginComponent, PDFCommandDirective, PDFTemplateDirective];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Grid PDF component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Grid and PDF modules\n * import { GridModule, PDFModule } from '@progress/kendo-angular-grid';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, GridModule, PDFModule], // import Grid and PDF modules\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\nclass PDFModule {}\n\nPDFModule.ɵfac = function PDFModule_Factory(t) {\n  return new (t || PDFModule)();\n};\n\nPDFModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PDFModule\n});\nPDFModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PDFModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [declarations$1],\n      exports: [exportedModules]\n    }]\n  }], null, null);\n})();\n/**\n * Arguments for the `excelExport` event.\n */\n\n\nclass ExcelExportEvent extends PreventableEvent {\n  constructor(workbook) {\n    super();\n    this.workbook = workbook;\n  }\n\n}\n\nconst fetchComponentData = component => {\n  return {\n    data: component.view.map(item => item),\n    group: component.group\n  };\n};\n\nconst toExcelColumn = column => {\n  return {\n    title: column.title,\n    field: column.field,\n    locked: Boolean(column.locked),\n    width: column.width,\n    level: column.level,\n    hidden: !column.isVisible,\n    groupHeaderTemplate: column.groupHeaderTemplate,\n    groupHeaderColumnTemplate: column.groupHeaderColumnTemplate,\n    groupFooterTemplate: column.groupFooterTemplate,\n    footerTemplate: column.footerTemplate\n  };\n};\n\nconst toExcelColumns = columns => {\n  const result = [];\n  sortColumns(columns).forEach(column => {\n    if (column.isSpanColumn) {\n      result.push(...toExcelColumns(column.childrenArray));\n    } else {\n      const excelColumn = toExcelColumn(column);\n\n      if (column.isColumnGroup) {\n        excelColumn.children = [excelColumn].concat(toExcelColumns(column.childrenArray));\n      }\n\n      result.push(excelColumn);\n    }\n  });\n  return result;\n};\n\nconst componentColumns = component => {\n  const columns = toExcelColumns(component.columns.toArray());\n  return orderBy(columns, [{\n    field: 'locked',\n    dir: 'desc'\n  }]);\n};\n/**\n * Configures the settings for the export of Grid in Excel ([see example]({% slug excelexport_grid %})).\n */\n\n\nclass ExcelComponent {\n  constructor(excelService, localization, zone) {\n    this.localization = localization;\n    this.zone = zone;\n    /**\n     * Specifies the file name of the exported Excel file.\n     * @default \"Export.xlsx\"\n     */\n\n    this.fileName = 'Export.xlsx';\n    /**\n     * @hidden\n     */\n\n    this.columns = new QueryList();\n    this.saveSubscription = excelService.saveToExcel.subscribe(this.save.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.saveSubscription.unsubscribe();\n\n    if (this.dataSubscription) {\n      this.dataSubscription.unsubscribe();\n    }\n  }\n\n  save(component) {\n    const data = (this.fetchData || fetchComponentData)(component);\n\n    const exportData = result => {\n      delete this.dataSubscription;\n      this.exportData(component, result);\n    };\n\n    if (data instanceof Promise) {\n      data.then(exportData);\n    } else if (data instanceof Observable) {\n      this.dataSubscription = data.pipe(take(1)).subscribe(exportData);\n    } else {\n      exportData(data);\n    }\n  }\n\n  exportData(component, result) {\n    const options = workbookOptions({\n      columns: this.columns.length ? this.columns : componentColumns(component),\n      data: result.data,\n      group: result.group,\n      filterable: this.filterable,\n      creator: this.creator,\n      date: this.date,\n      paddingCellOptions: this.paddingCellOptions,\n      headerPaddingCellOptions: this.headerPaddingCellOptions,\n      rtl: this.localization.rtl,\n      collapsible: this.collapsible\n    });\n    const args = new ExcelExportEvent(options);\n    component.excelExport.emit(args);\n\n    if (!args.isDefaultPrevented()) {\n      this.zone.runOutsideAngular(() => this.saveFile(options));\n    }\n  }\n\n  saveFile(options) {\n    toDataURL(options).then(dataURL => {\n      saveAs(dataURL, this.fileName, {\n        forceProxy: this.forceProxy,\n        proxyURL: this.proxyURL\n      });\n    });\n  }\n\n}\n\nExcelComponent.ɵfac = function ExcelComponent_Factory(t) {\n  return new (t || ExcelComponent)(i0.ɵɵdirectiveInject(ExcelService), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nExcelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ExcelComponent,\n  selectors: [[\"kendo-grid-excel\"]],\n  contentQueries: function ExcelComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ColumnBase$1, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.columns = _t);\n    }\n  },\n  inputs: {\n    fileName: \"fileName\",\n    filterable: \"filterable\",\n    creator: \"creator\",\n    date: \"date\",\n    forceProxy: \"forceProxy\",\n    proxyURL: \"proxyURL\",\n    fetchData: \"fetchData\",\n    paddingCellOptions: \"paddingCellOptions\",\n    headerPaddingCellOptions: \"headerPaddingCellOptions\",\n    collapsible: \"collapsible\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function ExcelComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ExcelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-excel',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: ExcelService\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    fileName: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    creator: [{\n      type: Input\n    }],\n    date: [{\n      type: Input\n    }],\n    forceProxy: [{\n      type: Input\n    }],\n    proxyURL: [{\n      type: Input\n    }],\n    fetchData: [{\n      type: Input\n    }],\n    paddingCellOptions: [{\n      type: Input\n    }],\n    headerPaddingCellOptions: [{\n      type: Input\n    }],\n    collapsible: [{\n      type: Input\n    }],\n    columns: [{\n      type: ContentChildren,\n      args: [ColumnBase$1, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * Represents the `export-to-Excel` command of the Grid. You can apply this\n * directive to any `button` element inside a\n * [ToolbarTemplate]({% slug api_grid_commandcolumncomponent %}).\n * When the user clicks a button associated with the directive, the\n * [excelExport]({% slug api_grid_gridcomponent %}#toc-excelexport) event\n * fires ([see example]({% slug excelexport_grid %})).\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *      <ng-template kendoGridToolbarTemplate>\n *          <button kendoGridExcelCommand>Export to PDF</button>\n *      </ng-template>\n *      <kendo-grid-excel fileName=\"Grid.xlsx\">\n *      </kendo-grid-excel>\n * </kendo-grid>\n * ```\n */\n\n\nclass ExcelCommandDirective extends Button {\n  constructor(excelService, element, renderer, localization, ngZone) {\n    super(element, renderer, null, localization, ngZone);\n    this.excelService = excelService;\n    this.ngZone = ngZone;\n  }\n  /**\n   * @hidden\n   */\n\n\n  onClick(e) {\n    e.preventDefault();\n    this.excelService.exportClick.emit();\n  }\n  /**\n   * @hidden\n   */\n\n\n  get excelClass() {\n    return true;\n  }\n\n}\n\nExcelCommandDirective.ɵfac = function ExcelCommandDirective_Factory(t) {\n  return new (t || ExcelCommandDirective)(i0.ɵɵdirectiveInject(ExcelService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nExcelCommandDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ExcelCommandDirective,\n  selectors: [[\"\", \"kendoGridExcelCommand\", \"\"]],\n  hostVars: 2,\n  hostBindings: function ExcelCommandDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function ExcelCommandDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-grid-excel\", ctx.excelClass);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ExcelCommandDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridExcelCommand]'\n    }]\n  }], function () {\n    return [{\n      type: ExcelService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    excelClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-excel']\n    }]\n  });\n})();\n\nconst declarations = [ExcelComponent, ExcelCommandDirective];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Excel component of the Grid.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Grid and Excel modules\n * import { GridModule, ExcelModule } from '@progress/kendo-angular-grid';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, GridModule, ExcelModule], // import Grid and Excel modules\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\nclass ExcelModule {}\n\nExcelModule.ɵfac = function ExcelModule_Factory(t) {\n  return new (t || ExcelModule)();\n};\n\nExcelModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ExcelModule\n});\nExcelModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [ExcelExportModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ExcelModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [declarations],\n      exports: [declarations, ExcelExportModule]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AddCommandDirective, AfterEqFilterOperatorComponent, AfterFilterOperatorComponent, AutoCompleteFilterCellComponent, BaseFilterCellComponent, BeforeEqFilterOperatorComponent, BeforeFilterOperatorComponent, BodyModule, BooleanFilterCellComponent, BooleanFilterComponent, BooleanFilterMenuComponent, BooleanFilterRadioButtonDirective, BrowserSupportService, CELL_CONTEXT, CancelCommandDirective, CellCloseEvent, CellComponent, CellLoadingTemplateDirective, CellSelectionService, CellTemplateDirective, ChangeNotificationService, CheckboxColumnComponent, ColGroupComponent, ColumnBase, ColumnChooserComponent, ColumnComponent, ColumnGroupComponent, ColumnHandleDirective, ColumnInfoService, ColumnLockedChangeEvent, ColumnMenuAutoSizeAllColumnsComponent, ColumnMenuAutoSizeColumnComponent, ColumnMenuChooserComponent, ColumnMenuComponent, ColumnMenuContainerComponent, ColumnMenuFilterComponent, ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, ColumnMenuItemDirective, ColumnMenuLockComponent, ColumnMenuPositionComponent, ColumnMenuService, ColumnMenuSortComponent, ColumnMenuStickComponent, ColumnMenuTemplateDirective, ColumnReorderEvent, ColumnReorderService, ColumnResizingService, ColumnStickyChangeEvent, ColumnVisibilityChangeEvent, ColumnsContainer, CommandColumnComponent, ContainsFilterOperatorComponent, ContextService, CustomMessagesComponent, DEFAULT_SCROLLER_FACTORY, DataBindingDirective, DateFilterCellComponent, DateFilterComponent, DateFilterMenuComponent, DateFilterMenuInputComponent, DetailCollapseEvent, DetailExpandEvent, DetailTemplateDirective, DetailsService, DoesNotContainFilterOperatorComponent, DomEventsService, DragAndDropService, DragHintService, DropCueService, EditCommandDirective, EditService, EditTemplateDirective, EditingDirectiveBase, EndsWithFilterOperatorComponent, EqualFilterOperatorComponent, ExcelCommandDirective, ExcelComponent, ExcelExportEvent, ExcelModule, ExcelService, ExpandDetailsDirective, ExpandGroupDirective, FieldAccessorPipe, FilterCellComponent, FilterCellHostDirective, FilterCellOperatorsComponent, FilterCellTemplateDirective, FilterCellWrapperComponent, FilterInputDirective, FilterMenuComponent, FilterMenuContainerComponent, FilterMenuDropDownListDirective, FilterMenuHostDirective, FilterMenuInputWrapperComponent, FilterMenuModule, FilterMenuTemplateDirective, FilterRowComponent, FilterService, FocusRoot, FocusableDirective, FooterComponent, FooterModule, FooterTemplateDirective, GreaterFilterOperatorComponent, GreaterOrEqualToFilterOperatorComponent, GridComponent, GridModule, GridSpacerComponent, GroupBindingDirective, GroupFooterTemplateDirective, GroupHeaderColumnTemplateDirective, GroupHeaderComponent, GroupHeaderTemplateDirective, GroupIndicatorComponent, GroupInfoService, GroupModule, GroupPanelComponent, GroupsService, HeaderComponent, HeaderModule, HeaderTemplateDirective, IdService, InCellEditingDirective, IsEmptyFilterOperatorComponent, IsNotEmptyFilterOperatorComponent, IsNotNullFilterOperatorComponent, IsNullFilterOperatorComponent, LessFilterOperatorComponent, LessOrEqualToFilterOperatorComponent, ListComponent, LoadingComponent, LoadingTemplateDirective, LocalDataChangesService, LogicalCellDirective, LogicalRowDirective, MenuTabbingService, NavigationService, NoRecordsTemplateDirective, NotEqualFilterOperatorComponent, NumericFilterCellComponent, NumericFilterComponent, NumericFilterMenuComponent, NumericFilterMenuInputComponent, PDFCommandDirective, PDFComponent, PDFMarginComponent, PDFModule, PDFService, PDFTemplateDirective, PagerComponent, PagerContextService, PagerDropDownListDirective, PagerInfoComponent, PagerInputComponent, PagerInputDirective, PagerModule, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerPageSizesComponent, PagerPrevButtonsComponent, PagerTemplateDirective, PopupCloseEvent, ReactiveEditingDirective, RemoveCommandDirective, ResizableContainerDirective, ResizeService, ResponsiveService, RowEditingDirectiveBase, RowFilterModule, SaveCommandDirective, ScrollRequestService, ScrollSyncService, SelectAllCheckboxDirective, SelectionCheckboxDirective, SelectionDirective, SelectionService, SharedFilterModule, SharedModule, SinglePopupService, Skip, SortService, SpanColumnComponent, StartsWithFilterOperatorComponent, StringFilterCellComponent, StringFilterComponent, StringFilterMenuComponent, StringFilterMenuInputComponent, SuspendService, TableBodyComponent, TableDirective, TemplateContextDirective, TemplateEditingDirective, ToolbarComponent, ToolbarTemplateDirective, count, defaultTrackBy, hasFilterMenu, hasFilterRow, isFilterable, slice };","map":{"version":3,"sources":["C:/Repos/angular-kendo-grid-reactive/node_modules/@progress/kendo-angular-grid/fesm2015/kendo-angular-grid.js"],"names":["i0","InjectionToken","Component","HostBinding","Input","EventEmitter","Injectable","Optional","Inject","Directive","SkipSelf","QueryList","isDevMode","ContentChildren","ContentChild","forwardRef","Host","Output","SecurityContext","ChangeDetectionStrategy","ViewChild","HostListener","ViewChildren","Self","TemplateRef","Pipe","ViewEncapsulation","NgModule","i1$1","isDocumentAvailable","Keys","anyChanged","isChanged","isChanged$1","KendoInput","guid","hasObservers","ResizeSensorComponent","DraggableModule","EventsModule","ResizeSensorModule","merge","of","Subject","from","Subscription","interval","fromEvent","zip","zip$1","BehaviorSubject","Observable","switchMap","take","map","filter","takeUntil","switchMapTo","delay","auditTime","distinctUntilChanged","tap","throttleTime","debounceTime","bufferCount","i1","ComponentMessages","LocalizationService","L10N_PREFIX","i4","CommonModule","i4$2","NG_VALUE_ACCESSOR","FormControl","FormGroup","ReactiveFormsModule","FormsModule","validatePackage","orderBy","isCompositeFilterDescriptor","process","filterBy","i1$2","PopupModule","i1$3","i4$1","NumericTextBoxComponent","InputsModule","NumericTextBoxModule","i1$4","DropDownListComponent","DropDownListModule","AutoCompleteModule","DropDownsModule","i5","LabelModule","i4$3","DatePickerModule","trigger","state","style","transition","animate","getter","i1$5","Button","PDFExportMarginComponent","PDFExportTemplateDirective","PDFExportComponent","saveAs","workbookOptions","toDataURL","ColumnBase","ColumnBase$1","ExcelExportModule","EMPTY_REGEX","isPresent","value","undefined","isBlank","isArray","Array","isTruthy","isNullOrEmptyString","test","observe","list","changes","isUniversal","document","isString","isNumber","isNaN","extractFormat","format","startsWith","slice","length","not","fn","args","apply","or","conditions","reduce","acc","x","and","Skip","createPromise","resolveFn","rejectFn","promise","Promise","resolve","reject","data","iterator","getIterator$1","Symbol","keys","Object","getOwnPropertyNames","Map","prototype","proto","i","key","entries","FRAME_DURATION","wnd","window","requestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","cancelAnimationFrame","msCancelRequestAnimationFrame","clearTimeout","detectIE","ua","navigator","userAgent","msie","indexOf","trident","nodesToArray","nodes","call","replaceMessagePlaceholder","message","name","replace","RegExp","GridSpacerComponent","constructor","hostClass","sizedClass","width","flexBasisStyle","ɵfac","ɵcmp","type","selector","template","DomEventsService","cellClick","cellMousedown","cellMouseup","click","keydown","focus","focusIn","focusOut","windowBlur","ɵprov","LocalDataChangesService","GridFocusableElement","navigationService","focusCell","toggle","active","canFocus","hasFocus","isNavigable","NavigationCursor","model","activeRow","activeCol","virtualCol","virtualRow","row","findRow","cell","findCell","dataRowIndex","reset","rowIndex","colIndex","force","activate","isActiveRange","prevColIndex","prevRowIndex","next","start","end","cellRange","Boolean","assume","announce","activateVirtualCell","rowRange","isActive","moveUp","offset","offsetRow","moveDown","moveLeft","offsetCol","moveRight","lastCellIndex","metadata","columns","leafColumnsToRender","hasDetailTemplate","groupItem","prevRow","lastIndex","Math","max","min","nextColIndex","nextRowIndex","virtualColumns","colSpan","nextCell","isVirtual","maxIndex","maxLogicalRowIndex","nextIndex","lastRow","index","nextRow","rowSpan","nextPos","ItemMap","count","items","first","result","forEach","item","last","removeItem","setItem","getItem","toArray","push","hasOwnProperty","find","NavigationModel","rows","firstRow","registerCell","logicalRowIndex","logicalColIndex","modelCell","uid","detailExpandCell","dataItem","focusGroup","cells","unregisterCell","match","registerRow","modelRow","updateRow","current","assign","unregisterRow","position","currentIndex","rowCell","firstCell","focusableRegex","NODE_NAME_PREDICATES","toClassList","classNames","String","trim","split","hasClasses","element","namesList","className","matchesClasses","matchesNodeName","nodeName","toLowerCase","closest","node","predicate","parentNode","closestInScope","scope","contains$2","parent","matchSelf","outside","child","el","isVisible","rect","getBoundingClientRect","hasSize","height","hasPosition","y","getComputedStyle","visibility","isFocusable","tagName","hasTabIndex","getAttribute","focusable","disabled","isFocusableWithTabKey","checkVisibility","visible","ariaHidden","tabIndex","findElement","firstChild","nodeType","nextSibling","findLastElement","findFocusable","findFocusableChild","findLastFocusableChild","rtlScrollPosition","initial","scrollWidth","offsetWidth","PagerContextService","pageChange","currentPage","skip","pageSize","notifyChanges","total","changePage","page","changePageSize","nextPage","prevPage","ScrollRequestService","requests","scrollTo","request","getGroupRowArgs","group","groupIndex","parentGroup","isChildIndex","targetIndex","parentIndex","GroupsService","rowState","Set","clear","ngOnDestroy","isExpanded","groupArgs","userCallback","has","isInExpandedGroup","expanded","toggleRow","expand","delete","add","expandChildren","PreventableEvent","prevented","preventDefault","isDefaultPrevented","DetailCollapseEvent","DetailExpandEvent","DetailsService","collapseRow","expandRow","emitEvent","eventArg","FOCUS_ROOT_ACTIVE","FocusRoot","groups","registerGroup","unregisterGroup","f","deactivate","decorators","CellCloseEvent","options","action","isEqual","isNotEqual","isNewRow","EditService","ngZone","editedIndices","keepEditCell","closingCell","changedSource","changed","asObservable","pipe","onStable","editRow","onChanged","addRow","newItemGroup","editCell","column","editable","editTemplate","field","preventCellClose","closeCell","isEditing","isEditingCell","hasNewItem","newDataItem","close","originalEvent","run","formGroup","emit","cancelCell","shouldCloseCell","runOutsideAngular","keepCellTimeout","context","findByIndex","columnContext","isEdited","hasEdited","isEditedColumn","beginEdit","beginAdd","endEdit","isNew","save","remove","NgZone","isButton","isInputTag","navigableRegex","isNavigableInput","DefaultFocusableElement","host","renderer","nativeElement","enabled","setAttribute","activeElement","e","CELL_CONTEXT","EMPTY_CELL_CONTEXT","FocusableDirective","cellContext","hostElement","_enabled","registerElement","ngAfterViewInit","unregisterElement","ElementRef","Renderer2","ɵdir","isInSameGrid","gridElement","matchHeaderCell","matchDataCell","matchFooterCell","matchCell","gridCell","target","parentElement","targetCell","parseInt","isArrowKey","keyCode","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","isNavigationKey","PageUp","PageDown","Home","End","isInput","isTextInput","isPrintableCharacter","str","NavigationViewport","firstItemIndex","lastItemIndex","containsRow","headerRow","intersects","NavigationService","zone","domEvents","pagerContextService","scrollRequestService","groupsService","detailsService","focusRoot","editService","cd","localization","focusableParent","cellKeydown","activeRowIndex","alive","mode","cursor","pagerIsNavigable","tableIsNavigable","meta","pagerEnabled","tableEnabled","activeCell","activeDataRow","headerRows","init","navigableOptions","setActiveSections","onStableSubscriber","operators","isStable","subs","subscribe","onCursorChanges","navigateTo","onFocusOut","onWindowBlur","leaveCell","onKeydown","Tab","onTabout","deactivateElements","unsubscribe","pendingRowIndex","virtualCell","registerCellOnCurrentRow","needsViewport","viewport","isCellFocusable","isCellFocused","oldMode","focusInCell","focusInActiveRowContent","activateRow","alreadyActive","isCursor","tryFocus","activateElements","enterCell","setViewport","ahead","behind","setColumnViewport","columnViewport","focusCellByElement","focusNextCell","wrap","focusAdjacentCell","focusPrevCell","autoFocusCell","lockedLeafColumns","includes","fwd","success","moveCursorFwd","moveCursorBwd","colIdx","rtl","onCursorKeydown","modifier","ctrlKey","metaKey","step","onCellKeydown","nextItemIndex","hasPager","viewportSize","lastRowIndex","Enter","F2","altKey","onContentKeydown","confirm","defaultPrevented","srcElement","Escape","stopPropagation","cancel","navigate","detectChanges","ChangeDetectorRef","SelectionService","localDataChangesService","lastSelectionStartIndex","currentSelection","selectAllChecked","dragging","addSubscriptions","enableMarquee","checkboxOnly","settings","selectableSettings","selectable","dragAndMultiple","drag","getIterator","_selectAllState","done","rowArgs","rowSelected","isSelected","handleClick","event","ev","shiftKey","addAllTo","select","selectedRows","deselectedRows","toggleByIndex","itemToToggle","deselect","removedItem","idx","updateAll","selectRange","startIndex","endIndex","selectAllState","selected","n","defaultOptions","removeSubscriptions","targetArgs","mouseDownEventArgs","cellClickSubscription","mousedownSubscription","dataChangedSubscription","accessor","view","CellSelectionService","mouseUpEvent","dragSelectDeselect","lastSelectionItem","itemKey","columnKey","lastSelectionItemRowIndex","lastSelectionItemColIndex","col","selectedCellArgs","cellSelected","leafIndex","isCellSelected","startRowIndex","startColIndex","endRowIndex","endColIndex","selectedCells","deselectedCells","selectedItem","cellsToRemove","contender","selectionStartRow","selectionStartCol","selectionEndRow","selectionEndCol","isInRowRange","isInColRange","isInSelectionRect","createElement$1","marquee","createElement","marqueeColor","appendChild","POINTER_OFFSET","MINIMAL_DRAG_DISTANCE","offsets","topLeft","topRight","bottomLeft","bottomRight","GridMarqueeDirective","draggable","selection","cellSelection","selectionStarted","webkitUserSelection","userSelection","ngOnInit","subscriptions","kendoPress","bind","kendoDrag","moveMarquee","clean","isInvalidTarget","matches","pressArgs","pressTarget","press","distance","sqrt","pow","pageX","pageY","dragEndSubscription","kendoRelease","endSelection","initMarquee","marqueeElement","marqueeQuadrant","getMarqueeQuadrant","left","top","abs","body","removeChild","pointerX","pointerY","startX","startY","leftHalf","rightHalf","topHalf","bottomHalf","DraggableDirective","ZoneAwareEventEmitter","isAsync","generatorOrNext","error","complete","schedulerFn","errorFn","_","completeFn","err","packageMetadata","productName","productCodes","publishDate","version","licensingDocsUrl","CellTemplateDirective","templateRef","GroupHeaderTemplateDirective","GroupHeaderColumnTemplateDirective","EditTemplateDirective","GroupFooterTemplateDirective","HeaderTemplateDirective","FooterTemplateDirective","ColumnMenuTemplateDirective","sequence","IdService","prefix","gridId","cellId","selectionCheckboxId","itemIndex","selectAllCheckboxId","isSpanColumn","isCheckboxColumn","isColumnContainer","isColumnGroup","idService","matchesMedia","orderIndex","resizable","reorderable","minResizableWidth","_locked","sticky","lockable","stickable","columnMenu","includeInChooser","headerTemplates","columnMenuTemplates","Error","_leafIndex","parsedValue","_width","console","warn","locked","level","isLocked","colspan","rowspan","totalColumnLevels","headerTemplateRef","footerTemplateRef","footerTemplate","columnMenuTemplateRef","displayTitle","title","hidden","maxResizableWidth","autoSize","media","headerStyle","filterStyle","footerStyle","cssClass","headerClass","filterClass","footerClass","descendants","static","FilterCellTemplateDirective","FilterMenuTemplateDirective","isColumnComponent","ColumnComponent","sortable","groupable","editor","filterable","groupHeaderTemplateRef","groupHeaderTemplate","groupHeaderColumnTemplateRef","groupHeaderColumnTemplate","groupFooterTemplateRef","groupFooterTemplate","editTemplateRef","filterCellTemplateRef","filterCellTemplate","filterMenuTemplateRef","filterMenuTemplate","provide","useExisting","providers","isSpanColumnComponent","SpanColumnComponent","childColumns","_editable","_value","c","some","childrenArray","hasChildren","expandColumns","concat","expandColumnsWithSpan","columnsToRender","sumProp","prop","array","prev","curr","sumColumnWidths","columnsSpan","validField","isValidFieldName","fieldName","children","leafColumns","someLeafColumn","resizableColumns","sortColumns","dir","isInSpanColumn$1","isColumnGroupComponent","ColumnGroupComponent","DetailTemplateDirective","_condition","showIf","JSON","stringify","canCreateElement","cachedScrollbarWidth","cachedPixelRatio","cachedRtlScrollLeft","scrollbarWidth","devicePixelRatio","div","cssText","innerHTML","rtlScrollLeft","outer","direction","display","overflow","zoom","inner","append","scrollLeft","BrowserSupportService","changeDetector","markForCheck","isGroupItem","source","isVirtualGroupItem","skipHeader","flattenGroups","itemAt","footers","dataIndex","parentGroupIndex","GroupIterator","ItemIterator","ArrayIterator","arr","Iterator","resultMap","iter","_innerIterator","s","p","outputFooters","currentGroupIndex","_iterator","nextGroupItem","footerItem","innerIterator","nextDataItem","DataResultIterator","groupFooters","isObject","isGridDataResult","toString","DataCollection","at","PairSet","keyXField","keyYField","keysX","totalKeysCount","size","keyX","keyY","set","get","pairs","pair","keysY","ContextService","Selection","ctx","selectedKeys","selectedKeysChange","rowSelectionState","cellSelectionState","isCellSelectionMode","grid","ngOnChanges","lastSelectionState","setState","getItemKey","getSelectionItem","selectionChangeSubscription","selectionChange","onSelectionChange","destroy","selectionKey","itemIdentifiers","notifyChange","stateToArray","lists","diff","ColumnsContainer","allColumns","lockedColumns","nonLockedColumns","nonLockedLeafColumns","totalLevels","lockedColumnsToRender","nonLockedColumnsToRender","hasGroupHeaderColumn","hasGroupFooter","hasFooter","unlockedWidth","refresh","currentLevels","containerLeafColumns","containerColumns","toRenderContainer","leaf","forEachColumn","forEachLevel","filterHierarchy","ColumnList","empty","filterSort","rootColumns","GroupInfoService","_columnList","registerColumnsContainer","formatForGroup","columnForGroup","isGroupable","groupField","groupTitle","ChangeNotificationService","notify","subscription","closed","NoRecordsTemplateDirective","clearHeight","right","arr1","arr2","len","setHeight$1","heights","getHeights","offsetHeight","offsetHeight2","syncRowsHeight","table1","table2","contains","MenuTabbingService","isColumnMenu","isPopupOpen","FilterService","menuTabbingService","PagerTemplateDirective","PDFService","savePDF","drawPDF","exportClick","dataChanged","component","draw","emitter","observers","PDFExportEvent","SuspendService","scroll","bootstrapToMedia","browserMatchMedia","matchMedia","ResponsiveService","ExcelService","saveToExcel","ToolbarTemplateDirective","_position","ScrollSyncService","elements","headerSubscription","bodySubscription","registerEmitter","sourceType","unregister","obs","findIndex","splice","ResizeService","resizeSubscription","dispatcher","connect","resizes","resizeArgs","extra","ColumnResizingService","tables","batch","trackColumns","resizeColumns","deltaPercent","resizeTable","delta","resizedColumn","resizedColumns","registerTable","tableMetadata","unregisterTable","measureColumns","info","autoFitBatch","autoFit","autoFitStart","onComplete","observables","table","widths","isFilterable","hasFilterMenu","hasFilterRow","contains$1","PopupCloseEvent","DEFAULT_POPUP_CLASS","SinglePopupService","popupService","scrollSyncService","onClose","pointerEventsSub","scrollSubscription","open","anchor","popupRef","popupClass","_a","anchorAlign","vertical","horizontal","popupAlign","content","positionMode","popupElement","attachClose","popupEl","attachMouseListeners","detachClose","removeClick","skipElement","listen","canClosePopup","stopImmediatePropagation","PopupService","appended","getDocument","ownerDocument","documentElement","getWindow","defaultView","clientTop","clientLeft","pageYOffset","pageXOffset","isTargetBefore","compareDocumentPosition","container","before","targetRect","DragAndDropService","register","lastTarget","notifyDrag","mouseEvent","targetFor","notifyDrop","comparer","updateClass","valid","icon","querySelector","updateLock","querySelectorAll","decorate","zIndex","DragHintService","santizer","create","dom","safeTitle","sanitize","HTML","attach","show","hide","enable","disable","removeLock","toggleLock","move","DomSanitizer","DropCueService","ColumnReorderService","reorder","ColumnReorderEvent","newIndex","oldIndex","NavigationMetadata","dataRows","NO_STICKY","ColumnInfoService","visibilityChange","lockedChange","stickyChange","columnRangeChange","columnsContainer","hiddenColumns","leafNamedColumns","unlockedRootCount","stickyColumnsStyles","stickyColumns","changeVisibility","changeLocked","changeStuck","SortService","sort","ColumnVisibilityChangeEvent","ColumnLockedChangeEvent","GROUP_CELL_WIDTH","RESPONSIVE_BREAKPOINT_MEDIUM","RESPONSIVE_BREAKPOINT_LARGE","defaultTrackBy","ColumnStickyChangeEvent","CellLoadingTemplateDirective","LoadingTemplateDirective","ToolbarComponent","toolbarTemplateRef","toolbarTemplate","NgIf","NgTemplateOutlet","normalizeSettings","buttonCount","pageSizes","previousNext","responsive","normalize$1","FocusGroup","root","focusableChildren","toggleState","focused","PagerElementComponent","pagerContext","floor","totalPages","ceil","textFor","onChanges","PagerPrevButtonsComponent","NgClass","changeDetection","OnPush","PagerNumericButtonsComponent","numbersWrapClass","buttons","reminder","pageLabel","num","pageText","onSelectChange","valueAsNumber","Number","NgForOf","PagerInputDirective","inputElement","numericInput","addClass","PagerInputComponent","handleKeyDown","incomingValue","handleBlur","inputValue","writeValue","hasPages","EventsOutsideAngularDirective","PagerNextButtonsComponent","PagerInfoComponent","maxItems","currentPageText","classes","PagerDropDownListDirective","keydownHandler","isOpen","wrapperElement","wrapper","addEventListener","removeEventListener","PagerPageSizesComponent","_pageSizes","normalizedItems","text","showInitialPageSize","pageSizeChange","getValue","LabelComponent","PagerComponent","localizationService","pagerWrapClass","gridPagerClass","_templateContext","_isFocused","resizeHandler","removeClass","clearResponsiveClasses","isFocused","pagerAriaLabel","pagerLabel","localizationMsg","focusTrapTabIndex","onFocusIn","shouldFocusPager","onEscape","onEnter","focusFirstElement","navigateToPreviousPage","shouldTriggerPageChange","navigateToNextPage","navigateToFirstPage","navigateToLastPage","templateContext","ngDoCheck","updateCellContext","currentValue","onInnerFocusIn","relatedTarget","focusLastElement","condition","useValue","deps","useClass","DropTargetDirective","service","enter","leave","drop","eventArgs","GroupIndicatorComponent","directionChange","groupIndicatorClass","toggleDirection","removeDescriptor","preventOnDblClick$1","release","mouseDown","hasClass","isDeleteButton","isSortIcon","skipButtons","elementUnderCursor","clientX","clientY","elementFromPoint","hideThenShow","cont","DraggableColumnDirective","hint","cue","nav","enableDrag","updateTouchAction","isTouch","down","performDrag","upEvent","cursorElement","withoutField","alreadyGrouped","overSameTarget","overLastTarget","isLastGroup","isNotGroupable","columnRules","groupService","indicatorRules","GroupPanelComponent","groupInfoService","change","dropTargets","groupTitles","groupHeaderClass","emptyText","attachTargets","currentTitles","targetSubscription","insert","canDrop","isIndicator","rules","enterStream","leaveStream","dropStream","ColGroupComponent","trackBy","_item","isSorted","sortDescriptor","isSortable","getColumnComponent","detailTemplate","DEFAULTS","allowUnsort","showIndexes","initialDirection","multiSortKey","normalize","hasFilter","hasSort","hasLock","lock","hasStick","stick","setColumnPosition","hasColumnChooser","columnChooser","hasAutoSizeColumn","autoSizeColumn","hasAutoSizeAllColumns","autoSizeAllColumns","autoFitColumn","autoFitColumns","hasItems","localizeOperators$1","operatorTexts","toJSON","xs","FilterOperatorBase","operator","messages","_text","refreshText","update","insertDefaultFilter","rootFilter","filters","logic","setFilter","defaultOperator","logicOperators","flatten","trimFilterByField","filtersByField","filterByField","currentFilter","removeFilter","localizeOperators","BaseFilterCellComponent","filterService","operatorList","hostClasses","_operators","defaultOperators","values","ngAfterContentInit","operationListSubscription","q","updateFilter","applyFilter","areDifferent","a","b","diffFilters","copyObject","obj","property","cloneFilter","cloneFilters","FilterHostDirective","resolver","createComponent","resolveComponentFactory","componentType","initComponent","instance","ViewContainerRef","ComponentFactoryResolver","stringOperators$1","StringFilterComponent","currentOperator","localizationChange","FilterInputDirective","valueAccessors","composing","filterDelay","changeRequests","unsubscribeStart","unsubscribeEnd","unsubscribeEvents","setDisabledState","addAriaAttributes","registerOnChange","subscribeChanges","unsubscribeChanges","changeRequestsSubscription","ariaValue","columnLabel","kendoInput","focusableId","focusableElement","EMPTY_VALUE_OPERATORS","isEmptyValueOperator","FilterInputWrapperComponent","_operator","emptyValueOperator","filterInputDisabled","applyNoValueFilter","onChange","_defaultOperator","input","changeSubscription","filterChange","onClear","FilterMenuDropDownListDirective","filterMenuDropDownLabel","FilterMenuInputWrapperComponent","isFirstDropDown","firstFocusable","firstOperatorDropDown","operatorChange","_currentFilter","onShiftTab","lastFocusable","columnName","StringFilterMenuInputComponent","TextBoxDirective","DefaultValueAccessor","NgControlStatus","NgModel","StringFilterMenuComponent","firstFilter","secondFilter","logicChange","numericOperators","NumericFilterComponent","spinners","_format","columnFormat","decimals","NumericFilterMenuInputComponent","messageFor","NumericTextBoxCustomMessagesComponent","NumericFilterMenuComponent","dateOperators","DateFilterComponent","activeView","bottomView","topView","weekNumber","formatPlaceholder","placeholder","DateFilterMenuInputComponent","picker","DatePickerComponent","DatePickerCustomMessagesComponent","DateFilterMenuComponent","BooleanFilterComponent","defaultItem","BooleanFilterRadioButtonDirective","radioButtonEl","BooleanFilterMenuComponent","idPrefix","radioButtons","radioId","radioValue","RadioButtonDirective","filterMenuComponentFactory","FilterMenuHostDirective","isNoValueOperator","validFilters","trimFilters","findParent","parentLogicOfDefault","def","FilterMenuContainerComponent","parentService","childService","actionsClass","_filter","childFilter","_childFilter","ngAfterViewChecked","isLast","resetButton","filterButton","hasTemplate","submit","onTab","buttonType","clearText","filterText","ɵNgNoValidate","NgControlStatusGroup","NgForm","NgSwitch","NgSwitchCase","FilterMenuComponent","hasFilters","filterLabel","read","ColumnMenuService","closeMenu","ColunnMenuErrorMessages","ColumnMenuItemBase","ColumnMenuItemContentTemplateDirective","ColumnMenuItemComponent","itemClick","collapse","contentState","iconClass","updateContentState","onClick","contentTemplate","animations","ColumnMenuLockComponent","columnInfoService","toggleColumn","toggleHierarchy","allChanged","shift","ColumnMenuStickComponent","ColumnMenuPositionComponent","_isLast","getLastFocusableItem","isLastItem","onCollapse","onExpand","menuItems","lastFocusableIndex","showLock","showStick","ColumnListComponent","columnChange","autoSync","allowHideAll","unlockedCount","_columns","updateColumnState","isDisabled","hasFiltered","hasVisibleLocked","hasUnlockedFiltered","domSubscriptions","checked","updateDisabled","applyButton","cancelChanges","forEachCheckBox","applyChanges","checkboxes","getElementsByClassName","hasLocked","checkedItems","checkbox","checkedUnlocked","filteredColumns","applyText","resetText","ColumnMenuChooserComponent","onApply","ColumnMenuFilterComponent","ColumnMenuItemDirective","_isFirst","isFirst","columnMenuItems","menuItemComponent","lastColumnMenuItem","getLastColumnMenuItem","firstItemKeydownSub","lastFocusableElement","lastItemKeydownSub","isExpandableItem","ColumnMenuContainerComponent","ColumnMenuSortComponent","sortService","sortedAsc","descriptor","sortedDesc","toggleSort","ColumnMenuAutoSizeColumnComponent","isVirtualColumns","columnMenuTemplate","ColumnMenuAutoSizeAllColumnsComponent","POPUP_CLASS","ColumnMenuComponent","standalone","expandedFilter","expandedColumns","expandedPosition","closeSubscription","getExpandedState","columnMenuTitle","menuItemSettings","FilterCellOperatorsComponent","showOperators","valueChange","clearClick","clearKeydown","Space","dropdownKeydown","dropdown","showButton","EMPTY_FILTER_OPERATORS","FilterCellWrapperComponent","overrideBaseClasses","StringFilterCellComponent","NumericFilterCellComponent","BooleanFilterCellComponent","DateFilterCellComponent","filterComponentFactory","FilterCellHostDirective","FilterCellComponent","id$1","nextId$1","LogicalCellDirective","logicalSlaveCell","id","ariaColIndex","navigationChange","onNavigationChange","registerNoChanges","indexChange","rowIndexChange","isFirstChange","previousValue","registerChanges","updateElement","wasActive","microtask","headerLabelText","then","FilterRowComponent","filterRowClass","addStickyStyles","NgStyle","lockedColumnsCount","nextId","LogicalRowDirective","navigation","logicalSlaveRow","logicalSlaveCellsCount","hostRole","ariaRowIndex","ariaOwns","ids","logicalCellsCount","cellIndex","join","logicalSlaveRowChange","TemplateContextDirective","viewContainerRef","removeView","insertedViewRef","createEmbeddedView","SelectAllCheckboxDirective","selectionService","selectAllChange","stateSet","destroyClick","ngAfterContentChecked","undefinedCheckedStateInIE","isChecked","enabledAndMultiple","shouldEmitSelectAll","stateToBool","elem","setProperty","fromPercentage","percent","sign","toPercentage","whole","headerWidth","handle","allLeafColumns","createMoveStream","originalX","preventOnDblClick","isInSpanColumn","ignore","isParentSpanColumn","ColumnHandleDirective","cdr","leftStyle","rightStyle","allLeafs","currentLeafs","columnInfo","isParentSpan","isLastInSpan","headerIndex","columnsForLevel","implicitWidth","initState","resize","shouldUpdate","initColumnWidth","resizeStartWidth","sizeToFit","oldWidth","newWidth","tableDelta","getTableDelta","updateWidth","w","minWidth","maxWidth","startWidth","isAboveMin","isBelowMax","isInBoundaries","mergeObjects","directions","isRootLevel","ofColumnType","notSameElement","inSameParent","sameParent","lastNonLocked","lastColumn","notInSpanColumn","modifierKeys","HeaderComponent","reorderService","totalColumnsCount","sortedFields","scrollable","sortableLabel","columnMenuSettings","unlockedColumnsCount","sortColumn","onSortClick","link","hasFocusableParent","matchModifier","toggledColumn","onHeaderKeydown","showFilterMenu","filterMenu","filterMenus","fm","showColumnMenu","columnMenus","cm","showSortNumbering","sortOrder","sortIcon","sortState","sortStatus","msg","desc","every","_leafColumns","sortChange","selectAllCheckboxLabel","isFirstOnRow","isTailing","logicalColumnIndex","showFilterRow","shouldActivate","canReorder","trackByIndex","stickyStyles","second","columnLevels","targetLocked","draggableLocked","trackMove","calculateBefore","changeContainer","normalizeTarget","firstSpan","t","adjust","levelColumns","targetElement","halfWidth","middle","RowHeightService","rowHeight","detailRowHeight","agg","expandDetail","updateRowHeight","collapseDetail","totalHeight","ScrollAction","PageAction","ScrollBottomAction","SCROLL_BOTTOM_THRESHOLD","ScrollerService","scrollObservable","firstLoaded","rowHeightService","lastLoaded","lastScrollTop","subject","observer","onScroll","scrollTop","scrollHeight","clientHeight","up","firstItemOffset","nextTake","atBottom","nonVisibleBuffer","NON_DATA_CELL_CLASSES","NON_DATA_ROW_CLASSES","IGNORE_TARGET_CLASSSES","IGNORE_CONTAINER_CLASSES","CommandColumnComponent","SelectionCheckboxDirective","destroyKeyDown","onKeyDown","setCheckedState","FORMAT_REGEX","FieldAccessorPipe","intlService","transform","formatValue","intl","IntlService","ɵpipe","pure","CellComponent","isLoading","_editTemplateContext","commandCellClass","isCommand","_rowIndex","isColumnEditable","editContext","isFieldEditable","showLoading","editTemplateContext","$implicit","isBoundColumn","selectionCheckboxLabel","_changes","updateTemplateContext","columnIndex","NgSwitchDefault","FormControlDirective","CheckboxControlValueAccessor","loadingTemplate","GroupHeaderComponent","skipGroupDecoration","hasDetails","groupItemClass","prefixGroupCell","toggleGroup","groupSpan","groupCount","detailOffset","columnCount","logicalColSpan","ariaRole","groupButtonTitle","messageKey","groupHeaderColumns","columnCellIndex","TableBodyComponent","changeNotification","cellSelectionService","noRecordsText","showGroupFooters","rowClass","cellKeydownSubscription","cellKeydownHandler","trackByWrapper","trackByColumns","isAriaSelected","isRowSelected","viewItem","detailButtonStyles","detailButtonTitle","isGroup","isDataItem","isFooter","isFooterItemInExpandedGroup","isDataItemInExpandedGroup","isParentGroupExpanded","isOdd","isSelectable","groupHeaderSlaveCellsCount","rowSticky","applyStickyRowsStyling","pos","absoluteRowIndex","addRowOffset","filterRowOffset","headerRowCount","addRowLogicalIndex","clickHandler","mouseupSubscription","clickSubscription","contextmenuSubscription","touchstartSubscription","touchendSubscription","touchSubscription","originalNoRecordText","l10nSubscription","clickTimeout","isEditingRow","allColumnsSpan","footerColumns","showGroupHeader","addStickyColumnStyles","eventTarget","currentTarget","cellClickArgs","emitCellClick","isEditedRow","touch","changedTouches","stickyRows","accumulatedHeight","stickyRowsOffsets","setStyle","noRecordsTemplate","cellLoadingTemplate","columnsToResize","fns","TableDirective","firstResize","autoFitSubscription","autoFitObservable","originalWidth","deltas","sum","measureColumn","header","footer","ResizableContainerDirective","resizeService","lockedWidth","_lockedWidth","attachResize","kendoGridResizableContainer","containerElement","clientWidth","elementAt","elementOffset","elementIdx","rowAt","hasAttribute","cellAt","EMPTY_OBJECT","SCROLLER_FACTORY_TOKEN","DEFAULT_SCROLLER_FACTORY","observable","wheelDeltaY","deltaY","wheelDelta","detail","axis","VERTICAL_AXIS","preventLockedScroll","allowScroll","translateY","maybeNativeElement","hasScrollbar","setHeight","bufferSize","ListComponent","scrollerFactory","suspendService","supportService","columnResizingService","pdfService","contentScroll","scrollBottom","columnsStartIdx","resizeSensors","containerScrollTop","scroller","detailExpand","showFooter","totalWidth","exporting","viewportColumns","groupCellsWidth","nonLockedWidth","handleRowSync","handleRowNavigationLocked","updateViewportColumns","hasInitialSkip","firstChange","handleInitialScrollToSkip","rebind","skipScroll","viewportWidthChange","resetNavigationViewport","attachContainerScroll","initResizeService","hasLockedContainer","lockedContainer","lockedTable","cleanupScroller","createScroller","lockedScroll","lockedScrollTop","lockedMousewheel","scrollDelta","lockedKeydown","onContainerScroll","handleColumnScroll","rowViewport","startRow","endRow","startColumn","endColumn","scrollerSubscription","temp","shouldScroll","sub","syncContainerHeight","sensor","acceptSize","scrollToVirtualRow","offsetTop","startOffset","normalizeScrollLeft","elementScrollLeft","lastItemOffset","lastItemOverflows","viewportStart","viewportEnd","firstItemHeight","lastItemHeight","lastItemExpanded","lastItemDetailOverflows","range","startIdx","endIdx","calculateViewportColumns","currentColumns","viewportColumnsWidth","offsetColumn","unshift","columnsEndIdx","updateColumnViewport","columnUpdateFrame","lockedCount","normalizedScrollLeft","currentWidth","offsetLeft","stickyRowHeight","loading","FooterComponent","LoadingComponent","loadingText","GridMessages","groupPanelEmpty","noRecords","pagerFirstPage","pagerLastPage","pagerPreviousPage","pagerNextPage","pagerPage","pagerItemsPerPage","pagerOf","pagerItems","pagerPageNumberInputTitle","filterInputLabel","filterMenuTitle","filterMenuOperatorsDropDownLabel","filterMenuLogicDropDownLabel","filterEqOperator","filterNotEqOperator","filterIsNullOperator","filterIsNotNullOperator","filterIsEmptyOperator","filterIsNotEmptyOperator","filterStartsWithOperator","filterContainsOperator","filterNotContainsOperator","filterEndsWithOperator","filterGteOperator","filterGtOperator","filterLteOperator","filterLtOperator","filterIsTrue","filterIsFalse","filterBooleanAll","filterAfterOrEqualOperator","filterAfterOperator","filterBeforeOperator","filterBeforeOrEqualOperator","filterFilterButton","filterClearButton","filterAndLogic","filterOrLogic","gridLabel","unlock","unstick","sortAscending","sortDescending","autosizeThisColumn","autosizeAllColumns","sortedAscending","sortedDescending","sortedDefault","columnsApply","columnsReset","detailCollapse","filterDateToday","filterDateToggle","filterNumericDecrement","filterNumericIncrement","groupCollapse","groupExpand","LocalizedMessagesDirective","createControl","validateColumnsField","handleExpandCollapseGroupsService","expandEmitter","collapseEmitter","handleExpandCollapseDetailsService","isInEditedCell","GridComponent","responsiveService","excelService","changeDetectorRef","columnReorderService","pageable","hideHeader","groupChange","dataStateChange","edit","cellClose","pdfExport","excelExport","columnResize","columnReorder","columnVisibilityChange","columnLockedChange","columnStickyChange","selectionDirective","columnList","hasGroupFooters","shouldGenerateColumns","_sort","_group","_skip","cachedWindowWidth","_rowSelected","_cellSelected","_navigable","_rowClass","localizationSubscription","columnVisibilityChangeSubscription","columnLockedChangeSubscription","columnStickyChangeSubscription","groupExpandCollapseSubscription","detailsServiceSubscription","filterSubscription","sortSubscription","attachStateChangesEmitter","attachEditHandlers","attachDomEventHandlers","pdfSubscription","emitPDFExportEvent","excelSubscription","saveAsExcel","columnsContainerChange","handleColumnResize","columnReorderSubscription","columnRangeChangeSubscription","onColumnRangeChange","showTopToolbar","showBottomToolbar","showTopPager","showBottomPager","showGroupPanel","groupableEmptyText","marqueeSelection","navigable","navigatable","_rowSticky","lockedClasses","virtualClasses","noScrollbarClass","_customDetailTemplate","detailTemplateChildren","_cellLoadingTemplate","cellLoadingTemplateChildren","_loadingTemplate","loadingTemplateChildren","_customNoRecordsTemplate","noRecordsTemplateChildren","customNoRecordsTemplate","pagerTemplate","_customPagerTemplate","pagerTemplateChildren","customPagerTemplate","_customToolbarTemplate","toolbarTemplateChildren","customToolbarTemplate","headerPadding","padding","ariaRowCount","ariaColCount","isScrollable","visibleColumns","headerColumns","headerLeafColumns","leafViewportColumns","totalCount","toggleDetailRowLegacy","expandGroup","toggleGroupRowLegacy","collapseGroup","resetGroupsState","expandGroupChildren","onDataChange","autoGenerateColumns","defaultSelection","initSelectionService","updateNavigationMetadata","syncHeaderHeight","columnMenuOptions","attachScrollSync","shouldResetSelection","navigationMetadata","attachElementEventHandlers","applyAutoSize","verifySettings","columnsChangeSubscription","selectionSubscription","stateChangeSubscription","editServiceSubscription","columnsContainerChangeSubscription","detachElementEventHandlers","footerChangeSubscription","columnResizingSubscription","focusElementSubscription","ariaLabel","skipFocus","focusEditElement","closeRow","isFormGroup","fields","columnInstance","saveAsPDF","cols","notifyPageChange","notifyScrollBottom","sender","containerSelector","setEditFocus","assertNavigable","reorderColumn","destIndex","allColumnsForLevel","isDetailExpanded","isGroupExpanded","updateColumnIndices","sourceColumnIndex","nextSourceIndex","toSkip","updateIndicesForLevel","colsForParentLevel","colsForLevel","cellSelectionMode","activeService","inactiveService","emitCRUDEvent","ariaRoot","resizeCheck","orientationSubscription","documentClickSubscription","windowBlurSubscription","keydownSubscription","focusInSubscription","focusOutSubscription","innerWidth","hasChanges","lockedHeader","notifyResize","toAdd","lastFromGroup","previous","hasCallback","selectableChanges","encapsulation","None","exportAs","DataBindingDirective","originalData","applyState","onStateChange","updateGridData","notifyDataChange","SelectionDirective","ExpandDetailsDirective","expandedDetailKeysChange","expandedDetailKeys","initiallyExpanded","expandedState","expandDetailsKey","_expandBy","expandDetailBy","lastExpandedState","keyGetter","hasKey","mapParentGroup","parentGroupKeys","DEFAULT_KEY_GETTER","groupRowArgs","ExpandGroupDirective","expandedGroupKeysChange","groupsInitiallyExpanded","expandGroupBy","_expandGroupBy","expandedGroupKeys","_expandedGroupKeys","expandedGroups","getItemIndex","CustomMessagesComponent","override","stringOperators","AutoCompleteFilterCellComponent","valueField","_valueField","AutoCompleteComponent","exportedModules$5","SharedModule","exports","ɵmod","ɵinj","declarations","imports","ContainsFilterOperatorComponent","DoesNotContainFilterOperatorComponent","EndsWithFilterOperatorComponent","EqualFilterOperatorComponent","IsEmptyFilterOperatorComponent","IsNotEmptyFilterOperatorComponent","IsNotNullFilterOperatorComponent","IsNullFilterOperatorComponent","NotEqualFilterOperatorComponent","StartsWithFilterOperatorComponent","GreaterFilterOperatorComponent","GreaterOrEqualToFilterOperatorComponent","LessFilterOperatorComponent","LessOrEqualToFilterOperatorComponent","AfterFilterOperatorComponent","AfterEqFilterOperatorComponent","BeforeEqFilterOperatorComponent","BeforeFilterOperatorComponent","FILTER_OPERATORS","importedModules$4","COMPONENTS$1","SharedFilterModule","INTERNAL_COMPONENTS$2","ENTRY_COMPONENTS$1","RowFilterModule","entryComponents","importedModules$3","INTERNAL_COMPONENTS$1","PagerModule","exported$1","DragAndDropModule","exportedModules$4","GroupModule","INTERNAL_COMPONENTS","ENTRY_COMPONENTS","FilterMenuModule","ColumnChooserComponent","closeClick","COMPONENTS","ColumnMenuModule","exportedModules$3","importedModules$2","HeaderModule","CheckboxColumnComponent","showSelectAll","EditCommandDirective","commandClass","CancelCommandDirective","SaveCommandDirective","RemoveCommandDirective","AddCommandDirective","exported","importedModules$1","BodyModule","exportedModules$2","importedModules","FooterModule","LocalEditService","hasLocalData","assignValues","EditingDirectiveBase","defaultEditService","createDefaultService","userEditService","addHandler","removeHandler","cancelHandler","saveHandler","createModel","saveModel","closeEditor","shouldRemove","removeConfirmation","LocalRowEditService","RowEditingDirectiveBase","editHandler","TemplateEditingDirective","originalValues","createNewItem","markAllAsTouched","control","markAsTouched","controls","ReactiveEditingDirective","createFormGroup","dirty","InCellEditingDirective","cellClickHandler","cellCloseHandler","hasGroups","groupDescriptorsPresent","descriptors","processGroups","removeParentDescriptors","parents","owner","g","findGroup","findChildren","includeFooters","hideFooter","groupItems","itemCount","aggregates","skippedHeaders","GroupBindingDirective","kendoGridGroupBinding","groupsPresent","dataResult","exportedModules$1","declarations$2","GridModule","PDFMarginComponent","PDFTemplateDirective","HEADER_CLASS","FOOTER_CLASS","GRID_LIST","TABLE","matchesList","matchesTable","suffix","GridQuery","headerWrap","footerWrap","FIRST_CLASS","INPUTS","cloneNode","clone","_kendoExportVisual","removeAttribute","appendNodes","wrapTable","createTableElement","sources","sourceCount","rowsCount","rowIdx","sourceIdx","setFirstCellClass","headers","firstCellIndex","createTable","colGroups","bodies","colGroup","exportElement","query","lockedContent","createDiv","PDFComponent","saveSubscription","drawSubscription","export","createPDF","createExportGroup","originalColumns","initProgress","renderAllPages","allPages","changeColumns","progress","overlay","originalHeight","originalOverflow","applyScroll","overlayQuery","overlayContent","overlayLockedContent","createExportElement","fileName","drawOptions","_destructive","cleanup","removeContainer","_take","marginComponent","pageTemplateDirective","PDFCommandDirective","pdfClass","exportedModules","declarations$1","PDFModule","ExcelExportEvent","workbook","fetchComponentData","toExcelColumn","toExcelColumns","excelColumn","componentColumns","ExcelComponent","dataSubscription","fetchData","exportData","creator","date","paddingCellOptions","headerPaddingCellOptions","collapsible","saveFile","dataURL","forceProxy","proxyURL","ExcelCommandDirective","excelClass","ExcelModule"],"mappings":"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B8H,MAAAA,IAAI,EAAE,CAAC0tB,2BAAD,EAA8B;AAAEF,QAAAA,MAAM,EAAE;AAAV,OAA9B;AAFe,KAAD;AAlCM,GApB1C;AAAA;AA2DA;AACA;AACA;;;AACA,SAASuB,qBAAT,CAA+B5a,MAA/B,EAAuC;AACnC,SAAOA,MAAM,CAACqW,YAAd;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMwE,mBAAN,SAAkC5wB,UAAlC,CAA6C;AACzCmF,EAAAA,WAAW,CAACwJ,MAAD,EAAS6d,SAAT,EAAoB;AAC3B,UAAM7d,MAAN,EAAc6d,SAAd;AACA;AACR;AACA;;AACQ,SAAKJ,YAAL,GAAoB,IAApB;AACA,SAAKxmB,QAAL,GAAgB,IAAIjM,SAAJ,EAAhB;AACA,SAAKsc,YAAL,GAAoB,IAAItc,SAAJ,EAApB;AACA;AACR;AACA;;AACQ,SAAKk3B,YAAL,GAAoB,IAAIl3B,SAAJ,EAApB;AACA;AACR;AACA;;AACQ,SAAKwzB,gBAAL,GAAwB,KAAxB;AACA,SAAK2D,SAAL,GAAiB,IAAjB;;AACA,QAAIniB,MAAM,IAAIA,MAAM,CAACyd,YAArB,EAAmC;AAC/B,YAAM,IAAIkB,KAAJ,CAAU,uDAAV,CAAN;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACgB,MAARtX,QAAQ,CAAC3V,KAAD,EAAQ;AAChB,SAAKywB,SAAL,GAAiBzwB,KAAjB;AACH;;AACW,MAAR2V,QAAQ,GAAG;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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3NmB,KAAD;AAFwG,GAAD,CAAzH,EA+N4B,YAAY;AAAE,WAAO,CAAC;AAAEF,MAAAA,IAAI,EAAE46B;AAAR,KAAD,EAA+B;AAAE56B,MAAAA,IAAI,EAAEu+B;AAAR,KAA/B,EAA0D;AAAEv+B,MAAAA,IAAI,EAAEu/B;AAAR,KAA1D,EAAoF;AAAEv/B,MAAAA,IAAI,EAAEw/B;AAAR,KAApF,EAAoH;AAAEx/B,MAAAA,IAAI,EAAEmmB;AAAR,KAApH,EAAyI;AAAEnmB,MAAAA,IAAI,EAAE8gC;AAAR,KAAzI,EAAgK;AAAE9gC,MAAAA,IAAI,EAAEzI,EAAE,CAACE;AAAX,KAAhK,EAAkM;AAAEuI,MAAAA,IAAI,EAAEggC;AAAR,KAAlM,EAA+N;AAAEhgC,MAAAA,IAAI,EAAE1M,EAAE,CAAC2oB;AAAX,KAA/N,CAAP;AAAwQ,GA/NlT,EA+NoU;AAAEsM,IAAAA,iBAAiB,E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;AACA;AACA;AACA;;;AACIC,EAAAA,aAAa,GAAG;AACZ,WAAO,KAAKyF,WAAL,CAAiBzF,aAAjB,EAAP;AACH;AACD;AACJ;AACA;;;AACI22D,EAAAA,SAAS,GAAG;AACR,SAAKnR,UAAL,CAAgBlkD,IAAhB,CAAqB,IAArB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACI2kB,EAAAA,OAAO,GAAG;AACN,UAAM/5B,OAAO,GAAGH,aAAa,EAA7B;AACA,SAAKy5D,UAAL,CAAgBn/B,IAAhB,CAAqB,IAArB,EAA2Bn6B,OAA3B;AACA,WAAOA,OAAP;AACH;AACD;AACJ;AACA;;;AACIylE,EAAAA,WAAW,GAAG;AACV,SAAK1C,YAAL,CAAkB3tD,IAAlB,CAAuB,IAAvB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIw7B,EAAAA,aAAa,CAACr9B,MAAD,EAAS;AAClB,SAAK8lD,qBAAL,CAA2Bn8B,OAA3B,CAAmC3pB,MAAnC;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIs9B,EAAAA,cAAc,CAAC9pC,OAAO,GAAG,KAAKA,OAAhB,EAAyB;AACnC,QAAI2jE,IAAJ;;AACA,QAAI3jE,OAAO,YAAY5P,SAAvB,EAAkC;AAC9BuzE,MAAAA,IAAI,GAAG3jE,OAAO,CAACkC,OAAR,EAAP;AACH,KAFD,MAGK;AACDyhE,MAAAA,IAAI,GAAG3jE,OAAP;AACH;;AACD,SAAKsyD,qBAAL,CAA2Bn8B,OAA3B,CAAmC,GAAGwtC,IAAtC;AACH;AACD;AACJ;AACA;;;AACIC,EAAAA,gBAAgB,CAAC74C,MAAD,EAASrR,KAAT,EAAgB;AAC5B,QAAIqR,MAAM,KAAK,MAAX,IAAqB,CAAC,KAAKjqB,SAA/B,EAA0C;AACtC;AACH;;AACD,SAAK4G,UAAL,CAAgB4F,IAAhB,CAAqBoM,KAArB;AACH;AACD;AACJ;AACA;;;AACImqD,EAAAA,kBAAkB,GAAG;AACjB,QAAI,KAAK1gB,UAAL,KAAoB,MAAxB,EAAgC;AAC5B;AACH;;AACD,QAAItxD,YAAY,CAAC,KAAK4gE,YAAN,CAAhB,EAAqC;AACjC,WAAK/mD,MAAL,CAAY0B,GAAZ,CAAgB,MAAM,KAAKqlD,YAAL,CAAkBnlD,IAAlB,CAAuB;AAAEw2D,QAAAA,MAAM,EAAE;AAAV,OAAvB,CAAtB;AACH;AACJ;AACD;AACJ;AACA;;;AACIT,EAAAA,gBAAgB,CAACU,iBAAD,EAAoB;AAChC,QAAI,KAAKb,wBAAT,EAAmC;AAC/B,WAAKA,wBAAL,CAA8BxuD,WAA9B;AACH;;AACD,SAAKhJ,MAAL,CAAY+B,iBAAZ,CAA8B,MAAM;AAChC,WAAKy1D,wBAAL,GAAgC,KAAKx3D,MAAL,CAAYQ,QAAZ,CAAqBF,YAArB,GAAoCC,IAApC,CAAyCnZ,IAAI,CAAC,CAAD,CAA7C,EAAkDkhB,SAAlD,CAA4D,MAAM;AAC9F,cAAMutB,OAAO,GAAG,KAAKA,OAAL,CAAaxyB,aAA7B;;AACA,YAAI,CAAC,KAAKi1D,YAAL,CAAkBziC,OAAO,CAAClH,aAAR,CAAsB0pC,iBAAtB,CAAlB,CAAD,IAAgE,KAAKx/C,QAAzE,EAAmF;AAC/E,eAAKy/C,YAAL,CAAkBziC,OAAO,CAAClH,aAAR,CAAuB,mBAAkB0pC,iBAAkB,EAA3D,CAAlB;AACH;;AACD,aAAKb,wBAAL,GAAgC,IAAhC;AACH,OAN+B,CAAhC;AAOH,KARD;AASH;AACD;AACJ;AACA;AACA;AACA;;;AACItmE,EAAAA,KAAK,GAAG;AACJ,SAAKqnE,eAAL;AACA,WAAO,KAAK9mE,iBAAL,CAAuBC,SAAvB,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIA,EAAAA,SAAS,CAACkB,QAAD,EAAWC,QAAX,EAAqB;AAC1B,SAAK0lE,eAAL;AACA,WAAO,KAAK9mE,iBAAL,CAAuBC,SAAvB,CAAiCkB,QAAjC,EAA2CC,QAA3C,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACI0X,EAAAA,aAAa,CAACC,IAAI,GAAG,IAAR,EAAc;AACvB,SAAK+tD,eAAL;AACA,WAAO,KAAK9mE,iBAAL,CAAuB8Y,aAAvB,CAAqCC,IAArC,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIE,EAAAA,aAAa,CAACF,IAAI,GAAG,IAAR,EAAc;AACvB,SAAK+tD,eAAL;AACA,WAAO,KAAK9mE,iBAAL,CAAuBiZ,aAAvB,CAAqCF,IAArC,CAAP;AACH;AACD;AACJ;AACA;;;AACI3N,EAAAA,QAAQ,CAACC,OAAD,EAAU;AACd,SAAK4J,oBAAL,CAA0B7J,QAA1B,CAAmCC,OAAnC;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI07D,EAAAA,aAAa,CAACn5C,MAAD,EAASo5C,SAAT,EAAoB/4D,OAAO,GAAG;AAAEouB,IAAAA,MAAM,EAAE;AAAV,GAA9B,EAAiD;AAC1D,UAAMwnB,eAAe,GAAGj4B,WAAW,CAAC,KAAKq7C,kBAAL,CAAwBr5C,MAAM,CAACzG,KAA/B,CAAD,CAAnC;AACA,QAAI/T,MAAM,GAAGywC,eAAe,CAACmjB,SAAD,CAA5B;;AACA,QAAI,CAAC5zD,MAAL,EAAa;AACT;AACH;;AACD,UAAMoyC,aAAa,GAAGpyC,MAAM,CAACgU,QAAP,IAClB,CAACwG,MAAM,CAACxG,QADU,IAElB,KAAKiY,gBAAL,CAAsBjN,gBAAtB,CAAuCr3B,MAAvC,KAAkD,CAFtD;;AAGA,QAAIyqD,aAAJ,EAAmB;AACf;AACH;;AACD,QAAIv7B,qBAAqB,CAAC7W,MAAD,CAArB,IAAiC,CAACnF,OAAO,CAACouB,MAA9C,EAAsD;AAClDjpB,MAAAA,MAAM,GAAGA,MAAM,CAAC+W,YAAP,CAAoBxlB,IAA7B;AACH;;AACD,SAAK85B,OAAL,CAAa;AACTpC,MAAAA,MAAM,EAAEpuB,OAAO,CAACouB,MADP;AAETzO,MAAAA,MAAM,EAAEA,MAFC;AAGTxa,MAAAA,MAAM,EAAEA;AAHC,KAAb;AAKH;AACD;AACJ;AACA;;;AACwB,MAAhB8zD,gBAAgB,CAAC9pE,QAAD,EAAW;AAC3B,SAAK+X,cAAL,CAAoB/I,YAApB,GAAmChP,QAAnC;AACH;;AACmB,MAAhB8pE,gBAAgB,GAAG;AACnB,WAAO,KAAK/xD,cAAL,CAAoB/I,YAA3B;AACH;AACD;AACJ;AACA;;;AACuB,MAAf+6D,eAAe,CAAC/pE,QAAD,EAAW;AAC1B,SAAK8X,aAAL,CAAmB9I,YAAnB,GAAkChP,QAAlC;AACA,SAAK4rB,SAAL,GAAiBtvB,SAAS,CAAC0D,QAAD,CAA1B;AACH;;AACkB,MAAf+pE,eAAe,GAAG;AAClB,WAAO,KAAKjyD,aAAL,CAAmB9I,YAA1B;AACH;AACD;AACJ;AACA;;;AACIqyB,EAAAA,OAAO,CAAC;AAAErrB,IAAAA,MAAF;AAAUwa,IAAAA,MAAV;AAAkByO,IAAAA,MAAlB;AAA0BssB,IAAAA;AAA1B,GAAD,EAA8C;AACjD,SAAKp6C,MAAL,CAAY0B,GAAZ,CAAgB,MAAM;AAClB,YAAM4zC,eAAe,GAAGj4B,WAAW,CAAC,KAAKq7C,kBAAL,CAAwBr5C,MAAM,CAACzG,KAA/B,CAAD,CAAnC;AACA,UAAIwX,QAAQ,GAAGklB,eAAe,CAAC/lD,OAAhB,CAAwBsV,MAAxB,CAAf;;AACA,UAAIA,MAAM,CAACnL,MAAP,IAAiBmL,MAAM,CAACnL,MAAP,CAAcyd,YAAnC,EAAiD;AAC7CiZ,QAAAA,QAAQ,GAAGklB,eAAe,CAAC/lD,OAAhB,CAAwBsV,MAAM,CAACnL,MAA/B,CAAX;;AACA,YAAIo0B,MAAJ,EAAY;AACRjpB,UAAAA,MAAM,GAAGA,MAAM,CAACnL,MAAhB;AACH;AACJ;;AACD,UAAI22B,QAAQ,GAAGilB,eAAe,CAAC/lD,OAAhB,CAAwB8vB,MAAxB,CAAf;;AACA,UAAI+6B,eAAJ,EAAqB;AACjB,YAAItsB,MAAM,IAAI,IAAIsC,QAAd,IAA0BC,QAAQ,GAAGD,QAAzC,EAAmD;AAAE;AACjDA,UAAAA,QAAQ;AACX,SAFD,MAGK,IAAI,CAACtC,MAAD,IAAWuC,QAAQ,GAAGD,QAA1B,EAAoC;AAAE;AACvCA,UAAAA,QAAQ;AACX;AACJ;;AACD,YAAMzjC,IAAI,GAAG,IAAIwjC,kBAAJ,CAAuB;AAChCrvB,QAAAA,MAAM,EAAEue,MADwB;AAEhCgR,QAAAA,QAAQ,EAAEA,QAFsB;AAGhCD,QAAAA,QAAQ,EAAEA;AAHsB,OAAvB,CAAb;AAKA,WAAK8gC,aAAL,CAAmBtvD,IAAnB,CAAwBjV,IAAxB;;AACA,UAAIA,IAAI,CAAC8R,kBAAL,EAAJ,EAA+B;AAC3B;AACH;;AACD,UAAI27C,eAAJ,EAAqB;AACjB,aAAKgX,kBAAL,CAAwBxvD,IAAxB,CAA6B,IAAI8vB,uBAAJ,CAA4B,CAACrS,MAAD,CAA5B,CAA7B;AACH;;AACD,WAAKw5C,mBAAL,CAAyB;AAAEvjB,QAAAA,eAAF;AAAmBj2B,QAAAA,MAAnB;AAA2Bxa,QAAAA,MAA3B;AAAmCipB,QAAAA;AAAnC,OAAzB;;AACA,UAAIzO,MAAM,CAAC1G,MAAP,KAAkB9T,MAAM,CAAC8T,MAA7B,EAAqC;AACjC0G,QAAAA,MAAM,CAAC1G,MAAP,GAAgB9T,MAAM,CAAC8T,MAAvB;AACH;;AACD,WAAKmY,gBAAL,CAAsBxM,OAAtB;AACA,WAAKisC,iBAAL,CAAuBpxC,YAAvB;AACH,KApCD;AAqCH;;AACD05C,EAAAA,mBAAmB,CAAC;AAAEvjB,IAAAA,eAAF;AAAmBj2B,IAAAA,MAAnB;AAA2Bxa,IAAAA,MAA3B;AAAmCipB,IAAAA;AAAnC,GAAD,EAA8C;AAC7D,UAAMghB,eAAe,GAAGzyB,qBAAqB,CAACi5B,eAAD,CAA7C;AACA,UAAMwjB,iBAAiB,GAAGhqB,eAAe,CAACv/C,OAAhB,CAAwB8vB,MAAxB,CAA1B;AACA,QAAI05C,eAAe,GAAG,CAAtB;AACA,QAAIxjE,SAAS,GAAG,CAAhB;AACA,QAAIyjE,MAAM,GAAG,CAAb,CAL6D,CAM7D;;AACA,QAAI35C,MAAM,CAAClI,YAAX,EAAyB;AACrB6hD,MAAAA,MAAM,IAAI35C,MAAM,CAACzD,YAAP,CAAoBpvB,MAA9B;AACH;;AACD,QAAI6B,CAAC,GAAG,CAAR;;AACA,WAAOA,CAAC,GAAGygD,eAAe,CAACtiD,MAA3B,EAAmC;AAC/B,UAAIsU,MAAM,GAAGguC,eAAe,CAACzgD,CAAD,CAA5B;;AACA,UAAIyS,MAAM,KAAK+D,MAAf,EAAuB;AACnBk0D,QAAAA,eAAe,GAAGjrC,MAAM,GAAGv4B,SAAH,GAAeA,SAAS,GAAG,CAAnD;AACAA,QAAAA,SAAS,GAAGu4B,MAAM,GAAGv4B,SAAS,GAAGyjE,MAAf,GAAwBzjE,SAA1C;AACAuL,QAAAA,MAAM,CAAC2W,UAAP,GAAoBliB,SAApB;;AACA,YAAIwjE,eAAe,KAAKxjE,SAAS,GAAG,CAApC,EAAuC;AACnCA,UAAAA,SAAS,IAAIyjE,MAAb;AACH;AACJ,OAPD,MAQK,IAAIl4D,MAAM,KAAKue,MAAf,EAAuB;AACxBhxB,QAAAA,CAAC,IAAI2qE,MAAL;AACA;AACH,OAHI,MAIA;AACDl4D,QAAAA,MAAM,CAAC2W,UAAP,GAAoBliB,SAApB;AACH;;AACDA,MAAAA,SAAS;AACTlH,MAAAA,CAAC;AACJ;;AACD,SAAKA,CAAC,GAAGyqE,iBAAT,EAA4BzqE,CAAC,GAAGyqE,iBAAiB,GAAGE,MAApD,EAA4D3qE,CAAC,EAA7D,EAAiE;AAC7DygD,MAAAA,eAAe,CAACzgD,CAAD,CAAf,CAAmBopB,UAAnB,GAAgCshD,eAAe,EAA/C;AACH;;AACD,SAAKE,qBAAL,CAA2B55C,MAAM,CAACzG,KAAP,GAAe,CAA1C;AACH;;AACDqgD,EAAAA,qBAAqB,CAACrgD,KAAD,EAAQ;AACzB,UAAMsgD,kBAAkB,GAAG,KAAKR,kBAAL,CAAwB9/C,KAAK,GAAG,CAAhC,CAA3B;AACA,UAAMugD,YAAY,GAAG,EAArB;AACA97C,IAAAA,WAAW,CAAC67C,kBAAD,CAAX,CAAgChjE,OAAhC,CAAyC6lB,CAAD,IAAO;AAC3C,UAAIA,CAAC,CAACzE,aAAN,EAAqB;AACjB6hD,QAAAA,YAAY,CAAC1iE,IAAb,CAAkB,GAAGslB,CAAC,CAACE,aAAF,CAAgBuV,IAAhB,CAAqB,CAACmP,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAAClpB,UAAF,GAAempB,CAAC,CAACnpB,UAAhD,CAArB;AACH;AACJ,KAJD;AAKA4E,IAAAA,qBAAqB,CAAC88C,YAAD,CAArB,CAAoC9xE,GAApC,CAAwC,CAAC00B,CAAD,EAAI1tB,CAAJ,KAAU0tB,CAAC,CAACtE,UAAF,GAAeppB,CAAjE;;AACA,QAAIuqB,KAAK,GAAG,KAAK24C,UAAL,CAAgBv4C,iBAAhB,EAAZ,EAAiD;AAC7C,WAAKigD,qBAAL,CAA2BrgD,KAAK,GAAG,CAAnC;AACH;AACJ;;AACD8/C,EAAAA,kBAAkB,CAAC9/C,KAAD,EAAQ;AACtB,WAAO,KAAK24C,UAAL,CAAgB/6D,OAAhB,GAA0BlP,MAA1B,CAAiCwZ,MAAM,IAAIA,MAAM,CAAC8X,KAAP,KAAiBA,KAA5D,CAAP;AACH;;AACD09C,EAAAA,oBAAoB,GAAG;AACnB,QAAI,CAAC,KAAKhpD,UAAV,EAAsB;AAClB,WAAK4lC,gBAAL,CAAsBx1C,WAAtB;AACA,WAAKyiD,oBAAL,CAA0BziD,WAA1B;AACA;AACH;;AACD,QAAI,CAAC,KAAK4zD,kBAAN,IAA4B,CAACnmE,SAAS,CAAC,KAAKkrE,gBAAN,CAA1C,EAAmE;AAC/D,WAAKA,gBAAL,GAAwB,IAAIl0C,SAAJ,CAAc,KAAKC,GAAnB,EAAwB,KAAKmuC,iBAA7B,CAAxB;AACH;;AACD,UAAM6I,iBAAiB,GAAG,KAAK9rD,UAAL,CAAgB,MAAhB,CAA1B;AACA,UAAM+rD,aAAa,GAAGD,iBAAiB,GAAG,KAAKjZ,oBAAR,GAA+B,KAAKjN,gBAA3E;AACA,UAAMomB,eAAe,GAAGF,iBAAiB,GAAG,KAAKlmB,gBAAR,GAA2B,KAAKiN,oBAAzE;;AACA,QAAImZ,eAAe,CAAC1nE,MAApB,EAA4B;AACxB0nE,MAAAA,eAAe,CAAC57D,WAAhB;AACA27D,MAAAA,aAAa,CAACpsD,gBAAd;AACAqsD,MAAAA,eAAe,CAAC1nE,MAAhB,GAAyB,KAAzB;AACH;;AACDynE,IAAAA,aAAa,CAACznE,MAAd,GAAuB,IAAvB;AACAynE,IAAAA,aAAa,CAACtxD,IAAd,CAAmB;AACfuI,MAAAA,YAAY,EAAE8oD,iBAAiB,GAAG,KAAK9oD,YAAR,GAAuBjlB,SADvC;AAEfwiB,MAAAA,WAAW,EAAEurD,iBAAiB,GAAG/tE,SAAH,GAAe,KAAKwiB,WAFnC;AAGfP,MAAAA,UAAU,EAAE,KAAKA,UAHF;AAIfqC,MAAAA,IAAI,EAAE,KAAKA,IAJI;AAKfrb,MAAAA,OAAO,EAAE8kE,iBAAiB,GAAG,KAAK7H,UAAL,CAAgB/6D,OAAhB,EAAH,GAA+BnL;AAL1C,KAAnB;;AAOA,QAAI,CAAC,KAAKimE,kBAAN,IAA4B,CAAC,KAAKjkD,kBAAL,CAAwB/J,OAAzD,EAAkE;AAC9D,WAAK+yD,gBAAL,CAAsB1jE,KAAtB;AACH;;AACD,QAAI,KAAKskE,qBAAT,EAAgC;AAC5B,WAAKA,qBAAL,CAA2BjuD,WAA3B;AACH;;AACD,QAAIowD,iBAAJ,EAAuB;AACnB,WAAKnC,qBAAL,GAA6B,KAAK9W,oBAAL,CAA0Br0D,OAA1B,CAAkCwc,SAAlC,CAA6C0F,KAAD,IAAW;AAChF,aAAKhO,MAAL,CAAY0B,GAAZ,CAAgB,MAAM,KAAKuhB,eAAL,CAAqBrhB,IAArB,CAA0BoM,KAA1B,CAAtB;AACH,OAF4B,CAA7B;AAGH,KAJD,MAKK;AACD,WAAKipD,qBAAL,GAA6B,KAAK/jB,gBAAL,CAAsBpnD,OAAtB,CAA8Bwc,SAA9B,CAAyC0F,KAAD,IAAW;AAC5E,aAAKhO,MAAL,CAAY0B,GAAZ,CAAgB,MAAM,KAAKuhB,eAAL,CAAqBrhB,IAArB,CAA0BoM,KAA1B,CAAtB;AACH,OAF4B,CAA7B;AAGH;AACJ;;AACDsqD,EAAAA,YAAY,CAAC1/D,OAAD,EAAU;AAClB,QAAIA,OAAJ,EAAa;AACT,aAAO,KAAKnH,iBAAL,CAAuBqY,QAAvB,CAAgClR,OAAhC,CAAP;AACH;AACJ;;AACDm/D,EAAAA,cAAc,CAACj3D,MAAD,EAAS;AACnB,QAAI2gC,QAAJ;;AACA,QAAI,OAAO3gC,MAAP,KAAkB,QAAtB,EAAgC;AAC5B2gC,MAAAA,QAAQ,GAAG,KAAK3Q,gBAAL,CAAsBlmB,iBAAtB,CAAwCpU,OAAxC,GACN4lB,MADM,CACC,KAAK0U,gBAAL,CAAsBhN,oBAAtB,CAA2CttB,OAA3C,EADD,EACuDsK,MADvD,CAAX;AAEH,KAHD,MAIK,IAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AACjC2gC,MAAAA,QAAQ,GAAG,KAAK8vB,UAAL,CAAgBjqE,MAAhB,CAAwB6O,IAAD,IAAUA,IAAI,CAAC8K,KAAL,KAAeH,MAAhD,EAAwD,CAAxD,CAAX;AACH,KAFI,MAGA;AACD2gC,MAAAA,QAAQ,GAAG3gC,MAAX;AACH;;AACD,QAAI,CAAC2gC,QAAD,IAAa98C,SAAS,EAA1B,EAA8B;AAC1B,YAAM,IAAI0zB,KAAJ,CAAW,kBAAiBvX,MAAO,EAAnC,CAAN;AACH;;AACD,WAAO2gC,QAAP;AACH;;AACDs1B,EAAAA,cAAc,GAAG;AACb,QAAIpyE,SAAS,EAAb,EAAiB;AACb,YAAMg0B,MAAM,GAAG,KAAK/N,iBAAL,CAAuBpe,MAAvB,IAAkC,KAAKyrB,UAAL,IAAmB,KAAKA,UAAL,CAAgBwlB,IAApF;AACA,YAAMtM,aAAa,GAAG,KAAKA,aAAL,CAAmB3kC,MAAnB,IAA8B,KAAKyrB,UAAL,IAAmB,KAAKA,UAAL,CAAgB0lB,KAAvF;;AACA,UAAIhlB,MAAM,IAAI,KAAKokB,cAAnB,EAAmC;AAC/B,cAAM,IAAI1kB,KAAJ,CAAU,kEAAV,CAAN;AACH;;AACD,UAAI8Y,aAAa,IAAI,KAAK4L,cAA1B,EAA0C;AACtC,cAAM,IAAI1kB,KAAJ,CAAU,kEAAV,CAAN;AACH;;AACD,UAAI,KAAKzN,iBAAL,CAAuBpe,MAAvB,IAAiC,CAAC,KAAKs3B,oBAAL,CAA0Bt3B,MAAhE,EAAwE;AACpE,cAAM,IAAI6rB,KAAJ,CAAU,gDAAV,CAAN;AACH;;AACD,UAAI,CAACM,MAAM,IAAI,KAAK1jB,cAAhB,KAAmCknB,aAAa,CAAC,KAAKo1C,UAAL,CAAgB/6D,OAAhB,EAAD,CAAb,CAAyClP,MAAzC,CAAgDwZ,MAAM,IAAI,CAACA,MAAM,CAACzQ,KAAR,IAAiB,CAACmtB,sBAAsB,CAAC1c,MAAD,CAAlG,EAA4GtU,MAAnJ,EAA2J;AACvJ,cAAM,IAAI6rB,KAAJ,CAAU,CAACM,MAAM,GAAG,QAAH,GAAc,SAArB,IAAkC,0DAA5C,CAAN;AACH;;AACD,UAAIA,MAAM,IAAI,CAAC,KAAK48C,YAApB,EAAkC;AAC9B,cAAM,IAAIl9C,KAAJ,CAAU,8DAAV,CAAN;AACH;;AACD,UAAI,KAAKk5C,UAAL,CAAgBjqE,MAAhB,CAAuBk2B,sBAAvB,EAA+Cl2B,MAA/C,CAAuD2F,CAAD,IAAO,CAACA,CAAC,CAACivB,WAAhE,EAA6E1vB,MAAjF,EAAyF;AACrF,cAAM,IAAI6rB,KAAJ,CAAU,gFAAV,CAAN;AACH;;AACD,UAAI,KAAKk5C,UAAL,CAAgBjqE,MAAhB,CAAuB2F,CAAC,IAAIA,CAAC,CAAC0rB,MAAF,IAAY1rB,CAAC,CAACyM,MAAd,IAAwB,CAACzM,CAAC,CAACyM,MAAF,CAASmf,QAA9D,EAAwErsB,MAA5E,EAAoF;AAChF,cAAM,IAAI6rB,KAAJ,CAAU,iEAAV,CAAN;AACH;;AACD,UAAI,CAAC,KAAKyiC,SAAL,IAAkB,KAAKC,eAAxB,KAA4C,CAAC,KAAK3lD,SAAtD,EAAiE;AAC7D,cAAM,IAAIijB,KAAJ,CAAU,yFAAV,CAAN;AACH;;AACD,UAAI8Y,aAAa,IAAIhV,aAAa,CAAC,KAAKo1C,UAAL,CAAgB/6D,OAAhB,EAAD,CAAb,CAAyClP,MAAzC,CAAgDwZ,MAAM,IAAI,CAACA,MAAM,CAACzQ,KAAR,IAAiB,CAACmtB,sBAAsB,CAAC1c,MAAD,CAAlG,EAA4GtU,MAAjI,EAAyI;AACrI,cAAM,IAAI6rB,KAAJ,CAAU,gEAAV,CAAN;AACH;;AACD,UAAI8Y,aAAa,IAAI,CAAC,KAAKokC,YAA3B,EAAyC;AACrC,cAAM,IAAIl9C,KAAJ,CAAU,8DAAV,CAAN;AACH;;AACD,UAAI8Y,aAAa,IAAI,KAAKl8B,cAA1B,EAA0C;AACtC,cAAM,IAAIojB,KAAJ,CAAU,wEAAV,CAAN;AACH;;AACD,UAAI,KAAKopC,SAAL,IAAkB,KAAKhK,UAAL,KAAoB,SAA1C,EAAqD;AACjD,cAAM,IAAIp/B,KAAJ,CAAU,yFAAV,CAAN;AACH;;AACD,UAAI,KAAKopC,SAAL,IAAkB,KAAKhnC,SAA3B,EAAsC;AAClC,cAAM,IAAIpC,KAAJ,CAAU,wDAAV,CAAN;AACH;;AACDy3C,MAAAA,oBAAoB,CAAC,KAAKyB,UAAN,CAApB;AACH;AACJ;;AACD6E,EAAAA,mBAAmB,GAAG;AAClB,QAAI,KAAK3E,qBAAL,IAA8B,CAAC,KAAKn9D,OAAL,CAAa9H,MAA5C,IAAsD,KAAKmjB,IAAL,CAAUnjB,MAApE,EAA4E;AACxE,WAAK8H,OAAL,CAAa3B,KAAb,CAAmB3E,MAAM,CAACD,IAAP,CAAY,KAAK4hB,IAAL,CAAUyR,EAAV,CAAa,CAAb,CAAZ,EAA6B/5B,GAA7B,CAAiC4Z,KAAK,IAAI;AACzD,YAAIH,MAAM,GAAG,IAAIyZ,eAAJ,EAAb;AACAzZ,QAAAA,MAAM,CAACG,KAAP,GAAeA,KAAf;AACA,eAAOH,MAAP;AACH,OAJkB,CAAnB;AAKH;AACJ;;AACD4xD,EAAAA,yBAAyB,GAAG;AACxB,SAAKwE,uBAAL,GACI1wE,KAAK,CAAC,KAAKwV,UAAL,CAAgBuE,IAAhB,CAAqBlZ,GAAG,CAAC4F,CAAC,KAAK;AACjC3F,MAAAA,MAAM,EAAE,KAAKA,MADoB;AACZ0V,MAAAA,KAAK,EAAE,KAAKA,KADA;AACOd,MAAAA,IAAI,EAAEjP,CAAC,CAACiP,IADf;AACqBs1B,MAAAA,IAAI,EAAE,KAAKA,IADhC;AACsCpqC,MAAAA,IAAI,EAAE6F,CAAC,CAAC7F;AAD9C,KAAL,CAAF,CAAxB,CAAD,EAEC,KAAKgyD,UAAL,CAAgB74C,IAAhB,CAAqBlZ,GAAG,CAACmqC,IAAI,KAAK;AAAElqC,MAAAA,MAAM,EAAE,KAAKA,MAAf;AAAuB0V,MAAAA,KAAK,EAAE,KAAKA,KAAnC;AAA0Cd,MAAAA,IAAI,EAAE,KAAKA,IAArD;AAA2Ds1B,MAAAA,IAAI,EAAEA,IAAjE;AAAuEpqC,MAAAA,IAAI,EAAE,KAAK+U;AAAlF,KAAL,CAAL,CAAxB,CAFD,EAEoI,KAAKw0D,WAAL,CAAiBpwD,IAAjB,CAAsBlZ,GAAG,CAAC2V,KAAK,KAAK;AACzK1V,MAAAA,MAAM,EAAE,KAAKA,MAD4J;AACpJ0V,MAAAA,KAAK,EAAEA,KAD6I;AACtId,MAAAA,IAAI,EAAE,KAAKA,IAD2H;AACrHs1B,MAAAA,IAAI,EAAE,KAAKA,IAD0G;AACpGpqC,MAAAA,IAAI,EAAE,KAAK+U;AADyF,KAAL,CAAN,CAAzB,CAFpI,EAIC,KAAK2nC,YAAL,CAAkBvjC,IAAlB,CAAuBlZ,GAAG,CAACC,MAAM,KAAK;AACxCA,MAAAA,MAAM,EAAEA,MADgC;AACxB0V,MAAAA,KAAK,EAAE,KAAKA,KADY;AACLd,MAAAA,IAAI,EAAE,CADD;AACIs1B,MAAAA,IAAI,EAAE,KAAKA,IADf;AACqBpqC,MAAAA,IAAI,EAAE,KAAK+U;AADhC,KAAL,CAAP,CAA1B,CAJD,CAAL,CAOKmM,SAPL,CAOerb,CAAC,IAAI;AAChB,WAAKkU,SAAL;AACA,WAAKU,UAAL;AACA,WAAK+uD,eAAL,CAAqBhvD,IAArB,CAA0B3U,CAA1B;AACH,KAXD,CADJ;AAaH;;AACD0lE,EAAAA,kBAAkB,GAAG;AACjB,QAAI,CAAC,KAAK7rD,WAAV,EAAuB;AACnB;AACH;;AACD,SAAKqwD,uBAAL,GAA+B,KAAKrwD,WAAL,CAC1Bhb,OAD0B,CAClBwc,SADkB,CACR,KAAKixD,aAAL,CAAmBxmD,IAAnB,CAAwB,IAAxB,CADQ,CAA/B;AAEH;;AACDwmD,EAAAA,aAAa,CAAC5sE,IAAD,EAAO;AAChB,UAAM;AAAEgT,MAAAA,MAAF;AAAU/M,MAAAA,QAAV;AAAoB+O,MAAAA;AAApB,QAAkChV,IAAxC;AACA,QAAI0K,QAAQ,GAAG,KAAKsY,IAAL,CAAUyR,EAAV,CAAaxuB,QAAQ,GAAG,KAAKsJ,IAA7B,CAAf;;AACA,QAAIyD,MAAM,KAAK,KAAX,IAAoB,CAACtI,QAAzB,EAAmC;AAC/BA,MAAAA,QAAQ,GAAGsK,SAAS,CAACvW,KAArB;AACH;;AACD,SAAK+V,SAAL;AACAnT,IAAAA,MAAM,CAAC8J,MAAP,CAAcnL,IAAd,EAAoB;AAChB0K,MAAAA,QAAQ,EAAEA,QADM;AAEhB+gE,MAAAA,MAAM,EAAE;AAFQ,KAApB;;AAIA,YAAQz4D,MAAR;AACI,WAAK,KAAL;AACI,aAAKvB,GAAL,CAASwD,IAAT,CAAcjV,IAAd;AACA;;AACJ,WAAK,QAAL;AACI,aAAK4f,MAAL,CAAY3K,IAAZ,CAAiBjV,IAAjB;AACA;;AACJ,WAAK,MAAL;AACI,aAAKkkE,IAAL,CAAUjvD,IAAV,CAAejV,IAAf;AACA;;AACJ,WAAK,QAAL;AACI,aAAKiW,MAAL,CAAYhB,IAAZ,CAAiBjV,IAAjB;AACA;;AACJ,WAAK,MAAL;AACI,aAAKgW,IAAL,CAAUf,IAAV,CAAejV,IAAf;AACA;;AACJ,WAAK,WAAL;AACI,aAAKmkE,SAAL,CAAelvD,IAAf,CAAoBjV,IAApB;AACA;;AACJ;AAAS;AAnBb;AAqBH;;AACDimE,EAAAA,sBAAsB,GAAG;AACrB,SAAKrjD,qBAAL,GAA6B,KAAK/I,SAAL,CAAe3V,SAAf,CAAyByX,SAAzB,CAAoC3b,IAAD,IAAU;AACtE,WAAKkE,SAAL,CAAe+Q,IAAf,CAAoB5T,MAAM,CAAC8J,MAAP,CAAc;AAAEsgE,QAAAA,MAAM,EAAE;AAAV,OAAd,EAAgCzrE,IAAhC,CAApB;AACH,KAF4B,CAA7B;AAGH;;AACDkqE,EAAAA,0BAA0B,GAAG;AACzB,QAAI9qE,WAAW,EAAf,EAAmB;AACf;AACH;;AACD,UAAM8pC,OAAO,GAAG,KAAKA,OAAL,CAAaxyB,aAA7B;AACA,UAAMm2D,QAAQ,GAAG,KAAKA,QAAL,CAAcn2D,aAA/B;AACA,SAAKrD,MAAL,CAAY+B,iBAAZ,CAA8B,MAAM;AAChC,YAAM03D,WAAW,GAAG,KAAKA,WAAL,CAAiB1mD,IAAjB,CAAsB,IAAtB,CAApB;AACA,YAAMoW,kBAAkB,GAAG,KAAK/lB,QAAL,CAAcypB,MAAd,CAAqB,QAArB,EAA+B,QAA/B,EAAyC4sC,WAAzC,CAA3B;AACA,YAAMC,uBAAuB,GAAG,KAAKt2D,QAAL,CAAcypB,MAAd,CAAqB,QAArB,EAA+B,mBAA/B,EAAoD4sC,WAApD,CAAhC;AACA,YAAME,yBAAyB,GAAG,KAAKv2D,QAAL,CAAcypB,MAAd,CAAqB,UAArB,EAAiC,OAAjC,EAA2ClgC,IAAD,IAAU;AAClF,cAAM6W,aAAa,GAAGxX,QAAQ,CAACwX,aAA/B;;AACA,YAAI,KAAKsD,WAAL,CAAiBhF,eAAjB,MACA,CAAC3I,OAAO,CAACxM,IAAI,CAACkY,MAAN,EAAc9L,cAAc,CAAC,2CAAD,CAA5B,CADR,IAEA,EAAEyK,aAAa,KACVrK,OAAO,CAACqK,aAAD,EAAgBzK,cAAc,CAAC,uBAAD,CAA9B,CAAP,IACGo3D,cAAc,CAAC3sD,aAAD,EAAgB,KAAKqyB,OAAL,CAAaxyB,aAA7B,CAFP,CAAf,CAFJ,EAIyE;AACrE,eAAKyD,WAAL,CAAiB3F,SAAjB,CAA2BxU,IAA3B;AACH;AACJ,OATiC,CAAlC;AAUA,YAAMitE,sBAAsB,GAAG,KAAKx2D,QAAL,CAAcypB,MAAd,CAAqB,QAArB,EAA+B,MAA/B,EAAwClgC,IAAD,IAAU;AAC5E,cAAM6W,aAAa,GAAGxX,QAAQ,CAACwX,aAA/B;;AACA,YAAIA,aAAa,IAAI,EAAExK,eAAe,CAAC,OAAD,CAAf,CAAyBwK,aAAzB,KAA2CA,aAAa,CAAC/S,IAAd,KAAuB,MAAlE,IACnB0/D,cAAc,CAAC3sD,aAAD,EAAgB,KAAKqyB,OAAL,CAAaxyB,aAA7B,CADG,CAArB,EACgE;AAC5D,eAAKyD,WAAL,CAAiB3F,SAAjB,CAA2BxU,IAA3B;AACH;;AACD,aAAK6Z,SAAL,CAAenV,UAAf,CAA0BuQ,IAA1B,CAA+BjV,IAA/B;AACH,OAP8B,CAA/B;AAQA,YAAMw1D,iBAAiB,GAAG,KAAK/+C,QAAL,CAAcypB,MAAd,CAAqBgJ,OAArB,EAA8B,OAA9B,EAAwClpC,IAAD,IAAU;AACvE,aAAK6Z,SAAL,CAAexV,KAAf,CAAqB4Q,IAArB,CAA0BjV,IAA1B;AACH,OAFyB,CAA1B;AAGA,YAAMktE,mBAAmB,GAAG,KAAKz2D,QAAL,CAAcypB,MAAd,CAAqBgJ,OAArB,EAA8B,SAA9B,EAA0ClpC,IAAD,IAAU;AAC3E,aAAK6Z,SAAL,CAAevV,OAAf,CAAuB2Q,IAAvB,CAA4BjV,IAA5B;AACH,OAF2B,CAA5B,CAzBgC,CA4BhC;;AACA,UAAIsmC,OAAO,GAAG,KAAd;AACA,YAAM6mC,mBAAmB,GAAG,KAAK12D,QAAL,CAAcypB,MAAd,CAAqB2sC,QAArB,EAA+B,SAA/B,EAA2C7sE,IAAD,IAAU;AAC5E,aAAK6Z,SAAL,CAAetV,KAAf,CAAqB0Q,IAArB,CAA0BjV,IAA1B;;AACA,YAAI,CAACsmC,OAAL,EAAc;AACV,eAAKzsB,SAAL,CAAerV,OAAf,CAAuByQ,IAAvB,CAA4BjV,IAA5B;AACAsmC,UAAAA,OAAO,GAAG,IAAV;AACH;AACJ,OAN2B,CAA5B;AAOA,YAAM8mC,oBAAoB,GAAG,KAAK32D,QAAL,CAAcypB,MAAd,CAAqB2sC,QAArB,EAA+B,UAA/B,EAA4C7sE,IAAD,IAAU;AAC9E,cAAMwG,IAAI,GAAGxG,IAAI,CAAC0rC,aAAL,IAAsBrsC,QAAQ,CAACwX,aAA5C;AACA,cAAM5J,OAAO,GAAG,CAACT,OAAO,CAAChG,IAAD,EAAQiG,IAAD,IAAUA,IAAI,KAAKogE,QAA1B,CAAxB;;AACA,YAAI5/D,OAAJ,EAAa;AACT,eAAK4M,SAAL,CAAepV,QAAf,CAAwBwQ,IAAxB,CAA6BjV,IAA7B;AACAsmC,UAAAA,OAAO,GAAG,KAAV;AACH;AACJ,OAP4B,CAA7B;;AAQA,WAAKokC,0BAAL,GAAkC,MAAM;AACpCluC,QAAAA,kBAAkB;AAClBuwC,QAAAA,uBAAuB;AACvBC,QAAAA,yBAAyB;AACzBC,QAAAA,sBAAsB;AACtBzX,QAAAA,iBAAiB;AACjB0X,QAAAA,mBAAmB;AACnBC,QAAAA,mBAAmB;AACnBC,QAAAA,oBAAoB;AACvB,OATD;AAUH,KAvDD;AAwDH;;AACDviD,EAAAA,YAAY,CAACuE,CAAD,EAAI;AACZ,WAAO,KAAKs0C,iBAAL,CAAuB74C,YAAvB,CAAoCuE,CAAC,CAACrC,KAAtC,CAAP;AACH;;AACD+/C,EAAAA,WAAW,GAAG;AACV,QAAI/qE,MAAM,CAACsrE,UAAP,KAAsB,KAAKnI,iBAA/B,EAAkD;AAC9C,WAAKA,iBAAL,GAAyBnjE,MAAM,CAACsrE,UAAhC;AACA,UAAIC,UAAU,GAAG,KAAjB;AACA,WAAK1I,UAAL,CAAgBzsC,eAAhB,CAAgChkB,MAAM,IAAI;AACtC,cAAM0W,YAAY,GAAG,KAAKA,YAAL,CAAkB1W,MAAlB,CAArB;;AACA,YAAIA,MAAM,CAAC0W,YAAP,KAAwBA,YAA5B,EAA0C;AACtCyiD,UAAAA,UAAU,GAAG,IAAb;AACAn5D,UAAAA,MAAM,CAAC0W,YAAP,GAAsBA,YAAtB;AACH;;AACD,eAAO1W,MAAM,CAAC/G,SAAd;AACH,OAPD;;AAQA,UAAIkgE,UAAJ,EAAgB;AACZ,aAAKj6D,MAAL,CAAY0B,GAAZ,CAAgB,MAAM;AAClB,eAAK6uD,iBAAL,CAAuBpxC,YAAvB;AACH,SAFD;AAGH;AACJ;AACJ;;AACD2zC,EAAAA,kBAAkB,GAAG;AACjB,UAAMnmE,IAAI,GAAG,IAAIk7B,cAAJ,EAAb;AACA,SAAKkpC,SAAL,CAAenvD,IAAf,CAAoBjV,IAApB;;AACA,QAAI,CAACA,IAAI,CAAC8R,kBAAL,EAAL,EAAgC;AAC5B,WAAKu5D,SAAL;AACH;AACJ;;AACDxB,EAAAA,gBAAgB,CAAC9Q,UAAD,EAAa;AACzB,WAAOA,UAAU,CACZnlD,IADE,CACGjZ,MAAM,CAAC,MAAM6D,SAAS,CAAC,KAAK+uE,YAAN,CAAhB,CADT,EAEF5xD,SAFE,CAEQ,MAAMoe,cAAc,CAAC,KAAKwzC,YAAL,CAAkB72D,aAAlB,CAAgC4Z,QAAhC,CAAyC,CAAzC,CAAD,EAA8C,KAAKsnC,MAAL,CAAYlhD,aAAZ,CAA0B4Z,QAA1B,CAAmC,CAAnC,CAA9C,CAF5B,CAAP;AAGH;;AACDg2C,EAAAA,sBAAsB,GAAG;AACrB,SAAKmE,kCAAL,GACI,KAAKZ,gBAAL,CAAsB,KAAK1lC,gBAAL,CAAsBhlC,OAAtB,CAA8ByU,IAA9B,CAAmCjZ,MAAM,CAAC,MAAM,KAAKs8B,aAAL,CAAmBp3B,MAAnB,GAA4B,CAAnC,CAAzC,EAAgFrF,SAAS,CAAC,MAAM,KAAK6Y,MAAL,CAAYQ,QAAZ,CAAqBF,YAArB,GAAoCC,IAApC,CAAyCnZ,IAAI,CAAC,CAAD,CAA7C,CAAP,CAAzF,CAAtB,CADJ;AAEH;;AACD8rE,EAAAA,kBAAkB,GAAG;AACjB,UAAM5pC,OAAO,GAAG,KAAKs9B,qBAAL,CAA2B96D,OAA3C;AACA,SAAKyrE,0BAAL,GAAkCjuC,OAAO,CAAC/oB,IAAR,CAAa3Y,GAAG,CAAC6b,CAAC,IAAI;AACpD,UAAIA,CAAC,CAAChT,IAAF,KAAW,OAAf,EAAwB;AACpB,aAAK2S,QAAL,CAAcuxB,QAAd,CAAuB,KAAKkB,OAAL,CAAaxyB,aAApC,EAAmD,wBAAnD;AACH,OAFD,MAGK,IAAII,CAAC,CAAChT,IAAF,KAAW,KAAf,EAAsB;AACvB,aAAK2S,QAAL,CAAc2zB,WAAd,CAA0B,KAAKlB,OAAL,CAAaxyB,aAAvC,EAAsD,wBAAtD;AACH;AACJ,KAPiD,CAAhB,EAO9B/b,MAAM,CAACmc,CAAC,IAAIA,CAAC,CAAChT,IAAF,KAAW,OAAjB,CAPwB,EAOGtJ,SAAS,CAAC,MAAMmiC,OAAO,CAAC/oB,IAAR,EACrD;AACAhZ,IAAAA,SAAS,CAAC+hC,OAAO,CAAC/oB,IAAR,CAAajZ,MAAM,CAACmc,CAAC,IAAIA,CAAC,CAAChT,IAAF,KAAW,gBAAjB,CAAnB,CAAD,CAF4C,EAEcnJ,MAAM,CAACmc,CAAC,IAAIA,CAAC,CAAChT,IAAF,KAAW,KAAjB,CAFpB,CAAP,CAPZ,EAU7B6X,SAV6B,CAUnB,KAAK6xD,YAAL,CAAkBpnD,IAAlB,CAAuB,IAAvB,CAVmB,CAAlC;AAWH;;AACDonD,EAAAA,YAAY,CAAC12D,CAAD,EAAI;AACZ,UAAM9W,IAAI,GAAG8W,CAAC,CAACymB,cAAF,CACR5iC,MADQ,CACD6O,IAAI,IAAI1K,QAAQ,CAAC0K,IAAI,CAAC2K,MAAL,CAAY4W,SAAb,CAAR,IAAmC,CAACvhB,IAAI,CAAC2K,MAAL,CAAYwW,aADvD,EAERjwB,GAFQ,CAEJ8O,IAAI,KAAK;AACd2K,MAAAA,MAAM,EAAE3K,IAAI,CAAC2K,MADC;AAEdi1C,MAAAA,QAAQ,EAAE5/C,IAAI,CAAC2K,MAAL,CAAYzQ,KAFR;AAGdylD,MAAAA,QAAQ,EAAE3/C,IAAI,CAAC2/C;AAHD,KAAL,CAFA,CAAb;AAOA,SAAKmb,YAAL,CAAkBrvD,IAAlB,CAAuBjV,IAAvB;AACH;;AACD4rE,EAAAA,eAAe,GAAG;AACd,QAAI5zE,SAAS,MAAM,CAAC,KAAK8M,iBAAL,CAAuB6R,OAA3C,EAAoD;AAChD,YAAM,IAAI+U,KAAJ,CAAU,6DAAV,CAAN;AACH;AACJ;;AACDu+C,EAAAA,kBAAkB,GAAG;AACjB,UAAMxhE,SAAS,GAAG,KAAKA,SAAvB;AACA,UAAM+G,QAAQ,GAAG,KAAKA,QAAtB;AACA,UAAMo0B,QAAQ,GAAGn7B,SAAS,GAAG,KAAKua,IAAL,CAAUtT,KAAb,GAAqBF,QAA/C;AACA,UAAM0lD,YAAY,GAAG,KAAK/6C,WAAL,CAAiBxF,UAAjB,GAA8B,CAA9B,GAAkC,CAAvD;AACA,UAAMwgD,eAAe,GAAG72B,YAAY,CAAC,KAAKtQ,UAAN,CAAZ,GAAgC,CAAhC,GAAoC,CAA5D;AACA,UAAM7S,UAAU,GAAG,KAAKkR,iBAAL,GAAyB,CAAzB,GAA6B8oC,eAA7B,GAA+CD,YAAlE;AACA,WAAO,IAAIvxB,kBAAJ,CAAuBC,QAAvB,EAAiCzoB,UAAjC,EAA6C1S,SAA7C,EAAwD,KAAKuW,QAA7D,EAAuExgB,SAAS,CAAC,KAAK4xC,cAAN,CAAhF,EAAuG,KAAKlH,OAA5G,EAAqH,KAAK5gC,cAA1H,EAA0I,KAAK67B,gBAA/I,CAAP;AACH;;AACDylC,EAAAA,wBAAwB,GAAG;AACvB,SAAK9kE,iBAAL,CAAuB4C,QAAvB,GAAkC,KAAKuiE,kBAAL,EAAlC;AACH;;AACDE,EAAAA,aAAa,GAAG;AACZ,UAAMmB,IAAI,GAAG,KAAK3jE,OAAL,CAAahN,MAAb,CAAqBy0B,CAAD,IAAO,KAAKtC,QAAL,GAAgBsC,CAAC,CAACtC,QAAF,KAAe,KAA/B,GAAuCsC,CAAC,CAACtC,QAApE,CAAb;;AACA,QAAIw+C,IAAI,CAACzrE,MAAL,GAAc,CAAlB,EAAqB;AACjB,WAAKwT,MAAL,CAAYQ,QAAZ,CAAqBD,IAArB,CAA0BnZ,IAAI,CAAC,CAAD,CAA9B,EAAmCkhB,SAAnC,CAA6CmN,CAAC,IAAI,KAAK2oB,cAAL,CAAoB65B,IAApB,CAAlD;AACH;AACJ;;AACD5E,EAAAA,mBAAmB,CAACzI,KAAD,EAAQ;AACvB,UAAMpD,eAAe,GAAG,KAAKA,eAAL,GAAuB,EAA/C;AACA,UAAMmO,mBAAmB,GAAG,KAAK7kC,gBAAL,CACvBhN,oBADuB,CACFttB,OADE,GACQjK,KADR,CACcq+D,KAAK,CAACx3D,KADpB,EAC2Bw3D,KAAK,CAACv3D,GAAN,GAAY,CADvC,CAA5B;;AAEA,SAAK,IAAIsb,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGgnD,mBAAmB,CAACnpE,MAA5C,EAAoDmiB,GAAG,EAAvD,EAA2D;AACvD,UAAI7N,MAAM,GAAG60D,mBAAmB,CAAChnD,GAAD,CAAhC;;AACA,aAAO7N,MAAM,CAACpH,MAAd,EAAsB;AAClBoH,QAAAA,MAAM,GAAGA,MAAM,CAACpH,MAAhB;AACH;;AACD,YAAM0gE,KAAK,GAAG,CAACt5D,MAAD,CAAd;;AACA,aAAOs5D,KAAK,CAAC5tE,MAAb,EAAqB;AACjBsU,QAAAA,MAAM,GAAGs5D,KAAK,CAAC1vB,KAAN,EAAT;AACA8c,QAAAA,eAAe,CAAC/wD,IAAhB,CAAqBqK,MAArB;;AACA,YAAIA,MAAM,CAACwW,aAAX,EAA0B;AACtB8iD,UAAAA,KAAK,CAACjP,OAAN,CAAcv+D,KAAd,CAAoBwtE,KAApB,EAA2Bt5D,MAAM,CAACmb,aAAlC;AACH;AACJ;;AACD,YAAMo+C,aAAa,GAAG7S,eAAe,CAACA,eAAe,CAACh7D,MAAhB,GAAyB,CAA1B,CAArC;AACAsU,MAAAA,MAAM,GAAG60D,mBAAmB,CAAChnD,GAAD,CAA5B;;AACA,aAAO7N,MAAM,KAAKu5D,aAAX,IAA4B1rD,GAAG,GAAGgnD,mBAAmB,CAACnpE,MAA7D,EAAqE;AACjEmiB,QAAAA,GAAG;AACH7N,QAAAA,MAAM,GAAG60D,mBAAmB,CAAChnD,GAAD,CAA5B;AACH;AACJ;;AACD,QAAIi8C,KAAK,CAACx3D,KAAN,GAAc,CAAlB,EAAqB;AACjB,YAAM4C,KAAK,GAAG2/D,mBAAmB,CAAC,CAAD,CAAjC;AACA,UAAI7hE,MAAM,GAAG82D,KAAK,CAAC92D,MAAnB;AACA,UAAI+D,OAAO,GAAG2vD,eAAe,CAAC,CAAD,CAA7B;AACA,UAAI/xD,KAAK,GAAG,CAAZ;;AACA,aAAOoC,OAAO,KAAK7B,KAAnB,EAA0B;AACtBlC,QAAAA,MAAM,IAAI+D,OAAO,CAACyf,aAAR,GAAwB,CAAxB,GAA4Bzf,OAAO,CAACxH,KAA9C;AACAoF,QAAAA,KAAK;AACLoC,QAAAA,OAAO,GAAG2vD,eAAe,CAAC/xD,KAAD,CAAzB;AACH;;AACD,UAAI3B,MAAM,GAAG,CAAb,EAAgB;AACZ,cAAMiwB,WAAW,GAAG,KAAK+M,gBAAL,CAAsB/M,WAA1C;AACA,YAAIu2C,QAAJ;;AACA,aAAK,IAAI3rD,GAAG,GAAG,CAAf,EAAkBA,GAAG,IAAIoV,WAAzB,EAAsCpV,GAAG,EAAzC,EAA6C;AACzC,gBAAMu8C,YAAY,GAAGv8C,GAAG,GAAGoV,WAAN,GAAoB,IAAItG,oBAAJ,CAAyB68C,QAAzB,CAApB,GAAyD,IAAIvvE,UAAJ,CAAeuvE,QAAf,CAA9E;AACAA,UAAAA,QAAQ,GAAGpP,YAAX;AACAA,UAAAA,YAAY,CAAC5xC,KAAb,GAAqB,QAArB;AACA4xC,UAAAA,YAAY,CAAC76D,KAAb,GAAqByD,MAArB;AACA0zD,UAAAA,eAAe,CAAC2D,OAAhB,CAAwBD,YAAxB;AACH;AACJ;AACJ;;AACD,SAAKyK,mBAAL,GAA2BnO,eAAe,CAAClgE,MAAhB,CAAuBy0B,CAAC,IAAI,CAACA,CAAC,CAACzE,aAA/B,CAA3B;AACH;;AACDu+C,EAAAA,qBAAqB,CAACpgE,KAAD,EAAQyI,MAAR,EAAgB;AACjC,UAAMq8D,WAAW,GAAG,OAAO,KAAK5B,gBAAZ,KAAiC,UAArD;;AACA,QAAIh0E,SAAS,MAAM41E,WAAnB,EAAgC;AAC5B,YAAM,IAAIliD,KAAJ,CAAU,+EACZ,uEADY,GAEZ,mFAFE,CAAN;AAGH;;AACD,QAAI,CAAC1zB,SAAS,EAAV,IAAgB41E,WAApB,EAAiC;AAC7B;AACH;;AACD,QAAI,KAAK3zD,cAAL,CAAoBjJ,UAApB,CAA+BlI,KAA/B,EAAsC,IAAtC,MAAgDyI,MAApD,EAA4D;AACxD,WAAK0I,cAAL,CAAoB3I,SAApB,CAA8BxI,KAA9B,EAAqC,IAArC;AACH;AACJ;;AACDsgE,EAAAA,oBAAoB,CAACtgE,KAAD,EAAQyI,MAAR,EAAgB;AAChC,UAAMq8D,WAAW,GAAG,OAAO,KAAK3B,eAAZ,KAAgC,UAApD;;AACA,QAAIj0E,SAAS,MAAM41E,WAAnB,EAAgC;AAC5B,YAAM,IAAIliD,KAAJ,CAAU,mFACZ,oEADY,GAEZ,mFAFE,CAAN;AAGH;;AACD,QAAI,CAAC1zB,SAAS,EAAV,IAAgB41E,WAApB,EAAiC;AAC7B;AACH;;AACD,QAAI,KAAK5zD,aAAL,CAAmBhJ,UAAnB,CAA8B;AAAEV,MAAAA,UAAU,EAAExH;AAAd,KAA9B,MAAyDyI,MAA7D,EAAqE;AACjE,WAAKyI,aAAL,CAAmB1I,SAAnB,CAA6B;AAAExI,QAAAA;AAAF,OAA7B;AACH;AACJ;;AACDkhE,EAAAA,oBAAoB,CAAC6D,iBAAD,EAAoB;AACpC,UAAMrpB,aAAa,GAAGqpB,iBAAiB,CAACrpB,aAAxC;;AACA,QAAI,CAACA,aAAL,EAAoB;AAChB;AACA,aAAO,KAAP;AACH;;AACD,UAAMhZ,YAAY,GAAGqiC,iBAAiB,CAACriC,YAAvC;;AACA,QAAI,CAACA,YAAD,IAAiBA,YAAY,CAAC70B,OAAb,KAAyB,KAA9C,EAAqD;AACjD;AACA,aAAO,IAAP;AACH;;AACD,WAAO6tC,aAAa,CAAC3+C,IAAd,KAAuB2lC,YAAY,CAAC3lC,IAA3C;AACH;;AA76De;;AA+6DpB49D,aAAa,CAAC7/D,IAAd;AAAA,mBAA2G6/D,aAA3G,EAt1nBuGrsE,EAs1nBvG,mBAA0Ik7B,qBAA1I,GAt1nBuGl7B,EAs1nBvG,mBAA4K4oB,gBAA5K,GAt1nBuG5oB,EAs1nBvG,mBAAyM6rB,oBAAzM,GAt1nBuG7rB,EAs1nBvG,mBAA0OA,EAAE,CAACogB,UAA7O,GAt1nBuGpgB,EAs1nBvG,mBAAoQohC,gBAApQ,GAt1nBuGphC,EAs1nBvG,mBAAiSuZ,aAAjS,GAt1nBuGvZ,EAs1nBvG,mBAA2T4hC,yBAA3T,GAt1nBuG5hC,EAs1nBvG,mBAAiW6a,cAAjW,GAt1nBuG7a,EAs1nBvG,mBAA4Xgc,WAA5X,GAt1nBuGhc,EAs1nBvG,mBAAoZkjC,aAApZ,GAt1nBuGljC,EAs1nBvG,mBAA8aqjC,UAA9a,GAt1nBuGrjC,EAs1nBvG,mBAAqcokC,iBAArc,GAt1nBuGpkC,EAs1nBvG,mBAAmeA,EAAE,CAACqgB,SAAte,GAt1nBuGrgB,EAs1nBvG,mBAA4fqkC,YAA5f,GAt1nBuGrkC,EAs1nBvG,mBAAqhBA,EAAE,CAAC8e,MAAxhB,GAt1nBuG9e,EAs1nBvG,mBAA2iBykC,iBAA3iB,GAt1nBuGzkC,EAs1nBvG,mBAAykB6M,gBAAzkB,GAt1nBuG7M,EAs1nBvG,mBAAsmB0lC,qBAAtmB,GAt1nBuG1lC,EAs1nBvG,mBAAwoBA,EAAE,CAAC2oB,iBAA3oB,GAt1nBuG3oB,EAs1nBvG,mBAAyqBksC,oBAAzqB,GAt1nBuGlsC,EAs1nBvG,mBAA0sB0sC,iBAA1sB,GAt1nBuG1sC,EAs1nBvG,mBAAwuBuiB,iBAAxuB,GAt1nBuGviB,EAs1nBvG,mBAAswBwtC,WAAtwB,GAt1nBuGxtC,EAs1nBvG,mBAA8xB4Y,oBAA9xB,GAt1nBuG5Y,EAs1nBvG,mBAA+zBiE,EAAE,CAACE,mBAAl0B,GAt1nBuGnE,EAs1nBvG,mBAAk2Bm+B,cAAl2B;AAAA;;AACAkuC,aAAa,CAAC5/D,IAAd,kBAv1nBuGzM,EAu1nBvG;AAAA,QAA+FqsE,aAA/F;AAAA;AAAA;AAAA;AAv1nBuGrsE,MAAAA,EAu1nBvG,0BAyCuDgH,UAzCvD;AAv1nBuGhH,MAAAA,EAu1nBvG,0BAyC0H25B,uBAzC1H;AAv1nBuG35B,MAAAA,EAu1nBvG,0BAyC+MiuC,4BAzC/M;AAv1nBuGjuC,MAAAA,EAu1nBvG,0BAyCqSkuC,wBAzCrS;AAv1nBuGluC,MAAAA,EAu1nBvG,0BAyCyXgiC,0BAzCzX;AAv1nBuGhiC,MAAAA,EAu1nBvG,0BAyC2cojC,sBAzC3c;AAv1nBuGpjC,MAAAA,EAu1nBvG,0BAyC2hBukC,wBAzC3hB;AAv1nBuGvkC,MAAAA,EAu1nBvG,0BAyCymB2yB,2BAzCzmB;AAAA;;AAAA;AAAA;;AAv1nBuG3yB,MAAAA,EAu1nBvG,qBAv1nBuGA,EAu1nBvG;AAv1nBuGA,MAAAA,EAu1nBvG,qBAv1nBuGA,EAu1nBvG;AAv1nBuGA,MAAAA,EAu1nBvG,qBAv1nBuGA,EAu1nBvG;AAv1nBuGA,MAAAA,EAu1nBvG,qBAv1nBuGA,EAu1nBvG;AAv1nBuGA,MAAAA,EAu1nBvG,qBAv1nBuGA,EAu1nBvG;AAv1nBuGA,MAAAA,EAu1nBvG,qBAv1nBuGA,EAu1nBvG;AAv1nBuGA,MAAAA,EAu1nBvG,qBAv1nBuGA,EAu1nBvG;AAv1nBuGA,MAAAA,EAu1nBvG,qBAv1nBuGA,EAu1nBvG;AAAA;AAAA;AAAA;AAAA;AAv1nBuGA,MAAAA,EAu1nBvG;AAv1nBuGA,MAAAA,EAu1nBvG;AAv1nBuGA,MAAAA,EAu1nBvG;AAv1nBuGA,MAAAA,EAu1nBvG;AAAA;;AAAA;AAAA;;AAv1nBuGA,MAAAA,EAu1nBvG,qBAv1nBuGA,EAu1nBvG;AAv1nBuGA,MAAAA,EAu1nBvG,qBAv1nBuGA,EAu1nBvG;AAv1nBuGA,MAAAA,EAu1nBvG,qBAv1nBuGA,EAu1nBvG;AAv1nBuGA,MAAAA,EAu1nBvG,qBAv1nBuGA,EAu1nBvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAv1nBuGA,MAAAA,EAu1nBvG;AAv1nBuGA,MAAAA,EAu1nBvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAv1nBuGA,EAu1nBvG,oBAA62D,CACr2Dk7B,qBADq2D,EAEr2D/2B,mBAFq2D,EAGr2DuoC,iBAHq2D,EAIr2D9jB,gBAJq2D,EAKr2DiD,oBALq2D,EAMr2DhR,cANq2D,EAOr2DtB,aAPq2D,EAQr2D6nB,gBARq2D,EASr2DQ,yBATq2D,EAUr2D5lB,WAVq2D,EAWr2DqnB,UAXq2D,EAYr2DU,cAZq2D,EAar2D;AACIvM,IAAAA,OAAO,EAAE7X,YADb;AAEI80B,IAAAA,QAAQ,EAAE70B;AAFd,GAbq2D,EAiBr2D;AACI4X,IAAAA,OAAO,EAAEpzB,WADb;AAEIqwC,IAAAA,QAAQ,EAAE;AAFd,GAjBq2D,EAqBr2DvR,aArBq2D,EAsBr2DkB,iBAtBq2D,EAuBr2DpsB,mBAvBq2D,EAwBr2DqsB,YAxBq2D,EAyBr2DI,iBAzBq2D,EA0Br2DU,aA1Bq2D,EA2Br2D33B,uBA3Bq2D,EA4Br2DX,gBA5Bq2D,EA6Br2D64B,qBA7Bq2D,EA8Br2D4B,kBA9Bq2D,EA+Br2D2C,kBA/Bq2D,EAgCr2DgB,eAhCq2D,EAiCr2DgB,cAjCq2D,EAkCr2DC,oBAlCq2D,EAmCr2D3pB,iBAnCq2D,EAoCr2DpH,SApCq2D,EAqCr2D0X,SArCq2D,EAsCr2Dja,oBAtCq2D,EAuCr2D40B,WAvCq2D,EAwCr2DrP,cAxCq2D,CAA72D,GAv1nBuGn+B,EAu1nBvG;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBA4C6B,+JA5C7B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBA+CuB,8GA/CvB;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBAqD4B,4GArD5B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBAwD+B,qHAxD/B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBA2D2B,yGA3D3B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBA8D2B,yGA9D3B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBAiEuB,gGAjEvB;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBAoEqB,2FApErB;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBAuEwB,gGAvExB;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBA0EuC,4GA1EvC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBA6E+B,6GA7E/B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBAgFoB,yEAhFpB;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBA+F8B,yFA/F9B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBAkGiC,oGAlGjC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBAqGkC,2FArGlC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBAwGqC,sGAxGrC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBA2GmC,8FA3GnC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBA8GsC,yGA9GtC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBAiHsC,uGAjHtC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBAoHoC,+FApHpC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBAuHuC,kHAvHvC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,gBA0HoC,iGA1HpC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBA6H+B,0HA7H/B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAgI8B,oGAhI9B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAmI+B,oHAnI/B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAsI8B,8FAtI9B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAyI0B,wFAzI1B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBA4I2B,2FA5I3B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBA+I8B,yFA/I9B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAkJwC,0HAlJxC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAqJiC,8FArJjC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAwJkC,iGAxJlC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBA2JyC,6HA3JzC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBA8JgC,8EA9JhC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAiK+B,kFAjK/B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAoK4B,0EApK5B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAuK2B,uEAvK3B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBA0KqB,uDA1KrB;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBA6KuB,+DA7KvB;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAmLqB,6FAnLrB;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAsLkB,oFAtLlB;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAyLoB,0FAzLpB;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBA4L+B,+HA5L/B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBA+LmB,uFA/LnB;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAkMqB,6FAlMrB;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAqMsB,mEArMtB;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAwM2B,iHAxM3B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBA2M4B,oHA3M5B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBA8MgC,kIA9MhC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAiNgC,kIAjNhC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAoN6B,iHApN7B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAuN8B,oHAvN9B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBA0N2B,yGA1N3B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBA6N0B,0HA7N1B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAgO0B,0HAhO1B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAmO0B,+FAnO1B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAsO4B,qGAtO5B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAyO6B,6FAzO7B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBA4O8B,0GA5O9B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBA+OoC,gHA/OpC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAkPoC,gHAlPpC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAqPoC,sGArPpC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBAwPoC,mHAxPpC;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBA2P2B,+IA3P3B;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA,iBA8PyB,yIA9PzB;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAkDwB,+EAA2D,iBAlDnF;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAmF8B,oGAA2B,iBAnFzD;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAsF6B,yFAAgC,iBAtF7D;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAyF8C,wHAAqC,iBAzFnF;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA4F0C,gHAAiC,iBA5F3E;AAAA;;AAAA;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAgLwB,oFAAgC,iBAhLxD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAv1nBuGA,MAAAA,EAi4nB/F,8BA1CR;AAv1nBuGA,MAAAA,EAi4nB/F,uBA1CR;AAv1nBuGA,MAAAA,EAuloB/F,wBAhQR;AAv1nBuGA,MAAAA,EAwloB/F,0FAjQR;AAv1nBuGA,MAAAA,EAyloB/F,4EAlQR;AAv1nBuGA,MAAAA,EAqmoB/F,kGA9QR;AAv1nBuGA,MAAAA,EA2moB/F,+BApRR;AAv1nBuGA,MAAAA,EAinoB/F,+EA1RR;AAv1nBuGA,MAAAA,EAowoB/F,+EA7aR;AAv1nBuGA,MAAAA,EAwzoB/F,4DAjeR;AAv1nBuGA,MAAAA,EA0zoB/F,eAneR;AAv1nBuGA,MAAAA,EA2zoB/F,8EApeR;AAv1nBuGA,MAAAA,EAs0oB/F,6FA/eR;AAAA;;AAAA;AAv1nBuGA,MAAAA,EAi4nB/F,8MA1CR;AAv1nBuGA,MAAAA,EAi4nB/F,eA1CR;AAv1nBuGA,MAAAA,EAwloBzC,aAjQ9D;AAv1nBuGA,MAAAA,EAwloBzC,uCAjQ9D;AAv1nBuGA,MAAAA,EA0loB1F,aAnQb;AAv1nBuGA,MAAAA,EA0loB1F,qCAnQb;AAv1nBuGA,MAAAA,EAsmoB1F,aA/Qb;AAv1nBuGA,MAAAA,EAsmoB1F,uCA/Qb;AAv1nBuGA,MAAAA,EA8moB3F,aAvRZ;AAv1nBuGA,MAAAA,EA8moB3F,+GAvRZ;AAv1nBuGA,MAAAA,EAinoBhF,aA1RvB;AAv1nBuGA,MAAAA,EAinoBhF,qCA1RvB;AAv1nBuGA,MAAAA,EAowoBhF,aA7avB;AAv1nBuGA,MAAAA,EAowoBhF,sCA7avB;AAv1nBuGA,MAAAA,EAwzoBrD,aAjelD;AAv1nBuGA,MAAAA,EAwzoBrD,gCAjelD;AAv1nBuGA,MAAAA,EA4zoB1F,aAreb;AAv1nBuGA,MAAAA,EA4zoB1F,wCAreb;AAv1nBuGA,MAAAA,EAs0oBnB,aA/epF;AAv1nBuGA,MAAAA,EAs0oBnB,0CA/epF;AAAA;AAAA;AAAA,eAgfu4D6rE,0BAhfv4D,EAgfu9DxnE,EAAE,CAACiqC,IAhf19D,EAgf4CH,gBAhf5C,EAgf8HsE,cAhf9H,EAgfwQ+E,mBAhfxQ,EAgfizBirB,aAhfjzB,EAgfqwE7gE,IAAI,CAACsvB,kBAhf1wE,EAgfo5E5C,oBAhfp5E,EAgf2nEoyC,2BAhf3nE,EAgfwiEV,cAhfxiE,EAgf4XvnB,iBAhf5X,EAgfmf6a,eAhfnf,EAgfouCwU,eAhfpuC,EAgfs4C5L,kBAhft4C,EAgfgyD6L,gBAhfhyD;AAAA;AAAA;;AAifA;AAAA,qDAx0oBuG/nE,EAw0oBvG,mBAA4FqsE,aAA5F,EAAuH,CAAC;AAC5G3/D,IAAAA,IAAI,EAAExM,SADsG;AAE5G0I,IAAAA,IAAI,EAAE,CAAC;AACC8tE,MAAAA,aAAa,EAAEh1E,iBAAiB,CAACi1E,IADlC;AAECC,MAAAA,QAAQ,EAAE,WAFX;AAGCl/C,MAAAA,SAAS,EAAE,CACPwD,qBADO,EAEP/2B,mBAFO,EAGPuoC,iBAHO,EAIP9jB,gBAJO,EAKPiD,oBALO,EAMPhR,cANO,EAOPtB,aAPO,EAQP6nB,gBARO,EASPQ,yBATO,EAUP5lB,WAVO,EAWPqnB,UAXO,EAYPU,cAZO,EAaP;AACIvM,QAAAA,OAAO,EAAE7X,YADb;AAEI80B,QAAAA,QAAQ,EAAE70B;AAFd,OAbO,EAiBP;AACI4X,QAAAA,OAAO,EAAEpzB,WADb;AAEIqwC,QAAAA,QAAQ,EAAE;AAFd,OAjBO,EAqBPvR,aArBO,EAsBPkB,iBAtBO,EAuBPpsB,mBAvBO,EAwBPqsB,YAxBO,EAyBPI,iBAzBO,EA0BPU,aA1BO,EA2BP33B,uBA3BO,EA4BPX,gBA5BO,EA6BP64B,qBA7BO,EA8BP4B,kBA9BO,EA+BP2C,kBA/BO,EAgCPgB,eAhCO,EAiCPgB,cAjCO,EAkCPC,oBAlCO,EAmCP3pB,iBAnCO,EAoCPpH,SApCO,EAqCP0X,SArCO,EAsCPja,oBAtCO,EAuCP40B,WAvCO,EAwCPrP,cAxCO,CAHZ;AA6CCxxB,MAAAA,QAAQ,EAAE,YA7CX;AA8CCC,MAAAA,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArfmB,KAAD;AAFsG,GAAD,CAAvH,EAyf4B,YAAY;AAAE,WAAO,CAAC;AAAEF,MAAAA,IAAI,EAAEwuB;AAAR,KAAD,EAAkC;AAAExuB,MAAAA,IAAI,EAAEkc;AAAR,KAAlC,EAA8D;AAAElc,MAAAA,IAAI,EAAEmf;AAAR,KAA9D,EAA8F;AAAEnf,MAAAA,IAAI,EAAE1M,EAAE,CAACogB;AAAX,KAA9F,EAAuH;AAAE1T,MAAAA,IAAI,EAAE00B;AAAR,KAAvH,EAAmJ;AAAE10B,MAAAA,IAAI,EAAE6M;AAAR,KAAnJ,EAA4K;AAAE7M,MAAAA,IAAI,EAAEk1B;AAAR,KAA5K,EAAiN;AAAEl1B,MAAAA,IAAI,EAAEmO;AAAR,KAAjN,EAA2O;AAAEnO,MAAAA,IAAI,EAAEsP;AAAR,KAA3O,EAAkQ;AAAEtP,MAAAA,IAAI,EAAEw2B;AAAR,KAAlQ,EAA2R;AAAEx2B,MAAAA,IAAI,EAAE22B;AAAR,KAA3R,EAAiT;AAAE32B,MAAAA,IAAI,EAAE03B;AAAR,KAAjT,EAA8U;AAAE13B,MAAAA,IAAI,EAAE1M,EAAE,CAACqgB;AAAX,KAA9U,EAAsW;AAAE3T,M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","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright © 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, HostBinding, Input, EventEmitter, Injectable, Optional, Inject, Directive, SkipSelf, QueryList, isDevMode, ContentChildren, ContentChild, forwardRef, Host, Output, SecurityContext, ChangeDetectionStrategy, ViewChild, HostListener, ViewChildren, Self, TemplateRef, Pipe, ViewEncapsulation, NgModule } from '@angular/core';\nimport * as i1$1 from '@progress/kendo-angular-common';\nimport { isDocumentAvailable, Keys, anyChanged, isChanged as isChanged$1, KendoInput, guid, hasObservers, ResizeSensorComponent, DraggableModule, EventsModule, ResizeSensorModule } from '@progress/kendo-angular-common';\nimport { merge, of, Subject, from, Subscription, interval, fromEvent, zip as zip$1, BehaviorSubject, Observable } from 'rxjs';\nimport { switchMap, take, map, filter, takeUntil, switchMapTo, delay, auditTime, distinctUntilChanged, tap, throttleTime, debounceTime, bufferCount } from 'rxjs/operators';\nimport * as i1 from '@progress/kendo-angular-l10n';\nimport { ComponentMessages, LocalizationService, L10N_PREFIX } from '@progress/kendo-angular-l10n';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4$2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormControl, FormGroup, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { orderBy, isCompositeFilterDescriptor, process, filterBy } from '@progress/kendo-data-query';\nimport * as i1$2 from '@progress/kendo-angular-popup';\nimport { PopupModule } from '@progress/kendo-angular-popup';\nimport * as i1$3 from '@angular/platform-browser';\nimport * as i4$1 from '@progress/kendo-angular-inputs';\nimport { NumericTextBoxComponent, InputsModule, NumericTextBoxModule } from '@progress/kendo-angular-inputs';\nimport * as i1$4 from '@progress/kendo-angular-dropdowns';\nimport { DropDownListComponent, DropDownListModule, AutoCompleteModule, DropDownsModule } from '@progress/kendo-angular-dropdowns';\nimport * as i5 from '@progress/kendo-angular-label';\nimport { LabelModule } from '@progress/kendo-angular-label';\nimport * as i4$3 from '@progress/kendo-angular-dateinputs';\nimport { DatePickerModule } from '@progress/kendo-angular-dateinputs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { getter } from '@progress/kendo-common';\nimport * as i1$5 from '@progress/kendo-angular-intl';\nimport { Button } from '@progress/kendo-angular-buttons';\nimport { PDFExportMarginComponent, PDFExportTemplateDirective, PDFExportComponent } from '@progress/kendo-angular-pdf-export';\nimport { saveAs } from '@progress/kendo-file-saver';\nimport { workbookOptions, toDataURL, ColumnBase as ColumnBase$1, ExcelExportModule } from '@progress/kendo-angular-excel-export';\n\nconst EMPTY_REGEX = /^\\s*$/;\n/**\n * @hidden\n */\nconst isPresent = (value) => value !== null && value !== undefined;\n/**\n * @hidden\n */\nconst isBlank = (value) => value === null || value === undefined;\n/**\n * @hidden\n */\nconst isArray = (value) => Array.isArray(value);\n/**\n * @hidden\n */\nconst isTruthy = (value) => !!value;\n/**\n * @hidden\n */\nconst isNullOrEmptyString = (value) => isBlank(value) || EMPTY_REGEX.test(value);\n/**\n * @hidden\n */\nconst observe = (list) => merge(of(list), list.changes);\n/**\n * @hidden\n */\nconst isUniversal = () => typeof document === 'undefined';\n/**\n * @hidden\n */\nconst isString = (value) => typeof value === 'string';\n/**\n * @hidden\n */\nconst isNumber = (value) => typeof value === \"number\" && !isNaN(value);\n/**\n * @hidden\n */\nconst extractFormat = (format) => {\n    if (isString(format) && !isNullOrEmptyString(format) && format.startsWith('{0:')) {\n        return format.slice(3, format.length - 1);\n    }\n    return format;\n};\n/**\n * @hidden\n */\nconst not = (fn) => (...args) => !fn.apply(null, args);\n/**\n * @hidden\n */\nconst or = (...conditions) => (value) => conditions.reduce((acc, x) => acc || x(value), false);\n/**\n * @hidden\n */\nconst and = (...conditions) => (value) => conditions.reduce((acc, x) => acc && x(value), true);\n/**\n * @hidden\n */\nconst Skip = new InjectionToken(\"Skip\");\n/**\n * @hidden\n */\nconst createPromise = () => {\n    let resolveFn, rejectFn;\n    const promise = new Promise((resolve, reject) => {\n        resolveFn = (data) => {\n            resolve(data);\n            return promise;\n        };\n        rejectFn = (data) => {\n            reject(data);\n            return promise;\n        };\n    });\n    promise.resolve = resolveFn;\n    promise.reject = rejectFn;\n    return promise;\n};\n/** @hidden */\nconst iterator = getIterator$1();\n// TODO: Move to kendo-common\nfunction getIterator$1() {\n    if (typeof Symbol === 'function' && Symbol.iterator) {\n        return Symbol.iterator;\n    }\n    const keys = Object.getOwnPropertyNames(Map.prototype);\n    const proto = Map.prototype;\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (key !== 'entries' && key !== 'size' && proto[key] === proto.entries) {\n            return key;\n        }\n    }\n}\nconst FRAME_DURATION = 1000 / 60;\nconst wnd = typeof window !== 'undefined' ? window : {};\n/** @hidden */\nconst requestAnimationFrame = wnd.requestAnimationFrame || wnd.msRequestAnimationFrame || (callback => setTimeout(callback, FRAME_DURATION));\n/** @hidden */\nconst cancelAnimationFrame = wnd.cancelAnimationFrame || wnd.msCancelRequestAnimationFrame || clearTimeout;\n/**\n * @hidden\n */\nconst detectIE = () => {\n    if (!isDocumentAvailable()) {\n        return;\n    }\n    const ua = window.navigator.userAgent;\n    const msie = ua.indexOf('MSIE ');\n    const trident = ua.indexOf('Trident/');\n    return msie > 0 || trident > 0;\n};\n/**\n * @hidden\n */\nconst nodesToArray = (nodes) => [].slice.call(nodes);\n/**\n * @hidden\n */\nconst replaceMessagePlaceholder = (message, name, value) => message.replace(new RegExp(`\\{\\\\s*${name}\\\\s*\\}`, 'g'), value);\n\n/**\n * Represents the Kendo UI GridSpacer component for Angular.\n * Used to give additional white space between the Pager inner elements,\n * and provides a way for customizing the spacer width.\n * It can also be used in any flex container within the Grid.\n */\nclass GridSpacerComponent {\n    constructor() {\n        this.hostClass = true;\n    }\n    get sizedClass() {\n        return isPresent(this.width);\n    }\n    get flexBasisStyle() {\n        return this.width;\n    }\n}\nGridSpacerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GridSpacerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGridSpacerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: GridSpacerComponent, selector: \"kendo-grid-spacer, kendo-pager-spacer\", inputs: { width: \"width\" }, host: { properties: { \"class.k-spacer\": \"this.hostClass\", \"class.k-spacer-sized\": \"this.sizedClass\", \"style.flexBasis\": \"this.flexBasisStyle\" } }, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GridSpacerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-spacer, kendo-pager-spacer',\n                    template: ``\n                }]\n        }], propDecorators: { hostClass: [{\n                type: HostBinding,\n                args: ['class.k-spacer']\n            }], sizedClass: [{\n                type: HostBinding,\n                args: ['class.k-spacer-sized']\n            }], flexBasisStyle: [{\n                type: HostBinding,\n                args: ['style.flexBasis']\n            }], width: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass DomEventsService {\n    constructor() {\n        this.cellClick = new EventEmitter();\n        this.cellMousedown = new EventEmitter();\n        this.cellMouseup = new EventEmitter();\n        this.click = new EventEmitter();\n        this.keydown = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.focusIn = new EventEmitter();\n        this.focusOut = new EventEmitter();\n        this.windowBlur = new EventEmitter();\n    }\n}\nDomEventsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DomEventsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDomEventsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DomEventsService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DomEventsService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @hidden\n */\nclass LocalDataChangesService {\n    constructor() {\n        this.changes = new EventEmitter();\n    }\n}\nLocalDataChangesService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalDataChangesService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nLocalDataChangesService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalDataChangesService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalDataChangesService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @hidden\n */\nclass GridFocusableElement {\n    constructor(navigationService) {\n        this.navigationService = navigationService;\n    }\n    focus() {\n        this.navigationService.focusCell();\n    }\n    toggle(active) {\n        this.navigationService.toggle(active);\n    }\n    canFocus() {\n        return true;\n    }\n    hasFocus() {\n        return this.navigationService.hasFocus();\n    }\n    isNavigable() {\n        return false;\n    }\n}\n\n/**\n * @hidden\n */\nclass NavigationCursor {\n    constructor(model) {\n        this.model = model;\n        this.changes = new Subject();\n        this.activeRow = 0;\n        this.activeCol = 0;\n        this.virtualCol = 0;\n        this.virtualRow = 0;\n    }\n    get row() {\n        return this.model.findRow(this.activeRow);\n    }\n    get cell() {\n        const row = this.row;\n        if (row) {\n            return this.model.findCell(this.activeCol, row);\n        }\n    }\n    get dataRowIndex() {\n        const row = this.row;\n        if (row) {\n            return row.dataRowIndex;\n        }\n        return -1;\n    }\n    /**\n     * Assumes and announces a new cursor position.\n     */\n    reset(rowIndex = this.activeRow, colIndex = this.activeCol, force = true) {\n        if (this.activate(rowIndex, colIndex, force)) {\n            this.virtualRow = rowIndex;\n            this.virtualCol = colIndex;\n        }\n    }\n    activate(rowIndex, colIndex, force) {\n        if (!force && this.isActiveRange(rowIndex, colIndex)) {\n            return false;\n        }\n        const prevColIndex = this.activeCol;\n        const prevRowIndex = this.activeRow;\n        this.activeCol = colIndex;\n        this.activeRow = rowIndex;\n        this.changes.next({\n            colIndex,\n            prevColIndex,\n            prevRowIndex,\n            rowIndex\n        });\n        return true;\n    }\n    isActiveRange(rowIndex, colIndex) {\n        if (this.activeRow !== rowIndex) {\n            return false;\n        }\n        const cell = this.cell;\n        const { start, end } = this.model.cellRange(cell);\n        return !Boolean(cell) || (start <= colIndex && colIndex <= end);\n    }\n    /**\n     * Assumes a new cursor position without announcing it.\n     */\n    assume(rowIndex = this.activeRow, colIndex = this.activeCol) {\n        this.virtualRow = rowIndex;\n        this.virtualCol = colIndex;\n        this.activeCol = colIndex;\n        this.activeRow = rowIndex;\n    }\n    /**\n     * Announces a current cursor position to subscribers.\n     */\n    announce() {\n        this.changes.next({\n            colIndex: this.activeCol,\n            prevColIndex: this.activeCol,\n            prevRowIndex: this.activeRow,\n            rowIndex: this.activeRow\n        });\n    }\n    activateVirtualCell(cell) {\n        const rowRange = this.model.rowRange(cell);\n        const cellRange = this.model.cellRange(cell);\n        const activeCol = this.activeCol;\n        const activeRow = this.activeRow;\n        if (rowRange.start <= activeRow && activeRow <= rowRange.end &&\n            cellRange.start <= activeCol && activeCol <= cellRange.end) {\n            this.activeRow = cell.rowIndex;\n            this.activeCol = cell.colIndex;\n            return true;\n        }\n    }\n    isActive(rowIndex, colIndex) {\n        return this.activeCol === colIndex && this.activeRow === rowIndex;\n    }\n    moveUp(offset = 1) {\n        return this.offsetRow(-offset);\n    }\n    moveDown(offset = 1) {\n        return this.offsetRow(offset);\n    }\n    moveLeft(offset = 1) {\n        return this.offsetCol(-offset);\n    }\n    moveRight(offset = 1) {\n        return this.offsetCol(offset);\n    }\n    lastCellIndex(row) {\n        return this.metadata.columns.leafColumnsToRender.length - 1 +\n            (this.metadata.hasDetailTemplate && (!row || !row.groupItem) ? 1 : 0);\n    }\n    offsetCol(offset) {\n        const prevRow = this.model.findRow(this.virtualRow);\n        const lastIndex = this.lastCellIndex(prevRow);\n        const virtualCol = this.virtualCol;\n        this.virtualCol = Math.max(0, Math.min(virtualCol + offset, lastIndex));\n        let nextColIndex = this.virtualCol;\n        let nextRowIndex = this.virtualRow;\n        let cell = this.model.findCell(this.virtualCol, prevRow);\n        if (!cell && this.metadata.virtualColumns) {\n            return this.activate(nextRowIndex, nextColIndex);\n        }\n        if (cell.colSpan > 1 && cell.colIndex <= virtualCol && virtualCol < cell.colIndex + cell.colSpan) {\n            nextColIndex = offset > 0 ? Math.min(cell.colIndex + cell.colSpan, lastIndex) : Math.max(0, cell.colIndex + offset);\n            const nextCell = this.model.findCell(nextColIndex, prevRow);\n            if (cell !== nextCell) {\n                cell = nextCell;\n                this.virtualCol = cell.colIndex;\n            }\n            else {\n                this.virtualCol = virtualCol;\n            }\n        }\n        return this.activate(cell.rowIndex, cell.colIndex);\n    }\n    offsetRow(offset) {\n        let nextColIndex = this.virtualCol;\n        if (this.metadata && this.metadata.isVirtual) {\n            const maxIndex = this.metadata.maxLogicalRowIndex;\n            let nextIndex = Math.max(0, Math.min(this.activeRow + offset, maxIndex));\n            if (this.metadata.hasDetailTemplate && !this.model.findRow(nextIndex)) {\n                nextIndex = offset > 0 ? nextIndex + 1 : nextIndex - 1;\n                nextIndex = Math.max(0, Math.min(nextIndex, maxIndex));\n            }\n            if (this.metadata.hasDetailTemplate && nextIndex === maxIndex) {\n                if (this.model.lastRow.index !== maxIndex) {\n                    // Don't attempt to navigate past the last collapsed row.\n                    nextIndex--;\n                }\n            }\n            const nextRow = this.model.findRow(nextIndex);\n            if (nextRow) {\n                // remove duplication\n                let cell = this.model.findCell(this.virtualCol, nextRow);\n                if (cell.rowIndex <= this.virtualRow && offset > 0 && cell.rowSpan > 1) {\n                    cell = this.model.findCell(this.virtualCol, this.model.findRow(cell.rowIndex + cell.rowSpan - 1 + offset));\n                }\n                nextIndex = cell.rowIndex;\n                nextColIndex = cell.colIndex;\n            }\n            this.virtualRow = nextIndex;\n            return this.activate(nextIndex, nextColIndex);\n        }\n        const nextRow = this.model.findRow(this.virtualRow + offset) || this.model.nextRow(this.virtualRow, offset);\n        if (!nextRow) {\n            return false;\n        }\n        let cell = this.model.findCell(this.virtualCol, nextRow);\n        if (cell && cell.rowIndex <= this.virtualRow && offset > 0 && cell.rowSpan > 1) { // spanned cell go to next\n            const nextPos = cell.rowIndex + cell.rowSpan - 1 + offset;\n            cell = this.model.findCell(this.virtualCol, this.model.findRow(nextPos));\n        }\n        if (!cell && this.metadata.virtualColumns) {\n            return this.activate(this.virtualRow + offset, this.virtualCol);\n        }\n        this.virtualRow = cell.rowIndex;\n        return this.activate(this.virtualRow, cell.colIndex);\n    }\n}\n\n/**\n * @hidden\n */\nclass ItemMap {\n    constructor() {\n        this.count = 0;\n        this.items = {};\n    }\n    get first() {\n        if (this.count > 0) {\n            let result;\n            this.forEach(item => {\n                result = item;\n                return true;\n            });\n            return result;\n        }\n    }\n    get last() {\n        if (this.count > 0) {\n            const keys = Object.keys(this.items);\n            return this.items[keys[keys.length - 1]];\n        }\n    }\n    removeItem(key) {\n        if (this.items[key]) {\n            delete this.items[key];\n            this.count--;\n        }\n    }\n    setItem(key, item) {\n        if (!this.items[key]) {\n            this.count++;\n        }\n        this.items[key] = item;\n    }\n    getItem(key) {\n        return this.items[key];\n    }\n    toArray() {\n        const result = [];\n        this.forEach(item => {\n            result.push(item);\n        });\n        return result;\n    }\n    forEach(callback) {\n        for (let key in this.items) {\n            if (this.items.hasOwnProperty(key) && callback(this.items[key])) {\n                return this.items[key];\n            }\n        }\n    }\n    find(callback) {\n        return this.forEach(callback);\n    }\n}\n\n/**\n * @hidden\n *\n * Contains information for the currently rendered rows and cells.\n */\nclass NavigationModel {\n    constructor() {\n        this.rows = new ItemMap();\n    }\n    get firstRow() {\n        return this.rows.first;\n    }\n    get lastRow() {\n        return this.rows.last;\n    }\n    registerCell(cell) {\n        const row = this.rows.getItem(cell.logicalRowIndex);\n        if (!row) {\n            return;\n        }\n        const colIndex = cell.logicalColIndex;\n        const modelCell = {\n            uid: cell.uid,\n            colIndex,\n            rowIndex: row.index,\n            colSpan: cell.colSpan,\n            rowSpan: cell.rowSpan,\n            detailExpandCell: cell.detailExpandCell,\n            dataItem: row.dataItem,\n            dataRowIndex: row.dataRowIndex,\n            focusGroup: cell.focusGroup\n        };\n        row.cells.setItem(colIndex, modelCell);\n        if (cell.groupItem) {\n            row.groupItem = cell.groupItem;\n        }\n        return modelCell;\n    }\n    unregisterCell(index, rowIndex, cell) {\n        const row = this.rows.getItem(rowIndex);\n        if (row) {\n            const match = row.cells.getItem(index);\n            if (match && match.uid === cell.uid) {\n                row.cells.removeItem(index);\n            }\n        }\n    }\n    registerRow(row) {\n        const modelRow = {\n            uid: row.uid,\n            index: row.logicalRowIndex,\n            dataItem: row.dataItem,\n            dataRowIndex: row.dataRowIndex,\n            cells: new ItemMap()\n        };\n        this.rows.setItem(row.logicalRowIndex, modelRow);\n    }\n    updateRow(row) {\n        const current = this.rows.getItem(row.logicalRowIndex);\n        if (current) {\n            Object.assign(current, {\n                dataItem: row.dataItem,\n                dataRowIndex: row.dataRowIndex\n            });\n        }\n    }\n    unregisterRow(index, row) {\n        const match = this.rows.getItem(index);\n        if (match && match.uid === row.uid) {\n            this.rows.removeItem(index);\n        }\n    }\n    cellRange(cell) {\n        if (cell) {\n            const start = cell.colIndex;\n            const end = cell.colIndex + (cell.colSpan || 1) - 1;\n            return {\n                start,\n                end\n            };\n        }\n        return {};\n    }\n    rowRange(cell) {\n        if (cell) {\n            const start = cell.rowIndex;\n            const end = cell.rowIndex + (cell.rowSpan || 1) - 1;\n            return {\n                start,\n                end\n            };\n        }\n        return {};\n    }\n    nextRow(rowIndex, offset) {\n        const rows = this.rows.toArray();\n        const row = this.rows.getItem(rowIndex);\n        const position = rows.indexOf(row);\n        const next = rows[position + offset];\n        return next;\n    }\n    findRow(index) {\n        return this.rows.getItem(index);\n    }\n    findCell(index, row) {\n        if (!row) {\n            return;\n        }\n        const rowIndex = row.index;\n        let cell = row.cells.getItem(index);\n        let currentIndex = rowIndex;\n        while (!cell && row) {\n            row = this.rows.getItem(currentIndex);\n            cell = this.rowCell(index, row);\n            currentIndex--;\n        }\n        if (cell && rowIndex <= row.index + (cell.rowSpan || 1) - 1) {\n            return cell;\n        }\n    }\n    rowCell(index, row) {\n        if (!row || !row.cells.count) {\n            return;\n        }\n        const firstCell = row.cells.first;\n        let cell, currentIndex = index;\n        while (!cell && currentIndex >= firstCell.colIndex) {\n            cell = row.cells.getItem(currentIndex);\n            currentIndex--;\n        }\n        if (cell && index <= cell.colIndex + (cell.colSpan || 1) - 1) {\n            return cell;\n        }\n    }\n}\n\nconst focusableRegex = /^(?:a|input|select|option|textarea|button|object)$/i;\nconst NODE_NAME_PREDICATES = {};\nconst toClassList = (classNames) => String(classNames).trim().split(' ');\n/**\n * @hidden\n */\nconst hasClasses = (element, classNames) => {\n    const namesList = toClassList(classNames);\n    return Boolean(toClassList(element.className).find((className) => namesList.indexOf(className) >= 0));\n};\n/**\n * @hidden\n */\nconst matchesClasses = (classNames) => (element) => hasClasses(element, classNames);\n/**\n * @hidden\n */\nconst matchesNodeName = (nodeName) => {\n    if (!NODE_NAME_PREDICATES[nodeName]) {\n        NODE_NAME_PREDICATES[nodeName] = (element) => String(element.nodeName).toLowerCase() === nodeName.toLowerCase();\n    }\n    return NODE_NAME_PREDICATES[nodeName];\n};\n/**\n * @hidden\n */\nconst closest = (node, predicate) => {\n    while (node && !predicate(node)) {\n        node = node.parentNode;\n    }\n    return node;\n};\n/**\n * @hidden\n */\nconst closestInScope = (node, predicate, scope) => {\n    while (node && node !== scope && !predicate(node)) {\n        node = node.parentNode;\n    }\n    if (node !== scope) {\n        return node;\n    }\n};\n/**\n * @hidden\n */\nconst contains$2 = (parent, node, matchSelf = false) => {\n    const outside = !closest(node, (child) => child === parent);\n    if (outside) {\n        return false;\n    }\n    const el = closest(node, (child) => child === node);\n    return el && (matchSelf || el !== parent);\n};\n/**\n * @hidden\n */\nconst isVisible = (element) => {\n    const rect = element.getBoundingClientRect();\n    const hasSize = rect.width > 0 && rect.height > 0;\n    const hasPosition = rect.x !== 0 && rect.y !== 0;\n    // Elements can have zero size due to styling, but they will still count as visible.\n    // For example, the selection checkbox has no size, but is made visible through styling.\n    return (hasSize || hasPosition) && window.getComputedStyle(element).visibility !== 'hidden';\n};\n/**\n * @hidden\n */\nconst isFocusable = (element) => {\n    if (!element.tagName) {\n        return false;\n    }\n    const tagName = element.tagName.toLowerCase();\n    const hasTabIndex = Boolean(element.getAttribute('tabIndex'));\n    const focusable = !element.disabled && focusableRegex.test(tagName);\n    return focusable || hasTabIndex;\n};\n/**\n * @hidden\n */\nconst isFocusableWithTabKey = (element, checkVisibility = true) => {\n    if (!isFocusable(element)) {\n        return false;\n    }\n    const visible = !checkVisibility || isVisible(element);\n    const ariaHidden = element.getAttribute('aria-hidden') === 'true';\n    const tabIndex = element.getAttribute('tabIndex');\n    return visible && !ariaHidden && tabIndex !== '-1';\n};\n/**\n * @hidden\n */\nconst findElement = (node, predicate, matchSelf = true) => {\n    if (!node) {\n        return;\n    }\n    if (matchSelf && predicate(node)) {\n        return node;\n    }\n    node = node.firstChild;\n    while (node) {\n        if (node.nodeType === 1) {\n            const element = findElement(node, predicate);\n            if (element) {\n                return element;\n            }\n        }\n        node = node.nextSibling;\n    }\n};\n/**\n * @hidden\n */\nconst findLastElement = (node, predicate, matchSelf = true) => {\n    let last = null;\n    findElement(node, (node) => {\n        if (predicate(node)) {\n            last = node;\n        }\n        return false;\n    }, matchSelf);\n    return last;\n};\n/**\n * @hidden\n */\nconst findFocusable = (element, checkVisibility = true) => {\n    return findElement(element, (node) => isFocusableWithTabKey(node, checkVisibility));\n};\n/**\n * @hidden\n */\nconst findFocusableChild = (element, checkVisibility = true) => {\n    return findElement(element, (node) => isFocusableWithTabKey(node, checkVisibility), false);\n};\n/**\n * @hidden\n */\nconst findLastFocusableChild = (element, checkVisibility = true) => {\n    return findLastElement(element, (node) => isFocusableWithTabKey(node, checkVisibility), false);\n};\n/**\n * @hidden\n */\nfunction rtlScrollPosition(position, element, initial) {\n    let result = position;\n    if (initial < 0) {\n        result = -position;\n    }\n    else if (initial > 0) {\n        result = element.scrollWidth - element.offsetWidth - position;\n    }\n    return result;\n}\n\n/**\n * @hidden\n */\nclass PagerContextService {\n    constructor() {\n        this.changes = new Subject();\n        this.pageChange = new Subject();\n    }\n    get currentPage() {\n        return this.skip / this.pageSize;\n    }\n    notifyChanges(changes) {\n        this.total = changes.total;\n        this.pageSize = changes.pageSize;\n        this.skip = changes.skip;\n        this.changes.next(changes);\n    }\n    changePage(page) {\n        this.pageChange.next({ skip: page * this.pageSize, take: this.pageSize });\n    }\n    changePageSize(value) {\n        this.pageChange.next({ skip: 0, take: value });\n    }\n    nextPage() {\n        const nextPage = this.currentPage + 1;\n        if (nextPage * this.pageSize < this.total) {\n            this.changePage(nextPage);\n        }\n    }\n    prevPage() {\n        const prevPage = this.currentPage - 1;\n        if (prevPage * this.pageSize >= 0) {\n            this.changePage(prevPage);\n        }\n    }\n}\n\n/**\n * @hidden\n */\nclass ScrollRequestService {\n    constructor() {\n        this.requests = new Subject();\n    }\n    scrollTo(request) {\n        this.requests.next(request);\n    }\n}\nScrollRequestService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ScrollRequestService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nScrollRequestService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ScrollRequestService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ScrollRequestService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @hidden\n */\nconst getGroupRowArgs = (groupItem) => {\n    if (!isPresent(groupItem)) {\n        return null;\n    }\n    return { group: groupItem.data, groupIndex: groupItem.index, parentGroup: getGroupRowArgs(groupItem.parentGroup) };\n};\n\nconst isChildIndex = (targetIndex, parentIndex) => parentIndex !== targetIndex && targetIndex.startsWith(parentIndex);\n/**\n * @hidden\n */\nclass GroupsService {\n    constructor() {\n        this.changes = new Subject();\n        this.rowState = new Set();\n    }\n    reset() {\n        this.rowState.clear();\n    }\n    ngOnDestroy() {\n        this.reset();\n    }\n    isExpanded(groupArgs) {\n        if (this.userCallback) {\n            return this.userCallback(groupArgs);\n        }\n        return !this.rowState.has(groupArgs.groupIndex);\n    }\n    isInExpandedGroup(groupItem) {\n        let expanded = true;\n        while (groupItem && expanded) {\n            expanded = this.isExpanded({\n                group: groupItem.data,\n                groupIndex: groupItem.index,\n                parentGroup: getGroupRowArgs(groupItem.parentGroup)\n            });\n            groupItem = groupItem.parentGroup;\n        }\n        return expanded;\n    }\n    toggleRow(groupItem) {\n        const parentGroup = getGroupRowArgs(groupItem.parentGroup);\n        const expand = !this.isExpanded({ group: groupItem.data, groupIndex: groupItem.index, parentGroup });\n        this.changes.next({ group: groupItem.data, expand, groupIndex: groupItem.index, parentGroup });\n        // if usercallback is given, the rowState should be ignored\n        if (this.userCallback) {\n            return;\n        }\n        if (expand) {\n            this.rowState.delete(groupItem.index);\n        }\n        else {\n            this.rowState.add(groupItem.index);\n        }\n    }\n    expandChildren(parentIndex) {\n        this.rowState.forEach(index => isChildIndex(index, parentIndex) && this.rowState.delete(index));\n    }\n}\nGroupsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nGroupsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupsService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupsService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @hidden\n */\nclass PreventableEvent {\n    constructor() {\n        this.prevented = false;\n    }\n    /**\n     * Prevents the default action for a specified event.\n     * In this way, the source component suppresses\n     * the built-in behavior that follows the event.\n     */\n    preventDefault() {\n        this.prevented = true;\n    }\n    /**\n     * Returns `true` if the event was prevented\n     * by any of its subscribers.\n     *\n     * @returns `true` if the default action was prevented.\n     * Otherwise, returns `false`.\n     */\n    isDefaultPrevented() {\n        return this.prevented;\n    }\n}\n\n/**\n * Arguments for the `detailCollapse` event.\n */\nclass DetailCollapseEvent extends PreventableEvent {\n    constructor(args) {\n        super();\n        Object.assign(this, args);\n    }\n}\n\n/**\n * Arguments for the `detailExpand` event.\n */\nclass DetailExpandEvent extends PreventableEvent {\n    constructor(args) {\n        super();\n        Object.assign(this, args);\n    }\n}\n\n/**\n * @hidden\n */\nclass DetailsService {\n    constructor() {\n        this.changes = new Subject();\n        this.rowState = new Set();\n    }\n    ngOnDestroy() {\n        this.rowState.clear();\n    }\n    isExpanded(index, dataItem) {\n        if (this.userCallback) {\n            return this.userCallback({ index, dataItem });\n        }\n        return this.rowState.has(index);\n    }\n    toggleRow(index, dataItem) {\n        if (this.isExpanded(index, dataItem)) {\n            this.collapseRow(index, dataItem);\n        }\n        else {\n            this.expandRow(index, dataItem);\n        }\n    }\n    expandRow(index, dataItem) {\n        const prevented = this.emitEvent({ dataItem, index, expand: true });\n        if (!prevented && !this.userCallback) {\n            this.rowState.add(index);\n        }\n    }\n    collapseRow(index, dataItem) {\n        const prevented = this.emitEvent({ dataItem, index, expand: false });\n        if (!prevented && !this.userCallback) {\n            this.rowState.delete(index);\n        }\n    }\n    emitEvent(args) {\n        const eventArg = new (args.expand ? DetailExpandEvent : DetailCollapseEvent)(args);\n        this.changes.next(eventArg);\n        return eventArg.isDefaultPrevented();\n    }\n}\nDetailsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DetailsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDetailsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DetailsService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DetailsService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @hidden\n */\nconst FOCUS_ROOT_ACTIVE = new InjectionToken('focus-root-initial-active-state');\n/**\n * @hidden\n */\nclass FocusRoot {\n    constructor(active = false) {\n        this.active = active;\n        this.groups = new Set();\n    }\n    registerGroup(group) {\n        if (this.active) {\n            this.groups.add(group);\n        }\n    }\n    unregisterGroup(group) {\n        if (this.active) {\n            this.groups.delete(group);\n        }\n    }\n    activate() {\n        if (this.active) {\n            this.groups.forEach(f => f.activate());\n        }\n    }\n    deactivate() {\n        if (this.active) {\n            this.groups.forEach(f => f.deactivate());\n        }\n    }\n}\nFocusRoot.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FocusRoot, deps: [{ token: FOCUS_ROOT_ACTIVE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nFocusRoot.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FocusRoot });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FocusRoot, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_ROOT_ACTIVE]\n                }] }]; } });\n\n/**\n * Arguments for the `cellClose` event.\n */\nclass CellCloseEvent extends PreventableEvent {\n    constructor(options) {\n        super();\n        /**\n         * @hidden\n         */\n        this.action = 'cellClose';\n        Object.assign(this, options);\n    }\n}\n\n/**\n * @hidden\n */\nconst isEqual = (index) => (item) => item.index === index;\n/**\n * @hidden\n */\nconst isNotEqual = (index) => (item) => item.index !== index;\n/**\n * @hidden\n */\nconst isNewRow = (index) => index === -1 || index === undefined;\n/**\n * @hidden\n */\nclass EditService {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.changes = new EventEmitter();\n        this.editedIndices = [];\n        this.keepEditCell = false;\n        this.closingCell = false;\n        this.changedSource = new Subject();\n        this.changed = this.changedSource.asObservable().pipe(switchMap(() => this.ngZone.onStable.asObservable().pipe(take(1))));\n    }\n    editRow(index, group = undefined) {\n        this.editedIndices.push({ index, group });\n        this.onChanged();\n    }\n    addRow(group) {\n        this.newItemGroup = { group };\n        this.onChanged();\n    }\n    editCell(rowIndex, column, group) {\n        if (isNewRow(rowIndex) || column.editable === false || !(column.editTemplate || column.field)) {\n            return;\n        }\n        this.preventCellClose();\n        if (!this.closeCell()) {\n            this.editRow(rowIndex, group);\n            this.column = column;\n            this.onChanged();\n        }\n    }\n    isEditing() {\n        return this.editedIndices.length > 0;\n    }\n    isEditingCell() {\n        return this.isEditing() && this.column !== undefined;\n    }\n    get hasNewItem() {\n        return isPresent(this.newItemGroup);\n    }\n    get newDataItem() {\n        if (this.hasNewItem) {\n            return this.newItemGroup.group.value;\n        }\n        return {};\n    }\n    close(index) {\n        if (isNewRow(index)) {\n            this.newItemGroup = undefined;\n            return;\n        }\n        this.editedIndices = this.editedIndices.filter(isNotEqual(index));\n        delete this.column;\n        this.onChanged();\n    }\n    closeCell(originalEvent) {\n        if (this.column && !this.closingCell) {\n            return this.ngZone.run(() => {\n                const { index, group } = this.editedIndices[0];\n                const args = new CellCloseEvent({\n                    column: this.column,\n                    formGroup: group,\n                    originalEvent: originalEvent,\n                    rowIndex: index\n                });\n                this.closingCell = true;\n                this.changes.emit(args);\n                this.closingCell = false;\n                if (!args.isDefaultPrevented()) {\n                    this.cancelCell();\n                }\n                return args.isDefaultPrevented();\n            });\n        }\n    }\n    cancelCell() {\n        if (this.column) {\n            this.editedIndices = [];\n            delete this.column;\n            this.onChanged();\n        }\n    }\n    shouldCloseCell() {\n        return this.column && !this.keepEditCell;\n    }\n    preventCellClose() {\n        this.ngZone.runOutsideAngular(() => {\n            window.clearTimeout(this.keepCellTimeout);\n            this.keepEditCell = true;\n            this.keepCellTimeout = window.setTimeout(() => {\n                this.keepEditCell = false;\n            }, 0);\n        });\n    }\n    context(index) {\n        if (isNewRow(index)) {\n            return this.newItemGroup;\n        }\n        return this.findByIndex(index);\n    }\n    columnContext(index, column) {\n        if (isNewRow(index)) {\n            return this.newItemGroup;\n        }\n        if (!this.column || column === this.column) {\n            return this.findByIndex(index);\n        }\n    }\n    isEdited(index) {\n        if (isNewRow(index) && isPresent(this.newItemGroup)) {\n            return true;\n        }\n        return !this.column && isPresent(this.findByIndex(index));\n    }\n    hasEdited(index) {\n        return isPresent(this.context(index));\n    }\n    isEditedColumn(index, column) {\n        if (this.column && this.column === column) {\n            return isPresent(this.findByIndex(index));\n        }\n        return false;\n    }\n    beginEdit(rowIndex) {\n        this.changes.emit({ action: 'edit', rowIndex });\n    }\n    beginAdd() {\n        this.changes.emit({ action: 'add' });\n    }\n    endEdit(rowIndex) {\n        const { group: formGroup } = this.context(rowIndex);\n        this.changes.emit({ action: 'cancel', rowIndex, formGroup, isNew: isNewRow(rowIndex) });\n    }\n    save(rowIndex) {\n        const { group: formGroup } = this.context(rowIndex);\n        this.changes.emit({ action: 'save', rowIndex, formGroup, isNew: isNewRow(rowIndex) });\n    }\n    remove(rowIndex) {\n        this.changes.emit({ action: 'remove', rowIndex });\n    }\n    findByIndex(index) {\n        return this.editedIndices.find(isEqual(index));\n    }\n    onChanged() {\n        this.ngZone.runOutsideAngular(() => {\n            this.changedSource.next();\n        });\n    }\n}\nEditService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: EditService, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nEditService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: EditService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: EditService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\nconst isButton = matchesNodeName('button');\nconst isInputTag = matchesNodeName('input');\nconst navigableRegex = /(button|checkbox|color|file|radio|reset|submit)/i;\nconst isNavigableInput = element => isInputTag(element) && navigableRegex.test(element.type);\nconst isNavigable = element => !element.disabled && (isButton(element) || isNavigableInput(element));\n/**\n * @hidden\n */\nclass DefaultFocusableElement {\n    constructor(host, renderer) {\n        this.renderer = renderer;\n        this.element = host.nativeElement;\n        this.focusable = findFocusable(this.element, false) || this.element;\n    }\n    get enabled() {\n        return this.focusable && !this.focusable.disabled;\n    }\n    get visible() {\n        return this.focusable && isVisible(this.focusable);\n    }\n    isNavigable() {\n        return this.canFocus() && isNavigable(this.element);\n    }\n    toggle(active) {\n        this.renderer.setAttribute(this.focusable, 'tabIndex', active ? '0' : '-1');\n    }\n    focus() {\n        if (this.focusable) {\n            this.focusable.focus();\n        }\n    }\n    canFocus() {\n        return this.visible && this.enabled;\n    }\n    hasFocus() {\n        return document.activeElement !== this.element && closest(document.activeElement, e => e === this.element);\n    }\n}\n\n/**\n * @hidden\n */\nconst CELL_CONTEXT = new InjectionToken('grid-cell-context');\n/**\n * @hidden\n */\nconst EMPTY_CELL_CONTEXT = {};\n\n/**\n * A directive that controls the way focusable elements receive\n * [focus in a navigable Grid]({% slug keyboard_navigation_grid %}).\n *\n * @example\n * ```ts-preview\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *      <input type=\"text\" placeholder=\"Tab stop #0\" style=\"margin-bottom: 8px;\" />\n *      <kendo-grid [data]=\"data\" [navigable]=\"true\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" [width]=\"100\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\" [width]=\"150\">\n *          </kendo-grid-column>\n *          <kendo-grid-column>\n *              <ng-template kendoGridCellTemplate let-dataItem>\n *                  <!-- The first focusable element will be focused when pressing Enter on the cell -->\n *                  <input type=\"text\" kendoGridFocusable [value]=\"dataItem.ProductName\" style=\"margin-right: 8px;\" />\n *                  <button kendoGridFocusable>Update</button>\n *              </ng-template>\n *          </kendo-grid-column>\n *          <kendo-grid-column [width]=\"100\">\n *              <ng-template kendoGridCellTemplate>\n *                  <!-- A single focusable element will be focused during navigation -->\n *                  <button kendoGridFocusable>Delete</button>\n *              </ng-template>\n *          </kendo-grid-column>\n *      </kendo-grid>\n *      <input type=\"text\" placeholder=\"Tab stop #2\" style=\"margin-top: 8px;\" />\n *    `\n * })\n *\n * class AppComponent {\n *     public readonly data: any = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": true\n *     }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": false\n *     }];\n * }\n * ```\n */\nclass FocusableDirective {\n    constructor(cellContext, hostElement, renderer) {\n        this.cellContext = cellContext;\n        this.hostElement = hostElement;\n        this.renderer = renderer;\n        this.active = true;\n        this._enabled = true;\n        if (this.cellContext) {\n            this.group = this.cellContext.focusGroup;\n        }\n        if (this.group) {\n            this.group.registerElement(this);\n        }\n    }\n    /**\n     * @hidden\n     */\n    set enabled(value) {\n        if (value === '') {\n            value = true;\n        }\n        else {\n            value = Boolean(value);\n        }\n        if (value !== this.enabled) {\n            this._enabled = value;\n            if (this.element) {\n                this.element.toggle(this.active && value);\n            }\n        }\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    ngAfterViewInit() {\n        if (!this.element) {\n            this.element = new DefaultFocusableElement(this.hostElement, this.renderer);\n        }\n        if (this.group && this.element) {\n            this.toggle(this.group.isActive);\n        }\n    }\n    ngOnDestroy() {\n        if (this.group) {\n            this.group.unregisterElement(this);\n        }\n    }\n    /**\n     * @hidden\n     */\n    toggle(active) {\n        if (this.element && active !== this.active) {\n            this.element.toggle(this.enabled && active);\n            this.active = active;\n        }\n    }\n    /**\n     * @hidden\n     */\n    canFocus() {\n        return this.enabled && this.element && this.element.canFocus();\n    }\n    /**\n     * @hidden\n     */\n    isNavigable() {\n        return this.enabled && this.element && this.element.isNavigable();\n    }\n    /**\n     * @hidden\n     */\n    focus() {\n        if (this.enabled && this.element) {\n            this.element.focus();\n        }\n    }\n    /**\n     * @hidden\n     */\n    hasFocus() {\n        return this.enabled && this.element && this.element.hasFocus();\n    }\n    /**\n     * @hidden\n     */\n    registerElement(element) {\n        this.element = element;\n    }\n}\nFocusableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FocusableDirective, deps: [{ token: CELL_CONTEXT, optional: true, skipSelf: true }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nFocusableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FocusableDirective, selector: \"[kendoGridFocusable],\\n        [kendoGridEditCommand],\\n        [kendoGridRemoveCommand],\\n        [kendoGridSaveCommand],\\n        [kendoGridCancelCommand],\\n        [kendoGridSelectionCheckbox]\\n    \", inputs: { enabled: [\"kendoGridFocusable\", \"enabled\"] }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FocusableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridFocusable]' + `,\n        [kendoGridEditCommand],\n        [kendoGridRemoveCommand],\n        [kendoGridSaveCommand],\n        [kendoGridCancelCommand],\n        [kendoGridSelectionCheckbox]\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CELL_CONTEXT]\n                }, {\n                    type: SkipSelf\n                }] }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { enabled: [{\n                type: Input,\n                args: ['kendoGridFocusable']\n            }] } });\n\nconst isInSameGrid = (element, gridElement) => closest(element, matchesNodeName('kendo-grid')) === gridElement;\nconst matchHeaderCell = matchesNodeName('th');\nconst matchDataCell = matchesNodeName('td');\nconst matchFooterCell = matchesNodeName('.k-grid-footer td');\nconst matchCell = (element) => matchDataCell(element) || matchHeaderCell(element) || matchFooterCell(element);\nconst gridCell = (element, gridElement) => {\n    let target = closest(element, matchCell);\n    while (target && !isInSameGrid(target, gridElement)) {\n        target = closest(target.parentElement, matchCell);\n    }\n    return target;\n};\nconst targetCell = (target, gridElement) => {\n    const cell = gridCell(target, gridElement);\n    const row = closest(cell, matchesNodeName('tr'));\n    if (cell && row) {\n        let rowIndex = row.getAttribute('aria-rowindex');\n        rowIndex = rowIndex ? parseInt(rowIndex, 10) - 1 : null;\n        let colIndex = cell.getAttribute('aria-colindex');\n        colIndex = colIndex ? parseInt(colIndex, 10) - 1 : null;\n        if (rowIndex !== null && colIndex !== null) {\n            return { colIndex, rowIndex, element: cell };\n        }\n    }\n};\nconst isArrowKey = keyCode => keyCode === Keys.ArrowLeft || keyCode === Keys.ArrowRight ||\n    keyCode === Keys.ArrowUp || keyCode === Keys.ArrowDown;\nconst isNavigationKey = keyCode => isArrowKey(keyCode) ||\n    keyCode === Keys.PageUp || keyCode === Keys.PageDown ||\n    keyCode === Keys.Home || keyCode === Keys.End;\nconst isInput = matchesNodeName('input');\nconst isTextInput = element => element && isInput(element) && element.type.toLowerCase() === 'text';\nconst isPrintableCharacter = (str) => str.length === 1 && str.match(/\\S/);\n/**\n * @hidden\n */\nclass NavigationViewport {\n    constructor(firstItemIndex, lastItemIndex) {\n        this.firstItemIndex = firstItemIndex;\n        this.lastItemIndex = lastItemIndex;\n    }\n    containsRow(dataRowIndex) {\n        const headerRow = dataRowIndex < 0;\n        return headerRow || (dataRowIndex >= this.firstItemIndex && dataRowIndex <= this.lastItemIndex);\n    }\n    intersects(start, end) {\n        return (start <= this.firstItemIndex && this.lastItemIndex <= end) ||\n            (this.firstItemIndex <= start && start <= this.lastItemIndex) ||\n            (this.firstItemIndex <= end && end <= this.lastItemIndex);\n    }\n}\n/**\n * @hidden\n */\nclass NavigationService {\n    constructor(zone, domEvents, pagerContextService, scrollRequestService, groupsService, detailsService, focusRoot, editService, cd, localization, focusableParent) {\n        this.zone = zone;\n        this.domEvents = domEvents;\n        this.pagerContextService = pagerContextService;\n        this.scrollRequestService = scrollRequestService;\n        this.groupsService = groupsService;\n        this.detailsService = detailsService;\n        this.focusRoot = focusRoot;\n        this.editService = editService;\n        this.cd = cd;\n        this.localization = localization;\n        this.focusableParent = focusableParent;\n        this.cellKeydown = new EventEmitter();\n        this.activeRowIndex = 0;\n        this.alive = false;\n        this.active = true;\n        this.mode = 0 /* Standby */;\n        this.model = new NavigationModel();\n        this.cursor = new NavigationCursor(this.model);\n        this.pagerIsNavigable = false;\n        this.tableIsNavigable = false;\n        this.changes = this.cursor.changes;\n    }\n    set metadata(value) {\n        this.meta = value;\n        this.cursor.metadata = value;\n    }\n    get metadata() {\n        return this.meta;\n    }\n    get enabled() {\n        return this.alive;\n    }\n    get pagerEnabled() {\n        return this.alive && this.pagerIsNavigable;\n    }\n    get tableEnabled() {\n        return this.alive && this.tableIsNavigable;\n    }\n    get activeCell() {\n        if (this.mode !== 0 /* Standby */) {\n            return this.cursor.cell;\n        }\n    }\n    get activeRow() {\n        if (this.mode !== 0 /* Standby */) {\n            return Object.assign({}, this.cursor.row, {\n                cells: this.cursor.row.cells.toArray()\n            });\n        }\n    }\n    get activeDataRow() {\n        return Math.max(0, this.activeRowIndex - this.meta.headerRows);\n    }\n    init(meta, navigableOptions) {\n        this.setActiveSections(navigableOptions);\n        this.alive = true;\n        this.focusRoot.active = true;\n        this.metadata = meta;\n        const onStableSubscriber = (...operators) => (args) => this.zone.isStable ?\n            from([true]).pipe(map(() => args)) :\n            this.zone.onStable.pipe(take(1), map(() => args), ...operators);\n        const onStable = onStableSubscriber();\n        this.subs = new Subscription();\n        this.subs.add(this.cursor.changes\n            .subscribe(args => this.onCursorChanges(args)));\n        this.subs.add(this.domEvents.focus.pipe(switchMap(onStable))\n            .subscribe((args) => this.navigateTo(args.target)));\n        this.subs.add(this.domEvents.focusOut.pipe(filter(() => this.mode !== 0 /* Standby */), switchMap(onStableSubscriber(takeUntil(this.domEvents.focus))))\n            .subscribe(args => this.onFocusOut(args)));\n        this.subs.add(this.domEvents.windowBlur.pipe(filter(() => this.mode !== 0 /* Standby */))\n            .subscribe(() => this.onWindowBlur()));\n        this.subs.add(\n        // Closing the editor will not always trigger focusout in Firefox.\n        // To get around this, we ensure that the cell is closed after editing.\n        this.editService.changes.pipe(filter(e => e.action !== 'edit' && this.mode === 2 /* Content */), filter((e) => e.action === 'cellClose' && !e.prevented), switchMap(onStable))\n            .subscribe(() => this.leaveCell()));\n        this.subs.add(this.pagerContextService.pageChange\n            .subscribe(() => this.cursor.reset(0, 0)));\n        this.subs.add(this.domEvents.keydown\n            .subscribe(args => this.onKeydown(args)));\n        this.subs.add(this.domEvents.keydown.pipe(filter(args => args.keyCode === Keys.Tab && this.mode === 2 /* Content */), switchMapTo(this.domEvents.focusOut.pipe(takeUntil(\n        // Timeout if focusOut doesn't fire very soon\n        interval(0).pipe(take(1))))))\n            .subscribe(() => this.onTabout()));\n        if (this.focusableParent) {\n            const element = new GridFocusableElement(this);\n            this.focusableParent.registerElement(element);\n        }\n        this.deactivateElements();\n    }\n    ngOnDestroy() {\n        if (this.subs) {\n            this.subs.unsubscribe();\n        }\n        this.alive = false;\n    }\n    registerCell(cell) {\n        if (cell.logicalRowIndex !== this.pendingRowIndex) {\n            const modelCell = this.model.registerCell(cell);\n            if (this.virtualCell && this.cursor.activateVirtualCell(modelCell)) {\n                this.virtualCell = false;\n            }\n        }\n    }\n    registerCellOnCurrentRow(cell) {\n        if (cell.logicalRowIndex === this.pendingRowIndex) {\n            this.model.registerCell(cell);\n        }\n    }\n    unregisterCell(index, rowIndex, cell) {\n        this.model.unregisterCell(index, rowIndex, cell);\n    }\n    registerRow(row) {\n        this.model.registerRow(row);\n        this.pendingRowIndex = row.logicalRowIndex;\n    }\n    updateRow(row) {\n        this.model.updateRow(row);\n    }\n    unregisterRow(index, row) {\n        this.model.unregisterRow(index, row);\n        const lastRow = this.model.lastRow;\n        if (lastRow && this.mode === 0 /* Standby */) {\n            const maxIndex = (this.needsViewport() && this.viewport) ? this.viewport.lastItemIndex : lastRow.index;\n            if (this.activeRowIndex > maxIndex) {\n                this.cursor.reset(0, 0);\n            }\n        }\n    }\n    isCellFocusable(cell) {\n        return this.alive &&\n            this.active &&\n            this.mode !== 2 /* Content */ &&\n            this.cursor.isActive(cell.logicalRowIndex, cell.logicalColIndex);\n    }\n    isCellFocused(cell) {\n        return this.mode === 1 /* Cursor */ && this.isCellFocusable(cell);\n    }\n    navigateTo(el) {\n        if (!this.alive) {\n            return;\n        }\n        const cell = targetCell(el, this.meta.gridElement.nativeElement);\n        if (!cell) {\n            return;\n        }\n        const oldMode = this.mode;\n        const focusInCell = contains$2(cell.element, document.activeElement);\n        const focusInActiveRowContent = this.mode === 2 /* Content */ &&\n            this.activeRowIndex === cell.rowIndex &&\n            el !== cell.element;\n        if (focusInCell) {\n            this.mode = 2 /* Content */;\n            this.cursor.reset(cell.rowIndex, cell.colIndex);\n            this.activateRow();\n        }\n        else if (!focusInActiveRowContent) {\n            this.mode = 1 /* Cursor */;\n            this.deactivateElements();\n            const alreadyActive = this.cursor.isActive(cell.rowIndex, cell.colIndex);\n            const isCursor = oldMode === 1 /* Cursor */ && alreadyActive;\n            if (!isCursor) {\n                this.cursor.reset(cell.rowIndex, cell.colIndex);\n            }\n        }\n    }\n    tryFocus(el) {\n        this.activateElements();\n        const focusable = findFocusableChild(el);\n        if (focusable) {\n            const cell = targetCell(focusable, this.meta.gridElement.nativeElement);\n            if (cell) {\n                this.cursor.reset(cell.rowIndex, cell.colIndex);\n                this.deactivateElements();\n                this.enterCell();\n            }\n            focusable.focus();\n        }\n        else {\n            this.deactivateElements();\n        }\n        return !!focusable;\n    }\n    needsViewport() {\n        return this.meta && this.meta.isVirtual;\n    }\n    setViewport(firstItemIndex, lastItemIndex) {\n        this.viewport = new NavigationViewport(firstItemIndex, lastItemIndex);\n        if (this.meta && this.meta.isVirtual && this.activeDataRow > -1) {\n            const dataRowIndex = this.activeDataRow;\n            const ahead = firstItemIndex - dataRowIndex;\n            const behind = dataRowIndex - lastItemIndex;\n            if (ahead > 0) {\n                this.cursor.reset(firstItemIndex + this.meta.headerRows);\n            }\n            else if (behind > 0) {\n                this.cursor.reset(lastItemIndex - this.meta.headerRows);\n            }\n        }\n    }\n    setColumnViewport(firstItemIndex, lastItemIndex) {\n        this.columnViewport = new NavigationViewport(firstItemIndex, lastItemIndex);\n    }\n    focusCell(rowIndex = undefined, colIndex = undefined) {\n        this.mode = 1 /* Cursor */;\n        this.cursor.reset(rowIndex, colIndex);\n        return this.activeCell;\n    }\n    focusCellByElement(el) {\n        const cell = targetCell(el, this.meta.gridElement.nativeElement);\n        if (cell) {\n            return this.focusCell(cell.rowIndex, cell.colIndex);\n        }\n    }\n    focusNextCell(wrap = true) {\n        return this.focusAdjacentCell(true, wrap);\n    }\n    focusPrevCell(wrap = true) {\n        return this.focusAdjacentCell(false, wrap);\n    }\n    toggle(active) {\n        this.active = active;\n        this.cursor.announce();\n    }\n    hasFocus() {\n        return this.mode === 1 /* Cursor */ || this.mode === 2 /* Content */;\n    }\n    autoFocusCell(start, end) {\n        return !this.meta.virtualColumns || end < this.meta.columns.lockedLeafColumns.length || this.columnViewport.intersects(start, end);\n    }\n    setActiveSections(navigableOptions) {\n        this.pagerIsNavigable = navigableOptions.includes('pager');\n        this.tableIsNavigable = navigableOptions.includes('table');\n    }\n    focusAdjacentCell(fwd, wrap) {\n        this.focusCell();\n        let success = fwd ? this.moveCursorFwd() : this.moveCursorBwd();\n        if (wrap && !success) {\n            success = fwd ? this.cursor.moveDown(1) : this.cursor.moveUp(1);\n            if (success) {\n                const row = this.cursor.row;\n                const colIdx = fwd ? 0 : this.cursor.lastCellIndex(row);\n                this.cursor.reset(row.index, colIdx);\n            }\n        }\n        if (success) {\n            return this.activeCell;\n        }\n        else {\n            this.mode = 0 /* Standby */;\n            this.cursor.announce();\n        }\n        return null;\n    }\n    enterCell() {\n        const cell = this.cursor.cell;\n        if (!cell) {\n            return;\n        }\n        const group = cell.focusGroup;\n        const focusable = group && group.canFocus();\n        this.mode = focusable ? 2 /* Content */ : 1 /* Cursor */;\n        this.cursor.announce();\n        if (focusable) {\n            this.activateRow();\n            group.focus();\n        }\n    }\n    leaveCell() {\n        const cell = this.cursor.cell;\n        if (!cell) {\n            return;\n        }\n        const group = cell.focusGroup;\n        const focusable = group && group.canFocus();\n        if (!focusable) {\n            this.deactivateElements();\n        }\n        this.mode = 1 /* Cursor */;\n        this.cursor.announce();\n    }\n    activateElements() {\n        this.focusRoot.activate();\n    }\n    deactivateElements() {\n        this.focusRoot.deactivate();\n    }\n    activateRow() {\n        this.cursor.row.cells\n            .forEach(cell => cell.focusGroup && cell.focusGroup.activate());\n    }\n    moveCursorFwd() {\n        return this.localization.rtl ? this.cursor.moveLeft() : this.cursor.moveRight();\n    }\n    moveCursorBwd() {\n        return this.localization.rtl ? this.cursor.moveRight() : this.cursor.moveLeft();\n    }\n    onCursorKeydown(args) {\n        let preventDefault = false;\n        const modifier = args.ctrlKey || args.metaKey;\n        const step = modifier ? 5 : 1;\n        if (!this.onCellKeydown(args)) {\n            return;\n        }\n        const row = this.cursor.row;\n        switch (args.keyCode) {\n            case Keys.ArrowDown:\n                preventDefault = this.cursor.moveDown(step);\n                break;\n            case Keys.ArrowUp:\n                preventDefault = this.cursor.moveUp(step);\n                break;\n            case Keys.ArrowRight:\n                preventDefault = this.moveCursorFwd();\n                break;\n            case Keys.ArrowLeft:\n                preventDefault = this.moveCursorBwd();\n                break;\n            case Keys.PageDown:\n                if (this.metadata.isVirtual && this.viewport) {\n                    let nextItemIndex = this.meta.headerRows + this.viewport.lastItemIndex + 1;\n                    if (this.metadata.hasDetailTemplate) {\n                        nextItemIndex++;\n                    }\n                    nextItemIndex = Math.min(this.meta.maxLogicalRowIndex, nextItemIndex);\n                    this.cursor.reset(nextItemIndex);\n                    preventDefault = true;\n                }\n                else if (this.metadata.hasPager) {\n                    this.zone.run(() => this.pagerContextService.nextPage());\n                    preventDefault = true;\n                }\n                break;\n            case Keys.PageUp:\n                if (this.metadata.isVirtual && this.viewport) {\n                    let viewportSize = this.viewport.lastItemIndex - this.viewport.firstItemIndex;\n                    let firstItemIndex = this.viewport.firstItemIndex;\n                    let nextItemIndex = Math.max(this.meta.headerRows, firstItemIndex - viewportSize - 1);\n                    this.cursor.reset(nextItemIndex);\n                    preventDefault = true;\n                }\n                else if (this.metadata.hasPager) {\n                    this.zone.run(() => this.pagerContextService.prevPage());\n                    preventDefault = true;\n                }\n                break;\n            case Keys.Home:\n                if (modifier) {\n                    if (this.meta.isVirtual) {\n                        this.cursor.reset(this.meta.headerRows, 0, false);\n                    }\n                    else {\n                        this.cursor.reset(this.model.firstRow.index, 0, false);\n                    }\n                }\n                else {\n                    this.cursor.reset(row.index, 0, false);\n                }\n                preventDefault = true;\n                break;\n            case Keys.End:\n                if (modifier) {\n                    if (this.meta.isVirtual) {\n                        let lastRowIndex = this.meta.maxLogicalRowIndex;\n                        if (this.meta.hasDetailTemplate) {\n                            lastRowIndex--;\n                        }\n                        this.cursor.reset(lastRowIndex, this.cursor.lastCellIndex(), false);\n                    }\n                    else {\n                        this.cursor.reset(this.model.lastRow.index, this.cursor.lastCellIndex(this.model.lastRow), false);\n                    }\n                }\n                else {\n                    const lastIndex = this.cursor.lastCellIndex(row);\n                    const cell = this.model.findCell(lastIndex, row);\n                    if (cell) {\n                        this.cursor.reset(cell.rowIndex, cell.colIndex);\n                    }\n                    else {\n                        this.cursor.reset(row.index, lastIndex);\n                    }\n                }\n                preventDefault = true;\n                break;\n            case Keys.Enter:\n            case Keys.F2:\n                const groupItem = row.groupItem;\n                if (groupItem) {\n                    this.zone.run(() => this.groupsService.toggleRow(groupItem));\n                }\n                else if (this.cursor.cell.detailExpandCell) {\n                    this.zone.run(() => this.detailsService.toggleRow(row.dataRowIndex, row.dataItem));\n                }\n                else {\n                    this.enterCell();\n                    if (!this.cursor.cell.focusGroup.isNavigable()) {\n                        preventDefault = true;\n                    }\n                }\n                break;\n            default:\n                if (!args.ctrlKey && !args.altKey && isPrintableCharacter(args.key)) {\n                    this.enterCell();\n                }\n        }\n        if (preventDefault) {\n            args.preventDefault();\n        }\n    }\n    onContentKeydown(args) {\n        if (!this.onCellKeydown(args)) {\n            return;\n        }\n        const confirm = !args.defaultPrevented && args.keyCode === Keys.Enter && isTextInput(args.srcElement);\n        if (args.keyCode === Keys.Escape || args.keyCode === Keys.F2 || confirm) {\n            this.leaveCell();\n            this.cursor.reset();\n            args.stopPropagation();\n        }\n        else if (isNavigationKey(args.keyCode) && this.cursor.cell.focusGroup.isNavigable()) {\n            this.onCursorKeydown(args);\n            if (args.defaultPrevented) {\n                this.leaveCell();\n            }\n        }\n    }\n    onCellKeydown(args) {\n        if (this.editService.isEditingCell()) {\n            const confirm = args.keyCode === Keys.Enter;\n            const cancel = args.keyCode === Keys.Escape;\n            const navigate = isNavigationKey(args.keyCode);\n            if (confirm) {\n                this.editService.closeCell(args);\n            }\n            else if (cancel) {\n                this.editService.closeCell(args);\n                this.cd.detectChanges();\n            }\n            else if (navigate) {\n                return false;\n            }\n        }\n        this.cellKeydown.emit(args);\n        return true;\n    }\n    onCursorChanges(args) {\n        this.activeRowIndex = args.rowIndex;\n        const dataRowIndex = this.activeDataRow;\n        if (this.meta && (this.meta.isVirtual &&\n            args.rowIndex >= this.meta.headerRows &&\n            this.viewport &&\n            !this.viewport.containsRow(dataRowIndex) && dataRowIndex > -1)) {\n            this.scrollRequestService.scrollTo({ row: dataRowIndex });\n        }\n        if (this.meta.virtualColumns && args.colIndex >= this.meta.columns.lockedLeafColumns.length) {\n            const cell = this.activeCell;\n            const { start, end } = this.model.cellRange(cell);\n            if (!cell) {\n                this.virtualCell = true;\n            }\n            if ((!cell && this.mode !== 0 /* Standby */) || (cell && !this.columnViewport.intersects(start, end))) {\n                this.scrollRequestService.scrollTo({ column: args.colIndex - (this.metadata.hasDetailTemplate ? 1 : 0) });\n            }\n        }\n    }\n    onFocusOut(args) {\n        if (isVisible(args.target)) {\n            this.mode = 0 /* Standby */;\n        }\n        else {\n            // Focused target is no longer visible,\n            // reset to cursor mode and recapture focus.\n            this.mode = 1 /* Cursor */;\n        }\n        this.deactivateElements();\n        this.cursor.announce();\n    }\n    onWindowBlur() {\n        this.mode = 0 /* Standby */;\n        this.deactivateElements();\n        this.cursor.announce();\n    }\n    onKeydown(args) {\n        if (this.mode === 1 /* Cursor */) {\n            this.onCursorKeydown(args);\n        }\n        else if (this.mode === 2 /* Content */) {\n            this.onContentKeydown(args);\n        }\n    }\n    onTabout() {\n        // Tabbed out of the last focusable content element\n        // reset to cursor mode and recapture focus.\n        if (this.cursor.cell.focusGroup.isNavigable()) {\n            // Unless the cell has a single focusable element,\n            // otherwise we'd return to Content mode and enter an endless loop\n            return;\n        }\n        this.leaveCell();\n        this.cursor.reset();\n    }\n}\nNavigationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NavigationService, deps: [{ token: i0.NgZone }, { token: DomEventsService }, { token: PagerContextService }, { token: ScrollRequestService }, { token: GroupsService }, { token: DetailsService }, { token: FocusRoot }, { token: EditService }, { token: i0.ChangeDetectorRef }, { token: i1.LocalizationService }, { token: FocusableDirective, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nNavigationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NavigationService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NavigationService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: DomEventsService }, { type: PagerContextService }, { type: ScrollRequestService }, { type: GroupsService }, { type: DetailsService }, { type: FocusRoot }, { type: EditService }, { type: i0.ChangeDetectorRef }, { type: i1.LocalizationService }, { type: FocusableDirective, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * @hidden\n */\nclass SelectionService {\n    constructor(domEvents, localDataChangesService, navigationService) {\n        this.domEvents = domEvents;\n        this.localDataChangesService = localDataChangesService;\n        this.navigationService = navigationService;\n        this.changes = new EventEmitter();\n        this.lastSelectionStartIndex = 0;\n        this.currentSelection = [];\n        this.selectAllChecked = false;\n        this.active = false;\n        this.dragging = false;\n        this.addSubscriptions();\n    }\n    get enableMarquee() {\n        const checkboxOnly = this.settings && typeof this.settings === 'object' && this.settings.checkboxOnly;\n        if (!this.settings || checkboxOnly) {\n            return false;\n        }\n        const selectableSettings = this.settings.selectable;\n        const dragAndMultiple = typeof (selectableSettings) === 'object' &&\n            isPresent(selectableSettings) &&\n            selectableSettings.mode === 'multiple' &&\n            selectableSettings.enabled !== false &&\n            !selectableSettings.checkboxOnly &&\n            selectableSettings.drag;\n        return this.active && dragAndMultiple;\n    }\n    init(settings) {\n        this.settings = settings;\n        this.currentSelection = [];\n        if (settings.selectable && settings.selectable.enabled !== false) {\n            const iterator = this.getIterator();\n            this._selectAllState = true;\n            let item = iterator.next();\n            while (!item.done) {\n                if (item.value && item.value.type === \"data\") {\n                    const rowArgs = {\n                        dataItem: item.value.data,\n                        index: item.value.index\n                    };\n                    if (settings.rowSelected(rowArgs)) {\n                        this.currentSelection[item.value.index] = rowArgs;\n                    }\n                    else {\n                        this._selectAllState = undefined;\n                    }\n                }\n                item = iterator.next();\n            }\n            if (this.currentSelection.length === 0) {\n                this._selectAllState = false;\n            }\n        }\n    }\n    isSelected(index) {\n        if (this.settings && this.active) {\n            return this.options.enabled && isPresent(this.currentSelection[index]);\n        }\n    }\n    handleClick(item, event) {\n        if (this.dragging) {\n            this.dragging = false;\n            return;\n        }\n        let ev;\n        const ctrlKey = event.ctrlKey || event.metaKey;\n        if (this.options.mode === \"single\" && ctrlKey && this.isSelected(item.index)) {\n            ev = this.toggle(item);\n        }\n        else if (this.options.mode === \"multiple\") {\n            if (ctrlKey && !event.shiftKey) {\n                ev = this.toggle(item);\n            }\n            else if (event.shiftKey) {\n                ev = this.addAllTo(item, ctrlKey);\n            }\n        }\n        if (!isPresent(ev)) {\n            ev = this.select(item);\n            this.currentSelection[item.index] = {\n                dataItem: item.data,\n                index: item.index\n            };\n        }\n        if (!ev.selectedRows.length && !ev.deselectedRows.length) {\n            return;\n        }\n        ev.ctrlKey = ctrlKey;\n        ev.shiftKey = event.shiftKey;\n        this.changes.emit(ev);\n    }\n    toggle(item) {\n        let selectedRows = [];\n        let deselectedRows = [];\n        this.lastSelectionStartIndex = item.index;\n        const rowArgs = { dataItem: item.data, index: item.index };\n        if (this.isSelected(item.index)) {\n            deselectedRows.push(rowArgs);\n        }\n        else {\n            selectedRows.push(rowArgs);\n        }\n        return {\n            deselectedRows: deselectedRows,\n            selectedRows: selectedRows\n        };\n    }\n    toggleByIndex(index) {\n        const iterator = this.getIterator();\n        if (this.selectAllChecked && this.isSelected(index)) {\n            this.selectAllChecked = false;\n        }\n        let item = iterator.next();\n        while (!item.done) {\n            if (item.value && item.value.type === \"data\" && item.value.index === index) {\n                const itemToToggle = {\n                    data: item.value.data,\n                    index: item.value.index\n                };\n                if (this.isSelected(index) || this.options.mode === \"multiple\") {\n                    return this.toggle(itemToToggle);\n                }\n                else {\n                    return this.select(itemToToggle);\n                }\n            }\n            item = iterator.next();\n        }\n    }\n    select(item) {\n        let deselectedRows = [];\n        let selectedRows = [];\n        this.lastSelectionStartIndex = item.index;\n        if (!this.isSelected(item.index)) {\n            selectedRows.push({ dataItem: item.data, index: item.index });\n        }\n        this.currentSelection.forEach((row) => {\n            if (row.index !== item.index) {\n                deselectedRows.push(row);\n            }\n        });\n        return {\n            deselectedRows: deselectedRows,\n            selectedRows: selectedRows\n        };\n    }\n    //Used to manually deselect removed items\n    deselect(removedItem) {\n        const iterator = this.getIterator();\n        let item = iterator.next();\n        while (!item.done) {\n            if (item.value && item.value.type === \"data\" && item.value.data === removedItem) {\n                const rowArgs = {\n                    dataItem: item.value.data,\n                    index: item.value.index\n                };\n                if (this.isSelected(rowArgs.index)) {\n                    let ev = {\n                        ctrlKey: false,\n                        deselectedRows: [rowArgs],\n                        selectedRows: []\n                    };\n                    this.changes.emit(ev);\n                }\n            }\n            item = iterator.next();\n        }\n    }\n    addAllTo(item, ctrlKey) {\n        let selectedRows = [];\n        let deselectedRows = [];\n        const start = Math.min(this.lastSelectionStartIndex, item.index);\n        const end = Math.max(this.lastSelectionStartIndex, item.index);\n        const iterator = this.getIterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (next.value && next.value.type === \"data\") {\n                const idx = next.value.index;\n                const rowArgs = { dataItem: next.value.data, index: idx };\n                if ((idx < start || idx > end) && this.isSelected(idx) && !ctrlKey) {\n                    deselectedRows.push(rowArgs);\n                }\n                if ((idx >= start && idx <= end) && !this.isSelected(idx)) {\n                    selectedRows.push(rowArgs);\n                }\n            }\n            next = iterator.next();\n        }\n        return {\n            deselectedRows: deselectedRows,\n            selectedRows: selectedRows\n        };\n    }\n    updateAll(selectAllChecked) {\n        this.selectAllChecked = selectAllChecked;\n        let selectedRows = [];\n        let deselectedRows = [];\n        const iterator = this.getIterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (next.value && next.value.type === \"data\") {\n                const idx = next.value.index;\n                const rowArgs = { dataItem: next.value.data, index: idx };\n                if (this.isSelected(idx) && !selectAllChecked) {\n                    deselectedRows.push(rowArgs);\n                }\n                if (!this.isSelected(idx) && selectAllChecked) {\n                    selectedRows.push(rowArgs);\n                }\n            }\n            next = iterator.next();\n        }\n        if (!selectedRows.length && !deselectedRows.length) {\n            return;\n        }\n        let ev = {\n            ctrlKey: true,\n            deselectedRows: deselectedRows,\n            selectedRows: selectedRows,\n            shiftKey: true\n        };\n        this.changes.emit(ev);\n    }\n    selectRange(startIndex, endIndex) {\n        let selectedRows = [];\n        let deselectedRows = [];\n        const start = Math.min(startIndex, endIndex);\n        const end = Math.max(startIndex, endIndex);\n        const iterator = this.getIterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (next.value && next.value.type === \"data\") {\n                const idx = next.value.index;\n                const rowArgs = { dataItem: next.value.data, index: idx };\n                if ((idx < start || idx > end) && this.isSelected(idx)) {\n                    deselectedRows.push(rowArgs);\n                }\n                if ((idx >= start && idx <= end) && !this.isSelected(idx)) {\n                    selectedRows.push(rowArgs);\n                }\n            }\n            next = iterator.next();\n        }\n        return {\n            deselectedRows: deselectedRows,\n            selectedRows: selectedRows\n        };\n    }\n    get selectAllState() {\n        return this._selectAllState;\n    }\n    get selected() {\n        return this.currentSelection.map((item) => {\n            return item.index;\n        }).filter((n) => typeof n === \"number\");\n    }\n    get options() {\n        const defaultOptions = {\n            checkboxOnly: false,\n            enabled: true,\n            mode: \"multiple\"\n        };\n        if (!isPresent(this.settings)) {\n            return defaultOptions;\n        }\n        if (typeof this.settings.selectable === 'boolean') {\n            return {\n                checkboxOnly: false,\n                enabled: this.settings.selectable,\n                mode: \"multiple\"\n            };\n        }\n        else {\n            return Object.assign(defaultOptions, this.settings.selectable);\n        }\n    }\n    ngOnDestroy() {\n        this.removeSubscriptions();\n    }\n    targetArgs() {\n        return {\n            index: this.mouseDownEventArgs.rowIndex,\n            dataItem: this.mouseDownEventArgs.dataItem\n        };\n    }\n    addSubscriptions() {\n        if (!this.cellClickSubscription) {\n            this.cellClickSubscription = this.domEvents.cellClick.subscribe((args) => {\n                if (this.options.enabled && !this.options.checkboxOnly && args.type !== 'contextmenu') {\n                    if (this.active) {\n                        this.handleClick({ index: args.rowIndex, data: args.dataItem }, args.originalEvent);\n                    }\n                }\n            });\n        }\n        if (!this.mousedownSubscription) {\n            this.mousedownSubscription = this.domEvents.cellMousedown.subscribe((args) => {\n                this.mouseDownEventArgs = args;\n                if ((this.options.enabled && (!this.options.mode || this.options.mode === \"multiple\") &&\n                    !this.options.checkboxOnly && args.originalEvent.shiftKey)) {\n                    if (this.active) {\n                        args.originalEvent.preventDefault();\n                        this.navigationService.focusCellByElement(args.originalEvent.target);\n                    }\n                }\n            });\n        }\n        if (this.localDataChangesService && !this.dataChangedSubscription) {\n            this.dataChangedSubscription = this.localDataChangesService.changes.subscribe((args) => {\n                if (this.active) {\n                    if (isPresent(args.action) && args.action === 'remove') {\n                        this.deselect(args.item);\n                    }\n                }\n            });\n        }\n    }\n    getIterator() {\n        const accessor = this.settings.view.accessor();\n        if (!accessor) {\n            return;\n        }\n        return accessor[iterator]();\n    }\n    removeSubscriptions() {\n        if (this.cellClickSubscription) {\n            this.cellClickSubscription.unsubscribe();\n            this.cellClickSubscription = null;\n        }\n        if (this.mousedownSubscription) {\n            this.mousedownSubscription.unsubscribe();\n            this.mousedownSubscription = null;\n        }\n        if (this.dataChangedSubscription) {\n            this.dataChangedSubscription.unsubscribe();\n            this.dataChangedSubscription = null;\n        }\n    }\n}\nSelectionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SelectionService, deps: [{ token: DomEventsService }, { token: LocalDataChangesService }, { token: NavigationService }], target: i0.ɵɵFactoryTarget.Injectable });\nSelectionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SelectionService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SelectionService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: DomEventsService }, { type: LocalDataChangesService }, { type: NavigationService }]; } });\n\n/**\n * @hidden\n */\nclass CellSelectionService {\n    constructor(domEvents, localDataChangesService, navigationService) {\n        this.domEvents = domEvents;\n        this.localDataChangesService = localDataChangesService;\n        this.navigationService = navigationService;\n        this.changes = new EventEmitter();\n        this.mouseUpEvent = new EventEmitter();\n        this.currentSelection = [];\n        this.active = false;\n        this.dragging = false;\n        this.dragSelectDeselect = false;\n        this.lastSelectionItem = { itemKey: 0, columnKey: 0 };\n        this.lastSelectionItemRowIndex = 0;\n        this.lastSelectionItemColIndex = 0;\n        this.addSubscriptions();\n    }\n    get enableMarquee() {\n        const checkboxOnly = this.settings && typeof this.settings === 'object' && this.settings.checkboxOnly;\n        if (!this.settings || checkboxOnly) {\n            return false;\n        }\n        const selectableSettings = this.settings.selectable;\n        const dragAndMultiple = typeof (selectableSettings) === 'object' &&\n            isPresent(selectableSettings) &&\n            selectableSettings.mode === 'multiple' &&\n            selectableSettings.cell &&\n            selectableSettings.enabled !== false &&\n            selectableSettings.drag;\n        return this.active && dragAndMultiple;\n    }\n    init(settings) {\n        this.settings = settings;\n        this.currentSelection = [];\n        if (settings.selectable && settings.selectable.enabled !== false) {\n            const iterator = this.getIterator();\n            let item = iterator.next();\n            while (!item.done) {\n                if (item.value && item.value.type === \"data\") {\n                    const rowArgs = {\n                        dataItem: item.value.data,\n                        index: item.value.index\n                    };\n                    settings.columns.forEach(col => {\n                        const selectedCellArgs = settings.cellSelected(rowArgs, col, col.leafIndex);\n                        if (selectedCellArgs.selected) {\n                            this.currentSelection.push(selectedCellArgs.item);\n                        }\n                    });\n                }\n                item = iterator.next();\n            }\n        }\n    }\n    isCellSelected(item, col) {\n        if (this.settings && this.active) {\n            const selectedCellArgs = this.settings.cellSelected({ dataItem: item.data, index: item.index }, col, col.leafIndex);\n            return this.options.enabled && selectedCellArgs.selected;\n        }\n        return false;\n    }\n    handleClick(item, event) {\n        if (this.dragging) {\n            this.dragging = false;\n            return;\n        }\n        let ev;\n        const ctrlKey = event.ctrlKey || event.metaKey;\n        if (this.options.mode === \"single\" && ctrlKey && this.isCellSelected(item, item.column)) {\n            ev = this.toggle(item);\n        }\n        else if (this.options.mode === \"multiple\") {\n            if (ctrlKey && !event.shiftKey) {\n                ev = this.toggle(item);\n            }\n            else if (event.shiftKey) {\n                const startRowIndex = Math.min(this.lastSelectionItemRowIndex, item.index);\n                const startColIndex = Math.min(this.lastSelectionItemColIndex, item.column.leafIndex);\n                const endRowIndex = Math.max(this.lastSelectionItemRowIndex, item.index);\n                const endColIndex = Math.max(this.lastSelectionItemColIndex, item.column.leafIndex);\n                ev = this.selectRange(startRowIndex, startColIndex, endRowIndex, endColIndex);\n            }\n        }\n        if (!isPresent(ev)) {\n            ev = this.select(item);\n            this.currentSelection = [this.lastSelectionItem];\n        }\n        if (!ev.selectedCells.length && !ev.deselectedCells.length) {\n            return;\n        }\n        ev.ctrlKey = ctrlKey;\n        ev.shiftKey = event.shiftKey;\n        this.changes.emit(ev);\n    }\n    toggle(item) {\n        let selectedCells = [];\n        let deselectedCells = [];\n        this.lastSelectionItem =\n            this.settings.cellSelected({ dataItem: item.data, index: item.index }, item.column, item.column.leafIndex).item;\n        this.lastSelectionItemRowIndex = item.index;\n        this.lastSelectionItemColIndex = item.column.leafIndex;\n        if (this.isCellSelected(item, item.column)) {\n            deselectedCells.push(this.lastSelectionItem);\n        }\n        else {\n            selectedCells.push(this.lastSelectionItem);\n        }\n        return {\n            deselectedCells,\n            selectedCells\n        };\n    }\n    select(item) {\n        const selectedCells = [];\n        const deselectedCells = [];\n        this.lastSelectionItem =\n            this.settings.cellSelected({ dataItem: item.data, index: item.index }, item.column, item.column.leafIndex).item;\n        this.lastSelectionItemRowIndex = item.index;\n        this.lastSelectionItemColIndex = item.column.leafIndex;\n        if (!this.isCellSelected(item, item.column)) {\n            selectedCells.push(this.lastSelectionItem);\n        }\n        this.currentSelection.forEach((selectedItem) => {\n            if (selectedItem.itemKey !== this.lastSelectionItem.itemKey || selectedItem.columnKey !== this.lastSelectionItem.columnKey) {\n                deselectedCells.push(selectedItem);\n            }\n        });\n        return {\n            deselectedCells,\n            selectedCells\n        };\n    }\n    //Used to manually deselect removed items\n    deselect(removedItem) {\n        const iterator = this.getIterator();\n        let item = iterator.next();\n        let rowArgs;\n        while (!item.done) {\n            if (item.value && item.value.type === \"data\" && item.value.data === removedItem) {\n                rowArgs = {\n                    dataItem: item.value.data,\n                    index: item.value.index\n                };\n                break;\n            }\n            item = iterator.next();\n        }\n        if (rowArgs) {\n            const cellsToRemove = this.currentSelection.filter(selectedItem => {\n                const contender = this.settings.cellSelected(rowArgs, null, null).item;\n                return selectedItem.itemKey === contender.itemKey;\n            });\n            if (cellsToRemove.length) {\n                let ev = {\n                    ctrlKey: false,\n                    deselectedCells: cellsToRemove,\n                    selectedCells: []\n                };\n                this.changes.emit(ev);\n            }\n        }\n    }\n    selectRange(startRowIndex, startColIndex, endRowIndex, endColIndex) {\n        const selectedCells = [];\n        const deselectedCells = [];\n        const selectionStartRow = Math.min(startRowIndex, endRowIndex);\n        const selectionStartCol = Math.min(startColIndex, endColIndex);\n        const selectionEndRow = Math.max(startRowIndex, endRowIndex);\n        const selectionEndCol = Math.max(startColIndex, endColIndex);\n        const iterator = this.getIterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (next.value && next.value.type === \"data\") {\n                const idx = next.value.index;\n                const data = next.value.data;\n                const rowArgs = {\n                    dataItem: data,\n                    index: idx\n                };\n                this.settings.columns.forEach(col => {\n                    const { item } = this.settings.cellSelected(rowArgs, col, col.leafIndex);\n                    const selected = this.isCellSelected(next.value, col);\n                    const isInRowRange = selectionStartRow <= idx && idx <= selectionEndRow;\n                    const isInColRange = selectionStartCol <= col.leafIndex && col.leafIndex <= selectionEndCol;\n                    const isInSelectionRect = isInRowRange && isInColRange;\n                    if (!isInSelectionRect && selected) {\n                        deselectedCells.push(item);\n                    }\n                    if (isInSelectionRect && !selected) {\n                        selectedCells.push(item);\n                    }\n                });\n            }\n            next = iterator.next();\n        }\n        return {\n            deselectedCells,\n            selectedCells\n        };\n    }\n    get options() {\n        const defaultOptions = {\n            checkboxOnly: false,\n            enabled: true,\n            mode: \"multiple\"\n        };\n        if (!isPresent(this.settings)) {\n            return defaultOptions;\n        }\n        if (typeof this.settings.selectable === 'boolean') {\n            return {\n                checkboxOnly: false,\n                enabled: this.settings.selectable,\n                mode: \"multiple\"\n            };\n        }\n        else {\n            return Object.assign(defaultOptions, this.settings.selectable);\n        }\n    }\n    ngOnDestroy() {\n        this.removeSubscriptions();\n    }\n    addSubscriptions() {\n        if (!this.cellClickSubscription) {\n            this.cellClickSubscription = this.domEvents.cellClick.subscribe((args) => {\n                if (this.options.enabled && !this.options.checkboxOnly && args.type !== 'contextmenu') {\n                    if (this.active) {\n                        this.handleClick({ index: args.rowIndex, data: args.dataItem, column: args.column }, args.originalEvent);\n                    }\n                }\n            });\n        }\n        if (!this.mousedownSubscription) {\n            this.mousedownSubscription = this.domEvents.cellMousedown.subscribe((args) => {\n                this.mouseDownEventArgs = args;\n                if (this.options.enabled && (!this.options.mode || this.options.mode === \"multiple\") &&\n                    !this.options.checkboxOnly && args.originalEvent.shiftKey) {\n                    if (this.active) {\n                        args.originalEvent.preventDefault();\n                        this.navigationService.focusCellByElement(args.originalEvent.target);\n                    }\n                }\n            });\n        }\n        if (this.localDataChangesService && !this.dataChangedSubscription) {\n            this.dataChangedSubscription = this.localDataChangesService.changes.subscribe((args) => {\n                if (this.active) {\n                    if (isPresent(args.action) && args.action === 'remove') {\n                        this.deselect(args.item);\n                    }\n                }\n            });\n        }\n    }\n    getIterator() {\n        const accessor = this.settings.view.accessor();\n        if (!accessor) {\n            return;\n        }\n        return accessor[iterator]();\n    }\n    removeSubscriptions() {\n        if (this.cellClickSubscription) {\n            this.cellClickSubscription.unsubscribe();\n            this.cellClickSubscription = null;\n        }\n        if (this.mousedownSubscription) {\n            this.mousedownSubscription.unsubscribe();\n            this.mousedownSubscription = null;\n        }\n        if (this.dataChangedSubscription) {\n            this.dataChangedSubscription.unsubscribe();\n            this.dataChangedSubscription = null;\n        }\n    }\n}\nCellSelectionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CellSelectionService, deps: [{ token: DomEventsService }, { token: LocalDataChangesService }, { token: NavigationService }], target: i0.ɵɵFactoryTarget.Injectable });\nCellSelectionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CellSelectionService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CellSelectionService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: DomEventsService }, { type: LocalDataChangesService }, { type: NavigationService }]; } });\n\nconst createElement$1 = () => {\n    const marquee = document.createElement(\"div\");\n    marquee.className = \"k-marquee\";\n    const marqueeColor = document.createElement(\"div\");\n    marqueeColor.className = \"k-marquee-color\";\n    marquee.appendChild(marqueeColor);\n    return marquee;\n};\nconst POINTER_OFFSET = 2;\nconst MINIMAL_DRAG_DISTANCE = 5;\nconst offsets = {\n    topLeft: { x: POINTER_OFFSET, y: POINTER_OFFSET },\n    topRight: { x: -POINTER_OFFSET, y: POINTER_OFFSET },\n    bottomLeft: { x: POINTER_OFFSET, y: -POINTER_OFFSET },\n    bottomRight: { x: -POINTER_OFFSET, y: -POINTER_OFFSET }\n};\n/**\n * @hidden\n */\nclass GridMarqueeDirective {\n    constructor(draggable, selection, cellSelection, domEvents) {\n        this.draggable = draggable;\n        this.selection = selection;\n        this.cellSelection = cellSelection;\n        this.domEvents = domEvents;\n        this.selectionStarted = false;\n    }\n    get webkitUserSelection() {\n        return (this.cellSelection.enableMarquee || this.selection.enableMarquee) ? 'none' : null;\n    }\n    get userSelection() {\n        return (this.cellSelection.enableMarquee || this.selection.enableMarquee);\n    }\n    ngOnInit() {\n        this.subscriptions = (this.draggable.kendoPress.subscribe(this.start.bind(this)));\n        this.subscriptions.add(this.draggable.kendoDrag.subscribe(this.moveMarquee.bind(this)));\n    }\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n        this.clean();\n    }\n    start(args) {\n        const isInvalidTarget = args.originalEvent.target.matches('.k-grid-content, .k-grid-content-locked, .k-grid-aria-root, .k-checkbox');\n        if (isInvalidTarget) {\n            this.pressArgs = null;\n            return;\n        }\n        this.pressArgs = args;\n        this.pressTarget = null;\n    }\n    moveMarquee(args) {\n        if (!this.pressTarget) {\n            this.pressTarget = this.cellSelection.active ? this.cellSelection.mouseDownEventArgs : this.selection.mouseDownEventArgs;\n        }\n        const press = this.pressArgs;\n        if (!press) {\n            return;\n        }\n        if (!this.selectionStarted) {\n            const distance = Math.sqrt(Math.pow((args.pageX - press.pageX), 2) + Math.pow((args.pageY - press.pageY), 2));\n            if (distance > MINIMAL_DRAG_DISTANCE) {\n                this.selectionStarted = true;\n                this.dragEndSubscription = merge(this.domEvents.cellMouseup.pipe(take(1)), this.draggable.kendoRelease.pipe(delay(1), take(1)))\n                    .subscribe(this.endSelection.bind(this));\n            }\n            else {\n                return;\n            }\n        }\n        this.initMarquee();\n        const element = this.marqueeElement;\n        const marqueeQuadrant = this.getMarqueeQuadrant(args.pageX, args.pageY, press.pageX, press.pageY);\n        let left = Math.min(args.pageX, press.pageX);\n        let top = Math.min(args.pageY, press.pageY);\n        const width = Math.abs(args.pageX - press.pageX);\n        const height = Math.abs(args.pageY - press.pageY);\n        if (marqueeQuadrant) {\n            left += offsets[marqueeQuadrant].x;\n            top += offsets[marqueeQuadrant].y;\n        }\n        element.style.left = `${left}px`;\n        element.style.top = `${top}px`;\n        element.style.width = `${width}px`;\n        element.style.height = `${height}px`;\n    }\n    endSelection(args) {\n        if (args.type === 'mouseup' || args.type === 'touchend') {\n            if (this.cellSelection.active) {\n                this.cellSelection.dragging = true;\n                this.cellSelection.changes.emit(this.cellSelection.selectRange(this.pressTarget.rowIndex, this.pressTarget.column.leafIndex, args.rowIndex, args.column.leafIndex));\n            }\n            else if (this.selection.active) {\n                this.selection.dragging = true;\n                this.selection.changes.emit(this.selection.selectRange(this.pressTarget.rowIndex, args.rowIndex));\n            }\n        }\n        this.clean();\n    }\n    clean() {\n        if (this.marqueeElement) {\n            document.body.removeChild(this.marqueeElement);\n            this.marqueeElement = null;\n        }\n        if (this.dragEndSubscription) {\n            this.dragEndSubscription.unsubscribe();\n        }\n        this.dragEndSubscription = null;\n        this.pressTarget = null;\n        this.pressArgs = null;\n        this.selectionStarted = false;\n        // eslint-disable-next-line no-unused-expressions\n        this.cellSelection.active ? this.cellSelection.dragging = false : this.selection.dragging = false;\n    }\n    initMarquee() {\n        if (!this.marqueeElement) {\n            this.marqueeElement = createElement$1();\n            document.body.appendChild(this.marqueeElement);\n        }\n    }\n    getMarqueeQuadrant(pointerX, pointerY, startX, startY) {\n        const leftHalf = pointerX < startX;\n        const rightHalf = pointerX > startX;\n        const topHalf = pointerY < startY;\n        const bottomHalf = pointerY > startY;\n        if (leftHalf && topHalf) {\n            return 'topLeft';\n        }\n        if (leftHalf && bottomHalf) {\n            return 'bottomLeft';\n        }\n        if (rightHalf && topHalf) {\n            return 'topRight';\n        }\n        if (rightHalf && bottomHalf) {\n            return 'bottomRight';\n        }\n        return null;\n    }\n}\nGridMarqueeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GridMarqueeDirective, deps: [{ token: i1$1.DraggableDirective }, { token: SelectionService }, { token: CellSelectionService }, { token: DomEventsService }], target: i0.ɵɵFactoryTarget.Directive });\nGridMarqueeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: GridMarqueeDirective, selector: \"[kendoGridSelectionMarquee]\", host: { properties: { \"style.-webkit-user-select\": \"this.webkitUserSelection\", \"class.user-select-none\": \"this.userSelection\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GridMarqueeDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridSelectionMarquee]'\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.DraggableDirective }, { type: SelectionService }, { type: CellSelectionService }, { type: DomEventsService }]; }, propDecorators: { webkitUserSelection: [{\n                type: HostBinding,\n                args: ['style.-webkit-user-select']\n            }], userSelection: [{\n                type: HostBinding,\n                args: ['class.user-select-none']\n            }] } });\n\n/**\n * @hidden\n */\nclass ZoneAwareEventEmitter extends EventEmitter {\n    constructor(ngZone, isAsync = false) {\n        super(isAsync);\n        this.ngZone = ngZone;\n    }\n    subscribe(generatorOrNext, error, complete) {\n        let schedulerFn;\n        let errorFn = (_) => null;\n        let completeFn = () => null;\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = (value) => { this.ngZone.run(() => generatorOrNext.next(value)); };\n            if (generatorOrNext.error) {\n                errorFn = (err) => { this.ngZone.run(() => generatorOrNext.error(err)); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = () => { this.ngZone.run(() => generatorOrNext.complete()); };\n            }\n        }\n        else {\n            schedulerFn = (value) => { this.ngZone.run(() => generatorOrNext(value)); };\n            if (error) {\n                errorFn = (err) => { this.ngZone.run(() => error(err)); };\n            }\n            if (complete) {\n                completeFn = () => { this.ngZone.run(() => complete()); };\n            }\n        }\n        return super.subscribe(schedulerFn, errorFn, completeFn);\n    }\n}\n\n/**\n * @hidden\n */\nconst packageMetadata = {\n    name: '@progress/kendo-angular-grid',\n    productName: 'Kendo UI for Angular',\n    productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n    publishDate: 1668698270,\n    version: '',\n    licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/?utm_medium=product&utm_source=kendoangular&utm_campaign=kendo-ui-angular-purchase-license-keys-warning'\n};\n\n/**\n * Represents the column cell template of the Grid ([more information and example]({% slug templates_columns_grid %}#toc-cell-template)).\n * Helps to customize the content of the cells. To define the cell template, nest an `<ng-template>` tag\n * with the `kendoGridCellTemplate` directive inside a `<kendo-grid-column>` tag.\n *\n * The template context is set to the current data item and the following additional fields are passed:\n * - `columnIndex`&mdash;The current column index. Use it as an alias for a template variable by utilizing the `let-columnIndex=\"columnIndex\"` syntax.\n * - `rowIndex`&mdash;The current data row index. Use it as an alias for a template variable by utilizing the `let-rowIndex=\"rowIndex\"` syntax.\n * - `dataItem`&mdash;The current data item. Represents the default context that will be assigned to any template variable which utilizes the `let-x` syntax&mdash;for example, `let-dataItem`.\n * - `column`&mdash;The current column instance. Use it as an alias for a template variable by utilizing the `let-column=\"column\"` syntax.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\n *                     Data Row #: {{rowIndex}} /\n *                     <strong>{{dataItem.ProductName}}</strong>\n *                     ({{dataItem.Discontinued ? \"discontinued\" : \"active\"}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\nclass CellTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCellTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CellTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCellTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: CellTemplateDirective, selector: \"[kendoGridCellTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CellTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridCellTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Represents the group-header cell template of the Grid which helps to customize the content of the group header item.\n * To define the group header template, nest an `<ng-template>` tag with the `kendoGridGroupHeaderTemplate`\n * directive inside `<kendo-grid-column>`.\n *\n * The template context is set to the current data item and the following additional fields are passed:\n * - `group`&mdash;The current group item.\n * - `field`&mdash;The name of the field by which data is grouped.\n * - `value`&mdash;The current group value.\n * - `aggregates`&mdash;All aggregate values for the current group.\n * - `index`&mdash;The index of the current group.\n * - `expanded`&mdash;A boolean value indicating if the group is currently expanded.\n * ([see example]({% slug groupable_grid_with_aggregates %})).\n *\n * @example\n * ```ts\n * import { process } from '@progress/kendo-data-query';\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\" [group]=\"groups\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridGroupHeaderTemplate let-group let-field=\"field\" let-value=\"value\">\n *                    <strong>{{field}}</strong>: {{value}}\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public groups = [{ field: \"ProductName\" }];\n *\n *     public gridData = process([{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ], {\n *      group: this.groups\n *     });\n * }\n *\n * ```\n */\nclass GroupHeaderTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nGroupHeaderTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupHeaderTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nGroupHeaderTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: GroupHeaderTemplateDirective, selector: \"[kendoGridGroupHeaderTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupHeaderTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridGroupHeaderTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Represents the group-header column template of the Grid which helps to customize the content of the group headers.\n * To define the group header template, nest an `<ng-template>` tag with the `kendoGridGroupHeaderColumnTemplate`\n * directive inside `<kendo-grid-column>`. ([See example]({% slug groupable_grid_with_aggregates %})).\n *\n * The template context is set to the current data item and the following additional fields are passed:\n * - `group`&mdash;The current group item.\n * - `field`&mdash;The name of the field by which data is grouped.\n * - `value`&mdash;The current group value.\n * - `aggregates`&mdash;All aggregate values for the current group.\n *\n * @example\n * ```ts\n * <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *     <ng-template kendoGridGroupHeaderColumnTemplate let-group=\"group\" let-aggregates=\"aggregates\">\n *         <span title=\"Group Header Column Template for ProductName\">\n *             Count: {{ aggregates.Discontinued.count }}\n *         </span>\n *     </ng-template>\n * </kendo-grid-column>\n * ```\n */\nclass GroupHeaderColumnTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nGroupHeaderColumnTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupHeaderColumnTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nGroupHeaderColumnTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: GroupHeaderColumnTemplateDirective, selector: \"[kendoGridGroupHeaderColumnTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupHeaderColumnTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridGroupHeaderColumnTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Represents the column edit-cell template of the Grid ([see example]({% slug inline_editing_grid %}#toc-using-reactive-forms)).\n * Helps to customize the content of the edited cells. To define the cell template, nest an `<ng-template>`\n * tag with the `kendoGridEditTemplate` directive inside a `<kendo-grid-column>` tag.\n *\n * The template context is set to the current form group and the following additional fields are passed:\n * - `formGroup`&mdash;The current [FormGroup](link:site.data.urls.angular['formgroupapi']).\n * Represents the default context that will be assigned to any template variable which utilizes the `let-x` syntax&mdash;for example, `let-formGroup`.\n * If you use the Grid inside [Template-Driven Forms](link:site.data.urls.angular['forms']), it will be `undefined`.\n * - `rowIndex`&mdash;The current data row index. If inside a new item row, `rowIndex` is `-1`. Use it as an alias for a template variable by utilizing the `let-rowIndex=\"rowIndex\"` syntax.\n * - `dataItem`&mdash;The current data item. Use it as an alias for a template variable by utilizing the `let-dataItem=\"dataItem\"` syntax.\n * - `column`&mdash;The current column instance. Use it as an alias for a template variable by utilizing the `let-column=\"column\"` syntax.\n * - `isNew`&mdash;The state of the current item. Use it as an alias for a template variable by utilizing the `let-isNew=\"isNew\"` syntax.\n */\nclass EditTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nEditTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: EditTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nEditTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: EditTemplateDirective, selector: \"[kendoGridEditTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: EditTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridEditTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Represents the column group footer cell template of the Grid which helps to customize the group footer cell for the column.\n * To define the group footer template, nest an `<ng-template>` tag with the `kendoGridGroupFooterTemplate` directive\n * inside `<kendo-grid-column>`.\n *\n * The template context is set to the current aggregates and the following additional fields are passed:\n * - `column`&mdash;Defines an instance of the `ColumnComponent` option.\n * - `field`&mdash;The current column field name.\n * - `group`&mdash;The current group data item.\n * - `aggregates`&mdash;All aggregate values for the current group.\n *\n * @example\n * ```ts-preview\n * import { process } from '@progress/kendo-data-query';\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\" [group]=\"groups\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridGroupFooterTemplate let-aggregates let-field=\"field\">\n *                    Count: {{aggregates[field].count}}\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public groups = [{ field: \"ProductName\", aggregates: [{ field: \"ProductName\", aggregate: \"count\" }] }];\n *\n *     public gridData = process([{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ], {\n *      group: this.groups\n *     });\n * }\n * ```\n */\nclass GroupFooterTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nGroupFooterTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupFooterTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nGroupFooterTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: GroupFooterTemplateDirective, selector: \"[kendoGridGroupFooterTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupFooterTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridGroupFooterTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Represents the column header cell template of the Grid\n * ([more information and example]({% slug templates_columns_grid %}#toc-header-template)).\n * Helps to customize the table header cell for the column.\n * To define a header template, nest an `<ng-template>` tag with the\n * [kendoGridHeaderTemplate]({% slug api_grid_headertemplatedirective %}) directive inside the `<kendo-grid-column>` tag.\n *\n *  The template context is set to the current column and then the following additional fields are passed:\n * * `column`&mdash;Defines an instance of the [ColumnComponent]({% slug api_grid_columncomponent %}) option.\n * * `columnIndex`&mdash;Defines the current column index.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridHeaderTemplate let-column let-columnIndex=\"columnIndex\">\n *                   {{column.field}}({{columnIndex}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *              <kendo-grid-column field=\"UnitPrice\">\n *                 <ng-template kendoGridHeaderTemplate let-column let-columnIndex=\"columnIndex\">\n *                   {{column.field}}({{columnIndex}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\nclass HeaderTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nHeaderTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HeaderTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nHeaderTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: HeaderTemplateDirective, selector: \"[kendoGridHeaderTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HeaderTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridHeaderTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Represents the column footer cell template of the Grid\n * ([more information and example]({% slug templates_columns_grid %}#toc-footer-template)).\n * Helps to customize the table footer cell for the column.\n * To define a footer template, nest an `<ng-template>` tag with the\n * [kendoGridFooterTemplate]({% slug api_grid_footertemplatedirective %}) directive inside the `<kendo-grid-column>` tag.\n *\n * The template context is set to the current column and the following additional fields are passed:\n * * `column`&mdash;Defines an instance of the [ColumnComponent]({% slug api_grid_columncomponent %}) option.\n * * `columnIndex`&mdash;Defines the current column index.\n *\n * For more information on how to display aggregates in the footer of the Grid,\n * refer to the article on [aggregates]({% slug groupable_grid_with_aggregates %}).\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\" scrollable=\"none\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridFooterTemplate let-column let-columnIndex=\"columnIndex\">\n *                   {{column.field}}({{columnIndex}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *              <kendo-grid-column field=\"UnitPrice\">\n *                 <ng-template kendoGridFooterTemplate let-column let-columnIndex=\"columnIndex\">\n *                   {{column.field}}({{columnIndex}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\nclass FooterTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nFooterTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FooterTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nFooterTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FooterTemplateDirective, selector: \"[kendoGridFooterTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FooterTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridFooterTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Represents the template for the column menu in the Grid. Provides an option for\n * customizing the content of the column menu for all or for specific columns.\n * To define the content template, nest an `<ng-template>` tag with the\n * `kendoGridColumnMenuTemplate` directive inside the `kendo-grid` or the `<kendo-grid-column>` component.\n *\n * The template context is passes through the following fields:\n * - `service`&mdash;Represents the [ColumnMenuService]({% slug api_grid_columnmenuservice %}).\n * - `column`&mdash;Represents the Grid column.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [kendoGridBinding]=\"data\" [sortable]=\"true\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-sort [service]=\"service\">\n *              </kendo-grid-columnmenu-sort>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\" [width]=\"100\">\n *              <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *                  <kendo-grid-columnmenu-lock [service]=\"service\">\n *                  </kendo-grid-columnmenu-lock>\n *                  <kendo-grid-columnmenu-sort [service]=\"service\">\n *                  </kendo-grid-columnmenu-sort>\n *              </ng-template>\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [width]=\"100\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }, { Field1: 'Foo1', Field2: 'Bar1' }];\n * }\n *\n * ```\n */\nclass ColumnMenuTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nColumnMenuTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nColumnMenuTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnMenuTemplateDirective, selector: \"[kendoGridColumnMenuTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridColumnMenuTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n// Incremented each time the service is instantiated.\nlet sequence = 0;\n/**\n * @hidden\n */\nclass IdService {\n    constructor() {\n        this.prefix = `k-grid${sequence++}`;\n    }\n    gridId() {\n        return this.prefix;\n    }\n    cellId(rowIndex, colIndex) {\n        return `${this.prefix}-r${rowIndex}c${colIndex}`;\n    }\n    selectionCheckboxId(itemIndex) {\n        return `${this.prefix}-checkbox${itemIndex}`;\n    }\n    selectAllCheckboxId() {\n        return `${this.prefix}-select-all`;\n    }\n}\nIdService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: IdService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nIdService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: IdService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: IdService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\n\n/**\n * @hidden\n */\nconst isSpanColumn = column => column.isSpanColumn;\n/**\n * @hidden\n */\nconst isCheckboxColumn = column => column.isCheckboxColumn;\nconst isColumnContainer = column => column.isColumnGroup || isSpanColumn(column);\n/**\n * The base class for the column components of the Grid.\n */\nclass ColumnBase {\n    /**\n     * @hidden\n     */\n    constructor(parent, idService) {\n        this.parent = parent;\n        /**\n         * @hidden\n         */\n        this.matchesMedia = true;\n        /**\n         * The column index after reordering.\n         *\n         * > `orderIndex` is a read-only property. Setting this field does not affect column order.\n         */\n        this.orderIndex = 0;\n        /**\n         * @hidden\n         */\n        this.isColumnGroup = false;\n        /**\n         * @hidden\n         */\n        this.isSpanColumn = false;\n        /**\n         * Indicates whether the column is resizable.\n         * @default true\n         */\n        this.resizable = true;\n        /**\n         * Indicates whether the column is reorderable.\n         * @default true\n         */\n        this.reorderable = true;\n        /**\n         * The width (in pixels) below which the user is not able to resize the column by using the UI ([see example]({% slug resizing_columns_grid %}#toc-limiting-the-resizing)).\n         * @default 10\n         */\n        this.minResizableWidth = 10;\n        this._locked = false;\n        /**\n         * Determines whether the column will be always visible when scrolling the Grid horizontally.\n         *\n         * @default false\n         */\n        this.sticky = false;\n        /**\n         * Specifies if the column can be locked or unlocked from the column menu or by reordering the columns.\n         */\n        this.lockable = true;\n        /**\n         * Specifies if the column can be stuck or unstuck from the column menu.\n         */\n        this.stickable = true;\n        /**\n         * Specifies if the column menu will be shown for the column.\n         */\n        this.columnMenu = true;\n        /**\n         * Specifies if the column will be included in the column-chooser list.\n         */\n        this.includeInChooser = true;\n        /**\n         * @hidden\n         */\n        this.headerTemplates = new QueryList();\n        /**\n         * @hidden\n         */\n        this.columnMenuTemplates = new QueryList();\n        this.idService = idService;\n        if (parent && idService && parent.idService.gridId() === idService.gridId() && !isColumnContainer(parent)) {\n            throw new Error('Columns can be nested only inside ColumnGroupComponent');\n        }\n    }\n    /**\n     * @hidden\n     */\n    set leafIndex(value) {\n        this._leafIndex = value;\n    }\n    /**\n     * @hidden\n     */\n    get leafIndex() {\n        return this._leafIndex;\n    }\n    /**\n     * The width of the column (in pixels).\n     */\n    set width(value) {\n        if (typeof value === 'string') {\n            const parsedValue = this._width = parseInt(value, 10);\n            if (isDevMode()) {\n                console.warn(`Expected numeric value for column width, but got a string \"${value}\". Treating as ${parsedValue}px.`);\n            }\n        }\n        else {\n            this._width = value;\n        }\n    }\n    get width() { return this._width; }\n    /**\n     * Toggles the locked (frozen) state of the columns ([more information and example]({% slug locked_columns_grid %})).\n     *\n     * @default false\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-grid [data]=\"gridData\" [scrollable]=\"scrollable\" style=\"height: 200px\">\n     *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" [width]=\"120\" [locked]=\"true\">\n     *          </kendo-grid-column>\n     *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\" [width]=\"200\">\n     *          </kendo-grid-column>\n     *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" [width]=\"230\">\n     *          </kendo-grid-column>\n     *        </kendo-grid>\n     *    `\n     * })\n     *\n     * class AppComponent {\n     *    public gridData: any[];\n     *\n     *    constructor() {\n     *        this.gridData = products;\n     *    }\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     *\n     * ```\n     */\n    set locked(value) {\n        this._locked = value;\n    }\n    get locked() {\n        return this._locked;\n    }\n    /**\n     * @hidden\n     */\n    get level() {\n        if (this.parent && isSpanColumn(this.parent)) {\n            return this.parent.level;\n        }\n        return this.parent ? this.parent.level + 1 : 0;\n    }\n    /**\n     * @hidden\n     */\n    get isLocked() {\n        return this.parent ? this.parent.isLocked : this.locked;\n    }\n    /**\n     * @hidden\n     */\n    get colspan() {\n        return 1;\n    }\n    /**\n     * @hidden\n     */\n    rowspan(totalColumnLevels) {\n        return this.level < totalColumnLevels ? (totalColumnLevels - this.level) + 1 : 1;\n    }\n    /**\n     * @hidden\n     */\n    get headerTemplateRef() {\n        const template = this.headerTemplates.first;\n        return template ? template.templateRef : undefined;\n    }\n    /**\n     * @hidden\n     */\n    get footerTemplateRef() {\n        return this.footerTemplate ? this.footerTemplate.templateRef : undefined;\n    }\n    /**\n     * @hidden\n     */\n    get columnMenuTemplateRef() {\n        const template = this.columnMenuTemplates.first;\n        return template ? template.templateRef : null;\n    }\n    /**\n     * @hidden\n     */\n    get displayTitle() {\n        return this.title;\n    }\n    /**\n     * @hidden\n     */\n    get isVisible() {\n        return !this.hidden && this.matchesMedia;\n    }\n}\nColumnBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnBase, deps: [{ token: ColumnBase }, { token: IdService }], target: i0.ɵɵFactoryTarget.Component });\nColumnBase.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnBase, selector: \"kendo-grid-column-base\", inputs: { resizable: \"resizable\", reorderable: \"reorderable\", minResizableWidth: \"minResizableWidth\", maxResizableWidth: \"maxResizableWidth\", title: \"title\", width: \"width\", autoSize: \"autoSize\", locked: \"locked\", sticky: \"sticky\", hidden: \"hidden\", media: \"media\", lockable: \"lockable\", stickable: \"stickable\", columnMenu: \"columnMenu\", includeInChooser: \"includeInChooser\", style: \"style\", headerStyle: \"headerStyle\", filterStyle: \"filterStyle\", footerStyle: \"footerStyle\", cssClass: [\"class\", \"cssClass\"], headerClass: \"headerClass\", filterClass: \"filterClass\", footerClass: \"footerClass\" }, queries: [{ propertyName: \"footerTemplate\", first: true, predicate: FooterTemplateDirective, descendants: true }, { propertyName: \"headerTemplates\", predicate: HeaderTemplateDirective }, { propertyName: \"columnMenuTemplates\", predicate: ColumnMenuTemplateDirective }], ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnBase, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-column-base',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: ColumnBase }, { type: IdService }]; }, propDecorators: { resizable: [{\n                type: Input\n            }], reorderable: [{\n                type: Input\n            }], minResizableWidth: [{\n                type: Input\n            }], maxResizableWidth: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], autoSize: [{\n                type: Input\n            }], locked: [{\n                type: Input\n            }], sticky: [{\n                type: Input\n            }], hidden: [{\n                type: Input\n            }], media: [{\n                type: Input\n            }], lockable: [{\n                type: Input\n            }], stickable: [{\n                type: Input\n            }], columnMenu: [{\n                type: Input\n            }], includeInChooser: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], headerStyle: [{\n                type: Input\n            }], filterStyle: [{\n                type: Input\n            }], footerStyle: [{\n                type: Input\n            }], cssClass: [{\n                type: Input,\n                args: ['class']\n            }], headerClass: [{\n                type: Input\n            }], filterClass: [{\n                type: Input\n            }], footerClass: [{\n                type: Input\n            }], headerTemplates: [{\n                type: ContentChildren,\n                args: [HeaderTemplateDirective, { descendants: false }]\n            }], footerTemplate: [{\n                type: ContentChild,\n                args: [FooterTemplateDirective, { static: false }]\n            }], columnMenuTemplates: [{\n                type: ContentChildren,\n                args: [ColumnMenuTemplateDirective]\n            }] } });\n\n/**\n * Represents the filter-cell template ([see example]({% slug filter_row %}#toc-custom-filters)).\n */\nclass FilterCellTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nFilterCellTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterCellTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nFilterCellTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FilterCellTemplateDirective, selector: \"[kendoGridFilterCellTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterCellTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridFilterCellTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Represents the filter-menu template\n * ([see example]({% slug filter_menu %}#toc-custom-filters)).\n */\nclass FilterMenuTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nFilterMenuTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterMenuTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nFilterMenuTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FilterMenuTemplateDirective, selector: \"[kendoGridFilterMenuTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterMenuTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridFilterMenuTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * @hidden\n */\nfunction isColumnComponent(column) {\n    return isPresent(column.field);\n}\n/**\n * Represents the columns of the [Angular Data Grid]({% slug overview_grid %}).\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" [width]=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" [width]=\"230\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"Discontinued\" [width]=\"120\">\n *              <ng-template kendoGridCellTemplate let-dataItem>\n *                  <input type=\"checkbox\" [checked]=\"dataItem.Discontinued\" disabled/>\n *              </ng-template>\n *          </kendo-grid-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\nclass ColumnComponent extends ColumnBase {\n    constructor(parent, idService) {\n        super(parent, idService);\n        /**\n         * Allows the column headers to be clicked and the `sortChange` event emitted.\n         * You have to handle the `sortChange` event yourself and sort the data.\n         */\n        this.sortable = true;\n        /**\n         * Determines if the column can be dragged to the group panel. The default value is `true`.\n         * If set to `false`, you can group the columns by the column field by using the API of the Grid.\n         */\n        this.groupable = true;\n        /**\n         * Defines the editor type ([see example]({% slug inline_editing_grid %}#toc-using-reactive-forms)).\n         * Used when the column enters the edit mode. The default value is `text`.\n         *\n         * @example\n         * ```html-no-run\n         * <kendo-grid>\n         *    <kendo-grid-column field=\"UnitPrice\" editor=\"numeric\">\n         *    </kendo-grid-column>\n         * </kendo-grid>\n         * ```\n         */\n        this.editor = 'text';\n        /**\n         * Defines the filter type that is displayed inside the filter row. The default value is `text`.\n         *\n         * @example\n         * ```html-no-run\n         * <kendo-grid>\n         *    <kendo-grid-column field=\"UnitPrice\" filter=\"numeric\">\n         *    </kendo-grid-column>\n         * </kendo-grid>\n         * ```\n         */\n        this.filter = 'text';\n        /**\n         * Defines if a filter UI will be displayed for this column. The default value is `true`.\n         *\n         * @example\n         * ```html-no-run\n         * <kendo-grid>\n         *    <kendo-grid-column field=\"UnitPrice\" [filterable]=\"false\">\n         *    </kendo-grid-column>\n         * </kendo-grid>\n         * ```\n         */\n        this.filterable = true;\n        /**\n         * Defines whether the column is editable. The default value is `true`.\n         *\n         * @example\n         * ```html-no-run\n         * <kendo-grid>\n         *    <kendo-grid-column field=\"UnitPrice\" [editable]=\"false\">\n         *    </kendo-grid-column>\n         * </kendo-grid>\n         * ```\n         */\n        this.editable = true;\n    }\n    get templateRef() {\n        return this.template ? this.template.templateRef : undefined;\n    }\n    get groupHeaderTemplateRef() {\n        return this.groupHeaderTemplate ? this.groupHeaderTemplate.templateRef : undefined;\n    }\n    get groupHeaderColumnTemplateRef() {\n        return this.groupHeaderColumnTemplate ? this.groupHeaderColumnTemplate.templateRef : undefined;\n    }\n    get groupFooterTemplateRef() {\n        return this.groupFooterTemplate ? this.groupFooterTemplate.templateRef : undefined;\n    }\n    get editTemplateRef() {\n        return this.editTemplate ? this.editTemplate.templateRef : undefined;\n    }\n    get filterCellTemplateRef() {\n        return this.filterCellTemplate ? this.filterCellTemplate.templateRef : undefined;\n    }\n    get filterMenuTemplateRef() {\n        return this.filterMenuTemplate ? this.filterMenuTemplate.templateRef : undefined;\n    }\n    get displayTitle() {\n        return this.title === undefined ? this.field : this.title;\n    }\n}\nColumnComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnComponent, deps: [{ token: ColumnBase, host: true, optional: true, skipSelf: true }, { token: IdService, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nColumnComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnComponent, selector: \"kendo-grid-column\", inputs: { field: \"field\", format: \"format\", sortable: \"sortable\", groupable: \"groupable\", editor: \"editor\", filter: \"filter\", filterable: \"filterable\", editable: \"editable\" }, providers: [\n        {\n            provide: ColumnBase,\n            useExisting: forwardRef(() => ColumnComponent)\n        }\n    ], queries: [{ propertyName: \"template\", first: true, predicate: CellTemplateDirective, descendants: true }, { propertyName: \"groupHeaderTemplate\", first: true, predicate: GroupHeaderTemplateDirective, descendants: true }, { propertyName: \"groupHeaderColumnTemplate\", first: true, predicate: GroupHeaderColumnTemplateDirective, descendants: true }, { propertyName: \"groupFooterTemplate\", first: true, predicate: GroupFooterTemplateDirective, descendants: true }, { propertyName: \"editTemplate\", first: true, predicate: EditTemplateDirective, descendants: true }, { propertyName: \"filterCellTemplate\", first: true, predicate: FilterCellTemplateDirective, descendants: true }, { propertyName: \"filterMenuTemplate\", first: true, predicate: FilterMenuTemplateDirective, descendants: true }], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: ColumnBase,\n                            useExisting: forwardRef(() => ColumnComponent)\n                        }\n                    ],\n                    selector: 'kendo-grid-column',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: ColumnBase, decorators: [{\n                    type: SkipSelf\n                }, {\n                    type: Host\n                }, {\n                    type: Optional\n                }] }, { type: IdService, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { field: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], sortable: [{\n                type: Input\n            }], groupable: [{\n                type: Input\n            }], editor: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], filterable: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], template: [{\n                type: ContentChild,\n                args: [CellTemplateDirective, { static: false }]\n            }], groupHeaderTemplate: [{\n                type: ContentChild,\n                args: [GroupHeaderTemplateDirective, { static: false }]\n            }], groupHeaderColumnTemplate: [{\n                type: ContentChild,\n                args: [GroupHeaderColumnTemplateDirective, { static: false }]\n            }], groupFooterTemplate: [{\n                type: ContentChild,\n                args: [GroupFooterTemplateDirective, { static: false }]\n            }], editTemplate: [{\n                type: ContentChild,\n                args: [EditTemplateDirective, { static: false }]\n            }], filterCellTemplate: [{\n                type: ContentChild,\n                args: [FilterCellTemplateDirective, { static: false }]\n            }], filterMenuTemplate: [{\n                type: ContentChild,\n                args: [FilterMenuTemplateDirective, { static: false }]\n            }] } });\n\n/**\n * @hidden\n */\nfunction isSpanColumnComponent(column) {\n    return column.isSpanColumn;\n}\n/**\n * Represents a column which can be spanned over multiple data cells while the individual\n * header and footer cells are retained ([see example]({% slug spanned_columns_grid %})).\n * Enables you to achieve more flexible layout while keeping the built-in UI element for\n * [sorting]({% slug sorting_grid %}), [filtering]({% slug filtering_grid %}), and\n * [grouping]({% slug grouping_grid %}). Wrap the columns that will be\n * merged inside the `<kendo-grid-span-column>` tag.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid\n *              [sortable]=\"true\"\n *              [filterable]=\"true\"\n *              [kendoGridBinding]=\"products\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" [width]=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-span-column>\n *              <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *              </kendo-grid-column>\n *              <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" filter=\"numeric\" [width]=\"180\" format=\"{0:c}\">\n *              </kendo-grid-column>\n *          </kendo-grid-span-column>\n *          <kendo-grid-column field=\"Discontinued\" [width]=\"120\" filter=\"boolean\">\n *              <ng-template kendoGridCellTemplate let-dataItem>\n *                  <input type=\"checkbox\" [checked]=\"dataItem.Discontinued\" disabled/>\n *              </ng-template>\n *          </kendo-grid-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *   public products = [{\n *      \"ProductID\": 1,\n *      \"ProductName\": \"Chai\",\n *      \"UnitPrice\": 18.0000,\n *      \"Discontinued\": true\n *    }, {\n *      \"ProductID\": 2,\n *      \"ProductName\": \"Chang\",\n *      \"UnitPrice\": 19.0000,\n *      \"Discontinued\": false\n *    }\n *   ];\n * }\n *\n * ```\n *\n * By default, the data cell displays the data for the specified fields. To further customize\n * the span-column functionality, use a [cell template]({% slug api_grid_celltemplatedirective %}).\n *\n * ```html-no-run\n * <kendo-grid-span-column>\n *  <kendo-grid-column field=\"field1\" title=\"Field 1\"></kendo-grid-column>\n *  <kendo-grid-column field=\"field2\" title=\"Field 2\"></kendo-grid-column>\n *    <ng-template kendoGridCellTemplate let-dataItem>\n *        <h5>{{ dataItem.field1 }}</h5>\n *        <p>{{ dataItem.field2 }}</p>\n *    </ng-template>\n *  </kendo-grid-span-column>\n * ```\n */\nclass SpanColumnComponent extends ColumnBase {\n    constructor(parent, idService) {\n        super(parent, idService);\n        /*\n         * @hidden\n         */\n        this.isSpanColumn = true;\n        this.template = new QueryList();\n        this.editTemplate = new QueryList();\n        /**\n         * @hidden\n         */\n        this.childColumns = new QueryList();\n        /**\n         * @hidden\n         */\n        this.includeInChooser = false;\n        this._editable = true;\n        if (parent && parent.isSpanColumn) {\n            throw new Error('SpanColumn cannot be nested inside another SpanColumn');\n        }\n    }\n    /**\n     * Defines whether the edit template of the column will be rendered. The default value is `false`.\n     *\n     * > To enable the editing functionality for a spanned column, set an edit template for it.\n     *\n     * @example\n     * ```html-no-run\n     * <kendo-grid>\n     *    <kendo-grid-span-column [editable]=\"false\">\n     *      <kendo-grid-column field=\"UnitPrice\">\n     *      </kendo-grid-column>\n     *      <kendo-grid-column field=\"ProductName\">\n     *      </kendo-grid-column>\n     *      <ng-template kendoGridEditTemplate>\n     *         .....\n     *      </ng-template>\n     *    </kendo-grid-span-column>\n     * </kendo-grid>\n     * ```\n     */\n    set editable(value) {\n        this._editable = value;\n    }\n    get editable() {\n        return isPresent(this.editTemplateRef) && this._editable;\n    }\n    /**\n     * @hidden\n     * added for backwards compitability\n     */\n    set width(_value) {\n    }\n    get width() {\n        return this.childColumns.reduce((total, column) => total + column.width, 0);\n    }\n    /**\n     * @hidden\n     */\n    get leafIndex() {\n        return this.childColumns.first.leafIndex;\n    }\n    /**\n     * @hidden\n     */\n    get templateRef() {\n        const template = this.template.first;\n        return template ? template.templateRef : undefined;\n    }\n    /**\n     * @hidden\n     */\n    get editTemplateRef() {\n        const editTemplate = this.editTemplate.first;\n        return editTemplate ? editTemplate.templateRef : undefined;\n    }\n    /**\n     * @hidden\n     */\n    get colspan() {\n        return this.childColumns.filter(c => c.isVisible).length;\n    }\n    /**\n     * Toggles the locked (frozen) state of the columns. Locked columns are visible\n     * at all times during the horizontal scrolling of the Grid.\n     *\n     * For the option to work properly, make sure that:\n     * - Scrolling is enabled.\n     * - The `height` option of the Grid is set.\n     * - The widths of all Grid columns are explicitly set in pixels. In this way,\n     * the Grid adjusts the layout of the locked and unlocked columns.\n     *\n     * @default false\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-grid [data]=\"gridData\" [scrollable]=\"scrollable\" style=\"height: 200px\">\n     *          <kendo-grid-span-column [locked]=\"true\">\n     *             <kendo-grid-column field=\"ProductID\" title=\"Product ID\" [width]=\"120\">\n     *             </kendo-grid-column>\n     *             <kendo-grid-column field=\"ProductName\" title=\"Product Name\" [width]=\"200\">\n     *             </kendo-grid-column>\n     *          </kendo-grid-span-column>\n     *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" [width]=\"230\">\n     *          </kendo-grid-column>\n     *        </kendo-grid>\n     *    `\n     * })\n     *\n     * class AppComponent {\n     *    public gridData: any[];\n     *\n     *    constructor() {\n     *        this.gridData = products;\n     *    }\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     *\n     * ```\n     */\n    set locked(value) {\n        this._locked = value;\n    }\n    get locked() {\n        return this._locked || this.childColumns.some(c => c.locked);\n    }\n    get childrenArray() {\n        return this.childColumns.toArray();\n    }\n    get hasChildren() {\n        return this.childColumns.length > 0;\n    }\n}\nSpanColumnComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SpanColumnComponent, deps: [{ token: ColumnBase, host: true, optional: true, skipSelf: true }, { token: IdService, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nSpanColumnComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: SpanColumnComponent, selector: \"kendo-grid-span-column\", inputs: { editable: \"editable\", locked: \"locked\" }, providers: [\n        {\n            provide: ColumnBase,\n            useExisting: forwardRef(() => SpanColumnComponent)\n        }\n    ], queries: [{ propertyName: \"template\", predicate: CellTemplateDirective }, { propertyName: \"editTemplate\", predicate: EditTemplateDirective }, { propertyName: \"childColumns\", predicate: ColumnComponent }], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SpanColumnComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: ColumnBase,\n                            useExisting: forwardRef(() => SpanColumnComponent)\n                        }\n                    ],\n                    selector: 'kendo-grid-span-column',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: ColumnBase, decorators: [{\n                    type: SkipSelf\n                }, {\n                    type: Host\n                }, {\n                    type: Optional\n                }] }, { type: IdService, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { template: [{\n                type: ContentChildren,\n                args: [CellTemplateDirective, { descendants: false }]\n            }], editTemplate: [{\n                type: ContentChildren,\n                args: [EditTemplateDirective, { descendants: false }]\n            }], childColumns: [{\n                type: ContentChildren,\n                args: [ColumnComponent]\n            }], editable: [{\n                type: Input\n            }], locked: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nconst expandColumns = (columns) => (columns.reduce((acc, column) => acc.concat(isSpanColumnComponent(column) ? column.childrenArray : [column]), []));\n/**\n * @hidden\n */\nconst expandColumnsWithSpan = (columns) => (columns.reduce((acc, column) => acc.concat(isSpanColumnComponent(column) ?\n    [column].concat(column.childrenArray) :\n    [column]), []));\n/**\n * @hidden\n */\nconst columnsToRender = (columns) => (expandColumns(columns).filter(x => x.isVisible));\nconst sumProp = (prop) => (array) => (array || []).reduce((prev, curr) => prev + (curr[prop] || 0), 0);\n/**\n * @hidden\n */\nconst sumColumnWidths = sumProp('width');\n/**\n * @hidden\n */\nconst columnsSpan = sumProp('colspan');\nconst validField = new RegExp(`^[$A-Z\\_a-z][$A-Z\\_a-z0-9\\\\.]*$`);\n/**\n * @hidden\n */\nconst isValidFieldName = (fieldName) => !isNullOrEmptyString(fieldName) && validField.test(fieldName) &&\n    fieldName[0] !== \".\" && fieldName[fieldName.length - 1] !== \".\";\n/**\n * @hidden\n */\nconst children = column => column.children.filter(child => child !== column);\n/**\n * @hidden\n */\nconst leafColumns = columns => {\n    return columns.reduce((acc, column) => {\n        if (column.isColumnGroup) {\n            acc = acc.concat(leafColumns(children(column)));\n        }\n        else if (column.isSpanColumn) {\n            acc = acc.concat(column.childrenArray);\n        }\n        else {\n            acc.push(column);\n        }\n        return acc;\n    }, []).filter(x => x.isVisible);\n};\n/**\n * @hidden\n */\nconst someLeafColumn = (callback, ...columns) => leafColumns(columns).some(callback);\n/**\n * @hidden\n */\nconst resizableColumns = columns => columns.filter(column => isTruthy(column.resizable) && column.isVisible);\n/**\n * @hidden\n */\nconst sortColumns = (columns) => orderBy(columns, [{ field: 'orderIndex', dir: 'asc' }]);\n/**\n * @hidden\n */\nconst isInSpanColumn$1 = (column) => isTruthy(column.parent) && isSpanColumnComponent(column.parent);\n\n/**\n * @hidden\n */\nfunction isColumnGroupComponent(column) {\n    return column.isColumnGroup;\n}\n/**\n * Represents the column group header of the Grid\n * ([more information and examples]({% slug multicolumnheaders_columns_grid %})).\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *     <kendo-grid [data]=\"gridData\">\n *       <kendo-grid-column-group title=\"Product Info\">\n *         <ng-template kendoGridHeaderTemplate let-columnIndex=\"columnIndex\" let-column=\"column\">\n *               Column index: {{columnIndex}} / column title: {{column.title}}\n *         </ng-template>\n *         <kendo-grid-column field=\"ProductID\" title=\"Product ID\" [width]=\"120\">\n *         </kendo-grid-column>\n *         <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *         </kendo-grid-column>\n *       </kendo-grid-column-group>\n *       <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" [width]=\"230\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"Discontinued\" [width]=\"120\">\n *           <ng-template kendoGridCellTemplate let-dataItem>\n *               <input type=\"checkbox\" [checked]=\"dataItem.Discontinued\" disabled/>\n *           </ng-template>\n *       </kendo-grid-column>\n *     </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\nclass ColumnGroupComponent extends ColumnBase {\n    constructor(parent, idService) {\n        super(parent, idService);\n        this.parent = parent;\n        /**\n         * @hidden\n         */\n        this.includeInChooser = false;\n        /**\n         * @hidden\n         */\n        this.isColumnGroup = true;\n        /**\n         * @hidden\n         */\n        this.minResizableWidth = 10;\n        if (parent && parent.isSpanColumn) {\n            throw new Error('ColumnGroupComponent cannot be nested inside SpanColumnComponent');\n        }\n    }\n    /**\n     * @hidden\n     */\n    rowspan() {\n        return 1;\n    }\n    /**\n     * @hidden\n     */\n    get colspan() {\n        if (!this.children || this.children.length === 1) {\n            return 1;\n        }\n        return columnsSpan(this.children\n            .filter(child => child !== this && child.isVisible));\n    }\n    /**\n     * @hidden\n     */\n    get leafIndex() {\n        return this.children ? (this.firstChild || {}).leafIndex : -1;\n    }\n    get childrenArray() {\n        return this.children.filter(c => c !== this);\n    }\n    get hasChildren() {\n        return Boolean(this.firstChild);\n    }\n    get firstChild() {\n        return this.children.find(column => column !== this);\n    }\n}\nColumnGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnGroupComponent, deps: [{ token: ColumnBase, host: true, optional: true, skipSelf: true }, { token: IdService, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nColumnGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnGroupComponent, selector: \"kendo-grid-column-group\", providers: [\n        {\n            provide: ColumnBase,\n            useExisting: forwardRef(() => ColumnGroupComponent)\n        }\n    ], queries: [{ propertyName: \"children\", predicate: ColumnBase }], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnGroupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: ColumnBase,\n                            useExisting: forwardRef(() => ColumnGroupComponent)\n                        }\n                    ],\n                    selector: 'kendo-grid-column-group',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: ColumnBase, decorators: [{\n                    type: SkipSelf\n                }, {\n                    type: Host\n                }, {\n                    type: Optional\n                }] }, { type: IdService, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { children: [{\n                type: ContentChildren,\n                args: [ColumnBase]\n            }] } });\n\n/**\n * Represents the detail template of the Grid ([more information and examples]({% slug detailrowtemplate_grid %})).\n * To define the detail template, nest an `<ng-template>` tag with the `kendoGridDetailTemplate` directive inside a `<kendo-grid>` tag.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *   selector: 'my-app',\n *   template: `\n *       <kendo-grid\n *         [data]=\"data\"\n *         selectable=\"true\"\n *         style=\"height: 160px\"\n *         >\n *         <kendo-grid-column field=\"ProductID\"></kendo-grid-column>\n *         <kendo-grid-column field=\"ProductName\"></kendo-grid-column>\n *         <kendo-grid-column field=\"UnitPrice\"></kendo-grid-column>\n *         <ng-template kendoGridDetailTemplate let-dataItem>\n *           <div *ngIf=\"dataItem.Category\">\n *             <header>{{dataItem.Category?.CategoryName}}</header>\n *             <span>{{dataItem.Category?.Description}}</span>\n *           </div>\n *         </ng-template>\n *       </kendo-grid>\n *   `\n * })\n *\n * class AppComponent {\n *     public data = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false,\n *         \"Category\": {\n *             \"CategoryID\": 1,\n *             \"CategoryName\": \"Beverages\",\n *             \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n *         }\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": false,\n *         \"Category\": {\n *             \"CategoryID\": 1,\n *             \"CategoryName\": \"Beverages\",\n *             \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n *         }\n *       }, {\n *         \"ProductID\": 3,\n *         \"ProductName\": \"Aniseed Syrup\",\n *         \"UnitPrice\": 10.0000,\n *         \"Discontinued\": false,\n *         \"Category\": {\n *             \"CategoryID\": 2,\n *             \"CategoryName\": \"Condiments\",\n *             \"Description\": \"Sweet and savory sauces, relishes, spreads, and seasonings\"\n *         }\n *     }];\n *\n * }\n *\n * ```\n *\n */\nclass DetailTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._condition = () => true;\n    }\n    /**\n     * Defines the function that indicates if a given detail row and the associated **Expand** or **Collapse** button will be displayed.\n     */\n    set showIf(fn) {\n        if (typeof fn !== 'function') {\n            throw new Error(`showIf must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._condition = fn;\n    }\n    get showIf() {\n        return this._condition;\n    }\n}\nDetailTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DetailTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nDetailTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DetailTemplateDirective, selector: \"[kendoGridDetailTemplate]\", inputs: { showIf: [\"kendoGridDetailTemplateShowIf\", \"showIf\"] }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DetailTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridDetailTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { showIf: [{\n                type: Input,\n                args: [\"kendoGridDetailTemplateShowIf\"]\n            }] } });\n\nconst canCreateElement = () => isDocumentAvailable() && document.createElement;\nlet cachedScrollbarWidth = null;\nlet cachedPixelRatio;\nlet cachedRtlScrollLeft = null;\nfunction scrollbarWidth() {\n    if (cachedScrollbarWidth === null && canCreateElement()) {\n        cachedPixelRatio = window.devicePixelRatio || 1;\n        const div = document.createElement(\"div\");\n        div.style.cssText = \"overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block\";\n        div.innerHTML = \"&nbsp;\";\n        document.body.appendChild(div);\n        cachedScrollbarWidth = div.offsetWidth - div.scrollWidth;\n        document.body.removeChild(div);\n    }\n    return cachedScrollbarWidth;\n}\nfunction rtlScrollLeft() {\n    if (cachedRtlScrollLeft === null && canCreateElement()) {\n        const outer = document.createElement('div');\n        outer.style.direction = 'rtl';\n        outer.style.display = 'block';\n        outer.style.clear = 'both';\n        outer.style.width = '100px';\n        outer.style.visibility = 'hidden';\n        outer.style.position = 'absolute';\n        outer.style.left = '-10000px';\n        outer.style.overflow = 'scroll';\n        outer.style.zoom = '1';\n        const inner = document.createElement('div');\n        inner.style.width = '200px';\n        inner.style.height = '1px';\n        outer.append(inner);\n        document.body.appendChild(outer);\n        const initial = outer.scrollLeft;\n        outer.scrollLeft = -1;\n        cachedRtlScrollLeft = outer.scrollLeft < 0 ? outer.scrollLeft : initial;\n        document.body.removeChild(outer);\n    }\n    return cachedRtlScrollLeft;\n}\n/**\n * @hidden\n * move to kendo-common\n */\nclass BrowserSupportService {\n    constructor(zone, changeDetector) {\n        this.zone = zone;\n        this.changeDetector = changeDetector;\n        this.changes = new EventEmitter();\n        if (typeof window === 'undefined') {\n            return;\n        }\n        this.zone.runOutsideAngular(() => {\n            this.subscriptions = fromEvent(window, 'resize').pipe(auditTime(100)).subscribe(() => {\n                if (cachedPixelRatio !== window.devicePixelRatio) {\n                    zone.run(() => {\n                        cachedScrollbarWidth = null;\n                        this.changes.emit();\n                        this.changeDetector.markForCheck();\n                    });\n                }\n            });\n        });\n    }\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n            this.subscriptions = null;\n        }\n    }\n    get scrollbarWidth() {\n        return scrollbarWidth();\n    }\n    get rtlScrollLeft() {\n        return rtlScrollLeft();\n    }\n}\nBrowserSupportService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BrowserSupportService, deps: [{ token: i0.NgZone }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Injectable });\nBrowserSupportService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BrowserSupportService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BrowserSupportService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ChangeDetectorRef }]; } });\n\nconst isGroupItem = (source) => {\n    return source.items !== undefined &&\n        source.field !== undefined;\n};\nconst isVirtualGroupItem = (source) => {\n    return source.offset !== undefined &&\n        source.skipHeader !== undefined;\n};\nconst flattenGroups = (groups) => (groups.reduce((acc, curr) => {\n    if (isGroupItem(curr)) {\n        return acc.concat(flattenGroups(curr.items));\n    }\n    return acc.concat([curr]);\n}, []));\n/**\n * @hidden\n */\nconst itemAt = (data, index) => {\n    const first = data[0];\n    if (isPresent(first) && isGroupItem(first)) {\n        return flattenGroups(data)[index];\n    }\n    return data[index];\n};\n/**\n * @hidden\n */\nconst getIterator = (data, { footers, level, dataIndex, parentGroupIndex, groupIndex, parentGroup }) => {\n    const first = data[0];\n    if (isPresent(first) && isGroupItem(first)) {\n        if (isVirtualGroupItem(first)) {\n            groupIndex = isPresent(first.offset) ? first.offset : groupIndex;\n        }\n        return new GroupIterator(data, footers, level, dataIndex, parentGroupIndex, groupIndex, parentGroup);\n    }\n    return new ItemIterator(data, dataIndex, parentGroupIndex, parentGroup);\n};\nclass ArrayIterator {\n    constructor(arr, idx = 0) {\n        this.arr = arr;\n        this.idx = idx;\n        this.arr = arr || [];\n    }\n    [iterator]() {\n        return this;\n    }\n    next() {\n        return this.idx < this.arr.length ? {\n            done: false,\n            value: this.arr[this.idx++]\n        } : { done: true, value: undefined };\n    }\n}\n/**\n * @hidden\n */\nclass Iterator {\n    constructor(arr, dataIndex = 0, resultMap = (x) => x) {\n        this.dataIndex = dataIndex;\n        this.resultMap = resultMap;\n        const iter = arr[iterator];\n        this._innerIterator = iter ? arr[iterator]() : new ArrayIterator(arr);\n    }\n    [iterator]() {\n        return this;\n    }\n    next() {\n        return this.resultMap(this._innerIterator.next(), this.dataIndex++);\n    }\n}\n/**\n * @hidden\n */\nclass ItemIterator extends Iterator {\n    constructor(arr, dataIndex, groupIndex, group) {\n        super(arr, dataIndex, (x, idx) => ({\n            done: x.done,\n            value: {\n                data: x.value,\n                groupIndex: groupIndex,\n                index: idx,\n                type: 'data',\n                group\n            }\n        }));\n    }\n    /**\n     * The index of the next record.\n     * @readonly\n     * @type {number}\n     */\n    get index() {\n        return this.dataIndex;\n    }\n}\nconst prefix = (s, n) => {\n    const p = s ? s + \"_\" : s;\n    return `${p}${n}`;\n};\n/**\n * @hidden\n */\nclass GroupIterator {\n    constructor(arr, outputFooters = false, level = 0, dataIndex = 0, parentIndex = \"\", groupIndex = 0, parentGroup = undefined) {\n        this.arr = arr;\n        this.outputFooters = outputFooters;\n        this.level = level;\n        this.dataIndex = dataIndex;\n        this.parentIndex = parentIndex;\n        this.groupIndex = groupIndex;\n        this.parentGroup = parentGroup;\n        this.currentGroupIndex = \"\";\n        this.arr = arr || [];\n        this._iterator = new Iterator(this.arr, this.dataIndex);\n    }\n    [iterator]() {\n        return this;\n    }\n    nextGroupItem() {\n        this.current = this._iterator.next().value;\n        this._innerIterator = null;\n        if (this.current) {\n            this.currentGroupIndex = prefix(this.parentIndex, this.groupIndex++);\n            return {\n                done: false,\n                value: {\n                    data: this.current,\n                    index: this.currentGroupIndex,\n                    level: this.level,\n                    type: 'group',\n                    parentGroup: this.parentGroup\n                }\n            };\n        }\n        else {\n            this.current = null;\n            return { done: true, value: undefined };\n        }\n    }\n    footerItem() {\n        if (this.current) {\n            const group = this.current;\n            this.current = null;\n            return {\n                done: false,\n                value: {\n                    data: group,\n                    groupIndex: this.currentGroupIndex,\n                    level: this.level,\n                    type: 'footer',\n                    group: {\n                        data: group,\n                        index: this.currentGroupIndex,\n                        level: this.level,\n                        type: 'group',\n                        parentGroup: this.parentGroup\n                    }\n                }\n            };\n        }\n        else {\n            this.current = null;\n            return { done: true, value: undefined };\n        }\n    }\n    innerIterator(group) {\n        if (!this._innerIterator) {\n            this._innerIterator = getIterator(group.items, {\n                dataIndex: this.dataIndex,\n                footers: this.outputFooters,\n                level: this.level + 1,\n                parentGroupIndex: this.currentGroupIndex,\n                parentGroup: {\n                    data: this.current,\n                    index: this.currentGroupIndex,\n                    level: this.level,\n                    type: 'group',\n                    parentGroup: this.parentGroup\n                }\n            });\n        }\n        return this._innerIterator;\n    }\n    nextDataItem(group) {\n        const iterator = this.innerIterator(group);\n        const result = iterator.next();\n        if (isPresent(result.value) && !result.done && result.value.type === \"data\") {\n            this.dataIndex = result.value.index + 1;\n        }\n        return !result.done ? result : undefined;\n    }\n    next() {\n        if (!isPresent(this.current)) {\n            return this.nextGroupItem();\n        }\n        const item = this.nextDataItem(this.current);\n        return item ? item : (this.outputFooters ? this.footerItem() : this.nextGroupItem());\n    }\n    /**\n     * The index of the last iterated data record.\n     * @readonly\n     * @type {number}\n     */\n    get index() {\n        return this.dataIndex + 1;\n    }\n}\n\n/**\n * @hidden\n */\nclass DataResultIterator {\n    constructor(source, skip = 0, groupFooters = false) {\n        this.source = source;\n        this.skip = skip;\n        this.groupFooters = groupFooters;\n        this.source = this.source ? this.source : [];\n        this.isObject = this.isGridDataResult(this.source);\n    }\n    isGridDataResult(source) {\n        return source.total !== undefined && source.data !== undefined;\n    }\n    get total() {\n        return this.isObject ? this.source.total : this.source.length;\n    }\n    get data() {\n        return this.isObject ? this.source.data : this.source;\n    }\n    map(fn) {\n        return this.data.map(fn);\n    }\n    filter(fn) {\n        return this.data.filter(fn);\n    }\n    reduce(fn, init) {\n        return this.data.reduce(fn, init);\n    }\n    forEach(fn) {\n        this.data.forEach(fn);\n    }\n    some(fn) {\n        return this.data.some(fn);\n    }\n    [iterator]() {\n        return getIterator(this.data, {\n            dataIndex: this.skip,\n            footers: this.groupFooters,\n            groupIndex: this.skip\n        });\n    }\n    toString() { return this.data.toString(); }\n}\n/**\n * @hidden\n */\nclass DataCollection {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    get total() { return this.accessor().total; }\n    get length() { return this.accessor().data.length; }\n    get first() { return this.accessor().data[0]; }\n    get last() { return this.accessor().data[this.length - 1]; }\n    at(index) {\n        return itemAt(this.accessor().data, index);\n    }\n    map(fn) { return this.accessor().map(fn); }\n    filter(fn) {\n        return this.accessor().filter(fn);\n    }\n    reduce(fn, init) {\n        return this.accessor().reduce(fn, init);\n    }\n    forEach(fn) {\n        this.accessor().forEach(fn);\n    }\n    some(fn) {\n        return this.accessor().some(fn);\n    }\n    [iterator]() {\n        return this.accessor()[iterator]();\n    }\n    toString() { return this.accessor().toString(); }\n}\n\n/**\n * @hidden\n *\n * Quick look-up structure for combinations of keys.\n * Similar to the native JS Set, however, working with a couple of keys instead of with a single key.\n * Supports both primitive keys and object keys (compared by reference).\n */\nclass PairSet {\n    constructor(items, keyXField, keyYField) {\n        /**\n         * Holds a set of Y keys for each defined X key.\n         * Each X key creates a map which holds a set of Y keys.\n         *\n         * Map { 1 => Set { 1, 2, 3 } } // pairs: [1, 1], [1, 2], [1, 3]\n         */\n        this.keysX = new Map();\n        /**\n         * Count the each added or deleted key manually to avoid iterating over all items when calling `this.size`.\n         */\n        this.totalKeysCount = 0;\n        if (items && keyXField && keyYField) {\n            items.forEach(item => this.add(item[keyXField], item[keyYField]));\n        }\n    }\n    /**\n     * Gets the total number of X/Y key pairs.\n     */\n    get size() {\n        return this.totalKeysCount;\n    }\n    /**\n     * Adds a couple of items identified as a combination.\n     */\n    add(keyX, keyY) {\n        if (!this.keysX.has(keyX)) {\n            this.keysX.set(keyX, new Set());\n        }\n        if (!this.has(keyX, keyY)) {\n            this.keysX.get(keyX).add(keyY);\n            this.totalKeysCount += 1;\n        }\n    }\n    /**\n     * Adds a combination of a couple of items identified together.\n     */\n    delete(keyX, keyY) {\n        if (this.has(keyX, keyY)) {\n            this.keysX.get(keyX).delete(keyY);\n            this.totalKeysCount -= 1;\n        }\n    }\n    /**\n     * Checks whether the defined combination is stored.\n     */\n    has(keyX, keyY) {\n        return this.keysX.has(keyX) && this.keysX.get(keyX).has(keyY);\n    }\n    /**\n     * Clears all key combinations.\n     */\n    clear() {\n        this.keysX.clear();\n        this.totalKeysCount = 0;\n    }\n    /**\n     * Converts the persisted data structure to an array of objects,\n     * using the provided field names for the object props.\n     */\n    toArray(keyXField, keyYField) {\n        return Array.from(this.keysX).reduce((pairs, pair) => {\n            // Array.from(mapInstance) returns an array of arrays [[itemKey1, columnKeysSet1], [itemKey2, columnKeysSet2]]\n            const [keyX, keysY] = pair;\n            Array.from(keysY).forEach(keyY => pairs.push({ [keyXField]: keyX, [keyYField]: keyY }));\n            return pairs;\n        }, []);\n    }\n}\n\n/**\n * @hidden\n *\n * The Context service is used to provide common\n * services and DI tokens for a Grid instance.\n *\n * This keeps the constructor parameters stable\n * and a avoids dependency cycles between components.\n */\nclass ContextService {\n}\nContextService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContextService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nContextService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContextService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContextService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @hidden\n */\nclass Selection {\n    constructor(ctx, cd) {\n        this.ctx = ctx;\n        this.cd = cd;\n        /**\n         * Defines the collection that will store the selected item keys.\n         */\n        this.selectedKeys = [];\n        /**\n         * Fires when the `selectedKeys` collection has been updated.\n         */\n        this.selectedKeysChange = new EventEmitter();\n        this.rowSelectionState = new Set();\n        this.cellSelectionState = new PairSet();\n        this.init();\n    }\n    get isCellSelectionMode() {\n        return isPresent(this.ctx.grid.selectable) && this.ctx.grid.selectable['cell'];\n    }\n    ngOnChanges(changes) {\n        // skip reinitialization if the user data is the same as the last state change\n        if (isPresent(changes.selectedKeys) && this.lastSelectionState !== this.selectedKeys) {\n            this.setState(this.selectedKeys);\n        }\n    }\n    init() {\n        if (!isPresent(this.ctx.grid.rowSelected)) {\n            this.ctx.grid.rowSelected = (row) => this.rowSelectionState.has(this.getItemKey(row));\n        }\n        if (!isPresent(this.ctx.grid.cellSelected)) {\n            this.ctx.grid.cellSelected = (row, column, colIndex) => {\n                const contender = this.getSelectionItem(row, column, colIndex);\n                return {\n                    selected: this.cellSelectionState.has(contender.itemKey, contender.columnKey),\n                    item: contender\n                };\n            };\n        }\n        this.selectionChangeSubscription = this.ctx.grid\n            .selectionChange\n            .subscribe(this.onSelectionChange.bind(this));\n    }\n    /**\n     * @hidden\n     */\n    destroy() {\n        this.selectionChangeSubscription.unsubscribe();\n    }\n    /**\n     * @hidden\n     */\n    reset() {\n        this.rowSelectionState.clear();\n        this.cellSelectionState.clear();\n    }\n    getItemKey(row) {\n        if (this.selectionKey) {\n            if (typeof this.selectionKey === \"string\") {\n                return row.dataItem[this.selectionKey];\n            }\n            if (typeof this.selectionKey === \"function\") {\n                return this.selectionKey(row);\n            }\n        }\n        return row.index;\n    }\n    getSelectionItem(row, col, colIndex) {\n        const itemIdentifiers = {};\n        itemIdentifiers.itemKey = this.getItemKey(row);\n        if (!isPresent(col) && !isPresent(colIndex)) {\n            return itemIdentifiers;\n        }\n        if (this.columnKey) {\n            if (typeof this.columnKey === \"string\") {\n                itemIdentifiers.columnKey = row.dataItem[this.columnKey];\n            }\n            if (typeof this.columnKey === \"function\") {\n                itemIdentifiers.columnKey = this.columnKey(col, colIndex);\n            }\n        }\n        return {\n            itemKey: itemIdentifiers.itemKey,\n            columnKey: itemIdentifiers.columnKey ? itemIdentifiers.columnKey : colIndex\n        };\n    }\n    onSelectionChange(selection) {\n        if (selection.selectedRows) {\n            selection.deselectedRows.forEach((item) => {\n                const itemKey = this.getItemKey(item);\n                this.rowSelectionState.delete(itemKey);\n            });\n            if (this.ctx.grid.selectableSettings.mode === \"single\" && this.rowSelectionState.size > 0) {\n                this.reset();\n            }\n            selection.selectedRows.forEach((item) => {\n                const itemKey = this.getItemKey(item);\n                this.rowSelectionState.add(itemKey);\n            });\n        }\n        else {\n            selection.deselectedCells.forEach(({ itemKey, columnKey }) => {\n                this.cellSelectionState.delete(itemKey, columnKey);\n            });\n            if (this.ctx.grid.selectableSettings.mode === \"single\" && this.cellSelectionState.size > 0) {\n                this.reset();\n            }\n            selection.selectedCells.forEach(({ itemKey, columnKey }) => {\n                this.cellSelectionState.add(itemKey, columnKey);\n            });\n        }\n        this.cd.markForCheck();\n        this.notifyChange();\n    }\n    notifyChange() {\n        this.lastSelectionState = this.stateToArray();\n        this.selectedKeysChange.emit(this.lastSelectionState);\n    }\n    setState(selectedKeys) {\n        this.reset();\n        if (this.isCellSelectionMode) {\n            this.cellSelectionState = new PairSet(selectedKeys, 'itemKey', 'columnKey');\n        }\n        else {\n            this.rowSelectionState = new Set(selectedKeys);\n        }\n    }\n    stateToArray() {\n        return this.isCellSelectionMode ?\n            this.cellSelectionState.toArray('itemKey', 'columnKey') :\n            Array.from(this.rowSelectionState);\n    }\n}\nSelection.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: Selection, deps: [{ token: ContextService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\nSelection.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: Selection, selector: \"kendo-grid-selection-base\", inputs: { selectedKeys: \"selectedKeys\", selectionKey: [\"kendoGridSelectBy\", \"selectionKey\"], columnKey: \"columnKey\" }, outputs: { selectedKeysChange: \"selectedKeysChange\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: Selection, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: 'kendo-grid-selection-base'\n                }]\n        }], ctorParameters: function () { return [{ type: ContextService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { selectedKeys: [{\n                type: Input\n            }], selectionKey: [{\n                type: Input,\n                args: [\"kendoGridSelectBy\"]\n            }], columnKey: [{\n                type: Input\n            }], selectedKeysChange: [{\n                type: Output\n            }] } });\n\nconst reset = (...lists) => {\n    let diff = false;\n    for (let idx = 0; idx < lists.length; idx++) {\n        const [list, columns] = lists[idx];\n        diff = diff || list.length !== columns.length;\n        list.reset(columns);\n    }\n    return diff;\n};\n/**\n * @hidden\n */\nclass ColumnsContainer {\n    constructor(columns) {\n        this.columns = columns;\n        this.allColumns = new QueryList();\n        this.leafColumns = new QueryList();\n        this.lockedColumns = new QueryList();\n        this.nonLockedColumns = new QueryList();\n        this.lockedLeafColumns = new QueryList();\n        this.nonLockedLeafColumns = new QueryList();\n        this.totalLevels = 0;\n        this.changes = new EventEmitter();\n        this.leafColumnsToRender = [];\n        this.lockedColumnsToRender = [];\n        this.nonLockedColumnsToRender = [];\n        this.hasGroupHeaderColumn = false;\n        this.hasGroupFooter = false;\n        this.hasFooter = false;\n        this.unlockedWidth = 0;\n    }\n    refresh() {\n        const currentLevels = this.totalLevels;\n        const leafColumns = new Array();\n        const lockedLeafColumns = new Array();\n        const nonLockedLeafColumns = new Array();\n        const lockedColumns = new Array();\n        const nonLockedColumns = new Array();\n        const allColumns = new Array();\n        const leafColumnsToRender = new Array();\n        const lockedColumnsToRender = new Array();\n        const nonLockedColumnsToRender = new Array();\n        let hasGroupHeaderColumn = false;\n        let hasGroupFooter = false;\n        let hasFooter = false;\n        let unlockedWidth = 0;\n        let leafIndex = 0;\n        this.totalLevels = 0;\n        this.columns().forEach(column => {\n            const containerLeafColumns = column.isLocked === true ? lockedLeafColumns : nonLockedLeafColumns;\n            const containerColumns = column.isLocked === true ? lockedColumns : nonLockedColumns;\n            const toRenderContainer = column.isLocked === true ? lockedColumnsToRender : nonLockedColumnsToRender;\n            if (!isColumnGroupComponent(column)) {\n                containerLeafColumns.push(column);\n                leafColumns.push(column);\n                leafColumnsToRender.push.apply(leafColumnsToRender, columnsToRender([column]));\n                toRenderContainer.push.apply(toRenderContainer, columnsToRender([column]));\n                hasGroupHeaderColumn = hasGroupHeaderColumn || someLeafColumn(leaf => Boolean(leaf.groupHeaderColumnTemplateRef), column);\n                hasGroupFooter = hasGroupFooter || someLeafColumn(leaf => Boolean(leaf.groupFooterTemplateRef), column);\n                hasFooter = hasFooter || someLeafColumn(leaf => Boolean(leaf.footerTemplateRef), column);\n                if (!column.isLocked) {\n                    unlockedWidth += column.width || 0;\n                }\n                if (column.isSpanColumn) {\n                    column.childColumns.forEach(c => {\n                        c.leafIndex = leafIndex++;\n                    });\n                }\n                else {\n                    column.leafIndex = leafIndex++;\n                }\n            }\n            containerColumns.push(column);\n            allColumns.push(column);\n            this.totalLevels = column.level > this.totalLevels ? column.level : this.totalLevels;\n        });\n        this.hasGroupHeaderColumn = hasGroupHeaderColumn;\n        this.hasGroupFooter = hasGroupFooter;\n        this.hasFooter = hasFooter;\n        this.leafColumnsToRender = leafColumnsToRender;\n        this.lockedColumnsToRender = lockedColumnsToRender;\n        this.nonLockedColumnsToRender = nonLockedColumnsToRender;\n        this.unlockedWidth = unlockedWidth;\n        const changes = reset([this.leafColumns, leafColumns], [this.lockedLeafColumns, lockedLeafColumns], [this.nonLockedLeafColumns, nonLockedLeafColumns], [this.lockedColumns, lockedColumns], [this.allColumns, allColumns], [this.nonLockedColumns, nonLockedColumns]) || currentLevels !== this.totalLevels;\n        if (changes) {\n            this.changes.emit();\n        }\n        return changes;\n    }\n}\n\nconst forEachColumn = (list, callback) => {\n    list.forEach((column) => {\n        callback(column);\n        if (column.isColumnGroup && column.hasChildren) {\n            forEachColumn(column.childrenArray, callback);\n        }\n    });\n};\nconst forEachLevel = (list, callback) => {\n    sortColumns(list)\n        .forEach((column) => {\n        callback(column);\n        if (column.isColumnGroup && column.hasChildren) {\n            forEachLevel(column.childrenArray, callback);\n        }\n    });\n};\nconst filterHierarchy = (list, predicate) => {\n    const result = [];\n    sortColumns(list)\n        .forEach((column) => {\n        if (predicate(column)) {\n            if (column.isColumnGroup) {\n                const children = filterHierarchy(column.childrenArray, predicate);\n                if (children.length) {\n                    result.push(column, ...children);\n                }\n            }\n            else if (!column.isSpanColumn || filterHierarchy(column.childrenArray, predicate).length) {\n                result.push(column);\n            }\n        }\n    });\n    return result;\n};\n/**\n * @hidden\n */\nclass ColumnList {\n    constructor(columns) {\n        this.columns = columns;\n    }\n    static empty() {\n        return new ColumnList(new QueryList());\n    }\n    forEach(callback) {\n        forEachColumn(this.columns, callback);\n    }\n    filter(callback) {\n        const result = [];\n        forEachColumn(this.columns, (column) => {\n            if (callback(column)) {\n                result.push(column);\n            }\n        });\n        return result;\n    }\n    filterHierarchy(predicate) {\n        return filterHierarchy(this.columns.toArray(), predicate);\n    }\n    filterSort(callback) {\n        const result = [];\n        forEachLevel(this.columns.toArray(), (column) => {\n            if (callback(column)) {\n                result.push(column);\n            }\n        });\n        return result;\n    }\n    toArray() {\n        const result = [];\n        forEachColumn(this.columns, (column) => {\n            result.push(column);\n        });\n        return result;\n    }\n    rootColumns() {\n        return this.columns.toArray();\n    }\n    totalColumnLevels() {\n        let totalLevels = 0;\n        this.forEach(column => {\n            totalLevels = Math.max(column.level, totalLevels);\n        });\n        return totalLevels;\n    }\n}\n\n/**\n * @hidden\n */\nclass GroupInfoService {\n    constructor() {\n        this._columnList = ColumnList.empty;\n    }\n    get columns() {\n        return expandColumns(this._columnList().toArray()).filter(isColumnComponent);\n    }\n    registerColumnsContainer(columns) {\n        this._columnList = columns;\n    }\n    formatForGroup(item) {\n        const column = this.columnForGroup(item);\n        return column ? column.format : \"\";\n    }\n    isGroupable(groupField) {\n        const [column] = this.columns.filter(x => x.field === groupField);\n        return column ? column.groupable : true;\n    }\n    groupTitle(item) {\n        const column = this.columnForGroup(item);\n        return column ? (column.title || column.field) : this.groupField(item);\n    }\n    groupHeaderTemplate(item) {\n        const column = this.columnForGroup(item);\n        return column ? column.groupHeaderTemplateRef || column.groupHeaderColumnTemplateRef : undefined;\n    }\n    groupField(group) {\n        return group.data ? group.data.field : group.field;\n    }\n    columnForGroup(group) {\n        const field = this.groupField(group);\n        const [column] = this.columns.filter(x => x.field === field);\n        return column;\n    }\n}\n\n/**\n * @hidden\n */\nclass ChangeNotificationService {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.changes = new EventEmitter();\n    }\n    notify() {\n        if (!this.subscription || this.subscription.closed) {\n            this.subscription = this.ngZone.onStable\n                .asObservable().pipe(take(1))\n                .subscribe(() => this.changes.emit());\n        }\n    }\n}\nChangeNotificationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ChangeNotificationService, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nChangeNotificationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ChangeNotificationService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ChangeNotificationService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n/**\n * Represents the no-records template of the Grid. Provides an option to customize the\n * appearance of the item that is displayed when no data is present. To define the no-records template,\n * nest an `<ng-template>` tag with the `kendoGridNoRecordsTemplate` directive inside `<kendo-grid>`.\n *\n * > When the locked columns of the Grid are in use, the template is displayed in the non-locked part of the content.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *   selector: 'my-app',\n *   template: `\n *       <kendo-grid [data]=\"data\">\n *         <kendo-grid-column field=\"ProductID\"></kendo-grid-column>\n *         <kendo-grid-column field=\"ProductName\"></kendo-grid-column>\n *         <kendo-grid-column field=\"UnitPrice\"></kendo-grid-column>\n *         <ng-template kendoGridNoRecordsTemplate>\n *            There are not products. <a href=\"#\" (click)=\"refresh()\">Click here to refresh</a>.\n *         </ng-template>\n *       </kendo-grid>\n *   `\n * })\n *\n * class AppComponent {\n *     public data = [];\n *     public refresh() {\n *       this.data = [{\n *            \"ProductID\": 1,\n *            \"ProductName\": \"Chai\",\n *            \"UnitPrice\": 18.0000,\n *            \"Discontinued\": false,\n *            \"Category\": {\n *                \"CategoryID\": 1,\n *                \"CategoryName\": \"Beverages\",\n *                \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n *            }\n *          }, {\n *            \"ProductID\": 2,\n *            \"ProductName\": \"Chang\",\n *            \"UnitPrice\": 19.0000,\n *            \"Discontinued\": false,\n *            \"Category\": {\n *                \"CategoryID\": 1,\n *                \"CategoryName\": \"Beverages\",\n *                \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n *            }\n *          }, {\n *            \"ProductID\": 3,\n *            \"ProductName\": \"Aniseed Syrup\",\n *            \"UnitPrice\": 10.0000,\n *            \"Discontinued\": false,\n *            \"Category\": {\n *                \"CategoryID\": 2,\n *                \"CategoryName\": \"Condiments\",\n *                \"Description\": \"Sweet and savory sauces, relishes, spreads, and seasonings\"\n *            }\n *        }];\n *\n *     }\n * }\n *\n * ```\n */\nclass NoRecordsTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNoRecordsTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NoRecordsTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nNoRecordsTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: NoRecordsTemplateDirective, selector: \"[kendoGridNoRecordsTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NoRecordsTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridNoRecordsTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nconst set = value => pair => pair.forEach(x => x.style.height = value);\nconst clearHeight = pairs => pairs\n    .filter(([left, right]) => left.style.height || right.style.height)\n    .forEach(set(\"\"));\nconst zip = (arr1, arr2) => {\n    const result = [];\n    for (let idx = 0, len = arr1.length; idx < len; idx++) {\n        if (!arr2[idx]) {\n            break;\n        }\n        result.push([arr1[idx], arr2[idx]]);\n    }\n    return result;\n};\nconst setHeight$1 = heights => (row, idx) => set(`${heights[idx] + 1}px`)(row);\nconst getHeights = rows => rows.map(([left, right]) => {\n    const height = left.offsetHeight;\n    const offsetHeight2 = right.offsetHeight;\n    if (height < offsetHeight2) {\n        return offsetHeight2;\n    }\n    return height;\n});\n/**\n * @hidden\n */\nconst syncRowsHeight = (table1, table2) => {\n    const activeElement = document.activeElement;\n    const rows = zip(table1.rows, table2.rows);\n    clearHeight(rows);\n    const heights = getHeights(rows);\n    [table1, table2].forEach(x => x.style.display = 'none');\n    rows.forEach(setHeight$1(heights));\n    [table1, table2].forEach(x => x.style.display = '');\n    if (document.activeElement !== activeElement &&\n        (table1.contains(activeElement) || table2.contains(activeElement))) {\n        activeElement.focus();\n    }\n};\n\n/**\n * @hidden\n */\nclass MenuTabbingService {\n    constructor() {\n        this.isColumnMenu = false;\n        this.isPopupOpen = false;\n    }\n}\nMenuTabbingService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MenuTabbingService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMenuTabbingService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MenuTabbingService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MenuTabbingService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Represents a service to set the filter descriptor\n * ([see example]({% slug filter_row %}#toc-custom-filter-row-components)).\n */\nclass FilterService {\n    /**\n     * @hidden\n     */\n    constructor(menuTabbingService) {\n        /**\n         * Fires when the filter descriptors is set.\n         */\n        this.changes = new Subject();\n        this.menuTabbingService = menuTabbingService;\n    }\n    /**\n     * Sets the filter descriptor.\n     *\n     * @param {CompositeFilterDescriptor} value - The filter descriptor that will be set.\n     */\n    filter(value) {\n        this.changes.next(value);\n    }\n}\nFilterService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterService, deps: [{ token: MenuTabbingService, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nFilterService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: MenuTabbingService, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Represents the pager template which helps to customize the pager appearance in the Grid. To define a pager\n * template, nest an `<ng-template>` tag with the `kendoPagerTemplate` directive inside `<kendo-grid>`.\n *\n * The template context provides the following fields:\n * * `currentPage`&mdash;The index of the displayed page.\n * * `pageSize`&mdash;The value of the current `pageSize`.\n * * `skip`&mdash;The current skip value.\n * * `total`&mdash;The total number of records.\n * * `totalPages`&mdash;The total number of available pages.\n * *  Needs to be provided as an input to inner pager components used within the template when the Grid is navigable.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *      <kendo-grid\n *        [kendoGridBinding]=\"gridData\"\n *        [pageSize]=\"1\"\n *        [pageable]=\"true\"\n *      >\n *       <kendo-grid-column field=\"ProductID\" title=\"ID\" [width]=\"40\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"ProductName\" title=\"Name\" [width]=\"250\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"UnitPrice\" title=\"Price\" [width]=\"80\" format=\"{0:c}\">\n *       </kendo-grid-column>\n *\n *       <ng-template kendoPagerTemplate let-totalPages=\"totalPages\" let-currentPage=\"currentPage\">\n *          <kendo-pager-prev-buttons></kendo-pager-prev-buttons>\n *          <kendo-pager-numeric-buttons [buttonCount]=\"10\"></kendo-pager-numeric-buttons>\n *          <kendo-pager-next-buttons></kendo-pager-next-buttons>\n *          <kendo-pager-info></kendo-pager-info>\n *          Current page: {{currentPage}}\n *       </ng-template>\n *\n *    </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\nclass PagerTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nPagerTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nPagerTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: PagerTemplateDirective, selector: \"[kendoPagerTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoPagerTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * @hidden\n */\nclass PDFService {\n    constructor() {\n        this.savePDF = new EventEmitter();\n        this.drawPDF = new EventEmitter();\n        this.exportClick = new EventEmitter();\n        this.dataChanged = new EventEmitter();\n    }\n    save(component) {\n        this.emitEvent(this.savePDF, component);\n    }\n    draw(component, promise) {\n        this.emitEvent(this.drawPDF, { component, promise });\n    }\n    /**\n     * @hidden\n     */\n    emitEvent(emitter, args) {\n        if (emitter.observers.length === 0) {\n            if (isDevMode()) {\n                throw new Error('Creating PDF requires including the PDFModule and adding the <kendo-grid-pdf> component.');\n            }\n        }\n        else {\n            emitter.emit(args);\n        }\n    }\n}\nPDFService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PDFService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nPDFService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PDFService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PDFService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Arguments for the `pdfExport` event.\n */\nclass PDFExportEvent extends PreventableEvent {\n    /**\n     * @hidden\n     */\n    constructor() {\n        super();\n    }\n}\n\n/**\n * @hidden\n */\nclass SuspendService {\n    constructor() {\n        this.scroll = false;\n    }\n}\nSuspendService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SuspendService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nSuspendService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SuspendService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SuspendService, decorators: [{\n            type: Injectable\n        }] });\n\nconst bootstrapToMedia = (media) => (({\n    \"xs\": \"(max-width: 576px)\",\n    \"sm\": \"(min-width: 576px)\",\n    \"md\": \"(min-width: 768px)\",\n    \"lg\": \"(min-width: 992px)\",\n    \"xl\": \"(min-width: 1200px)\"\n})[media] || media);\nconst browserMatchMedia = (media) => window.matchMedia(media).matches;\n/**\n * @hidden\n */\nclass ResponsiveService {\n    constructor() {\n        /**\n         * @hidden\n         */\n        this.matchMedia = browserMatchMedia;\n    }\n    /**\n     * @hidden\n     */\n    matchesMedia(media) {\n        return !media || this.matchMedia(bootstrapToMedia(media));\n    }\n}\nResponsiveService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ResponsiveService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nResponsiveService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ResponsiveService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ResponsiveService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @hidden\n */\nclass ExcelService {\n    constructor() {\n        this.saveToExcel = new EventEmitter();\n        this.exportClick = new EventEmitter();\n    }\n    save(component) {\n        if (this.saveToExcel.observers.length === 0) {\n            if (isDevMode()) {\n                throw new Error('Saving excel requires including the ExcelModule and adding the <kendo-grid-excel> component.');\n            }\n        }\n        else {\n            this.saveToExcel.emit(component);\n        }\n    }\n}\nExcelService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExcelService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nExcelService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExcelService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExcelService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Represents the toolbar template of the Grid.\n *\n * The template context has the following field:\n * - `position`&mdash;The position at which the toolbar template is rendered. The possible values are \"top\" and \"bottom\".\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <div class=\"example-config\">\n *         <input type=\"radio\" id=\"top\" name=\"position\" value=\"top\" checked (click)=\"positionChange($event)\"/>\n *         <label class=\"k-radio-label\" for=\"top\">Top</label><br/>\n *         <input type=\"radio\" id=\"bottom\" name=\"position\" value=\"bottom\" (click)=\"positionChange($event)\"/>\n *         <label class=\"k-radio-label\" for=\"bottom\">Bottom</label><br/>\n *         <input type=\"radio\" id=\"both\" name=\"position\" value=\"both\" (click)=\"positionChange($event)\"/>\n *         <label class=\"k-radio-label\" for=\"both\">Both</label><br/>\n *       </div>\n *       <kendo-grid [data]=\"gridData\" style=\"height: 200px\">\n *            <ng-template kendoGridToolbarTemplate [position]=\"position\" let-position=\"position\">\n *                <button (click)=\"onClick()\">Custom action</button>\n *            </ng-template>\n *            <kendo-grid-column field=\"ProductName\">\n *            </kendo-grid-column>\n *            <kendo-grid-column field=\"UnitPrice\">\n *            </kendo-grid-column>\n *        </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public position: 'top' | 'bottom' | 'both' = 'top';\n *\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n *\n *     public onClick(): void {\n *         console.log(\"button was clicked\");\n *     }\n *\n *     public positionChange({ target }): void {\n *        this.position = target.value;\n *     }\n * }\n *\n * ```\n */\nclass ToolbarTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._position = \"top\";\n    }\n    /**\n     * The position of the toolbar ([see example]({% slug toolbartemplate_grid %})).\n     *\n     * The possible values are:\n     * - `top`&mdash;Positions the toolbar above the group panel or header.\n     * - `bottom`&mdash;Positions the toolbar below the pager.\n     * - `both`&mdash;Displays two toolbar instances. Positions the first one above\n     * the group panel or header and the second one below the pager.\n     */\n    set position(position) {\n        this._position = position;\n    }\n    get position() {\n        return this._position;\n    }\n}\nToolbarTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ToolbarTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nToolbarTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ToolbarTemplateDirective, selector: \"[kendoGridToolbarTemplate]\", inputs: { position: \"position\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ToolbarTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridToolbarTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { position: [{\n                type: Input,\n                args: [\"position\"]\n            }] } });\n\n/**\n * @hidden\n */\nclass ScrollSyncService {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.changes = new Subject();\n        this.elements = [];\n        this.subscriptions = new Subscription();\n        this.headerSubscription = new Subscription();\n        this.bodySubscription = new Subscription();\n        this.subscriptions.add(this.changes.subscribe(args => this.scrollLeft(args)));\n    }\n    registerEmitter(el, sourceType) {\n        this.unregister(sourceType);\n        this.elements.push({ element: el, sourceType });\n        if (sourceType === \"body\" || sourceType === \"header\") {\n            this.ngZone.runOutsideAngular(() => {\n                const obs = fromEvent(el, \"scroll\").pipe(map(({ target: { scrollLeft } }) => ({\n                    scrollLeft,\n                    sourceType\n                })));\n                const subscription = obs.pipe(distinctUntilChanged((x, y) => (x.scrollLeft === y.scrollLeft)), filter(x => !this.source || this.source === x.sourceType), tap(x => this.source = x.sourceType))\n                    .subscribe((x) => this.changes.next(x));\n                subscription.add(obs.pipe(filter(x => this.source && this.source !== x.sourceType))\n                    .subscribe(() => this.source = undefined));\n                if (sourceType === \"body\") {\n                    this.bodySubscription.add(subscription);\n                }\n                else {\n                    this.headerSubscription.add(subscription);\n                }\n            });\n        }\n    }\n    /**\n     * destroy\n     */\n    destroy() {\n        this.subscriptions.unsubscribe();\n        this.headerSubscription.unsubscribe();\n        this.bodySubscription.unsubscribe();\n    }\n    scrollLeft({ scrollLeft, sourceType }) {\n        this.ngZone.runOutsideAngular(() => {\n            this.elements\n                .filter(x => sourceType !== x.sourceType)\n                .forEach(({ element }) => element.scrollLeft = scrollLeft);\n        });\n    }\n    unregister(sourceType) {\n        const index = this.elements.findIndex(x => x.sourceType === sourceType);\n        if (index > -1) {\n            if (sourceType === \"header\") {\n                this.headerSubscription.unsubscribe();\n                this.headerSubscription = new Subscription();\n            }\n            else if (sourceType === \"body\") {\n                this.bodySubscription.unsubscribe();\n                this.bodySubscription = new Subscription();\n            }\n            this.elements.splice(index, 1);\n        }\n    }\n}\nScrollSyncService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ScrollSyncService, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nScrollSyncService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ScrollSyncService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ScrollSyncService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n/**\n * @hidden\n */\nclass ResizeService {\n    constructor() {\n        this.resizeSubscription = new Subscription(() => { });\n        this.dispatcher = new Subject();\n        this.changes = this.dispatcher.asObservable().pipe(throttleTime(100));\n    }\n    connect(resizes) {\n        this.resizeSubscription.add(resizes.subscribe(this.dispatcher));\n    }\n    destroy() {\n        if (this.resizeSubscription) {\n            this.resizeSubscription.unsubscribe();\n        }\n    }\n}\nResizeService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ResizeService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nResizeService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ResizeService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ResizeService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @hidden\n */\nconst isLocked = column => column.parent ? isLocked(column.parent) : !!column.locked;\n/**\n * @hidden\n */\nconst resizeArgs = (column, extra) => Object.assign({\n    columns: leafColumns([column]),\n    locked: isLocked(column)\n}, extra);\n/**\n * @hidden\n */\nclass ColumnResizingService {\n    constructor() {\n        this.changes = new EventEmitter();\n        this.tables = [];\n        this.batch = null;\n    }\n    start(column) {\n        this.trackColumns(column);\n        const columns = (this.column.isColumnGroup ? [column] : [])\n            .concat(leafColumns([column]));\n        this.changes.emit({\n            columns: columns,\n            locked: isLocked(this.column),\n            type: 'start'\n        });\n    }\n    resizeColumns(deltaPercent) {\n        const action = resizeArgs(this.column, {\n            deltaPercent,\n            type: 'resizeColumn'\n        });\n        this.changes.emit(action);\n    }\n    resizeTable(column, delta) {\n        const action = resizeArgs(column, {\n            delta,\n            type: 'resizeTable'\n        });\n        this.changes.emit(action);\n    }\n    resizedColumn(state) {\n        this.resizedColumns.push(state);\n    }\n    end() {\n        this.changes.emit({\n            columns: [],\n            resizedColumns: this.resizedColumns,\n            type: 'end'\n        });\n    }\n    registerTable(tableMetadata) {\n        this.tables.push(tableMetadata);\n        const unregisterTable = () => {\n            this.tables.splice(this.tables.indexOf(tableMetadata), 1);\n        };\n        return unregisterTable;\n    }\n    measureColumns(info) {\n        if (this.batch !== null) {\n            this.batch.push(...info);\n        }\n        else {\n            this.autoFitBatch(info, () => this.end());\n        }\n    }\n    autoFit(...columns) {\n        const nonLockedColumns = columns.filter(column => !column.isLocked);\n        this.autoFitStart(nonLockedColumns);\n        this.autoFitBatch(this.batch, () => {\n            if (nonLockedColumns.length < columns.length) {\n                const lockedColumns = columns.filter(column => column.isLocked);\n                this.autoFitStart(lockedColumns);\n                this.autoFitBatch(this.batch, () => this.end());\n            }\n            else {\n                this.end();\n            }\n        });\n    }\n    trackColumns(column) {\n        this.resizedColumns = [];\n        this.column = column;\n    }\n    autoFitStart(columns) {\n        this.batch = [];\n        this.resizedColumns = [];\n        if (columns.length === 0) {\n            return;\n        }\n        const locked = columns[0].isLocked;\n        this.changes.emit({\n            type: 'start',\n            columns,\n            locked\n        });\n        this.changes.emit({\n            type: 'triggerAutoFit',\n            columns,\n            locked\n        });\n    }\n    autoFitBatch(info, onComplete) {\n        const locked = info.length > 0 ? info[0].column.isLocked : false;\n        const observables = this.tables\n            .filter(table => table.locked === locked)\n            .map(table => table.autoFit(info));\n        zip$1(...observables)\n            .pipe(take(1))\n            .subscribe(widths => {\n            this.changes.emit({\n                columns: info.map(i => i.column),\n                type: 'autoFitComplete',\n                widths,\n                locked\n            });\n            if (onComplete) {\n                onComplete();\n            }\n        });\n        this.batch = null;\n    }\n}\nColumnResizingService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnResizingService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nColumnResizingService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnResizingService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnResizingService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @hidden\n */\nconst isFilterable = (settings) => settings !== false;\n/**\n * @hidden\n */\nconst hasFilterMenu = (settings) => typeof settings === 'string' && settings.indexOf('menu') > -1;\n/**\n * @hidden\n */\nconst hasFilterRow = (settings) => settings === true || (typeof settings === 'string' && settings.indexOf('row') > -1);\n\nconst contains$1 = (node, predicate) => {\n    while (node) {\n        if (predicate(node)) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n};\n/**\n * Arguments for the `close` event of the filter and column-menu popup.\n */\nclass PopupCloseEvent extends PreventableEvent {\n    constructor(e) {\n        super();\n        this.originalEvent = e;\n    }\n}\nconst DEFAULT_POPUP_CLASS = 'k-grid-filter-popup';\n/**\n * The service that is used for the popups of the filter and column menus\n * ([see example]({% slug filter_menu %}#toc-custom-filter-row-components)#toc-filter-menu-with-popup).\n */\nclass SinglePopupService {\n    constructor(popupService, renderer, ngZone, scrollSyncService, localization) {\n        this.popupService = popupService;\n        this.renderer = renderer;\n        this.ngZone = ngZone;\n        this.localization = localization;\n        /**\n         * Fires when the filter or column menus are about to close because the user clicked outside their popups.\n         * Used to prevent the popup from closing.\n         */\n        this.onClose = new Subject();\n        this.pointerEventsSub = new Subscription();\n        this.scrollSubscription = scrollSyncService.changes.subscribe(() => this.destroy());\n    }\n    /**\n     * @hidden\n     */\n    open(anchor, template, popupRef, popupClass = DEFAULT_POPUP_CLASS) {\n        var _a;\n        const toggle = isPresent(popupRef) && this.popupRef === popupRef;\n        this.destroy();\n        if (!toggle) {\n            const direction = this.localization.rtl ? 'right' : 'left';\n            this.popupRef = this.popupService.open({\n                anchorAlign: { vertical: 'bottom', horizontal: direction },\n                popupAlign: { vertical: 'top', horizontal: direction },\n                anchor: anchor,\n                popupClass: popupClass,\n                content: template,\n                positionMode: \"absolute\"\n            });\n            this.renderer.setAttribute(this.popupRef.popupElement, 'dir', this.localization.rtl ? 'rtl' : 'ltr');\n            this.attachClose(anchor);\n        }\n        const popupEl = (_a = this.popupRef) === null || _a === void 0 ? void 0 : _a.popupElement;\n        if (popupEl) {\n            this.attachMouseListeners(popupEl);\n        }\n        return this.popupRef;\n    }\n    /**\n     * @hidden\n     */\n    destroy() {\n        if (this.popupRef) {\n            this.detachClose();\n            this.pointerEventsSub.unsubscribe();\n            this.pointerEventsSub = null;\n            this.popupRef.close();\n            this.popupRef = null;\n        }\n    }\n    ngOnDestroy() {\n        this.destroy();\n        this.scrollSubscription.unsubscribe();\n    }\n    detachClose() {\n        if (this.removeClick) {\n            this.removeClick();\n        }\n    }\n    attachClose(skipElement) {\n        this.detachClose();\n        this.ngZone.runOutsideAngular(() => this.removeClick = this.renderer.listen('document', 'click', (e) => {\n            if (!contains$1(e.target, x => this.popupRef.popupElement === x || x === skipElement)) {\n                const args = new PopupCloseEvent(e);\n                this.onClose.next(args);\n                if (!args.isDefaultPrevented() && this.canClosePopup) {\n                    this.destroy();\n                }\n                this.canClosePopup = true;\n            }\n        }));\n    }\n    attachMouseListeners(el) {\n        this.pointerEventsSub = new Subscription();\n        this.ngZone.runOutsideAngular(() => {\n            this.pointerEventsSub.add(this.renderer.listen(el, 'pointerdown', (e) => {\n                e.stopImmediatePropagation();\n                this.canClosePopup = false;\n            }));\n            this.pointerEventsSub.add(this.renderer.listen(el, 'pointerup', () => {\n                this.canClosePopup = true;\n            }));\n        });\n    }\n}\nSinglePopupService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SinglePopupService, deps: [{ token: i1$2.PopupService }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: ScrollSyncService }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Injectable });\nSinglePopupService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SinglePopupService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SinglePopupService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$2.PopupService }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: ScrollSyncService }, { type: i1.LocalizationService }]; } });\n\n/* eslint-disable  no-bitwise */\n/**\n * @hidden\n */\nconst append = (element) => {\n    let appended = false;\n    return () => {\n        if (!appended) {\n            document.body.appendChild(element);\n            appended = true;\n        }\n        return element;\n    };\n};\n/**\n * @hidden\n */\nconst getDocument = element => element.ownerDocument.documentElement;\n/**\n * @hidden\n */\nconst getWindow = element => element.ownerDocument.defaultView;\n/**\n * @hidden\n */\nconst offset = element => {\n    const { clientTop, clientLeft } = getDocument(element);\n    const { pageYOffset, pageXOffset } = getWindow(element);\n    const { top, left } = element.getBoundingClientRect();\n    return {\n        top: top + pageYOffset - clientTop,\n        left: left + pageXOffset - clientLeft\n    };\n};\n/**\n * @hidden\n * If the target is before the draggable element, returns `true`.\n *\n * DOCUMENT_POSITION_FOLLOWING = 4\n */\nconst isTargetBefore = (draggable, target) => (target.compareDocumentPosition(draggable) & 4) !== 0;\n/**\n * @hidden\n * If the container and the element are the same\n * or if the container holds (contains) the element, returns `true`.\n *\n * DOCUMENT_POSITION_CONTAINED_BY = 16\n */\nconst contains = (element, container) => element === container ||\n    (container.compareDocumentPosition(element) & 16) !== 0;\n/**\n * @hidden\n */\nconst position = (target, before) => {\n    const targetRect = offset(target);\n    const { offsetWidth, offsetHeight } = target;\n    const left = targetRect.left + (before ? 0 : offsetWidth);\n    const top = targetRect.top;\n    const height = offsetHeight;\n    return { left, top, height };\n};\n\n/**\n * @hidden\n */\nclass DragAndDropService {\n    constructor() {\n        this.changes = new EventEmitter();\n        this.register = [];\n        this.lastTarget = null;\n    }\n    add(target) {\n        this.register.push(target);\n    }\n    remove(target) {\n        this.register = this.register.filter(current => current !== target);\n    }\n    notifyDrag(draggable, element, mouseEvent) {\n        const target = this.targetFor(element);\n        if (this.lastTarget === target) {\n            return;\n        }\n        this.changes.next({\n            draggable,\n            mouseEvent,\n            target: this.lastTarget,\n            type: 'leave'\n        });\n        if (target) {\n            this.changes.next({\n                draggable,\n                mouseEvent,\n                target,\n                type: 'enter'\n            });\n        }\n        this.lastTarget = target;\n    }\n    notifyDrop(draggable, mouseEvent) {\n        this.changes.next({\n            draggable,\n            mouseEvent,\n            target: this.lastTarget,\n            type: 'drop'\n        });\n        this.lastTarget = null;\n    }\n    targetFor(element) {\n        const comparer = contains.bind(null, element);\n        return this.register.find(({ element: { nativeElement } }) => comparer(nativeElement));\n    }\n}\nDragAndDropService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DragAndDropService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDragAndDropService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DragAndDropService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DragAndDropService, decorators: [{\n            type: Injectable\n        }] });\n\nconst updateClass = (element, valid) => {\n    const icon = element.querySelector('.k-icon');\n    icon.className = icon.className\n        .replace(/(plus|cancel)/, valid ? 'plus' : 'cancel');\n};\nconst updateLock = (element, locked = null) => {\n    const icon = element.querySelectorAll('.k-icon')[1];\n    const value = locked === null ? '' : (locked ? 'k-i-lock' : 'k-i-unlock');\n    icon.className = icon.className\n        .replace(/(k-i-unlock|k-i-lock)/, '') + ` ${value}`;\n};\nconst decorate = (element) => {\n    element.className = 'k-header k-drag-clue';\n    element.style.position = 'absolute';\n    element.style.zIndex = '20000';\n};\n/**\n * @hidden\n */\nclass DragHintService {\n    constructor(santizer) {\n        this.santizer = santizer;\n    }\n    create(title) {\n        this.dom = document.createElement(\"div\");\n        decorate(this.dom);\n        const safeTitle = this.santizer.sanitize(SecurityContext.HTML, title);\n        this.dom.innerHTML = `\n            <span class=\"k-icon k-drag-status k-i-cancel k-icon-with-modifier\">\n                <span class=\"k-icon k-icon-modifier\"></span>\n            </span>\n            ${safeTitle}\n        `;\n    }\n    attach() {\n        return append(this.dom);\n    }\n    remove() {\n        if (this.dom && this.dom.parentNode) {\n            (function (el) {\n                setTimeout(() => document.body.removeChild(el));\n            })(this.dom); // hack for IE + pointer events!\n            this.dom = null;\n        }\n    }\n    show() {\n        this.dom.style.display = \"\";\n    }\n    hide() {\n        this.dom.style.display = \"none\";\n    }\n    enable() {\n        updateClass(this.dom, true);\n    }\n    disable() {\n        updateClass(this.dom, false);\n    }\n    removeLock() {\n        updateLock(this.dom);\n    }\n    toggleLock(locked) {\n        updateLock(this.dom, locked);\n    }\n    move(move) {\n        this.dom.style.top = move.pageY + 'px';\n        this.dom.style.left = move.pageX + 'px';\n    }\n}\nDragHintService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DragHintService, deps: [{ token: i1$3.DomSanitizer }], target: i0.ɵɵFactoryTarget.Injectable });\nDragHintService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DragHintService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DragHintService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$3.DomSanitizer }]; } });\n\n/**\n * @hidden\n */\nclass DropCueService {\n    create() {\n        this.dom = document.createElement(\"div\");\n        this.dom.className = 'k-grouping-dropclue';\n        this.hide();\n    }\n    attach() {\n        return append(this.dom);\n    }\n    remove() {\n        if (this.dom && this.dom.parentElement) {\n            document.body.removeChild(this.dom);\n            this.dom = null;\n        }\n    }\n    hide() {\n        this.dom.style.display = \"none\";\n    }\n    position({ left, top, height }) {\n        this.dom.style.display = 'block';\n        this.dom.style.height = height + 'px';\n        this.dom.style.top = top + 'px';\n        const width = this.dom.offsetWidth / 2;\n        this.dom.style.left = left - width + 'px';\n    }\n}\nDropCueService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropCueService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDropCueService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropCueService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropCueService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @hidden\n */\nclass ColumnReorderService {\n    constructor() {\n        this.changes = new EventEmitter();\n    }\n    reorder(e) {\n        this.changes.emit(e);\n    }\n}\nColumnReorderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnReorderService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nColumnReorderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnReorderService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnReorderService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Arguments for the `columnReorder` event.\n */\nclass ColumnReorderEvent extends PreventableEvent {\n    /**\n     * @hidden\n     */\n    constructor({ column, newIndex, oldIndex }) {\n        super();\n        this.column = column;\n        this.newIndex = newIndex;\n        this.oldIndex = oldIndex;\n    }\n}\n\n/**\n * @hidden\n */\nclass NavigationMetadata {\n    constructor(dataRows, headerRows, isVirtual, hasPager, hasDetailTemplate, gridElement, virtualColumns, columns) {\n        this.dataRows = dataRows;\n        this.headerRows = headerRows;\n        this.isVirtual = isVirtual;\n        this.hasPager = hasPager;\n        this.hasDetailTemplate = hasDetailTemplate;\n        this.gridElement = gridElement;\n        this.virtualColumns = virtualColumns;\n        this.columns = columns;\n    }\n    get maxLogicalRowIndex() {\n        const dataRows = this.hasDetailTemplate ? this.dataRows * 2 : this.dataRows;\n        return this.headerRows + dataRows - 1;\n    }\n}\n\nconst NO_STICKY = { left: '0px', right: '0px' };\n/**\n * @hidden\n */\nclass ColumnInfoService {\n    constructor() {\n        this.visibilityChange = new EventEmitter();\n        this.lockedChange = new EventEmitter();\n        this.stickyChange = new EventEmitter();\n        this.columnRangeChange = new EventEmitter();\n        this.columnsContainer = new ColumnsContainer(() => []);\n    }\n    get lockedLeafColumns() {\n        return this.columnsContainer.lockedLeafColumns;\n    }\n    get nonLockedLeafColumns() {\n        return this.columnsContainer.nonLockedLeafColumns;\n    }\n    get isLocked() {\n        return this.lockedLeafColumns.length > 0;\n    }\n    get totalLevels() {\n        return this.columnsContainer.totalLevels;\n    }\n    get hiddenColumns() {\n        if (!this.list) {\n            return [];\n        }\n        return this.list().filter(column => !column.isVisible);\n    }\n    get leafNamedColumns() {\n        const columns = expandColumns(this.list().filterSort(column => !column.isColumnGroup))\n            .filter(column => column.matchesMedia && column.displayTitle);\n        return orderBy(columns, [{ field: 'locked', dir: 'desc' }]);\n    }\n    get unlockedRootCount() {\n        return this.list().rootColumns().filter(column => !column.locked && column.isVisible).length;\n    }\n    stickyColumnsStyles(column) {\n        if (!this.stickyColumns) {\n            this.stickyColumns = this.list().rootColumns().filter(column => column.sticky && !column.locked && column.isVisible);\n        }\n        if (this.stickyColumns.length === 0) {\n            return NO_STICKY;\n        }\n        const result = this.stickyColumns.reduce((acc, curr) => {\n            if (curr.leafIndex < column.leafIndex) {\n                acc.left += curr.width;\n            }\n            else if (curr.leafIndex > column.leafIndex) {\n                acc.right += curr.width;\n            }\n            return acc;\n        }, { left: 0, right: 0 });\n        return {\n            left: `${result.left}px`,\n            right: `${result.right}px`\n        };\n    }\n    init(columns, list) {\n        this.columnsContainer = columns;\n        this.list = list;\n        this.stickyColumns = null;\n    }\n    changeVisibility(columns) {\n        this.stickyColumns = null;\n        this.visibilityChange.emit(columns);\n    }\n    changeLocked(columns) {\n        this.stickyColumns = null;\n        this.lockedChange.emit(columns);\n    }\n    changeStuck(columns) {\n        this.stickyColumns = null;\n        this.stickyChange.emit(columns);\n    }\n}\nColumnInfoService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnInfoService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nColumnInfoService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnInfoService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnInfoService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @hidden\n */\nclass SortService {\n    constructor() {\n        this.changes = new Subject();\n    }\n    sort(value) {\n        this.changes.next(value);\n    }\n}\n\n/**\n * Arguments for the `columnVisibilityChange` event.\n */\nclass ColumnVisibilityChangeEvent {\n    /**\n     * @hidden\n     */\n    constructor(columns) {\n        this.columns = columns;\n    }\n}\n\n/**\n * Arguments for the `columnLockedChange` event.\n */\nclass ColumnLockedChangeEvent {\n    /**\n     * @hidden\n     */\n    constructor(columns) {\n        this.columns = columns;\n    }\n}\n\n/**\n * @hidden\n */\nconst GROUP_CELL_WIDTH = 32; // this should be the value of group-cell inside the theme!\n/**\n * @hidden\n */\nconst RESPONSIVE_BREAKPOINT_MEDIUM = 600;\n/**\n * @hidden\n */\nconst RESPONSIVE_BREAKPOINT_LARGE = 768;\n\n/**\n * @hidden\n */\nfunction defaultTrackBy(index, item) {\n    if (item.type === 'data' && item.isEditing) {\n        return item.data;\n    }\n    return index;\n}\n\n/**\n * Arguments for the `columnStickyChange` event.\n */\nclass ColumnStickyChangeEvent {\n    /**\n     * @hidden\n     */\n    constructor(columns) {\n        this.columns = columns;\n    }\n}\n\n/**\n * Represents the virtual scrolling cell template of the Grid while loading new data. Provides an option to customize the\n * appearance of the indicator that is displayed while new data is loading. To define the loading cell template,\n * nest an `<ng-template>` tag with the `kendoGridCellLoadingTemplate` directive inside `<kendo-grid>` ([see example]({% slug virtualscrolling_grid %}#toc-custom-loading-skeleton)).\n *\n * The template context is set to the current column, and utilizes the `let-x` syntax&mdash;for example, `let-column`.\n *\n * @example\n * ```ts-no-run\n *       <kendo-grid [data]=\"data\" scrollable=\"virtual\" [rowHeight]=\"36\">\n *         <ng-template kendoGridCellLoadingTemplate let-column>\n *             ...\n *         </ng-template>\n *       </kendo-grid>\n * ```\n */\nclass CellLoadingTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCellLoadingTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CellLoadingTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCellLoadingTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: CellLoadingTemplateDirective, selector: \"[kendoGridCellLoadingTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CellLoadingTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridCellLoadingTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Creates a loading template that overrides the default loading indicator of the Grid Component.\n * To define a loading template, nest an `<ng-template>` tag with the `kendoGridLoadingTemplate` directive inside the `<kendo-grid>` tag\n * [see example]({% slug binding_grid %}#toc-loading-template).\n */\nclass LoadingTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nLoadingTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LoadingTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nLoadingTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LoadingTemplateDirective, selector: \"[kendoGridLoadingTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LoadingTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridLoadingTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @hidden\n */\nclass ToolbarComponent {\n    constructor(ctx) {\n        this.ctx = ctx;\n        this.context = {};\n    }\n    set position(value) {\n        this.context.position = value;\n    }\n    get toolbarTemplateRef() {\n        return this.ctx.grid.toolbarTemplate ? this.ctx.grid.toolbarTemplate.templateRef : undefined;\n    }\n}\nToolbarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ToolbarComponent, deps: [{ token: ContextService }], target: i0.ɵɵFactoryTarget.Component });\nToolbarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ToolbarComponent, selector: \"kendo-grid-toolbar\", inputs: { position: \"position\" }, ngImport: i0, template: `\n        <ng-template\n            *ngIf=\"toolbarTemplateRef\"\n            [ngTemplateOutlet]=\"toolbarTemplateRef\"\n            [ngTemplateOutletContext]=\"context\"\n            >\n        </ng-template>\n    `, isInline: true, directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ToolbarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-toolbar',\n                    template: `\n        <ng-template\n            *ngIf=\"toolbarTemplateRef\"\n            [ngTemplateOutlet]=\"toolbarTemplateRef\"\n            [ngTemplateOutletContext]=\"context\"\n            >\n        </ng-template>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: ContextService }]; }, propDecorators: { position: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nconst normalizeSettings = ({ buttonCount = 10, info = true, type = 'numeric', pageSizes = false, previousNext = true, responsive = true, position = 'bottom' }) => ({\n    buttonCount,\n    info,\n    pageSizes: pageSizes === true ? [5, 10, 20] : pageSizes,\n    previousNext,\n    type,\n    responsive,\n    position\n});\n/**\n * @hidden\n */\nconst normalize$1 = (settings) => normalizeSettings(settings === true ? {} : settings);\n\n/**\n * @hidden\n */\nclass FocusGroup {\n    constructor(root) {\n        this.root = root;\n        this.active = true;\n        this.children = [];\n        this.root.registerGroup(this);\n    }\n    get focusableChildren() {\n        return this.children.filter(el => el.canFocus());\n    }\n    get isActive() {\n        return this.active;\n    }\n    ngOnDestroy() {\n        this.root.unregisterGroup(this);\n        this.active = true;\n    }\n    registerElement(element) {\n        this.unregisterElement(element);\n        this.children.push(element);\n    }\n    unregisterElement(element) {\n        this.children = this.children.filter(f => f !== element);\n    }\n    /**\n     * Returns a Boolean value which indicates if the group will receive focus when the cell is focused.\n     * Requires a single \"simple\" focusable element such as a button or a checkbox.\n     */\n    isNavigable() {\n        const focusable = this.focusableChildren;\n        return focusable.length === 1 && focusable[0].isNavigable();\n    }\n    canFocus() {\n        return this.focusableChildren.length > 0;\n    }\n    focus() {\n        if (this.canFocus() && !this.hasFocus()) {\n            this.focusableChildren[0].focus();\n        }\n    }\n    activate() {\n        this.toggleState(true);\n    }\n    deactivate() {\n        this.toggleState(false);\n    }\n    hasFocus() {\n        return this.children.reduce((focused, element) => focused || element.hasFocus(), false);\n    }\n    toggleState(active) {\n        if (this.active !== active) {\n            this.active = active;\n            this.children.forEach(f => f.toggle(active));\n        }\n    }\n}\nFocusGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FocusGroup, deps: [{ token: FocusRoot }], target: i0.ɵɵFactoryTarget.Injectable });\nFocusGroup.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FocusGroup });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FocusGroup, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: FocusRoot }]; } });\n\n/**\n * @hidden\n */\nclass PagerElementComponent {\n    constructor(localization, pagerContext, cd) {\n        this.localization = localization;\n        this.pagerContext = pagerContext;\n        this.cd = cd;\n        this.total = this.pagerContext.total;\n        this.skip = this.pagerContext.skip;\n        this.pageSize = this.pagerContext.pageSize;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number}\n     * @memberOf PagerElementComponent\n     */\n    get currentPage() {\n        return Math.floor((this.skip || 0) / this.pageSize) + 1;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number}\n     * @memberOf PagerElementComponent\n     */\n    get totalPages() {\n        return Math.ceil((this.total || 0) / this.pageSize);\n    }\n    /**\n     * @hidden\n     *\n     * @param {string} key\n     * @returns {string}\n     *\n     * @memberOf PagerElementComponent\n     */\n    textFor(key) {\n        return this.localization.get(key);\n    }\n    /**\n     * @hidden\n     *\n     * @param {number} page\n     *\n     * @memberOf PagerElementComponent\n     */\n    changePage(page) {\n        this.pagerContext.changePage(page);\n        return false;\n    }\n    /**\n     * @hidden\n     *\n     * @memberOf PagerElementComponent\n     */\n    ngOnInit() {\n        this.subscriptions = this.pagerContext.changes.subscribe(this.onChanges.bind(this));\n        this.subscriptions.add(this.localization.changes.subscribe(() => this.cd.markForCheck()));\n    }\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n    }\n}\nPagerElementComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerElementComponent, deps: [{ token: i1.LocalizationService }, { token: PagerContextService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\nPagerElementComponent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: PagerElementComponent, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerElementComponent, decorators: [{\n            type: Directive,\n            args: [{}]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: PagerContextService }, { type: i0.ChangeDetectorRef }]; } });\n\n/**\n * Displays buttons for navigating to the first and to the previous page ([see example]({% slug paging_grid %}#toc-pager-templates)).\n */\nclass PagerPrevButtonsComponent extends PagerElementComponent {\n    constructor(localization, pagerContext, cd, navigationService) {\n        super(localization, pagerContext, cd);\n        this.navigationService = navigationService;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {boolean}\n     * @memberOf PagerPrevButtonsComponent\n     */\n    get disabled() {\n        return this.currentPage === 1 || !this.total;\n    }\n    onChanges({ total, skip, pageSize }) {\n        this.total = total;\n        this.skip = skip;\n        this.pageSize = pageSize;\n        this.cd.markForCheck();\n    }\n}\nPagerPrevButtonsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerPrevButtonsComponent, deps: [{ token: i1.LocalizationService }, { token: PagerContextService }, { token: i0.ChangeDetectorRef }, { token: NavigationService }], target: i0.ɵɵFactoryTarget.Component });\nPagerPrevButtonsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: PagerPrevButtonsComponent, selector: \"kendo-pager-prev-buttons\", usesInheritance: true, ngImport: i0, template: `\n        <span\n            [kendoGridFocusable]=\"!disabled\"\n            [title]=\"textFor('pagerFirstPage')\"\n            (click)=\"currentPage !== 1 ? changePage(0) : false\"\n            (keydown.enter)=\"currentPage !== 1 ? changePage(0) : false\"\n            role=\"button\"\n            [ngClass]=\"{\n                'k-link': true,\n                'k-pager-nav': true,\n                'k-disabled': disabled,\n                'k-pager-first': true\n            }\">\n            <span role=\"note\"\n                  [attr.aria-label]=\"textFor('pagerFirstPage')\"\n                  [ngClass]=\"{\n                    'k-icon': true,\n                    'k-i-caret-alt-to-left': true\n                  }\">\n            </span>\n        </span>\n        <span\n            [kendoGridFocusable]=\"!disabled\"\n            [title]=\"textFor('pagerPreviousPage')\"\n            role=\"button\"\n            (click)=\"currentPage !== 1 ? changePage(currentPage-2) : false\"\n            (keydown.enter)=\"currentPage !== 1 ? changePage(currentPage-2) : false\"\n            [ngClass]=\"{\n                'k-link': true,\n                'k-pager-nav': true,\n                'k-disabled': disabled,\n                '': true\n            }\">\n            <span role=\"note\"\n                  [attr.aria-label]=\"textFor('pagerPreviousPage')\"\n                  [ngClass]=\"{\n                    'k-icon': true,\n                    'k-i-caret-alt-left': true\n                  }\">\n            </span>\n        </span>\n    `, isInline: true, directives: [{ type: FocusableDirective, selector: \"[kendoGridFocusable],\\n        [kendoGridEditCommand],\\n        [kendoGridRemoveCommand],\\n        [kendoGridSaveCommand],\\n        [kendoGridCancelCommand],\\n        [kendoGridSelectionCheckbox]\\n    \", inputs: [\"kendoGridFocusable\"] }, { type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerPrevButtonsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    selector: 'kendo-pager-prev-buttons',\n                    template: `\n        <span\n            [kendoGridFocusable]=\"!disabled\"\n            [title]=\"textFor('pagerFirstPage')\"\n            (click)=\"currentPage !== 1 ? changePage(0) : false\"\n            (keydown.enter)=\"currentPage !== 1 ? changePage(0) : false\"\n            role=\"button\"\n            [ngClass]=\"{\n                'k-link': true,\n                'k-pager-nav': true,\n                'k-disabled': disabled,\n                'k-pager-first': true\n            }\">\n            <span role=\"note\"\n                  [attr.aria-label]=\"textFor('pagerFirstPage')\"\n                  [ngClass]=\"{\n                    'k-icon': true,\n                    'k-i-caret-alt-to-left': true\n                  }\">\n            </span>\n        </span>\n        <span\n            [kendoGridFocusable]=\"!disabled\"\n            [title]=\"textFor('pagerPreviousPage')\"\n            role=\"button\"\n            (click)=\"currentPage !== 1 ? changePage(currentPage-2) : false\"\n            (keydown.enter)=\"currentPage !== 1 ? changePage(currentPage-2) : false\"\n            [ngClass]=\"{\n                'k-link': true,\n                'k-pager-nav': true,\n                'k-disabled': disabled,\n                '': true\n            }\">\n            <span role=\"note\"\n                  [attr.aria-label]=\"textFor('pagerPreviousPage')\"\n                  [ngClass]=\"{\n                    'k-icon': true,\n                    'k-i-caret-alt-left': true\n                  }\">\n            </span>\n        </span>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: PagerContextService }, { type: i0.ChangeDetectorRef }, { type: NavigationService }]; } });\n\n/**\n * Displays numeric buttons to enable navigation between the pages.\n */\nclass PagerNumericButtonsComponent extends PagerElementComponent {\n    constructor(localization, cd, pagerContext) {\n        super(localization, pagerContext, cd);\n        this.pagerContext = pagerContext;\n        this.numbersWrapClass = true;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number[]}\n     * @memberOf PagerNumericButtonsComponent\n     */\n    get buttons() {\n        let result = [];\n        for (let idx = this.start; idx <= this.end; idx++) {\n            result.push(idx);\n        }\n        return result;\n    }\n    /**\n     * @hidden\n     */\n    get end() {\n        return Math.min((this.start + this.buttonCount) - 1, this.totalPages);\n    }\n    /**\n     * @hidden\n     */\n    get start() {\n        const page = this.currentPage;\n        const buttonCount = this.buttonCount;\n        if (page > buttonCount) {\n            const reminder = (page % buttonCount);\n            return (reminder === 0) ? (page - buttonCount) + 1 : (page - reminder) + 1;\n        }\n        return 1;\n    }\n    /**\n     * @hidden\n     */\n    pageLabel(num) {\n        const pageText = this.textFor('pagerPage');\n        if (pageText) {\n            return pageText + ' ' + num;\n        }\n        return num.toString();\n    }\n    /**\n     * @hidden\n     */\n    onSelectChange(e) {\n        const target = e.target;\n        const valueAsNumber = Number(target.value);\n        if (!Number.isNaN(valueAsNumber)) {\n            this.changePage(valueAsNumber - 1);\n        }\n        else {\n            if (target.value === 'previousButtons') {\n                this.changePage(this.start - 2);\n            }\n            else {\n                this.changePage(this.end);\n            }\n        }\n    }\n    onChanges({ total, skip, pageSize }) {\n        this.total = total;\n        this.skip = skip;\n        this.pageSize = pageSize;\n        this.cd.markForCheck();\n    }\n}\nPagerNumericButtonsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerNumericButtonsComponent, deps: [{ token: i1.LocalizationService }, { token: i0.ChangeDetectorRef }, { token: PagerContextService }], target: i0.ɵɵFactoryTarget.Component });\nPagerNumericButtonsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: PagerNumericButtonsComponent, selector: \"kendo-pager-numeric-buttons\", inputs: { buttonCount: \"buttonCount\" }, host: { properties: { \"class.k-pager-numbers-wrap\": \"this.numbersWrapClass\" } }, usesInheritance: true, ngImport: i0, template: `\n        <select\n            class=\"k-dropdownlist k-pager-nav\"\n            kendoGridFocusable\n            tabindex=\"0\"\n            (change)=\"onSelectChange($event)\">\n            <option *ngIf=\"start > 1\"\n                class=\"k-link\"\n                value=\"previousButtons\"\n                [selected]=\"false\"\n                [attr.aria-label]=\"pageLabel(start - 1)\">...\n            </option>\n            <option *ngFor=\"let num of buttons\"\n                [value]=\"num.toString()\"\n                [selected]=\"num === currentPage\"\n                [attr.aria-label]=\"pageLabel(num)\"\n                [attr.aria-current]=\"currentPage === num ? 'page' : undefined\"\n                [ngClass]=\"{'k-link': true, 'k-selected':currentPage === num}\">\n                {{num}}\n            </option>\n            <option *ngIf=\"end < totalPages\"\n                value=\"nextButtons\"\n                [selected]=\"false\"\n                class=\"k-link\"\n                [attr.aria-label]=\"pageLabel(end + 1)\">...\n            </option>\n        </select>\n        <ul [ngClass]=\"{'k-pager-numbers': true, 'k-reset': true}\">\n            <li *ngIf=\"start > 1\">\n                <span\n                    kendoGridFocusable\n                    tabindex=\"0\"\n                    class=\"k-link k-pager-nav\"\n                    role=\"button\"\n                    [attr.aria-label]=\"pageLabel(start - 1)\"\n                    (click)=\"changePage(start - 2)\"\n                    (keydown.enter)=\"changePage(start - 2)\">...</span>\n            </li>\n            <li *ngFor=\"let num of buttons\">\n                <span\n                    kendoGridFocusable\n                    tabindex=\"0\"\n                    role=\"button\"\n                    [attr.aria-label]=\"pageLabel(num)\"\n                    [ngClass]=\"{'k-link': true, 'k-selected':currentPage === num, 'k-pager-nav': true}\"\n                    (click)=\"changePage(num - 1)\"\n                    (keydown.enter)=\"changePage(num - 1)\">\n                    {{num}}\n                </span>\n            </li>\n            <li *ngIf=\"end < totalPages\">\n                <span\n                    kendoGridFocusable\n                    tabindex=\"0\"\n                    class=\"k-link k-pager-nav\"\n                    role=\"button\"\n                    [attr.aria-label]=\"pageLabel(end + 1)\"\n                    (click)=\"changePage(end)\"\n                    (keydown.enter)=\"changePage(end)\">...</span>\n            </li>\n        </ul>\n    `, isInline: true, directives: [{ type: FocusableDirective, selector: \"[kendoGridFocusable],\\n        [kendoGridEditCommand],\\n        [kendoGridRemoveCommand],\\n        [kendoGridSaveCommand],\\n        [kendoGridCancelCommand],\\n        [kendoGridSelectionCheckbox]\\n    \", inputs: [\"kendoGridFocusable\"] }, { type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerNumericButtonsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    selector: 'kendo-pager-numeric-buttons',\n                    template: `\n        <select\n            class=\"k-dropdownlist k-pager-nav\"\n            kendoGridFocusable\n            tabindex=\"0\"\n            (change)=\"onSelectChange($event)\">\n            <option *ngIf=\"start > 1\"\n                class=\"k-link\"\n                value=\"previousButtons\"\n                [selected]=\"false\"\n                [attr.aria-label]=\"pageLabel(start - 1)\">...\n            </option>\n            <option *ngFor=\"let num of buttons\"\n                [value]=\"num.toString()\"\n                [selected]=\"num === currentPage\"\n                [attr.aria-label]=\"pageLabel(num)\"\n                [attr.aria-current]=\"currentPage === num ? 'page' : undefined\"\n                [ngClass]=\"{'k-link': true, 'k-selected':currentPage === num}\">\n                {{num}}\n            </option>\n            <option *ngIf=\"end < totalPages\"\n                value=\"nextButtons\"\n                [selected]=\"false\"\n                class=\"k-link\"\n                [attr.aria-label]=\"pageLabel(end + 1)\">...\n            </option>\n        </select>\n        <ul [ngClass]=\"{'k-pager-numbers': true, 'k-reset': true}\">\n            <li *ngIf=\"start > 1\">\n                <span\n                    kendoGridFocusable\n                    tabindex=\"0\"\n                    class=\"k-link k-pager-nav\"\n                    role=\"button\"\n                    [attr.aria-label]=\"pageLabel(start - 1)\"\n                    (click)=\"changePage(start - 2)\"\n                    (keydown.enter)=\"changePage(start - 2)\">...</span>\n            </li>\n            <li *ngFor=\"let num of buttons\">\n                <span\n                    kendoGridFocusable\n                    tabindex=\"0\"\n                    role=\"button\"\n                    [attr.aria-label]=\"pageLabel(num)\"\n                    [ngClass]=\"{'k-link': true, 'k-selected':currentPage === num, 'k-pager-nav': true}\"\n                    (click)=\"changePage(num - 1)\"\n                    (keydown.enter)=\"changePage(num - 1)\">\n                    {{num}}\n                </span>\n            </li>\n            <li *ngIf=\"end < totalPages\">\n                <span\n                    kendoGridFocusable\n                    tabindex=\"0\"\n                    class=\"k-link k-pager-nav\"\n                    role=\"button\"\n                    [attr.aria-label]=\"pageLabel(end + 1)\"\n                    (click)=\"changePage(end)\"\n                    (keydown.enter)=\"changePage(end)\">...</span>\n            </li>\n        </ul>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: i0.ChangeDetectorRef }, { type: PagerContextService }]; }, propDecorators: { numbersWrapClass: [{\n                type: HostBinding,\n                args: ['class.k-pager-numbers-wrap']\n            }], buttonCount: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass PagerInputDirective {\n    constructor(host, renderer) {\n        this.host = host;\n        this.renderer = renderer;\n    }\n    ngAfterViewInit() {\n        const inputElement = this.host.numericInput.nativeElement;\n        this.renderer.addClass(inputElement, 'k-pager-nav');\n    }\n}\nPagerInputDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerInputDirective, deps: [{ token: i4$1.NumericTextBoxComponent }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nPagerInputDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: PagerInputDirective, selector: \"[kendoGridPagerInput]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerInputDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[kendoGridPagerInput]' }]\n        }], ctorParameters: function () { return [{ type: i4$1.NumericTextBoxComponent }, { type: i0.Renderer2 }]; } });\n\n/**\n * Displays an input element which allows the typing and rendering of page numbers.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *      <kendo-grid\n *        [kendoGridBinding]=\"gridData\"\n *        [pageSize]=\"1\"\n *        [pageable]=\"true\"\n *      >\n *       <kendo-grid-column field=\"ProductID\" title=\"ID\" [width]=\"40\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"ProductName\" title=\"Name\" [width]=\"250\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"UnitPrice\" title=\"Price\" [width]=\"80\" format=\"{0:c}\">\n *       </kendo-grid-column>\n *\n *       <ng-template kendoPagerTemplate let-totalPages=\"totalPages\" let-currentPage=\"currentPage\">\n *          <kendo-pager-prev-buttons></kendo-pager-prev-buttons>\n *          <kendo-pager-numeric-buttons [buttonCount]=\"10\"></kendo-pager-numeric-buttons>\n *          <kendo-pager-next-buttons></kendo-pager-next-buttons>\n *          <kendo-pager-input></kendo-pager-input>\n *          <kendo-pager-info></kendo-pager-info>\n *       </ng-template>\n *\n *    </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\nclass PagerInputComponent extends PagerElementComponent {\n    constructor(localization, pagerContext, zone, navigationService, cd) {\n        super(localization, pagerContext, cd);\n        this.pagerContext = pagerContext;\n        this.zone = zone;\n        this.navigationService = navigationService;\n        /**\n         * @hidden\n         *\n         * @param {string} value\n         *\n         * @memberOf PagerInputComponent\n         */\n        this.handleKeyDown = (event) => {\n            let incomingValue = this.numericInput.value || this.current;\n            if (event.keyCode === Keys.Enter) {\n                event.preventDefault();\n                if (incomingValue !== this.current) {\n                    this.zone.run(() => {\n                        this.changePage(incomingValue - 1);\n                    });\n                }\n            }\n        };\n        /**\n         * @hidden\n         *\n         * @param {string} value\n         *\n         * @memberOf PagerInputComponent\n         */\n        this.handleBlur = () => {\n            const inputValue = this.numericInput.value;\n            if (!inputValue) {\n                this.numericInput.writeValue(this.current);\n                return;\n            }\n            if (inputValue !== this.current) {\n                this.zone.run(() => {\n                    this.changePage(inputValue - 1);\n                });\n            }\n        };\n    }\n    /**\n     * @hidden\n     */\n    get current() {\n        return this.hasPages ? this.currentPage : 0;\n    }\n    get hasPages() {\n        return this.totalPages !== 0;\n    }\n    onChanges({ total, skip, pageSize }) {\n        this.total = total;\n        this.skip = skip;\n        this.pageSize = pageSize;\n        this.cd.markForCheck();\n    }\n}\nPagerInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerInputComponent, deps: [{ token: i1.LocalizationService }, { token: PagerContextService }, { token: i0.NgZone }, { token: NavigationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nPagerInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: PagerInputComponent, selector: \"kendo-pager-input\", viewQueries: [{ propertyName: \"numericInput\", first: true, predicate: NumericTextBoxComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n     <span [ngClass]=\"{'k-pager-input': true, 'k-label': true}\">\n        {{textFor('pagerPage')}}\n        <kendo-numerictextbox\n            kendoGridPagerInput\n            [kendoGridFocusable]=\"hasPages\"\n            [tabindex]=\"0\"\n            [spinners]=\"false\"\n            [decimals]=\"0\"\n            format=\"n0\"\n            [disabled]=\"!hasPages\"\n            [value]=\"current\"\n            [min]=\"hasPages ? 1 : 0\"\n            [max]=\"totalPages\"\n            [autoCorrect]=\"true\"\n            [title]=\"textFor('pagerPageNumberInputTitle')\"\n            [kendoEventsOutsideAngular]=\"{\n                keydown: handleKeyDown,\n                focusout: handleBlur\n            }\"\n        >\n        </kendo-numerictextbox>\n        {{textFor('pagerOf')}} {{totalPages}}\n     </span>\n    `, isInline: true, components: [{ type: i4$1.NumericTextBoxComponent, selector: \"kendo-numerictextbox\", inputs: [\"focusableId\", \"disabled\", \"readonly\", \"title\", \"autoCorrect\", \"format\", \"max\", \"min\", \"decimals\", \"placeholder\", \"step\", \"spinners\", \"rangeValidation\", \"tabindex\", \"tabIndex\", \"changeValueOnScroll\", \"selectOnFocus\", \"value\", \"maxlength\", \"size\", \"rounded\", \"fillMode\"], outputs: [\"valueChange\", \"focus\", \"blur\"], exportAs: [\"kendoNumericTextBox\"] }], directives: [{ type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: PagerInputDirective, selector: \"[kendoGridPagerInput]\" }, { type: FocusableDirective, selector: \"[kendoGridFocusable],\\n        [kendoGridEditCommand],\\n        [kendoGridRemoveCommand],\\n        [kendoGridSaveCommand],\\n        [kendoGridCancelCommand],\\n        [kendoGridSelectionCheckbox]\\n    \", inputs: [\"kendoGridFocusable\"] }, { type: i1$1.EventsOutsideAngularDirective, selector: \"[kendoEventsOutsideAngular]\", inputs: [\"kendoEventsOutsideAngular\", \"scope\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerInputComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-pager-input',\n                    template: `\n     <span [ngClass]=\"{'k-pager-input': true, 'k-label': true}\">\n        {{textFor('pagerPage')}}\n        <kendo-numerictextbox\n            kendoGridPagerInput\n            [kendoGridFocusable]=\"hasPages\"\n            [tabindex]=\"0\"\n            [spinners]=\"false\"\n            [decimals]=\"0\"\n            format=\"n0\"\n            [disabled]=\"!hasPages\"\n            [value]=\"current\"\n            [min]=\"hasPages ? 1 : 0\"\n            [max]=\"totalPages\"\n            [autoCorrect]=\"true\"\n            [title]=\"textFor('pagerPageNumberInputTitle')\"\n            [kendoEventsOutsideAngular]=\"{\n                keydown: handleKeyDown,\n                focusout: handleBlur\n            }\"\n        >\n        </kendo-numerictextbox>\n        {{textFor('pagerOf')}} {{totalPages}}\n     </span>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: PagerContextService }, { type: i0.NgZone }, { type: NavigationService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { numericInput: [{\n                type: ViewChild,\n                args: [NumericTextBoxComponent, { static: false }]\n            }] } });\n\n/**\n * Displays buttons for navigating to the next and to the last page ([see example]({% slug paging_grid %}#toc-pager-template)).\n */\nclass PagerNextButtonsComponent extends PagerElementComponent {\n    constructor(localization, pagerContext, cd, navigationService) {\n        super(localization, pagerContext, cd);\n        this.navigationService = navigationService;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {boolean}\n     * @memberOf PagerNextButtonsComponent\n     */\n    get disabled() {\n        return this.currentPage === this.totalPages || !this.total;\n    }\n    onChanges({ total, skip, pageSize }) {\n        this.total = total;\n        this.skip = skip;\n        this.pageSize = pageSize;\n        this.cd.markForCheck();\n    }\n}\nPagerNextButtonsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerNextButtonsComponent, deps: [{ token: i1.LocalizationService }, { token: PagerContextService }, { token: i0.ChangeDetectorRef }, { token: NavigationService }], target: i0.ɵɵFactoryTarget.Component });\nPagerNextButtonsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: PagerNextButtonsComponent, selector: \"kendo-pager-next-buttons\", usesInheritance: true, ngImport: i0, template: `\n        <span\n            [kendoGridFocusable]=\"!disabled\"\n            tabindex=\"0\"\n            [title]=\"textFor('pagerNextPage')\"\n            (click)=\"currentPage !== totalPages ? changePage(currentPage) : false\"\n            (keydown.enter)=\"currentPage !== totalPages ? changePage(currentPage) : false\"\n            role=\"button\"\n            [ngClass]=\"{\n                'k-link': true,\n                'k-pager-nav': true,\n                'k-disabled': disabled,\n                '': true\n            }\">\n            <span role=\"note\" [attr.aria-label]=\"textFor('pagerNextPage')\"\n                [ngClass]=\"{\n                    'k-icon':true,\n                    'k-i-caret-alt-right': true\n                }\">\n            </span>\n        </span>\n        <span\n            [kendoGridFocusable]=\"!disabled\"\n            tabindex=\"0\"\n            [title]=\"textFor('pagerLastPage')\"\n            (click)=\"currentPage !== totalPages ? changePage(totalPages-1) : false\"\n            (keydown.enter)=\"currentPage !== totalPages ? changePage(totalPages-1) : false\"\n            role=\"button\"\n            [ngClass]=\"{\n                'k-link': true,\n                'k-pager-nav': true,\n                'k-disabled': disabled,\n                'k-pager-last': true\n            }\">\n            <span role=\"note\" [attr.aria-label]=\"textFor('pagerLastPage')\"\n                [ngClass]=\"{\n                    'k-icon':true,\n                    'k-i-caret-alt-to-right': true\n                }\">\n            </span>\n        </span>\n    `, isInline: true, directives: [{ type: FocusableDirective, selector: \"[kendoGridFocusable],\\n        [kendoGridEditCommand],\\n        [kendoGridRemoveCommand],\\n        [kendoGridSaveCommand],\\n        [kendoGridCancelCommand],\\n        [kendoGridSelectionCheckbox]\\n    \", inputs: [\"kendoGridFocusable\"] }, { type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerNextButtonsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    selector: 'kendo-pager-next-buttons',\n                    template: `\n        <span\n            [kendoGridFocusable]=\"!disabled\"\n            tabindex=\"0\"\n            [title]=\"textFor('pagerNextPage')\"\n            (click)=\"currentPage !== totalPages ? changePage(currentPage) : false\"\n            (keydown.enter)=\"currentPage !== totalPages ? changePage(currentPage) : false\"\n            role=\"button\"\n            [ngClass]=\"{\n                'k-link': true,\n                'k-pager-nav': true,\n                'k-disabled': disabled,\n                '': true\n            }\">\n            <span role=\"note\" [attr.aria-label]=\"textFor('pagerNextPage')\"\n                [ngClass]=\"{\n                    'k-icon':true,\n                    'k-i-caret-alt-right': true\n                }\">\n            </span>\n        </span>\n        <span\n            [kendoGridFocusable]=\"!disabled\"\n            tabindex=\"0\"\n            [title]=\"textFor('pagerLastPage')\"\n            (click)=\"currentPage !== totalPages ? changePage(totalPages-1) : false\"\n            (keydown.enter)=\"currentPage !== totalPages ? changePage(totalPages-1) : false\"\n            role=\"button\"\n            [ngClass]=\"{\n                'k-link': true,\n                'k-pager-nav': true,\n                'k-disabled': disabled,\n                'k-pager-last': true\n            }\">\n            <span role=\"note\" [attr.aria-label]=\"textFor('pagerLastPage')\"\n                [ngClass]=\"{\n                    'k-icon':true,\n                    'k-i-caret-alt-to-right': true\n                }\">\n            </span>\n        </span>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: PagerContextService }, { type: i0.ChangeDetectorRef }, { type: NavigationService }]; } });\n\n// eslint-disable no-access-missing-member\n/**\n * Displays information about the current page and the total number of records ([see example]({% slug paging_grid %}#toc-pager-templates)).\n */\nclass PagerInfoComponent extends PagerElementComponent {\n    constructor(localization, cd, pagerContext) {\n        super(localization, pagerContext, cd);\n        this.pagerContext = pagerContext;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number}\n     * @memberOf PagerInfoComponent\n     */\n    get maxItems() {\n        return Math.min(this.currentPage * this.pageSize, this.total);\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number}\n     * @memberOf PagerInfoComponent\n     */\n    get currentPageText() {\n        return this.total ?\n            (this.currentPage - 1) * this.pageSize + 1 :\n            0;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {boolean}\n     * @memberOf PagerInfoComponent\n     */\n    get classes() {\n        return true;\n    }\n    onChanges({ total, skip, pageSize }) {\n        this.total = total;\n        this.skip = skip;\n        this.pageSize = pageSize;\n        this.cd.markForCheck();\n    }\n}\nPagerInfoComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerInfoComponent, deps: [{ token: i1.LocalizationService }, { token: i0.ChangeDetectorRef }, { token: PagerContextService }], target: i0.ɵɵFactoryTarget.Component });\nPagerInfoComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: PagerInfoComponent, selector: \"kendo-pager-info\", host: { properties: { \"class.k-pager-info\": \"this.classes\", \"class.k-label\": \"this.classes\" } }, usesInheritance: true, ngImport: i0, template: `{{currentPageText}} - {{maxItems}} {{textFor('pagerOf')}} {{total}} {{textFor('pagerItems')}}`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerInfoComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    selector: 'kendo-pager-info',\n                    template: `{{currentPageText}} - {{maxItems}} {{textFor('pagerOf')}} {{total}} {{textFor('pagerItems')}}`\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: i0.ChangeDetectorRef }, { type: PagerContextService }]; }, propDecorators: { classes: [{\n                type: HostBinding,\n                args: [\"class.k-pager-info\"]\n            }, {\n                type: HostBinding,\n                args: [\"class.k-label\"]\n            }] } });\n\n/**\n * @hidden\n */\nclass PagerDropDownListDirective {\n    constructor(host) {\n        this.host = host;\n        this.keydownHandler = (e) => {\n            if (e.keyCode === Keys.Escape && this.host.isOpen) {\n                e.stopPropagation();\n                this.host.toggle(false);\n            }\n        };\n    }\n    ngAfterViewInit() {\n        const wrapperElement = this.host.wrapper.nativeElement;\n        wrapperElement.addEventListener('keydown', this.keydownHandler, true);\n    }\n    ngOnDestroy() {\n        this.host.wrapper.nativeElement.removeEventListener('keydown', this.keydownHandler);\n    }\n}\nPagerDropDownListDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerDropDownListDirective, deps: [{ token: i1$4.DropDownListComponent }], target: i0.ɵɵFactoryTarget.Directive });\nPagerDropDownListDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: PagerDropDownListDirective, selector: \"[kendoGridPagerDropDown]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerDropDownListDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[kendoGridPagerDropDown]' }]\n        }], ctorParameters: function () { return [{ type: i1$4.DropDownListComponent }]; } });\n\n/**\n * Displays a drop-down list for the page size selection ([see example]({% slug paging_grid %}#toc-pager-templates)).\n */\nclass PagerPageSizesComponent extends PagerElementComponent {\n    constructor(localization, cd, pagerContext, navigationService) {\n        super(localization, pagerContext, cd);\n        this.pagerContext = pagerContext;\n        this.navigationService = navigationService;\n        this._pageSizes = [];\n    }\n    /**\n     * The page sizes collection. Can be an Array of numbers and/or PageSizeItem objects.\n     *\n     * @example\n     * ```ts-preview\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-grid [kendoGridBinding]=\"gridData\" [height]=\"200\"\n     *           [pageable]=\"true\"\n     *            [pageSize]=\"pageSize\">\n     *            <ng-template kendoPagerTemplate let-totalPages=\"totalPages\" let-currentPage=\"currentPage\">\n     *                <kendo-pager-page-sizes [pageSizes]=\"pagesizes\"></kendo-pager-page-sizes>\n     *            </ng-template>\n     *        </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     *    public pageSize = 2;\n     *    public pagesizes = [{text: 'One', value: 1}, {text: 'Two', value: 2}, {text: 'All', value : 'all'}];\n     * }\n     *\n     * const products = [{\n     *   'ProductID' : 1,\n     *   'ProductName' : \"Chai\",\n     *   'SupplierID' : 1,\n     *   'CategoryID' : 1,\n     *   'QuantityPerUnit' : \"10 boxes x 20 bags\",\n     *   'UnitPrice' : 18.0000,\n     *   'UnitsInStock' : 39,\n     *   'UnitsOnOrder' : 0,\n     *   'ReorderLevel' : 10,\n     *   'Discontinued' : false\n     *\n     * }, {\n     *   'ProductID' : 2,\n     *   'ProductName' : \"Chang\",\n     *   'SupplierID' : 1,\n     *   'CategoryID' : 1,\n     *   'QuantityPerUnit' : \"24 - 12 oz bottles\",\n     *   'UnitPrice' : 19.0000,\n     *   'UnitsInStock' : 17,\n     *   'UnitsOnOrder' : 40,\n     *   'ReorderLevel' : 25,\n     *   'Discontinued' : false\n     * }, {\n     *   'ProductID' : 3,\n     *   'ProductName' : \"Aniseed Syrup\",\n     *   'SupplierID' : 1,\n     *   'CategoryID' : 2,\n     *   'QuantityPerUnit' : \"12 - 550 ml bottles\",\n     *   'UnitPrice' : 10.0000,\n     *   'UnitsInStock' : 13,\n     *   'UnitsOnOrder' : 70,\n     *   'ReorderLevel' : 25,\n     *   'Discontinued' : false\n     * }, {\n     *   'ProductID' : 4,\n     *   'ProductName' : \"Chef Anton\\'s Cajun Seasoning\",\n     *   'SupplierID' : 2,\n     *  'CategoryID' : 2,\n     *   'QuantityPerUnit' : \"48 - 6 oz jars\",\n     *   'UnitPrice' : 22.0000,\n     *   'UnitsInStock' : 53,\n     *   'UnitsOnOrder' : 0,\n     *   'ReorderLevel' : 0,\n     *   'Discontinued' : false\n     * }, {\n     *   'ProductID' : 5,\n     *   'ProductName' : \"Chef Anton\\'s Gumbo Mix\",\n     *   'SupplierID' : 2,\n     *   'CategoryID' : 2,\n     *   'QuantityPerUnit' : \"36 boxes\",\n     *   'UnitPrice' : 21.3500,\n     *   'UnitsInStock' : 0,\n     *   'UnitsOnOrder' : 0,\n     *   'ReorderLevel' : 0,\n     *   'Discontinued' : true\n     * }, {\n     *   'ProductID' : 6,\n     *   'ProductName' : \"Grandma\\'s Boysenberry Spread\",\n     *   'SupplierID' : 3,\n     *   'CategoryID' : 2,\n     *   'QuantityPerUnit' : \"12 - 8 oz jars\",\n     *   'UnitPrice' : 25.0000,\n     *   'UnitsInStock' : 120,\n     *   'UnitsOnOrder' : 0,\n     *   'ReorderLevel' : 25,\n     *   'Discontinued' : false\n     * }];\n     * ```\n     */\n    set pageSizes(pageSizes) {\n        let normalizedItems = [];\n        pageSizes.forEach(item => {\n            if (typeof item === 'number') {\n                normalizedItems.push({\n                    text: item.toString(),\n                    value: item\n                });\n            }\n            else {\n                normalizedItems.push(item);\n            }\n        });\n        if (this.pageSize && !normalizedItems.some(item => item.value === this.pageSize)) {\n            normalizedItems = [{ text: this.pageSize.toString(), value: this.pageSize }, ...normalizedItems];\n        }\n        this._pageSizes = normalizedItems;\n    }\n    get pageSizes() {\n        return this._pageSizes;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     */\n    get classes() {\n        return true;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     */\n    get showInitialPageSize() {\n        return this.pageSizes\n            .filter(item => {\n            if (typeof item.value === 'number') {\n                return item.value === Number(this.pageSize);\n            }\n            return this.total === Number(this.pageSize);\n        })\n            .length === 0;\n    }\n    /**\n     * @hidden\n     */\n    pageSizeChange(value) {\n        this.pageSize = typeof value === 'number' ? value : this.total;\n        this.pagerContext.changePageSize(this.pageSize);\n    }\n    /**\n     * @hidden\n     */\n    getValue(page) {\n        return typeof page.value === 'number' ? page.value : this.total;\n    }\n    onChanges({ total, skip, pageSize }) {\n        this.total = total;\n        this.skip = skip;\n        this.pageSize = typeof pageSize === 'number' ? pageSize : this.total;\n        this.cd.markForCheck();\n    }\n}\nPagerPageSizesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerPageSizesComponent, deps: [{ token: i1.LocalizationService }, { token: i0.ChangeDetectorRef }, { token: PagerContextService }, { token: NavigationService }], target: i0.ɵɵFactoryTarget.Component });\nPagerPageSizesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: PagerPageSizesComponent, selector: \"kendo-pager-page-sizes\", inputs: { pageSizes: \"pageSizes\" }, host: { properties: { \"class.k-pager-sizes\": \"this.classes\", \"class.k-label\": \"this.classes\" } }, usesInheritance: true, ngImport: i0, template: `\n        <kendo-dropdownlist\n            #dropdownlist\n            kendoGridPagerDropDown\n            [tabindex]=\"0\"\n            kendoGridFocusable\n            [data]=\"pageSizes\"\n            textField=\"text\"\n            valueField=\"value\"\n            [valuePrimitive]=\"true\"\n            [value]=\"pageSize\"\n            (valueChange)=\"pageSizeChange($event)\"></kendo-dropdownlist>\n        <kendo-label [for]=\"dropdownlist\" [text]=\"textFor('pagerItemsPerPage')\"></kendo-label>\n    `, isInline: true, components: [{ type: i1$4.DropDownListComponent, selector: \"kendo-dropdownlist\", inputs: [\"iconClass\", \"loading\", \"data\", \"value\", \"textField\", \"valueField\", \"popupSettings\", \"listHeight\", \"defaultItem\", \"disabled\", \"itemDisabled\", \"readonly\", \"filterable\", \"virtual\", \"ignoreCase\", \"delay\", \"valuePrimitive\", \"tabindex\", \"tabIndex\", \"size\", \"rounded\", \"fillMode\", \"id\"], outputs: [\"valueChange\", \"filterChange\", \"selectionChange\", \"open\", \"opened\", \"close\", \"closed\", \"focus\", \"blur\"], exportAs: [\"kendoDropDownList\"] }, { type: i5.LabelComponent, selector: \"kendo-label\", inputs: [\"text\", \"for\", \"optional\"], exportAs: [\"kendoLabel\"] }], directives: [{ type: PagerDropDownListDirective, selector: \"[kendoGridPagerDropDown]\" }, { type: FocusableDirective, selector: \"[kendoGridFocusable],\\n        [kendoGridEditCommand],\\n        [kendoGridRemoveCommand],\\n        [kendoGridSaveCommand],\\n        [kendoGridCancelCommand],\\n        [kendoGridSelectionCheckbox]\\n    \", inputs: [\"kendoGridFocusable\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerPageSizesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    selector: 'kendo-pager-page-sizes',\n                    template: `\n        <kendo-dropdownlist\n            #dropdownlist\n            kendoGridPagerDropDown\n            [tabindex]=\"0\"\n            kendoGridFocusable\n            [data]=\"pageSizes\"\n            textField=\"text\"\n            valueField=\"value\"\n            [valuePrimitive]=\"true\"\n            [value]=\"pageSize\"\n            (valueChange)=\"pageSizeChange($event)\"></kendo-dropdownlist>\n        <kendo-label [for]=\"dropdownlist\" [text]=\"textFor('pagerItemsPerPage')\"></kendo-label>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: i0.ChangeDetectorRef }, { type: PagerContextService }, { type: NavigationService }]; }, propDecorators: { pageSizes: [{\n                type: Input\n            }], classes: [{\n                type: HostBinding,\n                args: ['class.k-pager-sizes']\n            }, {\n                type: HostBinding,\n                args: ['class.k-label']\n            }] } });\n\n/**\n * @hidden\n */\nclass PagerComponent {\n    constructor(pagerContext, navigationService, element, renderer, zone, localizationService, cellContext, focusRoot, focusGroup) {\n        this.pagerContext = pagerContext;\n        this.navigationService = navigationService;\n        this.element = element;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.localizationService = localizationService;\n        this.cellContext = cellContext;\n        this.focusRoot = focusRoot;\n        this.focusGroup = focusGroup;\n        this.total = 0;\n        this.skip = 1;\n        this.pageChange = new EventEmitter();\n        this.pagerWrapClass = true;\n        this.gridPagerClass = true;\n        this.settings = normalize$1({});\n        this.subscriptions = new Subscription();\n        this._templateContext = {};\n        this._isFocused = false;\n        this.resizeHandler = () => {\n            const element = this.element.nativeElement;\n            if (this.template || !element) {\n                return;\n            }\n            const width = element.offsetWidth;\n            if (width < RESPONSIVE_BREAKPOINT_MEDIUM) {\n                this.renderer.removeClass(element, 'k-pager-md');\n                this.renderer.addClass(element, 'k-pager-sm');\n            }\n            else if (width >= RESPONSIVE_BREAKPOINT_MEDIUM && width < RESPONSIVE_BREAKPOINT_LARGE) {\n                this.renderer.addClass(element, 'k-pager-md');\n                this.renderer.removeClass(element, 'k-pager-sm');\n            }\n            else {\n                this.clearResponsiveClasses();\n            }\n        };\n    }\n    set options(value) {\n        this.settings = normalize$1(value);\n    }\n    get isFocused() {\n        return this._isFocused;\n    }\n    get pagerAriaLabel() {\n        return this.navigationService.pagerEnabled ? this.pagerLabel : undefined;\n    }\n    /**\n     * @hidden\n     */\n    get pagerLabel() {\n        const localizationMsg = this.localizationService.get('pagerLabel') || '';\n        return replaceMessagePlaceholder(replaceMessagePlaceholder(localizationMsg, 'currentPage', this.currentPage.toString()), 'totalPages', this.totalPages.toString());\n    }\n    get focusTrapTabIndex() {\n        return this.focusGroup.isActive ? '0' : '-1';\n    }\n    onFocusIn(event) {\n        if (this.navigationService.pagerEnabled) {\n            const shouldFocusPager = event.target === this.element.nativeElement;\n            if (shouldFocusPager) {\n                this._isFocused = true;\n                this.focusRoot.deactivate();\n            }\n            else {\n                this.focusRoot.activate();\n            }\n        }\n    }\n    onFocusOut() {\n        if (this.navigationService.pagerEnabled) {\n            this._isFocused = false;\n        }\n    }\n    onEscape() {\n        if (this.navigationService.pagerEnabled) {\n            this.focusRoot.deactivate();\n            this.element.nativeElement.focus();\n        }\n    }\n    onEnter(event) {\n        if (this.navigationService.pagerEnabled && event.target === this.element.nativeElement) {\n            this.focusRoot.activate();\n            this.focusFirstElement();\n        }\n    }\n    navigateToPreviousPage(e) {\n        if (this.shouldTriggerPageChange(e.target, this.currentPage > 1)) {\n            this.pagerContext.prevPage();\n        }\n    }\n    navigateToNextPage(e) {\n        if (this.shouldTriggerPageChange(e.target, this.currentPage < this.totalPages)) {\n            this.pagerContext.nextPage();\n        }\n    }\n    navigateToFirstPage(e) {\n        if (this.shouldTriggerPageChange(e.target, this.currentPage > 1)) {\n            this.pagerContext.changePage(0);\n        }\n    }\n    navigateToLastPage(e) {\n        if (this.shouldTriggerPageChange(e.target, this.currentPage < this.totalPages)) {\n            this.pagerContext.changePage(this.totalPages - 1);\n        }\n    }\n    get totalPages() {\n        return Math.ceil((this.total || 0) / this.pageSize);\n    }\n    get currentPage() {\n        return Math.floor((this.skip || 0) / this.pageSize) + 1;\n    }\n    get templateContext() {\n        const context = this._templateContext;\n        context.totalPages = this.totalPages;\n        context.total = this.total;\n        context.skip = this.skip;\n        context.pageSize = this.pageSize;\n        context.currentPage = this.currentPage;\n        return context;\n    }\n    ngOnInit() {\n        this.subscriptions.add(this.pagerContext.pageChange.subscribe(this.changePage.bind(this)));\n        if (this.navigationService.pagerEnabled) {\n            this.focusRoot.deactivate();\n        }\n    }\n    ngDoCheck() {\n        this.updateCellContext();\n    }\n    ngOnChanges(changes) {\n        if (anyChanged(['pageSize', 'skip', 'total'], changes, false)) {\n            this.pagerContext.notifyChanges({\n                pageSize: this.pageSize,\n                skip: this.skip,\n                total: this.total\n            });\n        }\n        if (changes.template) {\n            // eslint-disable-next-line no-unused-expressions\n            changes.template.currentValue ? this.clearResponsiveClasses() : this.resizeHandler();\n        }\n        if (changes.options) {\n            // eslint-disable-next-line no-unused-expressions\n            this.settings.responsive ? this.resizeHandler() : this.clearResponsiveClasses();\n        }\n    }\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n    }\n    changePage(event) {\n        this.pageChange.emit(event);\n    }\n    onInnerFocusIn(event, position) {\n        this.zone.onStable.pipe(take(1)).subscribe(() => {\n            if (position === 'start') {\n                if (event.relatedTarget === this.element.nativeElement) {\n                    this.focusFirstElement();\n                }\n                else {\n                    this.focusLastElement();\n                }\n            }\n            else {\n                this.focusFirstElement();\n            }\n        });\n    }\n    clearResponsiveClasses() {\n        const element = this.element.nativeElement;\n        this.renderer.removeClass(element, 'k-pager-sm');\n        this.renderer.removeClass(element, 'k-pager-md');\n    }\n    shouldTriggerPageChange(target, condition) {\n        return this.navigationService.pagerEnabled &&\n            target === this.element.nativeElement &&\n            condition;\n    }\n    focusFirstElement() {\n        const first = findFocusableChild(this.element.nativeElement, true);\n        if (first) {\n            first.focus();\n        }\n    }\n    focusLastElement() {\n        const last = findLastFocusableChild(this.element.nativeElement, true);\n        if (last) {\n            last.focus();\n        }\n    }\n    updateCellContext() {\n        if (this.cellContext) {\n            this.cellContext.focusGroup = this.focusGroup;\n        }\n    }\n}\nPagerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerComponent, deps: [{ token: PagerContextService }, { token: NavigationService }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: i1.LocalizationService }, { token: CELL_CONTEXT, optional: true }, { token: FocusRoot }, { token: FocusGroup }], target: i0.ɵɵFactoryTarget.Component });\nPagerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: PagerComponent, selector: \"kendo-pager\", inputs: { total: \"total\", skip: \"skip\", pageSize: \"pageSize\", options: \"options\", template: \"template\" }, outputs: { pageChange: \"pageChange\" }, host: { listeners: { \"focusin\": \"onFocusIn($event)\", \"focusout\": \"onFocusOut()\", \"keydown.escape\": \"onEscape()\", \"keydown.enter\": \"onEnter($event)\", \"keydown.arrowleft\": \"navigateToPreviousPage($event)\", \"keydown.pageup\": \"navigateToPreviousPage($event)\", \"keydown.arrowright\": \"navigateToNextPage($event)\", \"keydown.pagedown\": \"navigateToNextPage($event)\", \"keydown.home\": \"navigateToFirstPage($event)\", \"keydown.end\": \"navigateToLastPage($event)\" }, properties: { \"class.k-pager-wrap\": \"this.pagerWrapClass\", \"class.k-grid-pager\": \"this.gridPagerClass\", \"class.k-focus\": \"this.isFocused\", \"attr.aria-label\": \"this.pagerAriaLabel\" } }, providers: [{\n            provide: FOCUS_ROOT_ACTIVE,\n            useValue: true\n        }, {\n            provide: FocusRoot,\n            deps: [FOCUS_ROOT_ACTIVE],\n            useClass: FocusRoot\n        }, {\n            provide: FocusGroup,\n            deps: [FocusRoot],\n            useClass: FocusGroup\n        }], usesOnChanges: true, ngImport: i0, template: `\n        <div\n            *ngIf=\"navigationService.pagerEnabled\"\n            class=\"k-sr-only\"\n            [tabindex]=\"focusTrapTabIndex\"\n            [attr.aria-hidden]=\"true\"\n            (focusin)=\"onInnerFocusIn($event, 'start')\">\n        </div>\n        <ng-container\n            *ngIf=\"template?.templateRef\"\n            [ngTemplateOutlet]=\"template.templateRef\"\n            [ngTemplateOutletContext]=\"templateContext\">\n        </ng-container>\n        <ng-container *ngIf=\"!template?.templateRef\">\n            <kendo-pager-prev-buttons *ngIf=\"settings.previousNext\"></kendo-pager-prev-buttons>\n            <kendo-pager-numeric-buttons\n                *ngIf=\"settings.type === 'numeric'\"\n                [buttonCount]=\"settings.buttonCount\">\n            </kendo-pager-numeric-buttons>\n            <kendo-pager-input *ngIf=\"settings.type === 'input'\"></kendo-pager-input>\n            <kendo-pager-next-buttons *ngIf=\"settings.previousNext\"></kendo-pager-next-buttons>\n            <kendo-pager-info *ngIf='settings.info'></kendo-pager-info>\n            <kendo-pager-page-sizes\n                *ngIf=\"settings.pageSizes\"\n                [pageSizes]=\"$any(settings.pageSizes)\"\n                #pageSizes\n            ></kendo-pager-page-sizes>\n        </ng-container>\n        <div\n            *ngIf=\"navigationService.pagerEnabled\"\n            class=\"k-sr-only\"\n            [tabindex]=\"focusTrapTabIndex\"\n            [attr.aria-hidden]=\"true\"\n            (focusin)=\"onInnerFocusIn($event, 'end')\">\n        </div>\n        <kendo-resize-sensor *ngIf=\"settings.responsive\" (resize)=\"resizeHandler()\"></kendo-resize-sensor>\n  `, isInline: true, components: [{ type: PagerPrevButtonsComponent, selector: \"kendo-pager-prev-buttons\" }, { type: PagerNumericButtonsComponent, selector: \"kendo-pager-numeric-buttons\", inputs: [\"buttonCount\"] }, { type: PagerInputComponent, selector: \"kendo-pager-input\" }, { type: PagerNextButtonsComponent, selector: \"kendo-pager-next-buttons\" }, { type: PagerInfoComponent, selector: \"kendo-pager-info\" }, { type: PagerPageSizesComponent, selector: \"kendo-pager-page-sizes\", inputs: [\"pageSizes\"] }, { type: i1$1.ResizeSensorComponent, selector: \"kendo-resize-sensor\", inputs: [\"rateLimit\"], outputs: [\"resize\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-pager',\n                    providers: [{\n                            provide: FOCUS_ROOT_ACTIVE,\n                            useValue: true\n                        }, {\n                            provide: FocusRoot,\n                            deps: [FOCUS_ROOT_ACTIVE],\n                            useClass: FocusRoot\n                        }, {\n                            provide: FocusGroup,\n                            deps: [FocusRoot],\n                            useClass: FocusGroup\n                        }],\n                    template: `\n        <div\n            *ngIf=\"navigationService.pagerEnabled\"\n            class=\"k-sr-only\"\n            [tabindex]=\"focusTrapTabIndex\"\n            [attr.aria-hidden]=\"true\"\n            (focusin)=\"onInnerFocusIn($event, 'start')\">\n        </div>\n        <ng-container\n            *ngIf=\"template?.templateRef\"\n            [ngTemplateOutlet]=\"template.templateRef\"\n            [ngTemplateOutletContext]=\"templateContext\">\n        </ng-container>\n        <ng-container *ngIf=\"!template?.templateRef\">\n            <kendo-pager-prev-buttons *ngIf=\"settings.previousNext\"></kendo-pager-prev-buttons>\n            <kendo-pager-numeric-buttons\n                *ngIf=\"settings.type === 'numeric'\"\n                [buttonCount]=\"settings.buttonCount\">\n            </kendo-pager-numeric-buttons>\n            <kendo-pager-input *ngIf=\"settings.type === 'input'\"></kendo-pager-input>\n            <kendo-pager-next-buttons *ngIf=\"settings.previousNext\"></kendo-pager-next-buttons>\n            <kendo-pager-info *ngIf='settings.info'></kendo-pager-info>\n            <kendo-pager-page-sizes\n                *ngIf=\"settings.pageSizes\"\n                [pageSizes]=\"$any(settings.pageSizes)\"\n                #pageSizes\n            ></kendo-pager-page-sizes>\n        </ng-container>\n        <div\n            *ngIf=\"navigationService.pagerEnabled\"\n            class=\"k-sr-only\"\n            [tabindex]=\"focusTrapTabIndex\"\n            [attr.aria-hidden]=\"true\"\n            (focusin)=\"onInnerFocusIn($event, 'end')\">\n        </div>\n        <kendo-resize-sensor *ngIf=\"settings.responsive\" (resize)=\"resizeHandler()\"></kendo-resize-sensor>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: PagerContextService }, { type: NavigationService }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: i1.LocalizationService }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CELL_CONTEXT]\n                }] }, { type: FocusRoot }, { type: FocusGroup }]; }, propDecorators: { total: [{\n                type: Input\n            }], skip: [{\n                type: Input\n            }], pageSize: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], pageChange: [{\n                type: Output\n            }], pagerWrapClass: [{\n                type: HostBinding,\n                args: ['class.k-pager-wrap']\n            }], gridPagerClass: [{\n                type: HostBinding,\n                args: ['class.k-grid-pager']\n            }], isFocused: [{\n                type: HostBinding,\n                args: ['class.k-focus']\n            }], pagerAriaLabel: [{\n                type: HostBinding,\n                args: ['attr.aria-label']\n            }], onFocusIn: [{\n                type: HostListener,\n                args: ['focusin', ['$event']]\n            }], onFocusOut: [{\n                type: HostListener,\n                args: ['focusout']\n            }], onEscape: [{\n                type: HostListener,\n                args: ['keydown.escape']\n            }], onEnter: [{\n                type: HostListener,\n                args: ['keydown.enter', ['$event']]\n            }], navigateToPreviousPage: [{\n                type: HostListener,\n                args: ['keydown.arrowleft', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['keydown.pageup', ['$event']]\n            }], navigateToNextPage: [{\n                type: HostListener,\n                args: ['keydown.arrowright', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['keydown.pagedown', ['$event']]\n            }], navigateToFirstPage: [{\n                type: HostListener,\n                args: ['keydown.home', ['$event']]\n            }], navigateToLastPage: [{\n                type: HostListener,\n                args: ['keydown.end', ['$event']]\n            }] } });\n\n/**\n * @hidden\n */\nclass DropTargetDirective {\n    constructor(element, service) {\n        this.element = element;\n        this.service = service;\n        this.context = {};\n        this.enter = new EventEmitter();\n        this.leave = new EventEmitter();\n        this.drop = new EventEmitter();\n        this.subscriptions = new Subscription();\n    }\n    ngOnInit() {\n        this.service.add(this);\n        const changes = this.service.changes.pipe(filter(({ target }) => target === this));\n        this.subscriptions.add(changes.pipe(filter(({ type }) => type === 'leave'))\n            .subscribe(e => {\n            this.leave.next(this.eventArgs(e));\n        }));\n        this.subscriptions.add(changes.pipe(filter(({ type }) => type === 'enter'))\n            .subscribe(e => {\n            this.enter.next(this.eventArgs(e));\n        }));\n        this.subscriptions.add(changes.pipe(filter(({ type }) => type === 'drop'))\n            .subscribe(e => {\n            this.drop.next(this.eventArgs(e));\n        }));\n    }\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n    }\n    eventArgs(e) {\n        return {\n            target: this,\n            mouseEvent: e.mouseEvent,\n            draggable: e.draggable\n        };\n    }\n}\nDropTargetDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropTargetDirective, deps: [{ token: i0.ElementRef }, { token: DragAndDropService }], target: i0.ɵɵFactoryTarget.Directive });\nDropTargetDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DropTargetDirective, selector: \"[kendoDropTarget]\", inputs: { context: \"context\" }, outputs: { enter: \"enter\", leave: \"leave\", drop: \"drop\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropTargetDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDropTarget]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: DragAndDropService }]; }, propDecorators: { context: [{\n                type: Input\n            }], enter: [{\n                type: Output\n            }], leave: [{\n                type: Output\n            }], drop: [{\n                type: Output\n            }] } });\n\n/**\n * @hidden\n */\nclass GroupIndicatorComponent {\n    constructor() {\n        this.directionChange = new EventEmitter();\n        this.remove = new EventEmitter();\n    }\n    get groupIndicatorClass() {\n        return true;\n    }\n    get dir() {\n        return this.group.dir ? this.group.dir : \"asc\";\n    }\n    toggleDirection() {\n        this.directionChange.emit({\n            dir: this.dir === \"asc\" ? \"desc\" : \"asc\",\n            field: this.group.field\n        });\n        return false;\n    }\n    removeDescriptor() {\n        this.remove.emit({\n            dir: this.group.dir,\n            field: this.group.field\n        });\n        return false;\n    }\n}\nGroupIndicatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupIndicatorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGroupIndicatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: GroupIndicatorComponent, selector: \"[kendoGroupIndicator]\", inputs: { group: \"group\", groupTitle: \"groupTitle\" }, outputs: { directionChange: \"directionChange\", remove: \"remove\" }, host: { properties: { \"class.k-group-indicator\": \"this.groupIndicatorClass\" } }, ngImport: i0, template: `\n        <a href=\"#\" class=\"k-link\" tabindex=\"-1\" (click)=\"toggleDirection()\">\n            <span class=\"k-icon\"\n                [class.k-i-sort-asc-small]=\"dir === 'asc'\"\n                [class.k-i-sort-desc-small]=\"dir === 'desc'\"></span>\n            {{groupTitle}}</a>\n        <a class=\"k-button k-button-flat-base k-button-flat k-icon-button k-button-md k-rounded-md k-button-rectangle k-icon-button\" tabindex=\"-1\" (click)=\"removeDescriptor()\">\n            <span class=\"k-button-icon k-icon k-i-x\"></span>\n        </a>\n    `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupIndicatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    selector: '[kendoGroupIndicator]',\n                    template: `\n        <a href=\"#\" class=\"k-link\" tabindex=\"-1\" (click)=\"toggleDirection()\">\n            <span class=\"k-icon\"\n                [class.k-i-sort-asc-small]=\"dir === 'asc'\"\n                [class.k-i-sort-desc-small]=\"dir === 'desc'\"></span>\n            {{groupTitle}}</a>\n        <a class=\"k-button k-button-flat-base k-button-flat k-icon-button k-button-md k-rounded-md k-button-rectangle k-icon-button\" tabindex=\"-1\" (click)=\"removeDescriptor()\">\n            <span class=\"k-button-icon k-icon k-i-x\"></span>\n        </a>\n    `\n                }]\n        }], propDecorators: { directionChange: [{\n                type: Output\n            }], remove: [{\n                type: Output\n            }], group: [{\n                type: Input\n            }], groupTitle: [{\n                type: Input\n            }], groupIndicatorClass: [{\n                type: HostBinding,\n                args: [\"class.k-group-indicator\"]\n            }] } });\n\n/**\n * @hidden\n */\nconst preventOnDblClick$1 = release => mouseDown => of(mouseDown).pipe(delay(150), takeUntil(release));\nconst hasClass = className => el => new RegExp(`(^| )${className}( |$)`).test(el.className);\nconst isDeleteButton = or(hasClass('k-i-x'), hasClass('k-icon-button'));\nconst isSortIcon = or(hasClass('k-i-sort-asc-small'), hasClass('k-i-sort-desc-small'));\nconst skipButtons = and(not(isDeleteButton), not(isSortIcon), not(isFocusableWithTabKey), not(matchesNodeName('label')));\nconst elementUnderCursor = ({ clientX, clientY }) => document.elementFromPoint(clientX, clientY);\nconst hideThenShow = (element, cont) => {\n    element.style.display = 'none';\n    const result = cont();\n    element.style.display = 'block';\n    return result;\n};\n/**\n * @hidden\n */\nclass DraggableColumnDirective {\n    constructor(draggable, element, zone, service, hint, cue, nav, renderer) {\n        this.draggable = draggable;\n        this.element = element;\n        this.zone = zone;\n        this.service = service;\n        this.hint = hint;\n        this.cue = cue;\n        this.nav = nav;\n        this.renderer = renderer;\n        this.context = {};\n        this.drag = new EventEmitter();\n        this.subscriptions = new Subscription();\n    }\n    set enableDrag(enabled) {\n        this.enabled = enabled;\n        this.updateTouchAction();\n    }\n    get hostClass() {\n        return this.enabled;\n    }\n    ngOnInit() {\n        this.subscriptions.add(this.zone.runOutsideAngular(() => this.draggable.kendoPress.pipe(filter(_ => this.enabled), filter(({ originalEvent: { target } }) => target === this.element.nativeElement || skipButtons(target)), tap((e) => {\n            const originalEvent = e.originalEvent;\n            if (!e.isTouch) {\n                originalEvent.preventDefault();\n            }\n            this.nav.navigateTo(originalEvent.target);\n        }), switchMap(preventOnDblClick$1(this.draggable.kendoRelease)), tap((_) => {\n            this.hint.create(this.context.hint);\n            this.cue.create();\n        }), switchMap(down => this.draggable.kendoDrag.pipe(tap((e) => {\n            if (e.isTouch) {\n                e.originalEvent.preventDefault();\n            }\n        }), tap(this.hint.attach()), tap(this.cue.attach()), \n        // eslint-disable-next-line rxjs/no-unsafe-takeuntil\n        takeUntil(this.draggable.kendoRelease), map(move => ({ move, down })))), tap(this.performDrag.bind(this)), switchMapTo(this.draggable.kendoRelease)).subscribe(this.drop.bind(this))));\n    }\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n    }\n    drop(upEvent) {\n        this.hint.remove();\n        this.cue.remove();\n        this.service.notifyDrop(this, upEvent);\n    }\n    performDrag({ move }) {\n        this.hint.move(move);\n        const cursorElement = this.elementUnderCursor(move);\n        if (cursorElement) {\n            this.service.notifyDrag(this, cursorElement, move);\n        }\n        this.drag.emit({\n            draggable: this,\n            mouseEvent: move\n        });\n    }\n    elementUnderCursor(mouseEvent) {\n        this.hint.hide();\n        let target = elementUnderCursor(mouseEvent);\n        if (target && /k-grouping-dropclue/.test(target.className)) {\n            target = hideThenShow(target, elementUnderCursor.bind(this, mouseEvent));\n        }\n        this.hint.show();\n        return target;\n    }\n    updateTouchAction() {\n        if (!this.element) {\n            return;\n        }\n        // eslint-disable-next-line no-unused-expressions\n        this.enabled ? this.renderer.addClass(this.element.nativeElement, 'k-touch-action-none') :\n            this.renderer.removeClass(this.element.nativeElement, 'k-touch-action-none');\n    }\n}\nDraggableColumnDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DraggableColumnDirective, deps: [{ token: i1$1.DraggableDirective, host: true }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: DragAndDropService }, { token: DragHintService }, { token: DropCueService }, { token: NavigationService }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nDraggableColumnDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DraggableColumnDirective, selector: \"[kendoDraggableColumn]\", inputs: { context: \"context\", enableDrag: \"enableDrag\" }, outputs: { drag: \"drag\" }, host: { properties: { \"class.k-grid-draggable-header\": \"this.hostClass\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DraggableColumnDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDraggableColumn]'\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.DraggableDirective, decorators: [{\n                    type: Host\n                }] }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: DragAndDropService }, { type: DragHintService }, { type: DropCueService }, { type: NavigationService }, { type: i0.Renderer2 }]; }, propDecorators: { context: [{\n                type: Input\n            }], enableDrag: [{\n                type: Input\n            }], drag: [{\n                type: Output\n            }], hostClass: [{\n                type: HostBinding,\n                args: ['class.k-grid-draggable-header']\n            }] } });\n\nconst withoutField = ({ field }) => isNullOrEmptyString(field);\nconst alreadyGrouped = ({ groups, field }) => groups.some(group => group.field === field);\nconst overSameTarget = ({ target, field }) => target.field === field;\nconst overLastTarget = ({ target }) => target.lastTarget;\nconst isLastGroup = ({ groups, field }) => groups.map(group => group.field).indexOf(field) === groups.length - 1;\nconst isNotGroupable = (groupsService) => ({ field }) => !groupsService.isGroupable(field);\nconst columnRules = (groupService) => or(withoutField, alreadyGrouped, isNotGroupable(groupService));\nconst indicatorRules = or(overSameTarget, and(overLastTarget, isLastGroup));\n/**\n * @hidden\n */\nclass GroupPanelComponent {\n    constructor(hint, cue, groupInfoService, localization, cd) {\n        this.hint = hint;\n        this.cue = cue;\n        this.groupInfoService = groupInfoService;\n        this.localization = localization;\n        this.cd = cd;\n        this.change = new EventEmitter();\n        this.groups = [];\n        this.dropTargets = new QueryList();\n        this.groupTitles = [];\n        this.subscription = new Subscription();\n    }\n    get groupHeaderClass() {\n        return true;\n    }\n    set text(value) {\n        this.emptyText = value;\n    }\n    get text() {\n        return this.emptyText ? this.emptyText : this.localization.get('groupPanelEmpty');\n    }\n    ngAfterViewInit() {\n        this.subscription.add(observe(this.dropTargets)\n            .subscribe(this.attachTargets.bind(this)));\n    }\n    ngOnInit() {\n        this.subscription.add(this.localization.changes.subscribe(() => this.cd.markForCheck()));\n    }\n    ngDoCheck() {\n        const currentTitles = this.groups.map(group => this.groupInfoService.groupTitle(group));\n        if (currentTitles.length !== this.groupTitles.length || currentTitles.some((current, idx) => current !== this.groupTitles[idx])) {\n            this.groupTitles = currentTitles;\n            this.cd.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        if (this.targetSubscription) {\n            this.targetSubscription.unsubscribe();\n        }\n    }\n    directionChange(group) {\n        const index = this.groups.findIndex(x => x.field === group.field);\n        const groups = [...this.groups.slice(0, index), group, ...this.groups.slice(index + 1)];\n        this.change.emit(groups);\n    }\n    insert(field, index) {\n        const groups = this.groups.filter(x => x.field !== field);\n        if (groups.length || this.groups.length === 0) {\n            this.change.emit([...groups.slice(0, index), { field: field }, ...groups.slice(index)]);\n        }\n    }\n    remove(group) {\n        this.change.emit(this.groups.filter(x => x.field !== group.field));\n    }\n    canDrop(draggable, target) {\n        const isIndicator = draggable.type === 'groupIndicator';\n        const rules = isIndicator\n            ? indicatorRules\n            : columnRules(this.groupInfoService);\n        return !rules({\n            field: draggable.field,\n            groups: this.groups,\n            target\n        });\n    }\n    attachTargets() {\n        if (this.targetSubscription) {\n            this.targetSubscription.unsubscribe();\n        }\n        this.targetSubscription = new Subscription();\n        const enterStream = this.dropTargets\n            .reduce((acc, target) => merge(acc, target.enter), from([]));\n        const leaveStream = this.dropTargets\n            .reduce((acc, target) => merge(acc, target.leave), from([]));\n        const dropStream = this.dropTargets\n            .reduce((acc, target) => merge(acc, target.drop), from([]));\n        this.targetSubscription.add(enterStream.pipe(tap(_ => this.hint.removeLock()), filter(({ draggable, target }) => this.canDrop(draggable.context, target.context)), tap(this.enter.bind(this)), switchMapTo(dropStream.pipe(takeUntil(leaveStream.pipe(tap(this.leave.bind(this))))))).subscribe(this.drop.bind(this)));\n    }\n    enter({ draggable, target }) {\n        this.hint.enable();\n        let before = target.context.lastTarget || isTargetBefore(draggable.element.nativeElement, target.element.nativeElement);\n        if (this.localization.rtl) {\n            before = !before;\n        }\n        this.cue.position(position(target.element.nativeElement, before));\n    }\n    leave() {\n        this.hint.disable();\n        this.cue.hide();\n    }\n    drop({ target, draggable }) {\n        const field = draggable.context.field;\n        const index = this.dropTargets.toArray().indexOf(target);\n        this.insert(field, index);\n    }\n}\nGroupPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupPanelComponent, deps: [{ token: DragHintService }, { token: DropCueService }, { token: GroupInfoService }, { token: i1.LocalizationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nGroupPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: GroupPanelComponent, selector: \"kendo-grid-group-panel\", inputs: { text: \"text\", groups: \"groups\" }, outputs: { change: \"change\" }, host: { properties: { \"class.k-grouping-header\": \"this.groupHeaderClass\", \"class.k-grouping-header-flex\": \"this.groupHeaderClass\" } }, viewQueries: [{ propertyName: \"dropTargets\", predicate: DropTargetDirective, descendants: true }], ngImport: i0, template: `\n        <ng-container *ngIf=\"groups.length === 0\">\n            <div\n                class=\"k-indicator-container\"\n                [context]=\"{\n                    lastTarget: true\n                }\"\n                kendoDropTarget>\n                {{ text }}\n            </div>\n        </ng-container>\n        <div *ngFor=\"let group of groups; let index = index;\"\n            class=\"k-indicator-container\"\n            [context]=\"{\n                field: group.field\n            }\"\n            kendoDropTarget>\n            <div\n                kendoDraggableColumn\n                [enableDrag]=\"true\"\n                [context]=\"{\n                    field: group.field,\n                    type: 'groupIndicator',\n                    hint:  groupTitles[index]\n                }\"\n                kendoGroupIndicator\n                kendoDraggable\n                [group]=\"group\"\n                [groupTitle]=\"groupTitles[index]\"\n                (directionChange)=\"directionChange($event)\"\n                (remove)=\"remove($event)\">\n            </div>\n        </div>\n        <div class=\"k-indicator-container\"\n            *ngIf=\"groups.length !== 0\"\n            [context]=\"{\n                lastTarget: true\n            }\"\n            kendoDropTarget>&nbsp;</div>\n    `, isInline: true, components: [{ type: GroupIndicatorComponent, selector: \"[kendoGroupIndicator]\", inputs: [\"group\", \"groupTitle\"], outputs: [\"directionChange\", \"remove\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DropTargetDirective, selector: \"[kendoDropTarget]\", inputs: [\"context\"], outputs: [\"enter\", \"leave\", \"drop\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DraggableColumnDirective, selector: \"[kendoDraggableColumn]\", inputs: [\"context\", \"enableDrag\"], outputs: [\"drag\"] }, { type: i1$1.DraggableDirective, selector: \"[kendoDraggable]\", inputs: [\"enableDrag\"], outputs: [\"kendoPress\", \"kendoDrag\", \"kendoRelease\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupPanelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    selector: 'kendo-grid-group-panel',\n                    template: `\n        <ng-container *ngIf=\"groups.length === 0\">\n            <div\n                class=\"k-indicator-container\"\n                [context]=\"{\n                    lastTarget: true\n                }\"\n                kendoDropTarget>\n                {{ text }}\n            </div>\n        </ng-container>\n        <div *ngFor=\"let group of groups; let index = index;\"\n            class=\"k-indicator-container\"\n            [context]=\"{\n                field: group.field\n            }\"\n            kendoDropTarget>\n            <div\n                kendoDraggableColumn\n                [enableDrag]=\"true\"\n                [context]=\"{\n                    field: group.field,\n                    type: 'groupIndicator',\n                    hint:  groupTitles[index]\n                }\"\n                kendoGroupIndicator\n                kendoDraggable\n                [group]=\"group\"\n                [groupTitle]=\"groupTitles[index]\"\n                (directionChange)=\"directionChange($event)\"\n                (remove)=\"remove($event)\">\n            </div>\n        </div>\n        <div class=\"k-indicator-container\"\n            *ngIf=\"groups.length !== 0\"\n            [context]=\"{\n                lastTarget: true\n            }\"\n            kendoDropTarget>&nbsp;</div>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: DragHintService }, { type: DropCueService }, { type: GroupInfoService }, { type: i1.LocalizationService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { change: [{\n                type: Output\n            }], groupHeaderClass: [{\n                type: HostBinding,\n                args: [\"class.k-grouping-header\"]\n            }, {\n                type: HostBinding,\n                args: [\"class.k-grouping-header-flex\"]\n            }], text: [{\n                type: Input\n            }], groups: [{\n                type: Input\n            }], dropTargets: [{\n                type: ViewChildren,\n                args: [DropTargetDirective]\n            }] } });\n\n/**\n * @hidden\n */\nclass ColGroupComponent {\n    constructor() {\n        this.columns = [];\n        this.groups = [];\n        this.sort = new Array();\n    }\n    get columnsToRender() {\n        return columnsToRender(this.columns);\n    }\n    trackBy(index, _item) {\n        return index;\n    }\n    isSorted(column) {\n        const state = this.sortDescriptor(column.field);\n        return this.isSortable(column) && (state.dir === 'asc' || state.dir === 'desc');\n    }\n    getColumnComponent(column) {\n        return column;\n    }\n    isSortable(column) {\n        return !isNullOrEmptyString(column.field) && isTruthy(column.sortable);\n    }\n    sortDescriptor(field) {\n        return this.sort.find(item => item.field === field) || { field };\n    }\n}\nColGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColGroupComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nColGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColGroupComponent, selector: \"[kendoGridColGroup]\", inputs: { columns: \"columns\", groups: \"groups\", detailTemplate: \"detailTemplate\", sort: \"sort\" }, ngImport: i0, template: `\n    <ng-container>\n        <col [class.k-group-col]=\"true\" *ngFor=\"let g of groups\" />\n        <col [class.k-hierarchy-col]=\"true\" *ngIf=\"detailTemplate?.templateRef\"/>\n        <col *ngFor=\"let column of columnsToRender; trackBy: trackBy;\"\n        [style.width.px]=\"column.width\"\n        [class.k-sorted]=\"isSorted(getColumnComponent(column))\"/>\n    </ng-container>\n    `, isInline: true, directives: [{ type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColGroupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[kendoGridColGroup]',\n                    template: `\n    <ng-container>\n        <col [class.k-group-col]=\"true\" *ngFor=\"let g of groups\" />\n        <col [class.k-hierarchy-col]=\"true\" *ngIf=\"detailTemplate?.templateRef\"/>\n        <col *ngFor=\"let column of columnsToRender; trackBy: trackBy;\"\n        [style.width.px]=\"column.width\"\n        [class.k-sorted]=\"isSorted(getColumnComponent(column))\"/>\n    </ng-container>\n    `\n                }]\n        }], propDecorators: { columns: [{\n                type: Input\n            }], groups: [{\n                type: Input\n            }], detailTemplate: [{\n                type: Input\n            }], sort: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nconst DEFAULTS = {\n    allowUnsort: true,\n    mode: 'single',\n    showIndexes: true,\n    initialDirection: 'asc',\n    multiSortKey: 'none'\n};\n/**\n * @hidden\n */\nconst normalize = (...settings) => Object.assign({}, DEFAULTS, ...settings);\n\n/**\n * @hidden\n */\nconst hasFilter = (settings, column) => settings.filter !== false && column.field && column.filterable;\n/**\n * @hidden\n */\nconst hasSort = (settings, column) => settings.sort !== false && column.field && column.sortable;\n/**\n * @hidden\n */\nconst hasLock = (settings, column) => settings.lock && column.lockable && !(column.parent && !column.parent.isSpanColumn);\n/**\n * @hidden\n */\nconst hasStick = (settings, column) => settings.stick && column.stickable && !(column.parent && !column.parent.isSpanColumn);\n/**\n * @hidden\n */\nconst hasPosition = (settings, column) => settings.setColumnPosition && (column.stickable || column.lockable) && !(column.parent && !column.parent.isSpanColumn);\n/**\n * @hidden\n */\nconst hasColumnChooser = (settings) => settings.columnChooser !== false;\n/**\n * @hidden\n */\nconst hasAutoSizeColumn = (settings) => settings.autoSizeColumn;\n/**\n* @hidden\n*/\nconst hasAutoSizeAllColumns = (settings) => settings.autoSizeAllColumns;\n/**\n * @hidden\n */\nconst autoSizeColumn = (grid, service, column) => {\n    // eslint-disable-next-line no-unused-expressions\n    column ? grid.autoFitColumn(column) : grid.autoFitColumns();\n    service.close();\n};\n/**\n * @hidden\n */\nconst hasItems = (settings, column) => hasAutoSizeAllColumns(settings) ||\n    hasColumnChooser(settings) ||\n    hasFilter(settings, column) ||\n    hasAutoSizeColumn(settings) ||\n    hasLock(settings, column) ||\n    hasSort(settings, column);\n\nconst localizeOperators$1 = operators => localization => Object.keys(operators).reduce((acc, key) => {\n    acc[operators[key]] = localization.get(key);\n    return acc;\n}, {});\nconst operatorTexts = localizeOperators$1({\n    \"filterEqOperator\": \"eq\",\n    \"filterNotEqOperator\": \"neq\",\n    \"filterGteOperator\": \"gte\",\n    \"filterGtOperator\": \"gt\",\n    \"filterLteOperator\": \"lte\",\n    \"filterLtOperator\": \"lt\",\n    \"filterIsNullOperator\": \"isnull\",\n    \"filterIsNotNullOperator\": \"isnotnull\",\n    \"filterIsEmptyOperator\": \"isempty\",\n    \"filterIsNotEmptyOperator\": \"isnotempty\",\n    \"filterContainsOperator\": \"contains\",\n    \"filterNotContainsOperator\": \"doesnotcontain\",\n    \"filterStartsWithOperator\": \"startswith\",\n    \"filterEndsWithOperator\": \"endswith\",\n    \"filterAfterOrEqualOperator\": \"after-eq\",\n    \"filterAfterOperator\": \"after\",\n    \"filterBeforeOrEqualOperator\": \"before-eq\",\n    \"filterBeforeOperator\": \"before\"\n});\n/**\n * @hidden\n */\nconst toJSON = (xs) => xs.map(x => x.toJSON());\n/**\n * @hidden\n */\nclass FilterOperatorBase {\n    constructor(operator, localization) {\n        this.operator = operator;\n        this.localization = localization;\n        this.messages = operatorTexts(this.localization);\n        this._text = this.messages[this.operator];\n        this.subscription = this.localization.changes.subscribe(this.refreshText.bind(this));\n    }\n    /**\n     * The text that will be displayed in the drop-down list.\n     * @readonly\n     * @type {string}\n     * @memberOf FilterOperatorBase\n     */\n    get text() {\n        return this._text;\n    }\n    set text(value) {\n        this._text = isNullOrEmptyString(value) ? this.messages[this.operator] : value;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    /**\n     * @hidden\n     */\n    toJSON() {\n        return {\n            text: this.text,\n            value: this.operator\n        };\n    }\n    refreshText() {\n        const update = this._text === this.messages[this.operator];\n        this.messages = operatorTexts(this.localization);\n        if (update) {\n            this._text = this.messages[this.operator];\n        }\n    }\n}\nFilterOperatorBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterOperatorBase, deps: [{ token: 'filterOperator' }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nFilterOperatorBase.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FilterOperatorBase, selector: \"kendo-grid-filter-operator-base\", inputs: { text: \"text\" }, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterOperatorBase, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-filter-operator-base',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: ['filterOperator']\n                }] }, { type: i1.LocalizationService }]; }, propDecorators: { text: [{\n                type: Input\n            }] } });\n\nconst insertDefaultFilter = (index, rootFilter, filter) => {\n    rootFilter = (rootFilter || { filters: [], logic: \"and\" });\n    rootFilter.filters[index] = filter;\n    return filter;\n};\n/**\n * @hidden\n */\nconst setFilter = (index, filter, field, defaultOperator) => {\n    if (isPresent(filter) && isPresent(filter.filters) && filter.filters.length > index) {\n        return filter.filters[index];\n    }\n    else {\n        return insertDefaultFilter(index, filter, {\n            field,\n            operator: defaultOperator\n        });\n    }\n};\n/**\n * @hidden\n */\nconst logicOperators = (localization) => [\n    { text: localization.get(\"filterAndLogic\"), value: \"and\" },\n    { text: localization.get(\"filterOrLogic\"), value: \"or\" }\n];\n/**\n * @hidden\n */\nconst flatten = (filter) => {\n    if (isPresent(filter.filters)) {\n        return filter.filters.reduce((acc, curr) => acc.concat(isCompositeFilterDescriptor(curr) ? flatten(curr) : [curr]), []);\n    }\n    return [];\n};\nconst trimFilterByField = (filter, field) => {\n    if (isPresent(filter) && isPresent(filter.filters)) {\n        filter.filters = filter.filters.filter(x => {\n            if (isCompositeFilterDescriptor(x)) {\n                trimFilterByField(x, field);\n                return x.filters.length;\n            }\n            else {\n                return x.field !== field;\n            }\n        });\n    }\n};\n/**\n * @hidden\n */\nconst filtersByField = (filter, field) => flatten(filter || {}).filter(x => x.field === field);\n/**\n * @hidden\n */\nconst filterByField = (filter, field) => {\n    let [currentFilter] = filtersByField(filter, field);\n    return currentFilter;\n};\n/**\n * @hidden\n */\nconst removeFilter = (filter, field) => {\n    trimFilterByField(filter, field);\n    return filter;\n};\n/**\n * @hidden\n */\nconst localizeOperators = operators => localization => Object.keys(operators).map(key => ({\n    text: localization.get(key),\n    value: operators[key]\n}));\n/**\n * An abstract base class for the filter-cell component ([see example]({% slug filter_row %}#toc-custom-filter-row-components)).\n */\nclass BaseFilterCellComponent {\n    constructor(filterService) {\n        this.filterService = filterService;\n        this.operatorList = new QueryList();\n    }\n    get hostClasses() {\n        return true;\n    }\n    get operators() {\n        var _a;\n        return ((_a = this._operators) === null || _a === void 0 ? void 0 : _a.length) ? this._operators : this.defaultOperators;\n    }\n    set operators(values) {\n        this._operators = values;\n    }\n    /**\n     * @hidden\n     */\n    ngAfterContentInit() {\n        this.operationListSubscription = observe(this.operatorList)\n            .pipe(map(q => q.toArray()), map(toJSON))\n            .subscribe(x => {\n            this.operators = x;\n        });\n    }\n    ngOnDestroy() {\n        if (this.operationListSubscription) {\n            this.operationListSubscription.unsubscribe();\n        }\n    }\n    filterByField(field) {\n        return filterByField(this.filter, field);\n    }\n    filtersByField(field) {\n        return filtersByField(this.filter, field);\n    }\n    removeFilter(field) {\n        return removeFilter(this.filter, field);\n    }\n    updateFilter(filter) {\n        const root = this.filter || {\n            filters: [],\n            logic: \"and\"\n        };\n        let [currentFilter] = flatten(root).filter(x => x.field === filter.field);\n        if (!isPresent(currentFilter)) {\n            root.filters.push(filter);\n        }\n        else {\n            Object.assign(currentFilter, filter);\n        }\n        return root;\n    }\n    applyFilter(filter) {\n        this.filterService.filter(filter);\n    }\n}\nBaseFilterCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BaseFilterCellComponent, deps: [{ token: FilterService }], target: i0.ɵɵFactoryTarget.Directive });\nBaseFilterCellComponent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: BaseFilterCellComponent, inputs: { operators: \"operators\" }, host: { properties: { \"class.k-filtercell\": \"this.hostClasses\" } }, queries: [{ propertyName: \"operatorList\", predicate: FilterOperatorBase }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BaseFilterCellComponent, decorators: [{\n            type: Directive,\n            args: [{}]\n        }], ctorParameters: function () { return [{ type: FilterService }]; }, propDecorators: { hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-filtercell']\n            }], operatorList: [{\n                type: ContentChildren,\n                args: [FilterOperatorBase]\n            }], operators: [{\n                type: Input\n            }] } });\n\nconst areDifferent = (a, b) => a.field !== b.field || a.operator !== b.operator || a.value !== b.value;\nconst isChanged = (a, b) => {\n    if (a.length !== b.length) {\n        return true;\n    }\n    for (let idx = 0, len = a.length; idx < len; idx++) {\n        const prev = a[idx];\n        const curr = b[idx];\n        if (isCompositeFilterDescriptor(prev)) {\n            if (diffFilters(prev, curr[idx])) {\n                return true;\n            }\n        }\n        else if (areDifferent(prev, curr)) {\n            return true;\n        }\n    }\n    return false;\n};\nconst copyObject = (obj) => {\n    const result = {};\n    Object.assign(result, obj);\n    if (obj.constructor !== Object) {\n        const proto = obj.constructor.prototype;\n        Object.getOwnPropertyNames(proto).forEach((property) => {\n            if (property !== 'constructor' && proto.hasOwnProperty(property)) {\n                result[property] = obj[property];\n            }\n        });\n    }\n    return result;\n};\nconst cloneFilter = (filter) => copyObject(filter);\n/**\n * @hidden\n */\nconst cloneFilters = (filter) => {\n    if (!filter) {\n        return;\n    }\n    if (isCompositeFilterDescriptor(filter)) {\n        return {\n            filters: cloneFilters(filter.filters),\n            logic: filter.logic\n        };\n    }\n    else if (Array.isArray(filter)) {\n        return filter.map(cloneFilters);\n    }\n    return cloneFilter(filter);\n};\n/**\n * @hidden\n */\nconst diffFilters = (a, b) => {\n    if (isPresent(a) && !isPresent(b)) {\n        return true;\n    }\n    if (!isPresent(a) && isPresent(b)) {\n        return true;\n    }\n    return isPresent(a) && isPresent(b) && isChanged(a.filters, b.filters);\n};\n\n/**\n * @hidden\n */\nclass FilterHostDirective {\n    constructor(host, resolver) {\n        this.host = host;\n        this.resolver = resolver;\n    }\n    ngOnInit() {\n        this.component = this.host.createComponent(this.resolver.resolveComponentFactory(this.componentType()));\n        this.initComponent({\n            column: this.column,\n            filter: this.filter\n        });\n    }\n    ngOnDestroy() {\n        if (this.component) {\n            this.component.destroy();\n            this.component = null;\n        }\n    }\n    ngOnChanges(changes) {\n        if (anyChanged([\"column\", \"filter\"], changes)) {\n            this.initComponent({\n                column: this.column,\n                filter: this.filter\n            });\n        }\n    }\n    initComponent({ column, filter }) {\n        const instance = this.component.instance;\n        instance.column = column;\n        instance.filter = filter;\n    }\n}\nFilterHostDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterHostDirective, deps: [{ token: i0.ViewContainerRef }, { token: i0.ComponentFactoryResolver }], target: i0.ɵɵFactoryTarget.Directive });\nFilterHostDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FilterHostDirective, selector: \"[kendoGridFilterHostBase]\", inputs: { column: \"column\", filter: \"filter\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterHostDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridFilterHostBase]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ComponentFactoryResolver }]; }, propDecorators: { column: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }] } });\n\n// eslint-disable no-access-missing-member\nconst stringOperators$1 = localizeOperators({\n    \"filterEqOperator\": \"eq\",\n    \"filterNotEqOperator\": \"neq\",\n    \"filterContainsOperator\": \"contains\",\n    \"filterNotContainsOperator\": \"doesnotcontain\",\n    \"filterStartsWithOperator\": \"startswith\",\n    \"filterEndsWithOperator\": \"endswith\",\n    \"filterIsNullOperator\": \"isnull\",\n    \"filterIsNotNullOperator\": \"isnotnull\",\n    \"filterIsEmptyOperator\": \"isempty\",\n    \"filterIsNotEmptyOperator\": \"isnotempty\"\n});\n/**\n * Represents a base string filter component.\n */\nclass StringFilterComponent extends BaseFilterCellComponent {\n    constructor(filterService, localization) {\n        super(filterService);\n        this.localization = localization;\n        /**\n         * The default filter operator. Defaults to `contains`.\n         * @type {string}\n         */\n        this.operator = \"contains\";\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n    get currentFilter() {\n        return this.filterByField((this.column || {}).field);\n    }\n    /**\n     * The current filter operator for the associated column field.\n     * @readonly\n     * @type {string}\n     */\n    get currentOperator() {\n        return this.currentFilter ? this.currentFilter.operator : this.operator;\n    }\n    ngOnInit() {\n        this.subscription = this.localization.changes.subscribe(this.localizationChange.bind(this));\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        super.ngOnDestroy();\n    }\n    localizationChange() {\n        this.defaultOperators = stringOperators$1(this.localization);\n        if (this.operatorList.length) {\n            this.operators = toJSON(this.operatorList.toArray());\n        }\n    }\n}\nStringFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: StringFilterComponent, deps: [{ token: FilterService }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Directive });\nStringFilterComponent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: StringFilterComponent, inputs: { column: \"column\", filter: \"filter\", operator: \"operator\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: StringFilterComponent, decorators: [{\n            type: Directive,\n            args: [{}]\n        }], ctorParameters: function () { return [{ type: FilterService }, { type: i1.LocalizationService }]; }, propDecorators: { column: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], operator: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass FilterInputDirective {\n    constructor(valueAccessors, ngZone, element, renderer) {\n        this.element = element;\n        this.renderer = renderer;\n        this.change = new EventEmitter();\n        this.composing = false;\n        this.filterDelay = 500;\n        this.changeRequests = new Subject();\n        this.accessor = valueAccessors[0];\n        ngZone.runOutsideAngular(() => {\n            const unsubscribeStart = renderer.listen(element.nativeElement, 'compositionstart', () => this.composing = true);\n            const unsubscribeEnd = renderer.listen(element.nativeElement, 'compositionend', () => this.composing = false);\n            this.unsubscribeEvents = () => {\n                unsubscribeStart();\n                unsubscribeEnd();\n            };\n        });\n    }\n    set value(value) {\n        this.accessor.writeValue(value);\n    }\n    set disabled(value) {\n        this.accessor.setDisabledState(value);\n    }\n    ngAfterViewInit() {\n        this.addAriaAttributes();\n        this.accessor.registerOnChange(x => this.filterDelay > 0 ?\n            this.changeRequests.next(x) :\n            this.change.emit(x));\n        this.subscribeChanges();\n    }\n    ngOnChanges(changes) {\n        if (isChanged$1('filterDelay', changes)) {\n            this.unsubscribeChanges();\n            this.subscribeChanges();\n        }\n    }\n    ngOnDestroy() {\n        this.unsubscribeChanges();\n        this.unsubscribeEvents();\n    }\n    subscribeChanges() {\n        this.changeRequestsSubscription = this.changeRequests\n            .pipe(debounceTime(this.filterDelay), filter(() => !this.composing))\n            .subscribe(x => this.change.emit(x));\n    }\n    unsubscribeChanges() {\n        if (this.changeRequestsSubscription) {\n            this.changeRequestsSubscription.unsubscribe();\n        }\n    }\n    addAriaAttributes() {\n        const ariaValue = this.columnLabel;\n        if (this.kendoInput && this.kendoInput.focusableId && isDocumentAvailable()) {\n            const focusableElement = this.element.nativeElement.querySelector(`#${this.kendoInput.focusableId}`) ||\n                this.element.nativeElement;\n            this.renderer.setAttribute(focusableElement, 'aria-label', ariaValue);\n        }\n        else {\n            this.renderer.setAttribute(this.element.nativeElement, 'aria-label', ariaValue);\n        }\n    }\n}\nFilterInputDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterInputDirective, deps: [{ token: NG_VALUE_ACCESSOR, self: true }, { token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nFilterInputDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FilterInputDirective, selector: \"[kendoFilterInput]\", inputs: { filterDelay: \"filterDelay\", columnLabel: \"columnLabel\", value: \"value\" }, queries: [{ propertyName: \"kendoInput\", first: true, predicate: KendoInput, descendants: true, static: true }], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterInputDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoFilterInput]'\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALUE_ACCESSOR]\n                }] }, { type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { kendoInput: [{\n                type: ContentChild,\n                args: [KendoInput, { static: true }]\n            }], filterDelay: [{\n                type: Input\n            }], columnLabel: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }] } });\n\nconst EMPTY_VALUE_OPERATORS = new Set(['isnull', 'isnotnull', 'isempty', 'isnotempty']);\nconst isEmptyValueOperator = (operator) => EMPTY_VALUE_OPERATORS.has(operator);\n/**\n * @hidden\n */\nclass FilterInputWrapperComponent extends BaseFilterCellComponent {\n    constructor(filterService) {\n        super(filterService);\n    }\n    get currentFilter() {\n        return this.filterByField(this.column.field);\n    }\n    get currentOperator() {\n        const filter = this.currentFilter;\n        if (!this._operator) {\n            this._operator = filter ? filter.operator : this.defaultOperator;\n        }\n        return this._operator;\n    }\n    set currentOperator(value) {\n        this._operator = value;\n        const emptyValueOperator = isEmptyValueOperator(value);\n        this.filterInputDisabled = emptyValueOperator;\n        if (emptyValueOperator) {\n            this.applyNoValueFilter(value);\n        }\n        else if (!isBlank(value) && isPresent(this.currentFilter)) {\n            this.onChange(this.currentFilter.value);\n        }\n    }\n    get defaultOperator() {\n        if (!isNullOrEmptyString(this._defaultOperator)) {\n            return this._defaultOperator;\n        }\n        else if (this.operators && this.operators.length) {\n            return this.operators[0].value;\n        }\n        return \"eq\";\n    }\n    set defaultOperator(value) {\n        this._defaultOperator = value;\n    }\n    set filterInputDisabled(disabled) {\n        if (!this.input) {\n            return;\n        }\n        this.input.disabled = disabled;\n    }\n    ngAfterContentInit() {\n        if (isPresent(this.input)) {\n            this.changeSubscription = this.input.change.subscribe(this.onChange.bind(this));\n            this.filterInputDisabled = isEmptyValueOperator(this.currentOperator);\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this.changeSubscription) {\n            this.changeSubscription.unsubscribe();\n        }\n    }\n    onChange(value) {\n        if (!isNullOrEmptyString(value) || this.filterByField(this.column.field)) {\n            this.filterChange(isNullOrEmptyString(value) ?\n                this.removeFilter(this.column.field) :\n                this.updateFilter({\n                    field: this.column.field,\n                    operator: this.currentOperator,\n                    value: value\n                }));\n        }\n    }\n    onClear() {\n        this.onChange(null);\n        this.filterInputDisabled = isEmptyValueOperator(this.defaultOperator);\n    }\n    applyNoValueFilter(operator) {\n        this.filterChange(this.updateFilter({\n            field: this.column.field,\n            operator: operator,\n            value: null\n        }));\n    }\n    ngOnChanges(changes) {\n        if (isChanged$1(\"filter\", changes, false)) {\n            this._operator = null;\n            this.filterInputDisabled = isEmptyValueOperator(this.currentOperator);\n        }\n    }\n}\nFilterInputWrapperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterInputWrapperComponent, deps: [{ token: FilterService }], target: i0.ɵɵFactoryTarget.Directive });\nFilterInputWrapperComponent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FilterInputWrapperComponent, inputs: { column: \"column\", filter: \"filter\", defaultOperator: \"defaultOperator\" }, queries: [{ propertyName: \"input\", first: true, predicate: FilterInputDirective, descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterInputWrapperComponent, decorators: [{\n            type: Directive,\n            args: [{}]\n        }], ctorParameters: function () { return [{ type: FilterService }]; }, propDecorators: { column: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], input: [{\n                type: ContentChild,\n                args: [FilterInputDirective, { static: false }]\n            }], defaultOperator: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass FilterMenuDropDownListDirective {\n    constructor(host) {\n        this.host = host;\n        this.keydownHandler = (e) => {\n            if (e.keyCode === Keys.Escape && this.host.isOpen) {\n                e.stopPropagation();\n                this.host.toggle(false);\n            }\n        };\n    }\n    ngAfterViewInit() {\n        const wrapperElement = this.host.wrapper.nativeElement;\n        wrapperElement.setAttribute('aria-label', this.filterMenuDropDownLabel);\n        wrapperElement.addEventListener('keydown', this.keydownHandler, true);\n    }\n    ngOnDestroy() {\n        this.host.wrapper.nativeElement.removeEventListener('keydown', this.keydownHandler);\n    }\n}\nFilterMenuDropDownListDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterMenuDropDownListDirective, deps: [{ token: i1$4.DropDownListComponent }], target: i0.ɵɵFactoryTarget.Directive });\nFilterMenuDropDownListDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FilterMenuDropDownListDirective, selector: \"[kendoFilterMenuDropDown]\", inputs: { filterMenuDropDownLabel: \"filterMenuDropDownLabel\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterMenuDropDownListDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[kendoFilterMenuDropDown]' }]\n        }], ctorParameters: function () { return [{ type: i1$4.DropDownListComponent }]; }, propDecorators: { filterMenuDropDownLabel: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass FilterMenuInputWrapperComponent extends FilterInputWrapperComponent {\n    constructor(localizationService) {\n        super(null);\n        this.localizationService = localizationService;\n    }\n    /**\n     * @hidden\n     */\n    get hostClasses() {\n        return false;\n    }\n    ngAfterViewInit() {\n        if (this.isFirstDropDown && this.filterService && this.filterService.menuTabbingService) {\n            this.filterService.menuTabbingService.firstFocusable = this.firstOperatorDropDown;\n            this.firstOperatorDropDown.focus();\n        }\n    }\n    operatorChange(dataItem) {\n        this.currentOperator = dataItem;\n    }\n    filterChange(filter) {\n        this.applyFilter(filter);\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n    get currentFilter() {\n        return this._currentFilter;\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n    set currentFilter(value) {\n        this._currentFilter = value;\n    }\n    updateFilter(filter) {\n        Object.assign(this.currentFilter, filter);\n        return this.filter;\n    }\n    onChange(value) {\n        this.filterChange(this.updateFilter({\n            field: this.column.field,\n            operator: this.currentOperator,\n            value: value\n        }));\n    }\n    onShiftTab(e) {\n        e.stopImmediatePropagation();\n        if ((!this.menuTabbingService || !this.menuTabbingService.isColumnMenu) && this.isFirstDropDown && this.filterService.menuTabbingService.lastFocusable) {\n            e.preventDefault();\n            this.filterService.menuTabbingService.lastFocusable.focus();\n        }\n    }\n    get filterMenuDropDownLabel() {\n        const localizationMsg = this.localizationService.get('filterMenuOperatorsDropDownLabel') || '';\n        const columnName = this.column ? this.column.title || this.column.field : '';\n        return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n}\nFilterMenuInputWrapperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterMenuInputWrapperComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nFilterMenuInputWrapperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FilterMenuInputWrapperComponent, selector: \"kendo-grid-filter-menu-input-wrapper\", inputs: { filterService: \"filterService\", isFirstDropDown: \"isFirstDropDown\", menuTabbingService: \"menuTabbingService\", currentFilter: \"currentFilter\" }, viewQueries: [{ propertyName: \"firstOperatorDropDown\", first: true, predicate: DropDownListComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n        <kendo-dropdownlist\n            kendoFilterMenuDropDown\n            [filterMenuDropDownLabel]=\"filterMenuDropDownLabel\"\n            [data]=\"operators\"\n            (valueChange)=\"operatorChange($event)\"\n            [value]=\"currentOperator\"\n            [valuePrimitive]=\"true\"\n            textField=\"text\"\n            valueField=\"value\"\n            (keydown.shift.tab)=\"onShiftTab($event)\">\n        </kendo-dropdownlist>\n        <ng-content></ng-content>\n    `, isInline: true, components: [{ type: i1$4.DropDownListComponent, selector: \"kendo-dropdownlist\", inputs: [\"iconClass\", \"loading\", \"data\", \"value\", \"textField\", \"valueField\", \"popupSettings\", \"listHeight\", \"defaultItem\", \"disabled\", \"itemDisabled\", \"readonly\", \"filterable\", \"virtual\", \"ignoreCase\", \"delay\", \"valuePrimitive\", \"tabindex\", \"tabIndex\", \"size\", \"rounded\", \"fillMode\", \"id\"], outputs: [\"valueChange\", \"filterChange\", \"selectionChange\", \"open\", \"opened\", \"close\", \"closed\", \"focus\", \"blur\"], exportAs: [\"kendoDropDownList\"] }], directives: [{ type: FilterMenuDropDownListDirective, selector: \"[kendoFilterMenuDropDown]\", inputs: [\"filterMenuDropDownLabel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterMenuInputWrapperComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-filter-menu-input-wrapper',\n                    template: `\n        <kendo-dropdownlist\n            kendoFilterMenuDropDown\n            [filterMenuDropDownLabel]=\"filterMenuDropDownLabel\"\n            [data]=\"operators\"\n            (valueChange)=\"operatorChange($event)\"\n            [value]=\"currentOperator\"\n            [valuePrimitive]=\"true\"\n            textField=\"text\"\n            valueField=\"value\"\n            (keydown.shift.tab)=\"onShiftTab($event)\">\n        </kendo-dropdownlist>\n        <ng-content></ng-content>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; }, propDecorators: { filterService: [{\n                type: Input\n            }], isFirstDropDown: [{\n                type: Input\n            }], menuTabbingService: [{\n                type: Input\n            }], firstOperatorDropDown: [{\n                type: ViewChild,\n                args: [DropDownListComponent, { static: false }]\n            }], currentFilter: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass StringFilterMenuInputComponent {\n    constructor(localizationService) {\n        this.localizationService = localizationService;\n        this.operators = [];\n    }\n    get columnLabel() {\n        const localizationMsg = this.localizationService.get('filterInputLabel') || '';\n        const columnName = this.column ? this.column.title || this.column.field : '';\n        return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n}\nStringFilterMenuInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: StringFilterMenuInputComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nStringFilterMenuInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: StringFilterMenuInputComponent, selector: \"kendo-grid-string-filter-menu-input\", inputs: { operators: \"operators\", column: \"column\", filter: \"filter\", operator: \"operator\", currentFilter: \"currentFilter\", filterService: \"filterService\", isFirstDropDown: \"isFirstDropDown\", menuTabbingService: \"menuTabbingService\" }, ngImport: i0, template: `\n        <kendo-grid-filter-menu-input-wrapper\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [currentFilter]=\"currentFilter\"\n            [filterService]=\"filterService\"\n            [isFirstDropDown]=\"isFirstDropDown\"\n            [menuTabbingService]=\"menuTabbingService\"\n            >\n            <input\n                kendoTextBox\n                kendoFilterInput\n                [columnLabel]=\"columnLabel\"\n                [filterDelay]=\"0\"\n                [ngModel]=\"currentFilter?.value\" />\n        </kendo-grid-filter-menu-input-wrapper>\n    `, isInline: true, components: [{ type: FilterMenuInputWrapperComponent, selector: \"kendo-grid-filter-menu-input-wrapper\", inputs: [\"filterService\", \"isFirstDropDown\", \"menuTabbingService\", \"currentFilter\"] }], directives: [{ type: i4$1.TextBoxDirective, selector: \"input[kendoTextBox]\", inputs: [\"value\"] }, { type: i4$2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: FilterInputDirective, selector: \"[kendoFilterInput]\", inputs: [\"filterDelay\", \"columnLabel\", \"value\"] }, { type: i4$2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i4$2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: StringFilterMenuInputComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-string-filter-menu-input',\n                    template: `\n        <kendo-grid-filter-menu-input-wrapper\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [currentFilter]=\"currentFilter\"\n            [filterService]=\"filterService\"\n            [isFirstDropDown]=\"isFirstDropDown\"\n            [menuTabbingService]=\"menuTabbingService\"\n            >\n            <input\n                kendoTextBox\n                kendoFilterInput\n                [columnLabel]=\"columnLabel\"\n                [filterDelay]=\"0\"\n                [ngModel]=\"currentFilter?.value\" />\n        </kendo-grid-filter-menu-input-wrapper>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; }, propDecorators: { operators: [{\n                type: Input\n            }], column: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], operator: [{\n                type: Input\n            }], currentFilter: [{\n                type: Input\n            }], filterService: [{\n                type: Input\n            }], isFirstDropDown: [{\n                type: Input\n            }], menuTabbingService: [{\n                type: Input\n            }] } });\n\n/**\n * Represents a string-filter menu component.\n * ([see example]({% slug filter_menu %}#toc-built-in-filter-menu-components)).\n */\nclass StringFilterMenuComponent extends StringFilterComponent {\n    constructor(localization) {\n        super(null, localization);\n        this.logicOperators = logicOperators(this.localization);\n        /**\n         * The current menu filter.\n         * @type {CompositeFilterDescriptor}\n         */\n        this.filter = { filters: [], logic: \"and\" };\n        /**\n         * Determines if the inputs of second criteria will displayed.\n         */\n        this.extra = true;\n    }\n    /**\n     * @hidden\n     */\n    get hostClasses() {\n        return false;\n    }\n    get firstFilter() {\n        return setFilter(0, this.filter, (this.column || {}).field, this.operator);\n    }\n    get secondFilter() {\n        return setFilter(1, this.filter, (this.column || {}).field, this.operator);\n    }\n    logicChange(value) {\n        this.filter.logic = value;\n    }\n    get filterMenuDropDownLabel() {\n        const localizationMsg = this.localization.get('filterMenuLogicDropDownLabel') || '';\n        const columnName = this.column ? this.column.title || this.column.field : '';\n        return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n    localizationChange() {\n        this.logicOperators = logicOperators(this.localization);\n        super.localizationChange();\n    }\n}\nStringFilterMenuComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: StringFilterMenuComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nStringFilterMenuComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: StringFilterMenuComponent, selector: \"kendo-grid-string-filter-menu\", inputs: { column: \"column\", filter: \"filter\", extra: \"extra\", filterService: \"filterService\", menuTabbingService: \"menuTabbingService\" }, host: { properties: { \"class.k-filtercell\": \"this.hostClasses\" } }, usesInheritance: true, ngImport: i0, template: `\n        <kendo-grid-string-filter-menu-input\n            [currentFilter]=\"firstFilter\"\n            [operators]=\"operators\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [isFirstDropDown]=\"true\"\n            [menuTabbingService]=\"menuTabbingService\">\n        </kendo-grid-string-filter-menu-input>\n        <kendo-dropdownlist\n            *ngIf=\"extra\"\n            kendoFilterMenuDropDown\n            [filterMenuDropDownLabel]=\"filterMenuDropDownLabel\"\n            class=\"k-filter-and\"\n            [data]=\"logicOperators\"\n            [valuePrimitive]=\"true\" (valueChange)=\"logicChange($event)\"\n            [value]=\"filter?.logic\"\n            textField=\"text\"\n            valueField=\"value\">\n        </kendo-dropdownlist>\n        <kendo-grid-string-filter-menu-input\n            *ngIf=\"extra\"\n            [operators]=\"operators\"\n            [currentFilter]=\"secondFilter\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [menuTabbingService]=\"menuTabbingService\">\n        </kendo-grid-string-filter-menu-input>\n    `, isInline: true, components: [{ type: StringFilterMenuInputComponent, selector: \"kendo-grid-string-filter-menu-input\", inputs: [\"operators\", \"column\", \"filter\", \"operator\", \"currentFilter\", \"filterService\", \"isFirstDropDown\", \"menuTabbingService\"] }, { type: i1$4.DropDownListComponent, selector: \"kendo-dropdownlist\", inputs: [\"iconClass\", \"loading\", \"data\", \"value\", \"textField\", \"valueField\", \"popupSettings\", \"listHeight\", \"defaultItem\", \"disabled\", \"itemDisabled\", \"readonly\", \"filterable\", \"virtual\", \"ignoreCase\", \"delay\", \"valuePrimitive\", \"tabindex\", \"tabIndex\", \"size\", \"rounded\", \"fillMode\", \"id\"], outputs: [\"valueChange\", \"filterChange\", \"selectionChange\", \"open\", \"opened\", \"close\", \"closed\", \"focus\", \"blur\"], exportAs: [\"kendoDropDownList\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: FilterMenuDropDownListDirective, selector: \"[kendoFilterMenuDropDown]\", inputs: [\"filterMenuDropDownLabel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: StringFilterMenuComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-string-filter-menu',\n                    template: `\n        <kendo-grid-string-filter-menu-input\n            [currentFilter]=\"firstFilter\"\n            [operators]=\"operators\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [isFirstDropDown]=\"true\"\n            [menuTabbingService]=\"menuTabbingService\">\n        </kendo-grid-string-filter-menu-input>\n        <kendo-dropdownlist\n            *ngIf=\"extra\"\n            kendoFilterMenuDropDown\n            [filterMenuDropDownLabel]=\"filterMenuDropDownLabel\"\n            class=\"k-filter-and\"\n            [data]=\"logicOperators\"\n            [valuePrimitive]=\"true\" (valueChange)=\"logicChange($event)\"\n            [value]=\"filter?.logic\"\n            textField=\"text\"\n            valueField=\"value\">\n        </kendo-dropdownlist>\n        <kendo-grid-string-filter-menu-input\n            *ngIf=\"extra\"\n            [operators]=\"operators\"\n            [currentFilter]=\"secondFilter\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [menuTabbingService]=\"menuTabbingService\">\n        </kendo-grid-string-filter-menu-input>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; }, propDecorators: { hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-filtercell']\n            }], column: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], extra: [{\n                type: Input\n            }], filterService: [{\n                type: Input\n            }], menuTabbingService: [{\n                type: Input\n            }] } });\n\n// eslint-disable no-access-missing-member\nconst numericOperators = localizeOperators({\n    \"filterEqOperator\": \"eq\",\n    \"filterNotEqOperator\": \"neq\",\n    \"filterGteOperator\": \"gte\",\n    \"filterGtOperator\": \"gt\",\n    \"filterLteOperator\": \"lte\",\n    \"filterLtOperator\": \"lt\",\n    \"filterIsNullOperator\": \"isnull\",\n    \"filterIsNotNullOperator\": \"isnotnull\"\n});\n/**\n * Represents a base numeric filter component.\n */\nclass NumericFilterComponent extends BaseFilterCellComponent {\n    constructor(filterService, localization) {\n        super(filterService);\n        this.localization = localization;\n        /**\n         * The default filter operator. Defaults to `eq`.\n         * @type {string}\n         */\n        this.operator = \"eq\";\n        /**\n         * Specifies the value that is used to increment or decrement the component value.\n         * @type {numeric}\n         */\n        this.step = 1;\n        /**\n         * Specifies whether the **Up** and **Down** spin buttons will be rendered.\n         * @type {boolean}\n         */\n        this.spinners = true;\n        this.defaultOperators = numericOperators(this.localization);\n    }\n    /**\n     * Specifies the number format used when the component is not focused.\n     * By default, the `column.format` value is used (if set).\n     */\n    set format(value) {\n        this._format = value;\n    }\n    /**\n     * @readonly\n     * @type {string}\n     */\n    get format() {\n        return !isNullOrEmptyString(this._format) ? this._format : this.columnFormat;\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n    get currentFilter() {\n        return this.filterByField(this.column.field);\n    }\n    /**\n     * The current filter operator for the associated column field.\n     * @readonly\n     * @type {string}\n     */\n    get currentOperator() {\n        return this.currentFilter ? this.currentFilter.operator : this.operator;\n    }\n    get columnFormat() {\n        return this.column && !isNullOrEmptyString(this.column.format) ?\n            extractFormat(this.column.format) : \"n2\";\n    }\n    ngOnInit() {\n        this.subscription = this.localization.changes.subscribe(this.localizationChange.bind(this));\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        super.ngOnDestroy();\n    }\n    localizationChange() {\n        this.defaultOperators = numericOperators(this.localization);\n        if (this.operatorList.length) {\n            this.operators = toJSON(this.operatorList.toArray());\n        }\n    }\n}\nNumericFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NumericFilterComponent, deps: [{ token: FilterService }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Directive });\nNumericFilterComponent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: NumericFilterComponent, inputs: { column: \"column\", filter: \"filter\", operator: \"operator\", step: \"step\", min: \"min\", max: \"max\", spinners: \"spinners\", decimals: \"decimals\", format: \"format\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NumericFilterComponent, decorators: [{\n            type: Directive,\n            args: [{}]\n        }], ctorParameters: function () { return [{ type: FilterService }, { type: i1.LocalizationService }]; }, propDecorators: { column: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], operator: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], spinners: [{\n                type: Input\n            }], decimals: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass NumericFilterMenuInputComponent {\n    constructor(localization) {\n        this.localization = localization;\n        this.operators = [];\n        /**\n         * Specifies the value which is used to increment or decrement the component value.\n         * @type {numeric}\n         */\n        this.step = 1;\n        /**\n         * Specifies whether the **Up** and **Down** spin buttons will be rendered.\n         * @type {boolean}\n         */\n        this.spinners = true;\n    }\n    messageFor(key) {\n        return this.localization.get(key);\n    }\n    /**\n     * @hidden\n     */\n    get columnLabel() {\n        const localizationMsg = this.localization.get('filterInputLabel') || '';\n        const columnName = this.column ? this.column.title || this.column.field : '';\n        return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n}\nNumericFilterMenuInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NumericFilterMenuInputComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nNumericFilterMenuInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: NumericFilterMenuInputComponent, selector: \"kendo-grid-numeric-filter-menu-input\", inputs: { operators: \"operators\", column: \"column\", filter: \"filter\", operator: \"operator\", currentFilter: \"currentFilter\", filterService: \"filterService\", filterDelay: \"filterDelay\", isFirstDropDown: \"isFirstDropDown\", menuTabbingService: \"menuTabbingService\", step: \"step\", min: \"min\", max: \"max\", spinners: \"spinners\", decimals: \"decimals\", format: \"format\" }, ngImport: i0, template: `\n        <kendo-grid-filter-menu-input-wrapper\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [currentFilter]=\"currentFilter\"\n            [filterService]=\"filterService\"\n            [isFirstDropDown]=\"isFirstDropDown\"\n            [menuTabbingService]=\"menuTabbingService\"\n        >\n            <kendo-numerictextbox\n                kendoFilterInput\n                [columnLabel]=\"columnLabel\"\n                [filterDelay]=\"filterDelay\"\n                [autoCorrect]=\"true\"\n                [value]=\"currentFilter?.value\"\n                [format]=\"format\"\n                [decimals]=\"decimals\"\n                [spinners]=\"spinners\"\n                [min]=\"min\"\n                [max]=\"max\"\n                [step]=\"step\"\n            >\n                <kendo-numerictextbox-messages\n                    [increment]=\"messageFor('filterNumericIncrement')\"\n                    [decrement]=\"messageFor('filterNumericDecrement')\"\n                >\n                </kendo-numerictextbox-messages>\n            </kendo-numerictextbox>\n        </kendo-grid-filter-menu-input-wrapper>\n    `, isInline: true, components: [{ type: FilterMenuInputWrapperComponent, selector: \"kendo-grid-filter-menu-input-wrapper\", inputs: [\"filterService\", \"isFirstDropDown\", \"menuTabbingService\", \"currentFilter\"] }, { type: i4$1.NumericTextBoxComponent, selector: \"kendo-numerictextbox\", inputs: [\"focusableId\", \"disabled\", \"readonly\", \"title\", \"autoCorrect\", \"format\", \"max\", \"min\", \"decimals\", \"placeholder\", \"step\", \"spinners\", \"rangeValidation\", \"tabindex\", \"tabIndex\", \"changeValueOnScroll\", \"selectOnFocus\", \"value\", \"maxlength\", \"size\", \"rounded\", \"fillMode\"], outputs: [\"valueChange\", \"focus\", \"blur\"], exportAs: [\"kendoNumericTextBox\"] }, { type: i4$1.NumericTextBoxCustomMessagesComponent, selector: \"kendo-numerictextbox-messages\" }], directives: [{ type: FilterInputDirective, selector: \"[kendoFilterInput]\", inputs: [\"filterDelay\", \"columnLabel\", \"value\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NumericFilterMenuInputComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-numeric-filter-menu-input',\n                    template: `\n        <kendo-grid-filter-menu-input-wrapper\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [currentFilter]=\"currentFilter\"\n            [filterService]=\"filterService\"\n            [isFirstDropDown]=\"isFirstDropDown\"\n            [menuTabbingService]=\"menuTabbingService\"\n        >\n            <kendo-numerictextbox\n                kendoFilterInput\n                [columnLabel]=\"columnLabel\"\n                [filterDelay]=\"filterDelay\"\n                [autoCorrect]=\"true\"\n                [value]=\"currentFilter?.value\"\n                [format]=\"format\"\n                [decimals]=\"decimals\"\n                [spinners]=\"spinners\"\n                [min]=\"min\"\n                [max]=\"max\"\n                [step]=\"step\"\n            >\n                <kendo-numerictextbox-messages\n                    [increment]=\"messageFor('filterNumericIncrement')\"\n                    [decrement]=\"messageFor('filterNumericDecrement')\"\n                >\n                </kendo-numerictextbox-messages>\n            </kendo-numerictextbox>\n        </kendo-grid-filter-menu-input-wrapper>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; }, propDecorators: { operators: [{\n                type: Input\n            }], column: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], operator: [{\n                type: Input\n            }], currentFilter: [{\n                type: Input\n            }], filterService: [{\n                type: Input\n            }], filterDelay: [{\n                type: Input\n            }], isFirstDropDown: [{\n                type: Input\n            }], menuTabbingService: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], spinners: [{\n                type: Input\n            }], decimals: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }] } });\n\n/**\n * Represents a numeric-filter menu component.\n *\n * @example\n *  ```html-no-run\n *      <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\">\n *          <ng-template kendoGridFilterMenuTemplate let-filter let-column=\"column\" let-filterService=\"filterService\">\n *          <kendo-grid-numeric-filter-menu\n *              [column]=\"column\"\n *              [filter]=\"filter\"\n *              [filterService]=\"filterService\"\n *              >\n *          </kendo-grid-numeric-filter-menu>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\nclass NumericFilterMenuComponent extends NumericFilterComponent {\n    constructor(localization) {\n        super(null, localization);\n        this.logicOperators = logicOperators(this.localization);\n        /**\n         * The current menu filter.\n         * @type {CompositeFilterDescriptor}\n         */\n        this.filter = { filters: [], logic: \"and\" };\n        /**\n         * Determines if the inputs of second criteria will displayed.\n         */\n        this.extra = true;\n        /**\n         * Determines the delay (in milliseconds) before creating a filter descriptor based on the value. A value of 0 indicates no delay. The default value is 500.\n         *\n         * @default 500\n         */\n        this.filterDelay = 500;\n    }\n    /**\n     * @hidden\n     */\n    get hostClasses() {\n        return false;\n    }\n    get firstFilter() {\n        return setFilter(0, this.filter, (this.column || {}).field, this.operator);\n    }\n    get secondFilter() {\n        return setFilter(1, this.filter, (this.column || {}).field, this.operator);\n    }\n    logicChange(value) {\n        this.filter.logic = value;\n    }\n    get filterMenuDropDownLabel() {\n        const localizationMsg = this.localization.get('filterMenuLogicDropDownLabel') || '';\n        const columnName = this.column ? this.column.title || this.column.field : '';\n        return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n    localizationChange() {\n        this.logicOperators = logicOperators(this.localization);\n        super.localizationChange();\n    }\n}\nNumericFilterMenuComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NumericFilterMenuComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nNumericFilterMenuComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: NumericFilterMenuComponent, selector: \"kendo-grid-numeric-filter-menu\", inputs: { column: \"column\", filter: \"filter\", extra: \"extra\", filterService: \"filterService\", filterDelay: \"filterDelay\", menuTabbingService: \"menuTabbingService\" }, host: { properties: { \"class.k-filtercell\": \"this.hostClasses\" } }, usesInheritance: true, ngImport: i0, template: `\n        <kendo-grid-numeric-filter-menu-input\n            [currentFilter]=\"firstFilter\"\n            [operators]=\"operators\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [filterDelay]=\"filterDelay\"\n            [format]=\"format\"\n            [decimals]=\"decimals\"\n            [spinners]=\"spinners\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [step]=\"step\"\n            [menuTabbingService]=\"menuTabbingService\"\n            [isFirstDropDown]=\"true\"\n            >\n        </kendo-grid-numeric-filter-menu-input>\n        <kendo-dropdownlist\n            *ngIf=\"extra\"\n            kendoFilterMenuDropDown\n            [filterMenuDropDownLabel]=\"filterMenuDropDownLabel\"\n            class=\"k-filter-and\"\n            [data]=\"logicOperators\"\n            [valuePrimitive]=\"true\"\n            (valueChange)=\"logicChange($event)\"\n            [value]=\"filter?.logic\"\n            textField=\"text\"\n            valueField=\"value\">\n        </kendo-dropdownlist>\n        <kendo-grid-numeric-filter-menu-input\n            *ngIf=\"extra\"\n            [operators]=\"operators\"\n            [currentFilter]=\"secondFilter\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [format]=\"format\"\n            [decimals]=\"decimals\"\n            [spinners]=\"spinners\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [step]=\"step\"\n            [menuTabbingService]=\"menuTabbingService\"\n            >\n        </kendo-grid-numeric-filter-menu-input>\n    `, isInline: true, components: [{ type: NumericFilterMenuInputComponent, selector: \"kendo-grid-numeric-filter-menu-input\", inputs: [\"operators\", \"column\", \"filter\", \"operator\", \"currentFilter\", \"filterService\", \"filterDelay\", \"isFirstDropDown\", \"menuTabbingService\", \"step\", \"min\", \"max\", \"spinners\", \"decimals\", \"format\"] }, { type: i1$4.DropDownListComponent, selector: \"kendo-dropdownlist\", inputs: [\"iconClass\", \"loading\", \"data\", \"value\", \"textField\", \"valueField\", \"popupSettings\", \"listHeight\", \"defaultItem\", \"disabled\", \"itemDisabled\", \"readonly\", \"filterable\", \"virtual\", \"ignoreCase\", \"delay\", \"valuePrimitive\", \"tabindex\", \"tabIndex\", \"size\", \"rounded\", \"fillMode\", \"id\"], outputs: [\"valueChange\", \"filterChange\", \"selectionChange\", \"open\", \"opened\", \"close\", \"closed\", \"focus\", \"blur\"], exportAs: [\"kendoDropDownList\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: FilterMenuDropDownListDirective, selector: \"[kendoFilterMenuDropDown]\", inputs: [\"filterMenuDropDownLabel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NumericFilterMenuComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-numeric-filter-menu',\n                    template: `\n        <kendo-grid-numeric-filter-menu-input\n            [currentFilter]=\"firstFilter\"\n            [operators]=\"operators\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [filterDelay]=\"filterDelay\"\n            [format]=\"format\"\n            [decimals]=\"decimals\"\n            [spinners]=\"spinners\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [step]=\"step\"\n            [menuTabbingService]=\"menuTabbingService\"\n            [isFirstDropDown]=\"true\"\n            >\n        </kendo-grid-numeric-filter-menu-input>\n        <kendo-dropdownlist\n            *ngIf=\"extra\"\n            kendoFilterMenuDropDown\n            [filterMenuDropDownLabel]=\"filterMenuDropDownLabel\"\n            class=\"k-filter-and\"\n            [data]=\"logicOperators\"\n            [valuePrimitive]=\"true\"\n            (valueChange)=\"logicChange($event)\"\n            [value]=\"filter?.logic\"\n            textField=\"text\"\n            valueField=\"value\">\n        </kendo-dropdownlist>\n        <kendo-grid-numeric-filter-menu-input\n            *ngIf=\"extra\"\n            [operators]=\"operators\"\n            [currentFilter]=\"secondFilter\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [format]=\"format\"\n            [decimals]=\"decimals\"\n            [spinners]=\"spinners\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [step]=\"step\"\n            [menuTabbingService]=\"menuTabbingService\"\n            >\n        </kendo-grid-numeric-filter-menu-input>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; }, propDecorators: { hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-filtercell']\n            }], column: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], extra: [{\n                type: Input\n            }], filterService: [{\n                type: Input\n            }], filterDelay: [{\n                type: Input\n            }], menuTabbingService: [{\n                type: Input\n            }] } });\n\n// eslint-disable no-access-missing-member\nconst dateOperators = localizeOperators({\n    \"filterEqOperator\": \"eq\",\n    \"filterNotEqOperator\": \"neq\",\n    \"filterAfterOrEqualOperator\": \"gte\",\n    \"filterAfterOperator\": \"gt\",\n    \"filterBeforeOrEqualOperator\": \"lte\",\n    \"filterBeforeOperator\": \"lt\",\n    \"filterIsNullOperator\": \"isnull\",\n    \"filterIsNotNullOperator\": \"isnotnull\"\n});\n/**\n * @hidden\n */\nclass DateFilterComponent extends BaseFilterCellComponent {\n    constructor(filterService, localization) {\n        super(filterService);\n        this.localization = localization;\n        /**\n         * The default filter operator. Defaults to `contains`.\n         * @type {string}\n         */\n        this.operator = \"gte\";\n        /**\n         * Defines the active view that the calendar initially renders.\n         * By default, the active view is `month`.\n         *\n         * > You have to set `activeView` within the `topView`-`bottomView` range.\n         */\n        this.activeView = \"month\";\n        /**\n         * Defines the bottommost calendar view, to which the user can navigate.\n         */\n        this.bottomView = \"month\";\n        /**\n         * Defines the topmost calendar view, to which the user can navigate.\n         */\n        this.topView = \"century\";\n        /**\n         * Determines whether to display a week number column in the `month` view of the Calendar.\n         */\n        this.weekNumber = false;\n        this.defaultOperators = dateOperators(this.localization);\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n    get currentFilter() {\n        return this.filterByField(this.column.field);\n    }\n    /**\n     * Specifies the date format that is used when the component is not focused.\n     * By default, the `column.format` value is used (if set).\n     */\n    set format(value) {\n        this._format = value;\n    }\n    /**\n     * Specifies the date format that is used when the component is not focused.\n     * By default, the `column.format` value is used (if set).\n     *\n     * @readonly\n     * @type {string}\n     */\n    get format() {\n        return !isNullOrEmptyString(this._format) ? this._format : this.columnFormat;\n    }\n    get columnFormat() {\n        return this.column && !isNullOrEmptyString(this.column.format) ?\n            extractFormat(this.column.format) : \"d\";\n    }\n    /**\n     * The current filter operator for the associated column field.\n     * @readonly\n     * @type {string}\n     */\n    get currentOperator() {\n        return this.currentFilter ? this.currentFilter.operator : this.operator;\n    }\n    ngOnInit() {\n        this.subscription = this.localization.changes.subscribe(this.localizationChange.bind(this));\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        super.ngOnDestroy();\n    }\n    localizationChange() {\n        this.defaultOperators = dateOperators(this.localization);\n        if (this.operatorList.length) {\n            this.operators = toJSON(this.operatorList.toArray());\n        }\n    }\n}\nDateFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DateFilterComponent, deps: [{ token: FilterService }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nDateFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DateFilterComponent, selector: \"kendo-grid-date-filter-base\", inputs: { column: \"column\", filter: \"filter\", operator: \"operator\", format: \"format\", min: \"min\", max: \"max\", formatPlaceholder: \"formatPlaceholder\", placeholder: \"placeholder\", activeView: \"activeView\", bottomView: \"bottomView\", topView: \"topView\", weekNumber: \"weekNumber\" }, usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DateFilterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-date-filter-base',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: FilterService }, { type: i1.LocalizationService }]; }, propDecorators: { column: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], operator: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], formatPlaceholder: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], activeView: [{\n                type: Input\n            }], bottomView: [{\n                type: Input\n            }], topView: [{\n                type: Input\n            }], weekNumber: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass DateFilterMenuInputComponent {\n    constructor(popupService, localizationService) {\n        this.popupService = popupService;\n        this.localizationService = localizationService;\n        this.operators = [];\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    open(picker) {\n        this.subscription = this.popupService.onClose\n            .pipe(filter(() => picker.isActive))\n            .subscribe(e => e.preventDefault());\n    }\n    messageFor(key) {\n        return this.localizationService.get(key);\n    }\n    get columnLabel() {\n        const localizationMsg = this.localizationService.get('filterInputLabel') || '';\n        const columnName = this.column ? this.column.title || this.column.field : '';\n        return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n}\nDateFilterMenuInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DateFilterMenuInputComponent, deps: [{ token: SinglePopupService }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nDateFilterMenuInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DateFilterMenuInputComponent, selector: \"kendo-grid-date-filter-menu-input\", inputs: { operators: \"operators\", column: \"column\", filter: \"filter\", operator: \"operator\", currentFilter: \"currentFilter\", filterService: \"filterService\", menuTabbingService: \"menuTabbingService\", format: \"format\", formatPlaceholder: \"formatPlaceholder\", placeholder: \"placeholder\", min: \"min\", max: \"max\", activeView: \"activeView\", bottomView: \"bottomView\", topView: \"topView\", weekNumber: \"weekNumber\", isFirstDropDown: \"isFirstDropDown\" }, ngImport: i0, template: `\n        <kendo-grid-filter-menu-input-wrapper\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [currentFilter]=\"currentFilter\"\n            [filterService]=\"filterService\"\n            [isFirstDropDown]=\"isFirstDropDown\"\n            [menuTabbingService]=\"menuTabbingService\"\n        >\n            <kendo-datepicker\n                #picker\n                kendoFilterInput\n                [columnLabel]=\"columnLabel\"\n                [filterDelay]=\"0\"\n                (open)=\"open(picker)\"\n                [value]=\"currentFilter?.value\"\n                [placeholder]=\"placeholder\"\n                [formatPlaceholder]=\"formatPlaceholder\"\n                [format]=\"format\"\n                [min]=\"min\"\n                [max]=\"max\"\n                [activeView]=\"activeView\"\n                [bottomView]=\"bottomView\"\n                [topView]=\"topView\"\n                [weekNumber]=\"weekNumber\"\n            >\n                <kendo-datepicker-messages\n                    [toggle]=\"messageFor('filterDateToggle')\"\n                    [today]=\"messageFor('filterDateToday')\"\n                >\n                </kendo-datepicker-messages>\n            </kendo-datepicker>\n        </kendo-grid-filter-menu-input-wrapper>\n    `, isInline: true, components: [{ type: FilterMenuInputWrapperComponent, selector: \"kendo-grid-filter-menu-input-wrapper\", inputs: [\"filterService\", \"isFirstDropDown\", \"menuTabbingService\", \"currentFilter\"] }, { type: i4$3.DatePickerComponent, selector: \"kendo-datepicker\", inputs: [\"cellTemplate\", \"monthCellTemplate\", \"yearCellTemplate\", \"decadeCellTemplate\", \"centuryCellTemplate\", \"weekNumberTemplate\", \"headerTitleTemplate\", \"navigationItemTemplate\", \"activeView\", \"bottomView\", \"topView\", \"calendarType\", \"animateCalendarNavigation\", \"disabled\", \"readonly\", \"readOnlyInput\", \"popupSettings\", \"navigation\", \"min\", \"max\", \"incompleteDateValidation\", \"focusedDate\", \"value\", \"format\", \"twoDigitYearMax\", \"formatPlaceholder\", \"placeholder\", \"tabindex\", \"tabIndex\", \"disabledDates\", \"title\", \"rangeValidation\", \"disabledDatesValidation\", \"weekNumber\", \"size\", \"rounded\", \"fillMode\"], outputs: [\"valueChange\", \"focus\", \"blur\", \"open\", \"close\"], exportAs: [\"kendo-datepicker\"] }, { type: i4$3.DatePickerCustomMessagesComponent, selector: \"kendo-datepicker-messages\" }], directives: [{ type: FilterInputDirective, selector: \"[kendoFilterInput]\", inputs: [\"filterDelay\", \"columnLabel\", \"value\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DateFilterMenuInputComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-date-filter-menu-input',\n                    template: `\n        <kendo-grid-filter-menu-input-wrapper\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [currentFilter]=\"currentFilter\"\n            [filterService]=\"filterService\"\n            [isFirstDropDown]=\"isFirstDropDown\"\n            [menuTabbingService]=\"menuTabbingService\"\n        >\n            <kendo-datepicker\n                #picker\n                kendoFilterInput\n                [columnLabel]=\"columnLabel\"\n                [filterDelay]=\"0\"\n                (open)=\"open(picker)\"\n                [value]=\"currentFilter?.value\"\n                [placeholder]=\"placeholder\"\n                [formatPlaceholder]=\"formatPlaceholder\"\n                [format]=\"format\"\n                [min]=\"min\"\n                [max]=\"max\"\n                [activeView]=\"activeView\"\n                [bottomView]=\"bottomView\"\n                [topView]=\"topView\"\n                [weekNumber]=\"weekNumber\"\n            >\n                <kendo-datepicker-messages\n                    [toggle]=\"messageFor('filterDateToggle')\"\n                    [today]=\"messageFor('filterDateToday')\"\n                >\n                </kendo-datepicker-messages>\n            </kendo-datepicker>\n        </kendo-grid-filter-menu-input-wrapper>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: SinglePopupService }, { type: i1.LocalizationService }]; }, propDecorators: { operators: [{\n                type: Input\n            }], column: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], operator: [{\n                type: Input\n            }], currentFilter: [{\n                type: Input\n            }], filterService: [{\n                type: Input\n            }], menuTabbingService: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], formatPlaceholder: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], activeView: [{\n                type: Input\n            }], bottomView: [{\n                type: Input\n            }], topView: [{\n                type: Input\n            }], weekNumber: [{\n                type: Input\n            }], isFirstDropDown: [{\n                type: Input\n            }] } });\n\n/**\n * Represents a date-filter menu component.\n *\n * @example\n *  ```html-no-run\n *      <kendo-grid-column field=\"OrderDate\" title=\"Order Date\">\n *          <ng-template kendoGridFilterMenuTemplate let-filter let-column=\"column\" let-filterService=\"filterService\">\n *            <kendo-grid-date-filter-menu\n *                [column]=\"column\"\n *                [filter]=\"filter\"\n *                [filterService]=\"filterService\"\n *                >\n *            </kendo-grid-date-filter-menu>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\nclass DateFilterMenuComponent extends DateFilterComponent {\n    constructor(localization) {\n        super(null, localization);\n        this.logicOperators = logicOperators(this.localization);\n        /**\n         * The current menu filter.\n         * @type {CompositeFilterDescriptor}\n         */\n        this.filter = { filters: [], logic: \"and\" };\n        /**\n         * Determines if the inputs of second criteria will be displayed.\n         */\n        this.extra = true;\n    }\n    /**\n     * @hidden\n     */\n    get hostClasses() {\n        return false;\n    }\n    get firstFilter() {\n        return setFilter(0, this.filter, (this.column || {}).field, this.operator);\n    }\n    get secondFilter() {\n        return setFilter(1, this.filter, (this.column || {}).field, this.operator);\n    }\n    logicChange(value) {\n        this.filter.logic = value;\n    }\n    get filterMenuDropDownLabel() {\n        const localizationMsg = this.localization.get('filterMenuLogicDropDownLabel') || '';\n        const columnName = this.column ? this.column.title || this.column.field : '';\n        return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n    localizationChange() {\n        this.logicOperators = logicOperators(this.localization);\n        super.localizationChange();\n    }\n}\nDateFilterMenuComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DateFilterMenuComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nDateFilterMenuComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DateFilterMenuComponent, selector: \"kendo-grid-date-filter-menu\", inputs: { column: \"column\", filter: \"filter\", extra: \"extra\", filterService: \"filterService\", menuTabbingService: \"menuTabbingService\" }, host: { properties: { \"class.k-filtercell\": \"this.hostClasses\" } }, usesInheritance: true, ngImport: i0, template: `\n        <kendo-grid-date-filter-menu-input\n            [currentFilter]=\"firstFilter\"\n            [operators]=\"operators\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [activeView]=\"activeView\"\n            [bottomView]=\"bottomView\"\n            [topView]=\"topView\"\n            [format]=\"format\"\n            [formatPlaceholder]=\"formatPlaceholder\"\n            [placeholder]=\"placeholder\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [weekNumber]=\"weekNumber\"\n            [isFirstDropDown]=\"true\"\n            [menuTabbingService]=\"menuTabbingService\"\n            >\n        </kendo-grid-date-filter-menu-input>\n        <kendo-dropdownlist\n            *ngIf=\"extra\"\n            kendoFilterMenuDropDown\n            [filterMenuDropDownLabel]=\"filterMenuDropDownLabel\"\n            class=\"k-filter-and\"\n            [data]=\"logicOperators\"\n            [valuePrimitive]=\"true\"\n            (valueChange)=\"logicChange($event)\"\n            [value]=\"filter?.logic\"\n            textField=\"text\"\n            valueField=\"value\">\n        </kendo-dropdownlist>\n        <kendo-grid-date-filter-menu-input\n            *ngIf=\"extra\"\n            [operators]=\"operators\"\n            [currentFilter]=\"secondFilter\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [activeView]=\"activeView\"\n            [bottomView]=\"bottomView\"\n            [topView]=\"topView\"\n            [format]=\"format\"\n            [formatPlaceholder]=\"formatPlaceholder\"\n            [placeholder]=\"placeholder\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [weekNumber]=\"weekNumber\"\n            [menuTabbingService]=\"menuTabbingService\"\n            >\n        </kendo-grid-date-filter-menu-input>\n    `, isInline: true, components: [{ type: DateFilterMenuInputComponent, selector: \"kendo-grid-date-filter-menu-input\", inputs: [\"operators\", \"column\", \"filter\", \"operator\", \"currentFilter\", \"filterService\", \"menuTabbingService\", \"format\", \"formatPlaceholder\", \"placeholder\", \"min\", \"max\", \"activeView\", \"bottomView\", \"topView\", \"weekNumber\", \"isFirstDropDown\"] }, { type: i1$4.DropDownListComponent, selector: \"kendo-dropdownlist\", inputs: [\"iconClass\", \"loading\", \"data\", \"value\", \"textField\", \"valueField\", \"popupSettings\", \"listHeight\", \"defaultItem\", \"disabled\", \"itemDisabled\", \"readonly\", \"filterable\", \"virtual\", \"ignoreCase\", \"delay\", \"valuePrimitive\", \"tabindex\", \"tabIndex\", \"size\", \"rounded\", \"fillMode\", \"id\"], outputs: [\"valueChange\", \"filterChange\", \"selectionChange\", \"open\", \"opened\", \"close\", \"closed\", \"focus\", \"blur\"], exportAs: [\"kendoDropDownList\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: FilterMenuDropDownListDirective, selector: \"[kendoFilterMenuDropDown]\", inputs: [\"filterMenuDropDownLabel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DateFilterMenuComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-date-filter-menu',\n                    template: `\n        <kendo-grid-date-filter-menu-input\n            [currentFilter]=\"firstFilter\"\n            [operators]=\"operators\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [activeView]=\"activeView\"\n            [bottomView]=\"bottomView\"\n            [topView]=\"topView\"\n            [format]=\"format\"\n            [formatPlaceholder]=\"formatPlaceholder\"\n            [placeholder]=\"placeholder\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [weekNumber]=\"weekNumber\"\n            [isFirstDropDown]=\"true\"\n            [menuTabbingService]=\"menuTabbingService\"\n            >\n        </kendo-grid-date-filter-menu-input>\n        <kendo-dropdownlist\n            *ngIf=\"extra\"\n            kendoFilterMenuDropDown\n            [filterMenuDropDownLabel]=\"filterMenuDropDownLabel\"\n            class=\"k-filter-and\"\n            [data]=\"logicOperators\"\n            [valuePrimitive]=\"true\"\n            (valueChange)=\"logicChange($event)\"\n            [value]=\"filter?.logic\"\n            textField=\"text\"\n            valueField=\"value\">\n        </kendo-dropdownlist>\n        <kendo-grid-date-filter-menu-input\n            *ngIf=\"extra\"\n            [operators]=\"operators\"\n            [currentFilter]=\"secondFilter\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [activeView]=\"activeView\"\n            [bottomView]=\"bottomView\"\n            [topView]=\"topView\"\n            [format]=\"format\"\n            [formatPlaceholder]=\"formatPlaceholder\"\n            [placeholder]=\"placeholder\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [weekNumber]=\"weekNumber\"\n            [menuTabbingService]=\"menuTabbingService\"\n            >\n        </kendo-grid-date-filter-menu-input>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; }, propDecorators: { hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-filtercell']\n            }], column: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], extra: [{\n                type: Input\n            }], filterService: [{\n                type: Input\n            }], menuTabbingService: [{\n                type: Input\n            }] } });\n\n// eslint-disable no-access-missing-member\n/**\n * @hidden\n */\nclass BooleanFilterComponent extends BaseFilterCellComponent {\n    constructor(filterService, localization) {\n        super(filterService);\n        this.localization = localization;\n        /**\n         * @hidden\n         */\n        this.operator = \"eq\";\n        /**\n         * @hidden\n         */\n        this.items = [\n            { text: this.localization.get(\"filterIsTrue\"), value: true },\n            { text: this.localization.get(\"filterIsFalse\"), value: false }\n        ];\n        /**\n         * @hidden\n         */\n        this.defaultItem = { text: this.localization.get(\"filterBooleanAll\"), value: null };\n    }\n    /**\n     * @hidden\n     */\n    get hostClasses() {\n        return true;\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n    get currentFilter() {\n        return this.filterByField(this.column.field);\n    }\n    /**\n     * The current filter operator for the associated column field.\n     * @readonly\n     * @type {string}\n     */\n    get currentOperator() {\n        return this.currentFilter ? this.currentFilter.operator : this.operator;\n    }\n    ngOnInit() {\n        this.subscription = this.localization.changes.subscribe(this.localizationChange.bind(this));\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        super.ngOnDestroy();\n    }\n    localizationChange() {\n        this.items = [\n            { text: this.localization.get(\"filterIsTrue\"), value: true },\n            { text: this.localization.get(\"filterIsFalse\"), value: false }\n        ];\n        this.defaultItem = { text: this.localization.get(\"filterBooleanAll\"), value: null };\n    }\n}\nBooleanFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BooleanFilterComponent, deps: [{ token: FilterService }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nBooleanFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: BooleanFilterComponent, selector: \"kendo-grid-boolean-filter-base\", inputs: { column: \"column\", filter: \"filter\" }, host: { properties: { \"class.k-filtercell-boolean\": \"this.hostClasses\" } }, usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BooleanFilterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-boolean-filter-base',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: FilterService }, { type: i1.LocalizationService }]; }, propDecorators: { hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-filtercell-boolean']\n            }], column: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass BooleanFilterRadioButtonDirective {\n    constructor(hostElement, renderer) {\n        this.hostElement = hostElement;\n        this.renderer = renderer;\n    }\n    ngAfterViewInit() {\n        this.radioButtonEl = this.hostElement.nativeElement;\n        this.renderer.setAttribute(this.hostElement.nativeElement, 'aria-label', this.columnLabel);\n    }\n}\nBooleanFilterRadioButtonDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BooleanFilterRadioButtonDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nBooleanFilterRadioButtonDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: BooleanFilterRadioButtonDirective, selector: \"[kendoFilterMenuRadioButton]\", inputs: { columnLabel: \"columnLabel\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BooleanFilterRadioButtonDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[kendoFilterMenuRadioButton]' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { columnLabel: [{\n                type: Input\n            }] } });\n\n/**\n * Represents a Boolean-filter menu component.\n *\n * @example\n *  ```html-no-run\n *      <kendo-grid-column field=\"Discontinued\" title=\"Discontinued\">\n *          <ng-template kendoGridFilterMenuTemplate let-filter let-column=\"column\" let-filterService=\"filterService\">\n *            <kendo-grid-boolean-filter-menu\n *                [column]=\"column\"\n *                [filter]=\"filter\"\n *                [filterService]=\"filterService\"\n *                >\n *            </kendo-grid-boolean-filter-menu>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\nclass BooleanFilterMenuComponent extends BooleanFilterComponent {\n    constructor(localization) {\n        super(null, localization);\n        /**\n         * The current menu filter.\n         * @type {CompositeFilterDescriptor}\n         */\n        this.filter = { filters: [], logic: \"and\" };\n        this.idPrefix = guid();\n    }\n    /**\n     * @hidden\n     */\n    get hostClasses() {\n        return false;\n    }\n    ngAfterViewInit() {\n        this.filterService.menuTabbingService.firstFocusable = this.radioButtons.first.radioButtonEl;\n        this.radioButtons.first.radioButtonEl.focus();\n    }\n    /**\n     * @hidden\n     */\n    radioId(value) {\n        return `${this.idPrefix}_${value}`;\n    }\n    /**\n     * @hidden\n     */\n    onChange(value, input) {\n        this.applyFilter(this.updateFilter({\n            field: this.column.field,\n            operator: \"eq\",\n            value: value\n        }));\n        this.filterService.menuTabbingService.firstFocusable = input;\n    }\n    /**\n     * @hidden\n     */\n    isSelected(radioValue) {\n        return this.filtersByField(this.column.field).some(({ value }) => value === radioValue);\n    }\n    /**\n     * @hidden\n     */\n    onShiftTab(e) {\n        if ((!this.menuTabbingService || !this.menuTabbingService.isColumnMenu) && this.filterService.menuTabbingService.lastFocusable) {\n            e.preventDefault();\n            this.filterService.menuTabbingService.lastFocusable.focus();\n        }\n    }\n    /**\n     * @hidden\n     */\n    get columnLabel() {\n        const localizationMsg = this.localization.get('filterInputLabel') || '';\n        const columnName = this.column.title || this.column.field;\n        return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n}\nBooleanFilterMenuComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BooleanFilterMenuComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nBooleanFilterMenuComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: BooleanFilterMenuComponent, selector: \"kendo-grid-boolean-filter-menu\", inputs: { filter: \"filter\", filterService: \"filterService\", menuTabbingService: \"menuTabbingService\" }, host: { properties: { \"class.k-filtercell\": \"this.hostClasses\" } }, viewQueries: [{ propertyName: \"radioButtons\", predicate: BooleanFilterRadioButtonDirective, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n        <ul class=\"k-radio-list k-reset\">\n            <li *ngFor=\"let item of items\">\n                <input type=\"radio\"\n                    kendoFilterMenuRadioButton\n                    [columnLabel]=\"columnLabel\"\n                    #input\n                    [name]=\"idPrefix\"\n                    kendoRadioButton\n                    [checked]=\"isSelected(item.value)\"\n                    [attr.id]=\"radioId(item.value)\"\n                    (change)=\"onChange(item.value, input)\"\n                    (keydown.shift.tab)=\"onShiftTab($event)\"\n                />\n                <label class=\"k-radio-label\" [attr.for]=\"radioId(item.value)\">{{item.text}}</label>\n            </li>\n        </ul>\n    `, isInline: true, directives: [{ type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i4$1.RadioButtonDirective, selector: \"input[kendoRadioButton]\", inputs: [\"size\"] }, { type: BooleanFilterRadioButtonDirective, selector: \"[kendoFilterMenuRadioButton]\", inputs: [\"columnLabel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BooleanFilterMenuComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-boolean-filter-menu',\n                    template: `\n        <ul class=\"k-radio-list k-reset\">\n            <li *ngFor=\"let item of items\">\n                <input type=\"radio\"\n                    kendoFilterMenuRadioButton\n                    [columnLabel]=\"columnLabel\"\n                    #input\n                    [name]=\"idPrefix\"\n                    kendoRadioButton\n                    [checked]=\"isSelected(item.value)\"\n                    [attr.id]=\"radioId(item.value)\"\n                    (change)=\"onChange(item.value, input)\"\n                    (keydown.shift.tab)=\"onShiftTab($event)\"\n                />\n                <label class=\"k-radio-label\" [attr.for]=\"radioId(item.value)\">{{item.text}}</label>\n            </li>\n        </ul>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; }, propDecorators: { hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-filtercell']\n            }], filter: [{\n                type: Input\n            }], filterService: [{\n                type: Input\n            }], menuTabbingService: [{\n                type: Input\n            }], radioButtons: [{\n                type: ViewChildren,\n                args: [BooleanFilterRadioButtonDirective]\n            }] } });\n\n/**\n * @hidden\n *\n * > List the following components as `entryComponents` in the GridModule.\n */\nconst filterMenuComponentFactory = (type) => ({\n    \"boolean\": BooleanFilterMenuComponent,\n    \"date\": DateFilterMenuComponent,\n    \"numeric\": NumericFilterMenuComponent,\n    \"text\": StringFilterMenuComponent\n}[type]);\n\n/**\n * @hidden\n */\nclass FilterMenuHostDirective extends FilterHostDirective {\n    constructor(host, resolver) {\n        super(host, resolver);\n    }\n    componentType() {\n        if (isPresent(this.column) && !isNullOrEmptyString(this.column.filter)) {\n            return filterMenuComponentFactory(this.column.filter);\n        }\n        return StringFilterMenuComponent;\n    }\n    initComponent(ctx) {\n        super.initComponent(ctx);\n        this.component.instance.filterService = this.filterService;\n        this.component.instance.menuTabbingService = this.menuTabbingService;\n    }\n}\nFilterMenuHostDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterMenuHostDirective, deps: [{ token: i0.ViewContainerRef }, { token: i0.ComponentFactoryResolver }], target: i0.ɵɵFactoryTarget.Directive });\nFilterMenuHostDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FilterMenuHostDirective, selector: \"[kendoFilterMenuHost]\", inputs: { filterService: \"filterService\", menuTabbingService: \"menuTabbingService\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterMenuHostDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoFilterMenuHost]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ComponentFactoryResolver }]; }, propDecorators: { filterService: [{\n                type: Input\n            }], menuTabbingService: [{\n                type: Input\n            }] } });\n\nconst isNoValueOperator = operator => (operator === \"isnull\"\n    || operator === \"isnotnull\"\n    || operator === \"isempty\"\n    || operator === \"isnotempty\");\nconst validFilters = ({ value, operator }) => !isNullOrEmptyString(value) || isNoValueOperator(operator);\nconst trimFilters = filter => {\n    filter.filters = filter.filters.filter(validFilters);\n    return filter;\n};\nconst findParent = (filters, field, parent) => {\n    return filters.reduce((acc, filter) => {\n        if (acc) {\n            return acc;\n        }\n        if (filter.filters) {\n            return findParent(filter.filters, field, filter);\n        }\n        else if (filter.field === field) {\n            return parent;\n        }\n        return acc;\n    }, undefined);\n};\nconst parentLogicOfDefault = (filter, field, def = \"and\") => {\n    const parent = findParent(((filter || {}).filters || []), field);\n    return isPresent(parent) ? parent.logic : def;\n};\n/**\n * @hidden\n */\nclass FilterMenuContainerComponent {\n    constructor(parentService, childService, localization, cd, menuTabbingService) {\n        this.parentService = parentService;\n        this.childService = childService;\n        this.localization = localization;\n        this.cd = cd;\n        this.close = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.actionsClass = 'k-action-buttons';\n        this._templateContext = {};\n        this.menuTabbingService = menuTabbingService;\n    }\n    get filter() {\n        return this._filter;\n    }\n    /**\n     * The current root filter.\n     * @type {CompositeFilterDescriptor}\n     */\n    set filter(value) {\n        this._filter = cloneFilters(value);\n    }\n    get childFilter() {\n        if (!isPresent(this._childFilter)) {\n            this._childFilter = {\n                filters: filtersByField(this.filter, (this.column || {}).field),\n                logic: parentLogicOfDefault(this.filter, (this.column || {}).field)\n            };\n        }\n        return this._childFilter;\n    }\n    ngOnInit() {\n        this.subscription = this.childService.changes.subscribe(filter => this._childFilter = filter);\n        this.subscription.add(this.localization.changes.subscribe(() => this.cd.markForCheck()));\n    }\n    ngAfterViewChecked() {\n        if (!this.menuTabbingService.isColumnMenu || (this.isLast && this.isExpanded)) {\n            this.menuTabbingService.lastFocusable = this.disabled ?\n                this.resetButton.nativeElement : this.filterButton.nativeElement;\n        }\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        this.menuTabbingService.lastFocusable = undefined;\n    }\n    get disabled() {\n        return !this.childFilter.filters.some(validFilters);\n    }\n    get templateContext() {\n        this._templateContext.column = this.column;\n        this._templateContext.filter = this.childFilter;\n        this._templateContext.filterService = this.childService;\n        this._templateContext[\"$implicit\"] = this.childFilter;\n        return this._templateContext;\n    }\n    get hasTemplate() {\n        return isPresent(this.column) && isPresent(this.column.filterMenuTemplateRef);\n    }\n    submit() {\n        const filter = trimFilters(this.childFilter);\n        if (filter.filters.length) {\n            const root = this.filter || {\n                filters: [],\n                logic: \"and\"\n            };\n            removeFilter(root, this.column.field);\n            root.filters.push(filter);\n            this.parentService.filter(root);\n        }\n        this.close.emit();\n        return false;\n    }\n    reset() {\n        const root = this.filter || {\n            filters: [],\n            logic: \"and\"\n        };\n        removeFilter(root, this.column.field);\n        this.parentService.filter(root);\n        this.close.emit();\n    }\n    onTab(e, buttonType) {\n        if (this.menuTabbingService.firstFocusable && (!this.menuTabbingService.isColumnMenu || this.isLast)) {\n            e.preventDefault();\n            if (buttonType === 'reset') {\n                // eslint-disable-next-line no-unused-expressions\n                this.disabled ? this.menuTabbingService.firstFocusable.focus() : this.filterButton.nativeElement.focus();\n            }\n            else {\n                this.menuTabbingService.firstFocusable.focus();\n            }\n        }\n    }\n    get clearText() {\n        return this.localization.get(\"filterClearButton\");\n    }\n    get filterText() {\n        return this.localization.get(\"filterFilterButton\");\n    }\n}\nFilterMenuContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterMenuContainerComponent, deps: [{ token: FilterService, skipSelf: true }, { token: FilterService }, { token: i1.LocalizationService }, { token: i0.ChangeDetectorRef }, { token: MenuTabbingService }], target: i0.ɵɵFactoryTarget.Component });\nFilterMenuContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FilterMenuContainerComponent, selector: \"kendo-grid-filter-menu-container\", inputs: { column: \"column\", isLast: \"isLast\", isExpanded: \"isExpanded\", menuTabbingService: \"menuTabbingService\", filter: \"filter\", actionsClass: \"actionsClass\" }, outputs: { close: \"close\" }, providers: [\n        FilterService,\n        MenuTabbingService\n    ], viewQueries: [{ propertyName: \"resetButton\", first: true, predicate: [\"resetButton\"], descendants: true }, { propertyName: \"filterButton\", first: true, predicate: [\"filterButton\"], descendants: true }], ngImport: i0, template: `\n        <form (submit)=\"submit()\" (reset)=\"reset()\"\n            class=\"k-filter-menu k-group k-reset k-state-border-up\">\n            <div class=\"k-filter-menu-container\">\n                <ng-container [ngSwitch]=\"hasTemplate\">\n                    <ng-container *ngSwitchCase=\"false\">\n                        <ng-container\n                            kendoFilterMenuHost\n                            [filterService]=\"childService\"\n                            [column]=\"column\"\n                            [filter]=\"childFilter\"\n                            [menuTabbingService]=\"menuTabbingService\">\n                        </ng-container>\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"true\">\n                        <ng-template\n                            *ngIf=\"column.filterMenuTemplateRef\"\n                            [ngTemplateOutlet]=\"column.filterMenuTemplateRef\"\n                            [ngTemplateOutletContext]=\"templateContext\"\n                            >\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n                <div [ngClass]=\"actionsClass\">\n                    <button\n                        #resetButton\n                        type=\"reset\"\n                        class=\"k-button k-button-solid-base k-button-solid k-button-md k-rounded-md k-button-rectangle\"\n                        (keydown.tab)=\"onTab($event, 'reset')\">{{clearText}}</button>\n                    <button #filterButton\n                        type=\"submit\"\n                        class=\"k-button k-button-solid-primary k-button-solid k-button-md k-rounded-md k-button-rectangle\"\n                        [disabled]=\"disabled\"\n                        (keydown.tab)=\"onTab($event, 'filter')\">{{filterText}}</button>\n                </div>\n            </div>\n        </form>\n    `, isInline: true, directives: [{ type: i4$2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i4$2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i4$2.NgForm, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: [\"ngFormOptions\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i4.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i4.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: FilterMenuHostDirective, selector: \"[kendoFilterMenuHost]\", inputs: [\"filterService\", \"menuTabbingService\"] }, { type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterMenuContainerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        FilterService,\n                        MenuTabbingService\n                    ],\n                    selector: 'kendo-grid-filter-menu-container',\n                    template: `\n        <form (submit)=\"submit()\" (reset)=\"reset()\"\n            class=\"k-filter-menu k-group k-reset k-state-border-up\">\n            <div class=\"k-filter-menu-container\">\n                <ng-container [ngSwitch]=\"hasTemplate\">\n                    <ng-container *ngSwitchCase=\"false\">\n                        <ng-container\n                            kendoFilterMenuHost\n                            [filterService]=\"childService\"\n                            [column]=\"column\"\n                            [filter]=\"childFilter\"\n                            [menuTabbingService]=\"menuTabbingService\">\n                        </ng-container>\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"true\">\n                        <ng-template\n                            *ngIf=\"column.filterMenuTemplateRef\"\n                            [ngTemplateOutlet]=\"column.filterMenuTemplateRef\"\n                            [ngTemplateOutletContext]=\"templateContext\"\n                            >\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n                <div [ngClass]=\"actionsClass\">\n                    <button\n                        #resetButton\n                        type=\"reset\"\n                        class=\"k-button k-button-solid-base k-button-solid k-button-md k-rounded-md k-button-rectangle\"\n                        (keydown.tab)=\"onTab($event, 'reset')\">{{clearText}}</button>\n                    <button #filterButton\n                        type=\"submit\"\n                        class=\"k-button k-button-solid-primary k-button-solid k-button-md k-rounded-md k-button-rectangle\"\n                        [disabled]=\"disabled\"\n                        (keydown.tab)=\"onTab($event, 'filter')\">{{filterText}}</button>\n                </div>\n            </div>\n        </form>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: FilterService, decorators: [{\n                    type: SkipSelf\n                }] }, { type: FilterService }, { type: i1.LocalizationService }, { type: i0.ChangeDetectorRef }, { type: MenuTabbingService }]; }, propDecorators: { close: [{\n                type: Output\n            }], column: [{\n                type: Input\n            }], isLast: [{\n                type: Input\n            }], isExpanded: [{\n                type: Input\n            }], menuTabbingService: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], actionsClass: [{\n                type: Input\n            }], resetButton: [{\n                type: ViewChild,\n                args: ['resetButton', { static: false }]\n            }], filterButton: [{\n                type: ViewChild,\n                args: ['filterButton', { static: false }]\n            }] } });\n\n/**\n * @hidden\n */\nclass FilterMenuComponent {\n    constructor(filterService, popupService, localization, navigationService) {\n        this.filterService = filterService;\n        this.popupService = popupService;\n        this.localization = localization;\n        this.navigationService = navigationService;\n        this.tabIndex = '-1';\n    }\n    get hasFilters() {\n        return filtersByField(this.filter, (this.column || {}).field).length > 0;\n    }\n    /**\n     * @hidden\n     */\n    get filterLabel() {\n        const localizationMsg = this.localization.get('filterMenuTitle') || '';\n        const columnName = this.column.title || this.column.field;\n        return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n    toggle(anchor, template) {\n        this.popupRef = this.popupService.open(anchor, template, this.popupRef);\n        if (!this.popupRef) {\n            if (this.navigationService.tableEnabled) {\n                this.navigationService.focusCell(0, this.column.leafIndex);\n            }\n            else {\n                this.anchor.nativeElement.focus();\n            }\n        }\n        return false;\n    }\n    close() {\n        this.popupService.destroy();\n        if (this.navigationService.tableEnabled) {\n            this.navigationService.focusCell(0, this.column.leafIndex);\n        }\n        else {\n            this.anchor.nativeElement.focus();\n        }\n    }\n}\nFilterMenuComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterMenuComponent, deps: [{ token: FilterService }, { token: SinglePopupService }, { token: i1.LocalizationService }, { token: NavigationService }], target: i0.ɵɵFactoryTarget.Component });\nFilterMenuComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FilterMenuComponent, selector: \"kendo-grid-filter-menu\", inputs: { column: \"column\", filter: \"filter\", tabIndex: \"tabIndex\" }, viewQueries: [{ propertyName: \"anchor\", first: true, predicate: [\"anchor\"], descendants: true, static: true }, { propertyName: \"template\", first: true, predicate: [\"template\"], descendants: true, read: TemplateRef, static: true }], ngImport: i0, template: `\n        <a #anchor\n            [ngClass]=\"{'k-grid-filter-menu':true, 'k-grid-header-menu':true, 'k-active': hasFilters}\"\n            [tabindex]=\"tabIndex\"\n            (click)=\"toggle(anchor, template)\"\n            (keydown.enter)=\"$event.stopImmediatePropagation()\"\n            href=\"#\"\n            [attr.title]=\"filterLabel\">\n            <span class=\"k-icon k-i-filter\"></span>\n        </a>\n        <ng-template #template>\n            <kendo-grid-filter-menu-container\n                [column]=\"column\"\n                [filter]=\"filter\"\n                (close)=\"close()\"\n                (keydown.escape)=\"close()\"\n                (keydown.enter)=\"$event.stopImmediatePropagation()\"\n                >\n            </kendo-grid-filter-menu-container>\n        </ng-template>\n    `, isInline: true, components: [{ type: FilterMenuContainerComponent, selector: \"kendo-grid-filter-menu-container\", inputs: [\"column\", \"isLast\", \"isExpanded\", \"menuTabbingService\", \"filter\", \"actionsClass\"], outputs: [\"close\"] }], directives: [{ type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterMenuComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-filter-menu',\n                    template: `\n        <a #anchor\n            [ngClass]=\"{'k-grid-filter-menu':true, 'k-grid-header-menu':true, 'k-active': hasFilters}\"\n            [tabindex]=\"tabIndex\"\n            (click)=\"toggle(anchor, template)\"\n            (keydown.enter)=\"$event.stopImmediatePropagation()\"\n            href=\"#\"\n            [attr.title]=\"filterLabel\">\n            <span class=\"k-icon k-i-filter\"></span>\n        </a>\n        <ng-template #template>\n            <kendo-grid-filter-menu-container\n                [column]=\"column\"\n                [filter]=\"filter\"\n                (close)=\"close()\"\n                (keydown.escape)=\"close()\"\n                (keydown.enter)=\"$event.stopImmediatePropagation()\"\n                >\n            </kendo-grid-filter-menu-container>\n        </ng-template>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: FilterService }, { type: SinglePopupService }, { type: i1.LocalizationService }, { type: NavigationService }]; }, propDecorators: { column: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], anchor: [{\n                type: ViewChild,\n                args: ['anchor', { static: true }]\n            }], template: [{\n                type: ViewChild,\n                args: ['template', { static: true, read: TemplateRef }]\n            }], tabIndex: [{\n                type: Input\n            }] } });\n\n/**\n * Represents the service that is passed to the\n * [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <span class=\"k-icon k-i-x\" (click)=\"service.close()\"\n *                  style=\"position: absolute; right: 5px; top: 5px;cursor: pointer;\"></span>\n *              <kendo-grid-columnmenu-sort [service]=\"service\">\n *              </kendo-grid-columnmenu-sort>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\nclass ColumnMenuService {\n    /**\n     * @hidden\n     */\n    constructor(menuTabbingService) {\n        /**\n         * @hidden\n         */\n        this.closeMenu = new EventEmitter();\n        this.menuTabbingService = menuTabbingService;\n    }\n    /**\n     * Closes the column menu.\n     */\n    close() {\n        this.closeMenu.emit();\n    }\n}\nColumnMenuService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuService, deps: [{ token: MenuTabbingService }], target: i0.ɵɵFactoryTarget.Injectable });\nColumnMenuService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: MenuTabbingService }]; } });\n\n/**\n * @hidden\n */\nconst ColunnMenuErrorMessages = {\n    autoSizeColumn: 'The auto size column does not work with enabled virtual columns',\n    autoSizeAllColumns: 'The auto size all columns does not work with enabled virtual columns'\n};\n\n/**\n * @hidden\n */\nclass ColumnMenuItemBase {\n    constructor() {\n        this.hostClass = true;\n    }\n    ngOnInit() {\n        if (isDevMode() && !this.service) {\n            throw new Error('The service input of the predefined column menu components is mandatory.');\n        }\n    }\n    /**\n     * @hidden\n     */\n    close() {\n        this.service.close();\n    }\n}\nColumnMenuItemBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuItemBase, deps: [], target: i0.ɵɵFactoryTarget.Component });\nColumnMenuItemBase.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnMenuItemBase, selector: \"kendo-grid-column-menu-item-base\", inputs: { service: \"service\" }, host: { properties: { \"class.k-columnmenu-item-wrapper\": \"this.hostClass\" } }, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuItemBase, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-column-menu-item-base',\n                    template: ``\n                }]\n        }], propDecorators: { service: [{\n                type: Input\n            }], hostClass: [{\n                type: HostBinding,\n                args: ['class.k-columnmenu-item-wrapper']\n            }] } });\n\n/**\n * Represents the content template of the\n * [kendo-grid-columnmenu-item]({% slug api_grid_columnmenuitemcomponent %}) component.\n * Provides an option for specifying the content of a column item.\n * To define the content template, nest an `<ng-template>` tag with the\n * `kendoGridColumnMenuItemContentTemplate` directive inside a `<kendo-grid-columnmenu-item>`.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate>\n *              <kendo-grid-columnmenu-item text=\"Item Text\" [expanded]=\"true\">\n *                  <ng-template kendoGridColumnMenuItemContentTemplate>\n *                      Item Content\n *                  </ng-template>\n *              </kendo-grid-columnmenu-item>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\nclass ColumnMenuItemContentTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nColumnMenuItemContentTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuItemContentTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nColumnMenuItemContentTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnMenuItemContentTemplateDirective, selector: \"[kendoGridColumnMenuItemContentTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuItemContentTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridColumnMenuItemContentTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Represents an item that can be placed inside a\n * [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\" [resizable]=\"true\" #grid>\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\" let-column=\"column\">\n *              <kendo-grid-columnmenu-item icon=\"arrows-resizing\" text=\"Fit column\"\n *                  (itemClick)=\"grid.autoFitColumn(column); service.close()\">\n *              </kendo-grid-columnmenu-item>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\nclass ColumnMenuItemComponent {\n    constructor() {\n        /**\n         * Fires when the item is clicked.\n         */\n        this.itemClick = new EventEmitter();\n        /**\n         * Fires when the content is expanded.\n         */\n        this.expand = new EventEmitter();\n        /**\n         * Fires when the content is collapsed.\n         */\n        this.collapse = new EventEmitter();\n        this.contentState = 'collapsed';\n    }\n    get iconClass() {\n        return `k-i-${this.icon}`;\n    }\n    ngOnChanges(changes) {\n        if (changes.expanded) {\n            this.updateContentState();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onClick(e) {\n        this.itemClick.emit(e);\n        if (this.contentTemplate) {\n            this.expanded = !this.expanded;\n            this.updateContentState();\n            if (this.expanded) {\n                this.expand.emit();\n            }\n            else {\n                this.collapse.emit();\n            }\n        }\n    }\n    updateContentState() {\n        this.contentState = this.expanded ? 'expanded' : 'collapsed';\n    }\n}\nColumnMenuItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nColumnMenuItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnMenuItemComponent, selector: \"kendo-grid-columnmenu-item\", inputs: { icon: \"icon\", text: \"text\", selected: \"selected\", disabled: \"disabled\", expanded: \"expanded\" }, outputs: { itemClick: \"itemClick\", expand: \"expand\", collapse: \"collapse\" }, queries: [{ propertyName: \"contentTemplate\", first: true, predicate: ColumnMenuItemContentTemplateDirective, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n        <div\n            class=\"k-columnmenu-item\"\n            (click)=\"onClick($event)\"\n            (keydown.enter)=\"onClick($event)\"\n            [class.k-selected]=\"selected\"\n            [class.k-disabled]=\"disabled\"\n            role=\"button\"\n            [attr.aria-expanded]=\"expanded\">\n           <span *ngIf=\"icon\" class=\"k-icon\" [ngClass]=\"iconClass\">\n           </span>\n           {{ text }}\n        </div>\n        <div *ngIf=\"contentTemplate\" [@state]=\"contentState\" [style.overflow]=\"'hidden'\" class=\"k-columnmenu-item-content\">\n            <ng-container [ngTemplateOutlet]=\"contentTemplate.templateRef\">\n            </ng-container>\n        <div>\n    `, isInline: true, directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], animations: [\n        trigger('state', [\n            state('collapsed', style({ display: 'none' })),\n            state('expanded', style({ display: 'block' })),\n            transition('collapsed => expanded', [\n                style({\n                    height: '0px',\n                    display: 'block'\n                }),\n                animate('100ms ease-in', style({\n                    height: '*'\n                }))\n            ]),\n            transition('expanded => collapsed', [\n                style({\n                    height: '*'\n                }),\n                animate('100ms ease-in', style({\n                    height: '0px'\n                }))\n            ])\n        ])\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    animations: [\n                        trigger('state', [\n                            state('collapsed', style({ display: 'none' })),\n                            state('expanded', style({ display: 'block' })),\n                            transition('collapsed => expanded', [\n                                style({\n                                    height: '0px',\n                                    display: 'block'\n                                }),\n                                animate('100ms ease-in', style({\n                                    height: '*'\n                                }))\n                            ]),\n                            transition('expanded => collapsed', [\n                                style({\n                                    height: '*'\n                                }),\n                                animate('100ms ease-in', style({\n                                    height: '0px'\n                                }))\n                            ])\n                        ])\n                    ],\n                    selector: 'kendo-grid-columnmenu-item',\n                    template: `\n        <div\n            class=\"k-columnmenu-item\"\n            (click)=\"onClick($event)\"\n            (keydown.enter)=\"onClick($event)\"\n            [class.k-selected]=\"selected\"\n            [class.k-disabled]=\"disabled\"\n            role=\"button\"\n            [attr.aria-expanded]=\"expanded\">\n           <span *ngIf=\"icon\" class=\"k-icon\" [ngClass]=\"iconClass\">\n           </span>\n           {{ text }}\n        </div>\n        <div *ngIf=\"contentTemplate\" [@state]=\"contentState\" [style.overflow]=\"'hidden'\" class=\"k-columnmenu-item-content\">\n            <ng-container [ngTemplateOutlet]=\"contentTemplate.templateRef\">\n            </ng-container>\n        <div>\n    `\n                }]\n        }], propDecorators: { itemClick: [{\n                type: Output\n            }], expand: [{\n                type: Output\n            }], collapse: [{\n                type: Output\n            }], icon: [{\n                type: Input\n            }], text: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], expanded: [{\n                type: Input\n            }], contentTemplate: [{\n                type: ContentChild,\n                args: [ColumnMenuItemContentTemplateDirective, { static: false }]\n            }] } });\n\n/**\n * Represents a column-menu item that can be placed inside a\n * [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n * Allows the user to lock or unlock the columns.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the service input of the `kendo-grid-columnmenu-lock` component.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-lock [service]=\"service\">\n *              </kendo-grid-columnmenu-lock>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\" [width]=\"100\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [width]=\"100\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\nclass ColumnMenuLockComponent extends ColumnMenuItemBase {\n    constructor(localization, columnInfoService, changeDetector) {\n        super();\n        this.localization = localization;\n        this.columnInfoService = columnInfoService;\n        this.changeDetector = changeDetector;\n    }\n    get text() {\n        return this.localization.get(this.locked ? 'unlock' : 'lock');\n    }\n    get icon() {\n        return this.locked ? 'unlock' : 'lock';\n    }\n    get disabled() {\n        return !this.locked && this.columnInfoService.unlockedRootCount < 2;\n    }\n    /**\n     * @hidden\n     */\n    toggleColumn() {\n        this.toggleHierarchy(!this.locked);\n        this.close();\n        this.changeDetector.markForCheck();\n    }\n    toggleHierarchy(locked) {\n        let root = this.service.column;\n        while (root.parent) {\n            root = root.parent;\n        }\n        const columns = [root];\n        const allChanged = [];\n        while (columns.length) {\n            const column = columns.shift();\n            column.locked = locked;\n            allChanged.push(column);\n            if (column.hasChildren) {\n                columns.push(...column.childrenArray);\n            }\n        }\n        this.columnInfoService.changeLocked(allChanged);\n    }\n    get locked() {\n        return this.service.column.locked;\n    }\n}\nColumnMenuLockComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuLockComponent, deps: [{ token: i1.LocalizationService }, { token: ColumnInfoService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nColumnMenuLockComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnMenuLockComponent, selector: \"kendo-grid-columnmenu-lock\", usesInheritance: true, ngImport: i0, template: `\n       <kendo-grid-columnmenu-item\n            [text]=\"text\"\n            [icon]=\"icon\"\n            (itemClick)=\"toggleColumn()\"\n            [disabled]=\"disabled\">\n       </kendo-grid-columnmenu-item>\n    `, isInline: true, components: [{ type: ColumnMenuItemComponent, selector: \"kendo-grid-columnmenu-item\", inputs: [\"icon\", \"text\", \"selected\", \"disabled\", \"expanded\"], outputs: [\"itemClick\", \"expand\", \"collapse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuLockComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-columnmenu-lock',\n                    template: `\n       <kendo-grid-columnmenu-item\n            [text]=\"text\"\n            [icon]=\"icon\"\n            (itemClick)=\"toggleColumn()\"\n            [disabled]=\"disabled\">\n       </kendo-grid-columnmenu-item>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: ColumnInfoService }, { type: i0.ChangeDetectorRef }]; } });\n\n/**\n * Represents a column-menu item that can be placed inside a\n * [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n * Allows the user to stick or unstick the columns.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the service input of the `kendo-grid-columnmenu-stick` component.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-stick [service]=\"service\">\n *              </kendo-grid-columnmenu-stick>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\" [width]=\"100\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [width]=\"100\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\nclass ColumnMenuStickComponent extends ColumnMenuItemBase {\n    constructor(localization, columnInfoService, changeDetector) {\n        super();\n        this.localization = localization;\n        this.columnInfoService = columnInfoService;\n        this.changeDetector = changeDetector;\n    }\n    get text() {\n        return this.localization.get(this.sticky ? 'unstick' : 'stick');\n    }\n    get icon() {\n        return this.sticky ? 'unstick' : 'stick';\n    }\n    get disabled() {\n        return !this.sticky && this.columnInfoService.unlockedRootCount < 2;\n    }\n    /**\n     * @hidden\n     */\n    toggleColumn() {\n        this.toggleHierarchy(!this.sticky);\n        this.close();\n        this.changeDetector.markForCheck();\n    }\n    toggleHierarchy(sticky) {\n        let root = this.service.column;\n        while (root.parent) {\n            root = root.parent;\n        }\n        const columns = [root];\n        const allChanged = [];\n        while (columns.length) {\n            const column = columns.shift();\n            column.sticky = sticky;\n            allChanged.push(column);\n            if (column.hasChildren) {\n                columns.push(...column.childrenArray);\n            }\n        }\n        this.columnInfoService.changeStuck(allChanged);\n    }\n    get sticky() {\n        return this.service.column.sticky;\n    }\n}\nColumnMenuStickComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuStickComponent, deps: [{ token: i1.LocalizationService }, { token: ColumnInfoService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nColumnMenuStickComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnMenuStickComponent, selector: \"kendo-grid-columnmenu-stick\", usesInheritance: true, ngImport: i0, template: `\n       <kendo-grid-columnmenu-item [text]=\"text\" [icon]=\"icon\" (itemClick)=\"toggleColumn()\" [disabled]=\"disabled\">\n       </kendo-grid-columnmenu-item>\n    `, isInline: true, components: [{ type: ColumnMenuItemComponent, selector: \"kendo-grid-columnmenu-item\", inputs: [\"icon\", \"text\", \"selected\", \"disabled\", \"expanded\"], outputs: [\"itemClick\", \"expand\", \"collapse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuStickComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-columnmenu-stick',\n                    template: `\n       <kendo-grid-columnmenu-item [text]=\"text\" [icon]=\"icon\" (itemClick)=\"toggleColumn()\" [disabled]=\"disabled\">\n       </kendo-grid-columnmenu-item>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: ColumnInfoService }, { type: i0.ChangeDetectorRef }]; } });\n\n/**\n * Represents the component for editing column filters in the Grid that can be placed\n * inside a [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the service input of the `kendo-grid-columnmenu-filter` component.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [kendoGridBinding]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-filter [service]=\"service\">\n *              </kendo-grid-columnmenu-filter>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\nclass ColumnMenuPositionComponent extends ColumnMenuItemBase {\n    constructor(localization, hostElement) {\n        super();\n        this.localization = localization;\n        this.hostElement = hostElement;\n        /**\n         * Fires when the content is expanded.\n         */\n        this.expand = new EventEmitter();\n        /**\n         * Fires when the content is collapsed.\n         */\n        this.collapse = new EventEmitter();\n        /**\n         * Specifies if the content is expanded.\n         */\n        this.expanded = false;\n        /**\n         * @hidden\n         */\n        this.actionsClass = 'k-columnmenu-actions';\n        this._isLast = false;\n    }\n    /**\n     * @hidden\n     */\n    set isLast(value) {\n        this.service.menuTabbingService.lastFocusable = this.getLastFocusableItem();\n        this._isLast = value;\n    }\n    /**\n     * @hidden\n     */\n    get isLast() {\n        return this._isLast;\n    }\n    /**\n     * @hidden\n     */\n    onTab(e, isLastItem) {\n        if (this.isLast && isLastItem) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            if (this.service) {\n                this.service.menuTabbingService.firstFocusable.focus();\n            }\n        }\n    }\n    /**\n     * @hidden\n     */\n    onCollapse() {\n        this.expanded = false;\n        if (this.isLast) {\n            this.service.menuTabbingService.lastFocusable = this.getLastFocusableItem();\n        }\n        this.collapse.emit();\n    }\n    /**\n     * @hidden\n     */\n    onExpand() {\n        this.expanded = true;\n        if (this.isLast) {\n            this.service.menuTabbingService.lastFocusable = this.getLastFocusableItem();\n        }\n        this.expand.emit();\n    }\n    getLastFocusableItem() {\n        const menuItems = this.hostElement.nativeElement.querySelectorAll('.k-columnmenu-item');\n        const lastFocusableIndex = this.expanded ? menuItems.length - 1 : 0;\n        return menuItems[lastFocusableIndex];\n    }\n}\nColumnMenuPositionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuPositionComponent, deps: [{ token: i1.LocalizationService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nColumnMenuPositionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnMenuPositionComponent, selector: \"kendo-grid-columnmenu-position\", inputs: { expanded: \"expanded\", showLock: \"showLock\", showStick: \"showStick\", isLast: \"isLast\" }, outputs: { expand: \"expand\", collapse: \"collapse\" }, usesInheritance: true, ngImport: i0, template: `\n        <kendo-grid-columnmenu-item\n            [text]=\"localization.get('setColumnPosition')\"\n            icon=\"set-column-position\"\n            [expanded]=\"expanded\"\n            (keydown.tab)=\"onTab($event, !expanded)\"\n            (collapse)=\"onCollapse()\"\n            (expand)=\"onExpand()\">\n            <ng-template kendoGridColumnMenuItemContentTemplate>\n                <kendo-grid-columnmenu-lock\n                    *ngIf=\"showLock\"\n                    (keydown.tab)=\"onTab($event, !showStick)\"\n                    [service]=\"service\">\n                </kendo-grid-columnmenu-lock>\n                <kendo-grid-columnmenu-stick\n                    *ngIf=\"showStick\"\n                    (keydown.tab)=\"onTab($event, true)\"\n                    [service]=\"service\">\n                </kendo-grid-columnmenu-stick>\n            </ng-template>\n        </kendo-grid-columnmenu-item>\n    `, isInline: true, components: [{ type: ColumnMenuItemComponent, selector: \"kendo-grid-columnmenu-item\", inputs: [\"icon\", \"text\", \"selected\", \"disabled\", \"expanded\"], outputs: [\"itemClick\", \"expand\", \"collapse\"] }, { type: ColumnMenuLockComponent, selector: \"kendo-grid-columnmenu-lock\" }, { type: ColumnMenuStickComponent, selector: \"kendo-grid-columnmenu-stick\" }], directives: [{ type: ColumnMenuItemContentTemplateDirective, selector: \"[kendoGridColumnMenuItemContentTemplate]\" }, { type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuPositionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-columnmenu-position',\n                    template: `\n        <kendo-grid-columnmenu-item\n            [text]=\"localization.get('setColumnPosition')\"\n            icon=\"set-column-position\"\n            [expanded]=\"expanded\"\n            (keydown.tab)=\"onTab($event, !expanded)\"\n            (collapse)=\"onCollapse()\"\n            (expand)=\"onExpand()\">\n            <ng-template kendoGridColumnMenuItemContentTemplate>\n                <kendo-grid-columnmenu-lock\n                    *ngIf=\"showLock\"\n                    (keydown.tab)=\"onTab($event, !showStick)\"\n                    [service]=\"service\">\n                </kendo-grid-columnmenu-lock>\n                <kendo-grid-columnmenu-stick\n                    *ngIf=\"showStick\"\n                    (keydown.tab)=\"onTab($event, true)\"\n                    [service]=\"service\">\n                </kendo-grid-columnmenu-stick>\n            </ng-template>\n        </kendo-grid-columnmenu-item>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: i0.ElementRef }]; }, propDecorators: { expand: [{\n                type: Output\n            }], collapse: [{\n                type: Output\n            }], expanded: [{\n                type: Input\n            }], showLock: [{\n                type: Input\n            }], showStick: [{\n                type: Input\n            }], isLast: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass ColumnListComponent {\n    constructor(element, ngZone, renderer) {\n        this.element = element;\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.reset = new EventEmitter();\n        this.apply = new EventEmitter();\n        this.columnChange = new EventEmitter();\n        this.autoSync = true;\n        this.allowHideAll = false;\n        this.actionsClass = 'k-action-buttons';\n        this.unlockedCount = 0;\n    }\n    get className() {\n        return true;\n    }\n    set columns(value) {\n        this._columns = value.filter(column => column.includeInChooser !== false);\n        this.allColumns = value;\n        this.updateColumnState();\n    }\n    get columns() {\n        return this._columns;\n    }\n    isDisabled(column) {\n        return !(this.allowHideAll || this.hasFiltered || column.hidden || this.columns.find(current => current !== column && !current.hidden)) ||\n            (this.hasVisibleLocked && !this.hasUnlockedFiltered && this.unlockedCount === 1 && !column.locked && !column.hidden);\n    }\n    ngOnInit() {\n        if (!this.element) {\n            return;\n        }\n        this.ngZone.runOutsideAngular(() => {\n            this.domSubscriptions = this.renderer.listen(this.element.nativeElement, 'click', (e) => {\n                if (hasClasses(e.target, 'k-checkbox')) {\n                    if (this.autoSync) {\n                        const index = parseInt(e.target.getAttribute('data-index'), 10);\n                        const column = this.columns[index];\n                        const hidden = !e.target.checked;\n                        if (Boolean(column.hidden) !== hidden) {\n                            this.ngZone.run(() => {\n                                column.hidden = hidden;\n                                this.columnChange.emit([column]);\n                            });\n                        }\n                    }\n                    else {\n                        this.updateDisabled();\n                    }\n                }\n            });\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.service) {\n            return;\n        }\n        if (changes.isLast && this.isLast) {\n            this.service.menuTabbingService.lastFocusable = this.applyButton.nativeElement;\n        }\n        if (changes.isExpanded && this.isExpanded && this.isLast && this.applyButton) {\n            this.service.menuTabbingService.lastFocusable = this.applyButton.nativeElement;\n        }\n    }\n    ngOnDestroy() {\n        if (this.domSubscriptions) {\n            this.domSubscriptions();\n        }\n    }\n    cancelChanges() {\n        this.forEachCheckBox((element, index) => {\n            element.checked = !this.columns[index].hidden;\n        });\n        this.updateDisabled();\n        this.reset.emit();\n    }\n    applyChanges() {\n        const changed = [];\n        this.forEachCheckBox((element, index) => {\n            const column = this.columns[index];\n            const hidden = !element.checked;\n            if (Boolean(column.hidden) !== hidden) {\n                column.hidden = hidden;\n                changed.push(column);\n            }\n        });\n        this.updateDisabled();\n        this.apply.emit(changed);\n    }\n    onTab(e) {\n        if (this.isLast) {\n            e.preventDefault();\n            if (this.service) {\n                this.service.menuTabbingService.firstFocusable.focus();\n            }\n        }\n    }\n    forEachCheckBox(callback) {\n        const checkboxes = this.element.nativeElement.getElementsByClassName('k-checkbox');\n        const length = checkboxes.length;\n        for (let idx = 0; idx < length; idx++) {\n            callback(checkboxes[idx], idx);\n        }\n    }\n    updateDisabled() {\n        if (this.allowHideAll && !this.hasLocked) {\n            return;\n        }\n        const checkedItems = [];\n        this.forEachCheckBox((checkbox, index) => {\n            if (checkbox.checked) {\n                checkedItems.push({ checkbox, index });\n            }\n            checkbox.disabled = false;\n        });\n        if (!this.allowHideAll && checkedItems.length === 1 && !this.hasFiltered) {\n            checkedItems[0].checkbox.disabled = true;\n        }\n        else if (this.hasLocked && !this.hasUnlockedFiltered) {\n            const columns = this.columns;\n            const checkedUnlocked = checkedItems.filter(item => !columns[item.index].locked);\n            if (checkedUnlocked.length === 1) {\n                checkedUnlocked[0].checkbox.disabled = true;\n            }\n        }\n    }\n    updateColumnState() {\n        this.hasLocked = this.allColumns.filter(column => column.locked && (!column.hidden || column.includeInChooser !== false)).length > 0;\n        this.hasVisibleLocked = this.allColumns.filter(column => column.locked && !column.hidden).length > 0;\n        this.unlockedCount = this.columns.filter(column => !column.locked && !column.hidden).length;\n        const filteredColumns = this.allColumns.filter(column => column.includeInChooser === false && !column.hidden);\n        if (filteredColumns.length) {\n            this.hasFiltered = filteredColumns.length > 0;\n            this.hasUnlockedFiltered = filteredColumns.filter(column => !column.locked).length > 0;\n        }\n        else {\n            this.hasFiltered = false;\n            this.hasUnlockedFiltered = false;\n        }\n    }\n}\nColumnListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnListComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\nColumnListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnListComponent, selector: \"kendo-grid-columnlist\", inputs: { columns: \"columns\", autoSync: \"autoSync\", allowHideAll: \"allowHideAll\", applyText: \"applyText\", resetText: \"resetText\", actionsClass: \"actionsClass\", isLast: \"isLast\", isExpanded: \"isExpanded\", service: \"service\" }, outputs: { reset: \"reset\", apply: \"apply\", columnChange: \"columnChange\" }, host: { properties: { \"class.k-column-list-wrapper\": \"this.className\" } }, viewQueries: [{ propertyName: \"applyButton\", first: true, predicate: [\"applyButton\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n        <div class=\"k-column-list\">\n            <label *ngFor=\"let column of columns; let index = index;\" class='k-column-list-item'>\n                <input class=\"k-checkbox k-checkbox-md k-rounded-md\" type=\"checkbox\" [attr.data-index]=\"index\" [checked]=\"!column.hidden\" [disabled]=\"isDisabled(column)\" /><span class=\"k-checkbox-label\">{{ column.displayTitle }}</span>\n            </label>\n        </div>\n        <div [ngClass]=\"actionsClass\" *ngIf=\"!autoSync\">\n            <button type=\"button\" class=\"k-button k-button-solid-base k-button-solid k-button-md k-rounded-md k-button-rectangle\" (click)=\"cancelChanges()\">{{ resetText }}</button>\n            <button #applyButton type=\"button\" (keydown.tab)=\"onTab($event)\" class=\"k-button k-button-solid-primary k-button-solid k-button-md k-rounded-md k-button-rectangle\" (click)=\"applyChanges()\">{{ applyText }}</button>\n        </div>\n    `, isInline: true, directives: [{ type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnListComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-columnlist',\n                    template: `\n        <div class=\"k-column-list\">\n            <label *ngFor=\"let column of columns; let index = index;\" class='k-column-list-item'>\n                <input class=\"k-checkbox k-checkbox-md k-rounded-md\" type=\"checkbox\" [attr.data-index]=\"index\" [checked]=\"!column.hidden\" [disabled]=\"isDisabled(column)\" /><span class=\"k-checkbox-label\">{{ column.displayTitle }}</span>\n            </label>\n        </div>\n        <div [ngClass]=\"actionsClass\" *ngIf=\"!autoSync\">\n            <button type=\"button\" class=\"k-button k-button-solid-base k-button-solid k-button-md k-rounded-md k-button-rectangle\" (click)=\"cancelChanges()\">{{ resetText }}</button>\n            <button #applyButton type=\"button\" (keydown.tab)=\"onTab($event)\" class=\"k-button k-button-solid-primary k-button-solid k-button-md k-rounded-md k-button-rectangle\" (click)=\"applyChanges()\">{{ applyText }}</button>\n        </div>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Renderer2 }]; }, propDecorators: { className: [{\n                type: HostBinding,\n                args: [\"class.k-column-list-wrapper\"]\n            }], reset: [{\n                type: Output\n            }], apply: [{\n                type: Output\n            }], columnChange: [{\n                type: Output\n            }], columns: [{\n                type: Input\n            }], autoSync: [{\n                type: Input\n            }], allowHideAll: [{\n                type: Input\n            }], applyText: [{\n                type: Input\n            }], resetText: [{\n                type: Input\n            }], actionsClass: [{\n                type: Input\n            }], isLast: [{\n                type: Input\n            }], isExpanded: [{\n                type: Input\n            }], service: [{\n                type: Input\n            }], applyButton: [{\n                type: ViewChild,\n                args: ['applyButton', { static: false }]\n            }] } });\n\n/**\n * Represents the component for selecting columns in the Grid that can be placed\n * inside a [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the service input of the `kendo-grid-columnmenu-chooser` component.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-chooser [service]=\"service\">\n *              </kendo-grid-columnmenu-chooser>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [hidden]=\"true\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\nclass ColumnMenuChooserComponent extends ColumnMenuItemBase {\n    constructor(localization, columnInfoService, changeDetector, hostElement) {\n        super();\n        this.localization = localization;\n        this.columnInfoService = columnInfoService;\n        this.changeDetector = changeDetector;\n        this.hostElement = hostElement;\n        /**\n         * Fires when the content is expanded.\n         */\n        this.expand = new EventEmitter();\n        /**\n         * Fires when the content is collapsed.\n         */\n        this.collapse = new EventEmitter();\n        /**\n         * Specifies if the content is expanded.\n         */\n        this.expanded = false;\n        /**\n         * @hidden\n         */\n        this.isLast = false;\n        /**\n         * @hidden\n         */\n        this.actionsClass = 'k-columnmenu-actions';\n    }\n    get columns() {\n        return this.columnInfoService.leafNamedColumns;\n    }\n    /**\n     * @hidden\n     */\n    onApply(changed) {\n        this.close();\n        if (changed.length) {\n            this.changeDetector.markForCheck();\n            this.columnInfoService.changeVisibility(changed);\n        }\n    }\n    /**\n     * @hidden\n     */\n    onCollapse() {\n        this.expanded = false;\n        if (this.isLast) {\n            this.service.menuTabbingService.lastFocusable = this.hostElement.nativeElement.querySelector('.k-columnmenu-item');\n        }\n        this.collapse.emit();\n    }\n    /**\n     * @hidden\n     */\n    onExpand() {\n        this.expanded = true;\n        this.expand.emit();\n    }\n}\nColumnMenuChooserComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuChooserComponent, deps: [{ token: i1.LocalizationService }, { token: ColumnInfoService }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nColumnMenuChooserComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnMenuChooserComponent, selector: \"kendo-grid-columnmenu-chooser\", inputs: { expanded: \"expanded\", isLast: \"isLast\" }, outputs: { expand: \"expand\", collapse: \"collapse\" }, usesInheritance: true, ngImport: i0, template: `\n        <kendo-grid-columnmenu-item\n            [text]=\"localization.get('columns')\"\n            icon=\"columns\"\n            [expanded]=\"expanded\"\n            (collapse)=\"onCollapse()\"\n            (expand)=\"onExpand()\">\n            <ng-template kendoGridColumnMenuItemContentTemplate>\n                <kendo-grid-columnlist\n                    [applyText]=\"localization.get('columnsApply')\"\n                    [resetText]=\"localization.get('columnsReset')\"\n                    [columns]=\"columns\"\n                    [autoSync]=\"false\"\n                    [allowHideAll]=\"false\"\n                    [actionsClass]=\"actionsClass\"\n                    [isLast]=\"isLast\"\n                    [isExpanded]=\"expanded\"\n                    [service]=\"service\"\n                    (apply)=\"onApply($event)\">\n                </kendo-grid-columnlist>\n            </ng-template>\n        </kendo-grid-columnmenu-item>\n    `, isInline: true, components: [{ type: ColumnMenuItemComponent, selector: \"kendo-grid-columnmenu-item\", inputs: [\"icon\", \"text\", \"selected\", \"disabled\", \"expanded\"], outputs: [\"itemClick\", \"expand\", \"collapse\"] }, { type: ColumnListComponent, selector: \"kendo-grid-columnlist\", inputs: [\"columns\", \"autoSync\", \"allowHideAll\", \"applyText\", \"resetText\", \"actionsClass\", \"isLast\", \"isExpanded\", \"service\"], outputs: [\"reset\", \"apply\", \"columnChange\"] }], directives: [{ type: ColumnMenuItemContentTemplateDirective, selector: \"[kendoGridColumnMenuItemContentTemplate]\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuChooserComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-columnmenu-chooser',\n                    template: `\n        <kendo-grid-columnmenu-item\n            [text]=\"localization.get('columns')\"\n            icon=\"columns\"\n            [expanded]=\"expanded\"\n            (collapse)=\"onCollapse()\"\n            (expand)=\"onExpand()\">\n            <ng-template kendoGridColumnMenuItemContentTemplate>\n                <kendo-grid-columnlist\n                    [applyText]=\"localization.get('columnsApply')\"\n                    [resetText]=\"localization.get('columnsReset')\"\n                    [columns]=\"columns\"\n                    [autoSync]=\"false\"\n                    [allowHideAll]=\"false\"\n                    [actionsClass]=\"actionsClass\"\n                    [isLast]=\"isLast\"\n                    [isExpanded]=\"expanded\"\n                    [service]=\"service\"\n                    (apply)=\"onApply($event)\">\n                </kendo-grid-columnlist>\n            </ng-template>\n        </kendo-grid-columnmenu-item>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: ColumnInfoService }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { expand: [{\n                type: Output\n            }], collapse: [{\n                type: Output\n            }], expanded: [{\n                type: Input\n            }], isLast: [{\n                type: Input\n            }] } });\n\n/**\n * Represents the component for editing column filters in the Grid that can be placed\n * inside a [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the service input of the `kendo-grid-columnmenu-filter` component.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [kendoGridBinding]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-filter [service]=\"service\">\n *              </kendo-grid-columnmenu-filter>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\nclass ColumnMenuFilterComponent extends ColumnMenuItemBase {\n    constructor(localization, hostElement) {\n        super();\n        this.localization = localization;\n        this.hostElement = hostElement;\n        /**\n         * Fires when the content is expanded.\n         */\n        this.expand = new EventEmitter();\n        /**\n         * Fires when the content is collapsed.\n         */\n        this.collapse = new EventEmitter();\n        /**\n         * Specifies if the content is expanded.\n         */\n        this.expanded = false;\n        /**\n         * @hidden\n         */\n        this.isLast = false;\n        /**\n         * @hidden\n         */\n        this.actionsClass = 'k-columnmenu-actions';\n    }\n    /**\n     * @hidden\n     */\n    onCollapse() {\n        this.expanded = false;\n        if (this.isLast) {\n            this.service.menuTabbingService.lastFocusable = this.hostElement.nativeElement.querySelector('.k-columnmenu-item');\n        }\n        this.collapse.emit();\n    }\n    /**\n     * @hidden\n     */\n    onExpand() {\n        this.expanded = true;\n        this.expand.emit();\n    }\n}\nColumnMenuFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuFilterComponent, deps: [{ token: i1.LocalizationService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nColumnMenuFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnMenuFilterComponent, selector: \"kendo-grid-columnmenu-filter\", inputs: { expanded: \"expanded\", isLast: \"isLast\" }, outputs: { expand: \"expand\", collapse: \"collapse\" }, usesInheritance: true, ngImport: i0, template: `\n        <kendo-grid-columnmenu-item\n            [text]=\"localization.get('filter')\"\n            icon=\"filter\"\n            [expanded]=\"expanded\"\n            (collapse)=\"onCollapse()\"\n            (expand)=\"onExpand()\">\n            <ng-template kendoGridColumnMenuItemContentTemplate>\n                <kendo-grid-filter-menu-container\n                    [column]=\"service.column\"\n                    [menuTabbingService]=\"service.menuTabbingService\"\n                    [filter]=\"service.filter\"\n                    [actionsClass]=\"actionsClass\"\n                    [isLast]=\"isLast\"\n                    [isExpanded]=\"expanded\"\n                    (keydown.shift.tab)=\"$event.stopImmediatePropagation()\"\n                    (close)=\"close()\">\n                </kendo-grid-filter-menu-container>\n            </ng-template>\n        </kendo-grid-columnmenu-item>\n    `, isInline: true, components: [{ type: ColumnMenuItemComponent, selector: \"kendo-grid-columnmenu-item\", inputs: [\"icon\", \"text\", \"selected\", \"disabled\", \"expanded\"], outputs: [\"itemClick\", \"expand\", \"collapse\"] }, { type: FilterMenuContainerComponent, selector: \"kendo-grid-filter-menu-container\", inputs: [\"column\", \"isLast\", \"isExpanded\", \"menuTabbingService\", \"filter\", \"actionsClass\"], outputs: [\"close\"] }], directives: [{ type: ColumnMenuItemContentTemplateDirective, selector: \"[kendoGridColumnMenuItemContentTemplate]\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuFilterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-columnmenu-filter',\n                    template: `\n        <kendo-grid-columnmenu-item\n            [text]=\"localization.get('filter')\"\n            icon=\"filter\"\n            [expanded]=\"expanded\"\n            (collapse)=\"onCollapse()\"\n            (expand)=\"onExpand()\">\n            <ng-template kendoGridColumnMenuItemContentTemplate>\n                <kendo-grid-filter-menu-container\n                    [column]=\"service.column\"\n                    [menuTabbingService]=\"service.menuTabbingService\"\n                    [filter]=\"service.filter\"\n                    [actionsClass]=\"actionsClass\"\n                    [isLast]=\"isLast\"\n                    [isExpanded]=\"expanded\"\n                    (keydown.shift.tab)=\"$event.stopImmediatePropagation()\"\n                    (close)=\"close()\">\n                </kendo-grid-filter-menu-container>\n            </ng-template>\n        </kendo-grid-columnmenu-item>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: i0.ElementRef }]; }, propDecorators: { expand: [{\n                type: Output\n            }], collapse: [{\n                type: Output\n            }], expanded: [{\n                type: Input\n            }], isLast: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass ColumnMenuItemDirective {\n    constructor(hostElement, renderer, ngZone) {\n        this.hostElement = hostElement;\n        this.renderer = renderer;\n        this.ngZone = ngZone;\n        this._isFirst = false;\n        this._isLast = false;\n        this.subs = new Subscription();\n        this.onTab = (e) => {\n            if (e.keyCode !== Keys.Tab) {\n                return;\n            }\n            if (this.isFirst && e.shiftKey && e.target === this.columnMenuItems[0]) {\n                e.preventDefault();\n                this.menuItemComponent.service.menuTabbingService.lastFocusable.focus();\n            }\n            if (this.isLast && !e.shiftKey) {\n                const lastColumnMenuItem = this.getLastColumnMenuItem();\n                const isExpanded = this.menuItemComponent.expanded;\n                if (lastColumnMenuItem === e.target && !isExpanded) {\n                    e.preventDefault();\n                    this.menuItemComponent.service.menuTabbingService.firstFocusable.focus();\n                }\n            }\n        };\n    }\n    set isFirst(value) {\n        if (value) {\n            const focusableElement = this.columnMenuItems[0];\n            this.menuItemComponent.service.menuTabbingService.firstFocusable = focusableElement;\n            this.ngZone.runOutsideAngular(() => {\n                const firstItemKeydownSub = this.renderer.listen(focusableElement, 'keydown', this.onTab);\n                this.subs.add(firstItemKeydownSub);\n            });\n        }\n        this._isFirst = value;\n    }\n    get isFirst() {\n        return this._isFirst;\n    }\n    set isLast(value) {\n        if (!this.columnMenuItems) {\n            return;\n        }\n        if (value) {\n            const lastFocusableElement = this.getLastColumnMenuItem();\n            this.menuItemComponent.service.menuTabbingService.lastFocusable = lastFocusableElement;\n            this.ngZone.runOutsideAngular(() => {\n                const lastItemKeydownSub = this.renderer.listen(lastFocusableElement, 'keydown', this.onTab);\n                this.subs.add(lastItemKeydownSub);\n            });\n            if (this.isExpandableItem()) {\n                this.menuItemComponent.isLast = true;\n            }\n        }\n        this._isLast = value;\n    }\n    get isLast() {\n        return this._isLast;\n    }\n    ngAfterViewInit() {\n        this.columnMenuItems = this.hostElement.nativeElement.querySelectorAll('.k-columnmenu-item');\n        [].slice.apply(this.columnMenuItems).forEach(el => this.renderer.setAttribute(el, 'tabindex', '0'));\n        if (this.menuItemComponent instanceof ColumnMenuFilterComponent) {\n            this.menuItemComponent.service.menuTabbingService.isColumnMenu = true;\n        }\n    }\n    ngOnDestroy() {\n        if (this.subs) {\n            this.subs.unsubscribe();\n        }\n    }\n    getLastColumnMenuItem() {\n        return (this.columnMenuItems.length === 1 ? this.columnMenuItems[0] : this.columnMenuItems[1]);\n    }\n    isExpandableItem() {\n        return this.menuItemComponent instanceof ColumnMenuFilterComponent ||\n            this.menuItemComponent instanceof ColumnMenuChooserComponent ||\n            this.menuItemComponent instanceof ColumnMenuPositionComponent;\n    }\n}\nColumnMenuItemDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuItemDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nColumnMenuItemDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnMenuItemDirective, selector: \"[kendoGridColumnMenuItem]\", inputs: { menuItemComponent: [\"kendoGridColumnMenuItem\", \"menuItemComponent\"] }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuItemDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[kendoGridColumnMenuItem]' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.NgZone }]; }, propDecorators: { menuItemComponent: [{\n                type: Input,\n                args: ['kendoGridColumnMenuItem']\n            }] } });\n\n/**\n * @hidden\n */\nclass ColumnMenuContainerComponent {\n    constructor(service, ngZone) {\n        this.service = service;\n        this.ngZone = ngZone;\n    }\n    ngAfterContentInit() {\n        if (!this.columnMenuItems.length) {\n            return;\n        }\n        this.columnMenuItems.first.isFirst = true;\n        this.columnMenuItems.last.isLast = true;\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.service.menuTabbingService.firstFocusable.focus());\n    }\n}\nColumnMenuContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuContainerComponent, deps: [{ token: ColumnMenuService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nColumnMenuContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnMenuContainerComponent, selector: \"kendo-grid-columnmenu-container\", queries: [{ propertyName: \"columnMenuItems\", predicate: ColumnMenuItemDirective, descendants: true }], ngImport: i0, template: `\n        <ng-content></ng-content>\n    `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuContainerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-columnmenu-container',\n                    template: `\n        <ng-content></ng-content>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: ColumnMenuService }, { type: i0.NgZone }]; }, propDecorators: { columnMenuItems: [{\n                type: ContentChildren,\n                args: [ColumnMenuItemDirective, { descendants: true }]\n            }] } });\n\n/**\n * Represents a column-menu item for sorting Grid columns that can be placed inside a\n * [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n * Allows the user to sort the column.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the service input of the `kendo-grid-columnmenu-sort` component.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [kendoGridBinding]=\"data\" [sortable]=\"true\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-sort [service]=\"service\">\n *              </kendo-grid-columnmenu-sort>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\" [width]=\"100\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [width]=\"100\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }, { Field1: 'Foo1', Field2: 'Bar1' }];\n * }\n *\n * ```\n */\nclass ColumnMenuSortComponent extends ColumnMenuItemBase {\n    constructor(localization, sortService, renderer) {\n        super();\n        this.localization = localization;\n        this.sortService = sortService;\n        this.renderer = renderer;\n    }\n    get sortedAsc() {\n        const descriptor = this.descriptor;\n        return descriptor && (!descriptor.dir || descriptor.dir === 'asc');\n    }\n    get sortedDesc() {\n        const descriptor = this.descriptor;\n        return descriptor && descriptor.dir === 'desc';\n    }\n    /**\n     * @hidden\n     */\n    toggleSort(dir) {\n        const field = this.service.column.field;\n        const { mode, allowUnsort } = normalize(this.service.sortable);\n        const descriptor = this.descriptor;\n        const sort = mode === 'multiple' ? this.service.sort.filter(s => s.field !== field) : [];\n        if (descriptor && descriptor.dir === dir) {\n            if (!allowUnsort) {\n                return;\n            }\n        }\n        else {\n            sort.push({ field, dir });\n        }\n        this.sortService.sort(sort);\n        this.close();\n    }\n    get descriptor() {\n        return [].concat(this.service.sort || []).find(s => s.field === this.service.column.field);\n    }\n}\nColumnMenuSortComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuSortComponent, deps: [{ token: i1.LocalizationService }, { token: SortService }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\nColumnMenuSortComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnMenuSortComponent, selector: \"kendo-grid-columnmenu-sort\", usesInheritance: true, ngImport: i0, template: `\n        <kendo-grid-columnmenu-item\n            [text]=\"localization.get('sortAscending')\"\n            icon=\"sort-asc-small\"\n            (itemClick)=\"toggleSort('asc')\"\n            [selected]=\"sortedAsc\">\n        </kendo-grid-columnmenu-item>\n        <kendo-grid-columnmenu-item\n            [text]=\"localization.get('sortDescending')\"\n            icon=\"sort-desc-small\"\n            (itemClick)=\"toggleSort('desc')\"\n            [selected]=\"sortedDesc\">\n        </kendo-grid-columnmenu-item>\n    `, isInline: true, components: [{ type: ColumnMenuItemComponent, selector: \"kendo-grid-columnmenu-item\", inputs: [\"icon\", \"text\", \"selected\", \"disabled\", \"expanded\"], outputs: [\"itemClick\", \"expand\", \"collapse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuSortComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-columnmenu-sort',\n                    template: `\n        <kendo-grid-columnmenu-item\n            [text]=\"localization.get('sortAscending')\"\n            icon=\"sort-asc-small\"\n            (itemClick)=\"toggleSort('asc')\"\n            [selected]=\"sortedAsc\">\n        </kendo-grid-columnmenu-item>\n        <kendo-grid-columnmenu-item\n            [text]=\"localization.get('sortDescending')\"\n            icon=\"sort-desc-small\"\n            (itemClick)=\"toggleSort('desc')\"\n            [selected]=\"sortedDesc\">\n        </kendo-grid-columnmenu-item>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: SortService }, { type: i0.Renderer2 }]; } });\n\n/**\n * Represents the component for resizing the specified column to the minimum possible width so that it fits the header or cell content without wrapping.\n * The component can be placed inside a [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * > To enable the autosize-column option, set the [`resizable`]({% slug api_grid_gridcomponent %}#toc-resizable)\n * > property of the Grid to `true`.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) and `column` that are passed by\n * > the template to the `service` and `column` input of the `kendo-grid-columnmenu-autosize-column` component.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\" let-column=\"column\">\n *              <kendo-grid-columnmenu-autosize-column [column]=\"column\" [service]=\"service\">\n *              </kendo-grid-columnmenu-autosize-column>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\nclass ColumnMenuAutoSizeColumnComponent extends ColumnMenuItemBase {\n    constructor(localization, ctx) {\n        super();\n        this.localization = localization;\n        this.ctx = ctx;\n    }\n    ngOnInit() {\n        const isVirtualColumns = this.ctx.grid.columnMenuTemplate && this.ctx.grid.virtualColumns;\n        if (isVirtualColumns && isDevMode()) {\n            console.warn(ColunnMenuErrorMessages.autoSizeColumn);\n        }\n    }\n    autoSizeColumn() {\n        autoSizeColumn(this.ctx.grid, this.service, this.column);\n    }\n}\nColumnMenuAutoSizeColumnComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuAutoSizeColumnComponent, deps: [{ token: i1.LocalizationService }, { token: ContextService }], target: i0.ɵɵFactoryTarget.Component });\nColumnMenuAutoSizeColumnComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnMenuAutoSizeColumnComponent, selector: \"kendo-grid-columnmenu-autosize-column\", inputs: { column: \"column\" }, usesInheritance: true, ngImport: i0, template: `\n        <kendo-grid-columnmenu-item\n            *ngIf=\"!this.ctx.grid.virtualColumns\"\n            class=\"k-grid-columnmenu-autosize-column\"\n            [text]=\"localization.get('autosizeThisColumn')\"\n            icon=\"max-width\"\n            (itemClick)=\"autoSizeColumn()\"\n        >\n        </kendo-grid-columnmenu-item>\n    `, isInline: true, components: [{ type: ColumnMenuItemComponent, selector: \"kendo-grid-columnmenu-item\", inputs: [\"icon\", \"text\", \"selected\", \"disabled\", \"expanded\"], outputs: [\"itemClick\", \"expand\", \"collapse\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuAutoSizeColumnComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-columnmenu-autosize-column',\n                    template: `\n        <kendo-grid-columnmenu-item\n            *ngIf=\"!this.ctx.grid.virtualColumns\"\n            class=\"k-grid-columnmenu-autosize-column\"\n            [text]=\"localization.get('autosizeThisColumn')\"\n            icon=\"max-width\"\n            (itemClick)=\"autoSizeColumn()\"\n        >\n        </kendo-grid-columnmenu-item>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: ContextService }]; }, propDecorators: { column: [{\n                type: Input\n            }] } });\n\n/**\n * Represents the component for resizing all columns to the minimum possible width so that they fit the widest header or cell content without wrapping.\n * The component can be placed inside a [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * > To enable the autosize-all-columns option, set the [`resizable`]({% slug api_grid_gridcomponent %}#toc-resizable)\n * > property of the Grid to `true`.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the `service` input of the `kendo-grid-columnmenu-autosize-all-columns` component.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-autosize-all-columns [service]=\"service\">\n *              </kendo-grid-columnmenu-autosize-all-columns>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\nclass ColumnMenuAutoSizeAllColumnsComponent extends ColumnMenuItemBase {\n    constructor(localization, ctx) {\n        super();\n        this.localization = localization;\n        this.ctx = ctx;\n    }\n    ngOnInit() {\n        const isVirtualColumns = this.ctx.grid.columnMenuTemplate && this.ctx.grid.virtualColumns;\n        if (isVirtualColumns && isDevMode()) {\n            console.warn(ColunnMenuErrorMessages.autoSizeAllColumns);\n        }\n    }\n    autoSizeAllColumns() {\n        autoSizeColumn(this.ctx.grid, this.service);\n    }\n}\nColumnMenuAutoSizeAllColumnsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuAutoSizeAllColumnsComponent, deps: [{ token: i1.LocalizationService }, { token: ContextService }], target: i0.ɵɵFactoryTarget.Component });\nColumnMenuAutoSizeAllColumnsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnMenuAutoSizeAllColumnsComponent, selector: \"kendo-grid-columnmenu-autosize-all-columns\", usesInheritance: true, ngImport: i0, template: `\n        <kendo-grid-columnmenu-item\n            *ngIf=\"!this.ctx.grid.virtualColumns\"\n            [text]=\"localization.get('autosizeAllColumns')\"\n            icon=\"display-inline-block\"\n            (itemClick)=\"autoSizeAllColumns()\"\n        >\n        </kendo-grid-columnmenu-item>\n    `, isInline: true, components: [{ type: ColumnMenuItemComponent, selector: \"kendo-grid-columnmenu-item\", inputs: [\"icon\", \"text\", \"selected\", \"disabled\", \"expanded\"], outputs: [\"itemClick\", \"expand\", \"collapse\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuAutoSizeAllColumnsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-columnmenu-autosize-all-columns',\n                    template: `\n        <kendo-grid-columnmenu-item\n            *ngIf=\"!this.ctx.grid.virtualColumns\"\n            [text]=\"localization.get('autosizeAllColumns')\"\n            icon=\"display-inline-block\"\n            (itemClick)=\"autoSizeAllColumns()\"\n        >\n        </kendo-grid-columnmenu-item>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: ContextService }]; } });\n\nconst POPUP_CLASS = 'k-grid-columnmenu-popup';\n/**\n * Represents the [column menu]({% slug columnmenu_grid %}) component.\n */\nclass ColumnMenuComponent {\n    constructor(navigationService, popupService, localization, service, ctx) {\n        this.navigationService = navigationService;\n        this.popupService = popupService;\n        this.localization = localization;\n        this.service = service;\n        this.ctx = ctx;\n        /**\n         * @hidden\n         */\n        this.standalone = true;\n        /**\n         * The settings for the Column Menu.\n         */\n        this.settings = {};\n        /**\n         * @hidden\n         */\n        this.sortable = true;\n        /**\n         * @hidden\n         */\n        this.tabIndex = '-1';\n        /**\n         * @hidden\n         */\n        this.expandedFilter = false;\n        /**\n         * @hidden\n         */\n        this.expandedColumns = false;\n        /**\n         * @hidden\n         */\n        this.expandedPosition = false;\n        this.closeSubscription = service.closeMenu.subscribe(this.close.bind(this));\n    }\n    /**\n     * @hidden\n     */\n    get isActive() {\n        return (this.hasFilter && filtersByField(this.filter, this.column.field).length > 0) ||\n            (!this.sortable && this.hasSort && this.sort.find(descriptor => descriptor.field === this.column.field));\n    }\n    /**\n     * @hidden\n     */\n    get hasFilter() {\n        return hasFilter(this.settings, this.column);\n    }\n    /**\n     * @hidden\n     */\n    get hasSort() {\n        return hasSort(this.settings, this.column);\n    }\n    /**\n     * @hidden\n     */\n    get hasColumnChooser() {\n        return hasColumnChooser(this.settings);\n    }\n    /**\n     * @hidden\n     */\n    get hasAutoSizeColumn() {\n        return hasAutoSizeColumn(this.settings);\n    }\n    /**\n     * @hidden\n     */\n    get hasAutoSizeAllColumns() {\n        return hasAutoSizeAllColumns(this.settings);\n    }\n    /**\n     * @hidden\n     */\n    get hasLock() {\n        return hasLock(this.settings, this.column);\n    }\n    /**\n     * @hidden\n     */\n    get hasStick() {\n        return hasStick(this.settings, this.column);\n    }\n    /**\n     * @hidden\n     */\n    get hasPosition() {\n        return hasPosition(this.settings, this.column);\n    }\n    ngAfterViewInit() {\n        if (this.ctx.grid.virtualColumns && isDevMode()) {\n            if (this.settings.autoSizeAllColumns) {\n                this.settings.autoSizeAllColumns = false;\n                console.warn(ColunnMenuErrorMessages.autoSizeAllColumns);\n            }\n            if (this.settings.autoSizeColumn) {\n                this.settings.autoSizeColumn = false;\n                console.warn(ColunnMenuErrorMessages.autoSizeColumn);\n            }\n        }\n    }\n    ngOnChanges() {\n        this.service.column = this.column;\n        this.service.sort = this.sort;\n        this.service.filter = this.filter;\n        this.service.sortable = this.sortable;\n    }\n    ngOnDestroy() {\n        this.close();\n        this.closeSubscription.unsubscribe();\n    }\n    /**\n     * @hidden\n     */\n    toggle(e, anchor, template) {\n        if (e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n        this.expandedFilter = this.getExpandedState(this.settings.filter);\n        this.expandedColumns = this.getExpandedState(this.settings.columnChooser);\n        this.expandedPosition = this.getExpandedState(this.settings.setColumnPosition);\n        this.popupRef = this.popupService.open(anchor, template, this.popupRef, POPUP_CLASS);\n        if (!this.popupRef) {\n            if (this.navigationService.tableEnabled) {\n                this.navigationService.focusCell(0, this.column.leafIndex);\n            }\n            else {\n                this.anchor.nativeElement.focus();\n            }\n        }\n    }\n    /**\n     * @hidden\n     */\n    close() {\n        this.popupService.destroy();\n        this.popupRef = null;\n        if (this.navigationService.tableEnabled) {\n            this.navigationService.focusCell(0, this.column.leafIndex);\n        }\n        else {\n            this.anchor.nativeElement.focus();\n        }\n    }\n    /**\n     * @hidden\n     */\n    get columnMenuTitle() {\n        const localizationMsg = this.localization.get('columnMenu') || '';\n        const columnName = this.column.title || this.column.field;\n        return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n    getExpandedState(menuItemSettings) {\n        return typeof (menuItemSettings) === 'object' ? menuItemSettings.expanded : false;\n    }\n}\nColumnMenuComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuComponent, deps: [{ token: NavigationService }, { token: SinglePopupService }, { token: i1.LocalizationService }, { token: ColumnMenuService }, { token: ContextService }], target: i0.ɵɵFactoryTarget.Component });\nColumnMenuComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnMenuComponent, selector: \"kendo-grid-column-menu\", inputs: { standalone: \"standalone\", column: \"column\", settings: \"settings\", sort: \"sort\", filter: \"filter\", sortable: \"sortable\", columnMenuTemplate: \"columnMenuTemplate\", tabIndex: \"tabIndex\" }, host: { properties: { \"class.k-grid-column-menu-standalone\": \"this.standalone\" } }, providers: [\n        ColumnMenuService,\n        MenuTabbingService\n    ], viewQueries: [{ propertyName: \"anchor\", first: true, predicate: [\"anchor\"], descendants: true, static: true }, { propertyName: \"template\", first: true, predicate: [\"template\"], descendants: true, read: TemplateRef, static: true }], usesOnChanges: true, ngImport: i0, template: `\n        <a #anchor\n            class=\"k-grid-header-menu k-grid-column-menu\"\n            [ngClass]=\"{ 'k-active': isActive }\"\n            (click)=\"toggle($event, anchor, template)\"\n            (keydown.enter)=\"$event.stopImmediatePropagation()\"\n            href=\"#\"\n            [tabindex]=\"tabIndex\"\n            [attr.title]=\"columnMenuTitle\">\n            <span class=\"k-icon k-i-more-vertical\"></span>\n        </a>\n        <ng-template #template>\n            <ng-container\n                [ngTemplateOutlet]=\"column.columnMenuTemplateRef || columnMenuTemplate || defaultTemplate\"\n                [ngTemplateOutletContext]=\"{ service: service, column: column }\">\n            </ng-container>\n        </ng-template>\n        <ng-template #defaultTemplate>\n            <kendo-grid-columnmenu-container\n                (keydown.escape)=\"close()\"\n                (keydown.enter)=\"$event.stopImmediatePropagation()\">\n                <kendo-grid-columnmenu-sort #sortItem [kendoGridColumnMenuItem]=\"sortItem\" *ngIf=\"hasSort\" [service]=\"service\">\n                </kendo-grid-columnmenu-sort>\n                <kendo-grid-columnmenu-lock #lockItem *ngIf=\"hasLock && !hasPosition\" [kendoGridColumnMenuItem]=\"lockItem\" [service]=\"service\">\n                </kendo-grid-columnmenu-lock>\n                <kendo-grid-columnmenu-stick #stickItem *ngIf=\"hasStick && !hasPosition\" [kendoGridColumnMenuItem]=\"stickItem\" [service]=\"service\">\n                </kendo-grid-columnmenu-stick>\n                <kendo-grid-columnmenu-position\n                    #positionItem\n                    *ngIf=\"hasPosition\"\n                    [showLock]=\"hasLock\"\n                    [showStick]=\"hasStick\"\n                    [kendoGridColumnMenuItem]=\"positionItem\"\n                    [service]=\"service\"\n                    [expanded]=\"expandedPosition\">\n                </kendo-grid-columnmenu-position>\n                <span [style.borderColor]=\"'rgba(0, 0, 0, 0.08)'\" *ngIf=\"hasColumnChooser || hasAutoSizeColumn || hasAutoSizeAllColumns\" class=\"k-separator\"></span>\n                <kendo-grid-columnmenu-chooser\n                    #chooserItem\n                    *ngIf=\"hasColumnChooser\"\n                    [kendoGridColumnMenuItem]=\"chooserItem\"\n                    [service]=\"service\"\n                    [expanded]=\"expandedColumns\">\n                </kendo-grid-columnmenu-chooser>\n                <kendo-grid-columnmenu-autosize-column\n                    #autoSizeColumnItem\n                    *ngIf=\"hasAutoSizeColumn\"\n                    [service]=\"service\"\n                    [kendoGridColumnMenuItem]=\"autoSizeColumnItem\"\n                    [column]=\"column\"\n                >\n                </kendo-grid-columnmenu-autosize-column>\n\n                <kendo-grid-columnmenu-autosize-all-columns\n                    #autoSizeAllColumnsItem\n                    *ngIf=\"hasAutoSizeAllColumns\"\n                    [service]=\"service\"\n                    [kendoGridColumnMenuItem]=\"autoSizeAllColumnsItem\"\n                >\n                </kendo-grid-columnmenu-autosize-all-columns>\n                <span [style.borderColor]=\"'rgba(0, 0, 0, 0.08)'\" *ngIf=\"hasColumnChooser || hasAutoSizeColumn || hasAutoSizeAllColumns\" class=\"k-separator\"></span>\n                <kendo-grid-columnmenu-filter\n                    #filterItem\n                    *ngIf=\"hasFilter\"\n                    [kendoGridColumnMenuItem]=\"filterItem\"\n                    [service]=\"service\"\n                    [expanded]=\"expandedFilter\">\n                </kendo-grid-columnmenu-filter>\n            </kendo-grid-columnmenu-container>\n        </ng-template>\n    `, isInline: true, components: [{ type: ColumnMenuContainerComponent, selector: \"kendo-grid-columnmenu-container\" }, { type: ColumnMenuSortComponent, selector: \"kendo-grid-columnmenu-sort\" }, { type: ColumnMenuLockComponent, selector: \"kendo-grid-columnmenu-lock\" }, { type: ColumnMenuStickComponent, selector: \"kendo-grid-columnmenu-stick\" }, { type: ColumnMenuPositionComponent, selector: \"kendo-grid-columnmenu-position\", inputs: [\"expanded\", \"showLock\", \"showStick\", \"isLast\"], outputs: [\"expand\", \"collapse\"] }, { type: ColumnMenuChooserComponent, selector: \"kendo-grid-columnmenu-chooser\", inputs: [\"expanded\", \"isLast\"], outputs: [\"expand\", \"collapse\"] }, { type: ColumnMenuAutoSizeColumnComponent, selector: \"kendo-grid-columnmenu-autosize-column\", inputs: [\"column\"] }, { type: ColumnMenuAutoSizeAllColumnsComponent, selector: \"kendo-grid-columnmenu-autosize-all-columns\" }, { type: ColumnMenuFilterComponent, selector: \"kendo-grid-columnmenu-filter\", inputs: [\"expanded\", \"isLast\"], outputs: [\"expand\", \"collapse\"] }], directives: [{ type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: ColumnMenuItemDirective, selector: \"[kendoGridColumnMenuItem]\", inputs: [\"kendoGridColumnMenuItem\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        ColumnMenuService,\n                        MenuTabbingService\n                    ],\n                    selector: 'kendo-grid-column-menu',\n                    template: `\n        <a #anchor\n            class=\"k-grid-header-menu k-grid-column-menu\"\n            [ngClass]=\"{ 'k-active': isActive }\"\n            (click)=\"toggle($event, anchor, template)\"\n            (keydown.enter)=\"$event.stopImmediatePropagation()\"\n            href=\"#\"\n            [tabindex]=\"tabIndex\"\n            [attr.title]=\"columnMenuTitle\">\n            <span class=\"k-icon k-i-more-vertical\"></span>\n        </a>\n        <ng-template #template>\n            <ng-container\n                [ngTemplateOutlet]=\"column.columnMenuTemplateRef || columnMenuTemplate || defaultTemplate\"\n                [ngTemplateOutletContext]=\"{ service: service, column: column }\">\n            </ng-container>\n        </ng-template>\n        <ng-template #defaultTemplate>\n            <kendo-grid-columnmenu-container\n                (keydown.escape)=\"close()\"\n                (keydown.enter)=\"$event.stopImmediatePropagation()\">\n                <kendo-grid-columnmenu-sort #sortItem [kendoGridColumnMenuItem]=\"sortItem\" *ngIf=\"hasSort\" [service]=\"service\">\n                </kendo-grid-columnmenu-sort>\n                <kendo-grid-columnmenu-lock #lockItem *ngIf=\"hasLock && !hasPosition\" [kendoGridColumnMenuItem]=\"lockItem\" [service]=\"service\">\n                </kendo-grid-columnmenu-lock>\n                <kendo-grid-columnmenu-stick #stickItem *ngIf=\"hasStick && !hasPosition\" [kendoGridColumnMenuItem]=\"stickItem\" [service]=\"service\">\n                </kendo-grid-columnmenu-stick>\n                <kendo-grid-columnmenu-position\n                    #positionItem\n                    *ngIf=\"hasPosition\"\n                    [showLock]=\"hasLock\"\n                    [showStick]=\"hasStick\"\n                    [kendoGridColumnMenuItem]=\"positionItem\"\n                    [service]=\"service\"\n                    [expanded]=\"expandedPosition\">\n                </kendo-grid-columnmenu-position>\n                <span [style.borderColor]=\"'rgba(0, 0, 0, 0.08)'\" *ngIf=\"hasColumnChooser || hasAutoSizeColumn || hasAutoSizeAllColumns\" class=\"k-separator\"></span>\n                <kendo-grid-columnmenu-chooser\n                    #chooserItem\n                    *ngIf=\"hasColumnChooser\"\n                    [kendoGridColumnMenuItem]=\"chooserItem\"\n                    [service]=\"service\"\n                    [expanded]=\"expandedColumns\">\n                </kendo-grid-columnmenu-chooser>\n                <kendo-grid-columnmenu-autosize-column\n                    #autoSizeColumnItem\n                    *ngIf=\"hasAutoSizeColumn\"\n                    [service]=\"service\"\n                    [kendoGridColumnMenuItem]=\"autoSizeColumnItem\"\n                    [column]=\"column\"\n                >\n                </kendo-grid-columnmenu-autosize-column>\n\n                <kendo-grid-columnmenu-autosize-all-columns\n                    #autoSizeAllColumnsItem\n                    *ngIf=\"hasAutoSizeAllColumns\"\n                    [service]=\"service\"\n                    [kendoGridColumnMenuItem]=\"autoSizeAllColumnsItem\"\n                >\n                </kendo-grid-columnmenu-autosize-all-columns>\n                <span [style.borderColor]=\"'rgba(0, 0, 0, 0.08)'\" *ngIf=\"hasColumnChooser || hasAutoSizeColumn || hasAutoSizeAllColumns\" class=\"k-separator\"></span>\n                <kendo-grid-columnmenu-filter\n                    #filterItem\n                    *ngIf=\"hasFilter\"\n                    [kendoGridColumnMenuItem]=\"filterItem\"\n                    [service]=\"service\"\n                    [expanded]=\"expandedFilter\">\n                </kendo-grid-columnmenu-filter>\n            </kendo-grid-columnmenu-container>\n        </ng-template>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: NavigationService }, { type: SinglePopupService }, { type: i1.LocalizationService }, { type: ColumnMenuService }, { type: ContextService }]; }, propDecorators: { standalone: [{\n                type: HostBinding,\n                args: ['class.k-grid-column-menu-standalone']\n            }, {\n                type: Input\n            }], column: [{\n                type: Input\n            }], settings: [{\n                type: Input\n            }], sort: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], sortable: [{\n                type: Input\n            }], columnMenuTemplate: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], anchor: [{\n                type: ViewChild,\n                args: ['anchor', { static: true }]\n            }], template: [{\n                type: ViewChild,\n                args: ['template', { static: true, read: TemplateRef }]\n            }] } });\n\n/**\n * Represents a component which accommodates the filter operators.\n */\nclass FilterCellOperatorsComponent {\n    constructor(localization) {\n        this.localization = localization;\n        this.clearText = 'Clear';\n        /**\n         * The filter operators that will be displayed.\n         */\n        this.operators = [];\n        /**\n         * Determines if the list of operators will be displayed.\n         * @type {boolean}\n         */\n        this.showOperators = true;\n        /**\n         * Fires when the operator is selected.\n         * @type {EventEmitter<string>}\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires when the **Clear** button is clicked.\n         * @type {EventEmitter<{}>}\n         */\n        this.clear = new EventEmitter();\n    }\n    /**\n     * @hidden\n     */\n    get hostClasses() {\n        return true;\n    }\n    /**\n     * @hidden\n     */\n    onChange(dataItem) {\n        this.valueChange.emit(dataItem);\n    }\n    /**\n     * @hidden\n     */\n    clearClick() {\n        this.clear.emit();\n        return false;\n    }\n    /**\n     * @hidden\n     */\n    clearKeydown(args) {\n        if (args.keyCode === Keys.Enter || args.keyCode === Keys.Space) {\n            this.clear.emit();\n        }\n    }\n    /**\n     * @hidden\n     */\n    dropdownKeydown(args) {\n        if (args.defaultPrevented) {\n            return;\n        }\n        if (args.keyCode === Keys.Enter && !this.dropdown.isOpen) {\n            this.dropdown.toggle(true);\n            args.preventDefault();\n        }\n    }\n    ngOnInit() {\n        this.subscription = this.localization.changes.subscribe(() => this.clearText = this.localization.get(\"filterClearButton\"));\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nFilterCellOperatorsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterCellOperatorsComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nFilterCellOperatorsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FilterCellOperatorsComponent, selector: \"kendo-grid-filter-cell-operators\", inputs: { operators: \"operators\", showButton: \"showButton\", showOperators: \"showOperators\", value: \"value\" }, outputs: { valueChange: \"valueChange\", clear: \"clear\" }, host: { properties: { \"class.k-filtercell-operator\": \"this.hostClasses\" } }, viewQueries: [{ propertyName: \"dropdown\", first: true, predicate: [\"dropdown\"], descendants: true }], ngImport: i0, template: `\n        <kendo-dropdownlist\n            #dropdown\n            *ngIf=\"showOperators\"\n            kendoGridFocusable\n            [data]=\"operators\"\n            class=\"k-dropdown-operator\"\n            (valueChange)=\"onChange($event)\"\n            [value]=\"value\"\n            iconClass=\"k-i-filter\"\n            [valuePrimitive]=\"true\"\n            textField=\"text\"\n            [popupSettings]=\"{ width: 'auto' }\"\n            valueField=\"value\"\n            (keydown)=\"dropdownKeydown($event)\">\n        </kendo-dropdownlist>\n        <button type=\"button\"\n            kendoGridFocusable\n            *ngIf=\"showButton\"\n            class=\"k-button k-button-solid-base k-button-solid k-button-md k-rounded-md k-button-rectangle k-icon-button\"\n            [title]=\"clearText\"\n            (click)=\"clearClick()\"\n            (keydown)=\"clearKeydown($event)\">\n                <span class=\"k-icon k-button-icon k-i-filter-clear\"></span>\n        </button>\n    `, isInline: true, components: [{ type: i1$4.DropDownListComponent, selector: \"kendo-dropdownlist\", inputs: [\"iconClass\", \"loading\", \"data\", \"value\", \"textField\", \"valueField\", \"popupSettings\", \"listHeight\", \"defaultItem\", \"disabled\", \"itemDisabled\", \"readonly\", \"filterable\", \"virtual\", \"ignoreCase\", \"delay\", \"valuePrimitive\", \"tabindex\", \"tabIndex\", \"size\", \"rounded\", \"fillMode\", \"id\"], outputs: [\"valueChange\", \"filterChange\", \"selectionChange\", \"open\", \"opened\", \"close\", \"closed\", \"focus\", \"blur\"], exportAs: [\"kendoDropDownList\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: FocusableDirective, selector: \"[kendoGridFocusable],\\n        [kendoGridEditCommand],\\n        [kendoGridRemoveCommand],\\n        [kendoGridSaveCommand],\\n        [kendoGridCancelCommand],\\n        [kendoGridSelectionCheckbox]\\n    \", inputs: [\"kendoGridFocusable\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterCellOperatorsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-filter-cell-operators',\n                    template: `\n        <kendo-dropdownlist\n            #dropdown\n            *ngIf=\"showOperators\"\n            kendoGridFocusable\n            [data]=\"operators\"\n            class=\"k-dropdown-operator\"\n            (valueChange)=\"onChange($event)\"\n            [value]=\"value\"\n            iconClass=\"k-i-filter\"\n            [valuePrimitive]=\"true\"\n            textField=\"text\"\n            [popupSettings]=\"{ width: 'auto' }\"\n            valueField=\"value\"\n            (keydown)=\"dropdownKeydown($event)\">\n        </kendo-dropdownlist>\n        <button type=\"button\"\n            kendoGridFocusable\n            *ngIf=\"showButton\"\n            class=\"k-button k-button-solid-base k-button-solid k-button-md k-rounded-md k-button-rectangle k-icon-button\"\n            [title]=\"clearText\"\n            (click)=\"clearClick()\"\n            (keydown)=\"clearKeydown($event)\">\n                <span class=\"k-icon k-button-icon k-i-filter-clear\"></span>\n        </button>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; }, propDecorators: { hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-filtercell-operator']\n            }], dropdown: [{\n                type: ViewChild,\n                args: ['dropdown', { static: false }]\n            }], operators: [{\n                type: Input\n            }], showButton: [{\n                type: Input\n            }], showOperators: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], clear: [{\n                type: Output\n            }] } });\n\nconst EMPTY_FILTER_OPERATORS = ['isnull', 'isnotnull', 'isempty', 'isnotempty'];\n/**\n * @hidden\n */\nclass FilterCellWrapperComponent extends FilterInputWrapperComponent {\n    constructor(filterService) {\n        super(filterService);\n        this.showOperators = true;\n    }\n    get hostClasses() {\n        return true;\n    }\n    get overrideBaseClasses() {\n        return false;\n    }\n    get showButton() {\n        const filter = this.currentFilter;\n        return isPresent(filter) && (!isNullOrEmptyString(filter.value) ||\n            EMPTY_FILTER_OPERATORS.indexOf(String(filter.operator)) >= 0);\n    }\n    filterChange(filter) {\n        this.applyFilter(filter);\n    }\n}\nFilterCellWrapperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterCellWrapperComponent, deps: [{ token: FilterService }], target: i0.ɵɵFactoryTarget.Component });\nFilterCellWrapperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FilterCellWrapperComponent, selector: \"kendo-grid-filter-wrapper-cell\", inputs: { showOperators: \"showOperators\" }, host: { properties: { \"class.k-filtercell-wrapper\": \"this.hostClasses\", \"class.k-filtercell\": \"this.overrideBaseClasses\" } }, usesInheritance: true, ngImport: i0, template: `\n        <ng-content></ng-content>\n        <kendo-grid-filter-cell-operators\n            [showOperators]=\"showOperators\"\n            [operators]=\"operators\"\n            (clear)=\"onClear()\"\n            [showButton]=\"showButton\"\n            [(value)]=\"currentOperator\">\n        </kendo-grid-filter-cell-operators>\n    `, isInline: true, components: [{ type: FilterCellOperatorsComponent, selector: \"kendo-grid-filter-cell-operators\", inputs: [\"operators\", \"showButton\", \"showOperators\", \"value\"], outputs: [\"valueChange\", \"clear\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterCellWrapperComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-filter-wrapper-cell',\n                    template: `\n        <ng-content></ng-content>\n        <kendo-grid-filter-cell-operators\n            [showOperators]=\"showOperators\"\n            [operators]=\"operators\"\n            (clear)=\"onClear()\"\n            [showButton]=\"showButton\"\n            [(value)]=\"currentOperator\">\n        </kendo-grid-filter-cell-operators>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: FilterService }]; }, propDecorators: { hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-filtercell-wrapper']\n            }], overrideBaseClasses: [{\n                type: HostBinding,\n                args: ['class.k-filtercell']\n            }], showOperators: [{\n                type: Input\n            }] } });\n\n/**\n * Represents a string-filter cell component\n * ([see example]({% slug filter_row %}#toc-hiding-filter-operators)).\n *\n * @example\n *\n *  ```html-no-run\n *      <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          <ng-template kendoGridFilterCellTemplate let-filter let-column=\"column\">\n *          <kendo-grid-string-filter-cell\n *              [showOperators]=\"false\"\n *              [column]=\"column\"\n *              [filter]=\"filter\">\n *          </kendo-grid-string-filter-cell>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\nclass StringFilterCellComponent extends StringFilterComponent {\n    constructor(filterService, localization) {\n        super(filterService, localization);\n        /**\n         * Determines the delay time (in milliseconds) before the filter value is submitted.\n         * A value of `0` indicates no delay. The default value is `500`.\n         * @type {boolean}\n         */\n        this.filterDelay = 500;\n        /**\n         * Determines if the drop-down filter operators will be displayed.\n         * The default value is `true`.\n         * @type {boolean}\n         */\n        this.showOperators = true;\n    }\n    /**\n     * @hidden\n     */\n    get columnLabel() {\n        const localizationMsg = this.localization.get('filterInputLabel') || '';\n        const columnName = this.column.title || this.column.field;\n        return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n}\nStringFilterCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: StringFilterCellComponent, deps: [{ token: FilterService }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nStringFilterCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: StringFilterCellComponent, selector: \"kendo-grid-string-filter-cell\", inputs: { filterDelay: \"filterDelay\", showOperators: \"showOperators\" }, usesInheritance: true, ngImport: i0, template: `\n        <kendo-grid-filter-wrapper-cell\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [showOperators]=\"showOperators\">\n            <input\n                kendoTextBox\n                kendoGridFocusable\n                kendoFilterInput\n                [columnLabel]=\"columnLabel\"\n                [filterDelay]=\"filterDelay\"\n                [ngModel]=\"currentFilter?.value\" />\n        </kendo-grid-filter-wrapper-cell>\n    `, isInline: true, components: [{ type: FilterCellWrapperComponent, selector: \"kendo-grid-filter-wrapper-cell\", inputs: [\"showOperators\"] }], directives: [{ type: i4$1.TextBoxDirective, selector: \"input[kendoTextBox]\", inputs: [\"value\"] }, { type: i4$2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: FocusableDirective, selector: \"[kendoGridFocusable],\\n        [kendoGridEditCommand],\\n        [kendoGridRemoveCommand],\\n        [kendoGridSaveCommand],\\n        [kendoGridCancelCommand],\\n        [kendoGridSelectionCheckbox]\\n    \", inputs: [\"kendoGridFocusable\"] }, { type: FilterInputDirective, selector: \"[kendoFilterInput]\", inputs: [\"filterDelay\", \"columnLabel\", \"value\"] }, { type: i4$2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i4$2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: StringFilterCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-string-filter-cell',\n                    template: `\n        <kendo-grid-filter-wrapper-cell\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [showOperators]=\"showOperators\">\n            <input\n                kendoTextBox\n                kendoGridFocusable\n                kendoFilterInput\n                [columnLabel]=\"columnLabel\"\n                [filterDelay]=\"filterDelay\"\n                [ngModel]=\"currentFilter?.value\" />\n        </kendo-grid-filter-wrapper-cell>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: FilterService }, { type: i1.LocalizationService }]; }, propDecorators: { filterDelay: [{\n                type: Input\n            }], showOperators: [{\n                type: Input\n            }] } });\n\n/**\n * Represents a numeric filter cell.\n *\n * @example\n *  ```html-no-run\n *      <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          <ng-template kendoGridFilterCellTemplate let-filter let-column=\"column\">\n *          <kendo-grid-numeric-filter-cell\n *              [column]=\"column\"\n *              [filter]=\"filter\">\n *          </kendo-grid-numeric-filter-cell>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\nclass NumericFilterCellComponent extends NumericFilterComponent {\n    constructor(filterService, localization) {\n        super(filterService, localization);\n        this.localization = localization;\n        /**\n         * Determines the delay time (in milliseconds) before the filter value is submitted.\n         * A value of `0` indicates no delay. The default value is `500`.\n         * @type {boolean}\n         */\n        this.filterDelay = 500;\n        /**\n         * Determines if the drop-down filter operators will be displayed.\n         * The default value is `true`.\n         * @type {boolean}\n         */\n        this.showOperators = true;\n    }\n    /**\n     * @hidden\n     */\n    messageFor(key) {\n        return this.localization.get(key);\n    }\n    /**\n     * @hidden\n     */\n    get columnLabel() {\n        const localizationMsg = this.localization.get('filterInputLabel') || '';\n        const columnName = this.column.title || this.column.field;\n        return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n}\nNumericFilterCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NumericFilterCellComponent, deps: [{ token: FilterService }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nNumericFilterCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: NumericFilterCellComponent, selector: \"kendo-grid-numeric-filter-cell\", inputs: { filterDelay: \"filterDelay\", showOperators: \"showOperators\" }, usesInheritance: true, ngImport: i0, template: `\n        <kendo-grid-filter-wrapper-cell\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [showOperators]=\"showOperators\"\n        >\n            <kendo-numerictextbox\n                kendoGridFocusable\n                kendoFilterInput\n                [columnLabel]=\"columnLabel\"\n                [filterDelay]=\"filterDelay\"\n                [autoCorrect]=\"true\"\n                [value]=\"currentFilter?.value\"\n                [format]=\"format\"\n                [decimals]=\"decimals\"\n                [spinners]=\"spinners\"\n                [min]=\"min\"\n                [max]=\"max\"\n                [step]=\"step\"\n            >\n                <kendo-numerictextbox-messages\n                    [increment]=\"messageFor('filterNumericIncrement')\"\n                    [decrement]=\"messageFor('filterNumericDecrement')\"\n                >\n                </kendo-numerictextbox-messages>\n            </kendo-numerictextbox>\n        </kendo-grid-filter-wrapper-cell>\n    `, isInline: true, components: [{ type: FilterCellWrapperComponent, selector: \"kendo-grid-filter-wrapper-cell\", inputs: [\"showOperators\"] }, { type: i4$1.NumericTextBoxComponent, selector: \"kendo-numerictextbox\", inputs: [\"focusableId\", \"disabled\", \"readonly\", \"title\", \"autoCorrect\", \"format\", \"max\", \"min\", \"decimals\", \"placeholder\", \"step\", \"spinners\", \"rangeValidation\", \"tabindex\", \"tabIndex\", \"changeValueOnScroll\", \"selectOnFocus\", \"value\", \"maxlength\", \"size\", \"rounded\", \"fillMode\"], outputs: [\"valueChange\", \"focus\", \"blur\"], exportAs: [\"kendoNumericTextBox\"] }, { type: i4$1.NumericTextBoxCustomMessagesComponent, selector: \"kendo-numerictextbox-messages\" }], directives: [{ type: FocusableDirective, selector: \"[kendoGridFocusable],\\n        [kendoGridEditCommand],\\n        [kendoGridRemoveCommand],\\n        [kendoGridSaveCommand],\\n        [kendoGridCancelCommand],\\n        [kendoGridSelectionCheckbox]\\n    \", inputs: [\"kendoGridFocusable\"] }, { type: FilterInputDirective, selector: \"[kendoFilterInput]\", inputs: [\"filterDelay\", \"columnLabel\", \"value\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NumericFilterCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-numeric-filter-cell',\n                    template: `\n        <kendo-grid-filter-wrapper-cell\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [showOperators]=\"showOperators\"\n        >\n            <kendo-numerictextbox\n                kendoGridFocusable\n                kendoFilterInput\n                [columnLabel]=\"columnLabel\"\n                [filterDelay]=\"filterDelay\"\n                [autoCorrect]=\"true\"\n                [value]=\"currentFilter?.value\"\n                [format]=\"format\"\n                [decimals]=\"decimals\"\n                [spinners]=\"spinners\"\n                [min]=\"min\"\n                [max]=\"max\"\n                [step]=\"step\"\n            >\n                <kendo-numerictextbox-messages\n                    [increment]=\"messageFor('filterNumericIncrement')\"\n                    [decrement]=\"messageFor('filterNumericDecrement')\"\n                >\n                </kendo-numerictextbox-messages>\n            </kendo-numerictextbox>\n        </kendo-grid-filter-wrapper-cell>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: FilterService }, { type: i1.LocalizationService }]; }, propDecorators: { filterDelay: [{\n                type: Input\n            }], showOperators: [{\n                type: Input\n            }] } });\n\n/**\n * Represents a Boolean filter-cell component.\n *\n * @example\n *\n *  ```html-no-run\n *      <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          <ng-template kendoGridFilterCellTemplate let-filter let-column=\"column\">\n *          <kendo-grid-boolean-filter-cell\n *              [column]=\"column\"\n *              [filter]=\"filter\">\n *          </kendo-grid-boolean-filter-cell>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\nclass BooleanFilterCellComponent extends BooleanFilterComponent {\n    constructor(filterService, localization, cd) {\n        super(filterService, localization);\n        this.cd = cd;\n    }\n    localizationChange() {\n        super.localizationChange();\n        this.cd.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    get columnLabel() {\n        const localizationMsg = this.localization.get('filterInputLabel') || '';\n        const columnName = this.column.title || this.column.field;\n        return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n}\nBooleanFilterCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BooleanFilterCellComponent, deps: [{ token: FilterService }, { token: i1.LocalizationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nBooleanFilterCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: BooleanFilterCellComponent, selector: \"kendo-grid-boolean-filter-cell\", usesInheritance: true, ngImport: i0, template: `\n        <kendo-grid-filter-wrapper-cell\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [showOperators]=\"false\"\n            [defaultOperator]=\"operator\">\n            <kendo-dropdownlist\n                kendoFilterInput\n                kendoGridFocusable\n                [columnLabel]=\"columnLabel\"\n                [defaultItem]=\"defaultItem\"\n                [data]=\"items\"\n                textField=\"text\"\n                valueField=\"value\"\n                [popupSettings]=\"{ width: 'auto' }\"\n                [valuePrimitive]=\"true\"\n                [value]=\"currentFilter?.value\">\n            </kendo-dropdownlist>\n        </kendo-grid-filter-wrapper-cell>\n    `, isInline: true, components: [{ type: FilterCellWrapperComponent, selector: \"kendo-grid-filter-wrapper-cell\", inputs: [\"showOperators\"] }, { type: i1$4.DropDownListComponent, selector: \"kendo-dropdownlist\", inputs: [\"iconClass\", \"loading\", \"data\", \"value\", \"textField\", \"valueField\", \"popupSettings\", \"listHeight\", \"defaultItem\", \"disabled\", \"itemDisabled\", \"readonly\", \"filterable\", \"virtual\", \"ignoreCase\", \"delay\", \"valuePrimitive\", \"tabindex\", \"tabIndex\", \"size\", \"rounded\", \"fillMode\", \"id\"], outputs: [\"valueChange\", \"filterChange\", \"selectionChange\", \"open\", \"opened\", \"close\", \"closed\", \"focus\", \"blur\"], exportAs: [\"kendoDropDownList\"] }], directives: [{ type: FilterInputDirective, selector: \"[kendoFilterInput]\", inputs: [\"filterDelay\", \"columnLabel\", \"value\"] }, { type: FocusableDirective, selector: \"[kendoGridFocusable],\\n        [kendoGridEditCommand],\\n        [kendoGridRemoveCommand],\\n        [kendoGridSaveCommand],\\n        [kendoGridCancelCommand],\\n        [kendoGridSelectionCheckbox]\\n    \", inputs: [\"kendoGridFocusable\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BooleanFilterCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-boolean-filter-cell',\n                    template: `\n        <kendo-grid-filter-wrapper-cell\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [showOperators]=\"false\"\n            [defaultOperator]=\"operator\">\n            <kendo-dropdownlist\n                kendoFilterInput\n                kendoGridFocusable\n                [columnLabel]=\"columnLabel\"\n                [defaultItem]=\"defaultItem\"\n                [data]=\"items\"\n                textField=\"text\"\n                valueField=\"value\"\n                [popupSettings]=\"{ width: 'auto' }\"\n                [valuePrimitive]=\"true\"\n                [value]=\"currentFilter?.value\">\n            </kendo-dropdownlist>\n        </kendo-grid-filter-wrapper-cell>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: FilterService }, { type: i1.LocalizationService }, { type: i0.ChangeDetectorRef }]; } });\n\n/**\n * Represents a date-filter cell component.\n *\n * @example\n *\n *  ```html-no-run\n *      <kendo-grid-column field=\"OrderDate\" title=\"Order Date\">\n *          <ng-template kendoGridFilterCellTemplate let-filter let-column=\"column\">\n *          <kendo-grid-date-filter-cell\n *              [showOperators]=\"false\"\n *              [column]=\"column\"\n *              [filter]=\"filter\">\n *          </kendo-grid-date-filter-cell>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\nclass DateFilterCellComponent extends DateFilterComponent {\n    constructor(filterService, localization) {\n        super(filterService, localization);\n        this.localization = localization;\n        /**\n         * Determines if the drop-down filter operators will be displayed. The default value is `true`.\n         * @type {boolean}\n         */\n        this.showOperators = true;\n    }\n    /**\n     * @hidden\n     */\n    messageFor(key) {\n        return this.localization.get(key);\n    }\n    /**\n     * @hidden\n     */\n    get columnLabel() {\n        const localizationMsg = this.localization.get('filterInputLabel') || '';\n        const columnName = this.column.title || this.column.field;\n        return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n}\nDateFilterCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DateFilterCellComponent, deps: [{ token: FilterService }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nDateFilterCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DateFilterCellComponent, selector: \"kendo-grid-date-filter-cell\", inputs: { showOperators: \"showOperators\" }, usesInheritance: true, ngImport: i0, template: `\n        <kendo-grid-filter-wrapper-cell\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [showOperators]=\"showOperators\"\n        >\n            <kendo-datepicker\n                kendoFilterInput\n                kendoGridFocusable\n                [columnLabel]=\"columnLabel\"\n                [value]=\"currentFilter?.value\"\n                [format]=\"format\"\n                [formatPlaceholder]=\"formatPlaceholder\"\n                [placeholder]=\"placeholder\"\n                [activeView]=\"activeView\"\n                [bottomView]=\"bottomView\"\n                [topView]=\"topView\"\n                [min]=\"min\"\n                [max]=\"max\"\n                [weekNumber]=\"weekNumber\"\n            >\n                <kendo-datepicker-messages\n                    [toggle]=\"messageFor('filterDateToggle')\"\n                    [today]=\"messageFor('filterDateToday')\"\n                >\n                </kendo-datepicker-messages>\n            </kendo-datepicker>\n        </kendo-grid-filter-wrapper-cell>\n    `, isInline: true, components: [{ type: FilterCellWrapperComponent, selector: \"kendo-grid-filter-wrapper-cell\", inputs: [\"showOperators\"] }, { type: i4$3.DatePickerComponent, selector: \"kendo-datepicker\", inputs: [\"cellTemplate\", \"monthCellTemplate\", \"yearCellTemplate\", \"decadeCellTemplate\", \"centuryCellTemplate\", \"weekNumberTemplate\", \"headerTitleTemplate\", \"navigationItemTemplate\", \"activeView\", \"bottomView\", \"topView\", \"calendarType\", \"animateCalendarNavigation\", \"disabled\", \"readonly\", \"readOnlyInput\", \"popupSettings\", \"navigation\", \"min\", \"max\", \"incompleteDateValidation\", \"focusedDate\", \"value\", \"format\", \"twoDigitYearMax\", \"formatPlaceholder\", \"placeholder\", \"tabindex\", \"tabIndex\", \"disabledDates\", \"title\", \"rangeValidation\", \"disabledDatesValidation\", \"weekNumber\", \"size\", \"rounded\", \"fillMode\"], outputs: [\"valueChange\", \"focus\", \"blur\", \"open\", \"close\"], exportAs: [\"kendo-datepicker\"] }, { type: i4$3.DatePickerCustomMessagesComponent, selector: \"kendo-datepicker-messages\" }], directives: [{ type: FilterInputDirective, selector: \"[kendoFilterInput]\", inputs: [\"filterDelay\", \"columnLabel\", \"value\"] }, { type: FocusableDirective, selector: \"[kendoGridFocusable],\\n        [kendoGridEditCommand],\\n        [kendoGridRemoveCommand],\\n        [kendoGridSaveCommand],\\n        [kendoGridCancelCommand],\\n        [kendoGridSelectionCheckbox]\\n    \", inputs: [\"kendoGridFocusable\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DateFilterCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-date-filter-cell',\n                    template: `\n        <kendo-grid-filter-wrapper-cell\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [showOperators]=\"showOperators\"\n        >\n            <kendo-datepicker\n                kendoFilterInput\n                kendoGridFocusable\n                [columnLabel]=\"columnLabel\"\n                [value]=\"currentFilter?.value\"\n                [format]=\"format\"\n                [formatPlaceholder]=\"formatPlaceholder\"\n                [placeholder]=\"placeholder\"\n                [activeView]=\"activeView\"\n                [bottomView]=\"bottomView\"\n                [topView]=\"topView\"\n                [min]=\"min\"\n                [max]=\"max\"\n                [weekNumber]=\"weekNumber\"\n            >\n                <kendo-datepicker-messages\n                    [toggle]=\"messageFor('filterDateToggle')\"\n                    [today]=\"messageFor('filterDateToday')\"\n                >\n                </kendo-datepicker-messages>\n            </kendo-datepicker>\n        </kendo-grid-filter-wrapper-cell>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: FilterService }, { type: i1.LocalizationService }]; }, propDecorators: { showOperators: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n *\n * > List the following components in the GridModule as `entryComponents`.\n */\nconst filterComponentFactory = (type) => ({\n    \"boolean\": BooleanFilterCellComponent,\n    \"date\": DateFilterCellComponent,\n    \"numeric\": NumericFilterCellComponent,\n    \"text\": StringFilterCellComponent\n}[type]);\n\n/**\n * @hidden\n */\nclass FilterCellHostDirective extends FilterHostDirective {\n    constructor(host, resolver) {\n        super(host, resolver);\n    }\n    componentType() {\n        if (!isNullOrEmptyString(this.column.filter)) {\n            return filterComponentFactory(this.column.filter);\n        }\n        return StringFilterCellComponent;\n    }\n}\nFilterCellHostDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterCellHostDirective, deps: [{ token: i0.ViewContainerRef }, { token: i0.ComponentFactoryResolver }], target: i0.ɵɵFactoryTarget.Directive });\nFilterCellHostDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FilterCellHostDirective, selector: \"[kendoFilterCellHost]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterCellHostDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoFilterCellHost]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ComponentFactoryResolver }]; } });\n\n/**\n * @hidden\n */\nclass FilterCellComponent {\n    constructor() {\n        this._templateContext = {};\n    }\n    get filter() {\n        return this._filter;\n    }\n    set filter(value) {\n        this._filter = cloneFilters(value);\n    }\n    get templateContext() {\n        this._templateContext.column = this.column;\n        this._templateContext.filter = this.filter;\n        this._templateContext['$implicit'] = this.filter;\n        return this._templateContext;\n    }\n    get hasTemplate() {\n        return isPresent(this.column.filterCellTemplateRef);\n    }\n    get isFilterable() {\n        return isPresent(this.column) && !isNullOrEmptyString(this.column.field) && this.column.filterable;\n    }\n}\nFilterCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterCellComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nFilterCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FilterCellComponent, selector: \"[kendoGridFilterCell]\", inputs: { column: \"column\", filter: \"filter\" }, ngImport: i0, template: `\n        <ng-container *ngIf=\"isFilterable\">\n            <ng-container [ngSwitch]=\"hasTemplate\">\n                <ng-container *ngSwitchCase=\"false\">\n                    <ng-container kendoFilterCellHost [column]=\"column\" [filter]=\"filter\"></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"true\">\n                    <ng-template\n                        *ngIf=\"column.filterCellTemplateRef\"\n                        [ngTemplateOutlet]=\"column.filterCellTemplateRef\"\n                        [ngTemplateOutletContext]=\"templateContext\">\n                    </ng-template>\n                </ng-container>\n            </ng-container>\n        </ng-container>\n    `, isInline: true, directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i4.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: FilterCellHostDirective, selector: \"[kendoFilterCellHost]\" }, { type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[kendoGridFilterCell]',\n                    template: `\n        <ng-container *ngIf=\"isFilterable\">\n            <ng-container [ngSwitch]=\"hasTemplate\">\n                <ng-container *ngSwitchCase=\"false\">\n                    <ng-container kendoFilterCellHost [column]=\"column\" [filter]=\"filter\"></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"true\">\n                    <ng-template\n                        *ngIf=\"column.filterCellTemplateRef\"\n                        [ngTemplateOutlet]=\"column.filterCellTemplateRef\"\n                        [ngTemplateOutletContext]=\"templateContext\">\n                    </ng-template>\n                </ng-container>\n            </ng-container>\n        </ng-container>\n    `\n                }]\n        }], propDecorators: { column: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }] } });\n\nlet id$1 = 0;\nfunction nextId$1() {\n    return id$1++;\n}\n/**\n * @hidden\n */\nclass LogicalCellDirective {\n    constructor(focusGroup, element, columnInfoService, idService, navigationService, renderer, zone, cellContext) {\n        this.focusGroup = focusGroup;\n        this.element = element;\n        this.columnInfoService = columnInfoService;\n        this.idService = idService;\n        this.navigationService = navigationService;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.cellContext = cellContext;\n        this.logicalSlaveCell = false;\n        this.colSpan = 1;\n        this.rowSpan = 1;\n        this.dataRowIndex = -1;\n        this.detailExpandCell = false;\n        this.uid = nextId$1();\n    }\n    get id() {\n        if (!this.logicalSlaveCell && this.columnInfoService.isLocked) {\n            return this.idService.cellId(this.logicalRowIndex, this.logicalColIndex);\n        }\n    }\n    get ariaColIndex() {\n        if (this.logicalSlaveCell || this.logicalColIndex === -1) {\n            return undefined;\n        }\n        return this.logicalColIndex + 1;\n    }\n    ngOnInit() {\n        if (!this.navigationService.tableEnabled) {\n            return;\n        }\n        this.navigationChange = this.navigationService.changes.subscribe((e) => this.onNavigationChange(e));\n    }\n    ngDoCheck() {\n        if (!this.navigationService.tableEnabled || this.logicalColIndex === -1) {\n            return;\n        }\n        if (this.cellContext) {\n            this.cellContext.focusGroup = this.focusGroup;\n        }\n        this.registerNoChanges();\n    }\n    ngOnChanges(changes) {\n        if (!this.navigationService.tableEnabled) {\n            return;\n        }\n        const keys = Object.keys(changes);\n        if ((keys.length === 1 && keys[0] === 'groupItem') || this.logicalColIndex === -1) {\n            // Ignore groupItem changes as the reference is not stable\n            return;\n        }\n        const indexChange = changes.logicalColIndex;\n        const rowIndexChange = changes.logicalRowIndex;\n        const index = indexChange && !indexChange.isFirstChange() ? indexChange.previousValue : this.logicalColIndex;\n        const rowIndex = rowIndexChange && !rowIndexChange.isFirstChange() ? rowIndexChange.previousValue : this.logicalRowIndex;\n        this.navigationService.unregisterCell(index, rowIndex, this);\n        this.registerChanges();\n        this.updateElement();\n    }\n    ngOnDestroy() {\n        if (this.navigationChange) {\n            this.navigationChange.unsubscribe();\n        }\n        this.navigationService.unregisterCell(this.logicalColIndex, this.logicalRowIndex, this);\n    }\n    onNavigationChange(e) {\n        const active = this.logicalColIndex === e.colIndex && this.logicalRowIndex === e.rowIndex;\n        const wasActive = this.logicalColIndex === e.prevColIndex && this.logicalRowIndex === e.prevRowIndex;\n        if (active || wasActive) {\n            this.updateElement();\n        }\n    }\n    updateElement() {\n        const el = this.element.nativeElement;\n        this.renderer.setAttribute(el, 'tabIndex', this.isFocusable() && !this.logicalSlaveCell ? '0' : '-1');\n        if (this.isFocused()) {\n            if (this.focusGroup.isNavigable()) {\n                this.focusGroup.focus();\n            }\n            else {\n                if (!this.logicalSlaveCell && this.navigationService.autoFocusCell(this.logicalColIndex, this.logicalColIndex + this.colSpan - 1)) {\n                    this.microtask(() => this.isFocused() && el.focus());\n                }\n                this.renderer.addClass(el, 'k-focus');\n            }\n            if (this.headerLabelText) {\n                el.setAttribute('aria-label', '');\n            }\n        }\n        else {\n            this.renderer.removeClass(el, 'k-focus');\n            if (this.headerLabelText) {\n                el.setAttribute('aria-label', this.headerLabelText);\n            }\n        }\n    }\n    microtask(callback) {\n        this.zone.runOutsideAngular(() => Promise.resolve(null).then(callback));\n    }\n    registerChanges() {\n        if (!this.logicalSlaveCell) {\n            this.navigationService.registerCell(this);\n        }\n    }\n    registerNoChanges() {\n        if (!this.logicalSlaveCell) {\n            this.navigationService.registerCellOnCurrentRow(this);\n        }\n    }\n    isFocusable() {\n        return this.navigationService.isCellFocusable(this);\n    }\n    isFocused() {\n        return this.navigationService.isCellFocused(this);\n    }\n}\nLogicalCellDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LogicalCellDirective, deps: [{ token: FocusGroup }, { token: i0.ElementRef }, { token: ColumnInfoService }, { token: IdService }, { token: NavigationService }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: CELL_CONTEXT, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nLogicalCellDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LogicalCellDirective, selector: \"[kendoGridLogicalCell]\", inputs: { logicalColIndex: \"logicalColIndex\", logicalRowIndex: \"logicalRowIndex\", logicalSlaveCell: \"logicalSlaveCell\", colIndex: \"colIndex\", colSpan: \"colSpan\", rowSpan: \"rowSpan\", groupItem: \"groupItem\", dataRowIndex: \"dataRowIndex\", dataItem: \"dataItem\", detailExpandCell: \"detailExpandCell\", headerLabelText: \"headerLabelText\" }, host: { properties: { \"attr.id\": \"this.id\", \"attr.aria-colindex\": \"this.ariaColIndex\" } }, providers: [{\n            provide: FocusGroup,\n            deps: [FocusRoot],\n            useClass: FocusGroup\n        }], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LogicalCellDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    providers: [{\n                            provide: FocusGroup,\n                            deps: [FocusRoot],\n                            useClass: FocusGroup\n                        }],\n                    selector: '[kendoGridLogicalCell]'\n                }]\n        }], ctorParameters: function () { return [{ type: FocusGroup }, { type: i0.ElementRef }, { type: ColumnInfoService }, { type: IdService }, { type: NavigationService }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CELL_CONTEXT]\n                }] }]; }, propDecorators: { logicalColIndex: [{\n                type: Input\n            }], logicalRowIndex: [{\n                type: Input\n            }], logicalSlaveCell: [{\n                type: Input\n            }], colIndex: [{\n                type: Input\n            }], colSpan: [{\n                type: Input\n            }], rowSpan: [{\n                type: Input\n            }], groupItem: [{\n                type: Input\n            }], dataRowIndex: [{\n                type: Input\n            }], dataItem: [{\n                type: Input\n            }], detailExpandCell: [{\n                type: Input\n            }], headerLabelText: [{\n                type: Input\n            }], id: [{\n                type: HostBinding,\n                args: ['attr.id']\n            }], ariaColIndex: [{\n                type: HostBinding,\n                args: ['attr.aria-colindex']\n            }] } });\n\n/**\n * @hidden\n */\nclass FilterRowComponent {\n    constructor(localization, columnInfoService) {\n        this.localization = localization;\n        this.columnInfoService = columnInfoService;\n        this.columns = [];\n        this.groups = [];\n        this.filterRowClass = true;\n    }\n    addStickyStyles(column) {\n        const sticky = column.sticky ? this.columnInfoService.stickyColumnsStyles(column) : null;\n        return Object.assign(Object.assign({}, sticky), column.filterStyle);\n    }\n    filterLabel(column) {\n        const localizationMsg = this.localization.get('filterInputLabel') || '';\n        const columnName = column.title || column.field;\n        return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);\n    }\n}\nFilterRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterRowComponent, deps: [{ token: i1.LocalizationService }, { token: ColumnInfoService }], target: i0.ɵɵFactoryTarget.Component });\nFilterRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FilterRowComponent, selector: \"[kendoGridFilterRow]\", inputs: { columns: \"columns\", filter: \"filter\", groups: \"groups\", detailTemplate: \"detailTemplate\", logicalRowIndex: \"logicalRowIndex\", lockedColumnsCount: \"lockedColumnsCount\" }, host: { properties: { \"class.k-filter-row\": \"this.filterRowClass\" } }, ngImport: i0, template: `\n        <td\n            [class.k-group-cell]=\"true\"\n            *ngFor=\"let g of groups\"\n            role=\"presentation\">\n        </td>\n        <td\n            [class.k-hierarchy-cell]=\"true\"\n            *ngIf=\"detailTemplate?.templateRef\"\n            role=\"presentation\">\n        </td>\n        <td *ngFor=\"let column of columns; let columnIndex = index\"\n            [class.k-grid-header-sticky]=\"column.sticky\"\n            [ngStyle]=\"addStickyStyles(column)\"\n            [ngClass]=\"column.filterClass\"\n            [attr.aria-label]=\"filterLabel($any(column))\"\n            kendoGridFilterCell\n                [column]=\"$any(column)\"\n                [filter]=\"filter\"\n            kendoGridLogicalCell\n                [logicalRowIndex]=\"logicalRowIndex\"\n                [logicalColIndex]=\"lockedColumnsCount + columnIndex\"\n      ></td>\n    `, isInline: true, components: [{ type: FilterCellComponent, selector: \"[kendoGridFilterCell]\", inputs: [\"column\", \"filter\"] }], directives: [{ type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: LogicalCellDirective, selector: \"[kendoGridLogicalCell]\", inputs: [\"logicalColIndex\", \"logicalRowIndex\", \"logicalSlaveCell\", \"colIndex\", \"colSpan\", \"rowSpan\", \"groupItem\", \"dataRowIndex\", \"dataItem\", \"detailExpandCell\", \"headerLabelText\"] }, { type: i4.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterRowComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[kendoGridFilterRow]',\n                    template: `\n        <td\n            [class.k-group-cell]=\"true\"\n            *ngFor=\"let g of groups\"\n            role=\"presentation\">\n        </td>\n        <td\n            [class.k-hierarchy-cell]=\"true\"\n            *ngIf=\"detailTemplate?.templateRef\"\n            role=\"presentation\">\n        </td>\n        <td *ngFor=\"let column of columns; let columnIndex = index\"\n            [class.k-grid-header-sticky]=\"column.sticky\"\n            [ngStyle]=\"addStickyStyles(column)\"\n            [ngClass]=\"column.filterClass\"\n            [attr.aria-label]=\"filterLabel($any(column))\"\n            kendoGridFilterCell\n                [column]=\"$any(column)\"\n                [filter]=\"filter\"\n            kendoGridLogicalCell\n                [logicalRowIndex]=\"logicalRowIndex\"\n                [logicalColIndex]=\"lockedColumnsCount + columnIndex\"\n      ></td>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: ColumnInfoService }]; }, propDecorators: { columns: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], groups: [{\n                type: Input\n            }], detailTemplate: [{\n                type: Input\n            }], logicalRowIndex: [{\n                type: Input\n            }], lockedColumnsCount: [{\n                type: Input\n            }], filterRowClass: [{\n                type: HostBinding,\n                args: ['class.k-filter-row']\n            }] } });\n\nlet id = 0;\nfunction nextId() {\n    return id++;\n}\n/**\n * @hidden\n */\nclass LogicalRowDirective {\n    constructor(idService, navigation) {\n        this.idService = idService;\n        this.navigation = navigation;\n        this.logicalSlaveRow = false;\n        this.logicalSlaveCellsCount = 0;\n        this.dataRowIndex = -1;\n        this.uid = nextId();\n    }\n    get hostRole() {\n        return this.logicalSlaveRow ? 'presentation' : 'row';\n    }\n    get ariaRowIndex() {\n        return this.logicalRowIndex + 1;\n    }\n    get ariaOwns() {\n        if (!this.navigation.enabled || this.logicalSlaveRow || this.logicalSlaveCellsCount === 0) {\n            return undefined;\n        }\n        const ids = [];\n        const total = this.logicalCellsCount + this.logicalSlaveCellsCount;\n        for (let cellIndex = this.logicalCellsCount; cellIndex < total; cellIndex++) {\n            ids.push(this.idService.cellId(this.logicalRowIndex, cellIndex));\n        }\n        return ids.join(' ');\n    }\n    ngOnChanges(changes) {\n        if (!this.navigation.enabled || this.logicalSlaveRow) {\n            return;\n        }\n        const indexChange = changes.logicalRowIndex;\n        const logicalSlaveRowChange = changes.logicalSlaveRow;\n        if (indexChange || logicalSlaveRowChange) {\n            const index = indexChange && !indexChange.isFirstChange() ? indexChange.previousValue : this.logicalRowIndex;\n            this.navigation.unregisterRow(index, this);\n            this.navigation.registerRow(this);\n        }\n        else if (anyChanged(['dataRowIndex', 'dataItem'], changes)) {\n            this.navigation.updateRow(this);\n        }\n    }\n    ngOnDestroy() {\n        this.navigation.unregisterRow(this.logicalRowIndex, this);\n    }\n}\nLogicalRowDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LogicalRowDirective, deps: [{ token: IdService }, { token: NavigationService }], target: i0.ɵɵFactoryTarget.Directive });\nLogicalRowDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LogicalRowDirective, selector: \"[kendoGridLogicalRow]\", inputs: { logicalRowIndex: \"logicalRowIndex\", logicalSlaveRow: \"logicalSlaveRow\", logicalCellsCount: \"logicalCellsCount\", logicalSlaveCellsCount: \"logicalSlaveCellsCount\", dataRowIndex: \"dataRowIndex\", dataItem: \"dataItem\" }, host: { properties: { \"attr.role\": \"this.hostRole\", \"attr.aria-rowindex\": \"this.ariaRowIndex\", \"attr.aria-owns\": \"this.ariaOwns\" } }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LogicalRowDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridLogicalRow]'\n                }]\n        }], ctorParameters: function () { return [{ type: IdService }, { type: NavigationService }]; }, propDecorators: { logicalRowIndex: [{\n                type: Input\n            }], logicalSlaveRow: [{\n                type: Input\n            }], logicalCellsCount: [{\n                type: Input\n            }], logicalSlaveCellsCount: [{\n                type: Input\n            }], dataRowIndex: [{\n                type: Input\n            }], dataItem: [{\n                type: Input\n            }], hostRole: [{\n                type: HostBinding,\n                args: ['attr.role']\n            }], ariaRowIndex: [{\n                type: HostBinding,\n                args: ['attr.aria-rowindex']\n            }], ariaOwns: [{\n                type: HostBinding,\n                args: ['attr.aria-owns']\n            }] } });\n\n/**\n * @hidden\n */\nclass TemplateContextDirective {\n    constructor(viewContainerRef) {\n        this.viewContainerRef = viewContainerRef;\n    }\n    set templateContext(context) {\n        this.removeView();\n        if (context.templateRef) {\n            this.insertedViewRef = this.viewContainerRef.createEmbeddedView(context.templateRef, context);\n        }\n    }\n    ngOnDestroy() {\n        this.removeView();\n    }\n    removeView() {\n        if (this.insertedViewRef) {\n            this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.insertedViewRef));\n            this.insertedViewRef = undefined;\n        }\n    }\n}\nTemplateContextDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TemplateContextDirective, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nTemplateContextDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TemplateContextDirective, selector: \"[templateContext]\", inputs: { templateContext: \"templateContext\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TemplateContextDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: '[templateContext]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; }, propDecorators: { templateContext: [{\n                type: Input\n            }] } });\n\n/**\n * Represents the select-all checkbox feature of the Grid ([see example]({% slug selection_grid %}#toc-select-all-feature)).\n */\nclass SelectAllCheckboxDirective {\n    constructor(selectionService, el, renderer, ngZone) {\n        this.selectionService = selectionService;\n        this.el = el;\n        this.renderer = renderer;\n        this.ngZone = ngZone;\n        /**\n         * Fires when the user clicks the `kendoGridSelectAllCheckbox` select-all checkbox\n         * ([see example]({% slug selection_grid %}#toc-select-all-feature)).\n         */\n        this.selectAllChange = new EventEmitter();\n        this.type = 'checkbox';\n        this.stateSet = false;\n        this.ngZone.runOutsideAngular(() => {\n            this.destroyClick = this.renderer.listen(this.el.nativeElement, 'click', this.onClick.bind(this));\n        });\n    }\n    ngAfterContentChecked() {\n        this.setState();\n    }\n    ngOnChanges() {\n        this.stateSet = true;\n    }\n    ngOnDestroy() {\n        if (this.destroyClick) {\n            this.destroyClick();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onClick() {\n        // yields consistent cross-browser behavior when clicking an indeterminate checkbox\n        const undefinedCheckedStateInIE = detectIE() && this.selectionService.selectAllState === undefined;\n        const isChecked = undefinedCheckedStateInIE ? true : this.el.nativeElement.checked;\n        const options = this.selectionService.options;\n        const enabledAndMultiple = options.enabled && options.mode === 'multiple';\n        const shouldEmitSelectAll = hasObservers(this.selectAllChange);\n        if (enabledAndMultiple || shouldEmitSelectAll) {\n            this.ngZone.run(() => {\n                if (enabledAndMultiple) {\n                    this.selectionService.updateAll(isChecked);\n                }\n                if (shouldEmitSelectAll) {\n                    this.selectAllChange.emit(isChecked ? 'checked' : 'unchecked');\n                }\n            });\n        }\n    }\n    /**\n     * @hidden\n     */\n    setState() {\n        const state = this.stateSet ? this.stateToBool() : this.selectionService.selectAllState;\n        const elem = this.el.nativeElement;\n        this.renderer.setProperty(elem, 'indeterminate', !isPresent(state));\n        this.renderer.setProperty(elem, 'checked', isPresent(state) ? state : false);\n    }\n    /**\n     * @hidden\n     */\n    stateToBool() {\n        switch (this.state) {\n            case 'checked':\n                return true;\n            case 'unchecked':\n                return false;\n            default:\n                return undefined;\n        }\n    }\n}\nSelectAllCheckboxDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SelectAllCheckboxDirective, deps: [{ token: SelectionService }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nSelectAllCheckboxDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: SelectAllCheckboxDirective, selector: \"[kendoGridSelectAllCheckbox]\", inputs: { state: \"state\" }, outputs: { selectAllChange: \"selectAllChange\" }, host: { properties: { \"attr.type\": \"this.type\" } }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SelectAllCheckboxDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridSelectAllCheckbox]'\n                }]\n        }], ctorParameters: function () { return [{ type: SelectionService }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.NgZone }]; }, propDecorators: { state: [{\n                type: Input\n            }], selectAllChange: [{\n                type: Output\n            }], type: [{\n                type: HostBinding,\n                args: ['attr.type']\n            }] } });\n\n/**\n * @hidden\n */\nconst fromPercentage = (value, percent) => {\n    const sign = percent < 0 ? -1 : 1;\n    return Math.ceil((Math.abs(percent) / 100) * value) * sign;\n};\n/**\n * @hidden\n */\nconst toPercentage = (value, whole) => (value / whole) * 100;\n/**\n * @hidden\n */\nconst headerWidth = (handle) => handle.nativeElement.parentElement.offsetWidth;\n/**\n * @hidden\n */\nconst allLeafColumns = columns => expandColumns(columns)\n    .filter(c => !c.isColumnGroup);\n/**\n * @hidden\n */\nconst stopPropagation = ({ originalEvent: event }) => {\n    event.stopPropagation();\n    event.preventDefault();\n};\n/**\n * @hidden\n */\nconst createMoveStream = (service, draggable) => mouseDown => draggable.kendoDrag.pipe(\n// eslint-disable-next-line rxjs/no-unsafe-takeuntil\ntakeUntil(draggable.kendoRelease.pipe(tap(() => service.end()))), map(({ pageX }) => ({\n    originalX: mouseDown.pageX,\n    pageX\n})));\n/**\n * @hidden\n */\nconst preventOnDblClick = release => mouseDown => of(mouseDown).pipe(delay(150), takeUntil(release));\n/**\n * @hidden\n */\nconst isInSpanColumn = column => !!(column.parent && column.parent.isSpanColumn);\n/**\n * @hidden\n *\n * Calculates the column index. If the column is stated in `SpanColumn`,\n * the index for all child columns equals the index of the first child.\n */\nconst indexOf = (target, list) => {\n    let index = 0;\n    let ignore = 0;\n    let skip = 0;\n    while (index < list.length) {\n        const current = list[index];\n        const isParentSpanColumn = isInSpanColumn(current);\n        if (current === target) {\n            break;\n        }\n        if ((ignore-- <= 0) && isParentSpanColumn) {\n            ignore = current.parent.childColumns.length - 1;\n            skip += ignore;\n        }\n        index++;\n    }\n    return index - skip;\n};\n/**\n * @hidden\n */\nclass ColumnHandleDirective {\n    constructor(draggable, element, service, zone, cdr, localization, columnInfoService) {\n        this.draggable = draggable;\n        this.element = element;\n        this.service = service;\n        this.zone = zone;\n        this.cdr = cdr;\n        this.localization = localization;\n        this.columnInfoService = columnInfoService;\n        this.columns = [];\n        this.subscriptions = new Subscription();\n        this.rtl = false;\n    }\n    get visible() {\n        return this.column.resizable ? 'block' : 'none';\n    }\n    get leftStyle() {\n        return isTruthy(this.rtl) ? 0 : null;\n    }\n    get rightStyle() {\n        return isTruthy(this.rtl) ? null : 0;\n    }\n    autoFit() {\n        const allLeafs = allLeafColumns(this.columns);\n        const currentLeafs = leafColumns([this.column]).filter(column => isTruthy(column.resizable));\n        const columnInfo = currentLeafs.map(column => {\n            const isParentSpan = isInSpanColumn(column);\n            const isLastInSpan = isParentSpan ? column.parent.childColumns.last === column : false;\n            const index = indexOf(column, allLeafs);\n            return {\n                column,\n                headerIndex: this.columnsForLevel(column.level).indexOf(column),\n                index,\n                isLastInSpan,\n                isParentSpan,\n                level: column.level\n            };\n        });\n        currentLeafs.forEach(column => column.width = 0);\n        this.service.measureColumns(columnInfo);\n    }\n    ngOnInit() {\n        if (isBlank(this.column.width)) {\n            this.column.implicitWidth = headerWidth(this.element);\n        }\n        const service = this.service.changes.pipe(filter(() => this.column.resizable), filter(e => isPresent(e.columns.find(column => column === this.column))));\n        this.subscriptions.add(service.pipe(filter(e => e.type === 'start'))\n            .subscribe(this.initState.bind(this)));\n        this.subscriptions.add(service.pipe(filter(e => e.type === 'resizeColumn'))\n            .subscribe(this.resize.bind(this)));\n        this.subscriptions.add(this.service.changes.pipe(filter(e => e.type === 'start'), filter(this.shouldUpdate.bind(this)), take(1) //on first resize only\n        ).subscribe(this.initColumnWidth.bind(this)));\n        this.subscriptions.add(this.zone.runOutsideAngular(() => this.draggable.kendoPress.pipe(tap(stopPropagation), tap(() => this.service.start(this.column)), switchMap(preventOnDblClick(this.draggable.kendoRelease)), switchMap(createMoveStream(this.service, this.draggable)))\n            .subscribe(({ pageX, originalX }) => {\n            const delta = pageX - originalX;\n            const percent = toPercentage(delta, this.column.resizeStartWidth || this.column.width);\n            this.service.resizeColumns(percent);\n        })));\n        this.subscriptions.add(service.pipe(filter(e => e.type === 'autoFitComplete'))\n            .subscribe(this.sizeToFit.bind(this)));\n        this.subscriptions.add(service.pipe(filter(e => e.type === 'triggerAutoFit'))\n            .subscribe(this.autoFit.bind(this)));\n        this.subscriptions.add(this.localization.changes.subscribe(({ rtl }) => this.rtl = rtl));\n    }\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n    }\n    shouldUpdate() {\n        return !allLeafColumns(this.columns)\n            .map(column => column.width)\n            .some(isBlank);\n    }\n    initColumnWidth() {\n        this.column.width = headerWidth(this.element);\n    }\n    initState() {\n        this.column.resizeStartWidth = headerWidth(this.element);\n        this.service.resizedColumn({\n            column: this.column,\n            oldWidth: this.column.resizeStartWidth\n        });\n    }\n    resize({ deltaPercent }) {\n        let delta = fromPercentage(this.column.resizeStartWidth, deltaPercent);\n        if (isTruthy(this.rtl)) {\n            delta *= -1;\n        }\n        let newWidth = Math.max(this.column.resizeStartWidth + delta, this.column.minResizableWidth);\n        if (isPresent(this.column.maxResizableWidth)) {\n            newWidth = Math.min(newWidth, this.column.maxResizableWidth);\n        }\n        const tableDelta = this.getTableDelta(newWidth, delta);\n        this.updateWidth(this.column, newWidth);\n        this.service.resizeTable(this.column, tableDelta);\n    }\n    sizeToFit({ columns, widths }) {\n        const index = columns.indexOf(this.column);\n        const width = Math.max(...widths.map(w => w[index])) + 1; //add 1px for IE\n        const tableDelta = width - this.column.resizeStartWidth;\n        this.updateWidth(this.column, width);\n        this.service.resizeTable(this.column, tableDelta);\n    }\n    updateWidth(column, width) {\n        column.width = width;\n        this.columnInfoService.hiddenColumns.forEach((col) => {\n            if (isBlank(col.width) && isPresent(col.implicitWidth)) {\n                // Resize hidden columns to their implicit width so they\n                // can be displayed with the same width if made visible.\n                col.width = col.implicitWidth;\n            }\n        });\n        this.cdr.markForCheck(); //force CD cycle\n    }\n    columnsForLevel(level) {\n        return columnsToRender(this.columns ? this.columns.filter(column => column.level === level) : []);\n    }\n    getTableDelta(newWidth, delta) {\n        const minWidth = this.column.minResizableWidth;\n        const maxWidth = this.column.maxResizableWidth;\n        const startWidth = this.column.resizeStartWidth;\n        const isAboveMin = newWidth > minWidth;\n        const isBelowMax = newWidth < maxWidth;\n        const isInBoundaries = isPresent(maxWidth) ?\n            isAboveMin && isBelowMax :\n            isAboveMin;\n        if (isInBoundaries) {\n            return delta;\n        }\n        else if (newWidth <= minWidth) {\n            return minWidth - startWidth;\n        }\n        else {\n            return startWidth - maxWidth;\n        }\n    }\n}\nColumnHandleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnHandleDirective, deps: [{ token: i1$1.DraggableDirective, host: true }, { token: i0.ElementRef }, { token: ColumnResizingService }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1.LocalizationService }, { token: ColumnInfoService }], target: i0.ɵɵFactoryTarget.Directive });\nColumnHandleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnHandleDirective, selector: \"[kendoGridColumnHandle]\", inputs: { columns: \"columns\", column: \"column\" }, host: { listeners: { \"dblclick\": \"autoFit()\" }, properties: { \"style.display\": \"this.visible\", \"style.left\": \"this.leftStyle\", \"style.right\": \"this.rightStyle\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnHandleDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridColumnHandle]'\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.DraggableDirective, decorators: [{\n                    type: Host\n                }] }, { type: i0.ElementRef }, { type: ColumnResizingService }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1.LocalizationService }, { type: ColumnInfoService }]; }, propDecorators: { columns: [{\n                type: Input\n            }], column: [{\n                type: Input\n            }], visible: [{\n                type: HostBinding,\n                args: ['style.display']\n            }], leftStyle: [{\n                type: HostBinding,\n                args: ['style.left']\n            }], rightStyle: [{\n                type: HostBinding,\n                args: ['style.right']\n            }], autoFit: [{\n                type: HostListener,\n                args: ['dblclick']\n            }] } });\n\nconst mergeObjects = (...args) => Object.assign.apply(null, [{}].concat(args));\nconst directions = initialDirection => initialDirection === \"asc\" ? [\"asc\", \"desc\"] : [\"desc\", \"asc\"];\n/**\n * @hidden\n */\nconst isRootLevel = ({ parent }) => !isTruthy(parent);\nconst ofColumnType = ({ draggable }) => ['column', 'columnGroup']\n    .indexOf(draggable.context.type) >= 0;\nconst notSameElement = ({ draggable, target }) => draggable.element.nativeElement !== target.element.nativeElement;\nconst inSameParent = (x, y) => x.parent === y.parent ||\n    (isInSpanColumn$1(y) && inSameParent(x, y.parent));\nconst sameParent = ({ draggable, target }) => inSameParent(draggable.context.column, target.context.column);\nconst lastNonLocked = ({ draggable }) => !isTruthy(draggable.context.column.locked) &&\n    isRootLevel(draggable.context.column) &&\n    draggable.context.lastColumn;\nconst notInSpanColumn = ({ draggable }) => !isInSpanColumn$1(draggable.context.column);\nconst reorderable = ({ draggable }) => draggable.context.column.reorderable;\nconst lockable = ({ draggable, target }) => draggable.context.column.lockable !== false ||\n    draggable.context.column.isLocked === target.context.column.isLocked;\nconst rules = and(ofColumnType, reorderable, notInSpanColumn, notSameElement, sameParent, not(lastNonLocked), lockable);\nconst modifierKeys = ['alt', 'ctrl', 'shift', 'meta'];\n/**\n * @hidden\n */\nclass HeaderComponent {\n    constructor(popupService, hint, cue, reorderService, idService, sortService, localization, columnInfoService, cd) {\n        this.popupService = popupService;\n        this.hint = hint;\n        this.cue = cue;\n        this.reorderService = reorderService;\n        this.idService = idService;\n        this.sortService = sortService;\n        this.localization = localization;\n        this.columnInfoService = columnInfoService;\n        this.cd = cd;\n        this.columns = [];\n        this.groups = [];\n        this.sort = new Array();\n        this.sortable = false;\n        this.groupable = false;\n        this.lockedColumnsCount = 0;\n        this.resizable = false;\n        this.reorderable = false;\n        this.columnMenu = false;\n        this.totalColumnsCount = 0;\n        this.sortedFields = {};\n        this.dropTargets = new QueryList();\n        this.subscription = new Subscription();\n    }\n    get headerClass() {\n        return !this.scrollable;\n    }\n    get sortableLabel() {\n        return this.localization.get('sortable');\n    }\n    get columnMenuSettings() {\n        return this.columnMenu;\n    }\n    // Number of unlocked columns in the next table, if any\n    get unlockedColumnsCount() {\n        return this.totalColumnsCount - this.lockedColumnsCount - this.columns.length;\n    }\n    sortColumn(descriptor) {\n        this.sortService.sort(descriptor);\n    }\n    getColumnComponent(column) {\n        return column;\n    }\n    onSortClick(column, event, link) {\n        const target = event.target;\n        if (column.headerTemplateRef && target !== link) {\n            const hasFocusableParent = Boolean(closestInScope(target, isFocusable, link));\n            if (hasFocusableParent) {\n                // Do not sort when clicking focusable template elements.\n                return;\n            }\n        }\n        const modifier = this.matchModifier(event);\n        const toggledColumn = this.toggleSort(column, modifier);\n        this.sortColumn(toggledColumn);\n    }\n    onHeaderKeydown(column, args) {\n        if (args.keyCode === Keys.ArrowDown && args.altKey && this.showFilterMenu) {\n            args.preventDefault();\n            args.stopImmediatePropagation();\n            const filterMenu = this.filterMenus.find(fm => fm.column === column);\n            filterMenu.toggle(filterMenu.anchor.nativeElement, filterMenu.template);\n        }\n        if (args.keyCode === Keys.ArrowDown && args.altKey && this.showColumnMenu(column)) {\n            args.preventDefault();\n            args.stopImmediatePropagation();\n            const columnMenu = this.columnMenus.find(cm => cm.column === column);\n            columnMenu.toggle(null, columnMenu.anchor.nativeElement, columnMenu.template);\n        }\n        if (!this.sortable || args.defaultPrevented || column.sortable === false) {\n            return;\n        }\n        if (args.keyCode === Keys.Enter && isPresent(column.field)) {\n            const modifier = this.matchModifier(args);\n            this.sortService.sort(this.toggleSort(column, modifier));\n        }\n    }\n    showSortNumbering(column) {\n        const { showIndexes } = normalize(this.sortable);\n        return showIndexes\n            && this.sort\n            && this.sort.filter(({ dir }) => isPresent(dir)).length > 1\n            && this.sortOrder(column.field) > 0;\n    }\n    sortOrder(field) {\n        return this.sort\n            .filter(({ dir }) => isPresent(dir))\n            .findIndex(x => x.field === field)\n            + 1;\n    }\n    sortIcon(field) {\n        const state = this.sortDescriptor(field);\n        return {\n            'k-icon': isPresent(state.dir),\n            'k-i-sort-desc-small': state.dir === \"desc\",\n            'k-i-sort-asc-small': state.dir === \"asc\"\n        };\n    }\n    sortState(column) {\n        if (!this.isSortable(column)) {\n            return;\n        }\n        const state = this.sortDescriptor(column.field);\n        if (state.dir === 'asc') {\n            return 'ascending';\n        }\n        if (state.dir === 'desc') {\n            return 'descending';\n        }\n    }\n    sortStatus(column) {\n        if (!this.sortedFields[column.field] || !this.isSortable(column)) {\n            return;\n        }\n        let msg = 'sortedDefault';\n        const state = this.sortDescriptor(column.field);\n        if (state.dir === 'asc') {\n            msg = 'sortedAscending';\n        }\n        else if (state.dir === 'desc') {\n            msg = 'sortedDescending';\n        }\n        return this.localization.get(msg);\n    }\n    /**\n     *\n     * @param column\n     * @param modifier - Indicates whether the client-defined `multiSortKey` modifier is met. Defaults to `true`.\n     * @returns - SortDescriptor[]\n     */\n    toggleSort(column, modifier = true) {\n        const { allowUnsort, mode, initialDirection } = normalize(this.sortable, column.sortable);\n        const descriptor = this.toggleDirection(column.field, allowUnsort, initialDirection);\n        if (mode === 'single' || !modifier) {\n            return [descriptor];\n        }\n        return [...this.sort.filter(desc => desc.field !== column.field), descriptor];\n    }\n    /**\n     *\n     * Determines whether the modifier key (if any) passed\n     * with a click/keyboard event matches the user-defined multiSortKey.\n     */\n    matchModifier(event) {\n        const { multiSortKey } = normalize(this.sortable);\n        if (multiSortKey === 'none') {\n            return modifierKeys.every(key => !event[`${key}Key`]);\n        }\n        return multiSortKey === 'ctrl'\n            ? event.ctrlKey || event.metaKey\n            : event[`${multiSortKey}Key`];\n    }\n    ngAfterViewInit() {\n        this.subscription.add(observe(this.dropTargets)\n            .subscribe(this.attachTargets.bind(this)));\n    }\n    ngDoCheck() {\n        this._leafColumns = columnsToRender(this.columns || []).filter(x => !isColumnGroupComponent(x));\n    }\n    ngOnChanges(changes) {\n        const sortChange = changes.sort;\n        if (sortChange && !sortChange.isFirstChange()) {\n            sortChange.currentValue.forEach(change => {\n                this.sortedFields[change.field] = true;\n            });\n        }\n    }\n    ngOnInit() {\n        this.subscription.add(this.localization.changes\n            .subscribe(() => this.cd.markForCheck()));\n    }\n    ngOnDestroy() {\n        if (this.targetSubscription) {\n            this.targetSubscription.unsubscribe();\n        }\n        if (this.popupService) {\n            this.popupService.destroy();\n        }\n        this.subscription.unsubscribe();\n    }\n    selectAllCheckboxId() {\n        return this.idService.selectAllCheckboxId();\n    }\n    get selectAllCheckboxLabel() {\n        return this.localization.get('selectAllCheckboxLabel');\n    }\n    isFirstOnRow(column, index) {\n        const isTailing = (c) => c &&\n            (this.columnsForLevel(c.level).indexOf(c) > 0 || isTailing(c.parent));\n        return index === 0 && !this.groups.length && !this.detailTemplate && isTailing(column.parent);\n    }\n    logicalColumnIndex(column) {\n        const index = column.leafIndex;\n        if (isPresent(index)) {\n            return index + (isPresent(this.detailTemplate) ? 1 : 0);\n        }\n        return -1;\n    }\n    get showFilterMenu() {\n        return !this.columnMenu && hasFilterMenu(this.filterable);\n    }\n    get showFilterRow() {\n        return hasFilterRow(this.filterable);\n    }\n    showColumnMenu(column) {\n        return this.columnMenu && column.columnMenu &&\n            (this.columnMenuTemplate || column.columnMenuTemplates.length || hasItems(this.columnMenu, column));\n    }\n    isFilterable(column) {\n        return !isNullOrEmptyString(column.field) && column.filterable === true;\n    }\n    canDrop(draggable, target) {\n        return this.reorderable && rules({ draggable, target });\n    }\n    shouldActivate(column) {\n        const canReorder = this.reorderable && column.reorderable;\n        if (!canReorder && !isColumnComponent(column)) {\n            return false;\n        }\n        const groupable = this.groupable && isColumnComponent(column) && column.groupable !== false;\n        return groupable || canReorder;\n    }\n    isSortable(column) {\n        return !isNullOrEmptyString(column.field)\n            && isTruthy(this.sortable) && isTruthy(column.sortable);\n    }\n    isCheckboxColumn(column) {\n        return isCheckboxColumn(column) && !column.templateRef;\n    }\n    trackByIndex(index, _item) {\n        return index;\n    }\n    addStickyStyles(column) {\n        const stickyStyles = this.columnInfoService.stickyColumnsStyles(column);\n        return Object.assign(Object.assign({}, column.style), stickyStyles);\n    }\n    toggleDirection(field, allowUnsort, initialDirection) {\n        const descriptor = this.sortDescriptor(field);\n        const [first, second] = directions(initialDirection);\n        let dir = first;\n        if (descriptor.dir === first) {\n            dir = second;\n        }\n        else if (descriptor.dir === second && allowUnsort) {\n            dir = undefined;\n        }\n        return { dir, field };\n    }\n    columnsForLevel(level) {\n        const columns = this.columns ? this.columns.filter(column => column.level === level) : [];\n        return sortColumns(columnsToRender(columns));\n    }\n    isColumnGroupComponent(column) {\n        return isColumnGroupComponent(column);\n    }\n    get columnLevels() {\n        return new Array((this.totalColumnLevels || 0) + 1);\n    }\n    sortDescriptor(field) {\n        return this.sort.find(item => item.field === field) || { field };\n    }\n    get leafColumns() {\n        return this._leafColumns;\n    }\n    attachTargets() {\n        if (this.targetSubscription) {\n            this.targetSubscription.unsubscribe();\n        }\n        this.targetSubscription = new Subscription();\n        const enterStream = merge(...this.dropTargets.map(target => target.enter));\n        const leaveStream = merge(...this.dropTargets.map(target => target.leave));\n        const dropStream = merge(...this.dropTargets.map(target => target.drop));\n        this.targetSubscription.add(enterStream.pipe(tap(({ target, draggable }) => {\n            if (draggable.context.type === 'groupIndicator') {\n                return;\n            }\n            const targetLocked = isTruthy(target.context.column.isLocked);\n            const draggableLocked = isTruthy(draggable.context.column.isLocked);\n            if (this.lockedColumnsCount > 0 || targetLocked || draggableLocked) {\n                this.hint.toggleLock(targetLocked);\n            }\n        }), filter(({ draggable, target }) => this.canDrop(draggable, target)), switchMap(this.trackMove.bind(this, leaveStream, dropStream)), map((e) => mergeObjects(e, { before: this.calculateBefore(e), changeContainer: e.changeContainer })), map(this.normalizeTarget.bind(this)), tap(this.enter.bind(this)), switchMap((args) => dropStream.pipe(map(() => args), takeUntil(leaveStream.pipe(tap(this.leave.bind(this)))))))\n            .subscribe(this.drop.bind(this)));\n    }\n    normalizeTarget(e) {\n        let target = e.target;\n        const parent = target.context.column.parent;\n        if (parent && parent.isSpanColumn) {\n            const arr = this.dropTargets.toArray();\n            const firstSpan = arr.find(t => t.context.column.parent === parent);\n            const index = arr.indexOf(firstSpan);\n            const adjust = e.before ? 0 : parent.childColumns.length - 1;\n            target = arr[index + adjust];\n        }\n        return mergeObjects(e, { target });\n    }\n    trackMove(leaveStream, dropStream, e) {\n        const column = e.target.context.column;\n        const levelColumns = this.columnsForLevel(column.level);\n        const index = levelColumns.indexOf(column);\n        const isFirst = (column.locked ? index === levelColumns.length - 1 : index === 0);\n        const changed = e.draggable.context.column.isLocked !== column.isLocked;\n        if (changed && isFirst) {\n            return e.draggable.drag\n                .pipe(takeUntil(leaveStream), takeUntil(dropStream), map(({ mouseEvent }) => mergeObjects({ changeContainer: true }, e, { mouseEvent })));\n        }\n        return of(mergeObjects({ changeContainer: changed }, e));\n    }\n    calculateBefore({ draggable, target, mouseEvent, changeContainer = false }) {\n        const targetElement = target.element.nativeElement;\n        let before = false;\n        if (changeContainer) {\n            const { left } = offset(targetElement);\n            const halfWidth = targetElement.offsetWidth / 2;\n            const middle = left + halfWidth;\n            before = middle > mouseEvent.pageX;\n            if (this.localization.rtl) {\n                before = !before;\n            }\n        }\n        else {\n            before = isTargetBefore(draggable.element.nativeElement, targetElement);\n        }\n        return before;\n    }\n    enter({ target, before }) {\n        this.hint.enable();\n        if (this.localization.rtl) {\n            before = !before;\n        }\n        this.cue.position(position(target.element.nativeElement, before));\n    }\n    leave() {\n        this.hint.disable();\n        this.cue.hide();\n    }\n    drop({ draggable, target, before, changeContainer }) {\n        this.reorderService.reorder({\n            before,\n            changeContainer,\n            source: draggable.context.column,\n            target: target.context.column\n        });\n    }\n}\nHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HeaderComponent, deps: [{ token: SinglePopupService }, { token: DragHintService }, { token: DropCueService }, { token: ColumnReorderService }, { token: IdService }, { token: SortService }, { token: i1.LocalizationService }, { token: ColumnInfoService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: HeaderComponent, selector: \"[kendoGridHeader]\", inputs: { totalColumnLevels: \"totalColumnLevels\", columns: \"columns\", groups: \"groups\", detailTemplate: \"detailTemplate\", scrollable: \"scrollable\", filterable: \"filterable\", sort: \"sort\", filter: \"filter\", sortable: \"sortable\", groupable: \"groupable\", lockedColumnsCount: \"lockedColumnsCount\", resizable: \"resizable\", reorderable: \"reorderable\", columnMenu: \"columnMenu\", columnMenuTemplate: \"columnMenuTemplate\", totalColumnsCount: \"totalColumnsCount\", tabIndex: \"tabIndex\" }, host: { properties: { \"class.k-grid-header\": \"this.headerClass\" } }, viewQueries: [{ propertyName: \"dropTargets\", predicate: DropTargetDirective, descendants: true }, { propertyName: \"filterMenus\", predicate: FilterMenuComponent, descendants: true }, { propertyName: \"columnMenus\", predicate: ColumnMenuComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <ng-container>\n        <tr *ngFor=\"let i of columnLevels; let levelIndex = index\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"levelIndex\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"unlockedColumnsCount\">\n            <th\n                class=\"k-group-cell k-header\"\n                role=\"presentation\"\n                *ngFor=\"let g of groups\">\n            </th>\n            <th class=\"k-hierarchy-cell k-header\"\n                role=\"gridcell\"\n                *ngIf=\"detailTemplate?.templateRef\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"levelIndex\"\n                    [logicalColIndex]=\"0\"\n                    aria-selected=\"false\"\n            >\n            </th>\n            <ng-container *ngFor=\"let column of columnsForLevel(levelIndex); trackBy: trackByIndex; let columnIndex = index; let last = last;\">\n                <th *ngIf=\"!isColumnGroupComponent(column)\"\n                    kendoGridLogicalCell\n                    [logicalRowIndex]=\"levelIndex\"\n                    [logicalColIndex]=\"logicalColumnIndex(column)\"\n                    [headerLabelText]=\"column.title || getColumnComponent(column).field\"\n                    [colSpan]=\"column.colspan\"\n                    [rowSpan]=\"column.rowspan(totalColumnLevels)\"\n                    role=\"columnheader\"\n                    aria-selected=\"false\"\n                    [attr.aria-sort]=\"sortState(getColumnComponent(column))\"\n                    [class.k-sorted]=\"!!sortState(getColumnComponent(column))\"\n                    (keydown)=\"onHeaderKeydown(getColumnComponent(column), $event)\"\n                    kendoDropTarget\n                    kendoDraggable\n                    kendoDraggableColumn\n                    [enableDrag]=\"shouldActivate(column)\"\n                    [context]=\"{\n                        field: getColumnComponent(column).field,\n                        type: 'column',\n                        column: column,\n                        hint: column.title || getColumnComponent(column).field,\n                        lastColumn: last && columnIndex === 0\n                    }\"\n                    class=\"k-header\"\n                    [class.k-filterable]=\"(showFilterMenu && isFilterable(getColumnComponent(column))) || showColumnMenu(column)\"\n                    [class.k-first]=\"isFirstOnRow(getColumnComponent(column), columnIndex)\"\n                    [class.k-grid-header-sticky]=\"column.sticky\"\n                    [ngClass]=\"column.headerClass\"\n                    [ngStyle]=\"column.sticky ? addStickyStyles(column) : column.headerStyle\"\n                    [attr.rowspan]=\"column.rowspan(totalColumnLevels)\"\n                    [attr.colspan]=\"column.colspan\">\n\n                    <ng-container *ngIf=\"!isSortable(getColumnComponent(column))\">\n                        <span class=\"k-cell-inner\">\n                            <span class=\"k-link\">\n                                <ng-template\n                                    [templateContext]=\"{\n                                        templateRef: column.headerTemplateRef,\n                                        columnIndex: column.leafIndex,\n                                        column: column,\n                                        $implicit: column\n                                    }\">\n                                </ng-template>\n                                <ng-container *ngIf=\"!column.headerTemplateRef\">\n                                    <span class=\"k-column-title\">{{column.displayTitle}}</span>\n                                </ng-container>\n                            </span>\n                            <kendo-grid-filter-menu\n                                *ngIf=\"showFilterMenu && isFilterable(getColumnComponent(column))\"\n                                [column]=\"getColumnComponent(column)\"\n                                [filter]=\"filter\"\n                                [tabIndex]=\"tabIndex\">\n                            </kendo-grid-filter-menu>\n                            <kendo-grid-column-menu *ngIf=\"showColumnMenu(column)\"\n                                [standalone]=\"false\"\n                                [settings]=\"columnMenuSettings\"\n                                [column]=\"column\"\n                                [columnMenuTemplate]=\"columnMenuTemplate\"\n                                [sort]=\"sort\"\n                                [filter]=\"filter\"\n                                [sortable]=\"sortable\"\n                                [tabIndex]=\"tabIndex\">\n                            </kendo-grid-column-menu>\n                        </span>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"isSortable(getColumnComponent(column))\">\n                        <span class=\"k-cell-inner\">\n                            <span #link class=\"k-link\" (click)=\"onSortClick(getColumnComponent(column), $event, link)\">\n                                <ng-template\n                                    [templateContext]=\"{\n                                        templateRef: column.headerTemplateRef,\n                                        columnIndex: column.leafIndex,\n                                        column: column,\n                                        $implicit: column\n                                    }\">\n                                </ng-template>\n                                <ng-container *ngIf=\"!column.headerTemplateRef\">\n                                    <span class=\"k-column-title\">{{column.displayTitle}}</span>\n                                </ng-container>\n                                <span role=\"note\" [attr.aria-label]=\"sortableLabel\" [ngClass]=\"sortIcon(getColumnComponent(column).field)\"></span>\n                                <span *ngIf=\"showSortNumbering(getColumnComponent(column))\" class=\"k-sort-order\">{{sortOrder(getColumnComponent(column).field)}}</span>\n                            </span>\n                            <span role=\"status\"\n                                class=\"k-sort-status\"\n                                [style.position]=\"'absolute'\"\n                                [style.left.px]=\"-10000\"\n                                [innerHtml]=\"sortStatus(getColumnComponent(column))\">\n                            </span>\n                            <kendo-grid-filter-menu\n                                *ngIf=\"showFilterMenu && isFilterable(getColumnComponent(column))\"\n                                [column]=\"getColumnComponent(column)\"\n                                [filter]=\"filter\"\n                                [tabIndex]=\"tabIndex\">\n                            </kendo-grid-filter-menu>\n                            <kendo-grid-column-menu *ngIf=\"showColumnMenu(column)\"\n                                [standalone]=\"false\"\n                                [settings]=\"columnMenuSettings\"\n                                [column]=\"column\"\n                                [columnMenuTemplate]=\"columnMenuTemplate\"\n                                [sort]=\"sort\"\n                                [filter]=\"filter\"\n                                [sortable]=\"sortable\"\n                                [tabIndex]=\"tabIndex\">\n                            </kendo-grid-column-menu>\n                        </span>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"isCheckboxColumn(column) && !column.headerTemplateRef && $any(column).showSelectAll\">\n                        <input\n                            class=\"k-checkbox k-checkbox-md k-rounded-md\"\n                            [attr.id]=\"selectAllCheckboxId()\"\n                            [attr.aria-label]=\"selectAllCheckboxLabel\"\n                            kendoGridSelectAllCheckbox\n                            kendoGridFocusable>\n                    </ng-container>\n                    <span kendoGridColumnHandle\n                        kendoDraggable\n                        class=\"k-column-resizer\"\n                        *ngIf=\"resizable\"\n                        [column]=\"column\"\n                        [columns]=\"columns\">\n                    </span>\n                </th>\n                <th *ngIf=\"isColumnGroupComponent(column)\"\n                    kendoGridLogicalCell\n                    [logicalRowIndex]=\"levelIndex\"\n                    [logicalColIndex]=\"logicalColumnIndex(column)\"\n                    [rowSpan]=\"column.rowspan(totalColumnLevels)\"\n                    [colSpan]=\"column.colspan\"\n                    [headerLabelText]=\"column.title || getColumnComponent(column).field\"\n                    kendoDropTarget\n                    kendoDraggable\n                    kendoDraggableColumn\n                    [enableDrag]=\"shouldActivate(column)\"\n                    [context]=\"{\n                        type: 'columnGroup',\n                        column: column,\n                        hint: column.title,\n                        lastColumn: last && columnIndex === 0\n                    }\"\n                    class=\"k-header\"\n                    [class.k-first]=\"isFirstOnRow(getColumnComponent(column), columnIndex)\"\n                    [class.k-filterable]=\"showColumnMenu(column)\"\n                    [class.k-grid-content-sticky]=\"column.sticky\"\n                    [ngClass]=\"column.headerClass\"\n                    [ngStyle]=\"column.headerStyle\"\n                    [attr.rowspan]=\"column.rowspan(totalColumnLevels)\"\n                    [attr.colspan]=\"column.colspan\">\n                    <span class=\"k-cell-inner\">\n                        <span class=\"k-link\">\n                            <ng-template\n                                [templateContext]=\"{\n                                    templateRef: column.headerTemplateRef,\n                                    columnIndex: lockedColumnsCount + columnIndex,\n                                    column: column,\n                                    $implicit: column\n                                }\">\n                            </ng-template>\n                            <ng-container *ngIf=\"!column.headerTemplateRef\">\n                                <span class=\"k-column-title\">{{column.displayTitle}}</span>\n                            </ng-container>\n                        </span>\n                        <kendo-grid-column-menu *ngIf=\"showColumnMenu(column)\"\n                            [standalone]=\"false\"\n                            [settings]=\"columnMenuSettings\"\n                            [column]=\"column\"\n                            [columnMenuTemplate]=\"columnMenuTemplate\">\n                        </kendo-grid-column-menu>\n                    </span>\n                    <span kendoGridColumnHandle\n                        kendoDraggable\n                        class=\"k-column-resizer\"\n                        *ngIf=\"resizable\"\n                        [column]=\"column\"\n                        [columns]=\"columns\">\n                    </span>\n                </th>\n            </ng-container>\n        </tr>\n        <tr *ngIf=\"showFilterRow\"\n            kendoGridFilterRow\n                [columns]=\"leafColumns\"\n                [filter]=\"filter\"\n                [groups]=\"groups\"\n                [detailTemplate]=\"detailTemplate\"\n                [lockedColumnsCount]=\"lockedColumnsCount\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"totalColumnLevels + 1\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"unlockedColumnsCount\"\n        ></tr>\n    </ng-container>\n    `, isInline: true, components: [{ type: FilterMenuComponent, selector: \"kendo-grid-filter-menu\", inputs: [\"column\", \"filter\", \"tabIndex\"] }, { type: ColumnMenuComponent, selector: \"kendo-grid-column-menu\", inputs: [\"standalone\", \"column\", \"settings\", \"sort\", \"filter\", \"sortable\", \"columnMenuTemplate\", \"tabIndex\"] }, { type: FilterRowComponent, selector: \"[kendoGridFilterRow]\", inputs: [\"columns\", \"filter\", \"groups\", \"detailTemplate\", \"logicalRowIndex\", \"lockedColumnsCount\"] }], directives: [{ type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: LogicalRowDirective, selector: \"[kendoGridLogicalRow]\", inputs: [\"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", \"dataRowIndex\", \"dataItem\"] }, { type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: LogicalCellDirective, selector: \"[kendoGridLogicalCell]\", inputs: [\"logicalColIndex\", \"logicalRowIndex\", \"logicalSlaveCell\", \"colIndex\", \"colSpan\", \"rowSpan\", \"groupItem\", \"dataRowIndex\", \"dataItem\", \"detailExpandCell\", \"headerLabelText\"] }, { type: DropTargetDirective, selector: \"[kendoDropTarget]\", inputs: [\"context\"], outputs: [\"enter\", \"leave\", \"drop\"] }, { type: i1$1.DraggableDirective, selector: \"[kendoDraggable]\", inputs: [\"enableDrag\"], outputs: [\"kendoPress\", \"kendoDrag\", \"kendoRelease\"] }, { type: DraggableColumnDirective, selector: \"[kendoDraggableColumn]\", inputs: [\"context\", \"enableDrag\"], outputs: [\"drag\"] }, { type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i4.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: TemplateContextDirective, selector: \"[templateContext]\", inputs: [\"templateContext\"] }, { type: SelectAllCheckboxDirective, selector: \"[kendoGridSelectAllCheckbox]\", inputs: [\"state\"], outputs: [\"selectAllChange\"] }, { type: FocusableDirective, selector: \"[kendoGridFocusable],\\n        [kendoGridEditCommand],\\n        [kendoGridRemoveCommand],\\n        [kendoGridSaveCommand],\\n        [kendoGridCancelCommand],\\n        [kendoGridSelectionCheckbox]\\n    \", inputs: [\"kendoGridFocusable\"] }, { type: ColumnHandleDirective, selector: \"[kendoGridColumnHandle]\", inputs: [\"columns\", \"column\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HeaderComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[kendoGridHeader]',\n                    template: `\n    <ng-container>\n        <tr *ngFor=\"let i of columnLevels; let levelIndex = index\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"levelIndex\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"unlockedColumnsCount\">\n            <th\n                class=\"k-group-cell k-header\"\n                role=\"presentation\"\n                *ngFor=\"let g of groups\">\n            </th>\n            <th class=\"k-hierarchy-cell k-header\"\n                role=\"gridcell\"\n                *ngIf=\"detailTemplate?.templateRef\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"levelIndex\"\n                    [logicalColIndex]=\"0\"\n                    aria-selected=\"false\"\n            >\n            </th>\n            <ng-container *ngFor=\"let column of columnsForLevel(levelIndex); trackBy: trackByIndex; let columnIndex = index; let last = last;\">\n                <th *ngIf=\"!isColumnGroupComponent(column)\"\n                    kendoGridLogicalCell\n                    [logicalRowIndex]=\"levelIndex\"\n                    [logicalColIndex]=\"logicalColumnIndex(column)\"\n                    [headerLabelText]=\"column.title || getColumnComponent(column).field\"\n                    [colSpan]=\"column.colspan\"\n                    [rowSpan]=\"column.rowspan(totalColumnLevels)\"\n                    role=\"columnheader\"\n                    aria-selected=\"false\"\n                    [attr.aria-sort]=\"sortState(getColumnComponent(column))\"\n                    [class.k-sorted]=\"!!sortState(getColumnComponent(column))\"\n                    (keydown)=\"onHeaderKeydown(getColumnComponent(column), $event)\"\n                    kendoDropTarget\n                    kendoDraggable\n                    kendoDraggableColumn\n                    [enableDrag]=\"shouldActivate(column)\"\n                    [context]=\"{\n                        field: getColumnComponent(column).field,\n                        type: 'column',\n                        column: column,\n                        hint: column.title || getColumnComponent(column).field,\n                        lastColumn: last && columnIndex === 0\n                    }\"\n                    class=\"k-header\"\n                    [class.k-filterable]=\"(showFilterMenu && isFilterable(getColumnComponent(column))) || showColumnMenu(column)\"\n                    [class.k-first]=\"isFirstOnRow(getColumnComponent(column), columnIndex)\"\n                    [class.k-grid-header-sticky]=\"column.sticky\"\n                    [ngClass]=\"column.headerClass\"\n                    [ngStyle]=\"column.sticky ? addStickyStyles(column) : column.headerStyle\"\n                    [attr.rowspan]=\"column.rowspan(totalColumnLevels)\"\n                    [attr.colspan]=\"column.colspan\">\n\n                    <ng-container *ngIf=\"!isSortable(getColumnComponent(column))\">\n                        <span class=\"k-cell-inner\">\n                            <span class=\"k-link\">\n                                <ng-template\n                                    [templateContext]=\"{\n                                        templateRef: column.headerTemplateRef,\n                                        columnIndex: column.leafIndex,\n                                        column: column,\n                                        $implicit: column\n                                    }\">\n                                </ng-template>\n                                <ng-container *ngIf=\"!column.headerTemplateRef\">\n                                    <span class=\"k-column-title\">{{column.displayTitle}}</span>\n                                </ng-container>\n                            </span>\n                            <kendo-grid-filter-menu\n                                *ngIf=\"showFilterMenu && isFilterable(getColumnComponent(column))\"\n                                [column]=\"getColumnComponent(column)\"\n                                [filter]=\"filter\"\n                                [tabIndex]=\"tabIndex\">\n                            </kendo-grid-filter-menu>\n                            <kendo-grid-column-menu *ngIf=\"showColumnMenu(column)\"\n                                [standalone]=\"false\"\n                                [settings]=\"columnMenuSettings\"\n                                [column]=\"column\"\n                                [columnMenuTemplate]=\"columnMenuTemplate\"\n                                [sort]=\"sort\"\n                                [filter]=\"filter\"\n                                [sortable]=\"sortable\"\n                                [tabIndex]=\"tabIndex\">\n                            </kendo-grid-column-menu>\n                        </span>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"isSortable(getColumnComponent(column))\">\n                        <span class=\"k-cell-inner\">\n                            <span #link class=\"k-link\" (click)=\"onSortClick(getColumnComponent(column), $event, link)\">\n                                <ng-template\n                                    [templateContext]=\"{\n                                        templateRef: column.headerTemplateRef,\n                                        columnIndex: column.leafIndex,\n                                        column: column,\n                                        $implicit: column\n                                    }\">\n                                </ng-template>\n                                <ng-container *ngIf=\"!column.headerTemplateRef\">\n                                    <span class=\"k-column-title\">{{column.displayTitle}}</span>\n                                </ng-container>\n                                <span role=\"note\" [attr.aria-label]=\"sortableLabel\" [ngClass]=\"sortIcon(getColumnComponent(column).field)\"></span>\n                                <span *ngIf=\"showSortNumbering(getColumnComponent(column))\" class=\"k-sort-order\">{{sortOrder(getColumnComponent(column).field)}}</span>\n                            </span>\n                            <span role=\"status\"\n                                class=\"k-sort-status\"\n                                [style.position]=\"'absolute'\"\n                                [style.left.px]=\"-10000\"\n                                [innerHtml]=\"sortStatus(getColumnComponent(column))\">\n                            </span>\n                            <kendo-grid-filter-menu\n                                *ngIf=\"showFilterMenu && isFilterable(getColumnComponent(column))\"\n                                [column]=\"getColumnComponent(column)\"\n                                [filter]=\"filter\"\n                                [tabIndex]=\"tabIndex\">\n                            </kendo-grid-filter-menu>\n                            <kendo-grid-column-menu *ngIf=\"showColumnMenu(column)\"\n                                [standalone]=\"false\"\n                                [settings]=\"columnMenuSettings\"\n                                [column]=\"column\"\n                                [columnMenuTemplate]=\"columnMenuTemplate\"\n                                [sort]=\"sort\"\n                                [filter]=\"filter\"\n                                [sortable]=\"sortable\"\n                                [tabIndex]=\"tabIndex\">\n                            </kendo-grid-column-menu>\n                        </span>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"isCheckboxColumn(column) && !column.headerTemplateRef && $any(column).showSelectAll\">\n                        <input\n                            class=\"k-checkbox k-checkbox-md k-rounded-md\"\n                            [attr.id]=\"selectAllCheckboxId()\"\n                            [attr.aria-label]=\"selectAllCheckboxLabel\"\n                            kendoGridSelectAllCheckbox\n                            kendoGridFocusable>\n                    </ng-container>\n                    <span kendoGridColumnHandle\n                        kendoDraggable\n                        class=\"k-column-resizer\"\n                        *ngIf=\"resizable\"\n                        [column]=\"column\"\n                        [columns]=\"columns\">\n                    </span>\n                </th>\n                <th *ngIf=\"isColumnGroupComponent(column)\"\n                    kendoGridLogicalCell\n                    [logicalRowIndex]=\"levelIndex\"\n                    [logicalColIndex]=\"logicalColumnIndex(column)\"\n                    [rowSpan]=\"column.rowspan(totalColumnLevels)\"\n                    [colSpan]=\"column.colspan\"\n                    [headerLabelText]=\"column.title || getColumnComponent(column).field\"\n                    kendoDropTarget\n                    kendoDraggable\n                    kendoDraggableColumn\n                    [enableDrag]=\"shouldActivate(column)\"\n                    [context]=\"{\n                        type: 'columnGroup',\n                        column: column,\n                        hint: column.title,\n                        lastColumn: last && columnIndex === 0\n                    }\"\n                    class=\"k-header\"\n                    [class.k-first]=\"isFirstOnRow(getColumnComponent(column), columnIndex)\"\n                    [class.k-filterable]=\"showColumnMenu(column)\"\n                    [class.k-grid-content-sticky]=\"column.sticky\"\n                    [ngClass]=\"column.headerClass\"\n                    [ngStyle]=\"column.headerStyle\"\n                    [attr.rowspan]=\"column.rowspan(totalColumnLevels)\"\n                    [attr.colspan]=\"column.colspan\">\n                    <span class=\"k-cell-inner\">\n                        <span class=\"k-link\">\n                            <ng-template\n                                [templateContext]=\"{\n                                    templateRef: column.headerTemplateRef,\n                                    columnIndex: lockedColumnsCount + columnIndex,\n                                    column: column,\n                                    $implicit: column\n                                }\">\n                            </ng-template>\n                            <ng-container *ngIf=\"!column.headerTemplateRef\">\n                                <span class=\"k-column-title\">{{column.displayTitle}}</span>\n                            </ng-container>\n                        </span>\n                        <kendo-grid-column-menu *ngIf=\"showColumnMenu(column)\"\n                            [standalone]=\"false\"\n                            [settings]=\"columnMenuSettings\"\n                            [column]=\"column\"\n                            [columnMenuTemplate]=\"columnMenuTemplate\">\n                        </kendo-grid-column-menu>\n                    </span>\n                    <span kendoGridColumnHandle\n                        kendoDraggable\n                        class=\"k-column-resizer\"\n                        *ngIf=\"resizable\"\n                        [column]=\"column\"\n                        [columns]=\"columns\">\n                    </span>\n                </th>\n            </ng-container>\n        </tr>\n        <tr *ngIf=\"showFilterRow\"\n            kendoGridFilterRow\n                [columns]=\"leafColumns\"\n                [filter]=\"filter\"\n                [groups]=\"groups\"\n                [detailTemplate]=\"detailTemplate\"\n                [lockedColumnsCount]=\"lockedColumnsCount\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"totalColumnLevels + 1\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"unlockedColumnsCount\"\n        ></tr>\n    </ng-container>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: SinglePopupService }, { type: DragHintService }, { type: DropCueService }, { type: ColumnReorderService }, { type: IdService }, { type: SortService }, { type: i1.LocalizationService }, { type: ColumnInfoService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { totalColumnLevels: [{\n                type: Input\n            }], columns: [{\n                type: Input\n            }], groups: [{\n                type: Input\n            }], detailTemplate: [{\n                type: Input\n            }], scrollable: [{\n                type: Input\n            }], filterable: [{\n                type: Input\n            }], sort: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], sortable: [{\n                type: Input\n            }], groupable: [{\n                type: Input\n            }], lockedColumnsCount: [{\n                type: Input\n            }], resizable: [{\n                type: Input\n            }], reorderable: [{\n                type: Input\n            }], columnMenu: [{\n                type: Input\n            }], columnMenuTemplate: [{\n                type: Input\n            }], totalColumnsCount: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], headerClass: [{\n                type: HostBinding,\n                args: ['class.k-grid-header']\n            }], dropTargets: [{\n                type: ViewChildren,\n                args: [DropTargetDirective]\n            }], filterMenus: [{\n                type: ViewChildren,\n                args: [FilterMenuComponent]\n            }], columnMenus: [{\n                type: ViewChildren,\n                args: [ColumnMenuComponent]\n            }] } });\n\n/**\n * @hidden\n */\nconst update = (arr, idx, value) => ([\n    ...arr.slice(0, idx + 1),\n    ...(arr.slice(idx + 1).map(x => x + value))\n]);\n/**\n * @hidden\n */\nclass RowHeightService {\n    constructor(total = 0, rowHeight, detailRowHeight) {\n        this.total = total;\n        this.rowHeight = rowHeight;\n        this.detailRowHeight = detailRowHeight;\n        this.offsets = [];\n        this.heights = [];\n        let agg = 0;\n        for (let idx = 0; idx < total; idx++) {\n            this.offsets.push(agg);\n            agg += rowHeight;\n            this.heights.push(rowHeight);\n        }\n    }\n    height(rowIndex) {\n        return this.heights[rowIndex];\n    }\n    expandDetail(rowIndex) {\n        if (this.height(rowIndex) === this.rowHeight) {\n            this.updateRowHeight(rowIndex, this.detailRowHeight);\n        }\n    }\n    collapseDetail(rowIndex) {\n        if (this.height(rowIndex) > this.rowHeight) {\n            this.updateRowHeight(rowIndex, this.detailRowHeight * -1);\n        }\n    }\n    isExpanded(rowIndex) {\n        return this.height(rowIndex) > this.rowHeight;\n    }\n    index(position) {\n        if (position < 0) {\n            return undefined;\n        }\n        const result = this.offsets.reduce((prev, current, idx) => {\n            if (prev !== undefined) {\n                return prev;\n            }\n            else if (current === position) {\n                return idx;\n            }\n            else if (current > position) {\n                return idx - 1;\n            }\n            return undefined;\n        }, undefined);\n        return result === undefined ? this.total - 1 : result;\n    }\n    offset(rowIndex) {\n        return this.offsets[rowIndex];\n    }\n    totalHeight() {\n        return this.heights.reduce((prev, curr) => prev + curr, 0);\n    }\n    updateRowHeight(rowIndex, value) {\n        if (this.total > 0) {\n            this.heights[rowIndex] += value;\n            this.offsets = update(this.offsets, rowIndex, value);\n        }\n    }\n}\n\n/**\n * @hidden\n */\nclass ScrollAction {\n    constructor(offset) {\n        this.offset = offset;\n    }\n}\n/**\n * @hidden\n */\nclass PageAction {\n    constructor(skip, take) {\n        this.skip = skip;\n        this.take = take;\n    }\n}\n/**\n * @hidden\n */\nclass ScrollBottomAction {\n}\nconst SCROLL_BOTTOM_THRESHOLD = 2;\n/**\n * @hidden\n */\nclass ScrollerService {\n    constructor(scrollObservable) {\n        this.scrollObservable = scrollObservable;\n        this.firstLoaded = 0;\n    }\n    create(rowHeightService, skip, take, total) {\n        this.rowHeightService = rowHeightService;\n        this.firstLoaded = skip;\n        this.lastLoaded = skip + take;\n        this.take = take;\n        this.total = total;\n        this.lastScrollTop = 0;\n        const subject = new BehaviorSubject(new ScrollAction(this.rowHeightService.offset(skip)));\n        this.subscription = Observable.create(observer => {\n            this.unsubscribe();\n            this.scrollSubscription = this.scrollObservable.subscribe(x => this.onScroll(x, observer));\n        }).subscribe(x => subject.next(x));\n        return subject;\n    }\n    destroy() {\n        this.unsubscribe();\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    onScroll({ scrollTop, offsetHeight, scrollHeight, clientHeight }, observer) {\n        if (this.lastScrollTop === scrollTop) {\n            return;\n        }\n        const up = this.lastScrollTop >= scrollTop;\n        this.lastScrollTop = scrollTop;\n        let firstItemIndex = this.rowHeightService.index(scrollTop);\n        let firstItemOffset = this.rowHeightService.offset(firstItemIndex);\n        const lastItemIndex = this.rowHeightService.index(scrollTop + offsetHeight);\n        if (!up) {\n            if (lastItemIndex >= this.lastLoaded && this.lastLoaded < this.total) {\n                const overflow = (firstItemIndex + this.take) - this.total;\n                if (overflow > 0) {\n                    firstItemIndex = firstItemIndex - overflow;\n                    firstItemOffset = this.rowHeightService.offset(firstItemIndex);\n                }\n                this.firstLoaded = firstItemIndex;\n                observer.next(new ScrollAction(firstItemOffset));\n                let nextTake = this.firstLoaded + this.take;\n                this.lastLoaded = Math.min(nextTake, this.total);\n                nextTake = nextTake > this.total ? this.total - this.firstLoaded : this.take;\n                observer.next(new PageAction(this.firstLoaded, this.take));\n            }\n            else {\n                const atBottom = scrollHeight - clientHeight - scrollTop < SCROLL_BOTTOM_THRESHOLD;\n                if (atBottom) {\n                    observer.next(new ScrollBottomAction());\n                }\n            }\n        }\n        if (up && firstItemIndex < this.firstLoaded) {\n            const nonVisibleBuffer = Math.floor(this.take * 0.3);\n            this.firstLoaded = Math.max(firstItemIndex - nonVisibleBuffer, 0);\n            observer.next(new ScrollAction(this.rowHeightService.offset(this.firstLoaded)));\n            this.lastLoaded = Math.min(this.firstLoaded + this.take, this.total);\n            observer.next(new PageAction(this.firstLoaded, this.take));\n        }\n    }\n    unsubscribe() {\n        if (this.scrollSubscription) {\n            this.scrollSubscription.unsubscribe();\n            this.scrollSubscription = undefined;\n        }\n    }\n}\n\n/**\n * @hidden\n */\nconst NON_DATA_CELL_CLASSES = 'k-hierarchy-cell k-detail-cell k-group-cell';\n/**\n * @hidden\n */\nconst NON_DATA_ROW_CLASSES = 'k-grouping-row k-group-footer k-detail-row k-grid-norecords';\n/**\n * @hidden\n */\nconst IGNORE_TARGET_CLASSSES = 'k-icon';\n/**\n * @hidden\n */\nconst IGNORE_CONTAINER_CLASSES = 'k-grid k-grid-ignore-click';\n\n/**\n * Represents the command columns of the Grid. You have to define the content of the\n * column inside an `<ng-template>` tag. The template context is set to the current\n * data item. For more information and examples on using the passed fields\n * and the command directives, refer to the article on\n * [editing the Grid in Angular Reactive Forms]({% slug inline_editing_grid %}#toc-using-reactive-forms).\n *\n * The following additional fields are passed:\n * - `columnIndex`&mdash;The current column index.\n * - `rowIndex`&mdash;The current data row index. If inside a new item row, `rowIndex`is `-1`.\n * - `dataItem`&mdash;The current data item.\n * - `column`&mdash;The current column instance.\n * - `isNew`&mdash;The state of the current item.\n *\n * Usually, the template contains CRUD command directives such as:\n * - [EditCommandDirective]({% slug api_grid_editcommanddirective %})\n * - [RemoveCommandDirective]({% slug api_grid_removecommanddirective %})\n * - [CancelCommandDirective]({% slug api_grid_cancelcommanddirective %})\n * - [SaveCommandDirective]({% slug api_grid_savecommanddirective %})\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" [width]=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" [width]=\"230\">\n *          </kendo-grid-column>\n *          <kendo-grid-command-column title=\"command\" [width]=\"220\">\n *               <ng-template kendoGridCellTemplate>\n *                   <button kendoGridEditCommand class=\"k-primary\">Edit</button>\n *                   <button kendoGridRemoveCommand>Remove</button>\n *               </ng-template>\n *           </kendo-grid-command-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\nclass CommandColumnComponent extends ColumnBase {\n    constructor(parent, idService) {\n        super(parent, idService);\n        this.parent = parent;\n    }\n    get templateRef() {\n        return this.template ? this.template.templateRef : undefined;\n    }\n}\nCommandColumnComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CommandColumnComponent, deps: [{ token: ColumnBase, host: true, optional: true, skipSelf: true }, { token: IdService, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCommandColumnComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: CommandColumnComponent, selector: \"kendo-grid-command-column\", providers: [\n        {\n            provide: ColumnBase,\n            useExisting: forwardRef(() => CommandColumnComponent)\n        }\n    ], queries: [{ propertyName: \"template\", first: true, predicate: CellTemplateDirective, descendants: true }], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CommandColumnComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: ColumnBase,\n                            useExisting: forwardRef(() => CommandColumnComponent)\n                        }\n                    ],\n                    selector: 'kendo-grid-command-column',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: ColumnBase, decorators: [{\n                    type: SkipSelf\n                }, {\n                    type: Host\n                }, {\n                    type: Optional\n                }] }, { type: IdService, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { template: [{\n                type: ContentChild,\n                args: [CellTemplateDirective, { static: false }]\n            }] } });\n\n/**\n * Represents the row-selection checkbox of the Grid. The directive expects the\n * index of the current row as an input parameter. Inside the\n * [CheckboxColumnComponent]({% slug api_grid_checkboxcolumncomponent %}), apply the\n * directive to an `input` element. When the user clicks the checkbox that is associated\n * with the directive, a [selectionChange]({% slug api_grid_gridcomponent %}#toc-selectionChange)\n * event is triggered.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\" [selectable]=\"{enabled: true, checkboxOnly: true}\">\n *          <kendo-grid-checkbox-column title=\"Custom checkbox\">\n *            <ng-template kendoGridCellTemplate let-idx=\"rowIndex\">\n *              Select row <input [kendoGridSelectionCheckbox]=\"idx\" />\n *            </ng-template>\n *          </kendo-grid-checkbox-column>\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" [width]=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\nclass SelectionCheckboxDirective {\n    constructor(selectionService, el, renderer, ngZone) {\n        this.selectionService = selectionService;\n        this.el = el;\n        this.renderer = renderer;\n        this.ngZone = ngZone;\n        this.type = 'checkbox';\n        this.ngZone.runOutsideAngular(() => {\n            this.destroyClick = this.renderer.listen(this.el.nativeElement, 'click', this.onClick.bind(this));\n            this.destroyKeyDown = this.renderer.listen(this.el.nativeElement, 'keydown', this.onKeyDown.bind(this));\n        });\n    }\n    ngAfterContentChecked() {\n        this.setCheckedState();\n    }\n    ngOnDestroy() {\n        if (this.destroyClick) {\n            this.destroyClick();\n        }\n        if (this.destroyKeyDown) {\n            this.destroyKeyDown();\n        }\n    }\n    onClick() {\n        if (this.selectionService.options.enabled) {\n            this.ngZone.run(() => {\n                const ev = this.selectionService.toggleByIndex(this.itemIndex);\n                ev.ctrlKey = true;\n                ev.shiftKey = false;\n                this.selectionService.changes.emit(ev);\n            });\n        }\n    }\n    onKeyDown(e) {\n        if (e.keyCode === Keys.Enter) {\n            this.onClick();\n        }\n    }\n    /*\n     * @hidden\n     */\n    setCheckedState() {\n        this.renderer.setProperty(this.el.nativeElement, 'checked', this.selectionService.isSelected(this.itemIndex));\n    }\n}\nSelectionCheckboxDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SelectionCheckboxDirective, deps: [{ token: SelectionService }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nSelectionCheckboxDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: SelectionCheckboxDirective, selector: \"[kendoGridSelectionCheckbox]\", inputs: { itemIndex: [\"kendoGridSelectionCheckbox\", \"itemIndex\"] }, host: { properties: { \"attr.type\": \"this.type\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SelectionCheckboxDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridSelectionCheckbox]'\n                }]\n        }], ctorParameters: function () { return [{ type: SelectionService }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.NgZone }]; }, propDecorators: { itemIndex: [{\n                type: Input,\n                args: ['kendoGridSelectionCheckbox']\n            }], type: [{\n                type: HostBinding,\n                args: ['attr.type']\n            }] } });\n\nconst FORMAT_REGEX = /\\{\\d+:?/;\n/**\n * @hidden\n */\nclass FieldAccessorPipe {\n    constructor(intlService) {\n        this.intlService = intlService;\n    }\n    transform(dataItem, fieldName, format) {\n        if (!isNullOrEmptyString(fieldName)) {\n            const value = getter(fieldName)(dataItem);\n            if (!isNullOrEmptyString(format)) {\n                return this.formatValue(format, value);\n            }\n            return value;\n        }\n        return dataItem;\n    }\n    formatValue(format, value) {\n        const intl = this.intlService;\n        if (isString(format) && format.match(FORMAT_REGEX)) {\n            return intl.format(format, value);\n        }\n        return intl.toString(value, format);\n    }\n}\nFieldAccessorPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FieldAccessorPipe, deps: [{ token: i1$5.IntlService }], target: i0.ɵɵFactoryTarget.Pipe });\nFieldAccessorPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FieldAccessorPipe, name: \"valueOf\", pure: false });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FieldAccessorPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/pipe-prefix\n                    name: 'valueOf',\n                    pure: false\n                }]\n        }], ctorParameters: function () { return [{ type: i1$5.IntlService }]; } });\n\n/**\n * @hidden\n */\nclass CellComponent {\n    constructor(editService, idService, localizationService, cellContext) {\n        this.editService = editService;\n        this.idService = idService;\n        this.localizationService = localizationService;\n        this.cellContext = cellContext;\n        this.isNew = false;\n        this.isLoading = false;\n        this.isVirtual = false;\n        this._templateContext = {};\n        this._editTemplateContext = {};\n    }\n    get commandCellClass() {\n        return this.isCommand(this.column);\n    }\n    set rowIndex(index) {\n        this._rowIndex = index;\n        this.updateCellContext();\n    }\n    get rowIndex() {\n        return this._rowIndex;\n    }\n    get isEdited() {\n        if (!(this.editService.isEditing() || this.isNew) || !this.isColumnEditable) {\n            return false;\n        }\n        const editContext = this.editService.columnContext(this.rowIndex, this.column);\n        return this.isFieldEditable(editContext, this.column);\n    }\n    get showLoading() {\n        return this.isVirtual && this.isLoading;\n    }\n    get formGroup() {\n        return this.editService.context(this.rowIndex).group;\n    }\n    get templateContext() {\n        return this._templateContext;\n    }\n    get editTemplateContext() {\n        this._editTemplateContext.$implicit = this.formGroup;\n        this._editTemplateContext.isNew = this.isNew;\n        this._editTemplateContext.column = this.column;\n        this._editTemplateContext.dataItem = this.dataItem;\n        this._editTemplateContext.formGroup = this.formGroup;\n        this._editTemplateContext.rowIndex = this.rowIndex;\n        return this._editTemplateContext;\n    }\n    get format() {\n        if (isColumnComponent(this.column) && !isNullOrEmptyString(this.column.format)) {\n            return extractFormat(this.column.format);\n        }\n        return undefined;\n    }\n    get isBoundColumn() {\n        return this.column.field && !this.column.templateRef;\n    }\n    get isCheckboxColumn() {\n        return isCheckboxColumn(this.column) && !this.column.templateRef;\n    }\n    get selectionCheckboxId() {\n        return this.idService.selectionCheckboxId(this.rowIndex);\n    }\n    get selectionCheckboxLabel() {\n        return this.localizationService.get('selectionCheckboxLabel');\n    }\n    get isSpanColumn() {\n        return isSpanColumn(this.column) && !this.column.templateRef;\n    }\n    get childColumns() {\n        return columnsToRender([this.column]);\n    }\n    get isColumnEditable() {\n        if (!this.column || this.isCommand(this.column)) {\n            return false;\n        }\n        return this.column.editable !== false;\n    }\n    ngDoCheck() {\n        this.updateCellContext();\n    }\n    ngOnChanges(_changes) {\n        this.updateTemplateContext();\n    }\n    ngAfterContentChecked() {\n        this.updateTemplateContext();\n    }\n    isCommand(column) {\n        return column instanceof CommandColumnComponent;\n    }\n    isFieldEditable(editContext, column) {\n        if (!isPresent(editContext)) {\n            return false;\n        }\n        if (isPresent(column.editTemplate)) {\n            return true;\n        }\n        return isPresent(editContext.group) && isPresent(editContext.group.get(column.field));\n    }\n    updateCellContext() {\n        if (this.cellContext) {\n            this.cellContext.rowIndex = this._rowIndex;\n        }\n    }\n    updateTemplateContext() {\n        if (!this.column.templateRef) {\n            return;\n        }\n        const context = this._templateContext;\n        context.isNew = this.isNew;\n        context.column = this.column;\n        context.dataItem = this.dataItem;\n        context.rowIndex = this.rowIndex;\n        context.columnIndex = this.columnIndex;\n        context.$implicit = this.dataItem;\n    }\n}\nCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CellComponent, deps: [{ token: EditService }, { token: IdService }, { token: i1.LocalizationService }, { token: CELL_CONTEXT, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: CellComponent, selector: \"[kendoGridCell]\", inputs: { column: \"column\", columnIndex: \"columnIndex\", isNew: \"isNew\", isLoading: \"isLoading\", isVirtual: \"isVirtual\", loadingTemplate: \"loadingTemplate\", rowIndex: \"rowIndex\", dataItem: \"dataItem\" }, host: { properties: { \"class.k-command-cell\": \"this.commandCellClass\" } }, usesOnChanges: true, ngImport: i0, template: `\n        <ng-container [ngSwitch]=\"isEdited\">\n            <ng-container *ngSwitchCase=\"false\">\n                <ng-container *ngIf=\"!showLoading; else loading\">\n                    <ng-template *ngIf=\"column.templateRef\"\n                        [ngTemplateOutlet]=\"column.templateRef\"\n                        [ngTemplateOutletContext]=\"templateContext\">\n                    </ng-template>\n                    <ng-container *ngIf=\"isSpanColumn\">\n                        <ng-container *ngFor=\"let childColumn of childColumns\">\n                            {{ dataItem | valueOf: childColumn.field: childColumn.format}}\n                        </ng-container>\n                    </ng-container>\n                    <ng-container *ngIf=\"isBoundColumn\">{{ dataItem | valueOf: column.field: column.format}}</ng-container>\n                    <ng-container *ngIf=\"isCheckboxColumn && !isNew\">\n                        <input\n                            class=\"k-checkbox k-checkbox-md k-rounded-md\"\n                            [kendoGridSelectionCheckbox]=\"rowIndex\"\n                            [attr.id]=\"selectionCheckboxId\"\n                            [attr.aria-label]=\"selectionCheckboxLabel\" />\n                    </ng-container>\n                </ng-container>\n                <ng-template #loading>\n                    <ng-template\n                        *ngIf=\"loadingTemplate\"\n                        [ngTemplateOutlet]=\"loadingTemplate\"\n                        [ngTemplateOutletContext]=\"{$implicit: column}\">\n                    </ng-template>\n                    <div *ngIf=\"!loadingTemplate\" class=\"k-skeleton-text k-skeleton\"></div>\n                </ng-template>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"true\">\n                <ng-template\n                    *ngIf=\"column.editTemplateRef\"\n                    [ngTemplateOutlet]=\"column.editTemplateRef\"\n                    [ngTemplateOutletContext]=\"editTemplateContext\">\n                </ng-template>\n                <ng-container [ngSwitch]=\"column.editor\" *ngIf=\"!column.editTemplateRef\">\n                    <kendo-numerictextbox\n                        *ngSwitchCase=\"'numeric'\"\n                        [format]=\"format\"\n                        [formControl]=\"$any(formGroup.get(column.field))\"\n                        kendoGridFocusable\n                    ></kendo-numerictextbox>\n\n                    <kendo-datepicker\n                        *ngSwitchCase=\"'date'\"\n                        [format]=\"format\"\n                        [formControl]=\"$any(formGroup.get(column.field))\"\n                        kendoGridFocusable\n                    ></kendo-datepicker>\n\n                    <input\n                        *ngSwitchCase=\"'boolean'\"\n                        type=\"checkbox\"\n                        class=\"k-checkbox k-checkbox-md k-rounded-md\"\n                        [formControl]=\"$any(formGroup.get(column.field))\"\n                        kendoGridFocusable\n                    />\n\n                    <input\n                        *ngSwitchDefault\n                        type=\"text\"\n                        class=\"k-textbox k-input k-rounded-md\"\n                        [formControl]=\"$any(formGroup.get(column.field))\"\n                        kendoGridFocusable\n                    />\n                </ng-container>\n            </ng-container>\n        </ng-container>\n    `, isInline: true, components: [{ type: i4$1.NumericTextBoxComponent, selector: \"kendo-numerictextbox\", inputs: [\"focusableId\", \"disabled\", \"readonly\", \"title\", \"autoCorrect\", \"format\", \"max\", \"min\", \"decimals\", \"placeholder\", \"step\", \"spinners\", \"rangeValidation\", \"tabindex\", \"tabIndex\", \"changeValueOnScroll\", \"selectOnFocus\", \"value\", \"maxlength\", \"size\", \"rounded\", \"fillMode\"], outputs: [\"valueChange\", \"focus\", \"blur\"], exportAs: [\"kendoNumericTextBox\"] }, { type: i4$3.DatePickerComponent, selector: \"kendo-datepicker\", inputs: [\"cellTemplate\", \"monthCellTemplate\", \"yearCellTemplate\", \"decadeCellTemplate\", \"centuryCellTemplate\", \"weekNumberTemplate\", \"headerTitleTemplate\", \"navigationItemTemplate\", \"activeView\", \"bottomView\", \"topView\", \"calendarType\", \"animateCalendarNavigation\", \"disabled\", \"readonly\", \"readOnlyInput\", \"popupSettings\", \"navigation\", \"min\", \"max\", \"incompleteDateValidation\", \"focusedDate\", \"value\", \"format\", \"twoDigitYearMax\", \"formatPlaceholder\", \"placeholder\", \"tabindex\", \"tabIndex\", \"disabledDates\", \"title\", \"rangeValidation\", \"disabledDatesValidation\", \"weekNumber\", \"size\", \"rounded\", \"fillMode\"], outputs: [\"valueChange\", \"focus\", \"blur\", \"open\", \"close\"], exportAs: [\"kendo-datepicker\"] }], directives: [{ type: i4.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i4.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: FocusableDirective, selector: \"[kendoGridFocusable],\\n        [kendoGridEditCommand],\\n        [kendoGridRemoveCommand],\\n        [kendoGridSaveCommand],\\n        [kendoGridCancelCommand],\\n        [kendoGridSelectionCheckbox]\\n    \", inputs: [\"kendoGridFocusable\"] }, { type: SelectionCheckboxDirective, selector: \"[kendoGridSelectionCheckbox]\", inputs: [\"kendoGridSelectionCheckbox\"] }, { type: i4$2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i4$2.FormControlDirective, selector: \"[formControl]\", inputs: [\"disabled\", \"formControl\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { type: i4$2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { type: i4.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { type: i4$2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }], pipes: { \"valueOf\": FieldAccessorPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[kendoGridCell]',\n                    template: `\n        <ng-container [ngSwitch]=\"isEdited\">\n            <ng-container *ngSwitchCase=\"false\">\n                <ng-container *ngIf=\"!showLoading; else loading\">\n                    <ng-template *ngIf=\"column.templateRef\"\n                        [ngTemplateOutlet]=\"column.templateRef\"\n                        [ngTemplateOutletContext]=\"templateContext\">\n                    </ng-template>\n                    <ng-container *ngIf=\"isSpanColumn\">\n                        <ng-container *ngFor=\"let childColumn of childColumns\">\n                            {{ dataItem | valueOf: childColumn.field: childColumn.format}}\n                        </ng-container>\n                    </ng-container>\n                    <ng-container *ngIf=\"isBoundColumn\">{{ dataItem | valueOf: column.field: column.format}}</ng-container>\n                    <ng-container *ngIf=\"isCheckboxColumn && !isNew\">\n                        <input\n                            class=\"k-checkbox k-checkbox-md k-rounded-md\"\n                            [kendoGridSelectionCheckbox]=\"rowIndex\"\n                            [attr.id]=\"selectionCheckboxId\"\n                            [attr.aria-label]=\"selectionCheckboxLabel\" />\n                    </ng-container>\n                </ng-container>\n                <ng-template #loading>\n                    <ng-template\n                        *ngIf=\"loadingTemplate\"\n                        [ngTemplateOutlet]=\"loadingTemplate\"\n                        [ngTemplateOutletContext]=\"{$implicit: column}\">\n                    </ng-template>\n                    <div *ngIf=\"!loadingTemplate\" class=\"k-skeleton-text k-skeleton\"></div>\n                </ng-template>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"true\">\n                <ng-template\n                    *ngIf=\"column.editTemplateRef\"\n                    [ngTemplateOutlet]=\"column.editTemplateRef\"\n                    [ngTemplateOutletContext]=\"editTemplateContext\">\n                </ng-template>\n                <ng-container [ngSwitch]=\"column.editor\" *ngIf=\"!column.editTemplateRef\">\n                    <kendo-numerictextbox\n                        *ngSwitchCase=\"'numeric'\"\n                        [format]=\"format\"\n                        [formControl]=\"$any(formGroup.get(column.field))\"\n                        kendoGridFocusable\n                    ></kendo-numerictextbox>\n\n                    <kendo-datepicker\n                        *ngSwitchCase=\"'date'\"\n                        [format]=\"format\"\n                        [formControl]=\"$any(formGroup.get(column.field))\"\n                        kendoGridFocusable\n                    ></kendo-datepicker>\n\n                    <input\n                        *ngSwitchCase=\"'boolean'\"\n                        type=\"checkbox\"\n                        class=\"k-checkbox k-checkbox-md k-rounded-md\"\n                        [formControl]=\"$any(formGroup.get(column.field))\"\n                        kendoGridFocusable\n                    />\n\n                    <input\n                        *ngSwitchDefault\n                        type=\"text\"\n                        class=\"k-textbox k-input k-rounded-md\"\n                        [formControl]=\"$any(formGroup.get(column.field))\"\n                        kendoGridFocusable\n                    />\n                </ng-container>\n            </ng-container>\n        </ng-container>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: EditService }, { type: IdService }, { type: i1.LocalizationService }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CELL_CONTEXT]\n                }] }]; }, propDecorators: { commandCellClass: [{\n                type: HostBinding,\n                args: ['class.k-command-cell']\n            }], column: [{\n                type: Input\n            }], columnIndex: [{\n                type: Input\n            }], isNew: [{\n                type: Input\n            }], isLoading: [{\n                type: Input\n            }], isVirtual: [{\n                type: Input\n            }], loadingTemplate: [{\n                type: Input\n            }], rowIndex: [{\n                type: Input\n            }], dataItem: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass GroupHeaderComponent {\n    constructor(groupsService, groupInfoService, localization) {\n        this.groupsService = groupsService;\n        this.groupInfoService = groupInfoService;\n        this.localization = localization;\n        this.skipGroupDecoration = false;\n        this.hasDetails = false;\n        this.totalColumnsCount = 0;\n        this.groups = [];\n        this.isExpanded = false;\n    }\n    get groupItemClass() {\n        return true;\n    }\n    ngDoCheck() {\n        const groupArgs = {\n            group: this.item.data,\n            groupIndex: this.item.index,\n            parentGroup: getGroupRowArgs(this.item.parentGroup)\n        };\n        this.isExpanded = this.groupsService.isExpanded(groupArgs);\n    }\n    prefixGroupCell(item) {\n        return new Array(item.level);\n    }\n    toggleGroup(item) {\n        this.groupsService.toggleRow(item);\n        return false;\n    }\n    groupSpan(item) {\n        const groupCount = (this.groups || []).length;\n        const detailOffset = this.hasDetails ? 1 : 0;\n        if (this.hasGroupHeaderColumn) {\n            return groupCount + 1 + detailOffset - item.level;\n        }\n        let columnCount = columnsSpan(this.columns);\n        if (this.skipGroupDecoration) {\n            return columnCount;\n        }\n        return groupCount + columnCount + detailOffset - item.level;\n    }\n    logicalColSpan() {\n        return this.skipGroupDecoration ? 1 : this.totalColumnsCount;\n    }\n    ariaRole() {\n        if (this.skipGroupDecoration) {\n            return 'presentation';\n        }\n        return 'gridcell';\n    }\n    formatForGroup(item) {\n        return this.groupInfoService.formatForGroup(item);\n    }\n    groupTitle(item) {\n        return this.groupInfoService.groupTitle(item);\n    }\n    groupHeaderTemplate(item) {\n        return this.groupInfoService.groupHeaderTemplate(item);\n    }\n    get groupButtonTitle() {\n        const messageKey = this.isExpanded ? 'groupCollapse' : 'groupExpand';\n        return this.localization.get(messageKey);\n    }\n}\nGroupHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupHeaderComponent, deps: [{ token: GroupsService }, { token: GroupInfoService }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nGroupHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: GroupHeaderComponent, selector: \"[kendoGridGroupHeader]\", inputs: { rowIndex: \"rowIndex\", logicalRowIndex: \"logicalRowIndex\", item: \"item\", skipGroupDecoration: \"skipGroupDecoration\", hasDetails: \"hasDetails\", totalColumnsCount: \"totalColumnsCount\", hasGroupHeaderColumn: \"hasGroupHeaderColumn\", groupHeaderColumns: \"groupHeaderColumns\", columns: \"columns\", groups: \"groups\" }, host: { properties: { \"class.k-grouping-row\": \"this.groupItemClass\" } }, ngImport: i0, template: `\n        <ng-container *ngIf=\"!skipGroupDecoration\">\n            <td class=\"k-group-cell\"\n                role=\"presentation\"\n                *ngFor=\"let g of prefixGroupCell(item)\"></td>\n        </ng-container>\n        <td [attr.colspan]=\"groupSpan(item)\" *ngIf=\"!(skipGroupDecoration && hasGroupHeaderColumn)\"\n            [attr.role]=\"ariaRole()\"\n            aria-selected=\"false\"\n            [attr.aria-expanded]=\"isExpanded\"\n            kendoGridLogicalCell\n            [logicalRowIndex]=\"logicalRowIndex\"\n            [logicalColIndex]=\"0\"\n            [logicalSlaveCell]=\"skipGroupDecoration\"\n            [groupItem]=\"item\"\n            [colSpan]=\"logicalColSpan()\">\n            <p class=\"k-reset\">\n                <ng-container *ngIf=\"!skipGroupDecoration\">\n                    <a href=\"#\" tabindex=\"-1\" (click)=\"toggleGroup(item)\"\n                        class=\"k-icon\"\n                        [ngClass]=\"{ 'k-i-caret-alt-down': isExpanded, 'k-i-caret-alt-right': !isExpanded }\" role=\"presentation\"\n                        [attr.title]=\"groupButtonTitle\"\n                        [attr.aria-label]=\"groupButtonTitle\">\n                    </a>\n                    <ng-container *ngIf=\"!groupHeaderTemplate(item)\">\n                    {{groupTitle(item)}}: {{item.data | valueOf:\"value\": formatForGroup(item)}}\n                    </ng-container>\n                    <ng-template\n                        [templateContext]=\"{\n                            templateRef: groupHeaderTemplate(item),\n                            group: item.data,\n                            aggregates: item.data?.aggregates,\n                            value: item.data?.value,\n                            field: item.data?.field,\n                            index: item.index,\n                            expanded: isExpanded,\n                            $implicit: item.data\n                            }\">\n                    </ng-template>\n                </ng-container>\n            </p>\n        </td>\n        <ng-container *ngIf=\"hasGroupHeaderColumn\">\n            <td *ngFor=\"let column of groupHeaderColumns; let index = index\"\n                role=\"gridcell\"\n                aria-selected=\"false\"\n                kendoGridLogicalCell\n                [logicalRowIndex]=\"logicalRowIndex\"\n                [logicalColIndex]=\"index + 1\"\n                [logicalSlaveCell]=\"false\"\n                [groupItem]=\"item\"\n                [colSpan]=\"1\"\n            >\n                <ng-template *ngIf=\"column.groupHeaderColumnTemplateRef\" [ngTemplateOutlet]=\"column.groupHeaderColumnTemplateRef\"\n                    [ngTemplateOutletContext]=\"{\n                        group: item.data,\n                        aggregates: item.data?.aggregates,\n                        value: item.data?.value,\n                        field: item.data?.field,\n                        index: item.index,\n                        $implicit: item.data\n                        }\">\n                </ng-template>\n            </td>\n        </ng-container>\n    `, isInline: true, directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: LogicalCellDirective, selector: \"[kendoGridLogicalCell]\", inputs: [\"logicalColIndex\", \"logicalRowIndex\", \"logicalSlaveCell\", \"colIndex\", \"colSpan\", \"rowSpan\", \"groupItem\", \"dataRowIndex\", \"dataItem\", \"detailExpandCell\", \"headerLabelText\"] }, { type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: TemplateContextDirective, selector: \"[templateContext]\", inputs: [\"templateContext\"] }, { type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], pipes: { \"valueOf\": FieldAccessorPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupHeaderComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[kendoGridGroupHeader]',\n                    template: `\n        <ng-container *ngIf=\"!skipGroupDecoration\">\n            <td class=\"k-group-cell\"\n                role=\"presentation\"\n                *ngFor=\"let g of prefixGroupCell(item)\"></td>\n        </ng-container>\n        <td [attr.colspan]=\"groupSpan(item)\" *ngIf=\"!(skipGroupDecoration && hasGroupHeaderColumn)\"\n            [attr.role]=\"ariaRole()\"\n            aria-selected=\"false\"\n            [attr.aria-expanded]=\"isExpanded\"\n            kendoGridLogicalCell\n            [logicalRowIndex]=\"logicalRowIndex\"\n            [logicalColIndex]=\"0\"\n            [logicalSlaveCell]=\"skipGroupDecoration\"\n            [groupItem]=\"item\"\n            [colSpan]=\"logicalColSpan()\">\n            <p class=\"k-reset\">\n                <ng-container *ngIf=\"!skipGroupDecoration\">\n                    <a href=\"#\" tabindex=\"-1\" (click)=\"toggleGroup(item)\"\n                        class=\"k-icon\"\n                        [ngClass]=\"{ 'k-i-caret-alt-down': isExpanded, 'k-i-caret-alt-right': !isExpanded }\" role=\"presentation\"\n                        [attr.title]=\"groupButtonTitle\"\n                        [attr.aria-label]=\"groupButtonTitle\">\n                    </a>\n                    <ng-container *ngIf=\"!groupHeaderTemplate(item)\">\n                    {{groupTitle(item)}}: {{item.data | valueOf:\"value\": formatForGroup(item)}}\n                    </ng-container>\n                    <ng-template\n                        [templateContext]=\"{\n                            templateRef: groupHeaderTemplate(item),\n                            group: item.data,\n                            aggregates: item.data?.aggregates,\n                            value: item.data?.value,\n                            field: item.data?.field,\n                            index: item.index,\n                            expanded: isExpanded,\n                            $implicit: item.data\n                            }\">\n                    </ng-template>\n                </ng-container>\n            </p>\n        </td>\n        <ng-container *ngIf=\"hasGroupHeaderColumn\">\n            <td *ngFor=\"let column of groupHeaderColumns; let index = index\"\n                role=\"gridcell\"\n                aria-selected=\"false\"\n                kendoGridLogicalCell\n                [logicalRowIndex]=\"logicalRowIndex\"\n                [logicalColIndex]=\"index + 1\"\n                [logicalSlaveCell]=\"false\"\n                [groupItem]=\"item\"\n                [colSpan]=\"1\"\n            >\n                <ng-template *ngIf=\"column.groupHeaderColumnTemplateRef\" [ngTemplateOutlet]=\"column.groupHeaderColumnTemplateRef\"\n                    [ngTemplateOutletContext]=\"{\n                        group: item.data,\n                        aggregates: item.data?.aggregates,\n                        value: item.data?.value,\n                        field: item.data?.field,\n                        index: item.index,\n                        $implicit: item.data\n                        }\">\n                </ng-template>\n            </td>\n        </ng-container>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: GroupsService }, { type: GroupInfoService }, { type: i1.LocalizationService }]; }, propDecorators: { rowIndex: [{\n                type: Input\n            }], logicalRowIndex: [{\n                type: Input\n            }], item: [{\n                type: Input\n            }], skipGroupDecoration: [{\n                type: Input\n            }], hasDetails: [{\n                type: Input\n            }], totalColumnsCount: [{\n                type: Input\n            }], hasGroupHeaderColumn: [{\n                type: Input\n            }], groupHeaderColumns: [{\n                type: Input\n            }], columns: [{\n                type: Input\n            }], groups: [{\n                type: Input\n            }], groupItemClass: [{\n                type: HostBinding,\n                args: ['class.k-grouping-row']\n            }] } });\n\nconst columnCellIndex = (cell, cells) => {\n    let cellIndex = 0;\n    for (let idx = 0; idx < cells.length; idx++) {\n        if (cells[idx] === cell) {\n            return cellIndex;\n        }\n        if (!hasClasses(cells[idx], 'k-hierarchy-cell k-group-cell')) {\n            cellIndex++;\n        }\n    }\n};\n/**\n * @hidden\n */\nclass TableBodyComponent {\n    constructor(detailsService, groupsService, changeNotification, editService, localization, ngZone, renderer, element, domEvents, selectionService, cellSelectionService, columnInfoService, navigationService) {\n        this.detailsService = detailsService;\n        this.groupsService = groupsService;\n        this.changeNotification = changeNotification;\n        this.editService = editService;\n        this.localization = localization;\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.element = element;\n        this.domEvents = domEvents;\n        this.selectionService = selectionService;\n        this.cellSelectionService = cellSelectionService;\n        this.columnInfoService = columnInfoService;\n        this.navigationService = navigationService;\n        this.columns = [];\n        this.groups = [];\n        this.skip = 0;\n        this.noRecordsText = this.localization.get('noRecords');\n        this.isLocked = false;\n        this.skipGroupDecoration = false;\n        this.showGroupFooters = false;\n        this.lockedColumnsCount = 0;\n        this.totalColumnsCount = 0;\n        this.trackBy = defaultTrackBy;\n        this.rowClass = () => null;\n        this.cellKeydownSubscription = this.navigationService.cellKeydown.subscribe((args) => this.cellKeydownHandler(args));\n        this.trackByWrapper = this.trackByWrapper.bind(this);\n        this.trackByColumns = this.trackByColumns.bind(this);\n    }\n    get newDataItem() {\n        return this.editService.newDataItem;\n    }\n    // Number of unlocked columns in the next table, if any\n    get unlockedColumnsCount() {\n        return this.totalColumnsCount - this.lockedColumnsCount - (this.allColumns || this.columns).length;\n    }\n    isAriaSelected(item, column) {\n        return this.cellSelectionService.isCellSelected(item, column) ||\n            this.isRowSelected(item) ? 'true' : 'false';\n    }\n    toggleRow(index, dataItem) {\n        this.detailsService.toggleRow(index, dataItem);\n        return false;\n    }\n    isExpanded(viewItem) {\n        return this.detailsService.isExpanded(viewItem.index, viewItem.data);\n    }\n    detailButtonStyles(viewItem) {\n        const expanded = this.isExpanded(viewItem);\n        return expanded ? 'k-i-minus' : 'k-i-plus';\n    }\n    detailButtonTitle(viewItem) {\n        const messageKey = this.isExpanded(viewItem) ? 'detailCollapse' : 'detailExpand';\n        return this.localization.get(messageKey);\n    }\n    isGroup(item) {\n        return item.type === 'group';\n    }\n    isDataItem(item) {\n        return !this.isGroup(item) && !this.isFooter(item);\n    }\n    isFooter(item) {\n        return item.type === 'footer';\n    }\n    isFooterItemInExpandedGroup(item) {\n        const footerItem = { data: item.data, index: item.groupIndex, parentGroup: item.group.parentGroup };\n        return this.isInExpandedGroup(footerItem);\n    }\n    isDataItemInExpandedGroup(item) {\n        const dataItem = { data: item.group.data, index: item.groupIndex, parentGroup: item.group.parentGroup };\n        return this.isInExpandedGroup(dataItem);\n    }\n    isInExpandedGroup(item) {\n        return this.groupsService.isInExpandedGroup(item);\n    }\n    isParentGroupExpanded(item) {\n        return this.groupsService.isInExpandedGroup(item.parentGroup);\n    }\n    isOdd(item) {\n        return item.index % 2 !== 0;\n    }\n    isSelectable() {\n        return this.selectable && this.selectable.enabled !== false;\n    }\n    isRowSelected(item) {\n        return this.selectionService.isSelected(item.index);\n    }\n    trackByWrapper(index, item) {\n        if (item.type === 'data') {\n            item.isEditing = this.editService.hasEdited(item.index);\n        }\n        return this.trackBy(index, item);\n    }\n    trackByColumns(index, item) {\n        return this.virtualColumns ? index : item;\n    }\n    ngDoCheck() {\n        if (this.hasGroupHeaderColumn) {\n            this.groupHeaderColumns = columnsToRender(this.skipGroupDecoration ? this.columns : this.columns.toArray().slice(1));\n        }\n        else {\n            this.groupHeaderColumns = [];\n        }\n        if (this.isLocked) {\n            this.groupHeaderSlaveCellsCount =\n                this.hasGroupHeaderColumn ? this.columnsContainer.nonLockedColumnsToRender.length : 1;\n        }\n        else {\n            this.groupHeaderSlaveCellsCount = 0;\n        }\n    }\n    ngAfterViewChecked() {\n        if (this.rowSticky) {\n            this.applyStickyRowsStyling();\n        }\n    }\n    ngOnChanges(changes) {\n        if (isChanged$1('columns', changes, false)) {\n            this.changeNotification.notify();\n        }\n    }\n    logicalRowIndex(rowIndex) {\n        let pos = this.skip + rowIndex;\n        if (this.hasDetailTemplate) {\n            pos *= 2;\n        }\n        const absoluteRowIndex = 1 + pos;\n        const addRowOffset = this.editService.hasNewItem ? 1 : 0;\n        const filterRowOffset = hasFilterRow(this.filterable) ? 1 : 0;\n        const headerRowCount = this.columnInfoService.totalLevels + filterRowOffset + addRowOffset;\n        return absoluteRowIndex + headerRowCount;\n    }\n    addRowLogicalIndex() {\n        return this.columnInfoService.totalLevels + 1 +\n            (hasFilterRow(this.filterable) ? 1 : 0);\n    }\n    logicalColIndex(column) {\n        if (!isPresent(column.leafIndex)) {\n            return -1;\n        }\n        return column.leafIndex + (this.hasDetailTemplate ? 1 : 0);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            const clickHandler = this.clickHandler.bind(this);\n            const mousedownSubscription = this.renderer.listen(this.element.nativeElement, 'mousedown', clickHandler);\n            const mouseupSubscription = this.renderer.listen(this.element.nativeElement, 'mouseup', clickHandler);\n            const clickSubscription = this.renderer.listen(this.element.nativeElement, 'click', clickHandler);\n            const contextmenuSubscription = this.renderer.listen(this.element.nativeElement, 'contextmenu', clickHandler);\n            const touchstartSubscription = this.renderer.listen(this.element.nativeElement, 'touchstart', clickHandler);\n            const touchendSubscription = this.renderer.listen(this.element.nativeElement, 'touchend', clickHandler);\n            this.clickSubscription = () => {\n                mousedownSubscription();\n                mouseupSubscription();\n                clickSubscription();\n                contextmenuSubscription();\n            };\n            this.touchSubscription = () => {\n                touchstartSubscription();\n                touchendSubscription();\n            };\n        });\n        let originalNoRecordText = this.localization.get('noRecords');\n        this.l10nSubscription = this.localization.changes.subscribe(() => {\n            if (this.noRecordsText === originalNoRecordText) {\n                this.noRecordsText = this.localization.get('noRecords');\n                originalNoRecordText = this.noRecordsText;\n            }\n        });\n    }\n    ngOnDestroy() {\n        if (this.clickSubscription) {\n            this.clickSubscription();\n        }\n        if (this.touchSubscription) {\n            this.touchSubscription();\n        }\n        if (this.l10nSubscription) {\n            this.l10nSubscription.unsubscribe();\n        }\n        this.cellKeydownSubscription.unsubscribe();\n        clearTimeout(this.clickTimeout);\n    }\n    isEditingCell(index, column) {\n        return this.editService.isEditing() && this.editService.isEditedColumn(index, column);\n    }\n    isEditingRow(index) {\n        return this.editService.isEditing() && this.editService.hasEdited(index);\n    }\n    get hasGroupHeaderColumn() {\n        return this.columnsContainer.hasGroupHeaderColumn;\n    }\n    get columnsContainer() {\n        return this.columnInfoService.columnsContainer;\n    }\n    get columnsSpan() {\n        return columnsSpan(this.columns);\n    }\n    get allColumnsSpan() {\n        return columnsSpan(this.allColumns || this.columns);\n    }\n    get colSpan() {\n        return this.columnsSpan + this.groups.length + (this.hasDetailTemplate ? 1 : 0);\n    }\n    get footerColumns() {\n        return this.isLocked ? this.columnsContainer.lockedColumnsToRender : this.columnsContainer.nonLockedColumnsToRender;\n    }\n    showGroupHeader(item) {\n        return !item.data.skipHeader;\n    }\n    addStickyColumnStyles(column) {\n        const stickyStyles = this.columnInfoService.stickyColumnsStyles(column);\n        return Object.assign(Object.assign({}, column.style), stickyStyles);\n    }\n    resizeHandler() {\n        this.applyStickyRowsStyling();\n    }\n    get hasDetailTemplate() {\n        return isPresent(this.detailTemplate);\n    }\n    clickHandler(eventArg) {\n        const element = this.element.nativeElement;\n        const target = this.eventTarget(eventArg);\n        let cell, row, body, gridElement;\n        let currentTarget = target;\n        do {\n            cell = closest(currentTarget, matchesNodeName('td'));\n            row = closest(cell, matchesNodeName('tr'));\n            body = closest(row, matchesNodeName('tbody'));\n            currentTarget = body;\n            gridElement = closestInScope(currentTarget, matchesClasses('k-grid'), element);\n        } while (body && body !== element && !gridElement);\n        if (cell && !hasClasses(cell, NON_DATA_CELL_CLASSES) &&\n            !hasClasses(row, NON_DATA_ROW_CLASSES) &&\n            body === element && !gridElement) {\n            this.editService.preventCellClose();\n            const focusable = target !== cell && isFocusableWithTabKey(target, false);\n            if (!focusable && !matchesNodeName('label')(target) && !hasClasses(target, IGNORE_TARGET_CLASSSES) &&\n                !closestInScope(target, matchesClasses(IGNORE_CONTAINER_CLASSES), cell)) {\n                const args = this.cellClickArgs(cell, row, eventArg);\n                if (eventArg.type === 'mousedown' || eventArg.type === 'touchstart') {\n                    this.domEvents.cellMousedown.emit(args);\n                }\n                else if (eventArg.type === 'mouseup' || eventArg.type === 'touchend') {\n                    this.domEvents.cellMouseup.emit(args);\n                }\n                else {\n                    if (args.isEditedColumn || !this.editService.closeCell(eventArg)) {\n                        if (eventArg.type === 'click') {\n                            this.clickTimeout = setTimeout(() => {\n                                this.emitCellClick(args);\n                            }, 0);\n                        }\n                        else {\n                            this.emitCellClick(args);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    emitCellClick(args) {\n        this.domEvents.cellClick.emit(Object.assign(args, {\n            isEdited: args.isEditedRow || args.isEditedColumn\n        }));\n    }\n    cellKeydownHandler(args) {\n        if (args.keyCode === Keys.Enter) {\n            this.clickHandler(args);\n        }\n    }\n    cellClickArgs(cell, row, eventArg) {\n        const index = columnCellIndex(cell, row.cells);\n        const column = this.columns.toArray()[index];\n        const columnIndex = this.lockedColumnsCount + index;\n        let rowIndex = row.getAttribute('data-kendo-grid-item-index');\n        rowIndex = rowIndex ? parseInt(rowIndex, 10) : -1;\n        const dataItem = rowIndex === -1 ? this.editService.newDataItem : this.data.at(rowIndex - this.skip);\n        const isEditedColumn = this.editService.isEditedColumn(rowIndex, column);\n        const isEditedRow = this.editService.isEdited(rowIndex);\n        const type = eventArg.type === 'keydown' ? 'click' : eventArg.type;\n        return {\n            column: column,\n            columnIndex: columnIndex,\n            dataItem: dataItem,\n            isEditedColumn: isEditedColumn,\n            isEditedRow: isEditedRow,\n            originalEvent: eventArg,\n            rowIndex: rowIndex,\n            type: type\n        };\n    }\n    eventTarget(args) {\n        if (args.type === 'touchend') {\n            const touch = args.changedTouches[0];\n            return document.elementFromPoint(touch.clientX, touch.clientY);\n        }\n        return args.target;\n    }\n    applyStickyRowsStyling() {\n        const stickyRows = nodesToArray(this.element.nativeElement.querySelectorAll('.k-grid-row-sticky'));\n        const length = stickyRows.length;\n        if (length) {\n            let accumulatedHeight = 0;\n            const stickyRowsOffsets = [];\n            stickyRows.forEach(row => {\n                const rowHeight = row.getBoundingClientRect().height;\n                stickyRowsOffsets.push({ accumulatedHeight, rowHeight });\n                accumulatedHeight += rowHeight;\n            });\n            stickyRows.forEach((row, index) => {\n                this.renderer.setStyle(row, 'top', `${stickyRowsOffsets[index].accumulatedHeight}px`);\n                this.renderer.setStyle(row, 'bottom', `${accumulatedHeight - stickyRowsOffsets[index].accumulatedHeight - stickyRowsOffsets[index].rowHeight}px`);\n            });\n        }\n    }\n}\nTableBodyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TableBodyComponent, deps: [{ token: DetailsService }, { token: GroupsService }, { token: ChangeNotificationService }, { token: EditService }, { token: i1.LocalizationService }, { token: i0.NgZone }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: DomEventsService }, { token: SelectionService }, { token: CellSelectionService }, { token: ColumnInfoService }, { token: NavigationService }], target: i0.ɵɵFactoryTarget.Component });\nTableBodyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TableBodyComponent, selector: \"[kendoGridTableBody]\", inputs: { columns: \"columns\", allColumns: \"allColumns\", groups: \"groups\", detailTemplate: \"detailTemplate\", noRecordsTemplate: \"noRecordsTemplate\", data: \"data\", skip: \"skip\", selectable: \"selectable\", filterable: \"filterable\", noRecordsText: \"noRecordsText\", isLocked: \"isLocked\", isLoading: \"isLoading\", isVirtual: \"isVirtual\", cellLoadingTemplate: \"cellLoadingTemplate\", skipGroupDecoration: \"skipGroupDecoration\", showGroupFooters: \"showGroupFooters\", lockedColumnsCount: \"lockedColumnsCount\", totalColumnsCount: \"totalColumnsCount\", virtualColumns: \"virtualColumns\", trackBy: \"trackBy\", rowSticky: \"rowSticky\", rowClass: \"rowClass\" }, usesOnChanges: true, ngImport: i0, template: `\n    <ng-container *ngIf=\"editService.hasNewItem\">\n        <tr class=\"k-grid-add-row k-grid-edit-row k-master-row\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"addRowLogicalIndex()\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"unlockedColumnsCount\">\n            <ng-container *ngIf=\"!skipGroupDecoration\">\n                <td class=\"k-group-cell\" *ngFor=\"let g of groups\" role=\"presentation\"></td>\n            </ng-container>\n            <td class=\"k-hierarchy-cell\"\n                *ngIf=\"detailTemplate?.templateRef\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"addRowLogicalIndex()\"\n                    [logicalColIndex]=\"0\"\n                    aria-selected=\"false\"\n                >\n            </td>\n            <td *ngFor=\"let column of columns; let columnIndex = index; trackBy: trackByColumns;\"\n                kendoGridCell\n                    [rowIndex]=\"-1\"\n                    [columnIndex]=\"lockedColumnsCount + columnIndex\"\n                    [isNew]=\"true\"\n                    [column]=\"column\"\n                    [dataItem]=\"newDataItem\"\n                [class.k-grid-content-sticky]=\"column.sticky\"\n                [ngClass]=\"column.cssClass\"\n                [style.left]=\"column.sticky ? '0' : undefined\"\n                [ngStyle]=\"column.sticky ? addStickyColumnStyles(column) : column.style\"\n                [attr.colspan]=\"column.colspan\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"addRowLogicalIndex()\"\n                    [logicalColIndex]=\"logicalColIndex(column)\"\n                    [colSpan]=\"column.colspan\"\n                role=\"gridcell\">\n            </td>\n        </tr>\n    </ng-container>\n    <tr *ngIf=\"data?.length === 0 || data === null\" class=\"k-grid-norecords\">\n        <td [attr.colspan]=\"colSpan\">\n            <ng-template\n                *ngIf=\"noRecordsTemplate?.templateRef\"\n                [templateContext]=\"{\n                    templateRef: noRecordsTemplate?.templateRef\n                 }\">\n            </ng-template>\n            <ng-container *ngIf=\"!noRecordsTemplate?.templateRef\">\n                {{noRecordsText}}\n            </ng-container>\n        </td>\n    </tr>\n\n    <ng-container *ngFor=\"let item of data; trackBy: trackByWrapper; let rowIndex = index;\">\n        <tr *ngIf=\"isGroup(item) && isParentGroupExpanded($any(item)) && showGroupHeader(item)\"\n            kendoGridGroupHeader\n                [columns]=\"columns\"\n                [groups]=\"groups\"\n                [item]=\"$any(item)\"\n                [hasDetails]=\"!!detailTemplate?.templateRef\"\n                [skipGroupDecoration]=\"skipGroupDecoration\"\n                [hasGroupHeaderColumn]=\"hasGroupHeaderColumn\"\n                [groupHeaderColumns]=\"groupHeaderColumns\"\n                [rowIndex]=\"rowIndex + 1\"\n                [totalColumnsCount]=\"totalColumnsCount\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"groupHeaderSlaveCellsCount\">\n        </tr>\n        <tr\n            *ngIf=\"isDataItem(item) && (!$any(item).group || isDataItemInExpandedGroup($any(item)))\"\n            kendoGridLogicalRow\n                [dataRowIndex]=\"$any(item).index\"\n                [dataItem]=\"item.data\"\n                [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"unlockedColumnsCount\"\n            [class.k-grid-row-sticky]=\"rowSticky ? rowSticky({ dataItem: item.data, index: $any(item).index }) : false\"\n            [ngClass]=\"rowClass({ dataItem: item.data, index: $any(item).index })\"\n            [class.k-alt]=\"isOdd(item)\"\n            [class.k-master-row]=\"true\"\n            [class.k-grid-edit-row]=\"isEditingRow($any(item).index)\"\n            [attr.data-kendo-grid-item-index]=\"$any(item).index\"\n            [class.k-selected]=\"isSelectable() && isRowSelected(item)\">\n            <ng-container *ngIf=\"!skipGroupDecoration\">\n                <td class=\"k-group-cell\" *ngFor=\"let g of groups\" role=\"presentation\"></td>\n            </ng-container>\n            <td class=\"k-hierarchy-cell\"\n                *ngIf=\"detailTemplate?.templateRef\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                    [logicalColIndex]=\"0\"\n                    [dataRowIndex]=\"$any(item).index\"\n                    [dataItem]=\"item.data\"\n                    [detailExpandCell]=\"true\"\n                    aria-selected=\"false\"\n                    role=\"gridcell\">\n                <a class=\"k-icon\"\n                    *ngIf=\"detailTemplate.showIf(item.data, $any(item).index)\"\n                    [ngClass]=\"detailButtonStyles(item)\"\n                    [attr.title]=\"detailButtonTitle(item)\"\n                    [attr.aria-label]=\"detailButtonTitle(item)\"\n                    href=\"#\" tabindex=\"-1\" (click)=\"toggleRow($any(item).index, item.data)\"></a>\n            </td>\n            <td\n                kendoGridCell\n                    [rowIndex]=\"$any(item).index\"\n                    [columnIndex]=\"lockedColumnsCount + columnIndex\"\n                    [attr.data-kendo-grid-column-index]=\"lockedColumnsCount + columnIndex\"\n                    [column]=\"column\"\n                    [dataItem]=\"item.data\"\n                    [isLoading]=\"isLoading\"\n                    [isVirtual]=\"isVirtual\"\n                    [loadingTemplate]=\"cellLoadingTemplate\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                    [logicalColIndex]=\"logicalColIndex(column)\"\n                    [dataRowIndex]=\"$any(item).index\"\n                    [dataItem]=\"item.data\"\n                    [colIndex]=\"columnIndex\"\n                    [colSpan]=\"column.colspan\"\n                    role=\"gridcell\"\n                    [attr.aria-selected]=\"isSelectable() ? isAriaSelected(item, column) : undefined\"\n                    [class.k-grid-content-sticky]=\"column.sticky\"\n                    [class.k-touch-action-none]=\"isSelectable() && $any(selectable).drag\"\n                    [class.k-touch-action-auto]=\"!(isSelectable() && $any(selectable).drag)\"\n                [ngClass]=\"column.cssClass\"\n                [class.k-grid-edit-cell]=\"isEditingCell($any(item).index, column)\"\n                [ngStyle]=\"column.sticky ? addStickyColumnStyles(column) : column.style\"\n                [attr.colspan]=\"column.colspan\"\n                [class.k-selected]=\"isSelectable && cellSelectionService.isCellSelected(item, column)\"\n                *ngFor=\"let column of columns; let columnIndex = index; trackBy: trackByColumns;\">\n            </td>\n        </tr>\n        <tr *ngIf=\"isDataItem(item) &&\n                (!$any(item).group || isDataItemInExpandedGroup($any(item))) &&\n                detailTemplate?.templateRef &&\n                detailTemplate.showIf(item.data, $any(item).index) &&\n                isExpanded(item)\"\n            class=\"k-detail-row\"\n            [class.k-alt]=\"isOdd(item)\"\n            kendoGridLogicalRow\n                [dataRowIndex]=\"$any(item).index\"\n                [dataItem]=\"item.data\"\n                [logicalRowIndex]=\"logicalRowIndex(rowIndex) + 1\"\n                [logicalSlaveRow]=\"false\"\n                [logicalCellsCount]=\"1\"\n            >\n            <td class=\"k-group-cell\" *ngFor=\"let g of groups\"></td>\n            <td class=\"k-hierarchy-cell\"></td>\n            <td class=\"k-detail-cell\"\n                [attr.colspan]=\"columnsSpan\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex(rowIndex) + 1\"\n                    [logicalColIndex]=\"0\"\n                    [dataRowIndex]=\"$any(item).index\"\n                    [dataItem]=\"item.data\"\n                    [colIndex]=\"0\"\n                    [colSpan]=\"allColumnsSpan + 1\"\n                    role=\"gridcell\" aria-selected=\"false\"\n                >\n                <ng-template\n                    [ngTemplateOutlet]=\"detailTemplate.templateRef\"\n                    [ngTemplateOutletContext]=\"{\n                        dataItem: item.data,\n                        rowIndex: $any(item).index,\n                        $implicit: item.data\n                    }\">\n                </ng-template>\n            </td>\n        </tr>\n        <tr *ngIf=\"isFooter(item) &&\n                $any(item).group &&\n                (isFooterItemInExpandedGroup($any(item)) || (showGroupFooters && isParentGroupExpanded($any(item).group))) &&\n                !$any(item.data).hideFooter\"\n            class=\"k-group-footer\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"unlockedColumnsCount\">\n            <ng-container *ngIf=\"!skipGroupDecoration\">\n                <td class=\"k-group-cell\" *ngFor=\"let g of groups\"></td>\n            </ng-container>\n            <td class=\"k-hierarchy-cell\"\n                *ngIf=\"detailTemplate?.templateRef\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                    [logicalColIndex]=\"0\"\n                    aria-selected=\"false\"\n                >\n            </td>\n            <td kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                    [logicalColIndex]=\"logicalColIndex(column)\"\n                [attr.data-skip]=\"skipGroupDecoration\"\n                *ngFor=\"let column of footerColumns; let columnIndex = index; trackBy: trackByColumns;\">\n                <ng-template\n                    [templateContext]=\"{\n                        templateRef: $any(column).groupFooterTemplateRef,\n                        group: $any(item.data),\n                        field: $any(column).field,\n                        column: column,\n                        aggregates: $any(item.data)?.aggregates,\n                        $implicit: $any(item.data)?.aggregates\n                    }\">\n                </ng-template>\n           </td>\n        </tr>\n    </ng-container>\n    <kendo-resize-sensor *ngIf=\"rowSticky\" (resize)=\"resizeHandler()\"></kendo-resize-sensor>\n    `, isInline: true, components: [{ type: CellComponent, selector: \"[kendoGridCell]\", inputs: [\"column\", \"columnIndex\", \"isNew\", \"isLoading\", \"isVirtual\", \"loadingTemplate\", \"rowIndex\", \"dataItem\"] }, { type: GroupHeaderComponent, selector: \"[kendoGridGroupHeader]\", inputs: [\"rowIndex\", \"logicalRowIndex\", \"item\", \"skipGroupDecoration\", \"hasDetails\", \"totalColumnsCount\", \"hasGroupHeaderColumn\", \"groupHeaderColumns\", \"columns\", \"groups\"] }, { type: i1$1.ResizeSensorComponent, selector: \"kendo-resize-sensor\", inputs: [\"rateLimit\"], outputs: [\"resize\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: LogicalRowDirective, selector: \"[kendoGridLogicalRow]\", inputs: [\"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", \"dataRowIndex\", \"dataItem\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: LogicalCellDirective, selector: \"[kendoGridLogicalCell]\", inputs: [\"logicalColIndex\", \"logicalRowIndex\", \"logicalSlaveCell\", \"colIndex\", \"colSpan\", \"rowSpan\", \"groupItem\", \"dataRowIndex\", \"dataItem\", \"detailExpandCell\", \"headerLabelText\"] }, { type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i4.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: TemplateContextDirective, selector: \"[templateContext]\", inputs: [\"templateContext\"] }, { type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TableBodyComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[kendoGridTableBody]',\n                    template: `\n    <ng-container *ngIf=\"editService.hasNewItem\">\n        <tr class=\"k-grid-add-row k-grid-edit-row k-master-row\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"addRowLogicalIndex()\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"unlockedColumnsCount\">\n            <ng-container *ngIf=\"!skipGroupDecoration\">\n                <td class=\"k-group-cell\" *ngFor=\"let g of groups\" role=\"presentation\"></td>\n            </ng-container>\n            <td class=\"k-hierarchy-cell\"\n                *ngIf=\"detailTemplate?.templateRef\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"addRowLogicalIndex()\"\n                    [logicalColIndex]=\"0\"\n                    aria-selected=\"false\"\n                >\n            </td>\n            <td *ngFor=\"let column of columns; let columnIndex = index; trackBy: trackByColumns;\"\n                kendoGridCell\n                    [rowIndex]=\"-1\"\n                    [columnIndex]=\"lockedColumnsCount + columnIndex\"\n                    [isNew]=\"true\"\n                    [column]=\"column\"\n                    [dataItem]=\"newDataItem\"\n                [class.k-grid-content-sticky]=\"column.sticky\"\n                [ngClass]=\"column.cssClass\"\n                [style.left]=\"column.sticky ? '0' : undefined\"\n                [ngStyle]=\"column.sticky ? addStickyColumnStyles(column) : column.style\"\n                [attr.colspan]=\"column.colspan\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"addRowLogicalIndex()\"\n                    [logicalColIndex]=\"logicalColIndex(column)\"\n                    [colSpan]=\"column.colspan\"\n                role=\"gridcell\">\n            </td>\n        </tr>\n    </ng-container>\n    <tr *ngIf=\"data?.length === 0 || data === null\" class=\"k-grid-norecords\">\n        <td [attr.colspan]=\"colSpan\">\n            <ng-template\n                *ngIf=\"noRecordsTemplate?.templateRef\"\n                [templateContext]=\"{\n                    templateRef: noRecordsTemplate?.templateRef\n                 }\">\n            </ng-template>\n            <ng-container *ngIf=\"!noRecordsTemplate?.templateRef\">\n                {{noRecordsText}}\n            </ng-container>\n        </td>\n    </tr>\n\n    <ng-container *ngFor=\"let item of data; trackBy: trackByWrapper; let rowIndex = index;\">\n        <tr *ngIf=\"isGroup(item) && isParentGroupExpanded($any(item)) && showGroupHeader(item)\"\n            kendoGridGroupHeader\n                [columns]=\"columns\"\n                [groups]=\"groups\"\n                [item]=\"$any(item)\"\n                [hasDetails]=\"!!detailTemplate?.templateRef\"\n                [skipGroupDecoration]=\"skipGroupDecoration\"\n                [hasGroupHeaderColumn]=\"hasGroupHeaderColumn\"\n                [groupHeaderColumns]=\"groupHeaderColumns\"\n                [rowIndex]=\"rowIndex + 1\"\n                [totalColumnsCount]=\"totalColumnsCount\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"groupHeaderSlaveCellsCount\">\n        </tr>\n        <tr\n            *ngIf=\"isDataItem(item) && (!$any(item).group || isDataItemInExpandedGroup($any(item)))\"\n            kendoGridLogicalRow\n                [dataRowIndex]=\"$any(item).index\"\n                [dataItem]=\"item.data\"\n                [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"unlockedColumnsCount\"\n            [class.k-grid-row-sticky]=\"rowSticky ? rowSticky({ dataItem: item.data, index: $any(item).index }) : false\"\n            [ngClass]=\"rowClass({ dataItem: item.data, index: $any(item).index })\"\n            [class.k-alt]=\"isOdd(item)\"\n            [class.k-master-row]=\"true\"\n            [class.k-grid-edit-row]=\"isEditingRow($any(item).index)\"\n            [attr.data-kendo-grid-item-index]=\"$any(item).index\"\n            [class.k-selected]=\"isSelectable() && isRowSelected(item)\">\n            <ng-container *ngIf=\"!skipGroupDecoration\">\n                <td class=\"k-group-cell\" *ngFor=\"let g of groups\" role=\"presentation\"></td>\n            </ng-container>\n            <td class=\"k-hierarchy-cell\"\n                *ngIf=\"detailTemplate?.templateRef\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                    [logicalColIndex]=\"0\"\n                    [dataRowIndex]=\"$any(item).index\"\n                    [dataItem]=\"item.data\"\n                    [detailExpandCell]=\"true\"\n                    aria-selected=\"false\"\n                    role=\"gridcell\">\n                <a class=\"k-icon\"\n                    *ngIf=\"detailTemplate.showIf(item.data, $any(item).index)\"\n                    [ngClass]=\"detailButtonStyles(item)\"\n                    [attr.title]=\"detailButtonTitle(item)\"\n                    [attr.aria-label]=\"detailButtonTitle(item)\"\n                    href=\"#\" tabindex=\"-1\" (click)=\"toggleRow($any(item).index, item.data)\"></a>\n            </td>\n            <td\n                kendoGridCell\n                    [rowIndex]=\"$any(item).index\"\n                    [columnIndex]=\"lockedColumnsCount + columnIndex\"\n                    [attr.data-kendo-grid-column-index]=\"lockedColumnsCount + columnIndex\"\n                    [column]=\"column\"\n                    [dataItem]=\"item.data\"\n                    [isLoading]=\"isLoading\"\n                    [isVirtual]=\"isVirtual\"\n                    [loadingTemplate]=\"cellLoadingTemplate\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                    [logicalColIndex]=\"logicalColIndex(column)\"\n                    [dataRowIndex]=\"$any(item).index\"\n                    [dataItem]=\"item.data\"\n                    [colIndex]=\"columnIndex\"\n                    [colSpan]=\"column.colspan\"\n                    role=\"gridcell\"\n                    [attr.aria-selected]=\"isSelectable() ? isAriaSelected(item, column) : undefined\"\n                    [class.k-grid-content-sticky]=\"column.sticky\"\n                    [class.k-touch-action-none]=\"isSelectable() && $any(selectable).drag\"\n                    [class.k-touch-action-auto]=\"!(isSelectable() && $any(selectable).drag)\"\n                [ngClass]=\"column.cssClass\"\n                [class.k-grid-edit-cell]=\"isEditingCell($any(item).index, column)\"\n                [ngStyle]=\"column.sticky ? addStickyColumnStyles(column) : column.style\"\n                [attr.colspan]=\"column.colspan\"\n                [class.k-selected]=\"isSelectable && cellSelectionService.isCellSelected(item, column)\"\n                *ngFor=\"let column of columns; let columnIndex = index; trackBy: trackByColumns;\">\n            </td>\n        </tr>\n        <tr *ngIf=\"isDataItem(item) &&\n                (!$any(item).group || isDataItemInExpandedGroup($any(item))) &&\n                detailTemplate?.templateRef &&\n                detailTemplate.showIf(item.data, $any(item).index) &&\n                isExpanded(item)\"\n            class=\"k-detail-row\"\n            [class.k-alt]=\"isOdd(item)\"\n            kendoGridLogicalRow\n                [dataRowIndex]=\"$any(item).index\"\n                [dataItem]=\"item.data\"\n                [logicalRowIndex]=\"logicalRowIndex(rowIndex) + 1\"\n                [logicalSlaveRow]=\"false\"\n                [logicalCellsCount]=\"1\"\n            >\n            <td class=\"k-group-cell\" *ngFor=\"let g of groups\"></td>\n            <td class=\"k-hierarchy-cell\"></td>\n            <td class=\"k-detail-cell\"\n                [attr.colspan]=\"columnsSpan\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex(rowIndex) + 1\"\n                    [logicalColIndex]=\"0\"\n                    [dataRowIndex]=\"$any(item).index\"\n                    [dataItem]=\"item.data\"\n                    [colIndex]=\"0\"\n                    [colSpan]=\"allColumnsSpan + 1\"\n                    role=\"gridcell\" aria-selected=\"false\"\n                >\n                <ng-template\n                    [ngTemplateOutlet]=\"detailTemplate.templateRef\"\n                    [ngTemplateOutletContext]=\"{\n                        dataItem: item.data,\n                        rowIndex: $any(item).index,\n                        $implicit: item.data\n                    }\">\n                </ng-template>\n            </td>\n        </tr>\n        <tr *ngIf=\"isFooter(item) &&\n                $any(item).group &&\n                (isFooterItemInExpandedGroup($any(item)) || (showGroupFooters && isParentGroupExpanded($any(item).group))) &&\n                !$any(item.data).hideFooter\"\n            class=\"k-group-footer\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"unlockedColumnsCount\">\n            <ng-container *ngIf=\"!skipGroupDecoration\">\n                <td class=\"k-group-cell\" *ngFor=\"let g of groups\"></td>\n            </ng-container>\n            <td class=\"k-hierarchy-cell\"\n                *ngIf=\"detailTemplate?.templateRef\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                    [logicalColIndex]=\"0\"\n                    aria-selected=\"false\"\n                >\n            </td>\n            <td kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                    [logicalColIndex]=\"logicalColIndex(column)\"\n                [attr.data-skip]=\"skipGroupDecoration\"\n                *ngFor=\"let column of footerColumns; let columnIndex = index; trackBy: trackByColumns;\">\n                <ng-template\n                    [templateContext]=\"{\n                        templateRef: $any(column).groupFooterTemplateRef,\n                        group: $any(item.data),\n                        field: $any(column).field,\n                        column: column,\n                        aggregates: $any(item.data)?.aggregates,\n                        $implicit: $any(item.data)?.aggregates\n                    }\">\n                </ng-template>\n           </td>\n        </tr>\n    </ng-container>\n    <kendo-resize-sensor *ngIf=\"rowSticky\" (resize)=\"resizeHandler()\"></kendo-resize-sensor>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: DetailsService }, { type: GroupsService }, { type: ChangeNotificationService }, { type: EditService }, { type: i1.LocalizationService }, { type: i0.NgZone }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: DomEventsService }, { type: SelectionService }, { type: CellSelectionService }, { type: ColumnInfoService }, { type: NavigationService }]; }, propDecorators: { columns: [{\n                type: Input\n            }], allColumns: [{\n                type: Input\n            }], groups: [{\n                type: Input\n            }], detailTemplate: [{\n                type: Input\n            }], noRecordsTemplate: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], skip: [{\n                type: Input\n            }], selectable: [{\n                type: Input\n            }], filterable: [{\n                type: Input\n            }], noRecordsText: [{\n                type: Input\n            }], isLocked: [{\n                type: Input\n            }], isLoading: [{\n                type: Input\n            }], isVirtual: [{\n                type: Input\n            }], cellLoadingTemplate: [{\n                type: Input\n            }], skipGroupDecoration: [{\n                type: Input\n            }], showGroupFooters: [{\n                type: Input\n            }], lockedColumnsCount: [{\n                type: Input\n            }], totalColumnsCount: [{\n                type: Input\n            }], virtualColumns: [{\n                type: Input\n            }], trackBy: [{\n                type: Input\n            }], rowSticky: [{\n                type: Input\n            }], rowClass: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nconst columnsToResize = ({ columns }) => Math.max(1, resizableColumns(columns).length);\n/**\n * @hidden\n */\nconst row = selector => element => element.querySelector(selector);\n/**\n * @hidden\n */\nconst headerRow = index => element => element.querySelectorAll('thead>tr')[index];\n/**\n * @hidden\n */\nconst cell = (index, selector = 'td') => element => element.querySelectorAll(`${selector}:not(.k-group-cell):not(.k-hierarchy-cell)`)[index];\n/**\n * @hidden\n */\nconst offsetWidth = element => element.offsetWidth;\n/**\n * @hidden\n */\nconst pipe = (...fns) => data => fns.reduce((state, fn) => state ? fn(state) : 0, data);\n/**\n * @hidden\n */\nclass TableDirective {\n    constructor(element, renderer, service, zone, cdr) {\n        this.element = element;\n        this.renderer = renderer;\n        this.service = service;\n        this.zone = zone;\n        this.cdr = cdr;\n        this.locked = false;\n        this.firstResize = false;\n    }\n    get minWidth() {\n        return this.firstResize ? 0 : null;\n    }\n    ngOnInit() {\n        const obs = this.service\n            .changes.pipe(filter(e => this.locked === e.locked));\n        this.subscription = obs.pipe(filter(e => e.type === 'start'), tap(this.initState.bind(this)), map(columnsToResize), switchMap((take) => obs.pipe(filter(e => e.type === 'resizeTable'), map(e => e.delta), bufferCount(take)))).subscribe(this.resize.bind(this));\n        this.autoFitSubscription = this.service\n            .registerTable({\n            autoFit: this.autoFitObservable.bind(this),\n            locked: this.locked\n        });\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        if (this.autoFitSubscription) {\n            this.autoFitSubscription();\n            this.autoFitSubscription = null;\n        }\n    }\n    initState() {\n        this.firstResize = true;\n        if (!this.virtualColumns || this.locked) {\n            this.originalWidth = offsetWidth(this.element.nativeElement);\n        }\n    }\n    resize(deltas) {\n        if (!this.virtualColumns || this.locked) {\n            const delta = deltas.reduce((sum, item) => sum + item, 0);\n            const width = this.originalWidth + delta;\n            this.renderer.setStyle(this.element.nativeElement, 'width', width + 'px');\n        }\n        this.cdr.detectChanges();\n    }\n    autoFitObservable(columnInfo) {\n        return Observable.create(observer => {\n            this.zone.runOutsideAngular(() => {\n                this.renderer.addClass(this.element.nativeElement, 'k-autofitting');\n                this.cdr.detectChanges();\n                const widths = columnInfo.map(this.measureColumn.bind(this));\n                this.renderer.removeClass(this.element.nativeElement, 'k-autofitting');\n                observer.next(widths);\n            });\n        });\n    }\n    measureColumn(info) {\n        const dom = this.element.nativeElement;\n        const header = pipe(headerRow(info.level), cell(info.headerIndex, 'th'), offsetWidth)(dom);\n        let data = 0;\n        if (!info.isParentSpan || (info.isParentSpan && info.isLastInSpan)) {\n            data = pipe(row('tbody>tr:not(.k-grouping-row):not(.k-grid-norecords)'), cell(info.index), offsetWidth)(dom);\n        }\n        const footer = pipe(row('tfoot>tr'), cell(info.index), offsetWidth)(dom);\n        return Math.max(header, data, footer);\n    }\n}\nTableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TableDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: ColumnResizingService }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\nTableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TableDirective, selector: \"table\", inputs: { locked: \"locked\", virtualColumns: \"virtualColumns\" }, host: { properties: { \"style.min-width\": \"this.minWidth\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: 'table'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: ColumnResizingService }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { locked: [{\n                type: Input\n            }], virtualColumns: [{\n                type: Input\n            }], minWidth: [{\n                type: HostBinding,\n                args: ['style.min-width']\n            }] } });\n\n/**\n * @hidden\n */\nclass ResizableContainerDirective {\n    constructor(el, renderer, resizeService, ctx) {\n        this.el = el;\n        this.renderer = renderer;\n        this.resizeService = resizeService;\n        this.ctx = ctx;\n        this.enabled = false;\n    }\n    set lockedWidth(value) {\n        this._lockedWidth = value;\n        if (this.enabled) {\n            this.attachResize();\n            this.resize();\n        }\n    }\n    set kendoGridResizableContainer(enabled) {\n        const refresh = enabled !== this.enabled;\n        this.enabled = enabled;\n        if (refresh) {\n            this.attachResize();\n            this.resize();\n        }\n    }\n    ngOnDestroy() {\n        if (this.resizeSubscription) {\n            this.resizeSubscription.unsubscribe();\n        }\n    }\n    attachResize() {\n        if (this.resizeSubscription && !this.enabled) {\n            this.resizeSubscription.unsubscribe();\n            this.resizeSubscription = null;\n        }\n        if (!this.resizeSubscription && this.enabled) {\n            this.resizeSubscription = this.resizeService.changes.subscribe(this.resize.bind(this));\n        }\n    }\n    resize() {\n        if (this.ctx.grid && this.ctx.grid.wrapper) {\n            const containerElement = this.ctx.grid.wrapper.nativeElement;\n            const width = Math.max(containerElement.clientWidth - this._lockedWidth, 0);\n            if (this.enabled && width > 0) {\n                this.renderer.setStyle(this.el.nativeElement, \"width\", width + \"px\");\n            }\n            else {\n                this.renderer.setStyle(this.el.nativeElement, \"width\", \"\");\n            }\n        }\n    }\n}\nResizableContainerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ResizableContainerDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: ResizeService }, { token: ContextService }], target: i0.ɵɵFactoryTarget.Directive });\nResizableContainerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ResizableContainerDirective, selector: \"[kendoGridResizableContainer]\", inputs: { lockedWidth: \"lockedWidth\", kendoGridResizableContainer: \"kendoGridResizableContainer\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ResizableContainerDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridResizableContainer]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: ResizeService }, { type: ContextService }]; }, propDecorators: { lockedWidth: [{\n                type: Input,\n                args: ['lockedWidth']\n            }], kendoGridResizableContainer: [{\n                type: Input\n            }] } });\n\nconst elementAt = (index, elements, elementOffset) => {\n    for (let idx = 0, elementIdx = 0; idx < elements.length; idx++) {\n        const offset = elementOffset(elements[idx]);\n        if (elementIdx <= index && index <= elementIdx + offset - 1) {\n            return elements[idx];\n        }\n        elementIdx += offset;\n    }\n};\nconst rowAt = (index, rows) => elementAt(index, rows, row => row.hasAttribute('data-kendo-grid-item-index') ? 1 : 0);\nconst cellAt = (index, cells) => elementAt(index, cells, cell => !hasClasses(cell, NON_DATA_CELL_CLASSES) ? parseInt(cell.getAttribute('colSpan'), 10) || 1 : 0);\nconst EMPTY_OBJECT = {};\n/**\n * @hidden\n */\nconst SCROLLER_FACTORY_TOKEN = new InjectionToken('grid-scroll-service-factory');\n/**\n * @hidden\n */\nfunction DEFAULT_SCROLLER_FACTORY(observable) {\n    return new ScrollerService(observable);\n}\nconst wheelDeltaY = (e) => {\n    const deltaY = e.wheelDeltaY;\n    if (e.wheelDelta && (deltaY === undefined || deltaY)) {\n        return e.wheelDelta;\n    }\n    else if (e.detail && e.axis === e.VERTICAL_AXIS) {\n        return (-e.detail) * 10;\n    }\n    return 0;\n};\nconst preventLockedScroll = (args, element) => {\n    const delta = wheelDeltaY(args);\n    const scrollTop = element.scrollTop;\n    const allowScroll = (scrollTop === 0 && 0 < delta) || (element.scrollHeight <= element.offsetHeight + scrollTop && delta < 0);\n    if (!allowScroll) {\n        event.preventDefault();\n    }\n};\nconst translateY = (renderer, value) => el => renderer.setStyle(el, \"transform\", `translateY(${value}px)`);\nconst maybeNativeElement = el => el ? el.nativeElement : null;\nconst hasScrollbar = (el, parent) => el.nativeElement.offsetWidth > parent.nativeElement.clientWidth;\nconst setHeight = renderer => ({ el, height }) => renderer.setStyle(el, \"height\", `${height}px`);\nconst bufferSize = 1;\n/**\n * @hidden\n */\nclass ListComponent {\n    constructor(scrollerFactory, detailsService, changeNotification, suspendService, groupsService, ngZone, renderer, scrollSyncService, resizeService, editService, supportService, navigationService, scrollRequestService, localization, columnResizingService, changeDetector, pdfService, columnInfo) {\n        this.changeNotification = changeNotification;\n        this.suspendService = suspendService;\n        this.groupsService = groupsService;\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.scrollSyncService = scrollSyncService;\n        this.resizeService = resizeService;\n        this.editService = editService;\n        this.supportService = supportService;\n        this.navigationService = navigationService;\n        this.localization = localization;\n        this.columnResizingService = columnResizingService;\n        this.changeDetector = changeDetector;\n        this.pdfService = pdfService;\n        this.columnInfo = columnInfo;\n        this.groups = [];\n        this.skip = 0;\n        this.columns = new ColumnsContainer(() => []);\n        this.selectable = false;\n        this.groupable = false;\n        this.trackBy = defaultTrackBy;\n        this.sort = new Array();\n        this.contentScroll = new EventEmitter();\n        this.pageChange = new EventEmitter();\n        this.scrollBottom = new EventEmitter();\n        this.columnsStartIdx = 0;\n        this.resizeSensors = new QueryList();\n        this.dispatcher = new Subject();\n        this.containerScrollTop = 0;\n        this.scrollLeft = 0;\n        this.rtl = false;\n        this.scroller = scrollerFactory(this.dispatcher);\n        this.subscriptions = detailsService.changes.subscribe(x => this.detailExpand(x));\n        this.subscriptions.add(scrollRequestService.requests.subscribe(x => this.scrollTo(x)));\n    }\n    get hostClass() {\n        return true;\n    }\n    get hostRole() {\n        return 'presentation';\n    }\n    get showFooter() {\n        return this.groupable && this.groupable.showFooter;\n    }\n    get totalWidth() {\n        if (this.virtualColumns && this.columns.unlockedWidth) {\n            return this.columns.unlockedWidth;\n        }\n    }\n    get lockedLeafColumns() {\n        return this.columns.lockedLeafColumns;\n    }\n    get nonLockedLeafColumns() {\n        return this.columns.nonLockedLeafColumns;\n    }\n    get nonLockedColumnsToRender() {\n        if (this.virtualColumns && !this.pdfService.exporting) {\n            return this.viewportColumns;\n        }\n        return this.nonLockedLeafColumns;\n    }\n    get leafColumns() {\n        return this.columns.leafColumnsToRender;\n    }\n    get lockedWidth() {\n        const groupCellsWidth = this.groups.length * GROUP_CELL_WIDTH;\n        return expandColumns(this.lockedLeafColumns.toArray()).reduce((prev, curr) => prev + (curr.width || 0), groupCellsWidth);\n    }\n    get nonLockedWidth() {\n        if ((!this.rtl && this.lockedLeafColumns.length) || this.virtualColumns) {\n            return sumColumnWidths(expandColumns(this.nonLockedColumnsToRender.toArray()));\n        }\n        return undefined;\n    }\n    get isLocked() {\n        return this.lockedLeafColumns.length > 0;\n    }\n    ngOnInit() {\n        this.init();\n        this.subscriptions.add(this.ngZone.runOutsideAngular(this.handleRowSync.bind(this)));\n        this.subscriptions.add(this.ngZone.runOutsideAngular(this.handleRowNavigationLocked.bind(this)));\n        this.subscriptions.add(merge(this.columns.changes, this.resizeService.changes).subscribe(() => {\n            if (this.virtualColumns) {\n                this.ngZone.run(() => {\n                    this.updateViewportColumns();\n                    this.changeDetector.markForCheck();\n                });\n            }\n        }));\n        this.subscriptions.add(this.localization.changes.subscribe(({ rtl }) => this.rtl = rtl));\n    }\n    ngOnChanges(changes) {\n        const hasInitialSkip = changes.skip && changes.skip.firstChange && changes.skip.currentValue > 0;\n        if (hasInitialSkip) {\n            this.handleInitialScrollToSkip();\n        }\n        if (isChanged$1(\"skip\", changes) && !this.rebind) {\n            this.skipScroll = true;\n            this.container.nativeElement.scrollTop = this.rowHeightService.offset(this.skip);\n        }\n        if (anyChanged([\"total\", \"take\"], changes)) {\n            this.init();\n        }\n        this.rebind = false;\n    }\n    ngDoCheck() {\n        if (this.virtualColumns && (!this.viewportColumns || this.viewportWidthChange())) {\n            this.updateViewportColumns();\n        }\n    }\n    ngAfterViewInit() {\n        if (this.skip && this.isVirtual) {\n            this.container.nativeElement.scrollTop = this.rowHeightService.offset(this.skip);\n        }\n        this.resetNavigationViewport();\n        this.attachContainerScroll();\n        this.initResizeService();\n    }\n    ngAfterViewChecked() {\n        const isLocked = this.isLocked;\n        if (isLocked && !this.hasLockedContainer) {\n            this.syncRowsHeight();\n        }\n        this.hasLockedContainer = isLocked;\n    }\n    syncRowsHeight() {\n        if (this.lockedContainer) {\n            syncRowsHeight(this.lockedTable.nativeElement, this.table.nativeElement);\n        }\n    }\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n        if (this.resizeService) {\n            this.resizeService.destroy();\n        }\n        this.cleanupScroller();\n    }\n    init() {\n        if (this.suspendService.scroll) {\n            return;\n        }\n        this.rowHeightService = new RowHeightService(this.total, this.rowHeight, this.detailRowHeight);\n        this.totalHeight = this.rowHeightService.totalHeight();\n        if (!isUniversal()) {\n            this.ngZone.runOutsideAngular(this.createScroller.bind(this));\n        }\n    }\n    lockedScroll() {\n        if (!this.suspendService.scroll) {\n            const lockedScrollTop = this.lockedContainer.nativeElement.scrollTop;\n            if (lockedScrollTop !== this.containerScrollTop) {\n                this.container.nativeElement.scrollTop = this.containerScrollTop = lockedScrollTop;\n            }\n        }\n    }\n    lockedMousewheel(args) {\n        if (!args.ctrlKey) {\n            preventLockedScroll(args, this.container.nativeElement);\n            const scrollDelta = wheelDeltaY(args);\n            this.container.nativeElement.scrollTop -= scrollDelta;\n        }\n    }\n    lockedKeydown(args) {\n        if (args.keyCode === Keys.PageDown || args.keyCode === Keys.PageUp) {\n            const dir = args.keyCode === Keys.PageDown ? 1 : -1;\n            const element = this.container.nativeElement;\n            element.scrollTop += element.offsetHeight * dir * 0.8;\n            args.preventDefault();\n        }\n    }\n    detailExpand({ index, expand }) {\n        if (expand) {\n            this.rowHeightService.expandDetail(index);\n        }\n        else {\n            this.rowHeightService.collapseDetail(index);\n        }\n        this.totalHeight = this.rowHeightService.totalHeight();\n        this.resetNavigationViewport();\n    }\n    attachContainerScroll() {\n        if (isUniversal()) {\n            return;\n        }\n        this.ngZone.runOutsideAngular(() => {\n            this.subscriptions.add(fromEvent(this.container.nativeElement, 'scroll').pipe(map((event) => event.target), filter(() => !this.suspendService.scroll), tap((target) => {\n                this.onContainerScroll(target);\n                this.resetNavigationViewport();\n                if (this.virtualColumns) {\n                    this.handleColumnScroll();\n                }\n                const rowViewport = this.navigationService.viewport || EMPTY_OBJECT;\n                const columnViewport = this.navigationService.columnViewport || EMPTY_OBJECT;\n                this.contentScroll.emit({\n                    scrollLeft: target.scrollLeft,\n                    scrollTop: target.scrollTop,\n                    startRow: rowViewport.firstItemIndex,\n                    endRow: rowViewport.lastItemIndex,\n                    startColumn: columnViewport.firstItemIndex,\n                    endColumn: columnViewport.lastItemIndex\n                });\n            })).subscribe(this.dispatcher));\n        });\n        this.scrollSyncService.registerEmitter(this.container.nativeElement, \"body\");\n    }\n    createScroller() {\n        this.cleanupScroller();\n        const observable = this.scroller\n            .create(this.rowHeightService, this.skip, this.take, this.total);\n        this.skipScroll = false;\n        this.scrollerSubscription = observable.pipe(filter((x) => x instanceof PageAction), filter(() => {\n            const temp = this.skipScroll;\n            this.skipScroll = false;\n            return !temp;\n        }), tap(() => this.rebind = true))\n            .subscribe((x) => this.ngZone.run(() => this.pageChange.emit(x)));\n        this.scrollerSubscription.add(observable.pipe(filter((x) => x instanceof ScrollAction))\n            .subscribe(this.scroll.bind(this)));\n        this.scrollerSubscription.add(observable.pipe(filter((x) => x instanceof ScrollBottomAction))\n            .subscribe(() => this.scrollBottom.emit()));\n    }\n    scroll({ offset = 0 }) {\n        if (this.isVirtual) {\n            [\n                maybeNativeElement(this.table),\n                maybeNativeElement(this.lockedTable)\n            ].filter(isPresent).forEach(translateY(this.renderer, offset));\n        }\n        this.resetNavigationViewport();\n    }\n    onContainerScroll({ scrollTop }) {\n        this.containerScrollTop = scrollTop;\n        if (this.lockedContainer) {\n            this.lockedContainer.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    handleInitialScrollToSkip() {\n        const shouldScroll = () => this.isVirtual && this.skip > 0 && this.total > 0;\n        const sub = this.changeNotification.changes\n            .pipe(filter(shouldScroll))\n            .subscribe(_ => {\n            this.scrollTo({ row: this.skip });\n            sub.unsubscribe();\n        });\n    }\n    handleRowSync() {\n        const isLocked = () => isPresent(this.lockedContainer);\n        const onStable = () => this.ngZone.onStable.asObservable().pipe(take(1));\n        return merge(this.changeNotification.changes, this.groupsService.changes\n            .pipe(filter(isLocked), switchMapTo(onStable())), this.editService.changed, this.resizeService.changes, this.columnResizingService.changes\n            .pipe(filter(change => change.type === 'end')), this.supportService.changes)\n            .pipe(tap(() => this.resetNavigationViewport()), filter(isLocked))\n            .subscribe(() => {\n            const scrollTop = this.container.nativeElement.scrollTop;\n            const scrollLeft = this.container.nativeElement.scrollLeft;\n            this.syncRowsHeight();\n            this.syncContainerHeight();\n            this.lockedContainer.nativeElement.scrollTop = this.container.nativeElement.scrollTop = scrollTop;\n            // fixes scroll left position in IE when editing\n            this.container.nativeElement.scrollLeft = scrollLeft;\n            this.resizeSensors.forEach(sensor => sensor.acceptSize());\n        });\n    }\n    handleRowNavigationLocked() {\n        return this.navigationService.changes.pipe(filter(() => isPresent(this.lockedContainer)), delay(10)).subscribe((args) => {\n            if (this.lockedLeafColumns.length <= args.prevColIndex && args.colIndex < this.lockedLeafColumns.length) {\n                const cell = this.navigationService.activeCell;\n                if (cell && cell.colIndex + cell.colSpan < args.prevColIndex) {\n                    this.container.nativeElement.scrollLeft = 0;\n                }\n            }\n        });\n    }\n    scrollToVirtualRow(itemIndex) {\n        if (isPresent(this.detailTemplate)) {\n            itemIndex = Math.floor(itemIndex / 2);\n        }\n        const offset = this.rowHeightService.offset(itemIndex);\n        this.container.nativeElement.scrollTop = offset;\n        this.resetNavigationViewport();\n    }\n    scrollTo({ row, column }) {\n        if (isNumber(row)) {\n            if (this.isVirtual) {\n                this.scrollToVirtualRow(row);\n            }\n            else {\n                const element = rowAt(row, this.table.nativeElement.rows);\n                if (element) {\n                    this.container.nativeElement.scrollTop = element.offsetTop;\n                }\n            }\n        }\n        if (isNumber(column)) {\n            column -= this.lockedLeafColumns.length;\n            if (this.virtualColumns) {\n                const columns = this.columns.leafColumnsToRender;\n                let offset = 0;\n                for (let idx = 0; idx < column; idx++) {\n                    offset += columns[idx].width || 0;\n                }\n                const startOffset = this.lockedLeafColumns.length ? 0 : this.groups.length * GROUP_CELL_WIDTH + (this.detailTemplate && column > 0 ? GROUP_CELL_WIDTH : 0);\n                this.container.nativeElement.scrollLeft = this.normalizeScrollLeft(offset + startOffset);\n            }\n            else if (column === 0 && this.detailTemplate) {\n                this.container.nativeElement.scrollLeft = this.normalizeScrollLeft(0);\n            }\n            else {\n                const firstRow = rowAt(0, this.table.nativeElement.rows);\n                if (firstRow) {\n                    const element = cellAt(column, firstRow.cells);\n                    if (element) {\n                        this.container.nativeElement.scrollLeft = this.elementScrollLeft(element);\n                    }\n                }\n            }\n        }\n    }\n    resetNavigationViewport() {\n        if (!this.container || !this.navigationService.tableEnabled ||\n            !this.navigationService.needsViewport() || this.data.length === 0) {\n            return;\n        }\n        const { scrollTop, offsetHeight } = this.container.nativeElement;\n        const scrollBottom = scrollTop + offsetHeight;\n        const firstItemIndex = this.rowHeightService.index(scrollTop);\n        let lastItemIndex = this.rowHeightService.index(scrollBottom);\n        const lastItemOffset = this.rowHeightService.offset(lastItemIndex);\n        const lastItemOverflows = lastItemOffset + this.rowHeight > scrollBottom;\n        if (lastItemIndex > 0 && lastItemOverflows) {\n            lastItemIndex--;\n        }\n        let viewportStart = firstItemIndex;\n        let viewportEnd = lastItemIndex;\n        if (isPresent(this.detailTemplate)) {\n            viewportStart *= 2;\n            viewportEnd *= 2;\n            const firstItemHeight = this.rowHeightService.offset(firstItemIndex);\n            if (firstItemHeight + this.rowHeight < scrollTop) {\n                viewportStart++;\n            }\n            const lastItemHeight = this.rowHeightService.height(lastItemIndex);\n            const lastItemExpanded = this.rowHeightService.isExpanded(lastItemIndex);\n            const lastItemDetailOverflows = lastItemOffset + lastItemHeight > scrollBottom;\n            if (lastItemExpanded && !lastItemDetailOverflows) {\n                viewportEnd++;\n            }\n        }\n        this.navigationService.setViewport(viewportStart, viewportEnd);\n    }\n    cleanupScroller() {\n        if (this.scrollerSubscription) {\n            this.scrollerSubscription.unsubscribe();\n        }\n        if (this.scroller) {\n            this.scroller.destroy();\n        }\n    }\n    initResizeService() {\n        this.resizeService.connect(merge(...this.resizeSensors.map(sensor => sensor.resize)));\n    }\n    syncContainerHeight() {\n        [maybeNativeElement(this.lockedContainer)]\n            .filter(isPresent)\n            .map(el => {\n            el.style.height = '';\n            let height = this.container.nativeElement.offsetHeight;\n            if (hasScrollbar(this.table, this.container)) {\n                height -= this.supportService.scrollbarWidth;\n            }\n            return { el, height };\n        })\n            .forEach(setHeight(this.renderer));\n    }\n    updateViewportColumns(range) {\n        const columns = this.columns.nonLockedLeafColumns.toArray();\n        let { startIdx, endIdx, offset } = range || this.calculateViewportColumns();\n        const start = Math.max(0, startIdx - bufferSize);\n        const end = Math.min(endIdx + bufferSize, columns.length - 1);\n        if (start < startIdx) {\n            for (let idx = startIdx - 1; idx >= start; idx--) {\n                offset -= columns[idx].width;\n            }\n        }\n        let currentColumns = columns.slice(start, end + 1);\n        this.viewportColumnsWidth = currentColumns.reduce((total, column) => total + column.width, 0);\n        if (start > 0) {\n            const offsetColumn = new ColumnBase();\n            offsetColumn.width = offset;\n            currentColumns.unshift(offsetColumn);\n        }\n        this.viewportColumns = new QueryList();\n        this.viewportColumns.reset(currentColumns);\n        this.columnsStartIdx = start;\n        this.columnsEndIdx = end;\n        this.columnInfo.columnRangeChange.emit({ start, end, offset });\n        if (!range) {\n            this.updateColumnViewport(startIdx, endIdx);\n        }\n    }\n    handleColumnScroll() {\n        const container = this.container.nativeElement;\n        const scrollLeft = container.scrollLeft;\n        if (this.scrollLeft !== scrollLeft) {\n            this.scrollLeft = scrollLeft;\n            const range = this.calculateViewportColumns();\n            this.updateColumnViewport(range.startIdx, range.endIdx);\n            if (range.startIdx < this.columnsStartIdx || this.columnsEndIdx < range.endIdx) {\n                cancelAnimationFrame(this.columnUpdateFrame);\n                this.columnUpdateFrame = requestAnimationFrame(() => {\n                    this.ngZone.run(() => {\n                        this.updateViewportColumns(range);\n                        this.changeDetector.markForCheck();\n                    });\n                });\n            }\n        }\n    }\n    updateColumnViewport(startIdx, endIdx) {\n        const lockedCount = this.lockedLeafColumns.length;\n        const leafColumns = this.nonLockedLeafColumns.toArray();\n        const viewportStart = lockedCount + startIdx + (this.detailTemplate && startIdx > 0 ? 1 : 0);\n        let viewportEnd = lockedCount + endIdx + (this.detailTemplate ? 1 : 0);\n        for (let idx = 0; idx < leafColumns.length; idx++) {\n            const column = leafColumns[idx];\n            if (column.isSpanColumn) {\n                viewportEnd += column.childColumns.length;\n            }\n        }\n        this.navigationService.setColumnViewport(viewportStart, viewportEnd);\n    }\n    calculateViewportColumns() {\n        const { scrollLeft, clientWidth } = this.container.nativeElement;\n        const columns = this.columns.nonLockedLeafColumns.toArray();\n        const normalizedScrollLeft = this.normalizeScrollLeft(scrollLeft);\n        const viewportEnd = normalizedScrollLeft + clientWidth;\n        let startIdx;\n        let endIdx = 0;\n        let current = 0;\n        let offset = 0;\n        let idx;\n        for (idx = 0; idx < columns.length; idx++) {\n            const column = columns[idx];\n            current += column.width || 0;\n            if (startIdx === undefined && current > normalizedScrollLeft) {\n                startIdx = idx;\n                offset = current - (column.width || 0);\n            }\n            if (current >= viewportEnd) {\n                endIdx = idx;\n                break;\n            }\n        }\n        if (!endIdx && idx > 0) {\n            endIdx = columns.length - 1;\n        }\n        return { startIdx, endIdx, offset };\n    }\n    viewportWidthChange() {\n        const currentWidth = this.viewportColumns.toArray().reduce((total, column) => total + column.width, 0);\n        return currentWidth !== this.viewportColumnsWidth;\n    }\n    normalizeScrollLeft(position) {\n        return this.rtl ? rtlScrollPosition(position, this.container.nativeElement, this.supportService.rtlScrollLeft) : position;\n    }\n    elementScrollLeft(element) {\n        if (this.rtl) {\n            return this.normalizeScrollLeft(this.container.nativeElement.scrollWidth - element.offsetLeft - element.offsetWidth);\n        }\n        return element.offsetLeft;\n    }\n}\nListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ListComponent, deps: [{ token: SCROLLER_FACTORY_TOKEN }, { token: DetailsService }, { token: ChangeNotificationService }, { token: SuspendService }, { token: GroupsService }, { token: i0.NgZone }, { token: i0.Renderer2 }, { token: ScrollSyncService }, { token: ResizeService }, { token: EditService }, { token: BrowserSupportService }, { token: NavigationService }, { token: ScrollRequestService }, { token: i1.LocalizationService }, { token: ColumnResizingService }, { token: i0.ChangeDetectorRef }, { token: PDFService }, { token: ColumnInfoService }], target: i0.ɵɵFactoryTarget.Component });\nListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ListComponent, selector: \"kendo-grid-list\", inputs: { data: \"data\", groups: \"groups\", total: \"total\", rowHeight: \"rowHeight\", stickyRowHeight: \"stickyRowHeight\", detailRowHeight: \"detailRowHeight\", take: \"take\", skip: \"skip\", columns: \"columns\", detailTemplate: \"detailTemplate\", noRecordsTemplate: \"noRecordsTemplate\", selectable: \"selectable\", groupable: \"groupable\", filterable: \"filterable\", rowClass: \"rowClass\", rowSticky: \"rowSticky\", loading: \"loading\", trackBy: \"trackBy\", virtualColumns: \"virtualColumns\", isVirtual: \"isVirtual\", cellLoadingTemplate: \"cellLoadingTemplate\", loadingTemplate: \"loadingTemplate\", sort: \"sort\" }, outputs: { contentScroll: \"contentScroll\", pageChange: \"pageChange\", scrollBottom: \"scrollBottom\" }, host: { properties: { \"class.k-grid-container\": \"this.hostClass\", \"attr.role\": \"this.hostRole\" } }, providers: [\n        {\n            provide: SCROLLER_FACTORY_TOKEN,\n            useValue: DEFAULT_SCROLLER_FACTORY\n        }\n    ], viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true, static: true }, { propertyName: \"lockedContainer\", first: true, predicate: [\"lockedContainer\"], descendants: true }, { propertyName: \"lockedTable\", first: true, predicate: [\"lockedTable\"], descendants: true }, { propertyName: \"table\", first: true, predicate: [\"table\"], descendants: true, static: true }, { propertyName: \"resizeSensors\", predicate: ResizeSensorComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div #lockedContainer class=\"k-grid-content-locked\" role=\"presentation\"\n        *ngIf=\"isLocked\" [style.width.px]=\"lockedWidth\" tabindex=\"-1\"\n        [kendoEventsOutsideAngular]=\"{\n            keydown: lockedKeydown,\n            scroll: lockedScroll,\n            mousewheel: lockedMousewheel,\n            DOMMouseScroll: lockedMousewheel\n        }\"\n        [scope]=\"this\"\n        >\n        <div role=\"presentation\" class=\"k-grid-table-wrap\">\n            <table [locked]=\"true\" #lockedTable class=\"k-grid-table\" role=\"presentation\" [style.width.px]=\"lockedWidth\">\n                <colgroup kendoGridColGroup\n                    role=\"presentation\"\n                    [groups]=\"groups\"\n                    [columns]=\"$any(lockedLeafColumns)\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [sort]=\"sort\">\n                </colgroup>\n                <tbody kendoGridTableBody\n                    role=\"presentation\"\n                    [groups]=\"groups\"\n                    [isLocked]=\"true\"\n                    [data]=\"data\"\n                    [noRecordsText]=\"''\"\n                    [columns]=\"$any(lockedLeafColumns)\"\n                    [totalColumnsCount]=\"leafColumns.length\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [showGroupFooters]=\"showFooter\"\n                    [skip]=\"skip\"\n                    [selectable]=\"selectable\"\n                    [trackBy]=\"trackBy\"\n                    [filterable]=\"filterable\"\n                    [rowClass]=\"rowClass\"\n                    [isLoading]=\"loading\"\n                    [isVirtual]=\"isVirtual\"\n                    [cellLoadingTemplate]=\"cellLoadingTemplate\">\n                </tbody>\n            </table>\n            <kendo-resize-sensor></kendo-resize-sensor>\n        </div>\n        <div class=\"k-height-container\" role=\"presentation\">\n            <div [style.height.px]=\"totalHeight\"></div>\n        </div>\n    </div><div #container\n               class=\"k-grid-content k-virtual-content\"\n               role=\"presentation\" tabindex=\"-1\"\n               [kendoGridResizableContainer]=\"lockedLeafColumns.length > 0\"\n               [lockedWidth]=\"lockedWidth + 1\">\n        <div role=\"presentation\" class=\"k-grid-table-wrap\">\n            <table [style.width.px]=\"nonLockedWidth\" #table [virtualColumns]=\"virtualColumns\"\n              class=\"k-grid-table\" role=\"presentation\">\n                <colgroup kendoGridColGroup\n                    role=\"presentation\"\n                    [groups]=\"isLocked ? [] : groups\"\n                    [columns]=\"$any(nonLockedColumnsToRender)\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [sort]=\"sort\">\n                </colgroup>\n                <tbody kendoGridTableBody\n                    role=\"presentation\"\n                    [skipGroupDecoration]=\"isLocked\"\n                    [data]=\"data\"\n                    [groups]=\"groups\"\n                    [showGroupFooters]=\"showFooter\"\n                    [columns]=\"$any(nonLockedColumnsToRender)\"\n                    [allColumns]=\"$any(nonLockedLeafColumns)\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [noRecordsTemplate]=\"noRecordsTemplate\"\n                    [lockedColumnsCount]=\"lockedLeafColumns.length\"\n                    [totalColumnsCount]=\"leafColumns.length\"\n                    [skip]=\"skip\"\n                    [selectable]=\"selectable\"\n                    [trackBy]=\"trackBy\"\n                    [filterable]=\"filterable\"\n                    [rowClass]=\"rowClass\"\n                    [rowSticky]=\"rowSticky\"\n                    [virtualColumns]=\"virtualColumns\"\n                    [isLoading]=\"loading\"\n                    [isVirtual]=\"isVirtual\"\n                    [cellLoadingTemplate]=\"cellLoadingTemplate\">\n                </tbody>\n            </table>\n            <kendo-resize-sensor *ngIf=\"isLocked\"></kendo-resize-sensor>\n        </div>\n        <kendo-resize-sensor *ngIf=\"isLocked || virtualColumns\"></kendo-resize-sensor>\n        <div class=\"k-height-container\" role=\"presentation\">\n            <div [style.height.px]=\"totalHeight\"></div>\n        </div>\n        <div *ngIf=\"virtualColumns\" class=\"k-width-container\" role=\"presentation\">\n            <div [style.width.px]=\"totalWidth\"></div>\n        </div>\n    </div>\n    `, isInline: true, components: [{ type: ColGroupComponent, selector: \"[kendoGridColGroup]\", inputs: [\"columns\", \"groups\", \"detailTemplate\", \"sort\"] }, { type: TableBodyComponent, selector: \"[kendoGridTableBody]\", inputs: [\"columns\", \"allColumns\", \"groups\", \"detailTemplate\", \"noRecordsTemplate\", \"data\", \"skip\", \"selectable\", \"filterable\", \"noRecordsText\", \"isLocked\", \"isLoading\", \"isVirtual\", \"cellLoadingTemplate\", \"skipGroupDecoration\", \"showGroupFooters\", \"lockedColumnsCount\", \"totalColumnsCount\", \"virtualColumns\", \"trackBy\", \"rowSticky\", \"rowClass\"] }, { type: i1$1.ResizeSensorComponent, selector: \"kendo-resize-sensor\", inputs: [\"rateLimit\"], outputs: [\"resize\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1$1.EventsOutsideAngularDirective, selector: \"[kendoEventsOutsideAngular]\", inputs: [\"kendoEventsOutsideAngular\", \"scope\"] }, { type: TableDirective, selector: \"table\", inputs: [\"locked\", \"virtualColumns\"] }, { type: ResizableContainerDirective, selector: \"[kendoGridResizableContainer]\", inputs: [\"lockedWidth\", \"kendoGridResizableContainer\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ListComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: SCROLLER_FACTORY_TOKEN,\n                            useValue: DEFAULT_SCROLLER_FACTORY\n                        }\n                    ],\n                    selector: 'kendo-grid-list',\n                    template: `\n    <div #lockedContainer class=\"k-grid-content-locked\" role=\"presentation\"\n        *ngIf=\"isLocked\" [style.width.px]=\"lockedWidth\" tabindex=\"-1\"\n        [kendoEventsOutsideAngular]=\"{\n            keydown: lockedKeydown,\n            scroll: lockedScroll,\n            mousewheel: lockedMousewheel,\n            DOMMouseScroll: lockedMousewheel\n        }\"\n        [scope]=\"this\"\n        >\n        <div role=\"presentation\" class=\"k-grid-table-wrap\">\n            <table [locked]=\"true\" #lockedTable class=\"k-grid-table\" role=\"presentation\" [style.width.px]=\"lockedWidth\">\n                <colgroup kendoGridColGroup\n                    role=\"presentation\"\n                    [groups]=\"groups\"\n                    [columns]=\"$any(lockedLeafColumns)\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [sort]=\"sort\">\n                </colgroup>\n                <tbody kendoGridTableBody\n                    role=\"presentation\"\n                    [groups]=\"groups\"\n                    [isLocked]=\"true\"\n                    [data]=\"data\"\n                    [noRecordsText]=\"''\"\n                    [columns]=\"$any(lockedLeafColumns)\"\n                    [totalColumnsCount]=\"leafColumns.length\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [showGroupFooters]=\"showFooter\"\n                    [skip]=\"skip\"\n                    [selectable]=\"selectable\"\n                    [trackBy]=\"trackBy\"\n                    [filterable]=\"filterable\"\n                    [rowClass]=\"rowClass\"\n                    [isLoading]=\"loading\"\n                    [isVirtual]=\"isVirtual\"\n                    [cellLoadingTemplate]=\"cellLoadingTemplate\">\n                </tbody>\n            </table>\n            <kendo-resize-sensor></kendo-resize-sensor>\n        </div>\n        <div class=\"k-height-container\" role=\"presentation\">\n            <div [style.height.px]=\"totalHeight\"></div>\n        </div>\n    </div><div #container\n               class=\"k-grid-content k-virtual-content\"\n               role=\"presentation\" tabindex=\"-1\"\n               [kendoGridResizableContainer]=\"lockedLeafColumns.length > 0\"\n               [lockedWidth]=\"lockedWidth + 1\">\n        <div role=\"presentation\" class=\"k-grid-table-wrap\">\n            <table [style.width.px]=\"nonLockedWidth\" #table [virtualColumns]=\"virtualColumns\"\n              class=\"k-grid-table\" role=\"presentation\">\n                <colgroup kendoGridColGroup\n                    role=\"presentation\"\n                    [groups]=\"isLocked ? [] : groups\"\n                    [columns]=\"$any(nonLockedColumnsToRender)\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [sort]=\"sort\">\n                </colgroup>\n                <tbody kendoGridTableBody\n                    role=\"presentation\"\n                    [skipGroupDecoration]=\"isLocked\"\n                    [data]=\"data\"\n                    [groups]=\"groups\"\n                    [showGroupFooters]=\"showFooter\"\n                    [columns]=\"$any(nonLockedColumnsToRender)\"\n                    [allColumns]=\"$any(nonLockedLeafColumns)\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [noRecordsTemplate]=\"noRecordsTemplate\"\n                    [lockedColumnsCount]=\"lockedLeafColumns.length\"\n                    [totalColumnsCount]=\"leafColumns.length\"\n                    [skip]=\"skip\"\n                    [selectable]=\"selectable\"\n                    [trackBy]=\"trackBy\"\n                    [filterable]=\"filterable\"\n                    [rowClass]=\"rowClass\"\n                    [rowSticky]=\"rowSticky\"\n                    [virtualColumns]=\"virtualColumns\"\n                    [isLoading]=\"loading\"\n                    [isVirtual]=\"isVirtual\"\n                    [cellLoadingTemplate]=\"cellLoadingTemplate\">\n                </tbody>\n            </table>\n            <kendo-resize-sensor *ngIf=\"isLocked\"></kendo-resize-sensor>\n        </div>\n        <kendo-resize-sensor *ngIf=\"isLocked || virtualColumns\"></kendo-resize-sensor>\n        <div class=\"k-height-container\" role=\"presentation\">\n            <div [style.height.px]=\"totalHeight\"></div>\n        </div>\n        <div *ngIf=\"virtualColumns\" class=\"k-width-container\" role=\"presentation\">\n            <div [style.width.px]=\"totalWidth\"></div>\n        </div>\n    </div>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SCROLLER_FACTORY_TOKEN]\n                }] }, { type: DetailsService }, { type: ChangeNotificationService }, { type: SuspendService }, { type: GroupsService }, { type: i0.NgZone }, { type: i0.Renderer2 }, { type: ScrollSyncService }, { type: ResizeService }, { type: EditService }, { type: BrowserSupportService }, { type: NavigationService }, { type: ScrollRequestService }, { type: i1.LocalizationService }, { type: ColumnResizingService }, { type: i0.ChangeDetectorRef }, { type: PDFService }, { type: ColumnInfoService }]; }, propDecorators: { hostClass: [{\n                type: HostBinding,\n                args: [\"class.k-grid-container\"]\n            }], hostRole: [{\n                type: HostBinding,\n                args: [\"attr.role\"]\n            }], data: [{\n                type: Input\n            }], groups: [{\n                type: Input\n            }], total: [{\n                type: Input\n            }], rowHeight: [{\n                type: Input\n            }], stickyRowHeight: [{\n                type: Input\n            }], detailRowHeight: [{\n                type: Input\n            }], take: [{\n                type: Input\n            }], skip: [{\n                type: Input\n            }], columns: [{\n                type: Input\n            }], detailTemplate: [{\n                type: Input\n            }], noRecordsTemplate: [{\n                type: Input\n            }], selectable: [{\n                type: Input\n            }], groupable: [{\n                type: Input\n            }], filterable: [{\n                type: Input\n            }], rowClass: [{\n                type: Input\n            }], rowSticky: [{\n                type: Input\n            }], loading: [{\n                type: Input\n            }], trackBy: [{\n                type: Input\n            }], virtualColumns: [{\n                type: Input\n            }], isVirtual: [{\n                type: Input\n            }], cellLoadingTemplate: [{\n                type: Input\n            }], loadingTemplate: [{\n                type: Input\n            }], sort: [{\n                type: Input\n            }], contentScroll: [{\n                type: Output\n            }], pageChange: [{\n                type: Output\n            }], scrollBottom: [{\n                type: Output\n            }], container: [{\n                type: ViewChild,\n                args: ['container', { static: true }]\n            }], lockedContainer: [{\n                type: ViewChild,\n                args: ['lockedContainer', { static: false }]\n            }], lockedTable: [{\n                type: ViewChild,\n                args: ['lockedTable', { static: false }]\n            }], table: [{\n                type: ViewChild,\n                args: ['table', { static: true }]\n            }], resizeSensors: [{\n                type: ViewChildren,\n                args: [ResizeSensorComponent]\n            }] } });\n\n/**\n * @hidden\n */\nclass FooterComponent {\n    constructor(columnInfoService) {\n        this.columnInfoService = columnInfoService;\n        this.columns = [];\n        this.groups = [];\n        this.lockedColumnsCount = 0;\n        this.logicalRowIndex = 0;\n    }\n    get footerClass() {\n        return !this.scrollable;\n    }\n    get columnsToRender() {\n        return columnsToRender(this.columns || []);\n    }\n    logicalColumnIndex(column) {\n        const index = column.leafIndex;\n        if (isPresent(index)) {\n            return index + (isPresent(this.detailTemplate) ? 1 : 0);\n        }\n        return -1;\n    }\n    addStickyStyles(column) {\n        const stickyStyles = this.columnInfoService.stickyColumnsStyles(column);\n        return Object.assign(Object.assign({}, column.style), stickyStyles);\n    }\n}\nFooterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FooterComponent, deps: [{ token: ColumnInfoService }], target: i0.ɵɵFactoryTarget.Component });\nFooterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FooterComponent, selector: \"[kendoGridFooter]\", inputs: { columns: \"columns\", groups: \"groups\", detailTemplate: \"detailTemplate\", scrollable: \"scrollable\", lockedColumnsCount: \"lockedColumnsCount\", logicalRowIndex: \"logicalRowIndex\" }, host: { properties: { \"class.k-grid-footer\": \"this.footerClass\" } }, ngImport: i0, template: `\n    <ng-container>\n        <tr\n            [class.k-footer-template]=\"true\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"logicalRowIndex\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"columns.length - lockedColumnsCount\"\n            >\n            <td\n                [class.k-group-cell]=\"true\"\n                role=\"presentation\"\n                *ngFor=\"let g of groups\">\n            </td>\n            <td\n                [class.k-hierarchy-cell]=\"true\"\n                role=\"presentation\"\n                *ngIf=\"detailTemplate?.templateRef\">\n            </td>\n            <td\n                *ngFor=\"let column of columnsToRender; let columnIndex = index\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex\"\n                    [logicalColIndex]=\"logicalColumnIndex(column)\"\n                    role=\"columnfooter\"\n                    aria-selected=\"false\"\n                [class.k-grid-footer-sticky]=\"column.sticky\"\n                [ngClass]=\"column.footerClass\"\n                [ngStyle]=\"column.sticky ? addStickyStyles(column) : column.footerStyle\">\n                <ng-template\n                    [templateContext]=\"{\n                        templateRef: column.footerTemplateRef,\n                        columnIndex: lockedColumnsCount + columnIndex,\n                        column: column,\n                        $implicit: column\n                    }\">\n                </ng-template>\n            </td>\n        </tr>\n    </ng-container>\n    `, isInline: true, directives: [{ type: LogicalRowDirective, selector: \"[kendoGridLogicalRow]\", inputs: [\"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", \"dataRowIndex\", \"dataItem\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: LogicalCellDirective, selector: \"[kendoGridLogicalCell]\", inputs: [\"logicalColIndex\", \"logicalRowIndex\", \"logicalSlaveCell\", \"colIndex\", \"colSpan\", \"rowSpan\", \"groupItem\", \"dataRowIndex\", \"dataItem\", \"detailExpandCell\", \"headerLabelText\"] }, { type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i4.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: TemplateContextDirective, selector: \"[templateContext]\", inputs: [\"templateContext\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FooterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[kendoGridFooter]',\n                    template: `\n    <ng-container>\n        <tr\n            [class.k-footer-template]=\"true\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"logicalRowIndex\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"columns.length - lockedColumnsCount\"\n            >\n            <td\n                [class.k-group-cell]=\"true\"\n                role=\"presentation\"\n                *ngFor=\"let g of groups\">\n            </td>\n            <td\n                [class.k-hierarchy-cell]=\"true\"\n                role=\"presentation\"\n                *ngIf=\"detailTemplate?.templateRef\">\n            </td>\n            <td\n                *ngFor=\"let column of columnsToRender; let columnIndex = index\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex\"\n                    [logicalColIndex]=\"logicalColumnIndex(column)\"\n                    role=\"columnfooter\"\n                    aria-selected=\"false\"\n                [class.k-grid-footer-sticky]=\"column.sticky\"\n                [ngClass]=\"column.footerClass\"\n                [ngStyle]=\"column.sticky ? addStickyStyles(column) : column.footerStyle\">\n                <ng-template\n                    [templateContext]=\"{\n                        templateRef: column.footerTemplateRef,\n                        columnIndex: lockedColumnsCount + columnIndex,\n                        column: column,\n                        $implicit: column\n                    }\">\n                </ng-template>\n            </td>\n        </tr>\n    </ng-container>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: ColumnInfoService }]; }, propDecorators: { columns: [{\n                type: Input\n            }], groups: [{\n                type: Input\n            }], detailTemplate: [{\n                type: Input\n            }], scrollable: [{\n                type: Input\n            }], lockedColumnsCount: [{\n                type: Input\n            }], logicalRowIndex: [{\n                type: Input\n            }], footerClass: [{\n                type: HostBinding,\n                args: ['class.k-grid-footer']\n            }] } });\n\n/**\n * @hidden\n */\nclass LoadingComponent {\n    constructor(localization) {\n        this.localization = localization;\n        this.hostClass = true;\n    }\n    get loadingText() {\n        return this.localization.get('loading');\n    }\n}\nLoadingComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LoadingComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nLoadingComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LoadingComponent, selector: \"[kendoGridLoading]\", inputs: { loadingTemplate: \"loadingTemplate\" }, host: { properties: { \"class.k-loading-mask\": \"this.hostClass\" } }, ngImport: i0, template: `\n        <ng-container *ngIf=\"!loadingTemplate\">\n            <span class=\"k-loading-text\">{{ loadingText }}</span>\n            <div class=\"k-loading-image\"></div>\n            <div class=\"k-loading-color\"></div>\n        </ng-container>\n        <ng-template *ngIf=\"loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate?.templateRef\">\n        </ng-template>\n    `, isInline: true, directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LoadingComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[kendoGridLoading]',\n                    template: `\n        <ng-container *ngIf=\"!loadingTemplate\">\n            <span class=\"k-loading-text\">{{ loadingText }}</span>\n            <div class=\"k-loading-image\"></div>\n            <div class=\"k-loading-color\"></div>\n        </ng-container>\n        <ng-template *ngIf=\"loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate?.templateRef\">\n        </ng-template>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; }, propDecorators: { hostClass: [{\n                type: HostBinding,\n                args: ['class.k-loading-mask']\n            }], loadingTemplate: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass GridMessages extends ComponentMessages {\n}\nGridMessages.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GridMessages, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nGridMessages.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: GridMessages, selector: \"kendo-grid-messages-base\", inputs: { groupPanelEmpty: \"groupPanelEmpty\", noRecords: \"noRecords\", pagerLabel: \"pagerLabel\", pagerFirstPage: \"pagerFirstPage\", pagerLastPage: \"pagerLastPage\", pagerPreviousPage: \"pagerPreviousPage\", pagerNextPage: \"pagerNextPage\", pagerPage: \"pagerPage\", pagerItemsPerPage: \"pagerItemsPerPage\", pagerOf: \"pagerOf\", pagerItems: \"pagerItems\", pagerPageNumberInputTitle: \"pagerPageNumberInputTitle\", filter: \"filter\", filterInputLabel: \"filterInputLabel\", filterMenuTitle: \"filterMenuTitle\", filterMenuOperatorsDropDownLabel: \"filterMenuOperatorsDropDownLabel\", filterMenuLogicDropDownLabel: \"filterMenuLogicDropDownLabel\", filterEqOperator: \"filterEqOperator\", filterNotEqOperator: \"filterNotEqOperator\", filterIsNullOperator: \"filterIsNullOperator\", filterIsNotNullOperator: \"filterIsNotNullOperator\", filterIsEmptyOperator: \"filterIsEmptyOperator\", filterIsNotEmptyOperator: \"filterIsNotEmptyOperator\", filterStartsWithOperator: \"filterStartsWithOperator\", filterContainsOperator: \"filterContainsOperator\", filterNotContainsOperator: \"filterNotContainsOperator\", filterEndsWithOperator: \"filterEndsWithOperator\", filterGteOperator: \"filterGteOperator\", filterGtOperator: \"filterGtOperator\", filterLteOperator: \"filterLteOperator\", filterLtOperator: \"filterLtOperator\", filterIsTrue: \"filterIsTrue\", filterIsFalse: \"filterIsFalse\", filterBooleanAll: \"filterBooleanAll\", filterAfterOrEqualOperator: \"filterAfterOrEqualOperator\", filterAfterOperator: \"filterAfterOperator\", filterBeforeOperator: \"filterBeforeOperator\", filterBeforeOrEqualOperator: \"filterBeforeOrEqualOperator\", filterFilterButton: \"filterFilterButton\", filterClearButton: \"filterClearButton\", filterAndLogic: \"filterAndLogic\", filterOrLogic: \"filterOrLogic\", loading: \"loading\", gridLabel: \"gridLabel\", columnMenu: \"columnMenu\", setColumnPosition: \"setColumnPosition\", columns: \"columns\", lock: \"lock\", unlock: \"unlock\", stick: \"stick\", unstick: \"unstick\", sortable: \"sortable\", sortAscending: \"sortAscending\", sortDescending: \"sortDescending\", autosizeThisColumn: \"autosizeThisColumn\", autosizeAllColumns: \"autosizeAllColumns\", sortedAscending: \"sortedAscending\", sortedDescending: \"sortedDescending\", sortedDefault: \"sortedDefault\", columnsApply: \"columnsApply\", columnsReset: \"columnsReset\", detailExpand: \"detailExpand\", detailCollapse: \"detailCollapse\", filterDateToday: \"filterDateToday\", filterDateToggle: \"filterDateToggle\", filterNumericDecrement: \"filterNumericDecrement\", filterNumericIncrement: \"filterNumericIncrement\", selectionCheckboxLabel: \"selectionCheckboxLabel\", selectAllCheckboxLabel: \"selectAllCheckboxLabel\", groupCollapse: \"groupCollapse\", groupExpand: \"groupExpand\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GridMessages, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: 'kendo-grid-messages-base'\n                }]\n        }], propDecorators: { groupPanelEmpty: [{\n                type: Input\n            }], noRecords: [{\n                type: Input\n            }], pagerLabel: [{\n                type: Input\n            }], pagerFirstPage: [{\n                type: Input\n            }], pagerLastPage: [{\n                type: Input\n            }], pagerPreviousPage: [{\n                type: Input\n            }], pagerNextPage: [{\n                type: Input\n            }], pagerPage: [{\n                type: Input\n            }], pagerItemsPerPage: [{\n                type: Input\n            }], pagerOf: [{\n                type: Input\n            }], pagerItems: [{\n                type: Input\n            }], pagerPageNumberInputTitle: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], filterInputLabel: [{\n                type: Input\n            }], filterMenuTitle: [{\n                type: Input\n            }], filterMenuOperatorsDropDownLabel: [{\n                type: Input\n            }], filterMenuLogicDropDownLabel: [{\n                type: Input\n            }], filterEqOperator: [{\n                type: Input\n            }], filterNotEqOperator: [{\n                type: Input\n            }], filterIsNullOperator: [{\n                type: Input\n            }], filterIsNotNullOperator: [{\n                type: Input\n            }], filterIsEmptyOperator: [{\n                type: Input\n            }], filterIsNotEmptyOperator: [{\n                type: Input\n            }], filterStartsWithOperator: [{\n                type: Input\n            }], filterContainsOperator: [{\n                type: Input\n            }], filterNotContainsOperator: [{\n                type: Input\n            }], filterEndsWithOperator: [{\n                type: Input\n            }], filterGteOperator: [{\n                type: Input\n            }], filterGtOperator: [{\n                type: Input\n            }], filterLteOperator: [{\n                type: Input\n            }], filterLtOperator: [{\n                type: Input\n            }], filterIsTrue: [{\n                type: Input\n            }], filterIsFalse: [{\n                type: Input\n            }], filterBooleanAll: [{\n                type: Input\n            }], filterAfterOrEqualOperator: [{\n                type: Input\n            }], filterAfterOperator: [{\n                type: Input\n            }], filterBeforeOperator: [{\n                type: Input\n            }], filterBeforeOrEqualOperator: [{\n                type: Input\n            }], filterFilterButton: [{\n                type: Input\n            }], filterClearButton: [{\n                type: Input\n            }], filterAndLogic: [{\n                type: Input\n            }], filterOrLogic: [{\n                type: Input\n            }], loading: [{\n                type: Input\n            }], gridLabel: [{\n                type: Input\n            }], columnMenu: [{\n                type: Input\n            }], setColumnPosition: [{\n                type: Input\n            }], columns: [{\n                type: Input\n            }], lock: [{\n                type: Input\n            }], unlock: [{\n                type: Input\n            }], stick: [{\n                type: Input\n            }], unstick: [{\n                type: Input\n            }], sortable: [{\n                type: Input\n            }], sortAscending: [{\n                type: Input\n            }], sortDescending: [{\n                type: Input\n            }], autosizeThisColumn: [{\n                type: Input\n            }], autosizeAllColumns: [{\n                type: Input\n            }], sortedAscending: [{\n                type: Input\n            }], sortedDescending: [{\n                type: Input\n            }], sortedDefault: [{\n                type: Input\n            }], columnsApply: [{\n                type: Input\n            }], columnsReset: [{\n                type: Input\n            }], detailExpand: [{\n                type: Input\n            }], detailCollapse: [{\n                type: Input\n            }], filterDateToday: [{\n                type: Input\n            }], filterDateToggle: [{\n                type: Input\n            }], filterNumericDecrement: [{\n                type: Input\n            }], filterNumericIncrement: [{\n                type: Input\n            }], selectionCheckboxLabel: [{\n                type: Input\n            }], selectAllCheckboxLabel: [{\n                type: Input\n            }], groupCollapse: [{\n                type: Input\n            }], groupExpand: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass LocalizedMessagesDirective extends GridMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nLocalizedMessagesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalizedMessagesDirective, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Directive });\nLocalizedMessagesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LocalizedMessagesDirective, selector: \"[kendoGridLocalizedMessages]\", providers: [\n        {\n            provide: GridMessages,\n            useExisting: forwardRef(() => LocalizedMessagesDirective)\n        }\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalizedMessagesDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    providers: [\n                        {\n                            provide: GridMessages,\n                            useExisting: forwardRef(() => LocalizedMessagesDirective)\n                        }\n                    ],\n                    selector: '[kendoGridLocalizedMessages]'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\nconst createControl = (source) => (acc, key) => {\n    acc[key] = new FormControl(source[key]);\n    return acc;\n};\nconst validateColumnsField = (columns) => expandColumns(columns.toArray())\n    .filter(isColumnComponent)\n    .filter(({ field }) => !isValidFieldName(field))\n    .forEach(({ field }) => console.warn(`\n                Grid column field name '${field}' does not look like a valid JavaScript identifier.\n                Identifiers can contain only alphanumeric characters (including \"$\" or \"_\"), and may not start with a digit.\n                Please use only valid identifier names to ensure error-free operation.\n            `));\nconst handleExpandCollapseGroupsService = (service, expandEmitter, collapseEmitter, map) => (service.changes.pipe(filter(({ group }) => isPresent(group)))\n    .subscribe((x) => x.expand ? expandEmitter.emit(map(x)) : collapseEmitter.emit(map(x))));\nconst handleExpandCollapseDetailsService = (service, expandEmitter, collapseEmitter, map) => (service.changes.pipe(filter(({ dataItem }) => isPresent(dataItem)))\n    .subscribe((x) => x.expand ? expandEmitter.emit(map(x)) : collapseEmitter.emit(map(x))));\nconst isInEditedCell = (element, gridElement) => closest(element, matchesClasses('k-grid-edit-cell')) &&\n    closest(element, matchesNodeName('kendo-grid')) === gridElement;\n/**\n * Represents the Kendo UI Grid component for Angular.\n *\n * @example\n * ```ts-preview\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\">\n *        </kendo-grid>\n *    `\n * })\n * class AppComponent {\n *    public gridData: any[] = products;\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n * ```\n */\nclass GridComponent {\n    constructor(supportService, selectionService, cellSelectionService, wrapper, groupInfoService, groupsService, changeNotification, detailsService, editService, filterService, pdfService, responsiveService, renderer, excelService, ngZone, scrollSyncService, domEvents, columnResizingService, changeDetectorRef, columnReorderService, columnInfoService, navigationService, sortService, scrollRequestService, localization, ctx) {\n        this.supportService = supportService;\n        this.selectionService = selectionService;\n        this.cellSelectionService = cellSelectionService;\n        this.wrapper = wrapper;\n        this.groupInfoService = groupInfoService;\n        this.groupsService = groupsService;\n        this.changeNotification = changeNotification;\n        this.detailsService = detailsService;\n        this.editService = editService;\n        this.filterService = filterService;\n        this.pdfService = pdfService;\n        this.responsiveService = responsiveService;\n        this.renderer = renderer;\n        this.excelService = excelService;\n        this.ngZone = ngZone;\n        this.scrollSyncService = scrollSyncService;\n        this.domEvents = domEvents;\n        this.columnResizingService = columnResizingService;\n        this.changeDetectorRef = changeDetectorRef;\n        this.columnReorderService = columnReorderService;\n        this.columnInfoService = columnInfoService;\n        this.navigationService = navigationService;\n        this.sortService = sortService;\n        this.scrollRequestService = scrollRequestService;\n        this.localization = localization;\n        this.ctx = ctx;\n        /**\n         * Sets the data of the Grid. If an array is provided, the Grid automatically gets the total count\n         * ([more information and example]({% slug binding_grid %})).\n         */\n        this.data = [];\n        /**\n         * Defines the scroll mode used by the Grid.\n         *\n         * The available options are:\n         *  - `none`&mdash;Renders no scrollbar.\n         *  - `scrollable`&mdash;The default scroll mode. It requires the setting of the `height` option.\n         *  - `virtual`&mdash;Displays no pager and renders a portion of the data (optimized rendering) while the user is scrolling the content.\n         */\n        this.scrollable = 'scrollable';\n        /**\n         * Enables the single-row [selection]({% slug selection_grid %}) of the Grid.\n         */\n        this.selectable = false;\n        /**\n         * A function that defines how to track changes for the data rows.\n         *\n         * By default, the Grid tracks changes by the index of the data item.\n         * Edited rows are tracked by reference.\n         * In some cases, you might need to override the default behavior,\n         * for example, when you implement editing with immutable data items.\n         *\n         * The following example demonstrates how to track items only by index.\n         *\n         * @example\n         * ```ts\n         * import { Component } from '@angular/core';\n         * import { GridItem } from '@progress/kendo-angular-grid';\n         *\n         * _@Component({\n         *    selector: 'my-app',\n         *    template: `\n         *        <kendo-grid [data]=\"gridData\" [trackBy]=\"trackBy\">\n         *        </kendo-grid>\n         *    `\n         * })\n         * class AppComponent {\n         *    public gridData: any[] = products;\n         *\n         *    public trackBy(index: number, item: GridItem): any {\n         *        console.log(item);\n         *        return index;\n         *    }\n         * }\n         *\n         * const products = [{\n         *    \"ProductID\": 1,\n         *    \"ProductName\": \"Chai\",\n         *    \"UnitPrice\": 18.0000,\n         *    \"Discontinued\": true\n         *  }, {\n         *    \"ProductID\": 2,\n         *    \"ProductName\": \"Chang\",\n         *    \"UnitPrice\": 19.0000,\n         *    \"Discontinued\": false\n         *  }\n         * ];\n         * ```\n         */\n        this.trackBy = defaultTrackBy;\n        /**\n         * If set to `true`, the grid will render only the columns in the current viewport.\n         */\n        this.virtualColumns = false;\n        /**\n         * Enables the [filtering]({% slug filtering_grid %}) of the Grid columns that have their `field` option set.\n         */\n        this.filterable = false;\n        /**\n         * Enables the [sorting]({% slug sorting_grid %}) of the Grid columns that have their `field` option set.\n         */\n        this.sortable = false;\n        /**\n         * Configures the pager of the Grid ([see example]({% slug paging_grid %})).\n         *\n         * The available options are:\n         * - `buttonCount: Number`&mdash;Sets the maximum numeric buttons count before the buttons are collapsed. Defaults to `10`.\n         * - `info: Boolean`&mdash;Toggles the information about the current page and the total number of records. Defaults to `true`.\n         * - `type: PagerType`&mdash;Accepts the `numeric` (buttons with numbers) and `input` (input for typing the page number) values. Defaults to `'numeric'`.\n         * - `pageSizes: Boolean` or `Array<number>`&mdash;Shows a menu for selecting the page size. Defaults to `false`.\n         * - `previousNext: Boolean`&mdash;Toggles the **Previous** and **Next** buttons. Defaults to `true`.\n         * - `responsive: Boolean`&mdash;Toggles the built-in responsive behavior of the Pager. Defaults to `true`.\n         */\n        this.pageable = false;\n        /**\n         * If set to `true`, the user can group the Grid by dragging the column header cells.\n         * By default, grouping is disabled ([see example]({% slug grouping_grid %})).\n         */\n        this.groupable = false;\n        /**\n         * Indicates whether the Grid columns will be resized during initialization so that\n         * they fit their headers and row content. Defaults to `false`.\n         * Columns with `autoSize` set to `false` are excluded.\n         * To dynamically update the column width to match the new content,\n         * refer to [this example]({% slug resizing_columns_grid %}).\n         */\n        this.autoSize = false;\n        /**\n         * If set to `true`, the user can resize columns by dragging the edges (resize handles) of their header cells\n         * ([see example]({% slug resizing_columns_grid %})).\n         *\n         * @default false\n         */\n        this.resizable = false;\n        /**\n         * If set to `true`, the user can reorder columns by dragging their header cells\n         * ([see example]({% slug reordering_columns_grid %})).\n         *\n         * @default false\n         */\n        this.reorderable = false;\n        /**\n         * Specifies if the loading indicator of the Grid will be displayed ([see example]({% slug binding_grid %})).\n         *\n         * @default false\n         */\n        this.loading = false;\n        /**\n         * Specifies if the column menu of the columns will be displayed ([see example]({% slug columnmenu_grid %})).\n         *\n         * @default false\n         */\n        this.columnMenu = false;\n        /**\n         * Specifies if the header of the grid will be hidden. The header is visible by default.\n         *\n         * > The header includes column headers and the [filter row]({% slug filtering_grid %}#toc-filter-row).\n         */\n        this.hideHeader = false;\n        /**\n         * Fires when the Grid filter is modified through the UI.\n         * You have to handle the event yourself and filter the data.\n         */\n        this.filterChange = new EventEmitter();\n        /**\n         * Fires when the page of the Grid is changed ([see example]({% slug paging_grid %})).\n         * You have to handle the event yourself and page the data.\n         */\n        this.pageChange = new EventEmitter();\n        /**\n         * Fires when the grouping of the Grid is changed.\n         * You have to handle the event yourself and group the data ([see example]({% slug grouping_grid %})).\n         */\n        this.groupChange = new ZoneAwareEventEmitter(this.ngZone);\n        /**\n         * Fires when the sorting of the Grid is changed ([see example]({% slug sorting_grid %})).\n         * You have to handle the event yourself and sort the data.\n         */\n        this.sortChange = new EventEmitter();\n        /**\n         * Fires when the user selects a Grid row.\n         * Emits the [SelectionEvent]({% slug api_grid_selectionevent %}#toc-selectionchange).\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Fires when the data state of the Grid is changed.\n         */\n        this.dataStateChange = new EventEmitter();\n        /**\n         * Fires when the user expands a group header.\n         */\n        this.groupExpand = new EventEmitter();\n        /**\n         * Fires when the user collapses a group header.\n         */\n        this.groupCollapse = new EventEmitter();\n        /**\n         * Fires when the user expands a master row.\n         */\n        this.detailExpand = new EventEmitter();\n        /**\n         * Fires when the user collapses a master row.\n         */\n        this.detailCollapse = new EventEmitter();\n        /**\n         * Fires when the user clicks the **Edit** command button to edit a row\n         * ([see example]({% slug inline_editing_grid %}#toc-editing-records-1).\n         */\n        this.edit = new EventEmitter();\n        /**\n         * Fires when the user clicks the **Cancel** command button to close a row\n         * ([see example]({% slug inline_editing_grid %}#toc-canceling-editing-1)).\n         */\n        this.cancel = new EventEmitter();\n        /**\n         * Fires when the user clicks the **Save** command button to save changes in a row\n         * ([see example]({% slug inline_editing_grid %}#toc-saving-records-1)).\n         */\n        this.save = new EventEmitter();\n        /**\n         * Fires when the user clicks the **Remove** command button to remove a row\n         * ([see example]({% slug inline_editing_grid %}#toc-removing-records-1)).\n         */\n        this.remove = new EventEmitter();\n        /**\n         * Fires when the user clicks the **Add** command button to add a new row\n         * ([see example]({% slug inline_editing_grid %}#toc-adding-records-1)).\n         */\n        this.add = new EventEmitter();\n        /**\n         * Fires when the user leaves an edited cell ([see example]({% slug editing_incell_grid %}#toc-basic-concepts)).\n         */\n        this.cellClose = new EventEmitter();\n        /**\n         * Fires when the user clicks a cell ([see example]({% slug editing_incell_grid %}#toc-basic-concepts)).\n         */\n        this.cellClick = new ZoneAwareEventEmitter(this.ngZone);\n        /**\n         * Fires when the user clicks the **Export to PDF** command button.\n         */\n        this.pdfExport = new EventEmitter();\n        /**\n         * Fires when the user clicks the **Export to Excel** command button.\n         */\n        this.excelExport = new EventEmitter();\n        /**\n         * Fires when the user completes the resizing of the column.\n         */\n        this.columnResize = new ZoneAwareEventEmitter(this.ngZone);\n        /**\n         * Fires when the user completes the reordering of the column.\n         */\n        this.columnReorder = new EventEmitter();\n        /**\n         * Fires when the user changes the visibility of the columns from the column menu or column chooser.\n         */\n        this.columnVisibilityChange = new EventEmitter();\n        /**\n         * Fires when the user changes the locked state of the columns from the column menu or by reordering the columns.\n         */\n        this.columnLockedChange = new EventEmitter();\n        /**\n         * Fires when the user changes the sticky state of the columns from the column menu.\n         */\n        this.columnStickyChange = new EventEmitter();\n        /**\n         * Fires when the user scrolls to the last record on the page and enables endless scrolling\n         * ([see example]({% slug scrollmmodes_grid %}#toc-endless-scrolling)).\n         * You have to handle the event yourself and page the data.\n         */\n        this.scrollBottom = new EventEmitter();\n        /**\n         * Fires when the grid content is scrolled.\n         * For performance reasons, the event is triggered outside the Angular zone. Enter the Angular zone if you make any changes that require change detection.\n         */\n        this.contentScroll = new EventEmitter();\n        /**\n         * A query list of all declared columns.\n         */\n        this.columns = new QueryList();\n        this.footer = new QueryList();\n        this.selectionDirective = false;\n        this.columnsContainer = new ColumnsContainer(() => this.columnList.filterHierarchy(column => {\n            column.matchesMedia = this.matchesMedia(column);\n            return column.isVisible;\n        }));\n        this.view = new DataCollection(() => new DataResultIterator(this.data, this.skip, this.hasGroupFooters));\n        this.shouldGenerateColumns = true;\n        this._sort = new Array();\n        this._group = new Array();\n        this._skip = 0;\n        this.cachedWindowWidth = 0;\n        this._rowSelected = null;\n        this._cellSelected = null;\n        this._navigable = [];\n        this.rtl = false;\n        this._rowClass = () => null;\n        validatePackage(packageMetadata);\n        this.ctx.grid = this;\n        this.localizationSubscription = this.localization.changes.subscribe(({ rtl }) => {\n            this.rtl = rtl;\n            this.direction = this.rtl ? 'rtl' : 'ltr';\n        });\n        this.groupInfoService.registerColumnsContainer(() => this.columnList);\n        this.columnInfoService.init(this.columnsContainer, () => this.columnList);\n        this.columnVisibilityChangeSubscription = this.columnInfoService.visibilityChange.subscribe((changed) => {\n            this.columnVisibilityChange.emit(new ColumnVisibilityChangeEvent(changed));\n        });\n        this.columnLockedChangeSubscription = this.columnInfoService.lockedChange.subscribe((changed) => {\n            this.columnLockedChange.emit(new ColumnLockedChangeEvent(changed));\n        });\n        this.columnStickyChangeSubscription = this.columnInfoService.stickyChange.subscribe((changed) => {\n            this.columnStickyChange.emit(new ColumnStickyChangeEvent(changed));\n        });\n        this.groupExpandCollapseSubscription = handleExpandCollapseGroupsService(groupsService, this.groupExpand, this.groupCollapse, ({ group, groupIndex, parentGroup }) => ({ group, groupIndex, parentGroup }));\n        this.detailsServiceSubscription = handleExpandCollapseDetailsService(detailsService, this.detailExpand, this.detailCollapse, args => args);\n        this.filterSubscription = this.filterService.changes.subscribe(x => {\n            this.filterChange.emit(x);\n        });\n        this.sortSubscription = this.sortService.changes.subscribe(x => {\n            this.sortChange.emit(x);\n        });\n        this.attachStateChangesEmitter();\n        this.attachEditHandlers();\n        this.attachDomEventHandlers();\n        this.pdfSubscription = this.pdfService.exportClick.subscribe(this.emitPDFExportEvent.bind(this));\n        this.excelSubscription = this.excelService.exportClick.subscribe(this.saveAsExcel.bind(this));\n        this.columnsContainerChange();\n        this.handleColumnResize();\n        this.columnList = new ColumnList(this.columns);\n        this.columnReorderSubscription = this.columnReorderService\n            .changes.subscribe(this.reorder.bind(this));\n        this.columnRangeChangeSubscription = this.columnInfoService.columnRangeChange.subscribe(this.onColumnRangeChange.bind(this));\n    }\n    /**\n     * Defines the number of records to be skipped by the pager.\n     * Required by the [paging]({% slug paging_grid %}) functionality.\n     */\n    get skip() {\n        return this._skip;\n    }\n    set skip(value) {\n        if (typeof value === 'number' && value >= 0) {\n            this._skip = value;\n        }\n    }\n    /**\n     * The descriptors by which the data will be sorted ([see example]({% slug sorting_grid %})).\n     */\n    set sort(value) {\n        if (isArray(value)) {\n            this._sort = value;\n        }\n    }\n    get sort() {\n        return this._sort;\n    }\n    /**\n     * The descriptors by which the data will be grouped ([see example]({% slug grouping_grid %})).\n     */\n    set group(value) {\n        if (isArray(value)) {\n            this._group = value;\n        }\n    }\n    /**\n     */\n    get group() {\n        return this._group;\n    }\n    /**\n     * @hidden\n     */\n    get showTopToolbar() {\n        return this.toolbarTemplate && ['top', 'both'].indexOf(this.toolbarTemplate.position) > -1;\n    }\n    /**\n     * @hidden\n     */\n    get showBottomToolbar() {\n        return this.toolbarTemplate && ['bottom', 'both'].indexOf(this.toolbarTemplate.position) > -1;\n    }\n    /**\n     * @hidden\n     */\n    get isLocked() {\n        return this.lockedLeafColumns.length > 0;\n    }\n    /**\n     * @hidden\n     */\n    get showTopPager() {\n        const position = this.pageable.position;\n        return !this.isVirtual && this.pageable !== false && ['top', 'both'].indexOf(position) > -1;\n    }\n    /**\n     * @hidden\n     */\n    get showBottomPager() {\n        const position = this.pageable.position;\n        return !this.isVirtual && this.pageable !== false && position !== 'top';\n    }\n    /**\n     * @hidden\n     */\n    get hasPager() {\n        return this.showTopPager || this.showBottomPager;\n    }\n    /**\n     * @hidden\n     */\n    get showGroupPanel() {\n        return this.groupable && this.groupable.enabled !== false;\n    }\n    /**\n     * @hidden\n     */\n    get groupableEmptyText() {\n        return this.groupable.emptyText;\n    }\n    /**\n     * @hidden\n     */\n    get marqueeSelection() {\n        return this.selectionService.enableMarquee || this.cellSelectionService.enableMarquee;\n    }\n    /**\n     * If set to `true`, the user can use dedicated shortcuts to interact with the Grid.\n     * By default, navigation is disabled and the Grid content is accessible in the normal tab sequence.\n     * To enable navigation through separate Grid sections only, provide a [`GridNavigableSection`]({% slug api_grid_gridnavigablesection %}) array.\n     */\n    set navigable(value) {\n        if (typeof value === 'boolean') {\n            this._navigable = value ? ['table', 'pager'] : [];\n            return;\n        }\n        this._navigable = value;\n    }\n    get navigable() {\n        return this._navigable;\n    }\n    /**\n     * @hidden\n     *\n     * An alias for `navigable` for users who migrate from Kendo UI for jQuery.\n     */\n    set navigatable(value) {\n        this.navigable = value;\n    }\n    /**\n     * @hidden\n     */\n    get navigatable() {\n        return this.navigable;\n    }\n    /**\n     * Defines a function that is executed for every data row in the component.\n     *\n     * @example\n     * ```ts\n     * import { Component, ViewEncapsulation } from '@angular/core';\n     * import { RowClassArgs } from '@progress/kendo-angular-grid';\n     *\n     * _@Component({\n     *    selector: 'my-app',\n     *    encapsulation: ViewEncapsulation.None,\n     *    styles: [`\n     *        .k-grid tr.even { background-color: #f45c42; }\n     *        .k-grid tr.odd { background-color: #41f4df; }\n     *    `],\n     *    template: `\n     *        <kendo-grid [data]=\"gridData\" [rowClass]=\"rowCallback\">\n     *        </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     *\n     *    public rowCallback(context: RowClassArgs) {\n     *        const isEven = context.index % 2 === 0;\n     *        return {\n     *            even: isEven,\n     *            odd: !isEven\n     *        };\n     *    }\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     * ```\n     */\n    set rowClass(fn) {\n        if (isDevMode() && typeof fn !== 'function') {\n            throw new Error(`rowClass must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._rowClass = fn;\n    }\n    get rowClass() {\n        return this._rowClass;\n    }\n    /**\n     * Defines a function that is executed for every data row in the component,\n     * and determines whether the row will be sticky, i.e. always visible after scrolling.\n     */\n    set rowSticky(fn) {\n        if (isDevMode() && isPresent(fn) && typeof fn !== 'function') {\n            throw new Error(`rowSticky must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        if (isPresent(fn)) {\n            this._rowSticky = fn;\n        }\n    }\n    get rowSticky() {\n        return this._rowSticky;\n    }\n    /**\n     * Defines a Boolean function that is executed for each data row in the component\n     * ([see example]({% slug grid_selection_custom %}#toc-setting-the-selected-rows)).\n     * Determines whether the row will be selected.\n     */\n    set rowSelected(fn) {\n        if (isDevMode() && typeof fn !== 'function') {\n            throw new Error(`rowSelected must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._rowSelected = fn;\n    }\n    get rowSelected() {\n        return this._rowSelected;\n    }\n    /**\n     * Defines a function that determines the selected state of a data cell.\n     * Returns an object with `selected` and `item` properties.\n     * The cell is marked as selected only if the `selected` property equals `true`.\n     *\n     * The function is executed for each data cell and may be called more than once\n     * as part of a change detection cycle. ([see example]({% slug grid_selection_custom %}#toc-setting-the-selected-cells))\n     */\n    set cellSelected(fn) {\n        if (isDevMode() && typeof fn !== 'function') {\n            throw new Error(`cellSelected must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._cellSelected = fn;\n    }\n    get cellSelected() {\n        return this._cellSelected;\n    }\n    /**\n     * Returns the currently focused cell (if any).\n     */\n    get activeCell() {\n        return this.navigationService.activeCell;\n    }\n    /**\n     * Returns the currently focused row (if any).\n     */\n    get activeRow() {\n        return this.navigationService.activeRow;\n    }\n    get dir() {\n        return this.direction;\n    }\n    get hostClasses() {\n        return true;\n    }\n    get lockedClasses() {\n        return this.lockedLeafColumns.length > 0;\n    }\n    get virtualClasses() {\n        return this.isVirtual;\n    }\n    get noScrollbarClass() {\n        return this.scrollbarWidth === 0;\n    }\n    get detailTemplate() {\n        if (this._customDetailTemplate) {\n            return this._customDetailTemplate;\n        }\n        return this.detailTemplateChildren ? this.detailTemplateChildren.first : undefined;\n    }\n    set detailTemplate(detailTemplate) {\n        this._customDetailTemplate = detailTemplate;\n    }\n    get cellLoadingTemplate() {\n        if (this._cellLoadingTemplate) {\n            return this._customDetailTemplate;\n        }\n        return this.cellLoadingTemplateChildren ? this.cellLoadingTemplateChildren.first : undefined;\n    }\n    set cellLoadingTemplate(cellLoadingTemplate) {\n        this._cellLoadingTemplate = cellLoadingTemplate;\n    }\n    get loadingTemplate() {\n        if (this._loadingTemplate) {\n            return this._loadingTemplate;\n        }\n        return this.loadingTemplateChildren ? this.loadingTemplateChildren.first : undefined;\n    }\n    set loadingTemplate(loadingTemplate) {\n        this._loadingTemplate = loadingTemplate;\n    }\n    get noRecordsTemplate() {\n        if (this._customNoRecordsTemplate) {\n            return this._customNoRecordsTemplate;\n        }\n        return this.noRecordsTemplateChildren ? this.noRecordsTemplateChildren.first : undefined;\n    }\n    set noRecordsTemplate(customNoRecordsTemplate) {\n        this._customNoRecordsTemplate = customNoRecordsTemplate;\n    }\n    get pagerTemplate() {\n        if (this._customPagerTemplate) {\n            return this._customPagerTemplate;\n        }\n        return this.pagerTemplateChildren ? this.pagerTemplateChildren.first : undefined;\n    }\n    set pagerTemplate(customPagerTemplate) {\n        this._customPagerTemplate = customPagerTemplate;\n    }\n    get toolbarTemplate() {\n        if (this._customToolbarTemplate) {\n            return this._customToolbarTemplate;\n        }\n        return this.toolbarTemplateChildren ? this.toolbarTemplateChildren.first : undefined;\n    }\n    set toolbarTemplate(customToolbarTemplate) {\n        this._customToolbarTemplate = customToolbarTemplate;\n    }\n    get scrollbarWidth() {\n        return this.supportService.scrollbarWidth;\n    }\n    get headerPadding() {\n        if (isUniversal()) {\n            return \"\";\n        }\n        const padding = Math.max(0, this.scrollbarWidth) + 'px';\n        const right = this.rtl ? 0 : padding;\n        const left = this.rtl ? padding : 0;\n        return `0 ${right} 0 ${left}`;\n    }\n    get hasGroupFooters() {\n        return this.columnsContainer.hasGroupFooter;\n    }\n    get showFooter() {\n        return this.columnsContainer.hasFooter;\n    }\n    get showGroupFooters() {\n        return this.groupable && this.groupable.showFooter;\n    }\n    get ariaRowCount() {\n        return this.totalColumnLevels + 1 + this.view.total;\n    }\n    get ariaColCount() {\n        return this.columnsContainer.leafColumnsToRender.length;\n    }\n    get navigation() {\n        return this.navigationService;\n    }\n    get isVirtual() {\n        return this.scrollable === 'virtual';\n    }\n    get isScrollable() {\n        return this.scrollable !== 'none';\n    }\n    get visibleColumns() {\n        return this.columnsContainer.allColumns;\n    }\n    get lockedColumns() {\n        return this.columnsContainer.lockedColumns;\n    }\n    get nonLockedColumns() {\n        return this.columnsContainer.nonLockedColumns;\n    }\n    get lockedLeafColumns() {\n        return this.columnsContainer.lockedLeafColumns;\n    }\n    get stickyColumns() {\n        return this.columns.filter(column => column.sticky);\n    }\n    get nonLockedLeafColumns() {\n        return this.columnsContainer.nonLockedLeafColumns;\n    }\n    get leafColumns() {\n        return this.columnsContainer.leafColumns;\n    }\n    get totalColumnLevels() {\n        return this.columnsContainer.totalLevels;\n    }\n    get headerColumns() {\n        if (this.virtualColumns && !this.pdfService.exporting) {\n            return this.viewportColumns;\n        }\n        return this.nonLockedColumns;\n    }\n    get headerLeafColumns() {\n        if (this.virtualColumns && !this.pdfService.exporting) {\n            return this.leafViewportColumns;\n        }\n        return this.nonLockedLeafColumns;\n    }\n    get lockedWidth() {\n        const groupCellsWidth = this.group.length * GROUP_CELL_WIDTH;\n        return expandColumns(this.lockedLeafColumns.toArray()).reduce((prev, curr) => prev + (curr.width || 0), groupCellsWidth);\n    }\n    get nonLockedWidth() {\n        if ((!this.rtl && this.lockedLeafColumns.length) || this.virtualColumns) {\n            return !this.virtualColumns ? this.columnsContainer.unlockedWidth :\n                this.leafViewportColumns.reduce((acc, column) => acc + (column.width || 0), 0);\n        }\n        return undefined;\n    }\n    get selectableSettings() {\n        if (this.selectionService) {\n            return this.selectionService.options;\n        }\n        return undefined;\n    }\n    get columnMenuTemplate() {\n        const template = this.columnMenuTemplates.first;\n        return template ? template.templateRef : null;\n    }\n    get totalCount() {\n        if (this.isVirtual || !isPresent(this.pageSize)) {\n            return this.view.total;\n        }\n        return this.pageSize;\n    }\n    /**\n     * Expands the specified master row ([see example]({% slug hierarchy_grid %})).\n     *\n     * This method is provided only for backwards-compatibility with legacy versions.\n     * These versions tracked the expanded state internally using the data row index.\n     *\n     * For new development, use the [kendoGridDetailsExpandBy directive]({% slug api_grid_expanddetailsdirective %})\n     * or provide an isDetailExpanded callback. See [Controlling the Expanded State]({% slug master_detail_expanded_state_grid %})\n     * for examples on how to control the expanded state.\n     *\n     * @param index - The data row index of the master row.\n     */\n    expandRow(index) {\n        this.toggleDetailRowLegacy(index, true);\n    }\n    /**\n     * Collapses the specified master row ([see example]({% slug hierarchy_grid %})).\n     *\n     * This method is provided only for backwards-compatibility with legacy versions.\n     * These versions tracked the expanded state internally using the data row index.\n     *\n     * For new development, use the [kendoGridDetailsExpandBy directive]({% slug api_grid_expanddetailsdirective %})\n     * or provide an isDetailExpanded callback. See [Controlling the Expanded State]({% slug master_detail_expanded_state_grid %})\n     * for examples on how to control the expanded state.\n     *\n     * @param index - The data row index of the master row.\n     */\n    collapseRow(index) {\n        this.toggleDetailRowLegacy(index, false);\n    }\n    /**\n     * Expands a group header item for the given index. For example,\n     * `0_1` expands the second inner group of the first master group.\n     *\n     * This method is provided only for backwards-compatibility with legacy versions.\n     * These versions tracked the expanded group state internally using the hierarchical group index.\n     *\n     * > * When you use the [kendoGridGroupBinding]({% slug api_grid_groupbindingdirective %}) directive,\n     * > the `expandGroup` method is not supported.\n     * > * When a Grid is pageable, the indexes of the groups are offset by the current Grid [skip]({% slug api_grid_gridcomponent %}#toc-skip).\n     *\n     * @param {string} index - The underscore separated hierarchical index of the group.\n     */\n    expandGroup(index) {\n        this.toggleGroupRowLegacy(index, true);\n    }\n    /**\n     * Collapses a group header item for the given index. For example,\n     * `0_1` collapses the second inner group of the first master group.\n     *\n     * This method is provided only for backwards-compatibility with legacy versions.\n     * These versions tracked the expanded group state internally using the hierarchical group index.\n     *\n     * > * When you use the [kendoGridGroupBinding]({% slug api_grid_groupbindingdirective %}) directive,\n     * > the `collapseGroup` method is not supported.\n     * > * When a Grid is pageable, the indexes of the groups are offset by the current Grid [skip]({% slug api_grid_gridcomponent %}#toc-skip).\n     *\n     * @param {string} index - The underscore separated hierarchical index of the group.\n     */\n    collapseGroup(index) {\n        this.toggleGroupRowLegacy(index, false);\n    }\n    /**\n     * @hidden\n     */\n    resetGroupsState() {\n        this.groupsService.reset();\n    }\n    /**\n     * @hidden\n     */\n    expandGroupChildren(groupIndex) {\n        this.groupsService.expandChildren(groupIndex);\n    }\n    /**\n     * @hidden\n     */\n    onDataChange() {\n        this.autoGenerateColumns();\n        this.changeNotification.notify();\n        this.pdfService.dataChanged.emit();\n        if (isPresent(this.defaultSelection)) {\n            this.defaultSelection.reset();\n        }\n        this.initSelectionService();\n        this.updateNavigationMetadata();\n    }\n    ngOnChanges(changes) {\n        if (isChanged$1(\"data\", changes)) {\n            this.onDataChange();\n        }\n        if (this.lockedLeafColumns.length && anyChanged([\"pageSize\", \"skip\", \"sort\", \"group\"], changes)) {\n            this.changeNotification.notify();\n        }\n        if (anyChanged([\"pageSize\", \"scrollable\", 'virtualColumns'], changes)) {\n            this.updateNavigationMetadata();\n        }\n        if (isChanged$1(\"virtualColumns\", changes)) {\n            this.viewportColumns = this.leafViewportColumns = null;\n        }\n        if (isChanged$1(\"height\", changes, false)) {\n            this.renderer.setStyle(this.wrapper.nativeElement, 'height', `${this.height}px`);\n        }\n        if (isChanged$1(\"filterable\", changes) && this.lockedColumns.length) {\n            this.syncHeaderHeight(this.ngZone.onStable.asObservable().pipe(take(1)));\n        }\n        if (anyChanged([\"columnMenu\", \"sortable\", \"filterable\"], changes, false)) {\n            this.columnMenuOptions = this.columnMenu && Object.assign({\n                filter: Boolean(this.filterable),\n                sort: Boolean(this.sortable)\n            }, this.columnMenu);\n        }\n        if (isChanged$1(\"scrollable\", changes) && this.isScrollable) {\n            this.ngZone.onStable.pipe(take(1)).subscribe(() => this.attachScrollSync());\n        }\n        if (isChanged$1(\"selectable\", changes) && this.shouldResetSelection(changes.selectable)) {\n            if (this.defaultSelection) {\n                this.defaultSelection.reset();\n            }\n            else if (this.selectionDirective) {\n                this.selectionDirective.reset();\n            }\n        }\n        if (isChanged$1('groupable', changes, true)) {\n            this.groupable = changes.groupable.currentValue;\n        }\n        if (isChanged$1('navigable', changes, true)) {\n            if (this.navigationService.enabled) {\n                this.navigationService.setActiveSections(this.navigable);\n            }\n            else {\n                if (this.navigable.length) {\n                    this.navigationService.init(this.navigationMetadata(), this.navigable);\n                }\n            }\n        }\n    }\n    ngAfterViewInit() {\n        this.attachScrollSync();\n        this.attachElementEventHandlers();\n        this.updateNavigationMetadata();\n        this.applyAutoSize();\n    }\n    ngAfterContentChecked() {\n        this.columnsContainer.refresh();\n        this.verifySettings();\n        this.initSelectionService();\n    }\n    ngAfterContentInit() {\n        this.shouldGenerateColumns = !this.columns.length;\n        this.autoGenerateColumns();\n        this.columnList = new ColumnList(this.columns);\n        this.columnsChangeSubscription = this.columns.changes.subscribe(() => this.verifySettings());\n    }\n    ngOnInit() {\n        if (this.navigable.length) {\n            this.navigationService.init(this.navigationMetadata(), this.navigable);\n        }\n    }\n    ngOnDestroy() {\n        if (this.selectionSubscription) {\n            this.selectionSubscription.unsubscribe();\n        }\n        if (this.stateChangeSubscription) {\n            this.stateChangeSubscription.unsubscribe();\n        }\n        if (this.groupExpandCollapseSubscription) {\n            this.groupExpandCollapseSubscription.unsubscribe();\n        }\n        if (this.detailsServiceSubscription) {\n            this.detailsServiceSubscription.unsubscribe();\n        }\n        if (this.editServiceSubscription) {\n            this.editServiceSubscription.unsubscribe();\n        }\n        if (this.pdfSubscription) {\n            this.pdfSubscription.unsubscribe();\n        }\n        if (this.filterSubscription) {\n            this.filterSubscription.unsubscribe();\n        }\n        if (this.sortSubscription) {\n            this.sortSubscription.unsubscribe();\n        }\n        if (this.columnsChangeSubscription) {\n            this.columnsChangeSubscription.unsubscribe();\n        }\n        if (this.excelSubscription) {\n            this.excelSubscription.unsubscribe();\n        }\n        if (this.columnsContainerChangeSubscription) {\n            this.columnsContainerChangeSubscription.unsubscribe();\n        }\n        if (this.scrollSyncService) {\n            this.scrollSyncService.destroy();\n        }\n        if (this.detachElementEventHandlers) {\n            this.detachElementEventHandlers();\n        }\n        if (this.defaultSelection) {\n            this.defaultSelection.destroy();\n        }\n        if (this.cellClickSubscription) {\n            this.cellClickSubscription.unsubscribe();\n        }\n        if (this.footerChangeSubscription) {\n            this.footerChangeSubscription.unsubscribe();\n        }\n        this.ngZone = null;\n        if (this.columnResizingSubscription) {\n            this.columnResizingSubscription.unsubscribe();\n        }\n        if (this.columnReorderSubscription) {\n            this.columnReorderSubscription.unsubscribe();\n        }\n        if (this.localizationSubscription) {\n            this.localizationSubscription.unsubscribe();\n        }\n        if (this.columnVisibilityChangeSubscription) {\n            this.columnVisibilityChangeSubscription.unsubscribe();\n        }\n        if (this.columnLockedChangeSubscription) {\n            this.columnLockedChangeSubscription.unsubscribe();\n        }\n        if (this.columnStickyChangeSubscription) {\n            this.columnStickyChangeSubscription.unsubscribe();\n        }\n        if (this.focusElementSubscription) {\n            this.focusElementSubscription.unsubscribe();\n        }\n        this.columnRangeChangeSubscription.unsubscribe();\n    }\n    /**\n     * @hidden\n     */\n    attachScrollSync() {\n        if (isUniversal()) {\n            return;\n        }\n        if (this.header) {\n            this.scrollSyncService.registerEmitter(this.header.nativeElement, \"header\");\n        }\n        if (this.footer) {\n            this.footerChangeSubscription = observe(this.footer)\n                .subscribe(footers => footers\n                .map(footer => footer.nativeElement)\n                .filter(isPresent)\n                .forEach(element => this.scrollSyncService.registerEmitter(element, \"footer\")));\n        }\n    }\n    /**\n     * @hidden\n     */\n    get ariaLabel() {\n        return this.localization.get('gridLabel');\n    }\n    /**\n     * Switches the specified table row in the edit mode ([see example]({% slug inline_editing_grid %}#toc-editing-records-1)).\n     *\n     * @param rowIndex - The data row index that will be switched in the edit mode.\n     * @param group - The [FormGroup](link:site.data.urls.angular['formgroupapi'])\n     * that describes the edit form.\n     * @param options - Additional options configuring the focus target once the editor opens.\n     */\n    editRow(rowIndex, group, options) {\n        this.editService.editRow(rowIndex, group);\n        if (isPresent(options) && options.skipFocus) {\n            return;\n        }\n        const row = `tr[data-kendo-grid-item-index=\"${rowIndex}\"]`;\n        const columnIndex = options && options.columnIndex;\n        const target = isNaN(columnIndex) ? row : `${row} td[data-kendo-grid-column-index=\"${columnIndex}\"]`;\n        this.focusEditElement(target);\n    }\n    /**\n     * Closes the editor for a given row ([see example]({% slug inline_editing_grid %}#toc-canceling-editing-1)).\n     *\n     * @param {number} index - The row index that will be switched out of the edit mode. If no index is provided, it is assumed\n     * that the new item editor will be closed.\n     */\n    closeRow(index) {\n        this.editService.close(index);\n    }\n    /**\n     * Creates a new row editor ([see example]({% slug inline_editing_grid %}#toc-adding-records-1)).\n     *\n     * @param {FormGroup} group - The [FormGroup](link:site.data.urls.angular['formgroupapi']) that describes\n     * the edit form. If called with a data item, it will build the `FormGroup` from the data item fields.\n     */\n    addRow(group) {\n        const isFormGroup = group instanceof FormGroup;\n        if (!isFormGroup) {\n            const fields = Object.keys(group).reduce(createControl(group), {}); // FormBuilder?\n            group = new FormGroup(fields);\n        }\n        this.editService.addRow(group);\n        this.focusEditElement('.k-grid-add-row');\n    }\n    /**\n     * Puts the cell that is specified by the table row and column in edit mode.\n     *\n     * @param {number} rowIndex - The data row index that will be switched in the edit mode.\n     * @param {number|string|any} column - The leaf column index, or the field name or the column instance that should be edited.\n     * @param {FormGroup} group - The [FormGroup](link:site.data.urls.angular['formgroupapi'])\n     * that describes the edit form.\n     */\n    editCell(rowIndex, column, group) {\n        const instance = this.columnInstance(column);\n        this.editService.editCell(rowIndex, instance, group);\n        this.focusEditElement('.k-grid-edit-cell');\n    }\n    /**\n     * Closes the current cell in edit mode and fires\n     * the [cellClose]({% slug api_grid_gridcomponent %}#toc-cellclose) event.\n     *\n     * @return {boolean} Indicates whether the edited cell was closed.\n     * A `false` value indicates that the\n     * [cellClose]({% slug api_grid_gridcomponent %}#toc-cellclose) event was prevented.\n     */\n    closeCell() {\n        return !this.editService.closeCell();\n    }\n    /**\n     * Closes the current cell in edit mode.\n     */\n    cancelCell() {\n        this.editService.cancelCell();\n    }\n    /**\n     * Returns a flag which indicates if a row or a cell is currently edited.\n     *\n     * @return {boolean} A flag which indicates if a row or a cell is currently edited.\n     */\n    isEditing() {\n        return this.editService.isEditing();\n    }\n    /**\n     * Returns a flag which indicates if a cell is currently edited.\n     *\n     * @return {boolean} A flag which indicates if a cell is currently being edited.\n     */\n    isEditingCell() {\n        return this.editService.isEditingCell();\n    }\n    /**\n     * Initiates the PDF export ([see example]({% slug pdfexport_grid %})).\n     */\n    saveAsPDF() {\n        this.pdfService.save(this);\n    }\n    /**\n     * Exports the Grid element to a Drawing [Group]({% slug api_kendo-drawing_group %}) by using the `kendo-grid-pdf` component options.\n     * ([see example]({% slug pdfexport_grid %}#toc-exporting-multiple-grids-to-the-same-pdf)).\n     *\n     * @return {Promise} - A promise that will be resolved with the Drawing `Group`.\n     */\n    drawPDF() {\n        const promise = createPromise();\n        this.pdfService.draw(this, promise);\n        return promise;\n    }\n    /**\n     * Initiates the Excel export ([see example]({% slug excelexport_grid %})).\n     */\n    saveAsExcel() {\n        this.excelService.save(this);\n    }\n    /**\n     * Applies the minimum possible width for the specified column,\n     * so that the whole text fits without wrapping. This method expects the Grid\n     * to be resizable (set `resizable` to `true`).\n     * Makes sense to execute this method only\n     * after the Grid is already populated with data.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-grid\n     *            #grid\n     *            [data]=\"gridData\"\n     *            [resizable]=\"true\"\n     *            style=\"height: 300px\">\n     *            <ng-template kendoGridToolbarTemplate>\n     *                 <button kendoButton (click)=\"grid.autoFitColumn(groupColumn)\">\n     *                     Auto-fit the group column\n     *                 </button>\n     *            </ng-template>\n     *            <kendo-grid-column-group #groupColumn title=\"Product Info\">\n     *                <kendo-grid-column\n     *                    field=\"ProductID\"\n     *                    [width]=\"50\"\n     *                    [minResizableWidth]=\"30\"\n     *                    title=\"ID\">\n     *                </kendo-grid-column>\n     *\n     *                <kendo-grid-column\n     *                    field=\"ProductName\"\n     *                    title=\"Product Name\">\n     *                </kendo-grid-column>\n     *            </kendo-grid-column-group>\n     *\n     *            <kendo-grid-column\n     *                field=\"UnitPrice\"\n     *                title=\"Unit Price\"\n     *                [width]=\"180\"\n     *                filter=\"numeric\"\n     *                format=\"{0:c}\">\n     *            </kendo-grid-column>\n     *        </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     * ```\n     */\n    autoFitColumn(column) {\n        this.columnResizingService.autoFit(column);\n    }\n    /**\n     * Adjusts the width of the specified columns to fit the entire content, including headers, without wrapping.\n     * If no columns are specified, `autoFitColumns` is applied to all columns.\n     *\n     * This method requires the Grid to be resizable (set `resizable` to `true`).\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *      <kendo-grid\n     *          #grid\n     *          [data]=\"gridData\"\n     *          [resizable]=\"true\"\n     *          style=\"height: 300px\">\n     *          <ng-template kendoGridToolbarTemplate>\n     *              <button kendoButton (click)=\"grid.autoFitColumns([firstColumn, lastColumn])\">\n     *                  Auto-fit the first and last column\n     *              </button>\n     *              <button kendoButton (click)=\"grid.autoFitColumns()\">\n     *                  Auto-fit all columns\n     *              </button>\n     *          </ng-template>\n     *          <kendo-grid-column-group title=\"Product Info\">\n     *              <kendo-grid-column\n     *                  #firstColumn\n     *                  field=\"ProductID\"\n     *                  [width]=\"50\"\n     *                  [minResizableWidth]=\"30\"\n     *                  title=\"ID\">\n     *              </kendo-grid-column>\n     *\n     *              <kendo-grid-column\n     *                  field=\"ProductName\"\n     *                  title=\"Product Name\"\n     *                  >\n     *              </kendo-grid-column>\n     *          </kendo-grid-column-group>\n     *\n     *          <kendo-grid-column\n     *              #lastColumn\n     *              field=\"UnitPrice\"\n     *              title=\"Unit Price\"\n     *              [width]=\"180\"\n     *              filter=\"numeric\"\n     *              format=\"{0:c}\">\n     *          </kendo-grid-column>\n     *      </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     * ```\n     */\n    autoFitColumns(columns = this.columns) {\n        let cols;\n        if (columns instanceof QueryList) {\n            cols = columns.toArray();\n        }\n        else {\n            cols = columns;\n        }\n        this.columnResizingService.autoFit(...cols);\n    }\n    /**\n     * @hidden\n     */\n    notifyPageChange(source, event) {\n        if (source === \"list\" && !this.isVirtual) {\n            return;\n        }\n        this.pageChange.emit(event);\n    }\n    /**\n     * @hidden\n     */\n    notifyScrollBottom() {\n        if (this.scrollable === 'none') {\n            return;\n        }\n        if (hasObservers(this.scrollBottom)) {\n            this.ngZone.run(() => this.scrollBottom.emit({ sender: this }));\n        }\n    }\n    /**\n     * @hidden\n     */\n    focusEditElement(containerSelector) {\n        if (this.focusElementSubscription) {\n            this.focusElementSubscription.unsubscribe();\n        }\n        this.ngZone.runOutsideAngular(() => {\n            this.focusElementSubscription = this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                const wrapper = this.wrapper.nativeElement;\n                if (!this.setEditFocus(wrapper.querySelector(containerSelector)) && this.isLocked) {\n                    this.setEditFocus(wrapper.querySelector(`.k-grid-content ${containerSelector}`));\n                }\n                this.focusElementSubscription = null;\n            });\n        });\n    }\n    /**\n     * Focuses the last active or the first cell of the Grid.\n     *\n     * @returns {NavigationCell} The focused cell.\n     */\n    focus() {\n        this.assertNavigable();\n        return this.navigationService.focusCell();\n    }\n    /**\n     * Focuses the cell with the specified row and column index.\n     *\n     * The row index is based on the logical structure of the Grid and does not correspond to the data item index:\n     * * Header rows are included, starting at index 0.\n     * * Group headers and footers are included.\n     * * The row indexing is absolute and does not change with paging.\n     *\n     * If the Grid is configured for scrolling, including virtual scrolling, the scroll position will be updated.\n     * If the row is not present on the current page, the method will have no effect.\n     *\n     * @param rowIndex - The logical row index to focus. The top header row has an index 0.\n     * @param colIndex - The column index to focus.\n     * @returns {NavigationCell} The focused cell.\n     *\n     */\n    focusCell(rowIndex, colIndex) {\n        this.assertNavigable();\n        return this.navigationService.focusCell(rowIndex, colIndex);\n    }\n    /**\n     * Focuses the next cell, optionally wrapping to the next row.\n     *\n     * @param wrap - A Boolean value which indicates if the focus will move to the next row. Defaults to `true`.\n     * @returns {NavigationCell} The focused cell. If the focus is already on the last cell, returns `null`.\n     */\n    focusNextCell(wrap = true) {\n        this.assertNavigable();\n        return this.navigationService.focusNextCell(wrap);\n    }\n    /**\n     * Focuses the previous cell. Optionally wraps to the previous row.\n     *\n     * @param wrap - A Boolean value which indicates if the focus will move to the next row. Defaults to `true`.\n     * @returns {NavigationCell} The focused cell. If the focus is already on the first cell, returns `null`.\n     */\n    focusPrevCell(wrap = true) {\n        this.assertNavigable();\n        return this.navigationService.focusPrevCell(wrap);\n    }\n    /**\n     * Scrolls to the specified row and column ([see example]({% slug scrollmmodes_grid %}#toc-scrolling-to-a-specific-row-and-column-index)).\n     */\n    scrollTo(request) {\n        this.scrollRequestService.scrollTo(request);\n    }\n    /**\n     * Changes the position of the specified column.\n     * The reordering of columns operates only on the level\n     * which is inferred by the source column.\n     * For the `reorderColumn` method to work properly,\n     * the `source` column has to be visible.\n     *\n     * @param {ColumnBase} source - The column whose position will be changed.\n     * @param {number} destIndex - The new position of the column.\n     * @param {ColumnReorderConfig} options - Additional options.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-grid\n     *            #grid\n     *            [data]=\"gridData\"\n     *            [reorderable]=\"true\"\n     *            style=\"height: 300px\">\n     *            <ng-template kendoGridToolbarTemplate>\n     *                 <button kendoButton\n     *                     (click)=\"grid.reorderColumn(groupColumn, 2, { before: true })\">\n     *                     Move the group column before the last one.\n     *                 </button>\n     *            </ng-template>\n     *            <kendo-grid-column-group #groupColumn title=\"Product Info\">\n     *                <kendo-grid-column\n     *                    field=\"ProductID\"\n     *                    [width]=\"50\"\n     *                    title=\"ID\">\n     *                </kendo-grid-column>\n     *\n     *                <kendo-grid-column\n     *                    field=\"ProductName\"\n     *                    title=\"Product Name\">\n     *                </kendo-grid-column>\n     *            </kendo-grid-column-group>\n     *\n     *            <kendo-grid-column\n     *                field=\"UnitPrice\"\n     *                title=\"Unit Price\"\n     *                [width]=\"180\"\n     *                format=\"{0:c}\">\n     *            </kendo-grid-column>\n     *\n     *            <kendo-grid-column\n     *                field=\"Discontinued\"\n     *                title=\"Discontinued\"\n     *                [width]=\"100\">\n     *            </kendo-grid-column>\n     *        </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     * ```\n     */\n    reorderColumn(source, destIndex, options = { before: false }) {\n        const columnsForLevel = sortColumns(this.allColumnsForLevel(source.level));\n        let target = columnsForLevel[destIndex];\n        if (!target) {\n            return;\n        }\n        const lastNonLocked = target.isLocked &&\n            !source.isLocked &&\n            this.columnsContainer.nonLockedColumns.length === 1;\n        if (lastNonLocked) {\n            return;\n        }\n        if (isSpanColumnComponent(target) && !options.before) {\n            target = target.childColumns.last;\n        }\n        this.reorder({\n            before: options.before,\n            source: source,\n            target: target\n        });\n    }\n    /**\n     * A function which determines if a specific row is expanded.\n     */\n    set isDetailExpanded(callback) {\n        this.detailsService.userCallback = callback;\n    }\n    get isDetailExpanded() {\n        return this.detailsService.userCallback;\n    }\n    /**\n     * A function which determines if a specific group row is expanded.\n     */\n    set isGroupExpanded(callback) {\n        this.groupsService.userCallback = callback;\n        this.groupable = isPresent(callback);\n    }\n    get isGroupExpanded() {\n        return this.groupsService.userCallback;\n    }\n    /**\n     * @hidden\n     */\n    reorder({ target, source, before, changeContainer }) {\n        this.ngZone.run(() => {\n            const columnsForLevel = sortColumns(this.allColumnsForLevel(source.level));\n            let newIndex = columnsForLevel.indexOf(target);\n            if (target.parent && target.parent.isSpanColumn) {\n                newIndex = columnsForLevel.indexOf(target.parent);\n                if (before) {\n                    target = target.parent;\n                }\n            }\n            let oldIndex = columnsForLevel.indexOf(source);\n            if (changeContainer) {\n                if (before && 0 < newIndex && oldIndex < newIndex) { // dropped before the first not locked column\n                    newIndex--;\n                }\n                else if (!before && oldIndex > newIndex) { // dropped after the last locked column\n                    newIndex++;\n                }\n            }\n            const args = new ColumnReorderEvent({\n                column: source,\n                oldIndex: oldIndex,\n                newIndex: newIndex\n            });\n            this.columnReorder.emit(args);\n            if (args.isDefaultPrevented()) {\n                return;\n            }\n            if (changeContainer) {\n                this.columnLockedChange.emit(new ColumnLockedChangeEvent([source]));\n            }\n            this.updateColumnIndices({ columnsForLevel, source, target, before });\n            if (source.locked !== target.locked) {\n                source.locked = target.locked;\n            }\n            this.columnsContainer.refresh();\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n    updateColumnIndices({ columnsForLevel, source, target, before }) {\n        const expandedColumns = expandColumnsWithSpan(columnsForLevel);\n        const sourceColumnIndex = expandedColumns.indexOf(source);\n        let nextSourceIndex = 0;\n        let nextIndex = 0;\n        let toSkip = 1;\n        // Possible only when called from the API.\n        if (source.isSpanColumn) {\n            toSkip += source.childColumns.length;\n        }\n        let i = 0;\n        while (i < expandedColumns.length) {\n            let column = expandedColumns[i];\n            if (column === target) {\n                nextSourceIndex = before ? nextIndex : nextIndex + 1;\n                nextIndex = before ? nextIndex + toSkip : nextIndex;\n                column.orderIndex = nextIndex;\n                if (nextSourceIndex === nextIndex + 1) {\n                    nextIndex += toSkip;\n                }\n            }\n            else if (column === source) {\n                i += toSkip;\n                continue;\n            }\n            else {\n                column.orderIndex = nextIndex;\n            }\n            nextIndex++;\n            i++;\n        }\n        for (i = sourceColumnIndex; i < sourceColumnIndex + toSkip; i++) {\n            expandedColumns[i].orderIndex = nextSourceIndex++;\n        }\n        this.updateIndicesForLevel(source.level + 1);\n    }\n    updateIndicesForLevel(level) {\n        const colsForParentLevel = this.allColumnsForLevel(level - 1);\n        const colsForLevel = [];\n        sortColumns(colsForParentLevel).forEach((c) => {\n            if (c.isColumnGroup) {\n                colsForLevel.push(...c.childrenArray.sort((a, b) => a.orderIndex - b.orderIndex));\n            }\n        });\n        expandColumnsWithSpan(colsForLevel).map((c, i) => c.orderIndex = i);\n        if (level < this.columnList.totalColumnLevels()) {\n            this.updateIndicesForLevel(level + 1);\n        }\n    }\n    allColumnsForLevel(level) {\n        return this.columnList.toArray().filter(column => column.level === level);\n    }\n    initSelectionService() {\n        if (!this.selectable) {\n            this.selectionService.ngOnDestroy();\n            this.cellSelectionService.ngOnDestroy();\n            return;\n        }\n        if (!this.selectionDirective && !isPresent(this.defaultSelection)) {\n            this.defaultSelection = new Selection(this.ctx, this.changeDetectorRef);\n        }\n        const cellSelectionMode = this.selectable['cell'];\n        const activeService = cellSelectionMode ? this.cellSelectionService : this.selectionService;\n        const inactiveService = cellSelectionMode ? this.selectionService : this.cellSelectionService;\n        if (inactiveService.active) {\n            inactiveService.ngOnDestroy();\n            activeService.addSubscriptions();\n            inactiveService.active = false;\n        }\n        activeService.active = true;\n        activeService.init({\n            cellSelected: cellSelectionMode ? this.cellSelected : undefined,\n            rowSelected: cellSelectionMode ? undefined : this.rowSelected,\n            selectable: this.selectable,\n            view: this.view,\n            columns: cellSelectionMode ? this.columnList.toArray() : undefined\n        });\n        if (!this.selectionDirective && !this.selectableSettings.enabled) {\n            this.defaultSelection.reset();\n        }\n        if (this.selectionSubscription) {\n            this.selectionSubscription.unsubscribe();\n        }\n        if (cellSelectionMode) {\n            this.selectionSubscription = this.cellSelectionService.changes.subscribe((event) => {\n                this.ngZone.run(() => this.selectionChange.emit(event));\n            });\n        }\n        else {\n            this.selectionSubscription = this.selectionService.changes.subscribe((event) => {\n                this.ngZone.run(() => this.selectionChange.emit(event));\n            });\n        }\n    }\n    setEditFocus(element) {\n        if (element) {\n            return this.navigationService.tryFocus(element);\n        }\n    }\n    columnInstance(column) {\n        let instance;\n        if (typeof column === 'number') {\n            instance = this.columnsContainer.lockedLeafColumns.toArray()\n                .concat(this.columnsContainer.nonLockedLeafColumns.toArray())[column];\n        }\n        else if (typeof column === 'string') {\n            instance = this.columnList.filter((item) => item.field === column)[0];\n        }\n        else {\n            instance = column;\n        }\n        if (!instance && isDevMode()) {\n            throw new Error(`Invalid column ${column}`);\n        }\n        return instance;\n    }\n    verifySettings() {\n        if (isDevMode()) {\n            const locked = this.lockedLeafColumns.length || (this.columnMenu && this.columnMenu.lock);\n            const stickyColumns = this.stickyColumns.length || (this.columnMenu && this.columnMenu.stick);\n            if (locked && this.detailTemplate) {\n                throw new Error('Having both detail template and locked columns is not supported.');\n            }\n            if (stickyColumns && this.detailTemplate) {\n                throw new Error('Having both detail template and sticky columns is not supported.');\n            }\n            if (this.lockedLeafColumns.length && !this.nonLockedLeafColumns.length) {\n                throw new Error('There should be at least one non-locked column');\n            }\n            if ((locked || this.virtualColumns) && expandColumns(this.columnList.toArray()).filter(column => !column.width && !isColumnGroupComponent(column)).length) {\n                throw new Error((locked ? 'Locked' : 'Virtual') + ' columns feature requires all columns to have set width.');\n            }\n            if (locked && !this.isScrollable) {\n                throw new Error('Locked columns are only supported when scrolling is enabled.');\n            }\n            if (this.columnList.filter(isColumnGroupComponent).filter((x) => !x.hasChildren).length) {\n                throw new Error('ColumnGroupComponent should contain ColumnComponent or CommandColumnComponent.');\n            }\n            if (this.columnList.filter(x => x.locked && x.parent && !x.parent.isLocked).length) {\n                throw new Error('Locked child columns require their parent columns to be locked.');\n            }\n            if ((this.rowHeight || this.detailRowHeight) && !this.isVirtual) {\n                throw new Error('Row height and detail row height settings require virtual scrolling mode to be enabled.');\n            }\n            if (stickyColumns && expandColumns(this.columnList.toArray()).filter(column => !column.width && !isColumnGroupComponent(column)).length) {\n                throw new Error('Sticky columns feature requires all columns to have set width.');\n            }\n            if (stickyColumns && !this.isScrollable) {\n                throw new Error('Sticky columns are only supported when scrolling is enabled.');\n            }\n            if (stickyColumns && this.virtualColumns) {\n                throw new Error('Having both sticky columns and column virtualization is not supported.');\n            }\n            if (this.rowSticky && this.scrollable === 'virtual') {\n                throw new Error('Having both sticky rows and row virtualization (scrollable=\"virtual\") is not supported.');\n            }\n            if (this.rowSticky && this.groupable) {\n                throw new Error('Having both sticky rows and grouping is not supported.');\n            }\n            validateColumnsField(this.columnList);\n        }\n    }\n    autoGenerateColumns() {\n        if (this.shouldGenerateColumns && !this.columns.length && this.view.length) {\n            this.columns.reset(Object.keys(this.view.at(0)).map(field => {\n                let column = new ColumnComponent();\n                column.field = field;\n                return column;\n            }));\n        }\n    }\n    attachStateChangesEmitter() {\n        this.stateChangeSubscription =\n            merge(this.pageChange.pipe(map(x => ({\n                filter: this.filter, group: this.group, skip: x.skip, sort: this.sort, take: x.take\n            }))), this.sortChange.pipe(map(sort => ({ filter: this.filter, group: this.group, skip: this.skip, sort: sort, take: this.pageSize }))), this.groupChange.pipe(map(group => ({\n                filter: this.filter, group: group, skip: this.skip, sort: this.sort, take: this.pageSize\n            }))), this.filterChange.pipe(map(filter => ({\n                filter: filter, group: this.group, skip: 0, sort: this.sort, take: this.pageSize\n            }))))\n                .subscribe(x => {\n                this.closeCell();\n                this.cancelCell();\n                this.dataStateChange.emit(x);\n            });\n    }\n    attachEditHandlers() {\n        if (!this.editService) {\n            return;\n        }\n        this.editServiceSubscription = this.editService\n            .changes.subscribe(this.emitCRUDEvent.bind(this));\n    }\n    emitCRUDEvent(args) {\n        const { action, rowIndex, formGroup } = args;\n        let dataItem = this.view.at(rowIndex - this.skip);\n        if (action !== 'add' && !dataItem) {\n            dataItem = formGroup.value;\n        }\n        this.closeCell();\n        Object.assign(args, {\n            dataItem: dataItem,\n            sender: this\n        });\n        switch (action) {\n            case 'add':\n                this.add.emit(args);\n                break;\n            case 'cancel':\n                this.cancel.emit(args);\n                break;\n            case 'edit':\n                this.edit.emit(args);\n                break;\n            case 'remove':\n                this.remove.emit(args);\n                break;\n            case 'save':\n                this.save.emit(args);\n                break;\n            case 'cellClose':\n                this.cellClose.emit(args);\n                break;\n            default: break;\n        }\n    }\n    attachDomEventHandlers() {\n        this.cellClickSubscription = this.domEvents.cellClick.subscribe((args) => {\n            this.cellClick.emit(Object.assign({ sender: this }, args));\n        });\n    }\n    attachElementEventHandlers() {\n        if (isUniversal()) {\n            return;\n        }\n        const wrapper = this.wrapper.nativeElement;\n        const ariaRoot = this.ariaRoot.nativeElement;\n        this.ngZone.runOutsideAngular(() => {\n            const resizeCheck = this.resizeCheck.bind(this);\n            const resizeSubscription = this.renderer.listen('window', 'resize', resizeCheck);\n            const orientationSubscription = this.renderer.listen('window', 'orientationchange', resizeCheck);\n            const documentClickSubscription = this.renderer.listen('document', 'click', (args) => {\n                const activeElement = document.activeElement;\n                if (this.editService.shouldCloseCell() &&\n                    !closest(args.target, matchesClasses('k-animation-container k-grid-ignore-click')) &&\n                    !(activeElement &&\n                        (closest(activeElement, matchesClasses('k-animation-container')) ||\n                            isInEditedCell(activeElement, this.wrapper.nativeElement)))) {\n                    this.editService.closeCell(args);\n                }\n            });\n            const windowBlurSubscription = this.renderer.listen('window', 'blur', (args) => {\n                const activeElement = document.activeElement;\n                if (activeElement && !(matchesNodeName('input')(activeElement) && activeElement.type === 'file' &&\n                    isInEditedCell(activeElement, this.wrapper.nativeElement))) {\n                    this.editService.closeCell(args);\n                }\n                this.domEvents.windowBlur.emit(args);\n            });\n            const clickSubscription = this.renderer.listen(wrapper, 'click', (args) => {\n                this.domEvents.click.emit(args);\n            });\n            const keydownSubscription = this.renderer.listen(wrapper, 'keydown', (args) => {\n                this.domEvents.keydown.emit(args);\n            });\n            // focusIn and focusOut are relative to the element with ARIA role \"grid\"\n            let focused = false;\n            const focusInSubscription = this.renderer.listen(ariaRoot, 'focusin', (args) => {\n                this.domEvents.focus.emit(args);\n                if (!focused) {\n                    this.domEvents.focusIn.emit(args);\n                    focused = true;\n                }\n            });\n            const focusOutSubscription = this.renderer.listen(ariaRoot, 'focusout', (args) => {\n                const next = args.relatedTarget || document.activeElement;\n                const outside = !closest(next, (node) => node === ariaRoot);\n                if (outside) {\n                    this.domEvents.focusOut.emit(args);\n                    focused = false;\n                }\n            });\n            this.detachElementEventHandlers = () => {\n                resizeSubscription();\n                orientationSubscription();\n                documentClickSubscription();\n                windowBlurSubscription();\n                clickSubscription();\n                keydownSubscription();\n                focusInSubscription();\n                focusOutSubscription();\n            };\n        });\n    }\n    matchesMedia(c) {\n        return this.responsiveService.matchesMedia(c.media);\n    }\n    resizeCheck() {\n        if (window.innerWidth !== this.cachedWindowWidth) {\n            this.cachedWindowWidth = window.innerWidth;\n            let hasChanges = false;\n            this.columnList.filterHierarchy(column => {\n                const matchesMedia = this.matchesMedia(column);\n                if (column.matchesMedia !== matchesMedia) {\n                    hasChanges = true;\n                    column.matchesMedia = matchesMedia;\n                }\n                return column.isVisible;\n            });\n            if (hasChanges) {\n                this.ngZone.run(() => {\n                    this.changeDetectorRef.markForCheck();\n                });\n            }\n        }\n    }\n    emitPDFExportEvent() {\n        const args = new PDFExportEvent();\n        this.pdfExport.emit(args);\n        if (!args.isDefaultPrevented()) {\n            this.saveAsPDF();\n        }\n    }\n    syncHeaderHeight(observable) {\n        return observable\n            .pipe(filter(() => isPresent(this.lockedHeader)))\n            .subscribe(() => syncRowsHeight(this.lockedHeader.nativeElement.children[0], this.header.nativeElement.children[0]));\n    }\n    columnsContainerChange() {\n        this.columnsContainerChangeSubscription =\n            this.syncHeaderHeight(this.columnsContainer.changes.pipe(filter(() => this.lockedColumns.length > 0), switchMap(() => this.ngZone.onStable.asObservable().pipe(take(1)))));\n    }\n    handleColumnResize() {\n        const resizes = this.columnResizingService.changes;\n        this.columnResizingSubscription = resizes.pipe(tap(e => {\n            if (e.type === 'start') {\n                this.renderer.addClass(this.wrapper.nativeElement, 'k-grid-column-resizing');\n            }\n            else if (e.type === 'end') {\n                this.renderer.removeClass(this.wrapper.nativeElement, 'k-grid-column-resizing');\n            }\n        }), filter(e => e.type === 'start'), switchMap(() => resizes.pipe(\n        // eslint-disable-next-line rxjs/no-unsafe-takeuntil\n        takeUntil(resizes.pipe(filter(e => e.type === 'triggerAutoFit'))), filter(e => e.type === 'end'))))\n            .subscribe(this.notifyResize.bind(this));\n    }\n    notifyResize(e) {\n        const args = e.resizedColumns\n            .filter(item => isTruthy(item.column.resizable) && !item.column.isColumnGroup)\n            .map(item => ({\n            column: item.column,\n            newWidth: item.column.width,\n            oldWidth: item.oldWidth\n        }));\n        this.columnResize.emit(args);\n    }\n    assertNavigable() {\n        if (isDevMode() && !this.navigationService.enabled) {\n            throw new Error('The Grid should be configured as navigable to control focus');\n        }\n    }\n    navigationMetadata() {\n        const isVirtual = this.isVirtual;\n        const pageSize = this.pageSize;\n        const dataRows = isVirtual ? this.view.total : pageSize;\n        const addRowOffset = this.editService.hasNewItem ? 1 : 0;\n        const filterRowOffset = hasFilterRow(this.filterable) ? 1 : 0;\n        const headerRows = this.totalColumnLevels + 1 + filterRowOffset + addRowOffset;\n        return new NavigationMetadata(dataRows, headerRows, isVirtual, this.hasPager, isPresent(this.detailTemplate), this.wrapper, this.virtualColumns, this.columnsContainer);\n    }\n    updateNavigationMetadata() {\n        this.navigationService.metadata = this.navigationMetadata();\n    }\n    applyAutoSize() {\n        const cols = this.columns.filter((c) => this.autoSize ? c.autoSize !== false : c.autoSize);\n        if (cols.length > 0) {\n            this.ngZone.onStable.pipe(take(1)).subscribe(_ => this.autoFitColumns(cols));\n        }\n    }\n    onColumnRangeChange(range) {\n        const viewportColumns = this.viewportColumns = [];\n        const leafViewportColumns = this.columnsContainer\n            .nonLockedLeafColumns.toArray().slice(range.start, range.end + 1);\n        for (let idx = 0; idx < leafViewportColumns.length; idx++) {\n            let column = leafViewportColumns[idx];\n            while (column.parent) {\n                column = column.parent;\n            }\n            const toAdd = [column];\n            while (toAdd.length) {\n                column = toAdd.shift();\n                viewportColumns.push(column);\n                if (column.isColumnGroup) {\n                    toAdd.unshift.apply(toAdd, column.childrenArray);\n                }\n            }\n            const lastFromGroup = viewportColumns[viewportColumns.length - 1];\n            column = leafViewportColumns[idx];\n            while (column !== lastFromGroup && idx < leafViewportColumns.length) {\n                idx++;\n                column = leafViewportColumns[idx];\n            }\n        }\n        if (range.start > 0) {\n            const first = leafViewportColumns[0];\n            let offset = range.offset;\n            let current = viewportColumns[0];\n            let index = 0;\n            while (current !== first) {\n                offset -= current.isColumnGroup ? 0 : current.width;\n                index++;\n                current = viewportColumns[index];\n            }\n            if (offset > 0) {\n                const totalLevels = this.columnsContainer.totalLevels;\n                let previous;\n                for (let idx = 0; idx <= totalLevels; idx++) {\n                    const offsetColumn = idx < totalLevels ? new ColumnGroupComponent(previous) : new ColumnBase(previous);\n                    previous = offsetColumn;\n                    offsetColumn.title = \"\\u00A0\";\n                    offsetColumn.width = offset;\n                    viewportColumns.unshift(offsetColumn);\n                }\n            }\n        }\n        this.leafViewportColumns = viewportColumns.filter(c => !c.isColumnGroup);\n    }\n    toggleDetailRowLegacy(index, expand) {\n        const hasCallback = typeof this.isDetailExpanded === 'function';\n        if (isDevMode() && hasCallback) {\n            throw new Error('The expandRow and collapseRow methods should not be called when using the ' +\n                'kendoGridDetailsExpandBy directive or the isDetailExpanded callback. ' +\n                'These methods are provided only for backwards compatibility with legacy versions.');\n        }\n        if (!isDevMode() && hasCallback) {\n            return;\n        }\n        if (this.detailsService.isExpanded(index, null) !== expand) {\n            this.detailsService.toggleRow(index, null);\n        }\n    }\n    toggleGroupRowLegacy(index, expand) {\n        const hasCallback = typeof this.isGroupExpanded === 'function';\n        if (isDevMode() && hasCallback) {\n            throw new Error('The expandGroup and collapseGroup methods should not be called when using the ' +\n                'kendoGridExpandGroupBy directive or the isGroupExpanded callback. ' +\n                'These methods are provided only for backwards compatibility with legacy versions.');\n        }\n        if (!isDevMode() && hasCallback) {\n            return;\n        }\n        if (this.groupsService.isExpanded({ groupIndex: index }) !== expand) {\n            this.groupsService.toggleRow({ index });\n        }\n    }\n    shouldResetSelection(selectableChanges) {\n        const previousValue = selectableChanges.previousValue;\n        if (!previousValue) {\n            // Selection was disabled, no need to reset.\n            return false;\n        }\n        const currentValue = selectableChanges.currentValue;\n        if (!currentValue || currentValue.enabled === false) {\n            // Selection disabled, reset.\n            return true;\n        }\n        return previousValue.cell !== currentValue.cell;\n    }\n}\nGridComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GridComponent, deps: [{ token: BrowserSupportService }, { token: SelectionService }, { token: CellSelectionService }, { token: i0.ElementRef }, { token: GroupInfoService }, { token: GroupsService }, { token: ChangeNotificationService }, { token: DetailsService }, { token: EditService }, { token: FilterService }, { token: PDFService }, { token: ResponsiveService }, { token: i0.Renderer2 }, { token: ExcelService }, { token: i0.NgZone }, { token: ScrollSyncService }, { token: DomEventsService }, { token: ColumnResizingService }, { token: i0.ChangeDetectorRef }, { token: ColumnReorderService }, { token: ColumnInfoService }, { token: NavigationService }, { token: SortService }, { token: ScrollRequestService }, { token: i1.LocalizationService }, { token: ContextService }], target: i0.ɵɵFactoryTarget.Component });\nGridComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: GridComponent, selector: \"kendo-grid\", inputs: { data: \"data\", pageSize: \"pageSize\", height: \"height\", rowHeight: \"rowHeight\", detailRowHeight: \"detailRowHeight\", skip: \"skip\", scrollable: \"scrollable\", selectable: \"selectable\", sort: \"sort\", trackBy: \"trackBy\", filter: \"filter\", group: \"group\", virtualColumns: \"virtualColumns\", filterable: \"filterable\", sortable: \"sortable\", pageable: \"pageable\", groupable: \"groupable\", navigable: \"navigable\", navigatable: \"navigatable\", autoSize: \"autoSize\", rowClass: \"rowClass\", rowSticky: \"rowSticky\", rowSelected: \"rowSelected\", cellSelected: \"cellSelected\", resizable: \"resizable\", reorderable: \"reorderable\", loading: \"loading\", columnMenu: \"columnMenu\", hideHeader: \"hideHeader\", isDetailExpanded: \"isDetailExpanded\", isGroupExpanded: \"isGroupExpanded\" }, outputs: { filterChange: \"filterChange\", pageChange: \"pageChange\", groupChange: \"groupChange\", sortChange: \"sortChange\", selectionChange: \"selectionChange\", dataStateChange: \"dataStateChange\", groupExpand: \"groupExpand\", groupCollapse: \"groupCollapse\", detailExpand: \"detailExpand\", detailCollapse: \"detailCollapse\", edit: \"edit\", cancel: \"cancel\", save: \"save\", remove: \"remove\", add: \"add\", cellClose: \"cellClose\", cellClick: \"cellClick\", pdfExport: \"pdfExport\", excelExport: \"excelExport\", columnResize: \"columnResize\", columnReorder: \"columnReorder\", columnVisibilityChange: \"columnVisibilityChange\", columnLockedChange: \"columnLockedChange\", columnStickyChange: \"columnStickyChange\", scrollBottom: \"scrollBottom\", contentScroll: \"contentScroll\" }, host: { properties: { \"attr.dir\": \"this.dir\", \"class.k-grid\": \"this.hostClasses\", \"class.k-grid-lockedcolumns\": \"this.lockedClasses\", \"class.k-grid-virtual\": \"this.virtualClasses\", \"class.k-grid-no-scrollbar\": \"this.noScrollbarClass\" } }, providers: [\n        BrowserSupportService,\n        LocalizationService,\n        ColumnInfoService,\n        SelectionService,\n        CellSelectionService,\n        DetailsService,\n        GroupsService,\n        GroupInfoService,\n        ChangeNotificationService,\n        EditService,\n        PDFService,\n        SuspendService,\n        {\n            provide: CELL_CONTEXT,\n            useValue: EMPTY_CELL_CONTEXT\n        },\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.grid'\n        },\n        FilterService,\n        ResponsiveService,\n        PagerContextService,\n        ExcelService,\n        ScrollSyncService,\n        ResizeService,\n        LocalDataChangesService,\n        DomEventsService,\n        ColumnResizingService,\n        SinglePopupService,\n        DragAndDropService,\n        DragHintService,\n        DropCueService,\n        ColumnReorderService,\n        NavigationService,\n        FocusRoot,\n        IdService,\n        ScrollRequestService,\n        SortService,\n        ContextService\n    ], queries: [{ propertyName: \"columns\", predicate: ColumnBase }, { propertyName: \"detailTemplateChildren\", predicate: DetailTemplateDirective }, { propertyName: \"cellLoadingTemplateChildren\", predicate: CellLoadingTemplateDirective }, { propertyName: \"loadingTemplateChildren\", predicate: LoadingTemplateDirective }, { propertyName: \"noRecordsTemplateChildren\", predicate: NoRecordsTemplateDirective }, { propertyName: \"pagerTemplateChildren\", predicate: PagerTemplateDirective }, { propertyName: \"toolbarTemplateChildren\", predicate: ToolbarTemplateDirective }, { propertyName: \"columnMenuTemplates\", predicate: ColumnMenuTemplateDirective }], viewQueries: [{ propertyName: \"lockedHeader\", first: true, predicate: [\"lockedHeader\"], descendants: true }, { propertyName: \"header\", first: true, predicate: [\"header\"], descendants: true }, { propertyName: \"ariaRoot\", first: true, predicate: [\"ariaRoot\"], descendants: true, static: true }, { propertyName: \"footer\", predicate: [\"footer\"], descendants: true }], exportAs: [\"kendoGrid\"], usesOnChanges: true, ngImport: i0, template: `\n        <ng-container kendoGridLocalizedMessages\n            i18n-groupPanelEmpty=\"kendo.grid.groupPanelEmpty|The label visible in the Grid group panel when it is empty\"\n            groupPanelEmpty=\"Drag a column header and drop it here to group by that column\"\n\n            i18n-noRecords=\"kendo.grid.noRecords|The label visible in the Grid when there are no records\"\n            noRecords=\"No records available.\"\n\n            i18n-pagerLabel=\"kendo.grid.pagerLabel|The label for the Grid pager\"\n            pagerLabel=\"{{ 'Page navigation, page {currentPage} of {totalPages}' }}\"\n\n            i18n-pagerFirstPage=\"kendo.grid.pagerFirstPage|The label for the first page button in Grid pager\"\n            pagerFirstPage=\"Go to the first page\"\n\n            i18n-pagerPreviousPage=\"kendo.grid.pagerPreviousPage|The label for the previous page button in Grid pager\"\n            pagerPreviousPage=\"Go to the previous page\"\n\n            i18n-pagerNextPage=\"kendo.grid.pagerNextPage|The label for the next page button in Grid pager\"\n            pagerNextPage=\"Go to the next page\"\n\n            i18n-pagerLastPage=\"kendo.grid.pagerLastPage|The label for the last page button in Grid pager\"\n            pagerLastPage=\"Go to the last page\"\n\n            i18n-pagerPage=\"kendo.grid.pagerPage|The label before the current page number in the Grid pager\"\n            pagerPage=\"Page\"\n\n            i18n-pagerOf=\"kendo.grid.pagerOf|The label before the total pages number in the Grid pager\"\n            pagerOf=\"of\"\n\n            i18n-pagerItems=\"kendo.grid.pagerItems|The label after the total pages number in the Grid pager\"\n            pagerItems=\"items\"\n\n            i18n-pagerPageNumberInputTitle=\"kendo.grid.pagerPageNumberInputTitle|The label for the pager input in the Grid pager\"\n            pagerPageNumberInputTitle=\"Page Number\"\n\n            i18n-pagerItemsPerPage=\"kendo.grid.pagerItemsPerPage|The label for the page size chooser in the Grid pager\"\n            pagerItemsPerPage=\"items per page\"\n\n            i18n-filter=\"kendo.grid.filter|The label of the filter cell or icon\"\n            filter=\"Filter\"\n\n            i18n-filterInputLabel=\"kendo.grid.filterInputLabel|The label of the filter row and menu inputs\"\n            filterInputLabel=\"{{ '{columnName} Filter' }}\"\n\n            i18n-filterMenuTitle=\"kendo.grid.filterMenuTitle|The title of the filter menu icon\"\n            filterMenuTitle=\"{{ '{columnName} Filter Menu' }}\"\n\n            i18n-filterMenuOperatorsDropDownLabel=\"kendo.grid.filterMenuOperatorsDropDownLabel|The label of the filter menu operators dropdown\"\n            filterMenuOperatorsDropDownLabel=\"{{ '{columnName} Filter Operators' }}\"\n\n            i18n-filterMenuLogicDropDownLabel=\"kendo.grid.filterMenuLogicDropDownLabel|The label of the filter menu logic dropdown\"\n            filterMenuLogicDropDownLabel=\"{{ '{columnName} Filter Logic' }}\"\n\n            i18n-filterEqOperator=\"kendo.grid.filterEqOperator|The text of the equal filter operator\"\n            filterEqOperator=\"Is equal to\"\n\n            i18n-filterNotEqOperator=\"kendo.grid.filterNotEqOperator|The text of the not equal filter operator\"\n            filterNotEqOperator=\"Is not equal to\"\n\n            i18n-filterIsNullOperator=\"kendo.grid.filterIsNullOperator|The text of the is null filter operator\"\n            filterIsNullOperator=\"Is null\"\n\n            i18n-filterIsNotNullOperator=\"kendo.grid.filterIsNotNullOperator|The text of the is not null filter operator\"\n            filterIsNotNullOperator=\"Is not null\"\n\n            i18n-filterIsEmptyOperator=\"kendo.grid.filterIsEmptyOperator|The text of the is empty filter operator\"\n            filterIsEmptyOperator=\"Is empty\"\n\n            i18n-filterIsNotEmptyOperator=\"kendo.grid.filterIsNotEmptyOperator|The text of the is not empty filter operator\"\n            filterIsNotEmptyOperator=\"Is not empty\"\n\n            i18n-filterStartsWithOperator=\"kendo.grid.filterStartsWithOperator|The text of the starts with filter operator\"\n            filterStartsWithOperator=\"Starts with\"\n\n            i18n-filterContainsOperator=\"kendo.grid.filterContainsOperator|The text of the contains filter operator\"\n            filterContainsOperator=\"Contains\"\n\n            i18n-filterNotContainsOperator=\"kendo.grid.filterNotContainsOperator|The text of the does not contain filter operator\"\n            filterNotContainsOperator=\"Does not contain\"\n\n            i18n-filterEndsWithOperator=\"kendo.grid.filterEndsWithOperator|The text of the ends with filter operator\"\n            filterEndsWithOperator=\"Ends with\"\n\n            i18n-filterGteOperator=\"kendo.grid.filterGteOperator|The text of the greater than or equal filter operator\"\n            filterGteOperator=\"Is greater than or equal to\"\n\n            i18n-filterGtOperator=\"kendo.grid.filterGtOperator|The text of the greater than filter operator\"\n            filterGtOperator=\"Is greater than\"\n\n            i18n-filterLteOperator=\"kendo.grid.filterLteOperator|The text of the less than or equal filter operator\"\n            filterLteOperator=\"Is less than or equal to\"\n\n            i18n-filterLtOperator=\"kendo.grid.filterLtOperator|The text of the less than filter operator\"\n            filterLtOperator=\"Is less than\"\n\n            i18n-filterIsTrue=\"kendo.grid.filterIsTrue|The text of the IsTrue boolean filter option\"\n            filterIsTrue=\"Is True\"\n\n            i18n-filterIsFalse=\"kendo.grid.filterIsFalse|The text of the IsFalse boolean filter option\"\n            filterIsFalse=\"Is False\"\n\n            i18n-filterBooleanAll=\"kendo.grid.filterBooleanAll|The text of the (All) boolean filter option\"\n            filterBooleanAll=\"(All)\"\n\n            i18n-filterAfterOrEqualOperator=\"kendo.grid.filterAfterOrEqualOperator|The text of the after or equal date filter operator\"\n            filterAfterOrEqualOperator=\"Is after or equal to\"\n\n            i18n-filterAfterOperator=\"kendo.grid.filterAfterOperator|The text of the after date filter operator\"\n            filterAfterOperator=\"Is after\"\n\n            i18n-filterBeforeOperator=\"kendo.grid.filterBeforeOperator|The text of the before date filter operator\"\n            filterBeforeOperator=\"Is before\"\n\n            i18n-filterBeforeOrEqualOperator=\"kendo.grid.filterBeforeOrEqualOperator|The text of the before or equal date filter operator\"\n            filterBeforeOrEqualOperator=\"Is before or equal to\"\n\n            i18n-filterFilterButton=\"kendo.grid.filterFilterButton|The text of the filter button\"\n            filterFilterButton=\"Filter\"\n\n            i18n-filterClearButton=\"kendo.grid.filterClearButton|The text of the clear filter button\"\n            filterClearButton=\"Clear\"\n\n            i18n-filterAndLogic=\"kendo.grid.filterAndLogic|The text of the And filter logic\"\n            filterAndLogic=\"And\"\n\n            i18n-filterOrLogic=\"kendo.grid.filterOrLogic|The text of the Or filter logic\"\n            filterOrLogic=\"Or\"\n\n            i18n-loading=\"kendo.grid.loading|The loading text\"\n            loading=\"Loading\"\n\n            i18n-gridLabel=\"kendo.grid.gridLabel|The Grid aria-label\"\n            gridLabel=\"Data table\"\n\n            i18n-columnMenu=\"kendo.grid.columnMenu|The title of the column menu icon\"\n            columnMenu=\"{{ '{columnName} Column Menu' }}\"\n\n            i18n-columns=\"kendo.grid.columns|The text shown in the column menu for the columns item\"\n            columns=\"Columns\"\n\n            i18n-lock=\"kendo.grid.lock|The text shown in the column menu for the lock item\"\n            lock=\"Lock\"\n\n            i18n-unlock=\"kendo.grid.unlock|The text shown in the column menu for the unlock item\"\n            unlock=\"Unlock\"\n\n            i18n-setColumnPosition=\"kendo.grid.setColumnPosition|The text shown in the column menu for the set column position item\"\n            setColumnPosition=\"Set Column Position\"\n\n            i18n-stick=\"kendo.grid.stick|The text shown in the column menu for the stick item\"\n            stick=\"Stick\"\n\n            i18n-unstick=\"kendo.grid.unstick|The text shown in the column menu for the unstick item\"\n            unstick=\"Unstick\"\n\n            i18n-sortable=\"kendo.grid.sortable|The label of the sort icon\"\n            sortable=\"Sortable\"\n\n            i18n-sortAscending=\"kendo.grid.sortAscending|The text shown in the column menu for the sort ascending item\"\n            sortAscending=\"Sort Ascending\"\n\n            i18n-sortDescending=\"kendo.grid.sortDescending|The text shown in the column menu for the sort descending item\"\n            sortDescending=\"Sort Descending\"\n\n            i18n-autosizeAllColumns=\"kendo.grid.autosizeAllColumns|The text shown in the column menu for the autosize all columns item\"\n            autosizeAllColumns=\"Autosize All Columns\"\n\n            i18n-autosizeThisColumn=\"kendo.grid.autosizeThisColumn|The text shown in the column menu for the autosize this column item\"\n            autosizeThisColumn=\"Autosize This Column\"\n\n            i18n-sortedAscending=\"kendo.grid.sortedAscending|The status announcement when a column is sorted ascending\"\n            sortedAscending=\"Sorted Ascending\"\n\n            i18n-sortedDescending=\"kendo.grid.sortedDescending|The status announcement when a column is sorted descending\"\n            sortedDescending=\"Sorted Descending\"\n\n            i18n-sortedDefault=\"kendo.grid.sortedDefault|The status announcement when a column is no longer sorted\"\n            sortedDefault=\"Not Sorted\"\n\n            i18n-columnsApply=\"kendo.grid.columnsApply|The text shown in the column menu or column chooser for the columns apply button\"\n            columnsApply=\"Apply\"\n\n            i18n-columnsReset=\"kendo.grid.columnsReset|The text shown in the column menu or column chooser for the columns reset button\"\n            columnsReset=\"Reset\"\n\n            i18n-detailExpand=\"kendo.grid.detailExpand|The title of the expand icon of detail rows.\"\n            detailExpand=\"Expand Details\"\n\n            i18n-detailCollapse=\"kendo.grid.detailCollapse|The title of the collapse icon of detail rows.\"\n            detailCollapse=\"Collapse Details\"\n\n            i18n-filterDateToday=\"kendo.grid.filterDateToday|The text of the Today button of the Date filter.\"\n            filterDateToday=\"TODAY\"\n\n            i18n-filterDateToggle=\"kendo.grid.filterDateToggle|The title of the Toggle button of the Date filter.\"\n            filterDateToggle=\"Toggle Calendar\"\n\n            i18n-filterNumericDecrement=\"kendo.grid.filterNumericDecrement|The title of the Decrement button of the Numeric filter.\"\n            filterNumericDecrement=\"Decrement\"\n\n            i18n-filterNumericIncrement=\"kendo.grid.filterNumericIncrement|The title of the Increment button of the Numeric filter.\"\n            filterNumericIncrement=\"Increment\"\n\n            i18n-selectionCheckboxLabel=\"kendo.grid.selectionCheckboxLabel|The labels of the checkbox column checkboxes.\"\n            selectionCheckboxLabel=\"Select Row\"\n\n            i18n-selectAllCheckboxLabel=\"kendo.grid.selectAllCheckboxLabel|The label of the checkbox column select all checkbox.\"\n            selectAllCheckboxLabel=\"Select All Rows\"\n\n            i18n-groupCollapse=\"kendo.grid.groupCollapse|The text of the title and aria-label attributes applied to the collapse icon of group rows.\"\n            groupCollapse=\"Collapse Group\"\n\n            i18n-groupExpand=\"kendo.grid.groupExpand|The text of the title and aria-label attributes applied to the expand icon of group rows.\"\n            groupExpand=\"Expand Group\"\n        >\n        </ng-container>\n        <kendo-grid-toolbar class=\"k-toolbar k-grid-toolbar\" *ngIf=\"showTopToolbar\" position=\"top\"></kendo-grid-toolbar>\n        <kendo-pager\n            *ngIf=\"showTopPager\"\n            [tabindex]=\"navigation.pagerEnabled ? '0' : '-1'\"\n            [attr.role]=\"navigation.pagerEnabled ? 'application' : undefined\"\n            class=\"k-grid-pager-top\"\n            [template]=\"pagerTemplate\"\n            [pageSize]=\"pageSize\"\n            [total]=\"view.total\"\n            [skip]=\"skip\"\n            [options]=\"pageable\"\n            (pageChange)=\"notifyPageChange('pager', $event)\">\n        </kendo-pager>\n        <kendo-grid-group-panel\n            *ngIf=\"showGroupPanel\"\n            [text]=\"groupableEmptyText\"\n            [groups]=\"group\"\n            (change)=\"groupChange.emit($event)\">\n        </kendo-grid-group-panel>\n        <div #ariaRoot\n            class=\"k-grid-aria-root\"\n            role=\"grid\"\n            [attr.aria-label]=\"ariaLabel\"\n            [attr.aria-rowcount]=\"ariaRowCount\"\n            [attr.aria-colcount]=\"ariaColCount\">\n        <ng-container *ngIf=\"isScrollable\">\n            <div *ngIf=\"!hideHeader\"\n                class=\"k-grid-header\"\n                role=\"presentation\"\n                [style.padding]=\"headerPadding\">\n                <div *ngIf=\"isLocked\"\n                     #lockedHeader\n                     role=\"presentation\"\n                     class=\"k-grid-header-locked\"\n                     [style.width.px]=\"lockedWidth\">\n                    <table [locked]=\"true\" role=\"presentation\" [style.width.px]=\"lockedWidth\">\n                        <colgroup kendoGridColGroup\n                            role=\"presentation\"\n                            [columns]=\"$any(lockedLeafColumns)\"\n                            [groups]=\"group\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </colgroup>\n                        <thead kendoGridHeader\n                            [resizable]=\"resizable\"\n                            [scrollable]=\"true\"\n                            [columns]=\"$any(lockedColumns)\"\n                            [totalColumnLevels]=\"totalColumnLevels\"\n                            [sort]=\"sort\"\n                            [groups]=\"group\"\n                            [filter]=\"filter\"\n                            [filterable]=\"filterable\"\n                            [groupable]=\"showGroupPanel\"\n                            [reorderable]=\"reorderable\"\n                            [sortable]=\"sortable\"\n                            [columnMenu]=\"columnMenuOptions\"\n                            [columnMenuTemplate]=\"columnMenuTemplate\"\n                            [totalColumnsCount]=\"leafColumns.length\"\n                            [detailTemplate]=\"detailTemplate\"\n                            [tabIndex]=\"navigation.tableEnabled ? '-1' : '0'\">\n                        </thead>\n                    </table>\n                </div><div #header class=\"k-grid-header-wrap\" role=\"presentation\" data-scrollable\n                    [kendoGridResizableContainer]=\"lockedLeafColumns.length > 0\"\n                    [lockedWidth]=\"lockedWidth + scrollbarWidth + 2\">\n                    <table role=\"presentation\" [style.width.px]=\"nonLockedWidth\" [virtualColumns]=\"virtualColumns\">\n                        <colgroup kendoGridColGroup\n                            role=\"presentation\"\n                            [columns]=\"headerLeafColumns\"\n                            [groups]=\"isLocked ? [] : group\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </colgroup>\n                        <thead kendoGridHeader\n                            [resizable]=\"resizable\"\n                            role=\"presentation\"\n                            [scrollable]=\"true\"\n                            [columns]=\"headerColumns\"\n                            [totalColumnLevels]=\"totalColumnLevels\"\n                            [sort]=\"sort\"\n                            [filter]=\"filter\"\n                            [filterable]=\"filterable\"\n                            [groupable]=\"showGroupPanel\"\n                            [reorderable]=\"reorderable\"\n                            [groups]=\"isLocked ? [] : group\"\n                            [sortable]=\"sortable\"\n                            [columnMenu]=\"columnMenuOptions\"\n                            [columnMenuTemplate]=\"columnMenuTemplate\"\n                            [lockedColumnsCount]=\"lockedLeafColumns.length\"\n                            [totalColumnsCount]=\"leafColumns.length\"\n                            [detailTemplate]=\"detailTemplate\"\n                            [tabIndex]=\"navigation.tableEnabled ? '-1' : '0'\">\n                        </thead>\n                    </table>\n                    <div *ngIf=\"virtualColumns\" class=\"k-width-container\" role=\"presentation\">\n                        <div [style.width.px]=\"columnsContainer.unlockedWidth\"></div>\n                    </div>\n                </div>\n            </div>\n            <kendo-grid-list\n                [data]=\"$any(view)\"\n                [rowHeight]=\"rowHeight\"\n                [detailRowHeight]=\"detailRowHeight\"\n                [total]=\"totalCount\"\n                [take]=\"pageSize\"\n                [groups]=\"group\"\n                [groupable]=\"groupable\"\n                [skip]=\"skip\"\n                [trackBy]=\"trackBy\"\n                [columns]=\"columnsContainer\"\n                [selectable]=\"selectable\"\n                [filterable]=\"filterable\"\n                [detailTemplate]=\"detailTemplate\"\n                [noRecordsTemplate]=\"noRecordsTemplate\"\n                (pageChange)=\"notifyPageChange('list', $event)\"\n                [rowClass]=\"rowClass\"\n                [rowSticky]=\"rowSticky\"\n                [loading]=\"loading\"\n                [isVirtual]=\"isVirtual\"\n                [cellLoadingTemplate]=\"cellLoadingTemplate?.templateRef\"\n                [loadingTemplate]=\"loadingTemplate?.templateRef\"\n                [virtualColumns]=\"virtualColumns\"\n                (scrollBottom)=\"notifyScrollBottom()\"\n                (contentScroll)=\"contentScroll.emit($event)\"\n                kendoDraggable\n                kendoGridSelectionMarquee\n                [enableDrag]=\"marqueeSelection\"\n                [sort]=\"sort\"\n                >\n            </kendo-grid-list>\n            <div\n                *ngIf=\"showFooter\"\n                class=\"k-grid-footer\"\n                [style.padding]=\"headerPadding\">\n                <div\n                    *ngIf=\"lockedLeafColumns.length\"\n                    class=\"k-grid-footer-locked\"\n                    [style.width.px]=\"lockedWidth\">\n                    <table role=\"presentation\" [locked]=\"true\" [style.width.px]=\"lockedWidth\">\n                        <colgroup kendoGridColGroup\n                            [columns]=\"$any(lockedLeafColumns)\"\n                            [groups]=\"group\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </colgroup>\n                        <tfoot kendoGridFooter\n                            [scrollable]=\"true\"\n                            [groups]=\"group\"\n                            [columns]=\"$any(lockedLeafColumns)\"\n                            [detailTemplate]=\"detailTemplate\"\n                            [logicalRowIndex]=\"ariaRowCount\">\n                        </tfoot>\n                    </table>\n                </div><div #footer\n                    class=\"k-grid-footer-wrap\" data-scrollable\n                    [kendoGridResizableContainer]=\"lockedLeafColumns.length > 0\"\n                    [lockedWidth]=\"lockedWidth + scrollbarWidth + 3\">\n                    <table role=\"presentation\" [style.width.px]=\"nonLockedWidth\">\n                        <colgroup kendoGridColGroup\n                            [columns]=\"$any(nonLockedLeafColumns)\"\n                            [groups]=\"isLocked ? [] : group\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </colgroup>\n                        <tfoot kendoGridFooter\n                            [logicalRowIndex]=\"ariaRowCount\"\n                            [scrollable]=\"true\"\n                            [groups]=\"isLocked ? [] : group\"\n                            [columns]=\"$any(nonLockedLeafColumns)\"\n                            [lockedColumnsCount]=\"lockedLeafColumns.length\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </tfoot>\n                    </table>\n                </div>\n            </div>\n        </ng-container>\n        <ng-container *ngIf=\"!isScrollable\">\n            <table [style.table-layout]=\"resizable ? 'fixed' : null\">\n                <colgroup kendoGridColGroup\n                    [columns]=\"$any(leafColumns)\"\n                    [groups]=\"group\"\n                    [detailTemplate]=\"detailTemplate\">\n                </colgroup>\n                <thead kendoGridHeader\n                    *ngIf=\"!hideHeader\"\n                    [resizable]=\"resizable\"\n                    [scrollable]=\"false\"\n                    [columns]=\"$any(visibleColumns)\"\n                    [totalColumnLevels]=\"totalColumnLevels\"\n                    [groups]=\"group\"\n                    [groupable]=\"showGroupPanel\"\n                    [reorderable]=\"reorderable\"\n                    [sort]=\"sort\"\n                    [sortable]=\"sortable\"\n                    [filter]=\"filter\"\n                    [filterable]=\"filterable\"\n                    [columnMenu]=\"columnMenuOptions\"\n                    [columnMenuTemplate]=\"columnMenuTemplate\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [tabIndex]=\"navigation.tableEnabled ? '-1' : '0'\">\n                </thead>\n                <tbody kendoGridTableBody\n                    [isLoading]=\"loading\"\n                    [groups]=\"group\"\n                    [data]=\"$any(view)\"\n                    [skip]=\"skip\"\n                    [columns]=\"$any(leafColumns)\"\n                    [selectable]=\"selectable\"\n                    [filterable]=\"filterable\"\n                    [noRecordsTemplate]=\"noRecordsTemplate\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [showGroupFooters]=\"showGroupFooters\"\n                    [trackBy]=\"trackBy\"\n                    [rowClass]=\"rowClass\"\n                    kendoDraggable\n                    kendoGridSelectionMarquee\n                    [enableDrag]=\"marqueeSelection\">\n                </tbody>\n                <tfoot kendoGridFooter\n                    *ngIf=\"showFooter\"\n                    [scrollable]=\"false\"\n                    [logicalRowIndex]=\"ariaRowCount\"\n                    [groups]=\"group\"\n                    [columns]=\"$any(leafColumns)\"\n                    [detailTemplate]=\"detailTemplate\">\n                </tfoot>\n            </table>\n        </ng-container>\n        <div [loadingTemplate]=\"loadingTemplate\" *ngIf=\"loading\" kendoGridLoading>\n        </div>\n        </div>\n        <kendo-pager\n            *ngIf=\"showBottomPager\"\n            [tabindex]=\"navigation.pagerEnabled ? '0' : '-1'\"\n            [attr.role]=\"navigation.pagerEnabled ? 'application' : undefined\"\n            [template]=\"pagerTemplate\"\n            [pageSize]=\"pageSize\"\n            [total]=\"view.total\"\n            [skip]=\"skip\"\n            [options]=\"pageable\"\n            (pageChange)=\"notifyPageChange('pager', $event)\">\n        </kendo-pager>\n        <kendo-grid-toolbar class=\"k-toolbar k-grid-toolbar k-grid-toolbar-bottom\" *ngIf=\"showBottomToolbar\" position=\"bottom\"></kendo-grid-toolbar>\n    `, isInline: true, components: [{ type: ToolbarComponent, selector: \"kendo-grid-toolbar\", inputs: [\"position\"] }, { type: PagerComponent, selector: \"kendo-pager\", inputs: [\"total\", \"skip\", \"pageSize\", \"options\", \"template\"], outputs: [\"pageChange\"] }, { type: GroupPanelComponent, selector: \"kendo-grid-group-panel\", inputs: [\"text\", \"groups\"], outputs: [\"change\"] }, { type: ColGroupComponent, selector: \"[kendoGridColGroup]\", inputs: [\"columns\", \"groups\", \"detailTemplate\", \"sort\"] }, { type: HeaderComponent, selector: \"[kendoGridHeader]\", inputs: [\"totalColumnLevels\", \"columns\", \"groups\", \"detailTemplate\", \"scrollable\", \"filterable\", \"sort\", \"filter\", \"sortable\", \"groupable\", \"lockedColumnsCount\", \"resizable\", \"reorderable\", \"columnMenu\", \"columnMenuTemplate\", \"totalColumnsCount\", \"tabIndex\"] }, { type: ListComponent, selector: \"kendo-grid-list\", inputs: [\"data\", \"groups\", \"total\", \"rowHeight\", \"stickyRowHeight\", \"detailRowHeight\", \"take\", \"skip\", \"columns\", \"detailTemplate\", \"noRecordsTemplate\", \"selectable\", \"groupable\", \"filterable\", \"rowClass\", \"rowSticky\", \"loading\", \"trackBy\", \"virtualColumns\", \"isVirtual\", \"cellLoadingTemplate\", \"loadingTemplate\", \"sort\"], outputs: [\"contentScroll\", \"pageChange\", \"scrollBottom\"] }, { type: FooterComponent, selector: \"[kendoGridFooter]\", inputs: [\"columns\", \"groups\", \"detailTemplate\", \"scrollable\", \"lockedColumnsCount\", \"logicalRowIndex\"] }, { type: TableBodyComponent, selector: \"[kendoGridTableBody]\", inputs: [\"columns\", \"allColumns\", \"groups\", \"detailTemplate\", \"noRecordsTemplate\", \"data\", \"skip\", \"selectable\", \"filterable\", \"noRecordsText\", \"isLocked\", \"isLoading\", \"isVirtual\", \"cellLoadingTemplate\", \"skipGroupDecoration\", \"showGroupFooters\", \"lockedColumnsCount\", \"totalColumnsCount\", \"virtualColumns\", \"trackBy\", \"rowSticky\", \"rowClass\"] }, { type: LoadingComponent, selector: \"[kendoGridLoading]\", inputs: [\"loadingTemplate\"] }], directives: [{ type: LocalizedMessagesDirective, selector: \"[kendoGridLocalizedMessages]\" }, { type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TableDirective, selector: \"table\", inputs: [\"locked\", \"virtualColumns\"] }, { type: ResizableContainerDirective, selector: \"[kendoGridResizableContainer]\", inputs: [\"lockedWidth\", \"kendoGridResizableContainer\"] }, { type: i1$1.DraggableDirective, selector: \"[kendoDraggable]\", inputs: [\"enableDrag\"], outputs: [\"kendoPress\", \"kendoDrag\", \"kendoRelease\"] }, { type: GridMarqueeDirective, selector: \"[kendoGridSelectionMarquee]\" }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GridComponent, decorators: [{\n            type: Component,\n            args: [{\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'kendoGrid',\n                    providers: [\n                        BrowserSupportService,\n                        LocalizationService,\n                        ColumnInfoService,\n                        SelectionService,\n                        CellSelectionService,\n                        DetailsService,\n                        GroupsService,\n                        GroupInfoService,\n                        ChangeNotificationService,\n                        EditService,\n                        PDFService,\n                        SuspendService,\n                        {\n                            provide: CELL_CONTEXT,\n                            useValue: EMPTY_CELL_CONTEXT\n                        },\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.grid'\n                        },\n                        FilterService,\n                        ResponsiveService,\n                        PagerContextService,\n                        ExcelService,\n                        ScrollSyncService,\n                        ResizeService,\n                        LocalDataChangesService,\n                        DomEventsService,\n                        ColumnResizingService,\n                        SinglePopupService,\n                        DragAndDropService,\n                        DragHintService,\n                        DropCueService,\n                        ColumnReorderService,\n                        NavigationService,\n                        FocusRoot,\n                        IdService,\n                        ScrollRequestService,\n                        SortService,\n                        ContextService\n                    ],\n                    selector: 'kendo-grid',\n                    template: `\n        <ng-container kendoGridLocalizedMessages\n            i18n-groupPanelEmpty=\"kendo.grid.groupPanelEmpty|The label visible in the Grid group panel when it is empty\"\n            groupPanelEmpty=\"Drag a column header and drop it here to group by that column\"\n\n            i18n-noRecords=\"kendo.grid.noRecords|The label visible in the Grid when there are no records\"\n            noRecords=\"No records available.\"\n\n            i18n-pagerLabel=\"kendo.grid.pagerLabel|The label for the Grid pager\"\n            pagerLabel=\"{{ 'Page navigation, page {currentPage} of {totalPages}' }}\"\n\n            i18n-pagerFirstPage=\"kendo.grid.pagerFirstPage|The label for the first page button in Grid pager\"\n            pagerFirstPage=\"Go to the first page\"\n\n            i18n-pagerPreviousPage=\"kendo.grid.pagerPreviousPage|The label for the previous page button in Grid pager\"\n            pagerPreviousPage=\"Go to the previous page\"\n\n            i18n-pagerNextPage=\"kendo.grid.pagerNextPage|The label for the next page button in Grid pager\"\n            pagerNextPage=\"Go to the next page\"\n\n            i18n-pagerLastPage=\"kendo.grid.pagerLastPage|The label for the last page button in Grid pager\"\n            pagerLastPage=\"Go to the last page\"\n\n            i18n-pagerPage=\"kendo.grid.pagerPage|The label before the current page number in the Grid pager\"\n            pagerPage=\"Page\"\n\n            i18n-pagerOf=\"kendo.grid.pagerOf|The label before the total pages number in the Grid pager\"\n            pagerOf=\"of\"\n\n            i18n-pagerItems=\"kendo.grid.pagerItems|The label after the total pages number in the Grid pager\"\n            pagerItems=\"items\"\n\n            i18n-pagerPageNumberInputTitle=\"kendo.grid.pagerPageNumberInputTitle|The label for the pager input in the Grid pager\"\n            pagerPageNumberInputTitle=\"Page Number\"\n\n            i18n-pagerItemsPerPage=\"kendo.grid.pagerItemsPerPage|The label for the page size chooser in the Grid pager\"\n            pagerItemsPerPage=\"items per page\"\n\n            i18n-filter=\"kendo.grid.filter|The label of the filter cell or icon\"\n            filter=\"Filter\"\n\n            i18n-filterInputLabel=\"kendo.grid.filterInputLabel|The label of the filter row and menu inputs\"\n            filterInputLabel=\"{{ '{columnName} Filter' }}\"\n\n            i18n-filterMenuTitle=\"kendo.grid.filterMenuTitle|The title of the filter menu icon\"\n            filterMenuTitle=\"{{ '{columnName} Filter Menu' }}\"\n\n            i18n-filterMenuOperatorsDropDownLabel=\"kendo.grid.filterMenuOperatorsDropDownLabel|The label of the filter menu operators dropdown\"\n            filterMenuOperatorsDropDownLabel=\"{{ '{columnName} Filter Operators' }}\"\n\n            i18n-filterMenuLogicDropDownLabel=\"kendo.grid.filterMenuLogicDropDownLabel|The label of the filter menu logic dropdown\"\n            filterMenuLogicDropDownLabel=\"{{ '{columnName} Filter Logic' }}\"\n\n            i18n-filterEqOperator=\"kendo.grid.filterEqOperator|The text of the equal filter operator\"\n            filterEqOperator=\"Is equal to\"\n\n            i18n-filterNotEqOperator=\"kendo.grid.filterNotEqOperator|The text of the not equal filter operator\"\n            filterNotEqOperator=\"Is not equal to\"\n\n            i18n-filterIsNullOperator=\"kendo.grid.filterIsNullOperator|The text of the is null filter operator\"\n            filterIsNullOperator=\"Is null\"\n\n            i18n-filterIsNotNullOperator=\"kendo.grid.filterIsNotNullOperator|The text of the is not null filter operator\"\n            filterIsNotNullOperator=\"Is not null\"\n\n            i18n-filterIsEmptyOperator=\"kendo.grid.filterIsEmptyOperator|The text of the is empty filter operator\"\n            filterIsEmptyOperator=\"Is empty\"\n\n            i18n-filterIsNotEmptyOperator=\"kendo.grid.filterIsNotEmptyOperator|The text of the is not empty filter operator\"\n            filterIsNotEmptyOperator=\"Is not empty\"\n\n            i18n-filterStartsWithOperator=\"kendo.grid.filterStartsWithOperator|The text of the starts with filter operator\"\n            filterStartsWithOperator=\"Starts with\"\n\n            i18n-filterContainsOperator=\"kendo.grid.filterContainsOperator|The text of the contains filter operator\"\n            filterContainsOperator=\"Contains\"\n\n            i18n-filterNotContainsOperator=\"kendo.grid.filterNotContainsOperator|The text of the does not contain filter operator\"\n            filterNotContainsOperator=\"Does not contain\"\n\n            i18n-filterEndsWithOperator=\"kendo.grid.filterEndsWithOperator|The text of the ends with filter operator\"\n            filterEndsWithOperator=\"Ends with\"\n\n            i18n-filterGteOperator=\"kendo.grid.filterGteOperator|The text of the greater than or equal filter operator\"\n            filterGteOperator=\"Is greater than or equal to\"\n\n            i18n-filterGtOperator=\"kendo.grid.filterGtOperator|The text of the greater than filter operator\"\n            filterGtOperator=\"Is greater than\"\n\n            i18n-filterLteOperator=\"kendo.grid.filterLteOperator|The text of the less than or equal filter operator\"\n            filterLteOperator=\"Is less than or equal to\"\n\n            i18n-filterLtOperator=\"kendo.grid.filterLtOperator|The text of the less than filter operator\"\n            filterLtOperator=\"Is less than\"\n\n            i18n-filterIsTrue=\"kendo.grid.filterIsTrue|The text of the IsTrue boolean filter option\"\n            filterIsTrue=\"Is True\"\n\n            i18n-filterIsFalse=\"kendo.grid.filterIsFalse|The text of the IsFalse boolean filter option\"\n            filterIsFalse=\"Is False\"\n\n            i18n-filterBooleanAll=\"kendo.grid.filterBooleanAll|The text of the (All) boolean filter option\"\n            filterBooleanAll=\"(All)\"\n\n            i18n-filterAfterOrEqualOperator=\"kendo.grid.filterAfterOrEqualOperator|The text of the after or equal date filter operator\"\n            filterAfterOrEqualOperator=\"Is after or equal to\"\n\n            i18n-filterAfterOperator=\"kendo.grid.filterAfterOperator|The text of the after date filter operator\"\n            filterAfterOperator=\"Is after\"\n\n            i18n-filterBeforeOperator=\"kendo.grid.filterBeforeOperator|The text of the before date filter operator\"\n            filterBeforeOperator=\"Is before\"\n\n            i18n-filterBeforeOrEqualOperator=\"kendo.grid.filterBeforeOrEqualOperator|The text of the before or equal date filter operator\"\n            filterBeforeOrEqualOperator=\"Is before or equal to\"\n\n            i18n-filterFilterButton=\"kendo.grid.filterFilterButton|The text of the filter button\"\n            filterFilterButton=\"Filter\"\n\n            i18n-filterClearButton=\"kendo.grid.filterClearButton|The text of the clear filter button\"\n            filterClearButton=\"Clear\"\n\n            i18n-filterAndLogic=\"kendo.grid.filterAndLogic|The text of the And filter logic\"\n            filterAndLogic=\"And\"\n\n            i18n-filterOrLogic=\"kendo.grid.filterOrLogic|The text of the Or filter logic\"\n            filterOrLogic=\"Or\"\n\n            i18n-loading=\"kendo.grid.loading|The loading text\"\n            loading=\"Loading\"\n\n            i18n-gridLabel=\"kendo.grid.gridLabel|The Grid aria-label\"\n            gridLabel=\"Data table\"\n\n            i18n-columnMenu=\"kendo.grid.columnMenu|The title of the column menu icon\"\n            columnMenu=\"{{ '{columnName} Column Menu' }}\"\n\n            i18n-columns=\"kendo.grid.columns|The text shown in the column menu for the columns item\"\n            columns=\"Columns\"\n\n            i18n-lock=\"kendo.grid.lock|The text shown in the column menu for the lock item\"\n            lock=\"Lock\"\n\n            i18n-unlock=\"kendo.grid.unlock|The text shown in the column menu for the unlock item\"\n            unlock=\"Unlock\"\n\n            i18n-setColumnPosition=\"kendo.grid.setColumnPosition|The text shown in the column menu for the set column position item\"\n            setColumnPosition=\"Set Column Position\"\n\n            i18n-stick=\"kendo.grid.stick|The text shown in the column menu for the stick item\"\n            stick=\"Stick\"\n\n            i18n-unstick=\"kendo.grid.unstick|The text shown in the column menu for the unstick item\"\n            unstick=\"Unstick\"\n\n            i18n-sortable=\"kendo.grid.sortable|The label of the sort icon\"\n            sortable=\"Sortable\"\n\n            i18n-sortAscending=\"kendo.grid.sortAscending|The text shown in the column menu for the sort ascending item\"\n            sortAscending=\"Sort Ascending\"\n\n            i18n-sortDescending=\"kendo.grid.sortDescending|The text shown in the column menu for the sort descending item\"\n            sortDescending=\"Sort Descending\"\n\n            i18n-autosizeAllColumns=\"kendo.grid.autosizeAllColumns|The text shown in the column menu for the autosize all columns item\"\n            autosizeAllColumns=\"Autosize All Columns\"\n\n            i18n-autosizeThisColumn=\"kendo.grid.autosizeThisColumn|The text shown in the column menu for the autosize this column item\"\n            autosizeThisColumn=\"Autosize This Column\"\n\n            i18n-sortedAscending=\"kendo.grid.sortedAscending|The status announcement when a column is sorted ascending\"\n            sortedAscending=\"Sorted Ascending\"\n\n            i18n-sortedDescending=\"kendo.grid.sortedDescending|The status announcement when a column is sorted descending\"\n            sortedDescending=\"Sorted Descending\"\n\n            i18n-sortedDefault=\"kendo.grid.sortedDefault|The status announcement when a column is no longer sorted\"\n            sortedDefault=\"Not Sorted\"\n\n            i18n-columnsApply=\"kendo.grid.columnsApply|The text shown in the column menu or column chooser for the columns apply button\"\n            columnsApply=\"Apply\"\n\n            i18n-columnsReset=\"kendo.grid.columnsReset|The text shown in the column menu or column chooser for the columns reset button\"\n            columnsReset=\"Reset\"\n\n            i18n-detailExpand=\"kendo.grid.detailExpand|The title of the expand icon of detail rows.\"\n            detailExpand=\"Expand Details\"\n\n            i18n-detailCollapse=\"kendo.grid.detailCollapse|The title of the collapse icon of detail rows.\"\n            detailCollapse=\"Collapse Details\"\n\n            i18n-filterDateToday=\"kendo.grid.filterDateToday|The text of the Today button of the Date filter.\"\n            filterDateToday=\"TODAY\"\n\n            i18n-filterDateToggle=\"kendo.grid.filterDateToggle|The title of the Toggle button of the Date filter.\"\n            filterDateToggle=\"Toggle Calendar\"\n\n            i18n-filterNumericDecrement=\"kendo.grid.filterNumericDecrement|The title of the Decrement button of the Numeric filter.\"\n            filterNumericDecrement=\"Decrement\"\n\n            i18n-filterNumericIncrement=\"kendo.grid.filterNumericIncrement|The title of the Increment button of the Numeric filter.\"\n            filterNumericIncrement=\"Increment\"\n\n            i18n-selectionCheckboxLabel=\"kendo.grid.selectionCheckboxLabel|The labels of the checkbox column checkboxes.\"\n            selectionCheckboxLabel=\"Select Row\"\n\n            i18n-selectAllCheckboxLabel=\"kendo.grid.selectAllCheckboxLabel|The label of the checkbox column select all checkbox.\"\n            selectAllCheckboxLabel=\"Select All Rows\"\n\n            i18n-groupCollapse=\"kendo.grid.groupCollapse|The text of the title and aria-label attributes applied to the collapse icon of group rows.\"\n            groupCollapse=\"Collapse Group\"\n\n            i18n-groupExpand=\"kendo.grid.groupExpand|The text of the title and aria-label attributes applied to the expand icon of group rows.\"\n            groupExpand=\"Expand Group\"\n        >\n        </ng-container>\n        <kendo-grid-toolbar class=\"k-toolbar k-grid-toolbar\" *ngIf=\"showTopToolbar\" position=\"top\"></kendo-grid-toolbar>\n        <kendo-pager\n            *ngIf=\"showTopPager\"\n            [tabindex]=\"navigation.pagerEnabled ? '0' : '-1'\"\n            [attr.role]=\"navigation.pagerEnabled ? 'application' : undefined\"\n            class=\"k-grid-pager-top\"\n            [template]=\"pagerTemplate\"\n            [pageSize]=\"pageSize\"\n            [total]=\"view.total\"\n            [skip]=\"skip\"\n            [options]=\"pageable\"\n            (pageChange)=\"notifyPageChange('pager', $event)\">\n        </kendo-pager>\n        <kendo-grid-group-panel\n            *ngIf=\"showGroupPanel\"\n            [text]=\"groupableEmptyText\"\n            [groups]=\"group\"\n            (change)=\"groupChange.emit($event)\">\n        </kendo-grid-group-panel>\n        <div #ariaRoot\n            class=\"k-grid-aria-root\"\n            role=\"grid\"\n            [attr.aria-label]=\"ariaLabel\"\n            [attr.aria-rowcount]=\"ariaRowCount\"\n            [attr.aria-colcount]=\"ariaColCount\">\n        <ng-container *ngIf=\"isScrollable\">\n            <div *ngIf=\"!hideHeader\"\n                class=\"k-grid-header\"\n                role=\"presentation\"\n                [style.padding]=\"headerPadding\">\n                <div *ngIf=\"isLocked\"\n                     #lockedHeader\n                     role=\"presentation\"\n                     class=\"k-grid-header-locked\"\n                     [style.width.px]=\"lockedWidth\">\n                    <table [locked]=\"true\" role=\"presentation\" [style.width.px]=\"lockedWidth\">\n                        <colgroup kendoGridColGroup\n                            role=\"presentation\"\n                            [columns]=\"$any(lockedLeafColumns)\"\n                            [groups]=\"group\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </colgroup>\n                        <thead kendoGridHeader\n                            [resizable]=\"resizable\"\n                            [scrollable]=\"true\"\n                            [columns]=\"$any(lockedColumns)\"\n                            [totalColumnLevels]=\"totalColumnLevels\"\n                            [sort]=\"sort\"\n                            [groups]=\"group\"\n                            [filter]=\"filter\"\n                            [filterable]=\"filterable\"\n                            [groupable]=\"showGroupPanel\"\n                            [reorderable]=\"reorderable\"\n                            [sortable]=\"sortable\"\n                            [columnMenu]=\"columnMenuOptions\"\n                            [columnMenuTemplate]=\"columnMenuTemplate\"\n                            [totalColumnsCount]=\"leafColumns.length\"\n                            [detailTemplate]=\"detailTemplate\"\n                            [tabIndex]=\"navigation.tableEnabled ? '-1' : '0'\">\n                        </thead>\n                    </table>\n                </div><div #header class=\"k-grid-header-wrap\" role=\"presentation\" data-scrollable\n                    [kendoGridResizableContainer]=\"lockedLeafColumns.length > 0\"\n                    [lockedWidth]=\"lockedWidth + scrollbarWidth + 2\">\n                    <table role=\"presentation\" [style.width.px]=\"nonLockedWidth\" [virtualColumns]=\"virtualColumns\">\n                        <colgroup kendoGridColGroup\n                            role=\"presentation\"\n                            [columns]=\"headerLeafColumns\"\n                            [groups]=\"isLocked ? [] : group\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </colgroup>\n                        <thead kendoGridHeader\n                            [resizable]=\"resizable\"\n                            role=\"presentation\"\n                            [scrollable]=\"true\"\n                            [columns]=\"headerColumns\"\n                            [totalColumnLevels]=\"totalColumnLevels\"\n                            [sort]=\"sort\"\n                            [filter]=\"filter\"\n                            [filterable]=\"filterable\"\n                            [groupable]=\"showGroupPanel\"\n                            [reorderable]=\"reorderable\"\n                            [groups]=\"isLocked ? [] : group\"\n                            [sortable]=\"sortable\"\n                            [columnMenu]=\"columnMenuOptions\"\n                            [columnMenuTemplate]=\"columnMenuTemplate\"\n                            [lockedColumnsCount]=\"lockedLeafColumns.length\"\n                            [totalColumnsCount]=\"leafColumns.length\"\n                            [detailTemplate]=\"detailTemplate\"\n                            [tabIndex]=\"navigation.tableEnabled ? '-1' : '0'\">\n                        </thead>\n                    </table>\n                    <div *ngIf=\"virtualColumns\" class=\"k-width-container\" role=\"presentation\">\n                        <div [style.width.px]=\"columnsContainer.unlockedWidth\"></div>\n                    </div>\n                </div>\n            </div>\n            <kendo-grid-list\n                [data]=\"$any(view)\"\n                [rowHeight]=\"rowHeight\"\n                [detailRowHeight]=\"detailRowHeight\"\n                [total]=\"totalCount\"\n                [take]=\"pageSize\"\n                [groups]=\"group\"\n                [groupable]=\"groupable\"\n                [skip]=\"skip\"\n                [trackBy]=\"trackBy\"\n                [columns]=\"columnsContainer\"\n                [selectable]=\"selectable\"\n                [filterable]=\"filterable\"\n                [detailTemplate]=\"detailTemplate\"\n                [noRecordsTemplate]=\"noRecordsTemplate\"\n                (pageChange)=\"notifyPageChange('list', $event)\"\n                [rowClass]=\"rowClass\"\n                [rowSticky]=\"rowSticky\"\n                [loading]=\"loading\"\n                [isVirtual]=\"isVirtual\"\n                [cellLoadingTemplate]=\"cellLoadingTemplate?.templateRef\"\n                [loadingTemplate]=\"loadingTemplate?.templateRef\"\n                [virtualColumns]=\"virtualColumns\"\n                (scrollBottom)=\"notifyScrollBottom()\"\n                (contentScroll)=\"contentScroll.emit($event)\"\n                kendoDraggable\n                kendoGridSelectionMarquee\n                [enableDrag]=\"marqueeSelection\"\n                [sort]=\"sort\"\n                >\n            </kendo-grid-list>\n            <div\n                *ngIf=\"showFooter\"\n                class=\"k-grid-footer\"\n                [style.padding]=\"headerPadding\">\n                <div\n                    *ngIf=\"lockedLeafColumns.length\"\n                    class=\"k-grid-footer-locked\"\n                    [style.width.px]=\"lockedWidth\">\n                    <table role=\"presentation\" [locked]=\"true\" [style.width.px]=\"lockedWidth\">\n                        <colgroup kendoGridColGroup\n                            [columns]=\"$any(lockedLeafColumns)\"\n                            [groups]=\"group\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </colgroup>\n                        <tfoot kendoGridFooter\n                            [scrollable]=\"true\"\n                            [groups]=\"group\"\n                            [columns]=\"$any(lockedLeafColumns)\"\n                            [detailTemplate]=\"detailTemplate\"\n                            [logicalRowIndex]=\"ariaRowCount\">\n                        </tfoot>\n                    </table>\n                </div><div #footer\n                    class=\"k-grid-footer-wrap\" data-scrollable\n                    [kendoGridResizableContainer]=\"lockedLeafColumns.length > 0\"\n                    [lockedWidth]=\"lockedWidth + scrollbarWidth + 3\">\n                    <table role=\"presentation\" [style.width.px]=\"nonLockedWidth\">\n                        <colgroup kendoGridColGroup\n                            [columns]=\"$any(nonLockedLeafColumns)\"\n                            [groups]=\"isLocked ? [] : group\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </colgroup>\n                        <tfoot kendoGridFooter\n                            [logicalRowIndex]=\"ariaRowCount\"\n                            [scrollable]=\"true\"\n                            [groups]=\"isLocked ? [] : group\"\n                            [columns]=\"$any(nonLockedLeafColumns)\"\n                            [lockedColumnsCount]=\"lockedLeafColumns.length\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </tfoot>\n                    </table>\n                </div>\n            </div>\n        </ng-container>\n        <ng-container *ngIf=\"!isScrollable\">\n            <table [style.table-layout]=\"resizable ? 'fixed' : null\">\n                <colgroup kendoGridColGroup\n                    [columns]=\"$any(leafColumns)\"\n                    [groups]=\"group\"\n                    [detailTemplate]=\"detailTemplate\">\n                </colgroup>\n                <thead kendoGridHeader\n                    *ngIf=\"!hideHeader\"\n                    [resizable]=\"resizable\"\n                    [scrollable]=\"false\"\n                    [columns]=\"$any(visibleColumns)\"\n                    [totalColumnLevels]=\"totalColumnLevels\"\n                    [groups]=\"group\"\n                    [groupable]=\"showGroupPanel\"\n                    [reorderable]=\"reorderable\"\n                    [sort]=\"sort\"\n                    [sortable]=\"sortable\"\n                    [filter]=\"filter\"\n                    [filterable]=\"filterable\"\n                    [columnMenu]=\"columnMenuOptions\"\n                    [columnMenuTemplate]=\"columnMenuTemplate\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [tabIndex]=\"navigation.tableEnabled ? '-1' : '0'\">\n                </thead>\n                <tbody kendoGridTableBody\n                    [isLoading]=\"loading\"\n                    [groups]=\"group\"\n                    [data]=\"$any(view)\"\n                    [skip]=\"skip\"\n                    [columns]=\"$any(leafColumns)\"\n                    [selectable]=\"selectable\"\n                    [filterable]=\"filterable\"\n                    [noRecordsTemplate]=\"noRecordsTemplate\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [showGroupFooters]=\"showGroupFooters\"\n                    [trackBy]=\"trackBy\"\n                    [rowClass]=\"rowClass\"\n                    kendoDraggable\n                    kendoGridSelectionMarquee\n                    [enableDrag]=\"marqueeSelection\">\n                </tbody>\n                <tfoot kendoGridFooter\n                    *ngIf=\"showFooter\"\n                    [scrollable]=\"false\"\n                    [logicalRowIndex]=\"ariaRowCount\"\n                    [groups]=\"group\"\n                    [columns]=\"$any(leafColumns)\"\n                    [detailTemplate]=\"detailTemplate\">\n                </tfoot>\n            </table>\n        </ng-container>\n        <div [loadingTemplate]=\"loadingTemplate\" *ngIf=\"loading\" kendoGridLoading>\n        </div>\n        </div>\n        <kendo-pager\n            *ngIf=\"showBottomPager\"\n            [tabindex]=\"navigation.pagerEnabled ? '0' : '-1'\"\n            [attr.role]=\"navigation.pagerEnabled ? 'application' : undefined\"\n            [template]=\"pagerTemplate\"\n            [pageSize]=\"pageSize\"\n            [total]=\"view.total\"\n            [skip]=\"skip\"\n            [options]=\"pageable\"\n            (pageChange)=\"notifyPageChange('pager', $event)\">\n        </kendo-pager>\n        <kendo-grid-toolbar class=\"k-toolbar k-grid-toolbar k-grid-toolbar-bottom\" *ngIf=\"showBottomToolbar\" position=\"bottom\"></kendo-grid-toolbar>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: BrowserSupportService }, { type: SelectionService }, { type: CellSelectionService }, { type: i0.ElementRef }, { type: GroupInfoService }, { type: GroupsService }, { type: ChangeNotificationService }, { type: DetailsService }, { type: EditService }, { type: FilterService }, { type: PDFService }, { type: ResponsiveService }, { type: i0.Renderer2 }, { type: ExcelService }, { type: i0.NgZone }, { type: ScrollSyncService }, { type: DomEventsService }, { type: ColumnResizingService }, { type: i0.ChangeDetectorRef }, { type: ColumnReorderService }, { type: ColumnInfoService }, { type: NavigationService }, { type: SortService }, { type: ScrollRequestService }, { type: i1.LocalizationService }, { type: ContextService }]; }, propDecorators: { data: [{\n                type: Input\n            }], pageSize: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], rowHeight: [{\n                type: Input\n            }], detailRowHeight: [{\n                type: Input\n            }], skip: [{\n                type: Input\n            }], scrollable: [{\n                type: Input\n            }], selectable: [{\n                type: Input\n            }], sort: [{\n                type: Input\n            }], trackBy: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], group: [{\n                type: Input\n            }], virtualColumns: [{\n                type: Input\n            }], filterable: [{\n                type: Input\n            }], sortable: [{\n                type: Input\n            }], pageable: [{\n                type: Input\n            }], groupable: [{\n                type: Input\n            }], navigable: [{\n                type: Input\n            }], navigatable: [{\n                type: Input\n            }], autoSize: [{\n                type: Input\n            }], rowClass: [{\n                type: Input\n            }], rowSticky: [{\n                type: Input\n            }], rowSelected: [{\n                type: Input\n            }], cellSelected: [{\n                type: Input\n            }], resizable: [{\n                type: Input\n            }], reorderable: [{\n                type: Input\n            }], loading: [{\n                type: Input\n            }], columnMenu: [{\n                type: Input\n            }], hideHeader: [{\n                type: Input\n            }], filterChange: [{\n                type: Output\n            }], pageChange: [{\n                type: Output\n            }], groupChange: [{\n                type: Output\n            }], sortChange: [{\n                type: Output\n            }], selectionChange: [{\n                type: Output\n            }], dataStateChange: [{\n                type: Output\n            }], groupExpand: [{\n                type: Output\n            }], groupCollapse: [{\n                type: Output\n            }], detailExpand: [{\n                type: Output\n            }], detailCollapse: [{\n                type: Output\n            }], edit: [{\n                type: Output\n            }], cancel: [{\n                type: Output\n            }], save: [{\n                type: Output\n            }], remove: [{\n                type: Output\n            }], add: [{\n                type: Output\n            }], cellClose: [{\n                type: Output\n            }], cellClick: [{\n                type: Output\n            }], pdfExport: [{\n                type: Output\n            }], excelExport: [{\n                type: Output\n            }], columnResize: [{\n                type: Output\n            }], columnReorder: [{\n                type: Output\n            }], columnVisibilityChange: [{\n                type: Output\n            }], columnLockedChange: [{\n                type: Output\n            }], columnStickyChange: [{\n                type: Output\n            }], scrollBottom: [{\n                type: Output\n            }], contentScroll: [{\n                type: Output\n            }], columns: [{\n                type: ContentChildren,\n                args: [ColumnBase]\n            }], dir: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-grid']\n            }], lockedClasses: [{\n                type: HostBinding,\n                args: ['class.k-grid-lockedcolumns']\n            }], virtualClasses: [{\n                type: HostBinding,\n                args: ['class.k-grid-virtual']\n            }], noScrollbarClass: [{\n                type: HostBinding,\n                args: ['class.k-grid-no-scrollbar']\n            }], detailTemplateChildren: [{\n                type: ContentChildren,\n                args: [DetailTemplateDirective]\n            }], cellLoadingTemplateChildren: [{\n                type: ContentChildren,\n                args: [CellLoadingTemplateDirective]\n            }], loadingTemplateChildren: [{\n                type: ContentChildren,\n                args: [LoadingTemplateDirective]\n            }], noRecordsTemplateChildren: [{\n                type: ContentChildren,\n                args: [NoRecordsTemplateDirective]\n            }], pagerTemplateChildren: [{\n                type: ContentChildren,\n                args: [PagerTemplateDirective]\n            }], toolbarTemplateChildren: [{\n                type: ContentChildren,\n                args: [ToolbarTemplateDirective]\n            }], columnMenuTemplates: [{\n                type: ContentChildren,\n                args: [ColumnMenuTemplateDirective]\n            }], lockedHeader: [{\n                type: ViewChild,\n                args: ['lockedHeader', { static: false }]\n            }], header: [{\n                type: ViewChild,\n                args: ['header', { static: false }]\n            }], footer: [{\n                type: ViewChildren,\n                args: ['footer']\n            }], ariaRoot: [{\n                type: ViewChild,\n                args: ['ariaRoot', { static: true }]\n            }], isDetailExpanded: [{\n                type: Input\n            }], isGroupExpanded: [{\n                type: Input\n            }] } });\n\n/**\n * A directive which encapsulates the in-memory handling of data operations such as [paging]({% slug paging_grid %}),\n * [sorting]({% slug sorting_grid %}), and [grouping]({% slug grouping_grid %})\n * ([more information and examples]({% slug local_data_grid %}#toc-using-the-data-binding-directive)).\n */\nclass DataBindingDirective {\n    constructor(grid, changeDetector, localDataChangesService) {\n        this.grid = grid;\n        this.changeDetector = changeDetector;\n        this.localDataChangesService = localDataChangesService;\n        this.state = {\n            skip: 0\n        };\n        this.originalData = [];\n        if (localDataChangesService) {\n            this.dataChangedSubscription = this.localDataChangesService.changes.subscribe(this.rebind.bind(this));\n        }\n    }\n    /**\n     * Defines the number of records that will be skipped by the pager.\n     */\n    set skip(value) {\n        if (!isPresent(value)) {\n            value = 0;\n        }\n        this.grid.skip = this.state.skip = value;\n    }\n    /**\n     * Defines the descriptors by which the data will be sorted.\n     */\n    set sort(value) {\n        this.grid.sort = this.state.sort = value;\n    }\n    /**\n     * Defines the descriptor by which the data will be filtered.\n     */\n    set filter(value) {\n        this.grid.filter = this.state.filter = value;\n    }\n    /**\n     * Defines the page size used by the Grid pager.\n     */\n    set pageSize(value) {\n        this.grid.pageSize = this.state.take = value;\n    }\n    /**\n     * The descriptors by which the data will be grouped.\n     */\n    set group(value) {\n        this.grid.group = this.state.group = value;\n    }\n    /**\n     * The array of data which will be used to populate the Grid.\n     */\n    set data(value) {\n        this.originalData = value || [];\n        if (this.localDataChangesService) {\n            this.localDataChangesService.data = value;\n        }\n        this.dataChanged = true;\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        this.applyState(this.state);\n        this.stateChangeSubscription = this.grid\n            .dataStateChange\n            .subscribe(this.onStateChange.bind(this));\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        if (this.stateChangeSubscription) {\n            this.stateChangeSubscription.unsubscribe();\n        }\n        if (this.dataChangedSubscription) {\n            this.dataChangedSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes) {\n        if (anyChanged([\"pageSize\", \"skip\", \"sort\", \"group\", \"filter\"], changes)) {\n            this.rebind();\n        }\n    }\n    ngDoCheck() {\n        if (this.dataChanged) {\n            this.updateGridData();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onStateChange(state) {\n        this.applyState(state);\n        this.rebind();\n    }\n    /**\n     * @hidden\n     */\n    rebind() {\n        this.data = this.originalData;\n        this.updateGridData();\n        this.notifyDataChange();\n    }\n    /**\n     * Notifies the Grid that its data has changed.\n     */\n    notifyDataChange() {\n        this.grid.onDataChange();\n        if (this.changeDetector) {\n            this.changeDetector.markForCheck();\n        }\n    }\n    process(state) {\n        return process(this.originalData, state);\n    }\n    applyState({ skip, take, sort, group, filter }) {\n        this.skip = skip;\n        this.pageSize = take;\n        this.sort = sort;\n        this.group = group;\n        this.filter = filter;\n    }\n    updateGridData() {\n        this.grid.data = this.process(this.state);\n        this.dataChanged = false;\n    }\n}\nDataBindingDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DataBindingDirective, deps: [{ token: GridComponent }, { token: i0.ChangeDetectorRef }, { token: LocalDataChangesService }], target: i0.ɵɵFactoryTarget.Directive });\nDataBindingDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DataBindingDirective, selector: \"[kendoGridBinding]\", inputs: { skip: \"skip\", sort: \"sort\", filter: \"filter\", pageSize: \"pageSize\", group: \"group\", data: [\"kendoGridBinding\", \"data\"] }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DataBindingDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridBinding]'\n                }]\n        }], ctorParameters: function () { return [{ type: GridComponent }, { type: i0.ChangeDetectorRef }, { type: LocalDataChangesService }]; }, propDecorators: { skip: [{\n                type: Input\n            }], sort: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], pageSize: [{\n                type: Input\n            }], group: [{\n                type: Input\n            }], data: [{\n                type: Input,\n                args: [\"kendoGridBinding\"]\n            }] } });\n\n/**\n * A directive which stores the row selection state of the Grid in memory\n * ([see example]({% slug selection_grid %}#toc-during-data-operations)).\n */\nclass SelectionDirective extends Selection {\n    constructor(ctx, cd) {\n        super(ctx, cd);\n        this.ctx = ctx;\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        if (this.ctx.grid.selectable === false) {\n            this.ctx.grid.selectable = true;\n        }\n        this.ctx.grid.selectionDirective = this;\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        super.destroy();\n    }\n}\nSelectionDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SelectionDirective, deps: [{ token: ContextService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\nSelectionDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: SelectionDirective, selector: \"[kendoGridSelectBy]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SelectionDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridSelectBy]'\n                }]\n        }], ctorParameters: function () { return [{ type: ContextService }, { type: i0.ChangeDetectorRef }]; } });\n\n/**\n * A directive which controls the expanded state of the master detail rows.\n */\nclass ExpandDetailsDirective {\n    constructor(grid) {\n        this.grid = grid;\n        /**\n         * Fires when the expandedDetailKeys are changed.\n         */\n        this.expandedDetailKeysChange = new EventEmitter();\n        /**\n         * Defines the collection that will store the expanded keys.\n         */\n        this.expandedDetailKeys = [];\n        /**\n         * Specifies if the items should be initially expanded.\n         * When set to `true` items added to the `expandedDetailKeys` collection will be collapsed, and items that are not present in it will be expanded.\n         *\n         * @default false\n         */\n        this.initiallyExpanded = false;\n        this.expandedState = new Set();\n        this.subscriptions = new Subscription();\n        this.grid.isDetailExpanded = this.isExpanded.bind(this);\n        this.subscriptions.add(merge(this.grid.detailExpand.pipe(map(e => (Object.assign({ expand: true }, e)))), this.grid.detailCollapse.pipe(map(e => (Object.assign({ expand: false }, e))))).subscribe(this.toggleState.bind(this)));\n    }\n    /**\n     * Defines the item key that will be stored in the `expandedDetailKeys` collection ([see example]({% slug master_detail_expanded_state_grid %}#toc-built-in-directive)).\n     */\n    get expandDetailsKey() {\n        return this._expandBy;\n    }\n    set expandDetailsKey(key) {\n        if (isString(key)) {\n            this._expandBy = getter(key);\n        }\n        else {\n            this._expandBy = key;\n        }\n    }\n    /**\n     *\n     * @hidden\n     * A deprecated alias for setting the `expandDetailsKey` property.\n     */\n    get expandDetailBy() {\n        return this.expandDetailsKey;\n    }\n    set expandDetailBy(key) {\n        this.expandDetailsKey = key;\n    }\n    ngOnChanges(changes) {\n        // skip reinitialization if the user data is the same as the last state change\n        if (isPresent(changes.expandedDetailKeys) && this.lastExpandedState !== this.expandedDetailKeys) {\n            this.expandedState = new Set(this.expandedDetailKeys);\n        }\n    }\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n    }\n    get keyGetter() {\n        return this._expandBy || getter(undefined);\n    }\n    /**\n     * @hidden\n     */\n    isExpanded(args) {\n        const key = this.keyGetter(args.dataItem);\n        const hasKey = this.expandedState.has(key);\n        // when [initiallyExpanded]=\"true\" a present key means the corresponding detail row is collapsed\n        return this.initiallyExpanded ? !hasKey : hasKey;\n    }\n    toggleState(args) {\n        const key = this.keyGetter(args.dataItem);\n        if (Boolean(this.initiallyExpanded) !== args.expand) {\n            this.expandedState.add(key);\n        }\n        else {\n            this.expandedState.delete(key);\n        }\n        this.notifyChange();\n    }\n    notifyChange() {\n        this.lastExpandedState = Array.from(this.expandedState);\n        this.expandedDetailKeysChange.emit(this.lastExpandedState);\n    }\n}\nExpandDetailsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExpandDetailsDirective, deps: [{ token: GridComponent }], target: i0.ɵɵFactoryTarget.Directive });\nExpandDetailsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ExpandDetailsDirective, selector: \"[kendoGridExpandDetailsBy]\", inputs: { expandDetailsKey: [\"kendoGridExpandDetailsBy\", \"expandDetailsKey\"], expandDetailBy: \"expandDetailBy\", expandedDetailKeys: \"expandedDetailKeys\", initiallyExpanded: \"initiallyExpanded\" }, outputs: { expandedDetailKeysChange: \"expandedDetailKeysChange\" }, exportAs: [\"kendoGridExpandDetailsBy\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExpandDetailsDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridExpandDetailsBy]',\n                    exportAs: 'kendoGridExpandDetailsBy'\n                }]\n        }], ctorParameters: function () { return [{ type: GridComponent }]; }, propDecorators: { expandedDetailKeysChange: [{\n                type: Output\n            }], expandDetailsKey: [{\n                type: Input,\n                args: ['kendoGridExpandDetailsBy']\n            }], expandDetailBy: [{\n                type: Input\n            }], expandedDetailKeys: [{\n                type: Input\n            }], initiallyExpanded: [{\n                type: Input\n            }] } });\n\nconst mapParentGroup = (parentGroup) => {\n    const parentGroupKeys = [];\n    while (parentGroup) {\n        parentGroupKeys.push({ field: parentGroup.group.field, value: parentGroup.group.value });\n        parentGroup = parentGroup.parentGroup;\n    }\n    return parentGroupKeys;\n};\nconst DEFAULT_KEY_GETTER = (groupRowArgs) => ({\n    field: groupRowArgs.group.field,\n    value: groupRowArgs.group.value,\n    parentGroupKeys: mapParentGroup(groupRowArgs.parentGroup)\n});\n/**\n * A directive which controls the expanded state of the group rows\n * ([see example]({% slug groups_expanded_state_grid %}#toc-built-in-directive)).\n */\nclass ExpandGroupDirective {\n    constructor(grid) {\n        this.grid = grid;\n        /**\n         * Fires when the expandedGroupKeys are changed.\n         */\n        this.expandedGroupKeysChange = new EventEmitter();\n        /**\n         * Specifies if the group items should be initially expanded.\n         * @default false\n         */\n        this.groupsInitiallyExpanded = false;\n        this.subscriptions = new Subscription();\n        this.grid.isGroupExpanded = this.isExpanded.bind(this);\n        this.subscriptions.add(merge(this.grid.groupExpand.pipe(map(e => (Object.assign({ expand: true }, e)))), this.grid.groupCollapse.pipe(map(e => (Object.assign({ expand: false }, e))))).subscribe(this.toggleState.bind(this)));\n    }\n    /**\n     * Defines the item format that will be stored in the `expandedGroupKeys`\n     * ([see example]({% slug groups_expanded_state_grid %}#toc-custom-group-key-format)).\n     */\n    get expandGroupBy() {\n        return this._expandGroupBy;\n    }\n    set expandGroupBy(key) {\n        if (typeof key === 'function') {\n            this._expandGroupBy = key;\n        }\n    }\n    /**\n     * Defines the collection that will store the expanded group keys.\n     */\n    get expandedGroupKeys() {\n        return this._expandedGroupKeys;\n    }\n    set expandedGroupKeys(expandedGroups) {\n        this._expandedGroupKeys = (expandedGroups || []).slice();\n    }\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n    }\n    get keyGetter() {\n        return this.expandGroupBy || DEFAULT_KEY_GETTER;\n    }\n    /**\n     * @hidden\n     */\n    isExpanded(groupArgs) {\n        const itemIndex = this.getItemIndex(groupArgs);\n        return itemIndex > -1 ? !this.groupsInitiallyExpanded : this.groupsInitiallyExpanded;\n    }\n    getItemIndex(groupArgs) {\n        if (this.expandGroupBy) {\n            return this.expandedGroupKeys.indexOf(this.keyGetter(groupArgs));\n        }\n        return this.expandedGroupKeys.findIndex(item => {\n            let index = 0;\n            let parentGroup = groupArgs.parentGroup;\n            while (isPresent(parentGroup)) {\n                if (!isPresent(item.parentGroupKeys) || !isPresent(item.parentGroupKeys[index]) ||\n                    parentGroup.group.value !== item.parentGroupKeys[index].value ||\n                    parentGroup.group.field !== item.parentGroupKeys[index].field) {\n                    return false;\n                }\n                parentGroup = parentGroup.parentGroup;\n                index++;\n            }\n            return item.value === groupArgs.group.value && item.field === groupArgs.group.field;\n        });\n    }\n    toggleState(groupArgs) {\n        const key = this.keyGetter(groupArgs);\n        if (Boolean(this.groupsInitiallyExpanded) !== groupArgs.expand) {\n            this.expandedGroupKeys.push(key);\n        }\n        else {\n            const index = this.expandedGroupKeys.indexOf(key);\n            this.expandedGroupKeys.splice(index, 1);\n        }\n        this.expandedGroupKeysChange.emit(this.expandedGroupKeys.slice());\n    }\n}\nExpandGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExpandGroupDirective, deps: [{ token: GridComponent }], target: i0.ɵɵFactoryTarget.Directive });\nExpandGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ExpandGroupDirective, selector: \"[kendoGridExpandGroupBy]\", inputs: { expandGroupBy: [\"kendoGridExpandGroupBy\", \"expandGroupBy\"], expandedGroupKeys: \"expandedGroupKeys\", groupsInitiallyExpanded: \"groupsInitiallyExpanded\" }, outputs: { expandedGroupKeysChange: \"expandedGroupKeysChange\" }, exportAs: [\"kendoGridExpandGroupBy\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExpandGroupDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridExpandGroupBy]',\n                    exportAs: 'kendoGridExpandGroupBy'\n                }]\n        }], ctorParameters: function () { return [{ type: GridComponent }]; }, propDecorators: { expandedGroupKeysChange: [{\n                type: Output\n            }], expandGroupBy: [{\n                type: Input,\n                args: ['kendoGridExpandGroupBy']\n            }], expandedGroupKeys: [{\n                type: Input\n            }], groupsInitiallyExpanded: [{\n                type: Input\n            }] } });\n\n/**\n * Custom component messages override default component messages\n * ([see example]({% slug globalization_grid %}#toc-localization)).\n */\nclass CustomMessagesComponent extends GridMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nCustomMessagesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CustomMessagesComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nCustomMessagesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: CustomMessagesComponent, selector: \"kendo-grid-messages\", providers: [\n        {\n            provide: GridMessages,\n            useExisting: forwardRef(() => CustomMessagesComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CustomMessagesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: GridMessages,\n                            useExisting: forwardRef(() => CustomMessagesComponent)\n                        }\n                    ],\n                    selector: 'kendo-grid-messages',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n// eslint-disable no-access-missing-member\nconst stringOperators = localizeOperators({\n    \"filterContainsOperator\": \"contains\",\n    \"filterNotContainsOperator\": \"doesnotcontain\",\n    \"filterEqOperator\": \"eq\",\n    \"filterNotEqOperator\": \"neq\",\n    \"filterStartsWithOperator\": \"startswith\",\n    \"filterEndsWithOperator\": \"endswith\",\n    \"filterIsNullOperator\": \"isnull\",\n    \"filterIsNotNullOperator\": \"isnotnull\",\n    \"filterIsEmptyOperator\": \"isempty\",\n    \"filterIsNotEmptyOperator\": \"isnotempty\"\n});\n/**\n * @hidden\n */\nclass AutoCompleteFilterCellComponent extends BaseFilterCellComponent {\n    constructor(filterService, column, localization) {\n        super(filterService);\n        this.localization = localization;\n        this.showOperators = true;\n        this.defaultOperators = stringOperators(this.localization);\n        this.column = column;\n    }\n    set valueField(value) {\n        this._valueField = value;\n    }\n    get valueField() {\n        return this._valueField ? this._valueField : this.column.field;\n    }\n    get currentFilter() {\n        return this.filterByField(this.column.field);\n    }\n    get currentOperator() {\n        return this.currentFilter ? this.currentFilter.operator : \"contains\";\n    }\n}\nAutoCompleteFilterCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: AutoCompleteFilterCellComponent, deps: [{ token: FilterService }, { token: ColumnComponent }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nAutoCompleteFilterCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: AutoCompleteFilterCellComponent, selector: \"kendo-grid-autocomplete-filter-cell\", inputs: { showOperators: \"showOperators\", column: \"column\", filter: \"filter\", data: \"data\", valueField: \"valueField\" }, usesInheritance: true, ngImport: i0, template: `\n        <kendo-grid-filter-wrapper-cell\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [showOperators]=\"showOperators\">\n            <kendo-autocomplete\n                kendoFilterInput\n                [data]=\"data\"\n                [valueField]=\"valueField\"\n                [value]=\"currentFilter?.value\">\n            </kendo-autocomplete>\n        </kendo-grid-filter-wrapper-cell>\n    `, isInline: true, components: [{ type: FilterCellWrapperComponent, selector: \"kendo-grid-filter-wrapper-cell\", inputs: [\"showOperators\"] }, { type: i1$4.AutoCompleteComponent, selector: \"kendo-autocomplete\", inputs: [\"highlightFirst\", \"focusableId\", \"data\", \"value\", \"valueField\", \"placeholder\", \"popupSettings\", \"listHeight\", \"loading\", \"clearButton\", \"suggest\", \"disabled\", \"itemDisabled\", \"readonly\", \"tabindex\", \"tabIndex\", \"filterable\", \"virtual\", \"size\", \"rounded\", \"fillMode\"], outputs: [\"valueChange\", \"filterChange\", \"open\", \"opened\", \"close\", \"closed\", \"focus\", \"blur\"], exportAs: [\"kendoAutoComplete\"] }], directives: [{ type: FilterInputDirective, selector: \"[kendoFilterInput]\", inputs: [\"filterDelay\", \"columnLabel\", \"value\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: AutoCompleteFilterCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-autocomplete-filter-cell',\n                    template: `\n        <kendo-grid-filter-wrapper-cell\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [showOperators]=\"showOperators\">\n            <kendo-autocomplete\n                kendoFilterInput\n                [data]=\"data\"\n                [valueField]=\"valueField\"\n                [value]=\"currentFilter?.value\">\n            </kendo-autocomplete>\n        </kendo-grid-filter-wrapper-cell>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: FilterService }, { type: ColumnComponent }, { type: i1.LocalizationService }]; }, propDecorators: { showOperators: [{\n                type: Input\n            }], column: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], valueField: [{\n                type: Input\n            }] } });\n\nconst exportedModules$5 = [\n    ColumnComponent,\n    ColumnGroupComponent,\n    LogicalCellDirective,\n    LogicalRowDirective,\n    FocusableDirective,\n    FooterTemplateDirective,\n    ColGroupComponent,\n    ResizableContainerDirective,\n    TemplateContextDirective,\n    FieldAccessorPipe,\n    DetailTemplateDirective,\n    SpanColumnComponent,\n    TableDirective,\n    LoadingComponent\n];\n/**\n * @hidden\n */\nclass SharedModule {\n    static exports() {\n        return [\n            ColumnComponent,\n            SpanColumnComponent,\n            ColumnGroupComponent,\n            FooterTemplateDirective,\n            DetailTemplateDirective,\n            FocusableDirective\n        ];\n    }\n}\nSharedModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSharedModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedModule, declarations: [ColumnComponent,\n        ColumnGroupComponent,\n        LogicalCellDirective,\n        LogicalRowDirective,\n        FocusableDirective,\n        FooterTemplateDirective,\n        ColGroupComponent,\n        ResizableContainerDirective,\n        TemplateContextDirective,\n        FieldAccessorPipe,\n        DetailTemplateDirective,\n        SpanColumnComponent,\n        TableDirective,\n        LoadingComponent], imports: [CommonModule], exports: [ColumnComponent,\n        ColumnGroupComponent,\n        LogicalCellDirective,\n        LogicalRowDirective,\n        FocusableDirective,\n        FooterTemplateDirective,\n        ColGroupComponent,\n        ResizableContainerDirective,\n        TemplateContextDirective,\n        FieldAccessorPipe,\n        DetailTemplateDirective,\n        SpanColumnComponent,\n        TableDirective,\n        LoadingComponent, DraggableModule, EventsModule] });\nSharedModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedModule, imports: [[CommonModule], DraggableModule, EventsModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [exportedModules$5],\n                    exports: [exportedModules$5, DraggableModule, EventsModule],\n                    imports: [CommonModule]\n                }]\n        }] });\n\n/**\n * Represents the `Contains` (**Contains**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\nclass ContainsFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"contains\", localization); }\n}\nContainsFilterOperatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContainsFilterOperatorComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nContainsFilterOperatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ContainsFilterOperatorComponent, selector: \"kendo-filter-contains-operator\", providers: [\n        {\n            provide: FilterOperatorBase,\n            useExisting: forwardRef(() => ContainsFilterOperatorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ContainsFilterOperatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: FilterOperatorBase,\n                            useExisting: forwardRef(() => ContainsFilterOperatorComponent)\n                        }\n                    ],\n                    selector: 'kendo-filter-contains-operator',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * Represents the `DoesNotContain` (**Does not contain**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\nclass DoesNotContainFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"doesnotcontain\", localization); }\n}\nDoesNotContainFilterOperatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DoesNotContainFilterOperatorComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nDoesNotContainFilterOperatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DoesNotContainFilterOperatorComponent, selector: \"kendo-filter-not-contains-operator\", providers: [\n        {\n            provide: FilterOperatorBase,\n            useExisting: forwardRef(() => DoesNotContainFilterOperatorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DoesNotContainFilterOperatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: FilterOperatorBase,\n                            useExisting: forwardRef(() => DoesNotContainFilterOperatorComponent)\n                        }\n                    ],\n                    selector: 'kendo-filter-not-contains-operator',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * Represents the `EndsWith` (**Ends with**) string filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\nclass EndsWithFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"endswith\", localization); }\n}\nEndsWithFilterOperatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: EndsWithFilterOperatorComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nEndsWithFilterOperatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: EndsWithFilterOperatorComponent, selector: \"kendo-filter-endswith-operator\", providers: [\n        {\n            provide: FilterOperatorBase,\n            useExisting: forwardRef(() => EndsWithFilterOperatorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: EndsWithFilterOperatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: FilterOperatorBase,\n                            useExisting: forwardRef(() => EndsWithFilterOperatorComponent)\n                        }\n                    ],\n                    selector: 'kendo-filter-endswith-operator',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * Represents the `Equal` (**Is equal to**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\nclass EqualFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"eq\", localization); }\n}\nEqualFilterOperatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: EqualFilterOperatorComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nEqualFilterOperatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: EqualFilterOperatorComponent, selector: \"kendo-filter-eq-operator\", providers: [\n        {\n            provide: FilterOperatorBase,\n            useExisting: forwardRef(() => EqualFilterOperatorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: EqualFilterOperatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: FilterOperatorBase,\n                            useExisting: forwardRef(() => EqualFilterOperatorComponent)\n                        }\n                    ],\n                    selector: 'kendo-filter-eq-operator',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * Represents the `IsEmpty` (**Is empty**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\nclass IsEmptyFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"isempty\", localization); }\n}\nIsEmptyFilterOperatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: IsEmptyFilterOperatorComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nIsEmptyFilterOperatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: IsEmptyFilterOperatorComponent, selector: \"kendo-filter-isempty-operator\", providers: [\n        {\n            provide: FilterOperatorBase,\n            useExisting: forwardRef(() => IsEmptyFilterOperatorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: IsEmptyFilterOperatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: FilterOperatorBase,\n                            useExisting: forwardRef(() => IsEmptyFilterOperatorComponent)\n                        }\n                    ],\n                    selector: 'kendo-filter-isempty-operator',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * Represents the `IsNotEmpty` (**Is not empty**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\nclass IsNotEmptyFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"isnotempty\", localization); }\n}\nIsNotEmptyFilterOperatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: IsNotEmptyFilterOperatorComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nIsNotEmptyFilterOperatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: IsNotEmptyFilterOperatorComponent, selector: \"kendo-filter-isnotempty-operator\", providers: [\n        {\n            provide: FilterOperatorBase,\n            useExisting: forwardRef(() => IsNotEmptyFilterOperatorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: IsNotEmptyFilterOperatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: FilterOperatorBase,\n                            useExisting: forwardRef(() => IsNotEmptyFilterOperatorComponent)\n                        }\n                    ],\n                    selector: 'kendo-filter-isnotempty-operator',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * Represents the `IsNotNull` (**Is not null**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\nclass IsNotNullFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"isnotnull\", localization); }\n}\nIsNotNullFilterOperatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: IsNotNullFilterOperatorComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nIsNotNullFilterOperatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: IsNotNullFilterOperatorComponent, selector: \"kendo-filter-isnotnull-operator\", providers: [\n        {\n            provide: FilterOperatorBase,\n            useExisting: forwardRef(() => IsNotNullFilterOperatorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: IsNotNullFilterOperatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: FilterOperatorBase,\n                            useExisting: forwardRef(() => IsNotNullFilterOperatorComponent)\n                        }\n                    ],\n                    selector: 'kendo-filter-isnotnull-operator',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * Represents the `IsNull` (**Is null**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\nclass IsNullFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"isnull\", localization); }\n}\nIsNullFilterOperatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: IsNullFilterOperatorComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nIsNullFilterOperatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: IsNullFilterOperatorComponent, selector: \"kendo-filter-isnull-operator\", providers: [\n        {\n            provide: FilterOperatorBase,\n            useExisting: forwardRef(() => IsNullFilterOperatorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: IsNullFilterOperatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: FilterOperatorBase,\n                            useExisting: forwardRef(() => IsNullFilterOperatorComponent)\n                        }\n                    ],\n                    selector: 'kendo-filter-isnull-operator',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * Represents the `NotEqual` (**Is not equal to**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\nclass NotEqualFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"neq\", localization); }\n}\nNotEqualFilterOperatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotEqualFilterOperatorComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nNotEqualFilterOperatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: NotEqualFilterOperatorComponent, selector: \"kendo-filter-neq-operator\", providers: [\n        {\n            provide: FilterOperatorBase,\n            useExisting: forwardRef(() => NotEqualFilterOperatorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NotEqualFilterOperatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: FilterOperatorBase,\n                            useExisting: forwardRef(() => NotEqualFilterOperatorComponent)\n                        }\n                    ],\n                    selector: 'kendo-filter-neq-operator',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * Represents the `StartsWith` (**Starts with**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\nclass StartsWithFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"startswith\", localization); }\n}\nStartsWithFilterOperatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: StartsWithFilterOperatorComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nStartsWithFilterOperatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: StartsWithFilterOperatorComponent, selector: \"kendo-filter-startswith-operator\", providers: [\n        {\n            provide: FilterOperatorBase,\n            useExisting: forwardRef(() => StartsWithFilterOperatorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: StartsWithFilterOperatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: FilterOperatorBase,\n                            useExisting: forwardRef(() => StartsWithFilterOperatorComponent)\n                        }\n                    ],\n                    selector: 'kendo-filter-startswith-operator',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/*\n * Represents the `Greater` (**Is greater than**) numeric filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\nclass GreaterFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"gt\", localization); }\n}\nGreaterFilterOperatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GreaterFilterOperatorComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nGreaterFilterOperatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: GreaterFilterOperatorComponent, selector: \"kendo-filter-gt-operator\", providers: [\n        {\n            provide: FilterOperatorBase,\n            useExisting: forwardRef(() => GreaterFilterOperatorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GreaterFilterOperatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: FilterOperatorBase,\n                            useExisting: forwardRef(() => GreaterFilterOperatorComponent)\n                        }\n                    ],\n                    selector: 'kendo-filter-gt-operator',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * Represents the `GreaterOrEqualTo` (**Is greater than or equal to**) numeric filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\nclass GreaterOrEqualToFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"gte\", localization); }\n}\nGreaterOrEqualToFilterOperatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GreaterOrEqualToFilterOperatorComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nGreaterOrEqualToFilterOperatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: GreaterOrEqualToFilterOperatorComponent, selector: \"kendo-filter-gte-operator\", providers: [\n        {\n            provide: FilterOperatorBase,\n            useExisting: forwardRef(() => GreaterOrEqualToFilterOperatorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GreaterOrEqualToFilterOperatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: FilterOperatorBase,\n                            useExisting: forwardRef(() => GreaterOrEqualToFilterOperatorComponent)\n                        }\n                    ],\n                    selector: 'kendo-filter-gte-operator',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/*\n * Represents the `Less` (**Is less than**) numeric filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\nclass LessFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"lt\", localization); }\n}\nLessFilterOperatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LessFilterOperatorComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nLessFilterOperatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LessFilterOperatorComponent, selector: \"kendo-filter-lt-operator\", providers: [\n        {\n            provide: FilterOperatorBase,\n            useExisting: forwardRef(() => LessFilterOperatorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LessFilterOperatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: FilterOperatorBase,\n                            useExisting: forwardRef(() => LessFilterOperatorComponent)\n                        }\n                    ],\n                    selector: 'kendo-filter-lt-operator',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/*\n * Represents the `LessOrEqualTo` (**Is less than or equal to**) numeric filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\nclass LessOrEqualToFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"lte\", localization); }\n}\nLessOrEqualToFilterOperatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LessOrEqualToFilterOperatorComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nLessOrEqualToFilterOperatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LessOrEqualToFilterOperatorComponent, selector: \"kendo-filter-lte-operator\", providers: [\n        {\n            provide: FilterOperatorBase,\n            useExisting: forwardRef(() => LessOrEqualToFilterOperatorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LessOrEqualToFilterOperatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: FilterOperatorBase,\n                            useExisting: forwardRef(() => LessOrEqualToFilterOperatorComponent)\n                        }\n                    ],\n                    selector: 'kendo-filter-lte-operator',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/*\n * Represents the `Greater` (**Is after**) date filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\nclass AfterFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"after\", localization); }\n    /**\n     * @hidden\n     */\n    toJSON() {\n        return {\n            text: this.text,\n            value: \"gt\"\n        };\n    }\n}\nAfterFilterOperatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: AfterFilterOperatorComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nAfterFilterOperatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: AfterFilterOperatorComponent, selector: \"kendo-filter-after-operator\", providers: [\n        {\n            provide: FilterOperatorBase,\n            useExisting: forwardRef(() => AfterFilterOperatorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: AfterFilterOperatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: FilterOperatorBase,\n                            useExisting: forwardRef(() => AfterFilterOperatorComponent)\n                        }\n                    ],\n                    selector: 'kendo-filter-after-operator',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/*\n * Represents the `GreaterOrEqualTo` (**Is after or equal to**) date filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\nclass AfterEqFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"after-eq\", localization); }\n    /**\n     * @hidden\n     */\n    toJSON() {\n        return {\n            text: this.text,\n            value: \"gte\"\n        };\n    }\n}\nAfterEqFilterOperatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: AfterEqFilterOperatorComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nAfterEqFilterOperatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: AfterEqFilterOperatorComponent, selector: \"kendo-filter-after-eq-operator\", providers: [\n        {\n            provide: FilterOperatorBase,\n            useExisting: forwardRef(() => AfterEqFilterOperatorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: AfterEqFilterOperatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: FilterOperatorBase,\n                            useExisting: forwardRef(() => AfterEqFilterOperatorComponent)\n                        }\n                    ],\n                    selector: 'kendo-filter-after-eq-operator',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/*\n * Represents the `LessOrEqualTo` (**Is before or equal to**) date filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\nclass BeforeEqFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"before-eq\", localization); }\n    /**\n     * @hidden\n     */\n    toJSON() {\n        return {\n            text: this.text,\n            value: \"lte\"\n        };\n    }\n}\nBeforeEqFilterOperatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BeforeEqFilterOperatorComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nBeforeEqFilterOperatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: BeforeEqFilterOperatorComponent, selector: \"kendo-filter-before-eq-operator\", providers: [\n        {\n            provide: FilterOperatorBase,\n            useExisting: forwardRef(() => BeforeEqFilterOperatorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BeforeEqFilterOperatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: FilterOperatorBase,\n                            useExisting: forwardRef(() => BeforeEqFilterOperatorComponent)\n                        }\n                    ],\n                    selector: 'kendo-filter-before-eq-operator',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/*\n * Represents the `Less then` (**Is before**) date filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug filter_menu %}#toc-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug filter_menu %}#toc-order-of-filter-operators)\n */\nclass BeforeFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"before\", localization); }\n    /**\n     * @hidden\n     */\n    toJSON() {\n        return {\n            text: this.text,\n            value: \"lt\"\n        };\n    }\n}\nBeforeFilterOperatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BeforeFilterOperatorComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nBeforeFilterOperatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: BeforeFilterOperatorComponent, selector: \"kendo-filter-before-operator\", providers: [\n        {\n            provide: FilterOperatorBase,\n            useExisting: forwardRef(() => BeforeFilterOperatorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BeforeFilterOperatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: FilterOperatorBase,\n                            useExisting: forwardRef(() => BeforeFilterOperatorComponent)\n                        }\n                    ],\n                    selector: 'kendo-filter-before-operator',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\nconst FILTER_OPERATORS = [\n    FilterCellOperatorsComponent,\n    ContainsFilterOperatorComponent,\n    DoesNotContainFilterOperatorComponent,\n    EndsWithFilterOperatorComponent,\n    EqualFilterOperatorComponent,\n    IsEmptyFilterOperatorComponent,\n    IsNotEmptyFilterOperatorComponent,\n    IsNotNullFilterOperatorComponent,\n    IsNullFilterOperatorComponent,\n    NotEqualFilterOperatorComponent,\n    StartsWithFilterOperatorComponent,\n    GreaterFilterOperatorComponent,\n    GreaterOrEqualToFilterOperatorComponent,\n    LessFilterOperatorComponent,\n    LessOrEqualToFilterOperatorComponent,\n    AfterFilterOperatorComponent,\n    AfterEqFilterOperatorComponent,\n    BeforeEqFilterOperatorComponent,\n    BeforeFilterOperatorComponent\n];\nconst importedModules$4 = [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    DropDownListModule,\n    AutoCompleteModule,\n    InputsModule,\n    DatePickerModule,\n    PopupModule,\n    SharedModule\n];\nconst COMPONENTS$1 = [\n    FilterInputDirective\n];\n/**\n * @hidden\n */\nclass SharedFilterModule {\n    static exports() {\n        return [\n            ...FILTER_OPERATORS\n        ];\n    }\n}\nSharedFilterModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedFilterModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSharedFilterModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedFilterModule, declarations: [FilterCellOperatorsComponent,\n        ContainsFilterOperatorComponent,\n        DoesNotContainFilterOperatorComponent,\n        EndsWithFilterOperatorComponent,\n        EqualFilterOperatorComponent,\n        IsEmptyFilterOperatorComponent,\n        IsNotEmptyFilterOperatorComponent,\n        IsNotNullFilterOperatorComponent,\n        IsNullFilterOperatorComponent,\n        NotEqualFilterOperatorComponent,\n        StartsWithFilterOperatorComponent,\n        GreaterFilterOperatorComponent,\n        GreaterOrEqualToFilterOperatorComponent,\n        LessFilterOperatorComponent,\n        LessOrEqualToFilterOperatorComponent,\n        AfterFilterOperatorComponent,\n        AfterEqFilterOperatorComponent,\n        BeforeEqFilterOperatorComponent,\n        BeforeFilterOperatorComponent, FilterInputDirective], imports: [CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        DropDownListModule,\n        AutoCompleteModule,\n        InputsModule,\n        DatePickerModule,\n        PopupModule,\n        SharedModule], exports: [FilterCellOperatorsComponent,\n        ContainsFilterOperatorComponent,\n        DoesNotContainFilterOperatorComponent,\n        EndsWithFilterOperatorComponent,\n        EqualFilterOperatorComponent,\n        IsEmptyFilterOperatorComponent,\n        IsNotEmptyFilterOperatorComponent,\n        IsNotNullFilterOperatorComponent,\n        IsNullFilterOperatorComponent,\n        NotEqualFilterOperatorComponent,\n        StartsWithFilterOperatorComponent,\n        GreaterFilterOperatorComponent,\n        GreaterOrEqualToFilterOperatorComponent,\n        LessFilterOperatorComponent,\n        LessOrEqualToFilterOperatorComponent,\n        AfterFilterOperatorComponent,\n        AfterEqFilterOperatorComponent,\n        BeforeEqFilterOperatorComponent,\n        BeforeFilterOperatorComponent, CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        DropDownListModule,\n        AutoCompleteModule,\n        InputsModule,\n        DatePickerModule,\n        PopupModule,\n        SharedModule, FilterInputDirective] });\nSharedFilterModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedFilterModule, imports: [[...importedModules$4], CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        DropDownListModule,\n        AutoCompleteModule,\n        InputsModule,\n        DatePickerModule,\n        PopupModule,\n        SharedModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedFilterModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [FILTER_OPERATORS, COMPONENTS$1],\n                    exports: [FILTER_OPERATORS, importedModules$4, COMPONENTS$1],\n                    imports: [...importedModules$4]\n                }]\n        }] });\n\nconst INTERNAL_COMPONENTS$2 = [\n    FilterRowComponent,\n    FilterCellComponent,\n    FilterCellTemplateDirective,\n    StringFilterCellComponent,\n    NumericFilterCellComponent,\n    AutoCompleteFilterCellComponent,\n    BooleanFilterCellComponent,\n    FilterCellHostDirective,\n    FilterCellWrapperComponent,\n    DateFilterCellComponent\n];\nconst ENTRY_COMPONENTS$1 = [\n    StringFilterCellComponent,\n    NumericFilterCellComponent,\n    BooleanFilterCellComponent,\n    DateFilterCellComponent\n];\n/**\n * @hidden\n */\nclass RowFilterModule {\n    static exports() {\n        return [\n            FilterRowComponent,\n            FilterCellComponent,\n            FilterCellTemplateDirective,\n            FilterCellOperatorsComponent,\n            StringFilterCellComponent,\n            NumericFilterCellComponent,\n            AutoCompleteFilterCellComponent,\n            BooleanFilterCellComponent,\n            DateFilterCellComponent,\n            SharedFilterModule.exports()\n        ];\n    }\n}\nRowFilterModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RowFilterModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRowFilterModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RowFilterModule, declarations: [FilterRowComponent,\n        FilterCellComponent,\n        FilterCellTemplateDirective,\n        StringFilterCellComponent,\n        NumericFilterCellComponent,\n        AutoCompleteFilterCellComponent,\n        BooleanFilterCellComponent,\n        FilterCellHostDirective,\n        FilterCellWrapperComponent,\n        DateFilterCellComponent], imports: [SharedFilterModule], exports: [FilterRowComponent,\n        FilterCellComponent,\n        FilterCellTemplateDirective,\n        StringFilterCellComponent,\n        NumericFilterCellComponent,\n        AutoCompleteFilterCellComponent,\n        BooleanFilterCellComponent,\n        FilterCellHostDirective,\n        FilterCellWrapperComponent,\n        DateFilterCellComponent, SharedFilterModule] });\nRowFilterModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RowFilterModule, imports: [[SharedFilterModule], SharedFilterModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RowFilterModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [INTERNAL_COMPONENTS$2],\n                    entryComponents: ENTRY_COMPONENTS$1,\n                    exports: [INTERNAL_COMPONENTS$2, SharedFilterModule],\n                    imports: [SharedFilterModule]\n                }]\n        }] });\n\nconst importedModules$3 = [\n    CommonModule,\n    InputsModule,\n    LabelModule,\n    DropDownsModule,\n    ResizeSensorModule,\n    SharedModule\n];\nconst INTERNAL_COMPONENTS$1 = [\n    PagerComponent,\n    PagerPrevButtonsComponent,\n    PagerNextButtonsComponent,\n    PagerNumericButtonsComponent,\n    PagerInputComponent,\n    PagerInfoComponent,\n    PagerPageSizesComponent,\n    PagerTemplateDirective,\n    PagerDropDownListDirective,\n    PagerInputDirective\n];\n/**\n * @hidden\n */\nclass PagerModule {\n    static exports() {\n        return [\n            PagerComponent,\n            PagerPrevButtonsComponent,\n            PagerNextButtonsComponent,\n            PagerNumericButtonsComponent,\n            PagerInputComponent,\n            PagerInfoComponent,\n            PagerPageSizesComponent,\n            PagerTemplateDirective,\n            PagerDropDownListDirective,\n            PagerInputDirective\n        ];\n    }\n}\nPagerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPagerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerModule, declarations: [PagerComponent,\n        PagerPrevButtonsComponent,\n        PagerNextButtonsComponent,\n        PagerNumericButtonsComponent,\n        PagerInputComponent,\n        PagerInfoComponent,\n        PagerPageSizesComponent,\n        PagerTemplateDirective,\n        PagerDropDownListDirective,\n        PagerInputDirective], imports: [CommonModule,\n        InputsModule,\n        LabelModule,\n        DropDownsModule,\n        ResizeSensorModule,\n        SharedModule], exports: [PagerComponent,\n        PagerPrevButtonsComponent,\n        PagerNextButtonsComponent,\n        PagerNumericButtonsComponent,\n        PagerInputComponent,\n        PagerInfoComponent,\n        PagerPageSizesComponent,\n        PagerTemplateDirective,\n        PagerDropDownListDirective,\n        PagerInputDirective] });\nPagerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerModule, imports: [[...importedModules$3]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PagerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [INTERNAL_COMPONENTS$1],\n                    exports: [INTERNAL_COMPONENTS$1],\n                    imports: [...importedModules$3]\n                }]\n        }] });\n\nconst exported$1 = [\n    DraggableColumnDirective,\n    DropTargetDirective\n];\n/**\n * @hidden\n */\nclass DragAndDropModule {\n}\nDragAndDropModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DragAndDropModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDragAndDropModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DragAndDropModule, declarations: [DraggableColumnDirective,\n        DropTargetDirective], exports: [DraggableColumnDirective,\n        DropTargetDirective] });\nDragAndDropModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DragAndDropModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DragAndDropModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [exported$1],\n                    exports: [exported$1]\n                }]\n        }] });\n\nconst exportedModules$4 = [\n    GroupHeaderTemplateDirective,\n    GroupHeaderColumnTemplateDirective,\n    GroupFooterTemplateDirective,\n    GroupHeaderComponent,\n    GroupPanelComponent,\n    GroupIndicatorComponent\n];\n/**\n * @hidden\n */\nclass GroupModule {\n    static exports() {\n        return [\n            GroupHeaderTemplateDirective,\n            GroupHeaderColumnTemplateDirective,\n            GroupFooterTemplateDirective\n        ];\n    }\n}\nGroupModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGroupModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupModule, declarations: [GroupHeaderTemplateDirective,\n        GroupHeaderColumnTemplateDirective,\n        GroupFooterTemplateDirective,\n        GroupHeaderComponent,\n        GroupPanelComponent,\n        GroupIndicatorComponent], imports: [CommonModule, SharedModule, DragAndDropModule], exports: [GroupHeaderTemplateDirective,\n        GroupHeaderColumnTemplateDirective,\n        GroupFooterTemplateDirective,\n        GroupHeaderComponent,\n        GroupPanelComponent,\n        GroupIndicatorComponent] });\nGroupModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupModule, imports: [[CommonModule, SharedModule, DragAndDropModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [exportedModules$4],\n                    exports: [exportedModules$4],\n                    imports: [CommonModule, SharedModule, DragAndDropModule]\n                }]\n        }] });\n\nconst INTERNAL_COMPONENTS = [\n    FilterMenuComponent,\n    FilterMenuContainerComponent,\n    FilterMenuInputWrapperComponent,\n    StringFilterMenuInputComponent,\n    StringFilterMenuComponent,\n    FilterMenuTemplateDirective,\n    NumericFilterMenuComponent,\n    NumericFilterMenuInputComponent,\n    DateFilterMenuInputComponent,\n    DateFilterMenuComponent,\n    FilterMenuHostDirective,\n    BooleanFilterMenuComponent,\n    FilterMenuDropDownListDirective,\n    BooleanFilterRadioButtonDirective\n];\nconst ENTRY_COMPONENTS = [\n    StringFilterMenuComponent,\n    NumericFilterMenuComponent,\n    DateFilterMenuComponent,\n    BooleanFilterMenuComponent\n];\n/**\n * @hidden\n */\nclass FilterMenuModule {\n    static exports() {\n        return [\n            StringFilterMenuComponent,\n            FilterMenuTemplateDirective,\n            NumericFilterMenuComponent,\n            DateFilterMenuComponent,\n            BooleanFilterMenuComponent,\n            FilterMenuDropDownListDirective,\n            BooleanFilterRadioButtonDirective,\n            SharedFilterModule.exports()\n        ];\n    }\n}\nFilterMenuModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterMenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFilterMenuModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterMenuModule, declarations: [FilterMenuComponent,\n        FilterMenuContainerComponent,\n        FilterMenuInputWrapperComponent,\n        StringFilterMenuInputComponent,\n        StringFilterMenuComponent,\n        FilterMenuTemplateDirective,\n        NumericFilterMenuComponent,\n        NumericFilterMenuInputComponent,\n        DateFilterMenuInputComponent,\n        DateFilterMenuComponent,\n        FilterMenuHostDirective,\n        BooleanFilterMenuComponent,\n        FilterMenuDropDownListDirective,\n        BooleanFilterRadioButtonDirective], imports: [SharedFilterModule], exports: [FilterMenuComponent,\n        FilterMenuContainerComponent,\n        FilterMenuInputWrapperComponent,\n        StringFilterMenuInputComponent,\n        StringFilterMenuComponent,\n        FilterMenuTemplateDirective,\n        NumericFilterMenuComponent,\n        NumericFilterMenuInputComponent,\n        DateFilterMenuInputComponent,\n        DateFilterMenuComponent,\n        FilterMenuHostDirective,\n        BooleanFilterMenuComponent,\n        FilterMenuDropDownListDirective,\n        BooleanFilterRadioButtonDirective, SharedFilterModule] });\nFilterMenuModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterMenuModule, imports: [[SharedFilterModule], SharedFilterModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterMenuModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [INTERNAL_COMPONENTS],\n                    entryComponents: ENTRY_COMPONENTS,\n                    exports: [INTERNAL_COMPONENTS, SharedFilterModule],\n                    imports: [SharedFilterModule]\n                }]\n        }] });\n\n/**\n * Represents the component for selecting columns in the Grid. To enable the user to show or hide columns,\n * add the component inside a [ToolbarTemplate]({% slug api_grid_toolbartemplatedirective %}) directive.\n *\n * @example\n * ```ts-preview\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\">\n *          <ng-template kendoGridToolbarTemplate>\n *             <kendo-grid-column-chooser></kendo-grid-column-chooser>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [hidden]=\"true\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n * ```\n */\nclass ColumnChooserComponent {\n    constructor(localization, columnInfoService, popupService, ngZone, renderer, changeDetector) {\n        this.localization = localization;\n        this.columnInfoService = columnInfoService;\n        this.popupService = popupService;\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.changeDetector = changeDetector;\n        /**\n         * Specifies if the changes in the visibility of the column will be immediately applied.\n         */\n        this.autoSync = false;\n        /**\n         * Specifies if all columns can be hidden.\n         */\n        this.allowHideAll = true;\n    }\n    get columns() {\n        return this.columnInfoService.leafNamedColumns;\n    }\n    ngOnDestroy() {\n        this.close();\n    }\n    /**\n     * @hidden\n     */\n    toggle(anchor, template) {\n        if (!this.popupRef) {\n            const direction = this.localization.rtl ? 'right' : 'left';\n            this.popupRef = this.popupService.open({\n                anchor: anchor,\n                content: template,\n                positionMode: 'absolute',\n                anchorAlign: { vertical: 'bottom', horizontal: direction },\n                popupAlign: { vertical: 'top', horizontal: direction }\n            });\n            this.renderer.setAttribute(this.popupRef.popupElement, 'dir', this.localization.rtl ? 'rtl' : 'ltr');\n            this.ngZone.runOutsideAngular(() => this.closeClick = this.renderer.listen(\"document\", \"click\", ({ target }) => {\n                if (!closest(target, node => node === this.popupRef.popupElement || node === anchor)) {\n                    this.close();\n                }\n            }));\n        }\n        else {\n            this.close();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onApply(changed) {\n        this.close();\n        if (changed.length) {\n            this.changeDetector.markForCheck();\n            this.columnInfoService.changeVisibility(changed);\n        }\n    }\n    /**\n     * @hidden\n     */\n    onChange(changed) {\n        this.changeDetector.markForCheck();\n        this.columnInfoService.changeVisibility(changed);\n    }\n    close() {\n        if (this.popupRef) {\n            this.popupRef.close();\n            this.popupRef = null;\n        }\n        this.detachClose();\n    }\n    detachClose() {\n        if (this.closeClick) {\n            this.closeClick();\n            this.closeClick = null;\n        }\n    }\n}\nColumnChooserComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnChooserComponent, deps: [{ token: i1.LocalizationService }, { token: ColumnInfoService }, { token: i1$2.PopupService }, { token: i0.NgZone }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nColumnChooserComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnChooserComponent, selector: \"kendo-grid-column-chooser\", inputs: { autoSync: \"autoSync\", allowHideAll: \"allowHideAll\" }, ngImport: i0, template: `\n        <button #anchor\n            type=\"button\"\n            (click)=\"toggle(anchor, template)\"\n            class=\"k-button k-button-flat-base k-button-flat k-icon-button k-button-md k-rounded-md k-button-rectangle k-icon-button\"\n            [attr.title]=\"localization.get('columns')\">\n            <span class=\"k-button-icon k-icon k-i-columns\"></span>\n        </button>\n        <ng-template #template>\n            <span class='k-column-chooser-title'>{{ localization.get('columns') }}</span>\n            <kendo-grid-columnlist\n                [columns]=\"columns\"\n                [applyText]=\"localization.get('columnsApply')\"\n                [resetText]=\"localization.get('columnsReset')\"\n                [autoSync]=\"autoSync\"\n                [allowHideAll]=\"allowHideAll\"\n                (apply)=\"onApply($event)\"\n                (columnChange)=\"onChange($event)\">\n            </kendo-grid-columnlist>\n        </ng-template>\n    `, isInline: true, components: [{ type: ColumnListComponent, selector: \"kendo-grid-columnlist\", inputs: [\"columns\", \"autoSync\", \"allowHideAll\", \"applyText\", \"resetText\", \"actionsClass\", \"isLast\", \"isExpanded\", \"service\"], outputs: [\"reset\", \"apply\", \"columnChange\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnChooserComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-column-chooser',\n                    template: `\n        <button #anchor\n            type=\"button\"\n            (click)=\"toggle(anchor, template)\"\n            class=\"k-button k-button-flat-base k-button-flat k-icon-button k-button-md k-rounded-md k-button-rectangle k-icon-button\"\n            [attr.title]=\"localization.get('columns')\">\n            <span class=\"k-button-icon k-icon k-i-columns\"></span>\n        </button>\n        <ng-template #template>\n            <span class='k-column-chooser-title'>{{ localization.get('columns') }}</span>\n            <kendo-grid-columnlist\n                [columns]=\"columns\"\n                [applyText]=\"localization.get('columnsApply')\"\n                [resetText]=\"localization.get('columnsReset')\"\n                [autoSync]=\"autoSync\"\n                [allowHideAll]=\"allowHideAll\"\n                (apply)=\"onApply($event)\"\n                (columnChange)=\"onChange($event)\">\n            </kendo-grid-columnlist>\n        </ng-template>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: ColumnInfoService }, { type: i1$2.PopupService }, { type: i0.NgZone }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { autoSync: [{\n                type: Input\n            }], allowHideAll: [{\n                type: Input\n            }] } });\n\nconst COMPONENTS = [\n    ColumnListComponent,\n    ColumnChooserComponent,\n    ColumnMenuChooserComponent,\n    ColumnMenuFilterComponent,\n    ColumnMenuItemComponent,\n    ColumnMenuItemContentTemplateDirective,\n    ColumnMenuSortComponent,\n    ColumnMenuComponent,\n    ColumnMenuLockComponent,\n    ColumnMenuTemplateDirective,\n    ColumnMenuContainerComponent,\n    ColumnMenuItemDirective,\n    ColumnMenuStickComponent,\n    ColumnMenuPositionComponent,\n    ColumnMenuAutoSizeColumnComponent,\n    ColumnMenuAutoSizeAllColumnsComponent\n];\n/**\n * @hidden\n */\nclass ColumnMenuModule {\n    static exports() {\n        return [\n            ColumnChooserComponent,\n            ColumnMenuFilterComponent,\n            ColumnMenuItemComponent,\n            ColumnMenuItemContentTemplateDirective,\n            ColumnMenuSortComponent,\n            ColumnMenuLockComponent,\n            ColumnMenuStickComponent,\n            ColumnMenuPositionComponent,\n            ColumnMenuChooserComponent,\n            ColumnMenuTemplateDirective,\n            ColumnMenuContainerComponent,\n            ColumnMenuItemDirective,\n            ColumnMenuComponent,\n            ColumnMenuAutoSizeColumnComponent,\n            ColumnMenuAutoSizeAllColumnsComponent\n        ];\n    }\n}\nColumnMenuModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nColumnMenuModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuModule, declarations: [ColumnListComponent,\n        ColumnChooserComponent,\n        ColumnMenuChooserComponent,\n        ColumnMenuFilterComponent,\n        ColumnMenuItemComponent,\n        ColumnMenuItemContentTemplateDirective,\n        ColumnMenuSortComponent,\n        ColumnMenuComponent,\n        ColumnMenuLockComponent,\n        ColumnMenuTemplateDirective,\n        ColumnMenuContainerComponent,\n        ColumnMenuItemDirective,\n        ColumnMenuStickComponent,\n        ColumnMenuPositionComponent,\n        ColumnMenuAutoSizeColumnComponent,\n        ColumnMenuAutoSizeAllColumnsComponent], imports: [CommonModule, FilterMenuModule], exports: [ColumnListComponent,\n        ColumnChooserComponent,\n        ColumnMenuChooserComponent,\n        ColumnMenuFilterComponent,\n        ColumnMenuItemComponent,\n        ColumnMenuItemContentTemplateDirective,\n        ColumnMenuSortComponent,\n        ColumnMenuComponent,\n        ColumnMenuLockComponent,\n        ColumnMenuTemplateDirective,\n        ColumnMenuContainerComponent,\n        ColumnMenuItemDirective,\n        ColumnMenuStickComponent,\n        ColumnMenuPositionComponent,\n        ColumnMenuAutoSizeColumnComponent,\n        ColumnMenuAutoSizeAllColumnsComponent] });\nColumnMenuModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuModule, imports: [[CommonModule, FilterMenuModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnMenuModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [COMPONENTS],\n                    imports: [CommonModule, FilterMenuModule],\n                    exports: [COMPONENTS]\n                }]\n        }] });\n\nconst exportedModules$3 = [\n    HeaderComponent,\n    HeaderTemplateDirective,\n    ColumnHandleDirective,\n    SelectAllCheckboxDirective\n];\nconst importedModules$2 = [\n    CommonModule,\n    GroupModule,\n    RowFilterModule,\n    FilterMenuModule,\n    SharedModule,\n    DragAndDropModule,\n    ColumnMenuModule\n];\n/**\n * @hidden\n */\nclass HeaderModule {\n    static exports() {\n        return [\n            HeaderTemplateDirective,\n            SelectAllCheckboxDirective\n        ];\n    }\n}\nHeaderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HeaderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHeaderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HeaderModule, declarations: [HeaderComponent,\n        HeaderTemplateDirective,\n        ColumnHandleDirective,\n        SelectAllCheckboxDirective], imports: [CommonModule,\n        GroupModule,\n        RowFilterModule,\n        FilterMenuModule,\n        SharedModule,\n        DragAndDropModule,\n        ColumnMenuModule], exports: [HeaderComponent,\n        HeaderTemplateDirective,\n        ColumnHandleDirective,\n        SelectAllCheckboxDirective] });\nHeaderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HeaderModule, imports: [[...importedModules$2]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HeaderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [exportedModules$3],\n                    exports: [exportedModules$3],\n                    imports: [...importedModules$2]\n                }]\n        }] });\n\n/**\n * Represents the checkbox for selecting columns in the Grid. If the column is\n * defined as empty, it renders a default checkbox for row selection.\n * You can also define the content of the column inside an `<ng-template>` tag.\n * The input requires you to include the `SelectionCheckbox` option.\n *\n * The template context is set to the current data item and the following additional fields are passed:\n * - `columnIndex`&mdash;The current column index.\n * - `rowIndex`&mdash;The current data row index. If inside a new item row, it will be `-1`.\n * - `dataItem`&mdash;The current data item.\n * - `column`&mdash;The current column instance.\n * - `isNew`&mdash;The state of the current item.\n *\n * For more examples, refer to:\n * - [Selecting or deselecting all items on a page]({% slug selection_grid %}#toc-select-all-feature)\n * - [Persisting the selection]({% slug selection_grid %}#toc-in-combination-with-the-select-all-feature)\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\" [selectable]=\"{enabled: true, checkboxOnly: true}\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" [width]=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *          <kendo-grid-checkbox-column title=\"Default checkbox\">\n *          </kendo-grid-checkbox-column>\n *          <kendo-grid-checkbox-column title=\"Custom checkbox\">\n *            <ng-template kendoGridCellTemplate let-idx=\"rowIndex\">\n *              Select row <input [kendoGridSelectionCheckbox]=\"idx\" />\n *            </ng-template>\n *          </kendo-grid-checkbox-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\nclass CheckboxColumnComponent extends ColumnBase {\n    constructor(parent, idService) {\n        super(parent, idService);\n        this.parent = parent;\n        /*\n         * @hidden\n         */\n        this.isCheckboxColumn = true;\n    }\n    get templateRef() {\n        return this.template ? this.template.templateRef : undefined;\n    }\n}\nCheckboxColumnComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CheckboxColumnComponent, deps: [{ token: ColumnBase, host: true, optional: true, skipSelf: true }, { token: IdService, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCheckboxColumnComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: CheckboxColumnComponent, selector: \"kendo-grid-checkbox-column\", inputs: { showSelectAll: \"showSelectAll\" }, providers: [\n        {\n            provide: ColumnBase,\n            useExisting: forwardRef(() => CheckboxColumnComponent)\n        }\n    ], queries: [{ propertyName: \"template\", first: true, predicate: CellTemplateDirective, descendants: true }], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CheckboxColumnComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: ColumnBase,\n                            useExisting: forwardRef(() => CheckboxColumnComponent)\n                        }\n                    ],\n                    selector: 'kendo-grid-checkbox-column',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: ColumnBase, decorators: [{\n                    type: SkipSelf\n                }, {\n                    type: Host\n                }, {\n                    type: Optional\n                }] }, { type: IdService, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { showSelectAll: [{\n                type: Input\n            }], template: [{\n                type: ContentChild,\n                args: [CellTemplateDirective, { static: false }]\n            }] } });\n\n/**\n * Represents the `edit` command of the Grid. You can apply this directive to any `button`\n * element inside a [CommandColumnComponent]({% slug api_grid_commandcolumncomponent %}).\n * When an associated button with the directive is clicked, the\n * [edit]({% slug api_grid_gridcomponent %}#toc-edit) event\n * is triggered ([see example]({% slug basics_editing_grid %})).\n *\n * > When the row is in the edit mode, the button with `kendoGridEditCommand` is automatically hidden.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate>\n *       <button kendoGridEditCommand class=\"k-primary\">Edit</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n *\n */\nclass EditCommandDirective extends Button {\n    constructor(editService, cellContext, element, renderer, localization, ngZone) {\n        super(element, renderer, null, localization, ngZone);\n        this.editService = editService;\n        this.cellContext = cellContext;\n        /**\n         * @hidden\n         */\n        this.commandClass = true;\n    }\n    /**\n     * @hidden\n     */\n    get visible() {\n        return this.isEdited ? 'none' : '';\n    }\n    /**\n     * @hidden\n     */\n    onClick(e) {\n        e.preventDefault();\n        this.editService.beginEdit(this.rowIndex);\n    }\n    ngDoCheck() {\n        if (this.cellContext) {\n            this.rowIndex = this.cellContext.rowIndex;\n            this.isEdited = this.editService.isEdited(this.rowIndex);\n        }\n    }\n}\nEditCommandDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: EditCommandDirective, deps: [{ token: EditService }, { token: CELL_CONTEXT }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i1.LocalizationService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nEditCommandDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: EditCommandDirective, selector: \"[kendoGridEditCommand]\", host: { listeners: { \"click\": \"onClick($event)\" }, properties: { \"style.display\": \"this.visible\", \"class.k-grid-edit-command\": \"this.commandClass\" } }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: EditCommandDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridEditCommand]'\n                }]\n        }], ctorParameters: function () { return [{ type: EditService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CELL_CONTEXT]\n                }] }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i1.LocalizationService }, { type: i0.NgZone }]; }, propDecorators: { visible: [{\n                type: HostBinding,\n                args: ['style.display']\n            }], commandClass: [{\n                type: HostBinding,\n                args: ['class.k-grid-edit-command']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\n\n/**\n * Represents the `cancel` command of the Grid. You can apply this directive to any `button`\n * element inside a [CommandColumnComponent]({% slug api_grid_commandcolumncomponent %}).\n * When an associated button with the directive is clicked, the\n * [cancel]({% slug api_grid_gridcomponent %}#toc-cancel) event\n * is triggered ([see example]({% slug basics_editing_grid %})).\n *\n * > When the row is not in the edit mode, the button with the `kendoGridCancelCommand` is automatically hidden.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate>\n *       <button kendoGridCancelCommand>Cancel changes</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n *\n * You can control the content of the button based on the state of the row.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate let-isNew=\"isNew\">\n *       <button kendoGridCancelCommand>{{isNew ? 'Discard' : 'Cancel changes'}}</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n */\nclass CancelCommandDirective extends Button {\n    constructor(editService, cellContext, element, renderer, localization, ngZone) {\n        super(element, renderer, null, localization, ngZone);\n        this.editService = editService;\n        this.cellContext = cellContext;\n        /**\n         * @hidden\n         */\n        this.commandClass = true;\n    }\n    /**\n     * @hidden\n     */\n    get visible() {\n        return !this.isEdited ? 'none' : '';\n    }\n    /**\n     * @hidden\n     */\n    onClick(e) {\n        e.preventDefault();\n        if (this.isEdited) {\n            this.editService.endEdit(this.rowIndex);\n        }\n    }\n    ngDoCheck() {\n        if (this.cellContext) {\n            this.rowIndex = this.cellContext.rowIndex;\n            this.isEdited = this.editService.isEdited(this.rowIndex);\n        }\n    }\n}\nCancelCommandDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CancelCommandDirective, deps: [{ token: EditService }, { token: CELL_CONTEXT }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i1.LocalizationService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nCancelCommandDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: CancelCommandDirective, selector: \"[kendoGridCancelCommand]\", host: { listeners: { \"click\": \"onClick($event)\" }, properties: { \"style.display\": \"this.visible\", \"class.k-grid-cancel-command\": \"this.commandClass\" } }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CancelCommandDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridCancelCommand]'\n                }]\n        }], ctorParameters: function () { return [{ type: EditService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CELL_CONTEXT]\n                }] }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i1.LocalizationService }, { type: i0.NgZone }]; }, propDecorators: { visible: [{\n                type: HostBinding,\n                args: ['style.display']\n            }], commandClass: [{\n                type: HostBinding,\n                args: ['class.k-grid-cancel-command']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\n\n/**\n * Represents the `save` command of the Grid. You can apply this directive to any `button`\n * element inside a [CommandColumnComponent]({% slug api_grid_commandcolumncomponent %}).\n * When an associated button with the directive is clicked, the\n * [save]({% slug api_grid_gridcomponent %}#toc-save) event\n * is triggered ([see example]({% slug basics_editing_grid %})).\n *\n * > When the row is not in the edit mode, the button with `kendoGridSaveCommand` is automatically hidden.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate>\n *       <button kendoGridSaveCommand>Save changes</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n *\n * You can control the content of the button based on the state of the row.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate let-isNew=\"isNew\">\n *       <button kendoGridSaveCommand>{{isNew ? 'Add' : 'Update'}}</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n */\nclass SaveCommandDirective extends Button {\n    constructor(editService, cellContext, element, renderer, localization, ngZone) {\n        super(element, renderer, null, localization, ngZone);\n        this.editService = editService;\n        this.cellContext = cellContext;\n        /**\n         * @hidden\n         */\n        this.commandClass = true;\n    }\n    /**\n     * @hidden\n     */\n    get visible() {\n        return !this.isEdited ? 'none' : '';\n    }\n    /**\n     * @hidden\n     */\n    onClick(e) {\n        e.preventDefault();\n        if (this.isEdited) {\n            this.editService.save(this.rowIndex);\n        }\n    }\n    ngDoCheck() {\n        if (this.cellContext) {\n            this.rowIndex = this.cellContext.rowIndex;\n            this.isEdited = this.editService.isEdited(this.rowIndex);\n        }\n    }\n}\nSaveCommandDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SaveCommandDirective, deps: [{ token: EditService }, { token: CELL_CONTEXT }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i1.LocalizationService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nSaveCommandDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: SaveCommandDirective, selector: \"[kendoGridSaveCommand]\", host: { listeners: { \"click\": \"onClick($event)\" }, properties: { \"style.display\": \"this.visible\", \"class.k-grid-save-command\": \"this.commandClass\" } }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SaveCommandDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridSaveCommand]'\n                }]\n        }], ctorParameters: function () { return [{ type: EditService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CELL_CONTEXT]\n                }] }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i1.LocalizationService }, { type: i0.NgZone }]; }, propDecorators: { visible: [{\n                type: HostBinding,\n                args: ['style.display']\n            }], commandClass: [{\n                type: HostBinding,\n                args: ['class.k-grid-save-command']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\n\n/**\n * Represents the `remove` command of the Grid. You can apply this directive to any `button` element\n * inside a [CommandColumnComponent]({% slug api_grid_commandcolumncomponent %}).\n * When an associated button with the directive is clicked, the\n * [remove event]({% slug api_grid_gridcomponent %}#toc-remove)\n * is triggered ([see example]({% slug inline_editing_grid %}#toc-using-reactive-forms))).\n *\n * > When the row is in the edit mode, the button with the `kendoGridRemoveCommand` is automatically hidden.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate>\n *       <button kendoGridRemoveCommand>Remove row</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n */\nclass RemoveCommandDirective extends Button {\n    constructor(editService, cellContext, element, renderer, localization, ngZone) {\n        super(element, renderer, null, localization, ngZone);\n        this.editService = editService;\n        this.cellContext = cellContext;\n        /**\n         * @hidden\n         */\n        this.commandClass = true;\n    }\n    /**\n     * @hidden\n     */\n    get visible() {\n        return this.isEdited ? 'none' : '';\n    }\n    /**\n     * @hidden\n     */\n    onClick(e) {\n        e.preventDefault();\n        this.editService.remove(this.rowIndex);\n    }\n    ngDoCheck() {\n        if (this.cellContext) {\n            this.rowIndex = this.cellContext.rowIndex;\n            this.isEdited = this.editService.isEdited(this.rowIndex);\n        }\n    }\n}\nRemoveCommandDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RemoveCommandDirective, deps: [{ token: EditService }, { token: CELL_CONTEXT }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i1.LocalizationService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nRemoveCommandDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: RemoveCommandDirective, selector: \"[kendoGridRemoveCommand]\", host: { listeners: { \"click\": \"onClick($event)\" }, properties: { \"style.display\": \"this.visible\", \"class.k-grid-remove-command\": \"this.commandClass\" } }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RemoveCommandDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridRemoveCommand]'\n                }]\n        }], ctorParameters: function () { return [{ type: EditService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CELL_CONTEXT]\n                }] }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i1.LocalizationService }, { type: i0.NgZone }]; }, propDecorators: { visible: [{\n                type: HostBinding,\n                args: ['style.display']\n            }], commandClass: [{\n                type: HostBinding,\n                args: ['class.k-grid-remove-command']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\n\n/**\n * Represents the command for adding a new item to the Grid. You can apply this directive to any\n * `button` element inside a [ToolbarTemplate]({% slug api_grid_commandcolumncomponent %}).\n * When an associated button with the directive is clicked, the\n * [add]({% slug api_grid_gridcomponent %}#toc-add) event is triggered\n * ([see example]({% slug basics_editing_grid %})).\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *    <ng-template kendoGridToolbarTemplate>\n *       <button kendoGridAddCommand>Add new</button>\n *    </ng-template>\n * </kendo-grid>\n * ```\n */\nclass AddCommandDirective extends Button {\n    constructor(editService, element, renderer, localization, ngZone) {\n        super(element, renderer, null, localization, ngZone);\n        this.editService = editService;\n    }\n    /**\n     * @hidden\n     */\n    onClick(e) {\n        e.preventDefault();\n        this.editService.beginAdd();\n    }\n    /**\n     * @hidden\n     */\n    get commandClass() {\n        return true;\n    }\n}\nAddCommandDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: AddCommandDirective, deps: [{ token: EditService }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i1.LocalizationService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nAddCommandDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: AddCommandDirective, selector: \"[kendoGridAddCommand]\", host: { listeners: { \"click\": \"onClick($event)\" }, properties: { \"class.k-grid-add-command\": \"this.commandClass\" } }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: AddCommandDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridAddCommand]'\n                }]\n        }], ctorParameters: function () { return [{ type: EditService }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i1.LocalizationService }, { type: i0.NgZone }]; }, propDecorators: { onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], commandClass: [{\n                type: HostBinding,\n                args: ['class.k-grid-add-command']\n            }] } });\n\nconst exported = [\n    CommandColumnComponent,\n    CheckboxColumnComponent,\n    SelectionCheckboxDirective,\n    CellTemplateDirective,\n    EditTemplateDirective,\n    TableBodyComponent,\n    NoRecordsTemplateDirective,\n    CellComponent,\n    EditCommandDirective,\n    CancelCommandDirective,\n    SaveCommandDirective,\n    RemoveCommandDirective,\n    AddCommandDirective,\n    CellLoadingTemplateDirective,\n    LoadingTemplateDirective\n];\nconst importedModules$1 = [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    SharedModule,\n    GroupModule,\n    NumericTextBoxModule,\n    DatePickerModule,\n    ResizeSensorModule\n];\n/**\n * @hidden\n */\nclass BodyModule {\n    static exports() {\n        return [\n            CommandColumnComponent,\n            CheckboxColumnComponent,\n            SelectionCheckboxDirective,\n            CellTemplateDirective,\n            NoRecordsTemplateDirective,\n            EditTemplateDirective,\n            EditCommandDirective,\n            CancelCommandDirective,\n            SaveCommandDirective,\n            RemoveCommandDirective,\n            AddCommandDirective,\n            CellLoadingTemplateDirective,\n            LoadingTemplateDirective\n        ];\n    }\n}\nBodyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BodyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBodyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BodyModule, declarations: [CommandColumnComponent,\n        CheckboxColumnComponent,\n        SelectionCheckboxDirective,\n        CellTemplateDirective,\n        EditTemplateDirective,\n        TableBodyComponent,\n        NoRecordsTemplateDirective,\n        CellComponent,\n        EditCommandDirective,\n        CancelCommandDirective,\n        SaveCommandDirective,\n        RemoveCommandDirective,\n        AddCommandDirective,\n        CellLoadingTemplateDirective,\n        LoadingTemplateDirective], imports: [CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        SharedModule,\n        GroupModule,\n        NumericTextBoxModule,\n        DatePickerModule,\n        ResizeSensorModule], exports: [CommandColumnComponent,\n        CheckboxColumnComponent,\n        SelectionCheckboxDirective,\n        CellTemplateDirective,\n        EditTemplateDirective,\n        TableBodyComponent,\n        NoRecordsTemplateDirective,\n        CellComponent,\n        EditCommandDirective,\n        CancelCommandDirective,\n        SaveCommandDirective,\n        RemoveCommandDirective,\n        AddCommandDirective,\n        CellLoadingTemplateDirective,\n        LoadingTemplateDirective] });\nBodyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BodyModule, imports: [[...importedModules$1]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BodyModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [exported],\n                    exports: [exported],\n                    imports: [...importedModules$1]\n                }]\n        }] });\n\nconst exportedModules$2 = [\n    FooterComponent\n];\nconst importedModules = [\n    CommonModule,\n    SharedModule\n];\n/**\n * @hidden\n */\nclass FooterModule {\n    static exports() {\n        return [];\n    }\n}\nFooterModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FooterModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFooterModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FooterModule, declarations: [FooterComponent], imports: [CommonModule,\n        SharedModule], exports: [FooterComponent] });\nFooterModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FooterModule, imports: [[...importedModules]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FooterModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [exportedModules$2],\n                    exports: [exportedModules$2],\n                    imports: [...importedModules]\n                }]\n        }] });\n\n/**\n * @hidden\n */\nclass LocalEditService {\n    constructor(grid, localDataChangesService) {\n        this.grid = grid;\n        this.localDataChangesService = localDataChangesService;\n    }\n    create(item) {\n        if (this.hasLocalData && this.grid.skip) {\n            this.localDataChangesService.data.splice(this.grid.skip, 0, item);\n        }\n        else {\n            this.data.unshift(item);\n        }\n        this.dataChanged();\n    }\n    update(_item) { } // eslint-disable-line no-empty\n    remove(item) {\n        const data = this.data;\n        for (let idx = 0; idx < data.length; idx++) {\n            if (item === data[idx]) {\n                data.splice(idx, 1);\n                this.dataChanged({ action: 'remove', item: item });\n                break;\n            }\n        }\n    }\n    assignValues(target, source) {\n        Object.assign(target, source);\n    }\n    dataChanged(args = {}) {\n        if (this.hasLocalData) {\n            this.localDataChangesService.changes.emit(args);\n        }\n    }\n    get hasLocalData() {\n        return Array.isArray(this.localDataChangesService.data);\n    }\n    get data() {\n        if (this.hasLocalData) {\n            return this.localDataChangesService.data;\n        }\n        const data = this.grid.data;\n        if (Array.isArray(data)) {\n            return data;\n        }\n        if (isDevMode()) {\n            throw new Error('The default edit service of the editing directives works only when binding to plain array.' +\n                'Please provide an editService.');\n        }\n        return [];\n    }\n}\n\n/**\n * @hidden\n */\nclass EditingDirectiveBase {\n    constructor(grid, localDataChangesService) {\n        this.grid = grid;\n        this.localDataChangesService = localDataChangesService;\n        this.defaultEditService = this.createDefaultService();\n    }\n    // Consider adding support for the dependency injection of the service to allow for specifying a generic service without code.\n    // The Input should still be kept.\n    /**\n     * The edit service that will handle the operations.\n     */\n    set editService(value) {\n        this.userEditService = value;\n    }\n    get editService() {\n        return this.userEditService || this.defaultEditService;\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        this.subscriptions = this.grid.add.subscribe(this.addHandler.bind(this));\n        this.subscriptions.add(this.grid.remove.subscribe(this.removeHandler.bind(this)));\n        this.subscriptions.add(this.grid.cancel.subscribe(this.cancelHandler.bind(this)));\n        this.subscriptions.add(this.grid.save.subscribe(this.saveHandler.bind(this)));\n        this.subscriptions.add(this.grid.dataStateChange.subscribe(this.onStateChange.bind(this)));\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n    }\n    createDefaultService() {\n        return new LocalEditService(this.grid, this.localDataChangesService);\n    }\n    addHandler() {\n        this.grid.addRow(this.createModel({ isNew: true }));\n    }\n    saveHandler(args) {\n        const item = this.saveModel(args);\n        if (item) {\n            if (args.isNew) {\n                this.editService.create(item);\n            }\n            else {\n                this.editService.update(item);\n            }\n        }\n        this.grid.closeRow(args.rowIndex);\n    }\n    cancelHandler({ rowIndex }) {\n        this.closeEditor(rowIndex);\n    }\n    removeHandler({ dataItem }) {\n        const removeItem = (shouldRemove) => {\n            if (shouldRemove) {\n                this.editService.remove(dataItem);\n            }\n        };\n        if (this.removeConfirmation) {\n            const result = this.removeConfirmation(dataItem);\n            if (result instanceof Promise) {\n                result.then(removeItem);\n            }\n            else if (result instanceof Observable) {\n                result.pipe(take(1)).subscribe(removeItem);\n            }\n            else {\n                removeItem(result);\n            }\n        }\n        else {\n            removeItem(true);\n        }\n    }\n    onStateChange() {\n        this.closeEditor();\n    }\n    closeEditor(rowIndex) {\n        this.grid.closeRow(rowIndex);\n    }\n}\nEditingDirectiveBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: EditingDirectiveBase, deps: [{ token: GridComponent }, { token: LocalDataChangesService }], target: i0.ɵɵFactoryTarget.Directive });\nEditingDirectiveBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: EditingDirectiveBase, selector: \"[kendoGridEditingDirectiveBase]\", inputs: { editService: \"editService\", removeConfirmation: \"removeConfirmation\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: EditingDirectiveBase, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridEditingDirectiveBase]'\n                }]\n        }], ctorParameters: function () { return [{ type: GridComponent }, { type: LocalDataChangesService }]; }, propDecorators: { editService: [{\n                type: Input\n            }], removeConfirmation: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass LocalRowEditService extends LocalEditService {\n    update(_item) {\n        this.dataChanged();\n    }\n}\n\n/**\n * @hidden\n */\nclass RowEditingDirectiveBase extends EditingDirectiveBase {\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this.subscriptions\n            .add(this.grid.edit.subscribe(this.editHandler.bind(this)));\n    }\n    createDefaultService() {\n        return new LocalRowEditService(this.grid, this.localDataChangesService);\n    }\n    addHandler() {\n        this.closeEditor();\n        super.addHandler();\n    }\n    editHandler(args) {\n        this.closeEditor();\n        this.rowIndex = args.rowIndex;\n        this.grid.editRow(args.rowIndex, this.createModel(args));\n    }\n    saveHandler(args) {\n        super.saveHandler(args);\n        this.clean();\n    }\n    closeEditor(rowIndex = this.rowIndex) {\n        super.closeEditor(rowIndex);\n        this.clean();\n    }\n    clean() {\n        delete this.rowIndex;\n    }\n}\nRowEditingDirectiveBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RowEditingDirectiveBase, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nRowEditingDirectiveBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: RowEditingDirectiveBase, selector: \"[kendoGridRowEditingDirectiveBase]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: RowEditingDirectiveBase, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridRowEditingDirectiveBase]'\n                }]\n        }] });\n\n/**\n * A directive which encapsulates the editing operations of the Grid when using\n * the Template-Driven Angular Forms ([see example]({% slug editing_directives_grid %}#toc-the-template-directive)).\n */\nclass TemplateEditingDirective extends RowEditingDirectiveBase {\n    constructor(grid, localDataChangesService) {\n        super(grid, localDataChangesService);\n        this.grid = grid;\n        this.localDataChangesService = localDataChangesService;\n    }\n    editHandler(args) {\n        super.editHandler(args);\n        this.dataItem = args.dataItem;\n        this.originalValues = {};\n        this.editService.assignValues(this.originalValues, this.dataItem);\n    }\n    closeEditor(rowIndex) {\n        if (this.dataItem) {\n            this.editService.assignValues(this.dataItem, this.originalValues);\n        }\n        super.closeEditor(rowIndex);\n    }\n    createModel(args) {\n        if (args.isNew) {\n            return this.createNewItem();\n        }\n    }\n    saveModel(args) {\n        return args.dataItem;\n    }\n    clean() {\n        super.clean();\n        delete this.dataItem;\n    }\n}\nTemplateEditingDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TemplateEditingDirective, deps: [{ token: GridComponent }, { token: LocalDataChangesService }], target: i0.ɵɵFactoryTarget.Directive });\nTemplateEditingDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TemplateEditingDirective, selector: \"[kendoGridTemplateEditing]\", inputs: { createNewItem: [\"kendoGridTemplateEditing\", \"createNewItem\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TemplateEditingDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridTemplateEditing]'\n                }]\n        }], ctorParameters: function () { return [{ type: GridComponent }, { type: LocalDataChangesService }]; }, propDecorators: { createNewItem: [{\n                type: Input,\n                args: ['kendoGridTemplateEditing']\n            }] } });\n\n/**\n * @hidden\n */\nconst markAllAsTouched = (control) => {\n    control.markAsTouched();\n    if (control.hasOwnProperty('controls')) {\n        let controls = control.controls;\n        for (let inner in controls) {\n            if (controls.hasOwnProperty(inner)) {\n                markAllAsTouched(controls[inner]);\n            }\n        }\n    }\n};\n\n/**\n * A directive which encapsulates the editing operations of the Grid when using the\n * Reactive Forms ([see example]({% slug editing_directives_grid %}#toc-the-reactive-directive)).\n */\nclass ReactiveEditingDirective extends RowEditingDirectiveBase {\n    constructor(grid, localDataChangesService) {\n        super(grid, localDataChangesService);\n        this.grid = grid;\n        this.localDataChangesService = localDataChangesService;\n    }\n    createModel(args) {\n        return this.createFormGroup(args);\n    }\n    saveModel({ dataItem, formGroup, isNew }) {\n        if (!formGroup.dirty && !isNew) {\n            return;\n        }\n        if (formGroup.valid) {\n            this.editService.assignValues(dataItem, formGroup.value);\n            return dataItem;\n        }\n        markAllAsTouched(formGroup);\n    }\n}\nReactiveEditingDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ReactiveEditingDirective, deps: [{ token: GridComponent }, { token: LocalDataChangesService }], target: i0.ɵɵFactoryTarget.Directive });\nReactiveEditingDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ReactiveEditingDirective, selector: \"[kendoGridReactiveEditing]\", inputs: { createFormGroup: [\"kendoGridReactiveEditing\", \"createFormGroup\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ReactiveEditingDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridReactiveEditing]'\n                }]\n        }], ctorParameters: function () { return [{ type: GridComponent }, { type: LocalDataChangesService }]; }, propDecorators: { createFormGroup: [{\n                type: Input,\n                args: ['kendoGridReactiveEditing']\n            }] } });\n\n/**\n * A directive which encapsulates the editing operations of the Grid when using the in-cell\n * editing with Reactive Forms ([see example]({% slug editing_directives_grid %}#toc-the-incell-directive)).\n */\nclass InCellEditingDirective extends EditingDirectiveBase {\n    constructor(grid, localDataChangesService, cdr) {\n        super(grid, localDataChangesService);\n        this.grid = grid;\n        this.localDataChangesService = localDataChangesService;\n        this.cdr = cdr;\n    }\n    // Need mixin\n    createModel(args) {\n        return this.createFormGroup(args);\n    }\n    saveModel({ dataItem, formGroup, isNew }) {\n        if (!formGroup.dirty && !isNew) {\n            return;\n        }\n        if (formGroup.valid) {\n            this.editService.assignValues(dataItem, formGroup.value);\n            return dataItem;\n        }\n        markAllAsTouched(formGroup);\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this.subscriptions.add(this.grid.cellClick.subscribe(this.cellClickHandler.bind(this)));\n        this.subscriptions.add(this.grid.cellClose.subscribe(this.cellCloseHandler.bind(this)));\n    }\n    removeHandler(args) {\n        super.removeHandler(args);\n        this.grid.cancelCell();\n    }\n    cellClickHandler(args) {\n        if (!args.isEdited && args.type !== 'contextmenu') {\n            this.grid.editCell(args.rowIndex, args.columnIndex, this.createFormGroup(args));\n            this.cdr.markForCheck();\n        }\n    }\n    cellCloseHandler(args) {\n        const { formGroup, dataItem } = args;\n        if (!formGroup.valid) {\n            args.preventDefault();\n        }\n        else if (formGroup.dirty) {\n            if (args.originalEvent && args.originalEvent.keyCode === Keys.Escape) {\n                return;\n            }\n            this.editService.assignValues(dataItem, formGroup.value);\n            this.editService.update(dataItem);\n        }\n    }\n}\nInCellEditingDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InCellEditingDirective, deps: [{ token: GridComponent }, { token: LocalDataChangesService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\nInCellEditingDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: InCellEditingDirective, selector: \"[kendoGridInCellEditing]\", inputs: { createFormGroup: [\"kendoGridInCellEditing\", \"createFormGroup\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: InCellEditingDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridInCellEditing]'\n                }]\n        }], ctorParameters: function () { return [{ type: GridComponent }, { type: LocalDataChangesService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { createFormGroup: [{\n                type: Input,\n                args: ['kendoGridInCellEditing']\n            }] } });\n\nconst hasGroups = (items) => items && items.length && items[0].field && items[0].items;\nconst groupDescriptorsPresent = (descriptors) => isPresent(descriptors) && descriptors.length > 0;\nconst processGroups = (data, state) => process(data, state).data;\nconst removeParentDescriptors = (parents, owner) => g => g.field !== owner.field && !parents.some(y => y.field === g.field);\nconst findGroup = (groupIndex, groups) => {\n    const parents = [];\n    return {\n        group: groupIndex.split(\"_\").reduce((acc, x) => {\n            const idx = parseInt(x, 10);\n            if (acc.items) {\n                parents.push(acc);\n                return acc.items[idx];\n            }\n            return isArray(acc) ? acc[idx] : acc;\n        }, groups),\n        parents\n    };\n};\nconst findChildren = (data, parents) => {\n    const filters = parents.map(p => ({ field: p.field, operator: \"eq\", value: p.value }));\n    return filterBy(data, {\n        filters: filters,\n        logic: \"and\"\n    });\n};\n/**\n * @hidden\n */\nconst count = (groups, includeFooters = false) => (groups.reduce((acc, group) => {\n    if (!group.skipHeader) {\n        acc++;\n    }\n    if (group.items) {\n        const children = count(group.items, includeFooters);\n        if (includeFooters && children && !group.hideFooter) {\n            acc++;\n        }\n        acc += children;\n    }\n    return acc;\n}, 0));\n/**\n * @hidden\n */\nconst slice = (groups, skip, take, includeFooters = false) => {\n    if (!isPresent(take)) {\n        return groups;\n    }\n    const result = [];\n    for (let idx = 0, length = groups.length; idx < length; idx++) {\n        if (take <= 0) {\n            break;\n        }\n        const group = groups[idx];\n        const groupItems = group.items;\n        let itemCount = count(groupItems, includeFooters);\n        if (includeFooters && groupItems.length) {\n            itemCount++;\n        }\n        const skipHeader = skip > 0;\n        if (skip) {\n            skip--;\n            if (itemCount && skip >= itemCount) {\n                skip -= itemCount;\n                continue;\n            }\n        }\n        if (!skipHeader || itemCount) {\n            const items = [];\n            let hideFooter = true;\n            if (!skipHeader) {\n                take--;\n            }\n            if (take) {\n                if (hasGroups(groupItems)) {\n                    const children = slice(groupItems, skip, take, includeFooters);\n                    items.push(...children);\n                    take -= count(children, includeFooters);\n                }\n                else {\n                    items.push(...groupItems.slice(skip, Math.min(skip + take, groupItems.length)));\n                    take -= items.length;\n                }\n                if (take && includeFooters) {\n                    hideFooter = false;\n                    take--;\n                }\n                skip = 0;\n            }\n            result.push({\n                aggregates: group.aggregates,\n                field: group.field,\n                hideFooter,\n                items,\n                offset: idx,\n                skipHeader,\n                value: group.value\n            });\n        }\n    }\n    return result;\n};\nconst skippedHeaders = (groupItem) => {\n    let total = 0;\n    while (groupItem) {\n        if (groupItem.skipHeader) {\n            total++;\n        }\n        groupItem = groupItem.items && groupItem.items[0] || null;\n    }\n    return total;\n};\n/**\n * A directive which encapsulates the in-memory handling of grouping with virtual scrolling.\n */\nclass GroupBindingDirective extends DataBindingDirective {\n    constructor(grid, changeDetector, localDataChangesService) {\n        super(grid, changeDetector, localDataChangesService);\n    }\n    /**\n     * The array of data which will be used to populate the Grid.\n     */\n    set kendoGridGroupBinding(value) {\n        this.groups = null;\n        this.grid.resetGroupsState();\n        this.data = value;\n    }\n    /**\n     * @hidden\n     */\n    set data(value) {\n        this.originalData = value || [];\n        this.dataChanged = true;\n    }\n    /**\n     * Defines the descriptors by which the data will be sorted.\n     */\n    set sort(value) {\n        const clear = this.state.sort !== value;\n        this.grid.sort = this.state.sort = value;\n        if (clear) {\n            this.groups = null;\n            this.grid.resetGroupsState();\n        }\n    }\n    /**\n     * Defines the descriptor by which the data will be filtered.\n     */\n    set filter(value) {\n        const clear = diffFilters(this.state.filter, value);\n        if (clear) {\n            this.state.filter = value;\n            this.grid.filter = cloneFilters(value);\n            this.groups = null;\n            this.grid.resetGroupsState();\n        }\n    }\n    /**\n     * Defines the descriptors by which the data will be grouped.\n     */\n    set group(value) {\n        // don't clear if no groups are present in previous and current value\n        const groupsPresent = groupDescriptorsPresent(this.state.group) || groupDescriptorsPresent(value);\n        const clear = this.state.group !== value && groupsPresent;\n        this.grid.group = this.state.group = value;\n        if (clear) {\n            this.groups = null;\n            this.grid.resetGroupsState();\n            this.skip = 0;\n        }\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this.grid.groupExpand.subscribe(this.groupExpand.bind(this));\n        this.grid.groupCollapse.subscribe(this.groupCollapse.bind(this));\n    }\n    ngAfterContentInit() {\n        if (isDevMode() && this.grid.isGroupExpanded) {\n            throw new Error('Using the `kendoGridGroupBinding` directive in combination with the `kendoGridExpandGroupBy` directive ' +\n                'or the `isGroupExpanded` callback is not supported. To use grouping with the `kendoGridGroupBinding` directive, ' +\n                'set the Grid `groupable` property to `true`.');\n        }\n    }\n    groupExpand({ groupIndex }) {\n        this.grid.expandGroupChildren(groupIndex);\n        const { group, parents } = findGroup(groupIndex, this.groups);\n        if (!group.items.length) {\n            const descriptors = this.state.group.filter(removeParentDescriptors(parents, group));\n            const children = findChildren(this.originalData, parents.concat(group));\n            group.items = processGroups(children, {\n                filter: this.state.filter,\n                group: descriptors,\n                sort: this.state.sort\n            });\n        }\n        this.grid.data = this.dataResult(this.state.skip, this.state.take);\n    }\n    groupCollapse({ groupIndex }) {\n        const { group } = findGroup(groupIndex, this.groups);\n        if (group) {\n            group.items = [];\n        }\n        this.grid.data = this.dataResult(this.state.skip, this.state.take);\n    }\n    process(state) {\n        if (state.group && state.group.length) {\n            const groups = this.processGroups(state);\n            this.grid.skip -= skippedHeaders(groups.data[0]);\n            return groups;\n        }\n        else {\n            this.groups = null;\n        }\n        return super.process(state);\n    }\n    processGroups(state) {\n        if (!this.groups || !this.groups.length) {\n            this.groups = processGroups(this.originalData, {\n                filter: state.filter,\n                group: state.group,\n                sort: state.sort\n            });\n        }\n        return this.dataResult(state.skip, state.take);\n    }\n    dataResult(skip, take) {\n        const includeFooters = this.grid.showGroupFooters;\n        return {\n            data: slice(this.groups, skip, take, includeFooters),\n            total: count(this.groups, includeFooters)\n        };\n    }\n    applyState({ skip, take, sort, group, filter }) {\n        this.skip = skip;\n        this.state.take = take;\n        // this.pageSize = take; // do need to update take as the process with slice correctly\n        this.sort = sort;\n        this.group = group;\n        this.filter = filter;\n    }\n}\nGroupBindingDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupBindingDirective, deps: [{ token: GridComponent }, { token: i0.ChangeDetectorRef }, { token: LocalDataChangesService }], target: i0.ɵɵFactoryTarget.Directive });\nGroupBindingDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: GroupBindingDirective, selector: \"[kendoGridGroupBinding]\", inputs: { kendoGridGroupBinding: \"kendoGridGroupBinding\", sort: \"sort\", filter: \"filter\", group: \"group\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupBindingDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[kendoGridGroupBinding]' }]\n        }], ctorParameters: function () { return [{ type: GridComponent }, { type: i0.ChangeDetectorRef }, { type: LocalDataChangesService }]; }, propDecorators: { kendoGridGroupBinding: [{\n                type: Input,\n                args: [\"kendoGridGroupBinding\"]\n            }], sort: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], group: [{\n                type: Input\n            }] } });\n\nconst exportedModules$1 = [\n    GridComponent,\n    ToolbarTemplateDirective,\n    ToolbarComponent,\n    GridSpacerComponent,\n    DataBindingDirective,\n    SelectionDirective,\n    CustomMessagesComponent,\n    GroupBindingDirective,\n    TemplateEditingDirective,\n    ReactiveEditingDirective,\n    InCellEditingDirective,\n    ExpandDetailsDirective,\n    ExpandGroupDirective,\n    ...GroupModule.exports(),\n    ...SharedModule.exports(),\n    ...BodyModule.exports(),\n    ...HeaderModule.exports(),\n    ...FooterModule.exports(),\n    ...PagerModule.exports(),\n    ...RowFilterModule.exports(),\n    ...FilterMenuModule.exports(),\n    ...ColumnMenuModule.exports()\n];\nconst declarations$2 = [\n    GridComponent,\n    ListComponent,\n    ToolbarComponent,\n    LocalizedMessagesDirective,\n    CustomMessagesComponent,\n    DataBindingDirective,\n    ToolbarTemplateDirective,\n    SelectionDirective,\n    TemplateEditingDirective,\n    ReactiveEditingDirective,\n    InCellEditingDirective,\n    ExpandDetailsDirective,\n    ExpandGroupDirective,\n    GroupBindingDirective,\n    GridMarqueeDirective,\n    GridSpacerComponent\n];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Grid component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Grid module\n * import { GridModule } from '@progress/kendo-angular-grid';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, GridModule], // import Grid module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass GridModule {\n}\nGridModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GridModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGridModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GridModule, declarations: [GridComponent,\n        ListComponent,\n        ToolbarComponent,\n        LocalizedMessagesDirective,\n        CustomMessagesComponent,\n        DataBindingDirective,\n        ToolbarTemplateDirective,\n        SelectionDirective,\n        TemplateEditingDirective,\n        ReactiveEditingDirective,\n        InCellEditingDirective,\n        ExpandDetailsDirective,\n        ExpandGroupDirective,\n        GroupBindingDirective,\n        GridMarqueeDirective,\n        GridSpacerComponent], imports: [CommonModule,\n        GroupModule,\n        SharedModule,\n        BodyModule,\n        HeaderModule,\n        FooterModule,\n        PagerModule,\n        RowFilterModule,\n        FilterMenuModule,\n        ResizeSensorModule,\n        ColumnMenuModule], exports: [GridComponent,\n        ToolbarTemplateDirective,\n        ToolbarComponent,\n        GridSpacerComponent,\n        DataBindingDirective,\n        SelectionDirective,\n        CustomMessagesComponent,\n        GroupBindingDirective,\n        TemplateEditingDirective,\n        ReactiveEditingDirective,\n        InCellEditingDirective,\n        ExpandDetailsDirective,\n        ExpandGroupDirective, GroupHeaderTemplateDirective, GroupHeaderColumnTemplateDirective, GroupFooterTemplateDirective, ColumnComponent, SpanColumnComponent, ColumnGroupComponent, FooterTemplateDirective, DetailTemplateDirective, FocusableDirective, CommandColumnComponent, CheckboxColumnComponent, SelectionCheckboxDirective, CellTemplateDirective, NoRecordsTemplateDirective, EditTemplateDirective, EditCommandDirective, CancelCommandDirective, SaveCommandDirective, RemoveCommandDirective, AddCommandDirective, CellLoadingTemplateDirective, LoadingTemplateDirective, HeaderTemplateDirective, SelectAllCheckboxDirective, PagerComponent, PagerPrevButtonsComponent, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerInputComponent, PagerInfoComponent, PagerPageSizesComponent, PagerTemplateDirective, PagerDropDownListDirective, PagerInputDirective, FilterRowComponent, FilterCellComponent, FilterCellTemplateDirective, FilterCellOperatorsComponent, StringFilterCellComponent, NumericFilterCellComponent, AutoCompleteFilterCellComponent, BooleanFilterCellComponent, DateFilterCellComponent, FilterCellOperatorsComponent, ContainsFilterOperatorComponent, DoesNotContainFilterOperatorComponent, EndsWithFilterOperatorComponent, EqualFilterOperatorComponent, IsEmptyFilterOperatorComponent, IsNotEmptyFilterOperatorComponent, IsNotNullFilterOperatorComponent, IsNullFilterOperatorComponent, NotEqualFilterOperatorComponent, StartsWithFilterOperatorComponent, GreaterFilterOperatorComponent, GreaterOrEqualToFilterOperatorComponent, LessFilterOperatorComponent, LessOrEqualToFilterOperatorComponent, AfterFilterOperatorComponent, AfterEqFilterOperatorComponent, BeforeEqFilterOperatorComponent, BeforeFilterOperatorComponent, StringFilterMenuComponent, FilterMenuTemplateDirective, NumericFilterMenuComponent, DateFilterMenuComponent, BooleanFilterMenuComponent, FilterMenuDropDownListDirective, BooleanFilterRadioButtonDirective, FilterCellOperatorsComponent, ContainsFilterOperatorComponent, DoesNotContainFilterOperatorComponent, EndsWithFilterOperatorComponent, EqualFilterOperatorComponent, IsEmptyFilterOperatorComponent, IsNotEmptyFilterOperatorComponent, IsNotNullFilterOperatorComponent, IsNullFilterOperatorComponent, NotEqualFilterOperatorComponent, StartsWithFilterOperatorComponent, GreaterFilterOperatorComponent, GreaterOrEqualToFilterOperatorComponent, LessFilterOperatorComponent, LessOrEqualToFilterOperatorComponent, AfterFilterOperatorComponent, AfterEqFilterOperatorComponent, BeforeEqFilterOperatorComponent, BeforeFilterOperatorComponent, ColumnChooserComponent, ColumnMenuFilterComponent, ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, ColumnMenuSortComponent, ColumnMenuLockComponent, ColumnMenuStickComponent, ColumnMenuPositionComponent, ColumnMenuChooserComponent, ColumnMenuTemplateDirective, ColumnMenuContainerComponent, ColumnMenuItemDirective, ColumnMenuComponent, ColumnMenuAutoSizeColumnComponent, ColumnMenuAutoSizeAllColumnsComponent] });\nGridModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GridModule, imports: [[\n            CommonModule,\n            GroupModule,\n            SharedModule,\n            BodyModule,\n            HeaderModule,\n            FooterModule,\n            PagerModule,\n            RowFilterModule,\n            FilterMenuModule,\n            ResizeSensorModule,\n            ColumnMenuModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GridModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [declarations$2],\n                    exports: [exportedModules$1],\n                    imports: [\n                        CommonModule,\n                        GroupModule,\n                        SharedModule,\n                        BodyModule,\n                        HeaderModule,\n                        FooterModule,\n                        PagerModule,\n                        RowFilterModule,\n                        FilterMenuModule,\n                        ResizeSensorModule,\n                        ColumnMenuModule\n                    ]\n                }]\n        }] });\n\nclass PDFMarginComponent extends PDFExportMarginComponent {\n}\nPDFMarginComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PDFMarginComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPDFMarginComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: PDFMarginComponent, selector: \"kendo-grid-pdf-margin\", usesInheritance: true, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PDFMarginComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-pdf-margin',\n                    template: ''\n                }]\n        }] });\n\n/**\n * Represents the PDF page template of the Grid that helps to customize the PDF pages. To define a page template,\n * nest an `<ng-template>` tag with the `kendoGridPDFTemplate` directive inside `<kendo-grid-pdf>`.\n *\n * The template context provides the following fields:\n * - `pageNumber`&mdash;Defines PDF page number.\n * - `totalPages`&mdash;Defines the total number of PDF pages.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\">\n *             <ng-template kendoGridToolbarTemplate>\n *                 <button kendoGridPDFCommand icon=\"file-pdf\">Export to PDF</button>\n *             </ng-template>\n *             <kendo-grid-column field=\"ProductName\">\n *             </kendo-grid-column>\n *              <kendo-grid-column field=\"UnitPrice\">\n *             </kendo-grid-column>\n *             <kendo-grid-pdf fileName=\"Products.pdf\" paperSize=\"A4\" [margin]=\"{ top: '1cm', left: '1cm', right: '1cm', bottom: '1cm' }\">\n *                 <ng-template kendoGridPDFTemplate let-pageNum=\"pageNum\" let-totalPages=\"totalPages\">\n *                     <div style=\"position: absolute;top: 5px; left: 5px;\">\n *                         Page {{ pageNum }} of {{ totalPages }}\n *                     </div>\n *                 </ng-template>\n *             </kendo-grid-pdf>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000\n *       }\n *     ];\n * }\n *\n * ```\n */\nclass PDFTemplateDirective extends PDFExportTemplateDirective {\n    constructor(templateRef) {\n        super(templateRef);\n    }\n}\nPDFTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PDFTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nPDFTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: PDFTemplateDirective, selector: \"[kendoGridPDFTemplate]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PDFTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridPDFTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * @hidden\n */\nconst HEADER_CLASS = 'k-grid-header';\n/**\n * @hidden\n */\nconst FOOTER_CLASS = 'k-grid-footer';\nconst GRID_LIST = 'KENDO-GRID-LIST';\nconst TABLE = 'TABLE';\nconst matchesList = matchesNodeName(GRID_LIST);\nconst matchesTable = matchesNodeName(TABLE);\nconst suffix = (locked) => locked ? 'locked' : 'wrap';\n/**\n * @hidden\n */\nclass GridQuery {\n    constructor(element) {\n        this.element = element;\n        this.list = findElement(element, matchesList);\n    }\n    content(locked) {\n        return findElement(this.list, matchesClasses(`k-grid-content${locked ? '-locked' : ''}`));\n    }\n    header(locked) {\n        this.headerWrap = this.headerWrap || findElement(this.element, matchesClasses(HEADER_CLASS));\n        return findElement(this.headerWrap, matchesClasses(`${HEADER_CLASS}-${suffix(locked)}`));\n    }\n    footer(locked) {\n        this.footerWrap = this.footerWrap || findElement(this.element, matchesClasses(FOOTER_CLASS));\n        return findElement(this.footerWrap, matchesClasses(`${FOOTER_CLASS}-${suffix(locked)}`));\n    }\n    table() {\n        return findElement(this.element, matchesTable);\n    }\n}\n\nconst FIRST_CLASS = 'k-first';\nconst INPUTS = ['input', 'select', 'textarea', 'option'];\n/** @hidden */\nconst cloneNode = (node) => {\n    const clone = node.cloneNode(false);\n    if (node._kendoExportVisual) {\n        clone._kendoExportVisual = node._kendoExportVisual;\n    }\n    if (INPUTS.indexOf(String(node.nodeName).toLowerCase()) >= 0) {\n        clone.removeAttribute(\"id\");\n        clone.removeAttribute(\"name\");\n        clone.value = node.value;\n        clone.checked = node.checked;\n        clone.selected = node.selected;\n    }\n    let child = node.firstChild;\n    while (child) {\n        clone.appendChild(cloneNode(child));\n        child = child.nextSibling;\n    }\n    return clone;\n};\nconst appendNodes = (element, nodes) => {\n    const length = nodes.length;\n    for (let idx = 0; idx < length; idx++) {\n        element.appendChild(cloneNode(nodes[idx]));\n    }\n};\nconst wrapTable = (table) => {\n    const wrapper = document.createElement('div');\n    wrapper.className = 'k-grid';\n    wrapper.appendChild(table);\n    return wrapper;\n};\nconst createTableElement = (sources) => {\n    const sourceCount = sources.length;\n    const element = cloneNode(sources[0]);\n    const rowsCount = element.rows.length;\n    if (sourceCount > 1) {\n        for (let rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n            for (let sourceIdx = 1; sourceIdx < sourceCount; sourceIdx++) {\n                appendNodes(element.rows[rowIdx], sources[sourceIdx].rows[rowIdx].cells);\n            }\n        }\n    }\n    return element;\n};\nconst setFirstCellClass = (header, headers) => {\n    if (headers.length > 1 && header.rows.length > 1) {\n        for (let idx = 1; idx < header.rows.length; idx++) {\n            const firstCellIndex = headers[0].rows[idx].cells.length;\n            const cell = header.rows[idx].cells[firstCellIndex];\n            if (String(cell.className).indexOf(FIRST_CLASS) === -1) {\n                cell.className += ` ${FIRST_CLASS}`;\n            }\n        }\n    }\n};\nconst createTable = (colGroups, headers, bodies, footers) => {\n    const table = document.createElement('table');\n    const colGroup = colGroups[0].cloneNode(true);\n    for (let idx = 1; idx < colGroups.length; idx++) {\n        appendNodes(colGroup, colGroups[idx].querySelectorAll('col'));\n    }\n    const header = createTableElement(headers);\n    const body = createTableElement(bodies);\n    header.className = HEADER_CLASS;\n    setFirstCellClass(header, headers);\n    table.appendChild(colGroup);\n    table.appendChild(header);\n    table.appendChild(body);\n    if (footers.length) {\n        const footer = createTableElement(footers);\n        footer.className = FOOTER_CLASS;\n        table.appendChild(footer);\n    }\n    return wrapTable(table);\n};\n/**\n * @hidden\n */\nconst exportElement = (wrapper) => {\n    const query = new GridQuery(wrapper);\n    const content = query.content();\n    let result;\n    if (content) {\n        const colGroups = [content.querySelector('colgroup')];\n        const headers = [query.header().querySelector('thead')];\n        const bodies = [content.querySelector('tbody')];\n        const footer = query.footer();\n        const footers = [];\n        if (footer) {\n            footers.push(footer.querySelector('tfoot'));\n        }\n        const lockedContent = query.content(true);\n        if (lockedContent) {\n            colGroups.unshift(lockedContent.querySelector('colgroup'));\n            headers.unshift(query.header(true).querySelector('thead'));\n            bodies.unshift(lockedContent.querySelector('tbody'));\n            if (footer) {\n                footers.unshift(query.footer(true).querySelector('tfoot'));\n            }\n        }\n        result = createTable(colGroups, headers, bodies, footers);\n    }\n    else {\n        result = wrapTable(query.table().cloneNode(true));\n    }\n    return result;\n};\n\nconst createElement = (tagName, className) => {\n    const element = document.createElement(tagName);\n    if (className) {\n        element.className = className;\n    }\n    return element;\n};\nconst createDiv = (className) => {\n    return createElement('div', className);\n};\n/**\n * Configures the settings for the export of Grid in PDF ([see example]({% slug pdfexport_grid %})).\n */\nclass PDFComponent extends PDFExportComponent {\n    constructor(pdfService, suspendService, ngZone, element) {\n        super(element);\n        this.pdfService = pdfService;\n        this.suspendService = suspendService;\n        this.ngZone = ngZone;\n        /**\n         * The delay in milliseconds before exporting the Grid content.\n         * Useful for scenarios which involve exporting complex components used in the Grid\n         * templates such as charts or data-bound components with asynchronous data retrieval ([see example]({% slug pdfexport_grid %}#toc-exporting-all-pages)).\n         *\n         * @default 0\n         */\n        this.delay = 0;\n        this.columns = new QueryList();\n        this.saveSubscription = pdfService.savePDF.subscribe(this.savePDF.bind(this));\n        this.drawSubscription = pdfService.drawPDF.subscribe(this.drawPDF.bind(this));\n        this.reset = this.reset.bind(this);\n        this.draw = this.draw.bind(this);\n    }\n    ngOnDestroy() {\n        this.saveSubscription.unsubscribe();\n        this.drawSubscription.unsubscribe();\n        this.reset();\n    }\n    /**\n     * @hidden\n     */\n    saveAs(_) {\n        throw new Error('Not supported. Use GridComponent.saveAsPDF');\n    }\n    /**\n     * @hidden\n     */\n    export() {\n        throw new Error('Not supported. Use GridComponent.drawPDF');\n    }\n    savePDF(component) {\n        this.createPDF(component, this.draw);\n    }\n    drawPDF({ component, promise }) {\n        this.createPDF(component, () => {\n            this.createExportGroup(promise);\n        });\n    }\n    createPDF(component, callback) {\n        const pageSize = component.pageSize;\n        const total = component.view.total;\n        const columns = this.columns.toArray();\n        if (columns.length) {\n            this.originalColumns = component.columns.toArray();\n        }\n        this.component = component;\n        this.suspendService.scroll = true;\n        this.pdfService.exporting = true;\n        this.initProgress();\n        this.renderAllPages = this.allPages && pageSize < total;\n        if (this.renderAllPages) {\n            this.skip = component.skip;\n            this.pageSize = pageSize;\n            this.changePage(0, total, callback, columns);\n        }\n        else if (columns.length || component.virtualColumns) {\n            this.changeColumns(columns, callback);\n        }\n        else {\n            callback();\n        }\n    }\n    initProgress() {\n        const wrapperElement = this.component.wrapper.nativeElement;\n        const progress = this.progress = createDiv('k-loading-pdf-mask');\n        const overlay = cloneNode(wrapperElement);\n        progress.appendChild(overlay);\n        progress.appendChild(createDiv('k-loading-color'));\n        progress.appendChild(createElement('span', 'k-i-loading k-icon'));\n        this.originalHeight = wrapperElement.style.height;\n        this.originalOverflow = wrapperElement.style.overflow;\n        wrapperElement.style.height = wrapperElement.offsetHeight + 'px';\n        wrapperElement.style.overflow = 'hidden';\n        wrapperElement.appendChild(progress);\n        this.applyScroll(overlay);\n    }\n    applyScroll(overlay) {\n        const query = new GridQuery(this.component.wrapper.nativeElement);\n        const content = query.content();\n        if (content) {\n            const overlayQuery = new GridQuery(overlay);\n            const overlayContent = overlayQuery.content();\n            overlayContent.scrollTop = content.scrollTop;\n            overlayContent.scrollLeft = content.scrollLeft;\n            overlayQuery.header().scrollLeft = query.header().scrollLeft;\n            const footer = query.footer();\n            if (footer) {\n                overlayQuery.footer().scrollLeft = footer.scrollLeft;\n            }\n            const lockedContent = query.content(true);\n            if (lockedContent) {\n                const overlayLockedContent = overlayQuery.content(true);\n                overlayLockedContent.scrollTop = lockedContent.scrollTop;\n                overlayLockedContent.scrollLeft = lockedContent.scrollLeft;\n            }\n        }\n    }\n    draw() {\n        this.createExportElement((element) => {\n            this.save(element, this.fileName);\n        });\n    }\n    createExportGroup(promise) {\n        this.createExportElement((element) => {\n            this.exportElement(element).then(group => promise.resolve(group));\n        });\n    }\n    createExportElement(callback) {\n        this.ngZone.runOutsideAngular(() => {\n            const container = this.container = createDiv('k-grid-pdf-export-element');\n            const element = exportElement(this.component.wrapper.nativeElement);\n            container.appendChild(element);\n            document.body.appendChild(container);\n            callback(element);\n        });\n    }\n    drawOptions() {\n        const options = super.drawOptions();\n        options._destructive = true;\n        return options;\n    }\n    cleanup() {\n        super.cleanup();\n        this.pdfService.exporting = false;\n        if (this.component) {\n            const originalColumns = this.originalColumns;\n            delete this.originalColumns;\n            if (this.renderAllPages) {\n                this.changePage(this.skip, this.pageSize, this.reset, originalColumns);\n            }\n            else if (originalColumns || this.component.virtualColumns) {\n                this.changeColumns(originalColumns, this.reset);\n            }\n            else {\n                this.reset();\n            }\n        }\n        else {\n            this.reset();\n        }\n        this.removeContainer();\n    }\n    removeContainer() {\n        if (this.container) {\n            document.body.removeChild(this.container);\n            delete this.container;\n        }\n    }\n    changePage(skip, _take, callback, columns) {\n        this.ngZone.run(() => {\n            this.pdfService.dataChanged.pipe(take(1)).subscribe(() => {\n                if ((columns && columns.length) || this.component.virtualColumns) {\n                    this.changeColumns(columns, callback);\n                }\n                else {\n                    this.onStable(callback);\n                }\n            });\n            this.component.notifyPageChange('pdf', { skip: skip, take: _take });\n        });\n    }\n    changeColumns(columns, callback) {\n        this.ngZone.run(() => {\n            this.onStable(callback);\n            if (columns && columns.length) {\n                this.component.columns.reset(columns);\n            }\n        });\n    }\n    reset() {\n        this.suspendService.scroll = false;\n        this.renderAllPages = false;\n        if (!this.component) {\n            return;\n        }\n        const wrapperElement = this.component.wrapper.nativeElement;\n        wrapperElement.removeChild(this.progress);\n        wrapperElement.style.height = this.originalHeight;\n        wrapperElement.style.overflow = this.originalOverflow;\n        delete this.progress;\n        delete this.component;\n    }\n    onStable(callback) {\n        // not sure if it is an actual scenario. occurs in the tests.\n        // onStable is triggered in the same pass without the change detection.\n        // thus, the callback is called before the changes are applied without the timeout.\n        setTimeout(() => {\n            let onStable = this.ngZone.onStable.asObservable().pipe(take(1));\n            if (this.delay > 0) {\n                onStable = onStable.pipe(delay(this.delay));\n            }\n            onStable.subscribe(callback);\n        }, 0);\n    }\n}\nPDFComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PDFComponent, deps: [{ token: PDFService }, { token: SuspendService }, { token: i0.NgZone }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nPDFComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: PDFComponent, selector: \"kendo-grid-pdf\", inputs: { allPages: \"allPages\", delay: \"delay\" }, queries: [{ propertyName: \"marginComponent\", first: true, predicate: PDFMarginComponent, descendants: true }, { propertyName: \"pageTemplateDirective\", first: true, predicate: PDFTemplateDirective, descendants: true }, { propertyName: \"columns\", predicate: ColumnBase }], usesInheritance: true, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PDFComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-pdf',\n                    template: ''\n                }]\n        }], ctorParameters: function () { return [{ type: PDFService }, { type: SuspendService }, { type: i0.NgZone }, { type: i0.ElementRef }]; }, propDecorators: { allPages: [{\n                type: Input\n            }], delay: [{\n                type: Input\n            }], columns: [{\n                type: ContentChildren,\n                args: [ColumnBase]\n            }], marginComponent: [{\n                type: ContentChild,\n                args: [PDFMarginComponent, { static: false }]\n            }], pageTemplateDirective: [{\n                type: ContentChild,\n                args: [PDFTemplateDirective, { static: false }]\n            }] } });\n\n/**\n * Represents the `export-to-PDF` command of the Grid.\n * You can apply this directive to any `button` element inside a\n * [ToolbarTemplate]({% slug api_grid_commandcolumncomponent %}).\n * When the user clicks a button that is associated with the directive, the\n * [pdfExport]({% slug api_grid_gridcomponent %}#toc-pdfexport) event\n * fires ([see example]({% slug pdfexport_grid %})).\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *      <ng-template kendoGridToolbarTemplate>\n *          <button kendoGridPDFCommand>Export to PDF</button>\n *      </ng-template>\n *      <kendo-grid-pdf fileName=\"Grid.pdf\">\n *      </kendo-grid-pdf>\n * </kendo-grid>\n * ```\n */\nclass PDFCommandDirective extends Button {\n    constructor(pdfService, element, renderer, localization, ngZone) {\n        super(element, renderer, null, localization, ngZone);\n        this.pdfService = pdfService;\n        this.ngZone = ngZone;\n    }\n    /**\n     * @hidden\n     */\n    onClick(e) {\n        e.preventDefault();\n        this.pdfService.exportClick.emit();\n    }\n    /**\n     * @hidden\n     */\n    get pdfClass() {\n        return true;\n    }\n}\nPDFCommandDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PDFCommandDirective, deps: [{ token: PDFService }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i1.LocalizationService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nPDFCommandDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: PDFCommandDirective, selector: \"[kendoGridPDFCommand]\", host: { listeners: { \"click\": \"onClick($event)\" }, properties: { \"class.k-grid-pdf\": \"this.pdfClass\" } }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PDFCommandDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridPDFCommand]'\n                }]\n        }], ctorParameters: function () { return [{ type: PDFService }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i1.LocalizationService }, { type: i0.NgZone }]; }, propDecorators: { onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], pdfClass: [{\n                type: HostBinding,\n                args: ['class.k-grid-pdf']\n            }] } });\n\nconst exportedModules = [\n    PDFComponent,\n    PDFMarginComponent,\n    PDFCommandDirective,\n    PDFTemplateDirective\n];\nconst declarations$1 = [\n    PDFComponent,\n    PDFMarginComponent,\n    PDFCommandDirective,\n    PDFTemplateDirective\n];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Grid PDF component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Grid and PDF modules\n * import { GridModule, PDFModule } from '@progress/kendo-angular-grid';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, GridModule, PDFModule], // import Grid and PDF modules\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass PDFModule {\n}\nPDFModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PDFModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPDFModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PDFModule, declarations: [PDFComponent,\n        PDFMarginComponent,\n        PDFCommandDirective,\n        PDFTemplateDirective], exports: [PDFComponent,\n        PDFMarginComponent,\n        PDFCommandDirective,\n        PDFTemplateDirective] });\nPDFModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PDFModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: PDFModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [declarations$1],\n                    exports: [exportedModules]\n                }]\n        }] });\n\n/**\n * Arguments for the `excelExport` event.\n */\nclass ExcelExportEvent extends PreventableEvent {\n    constructor(workbook) {\n        super();\n        this.workbook = workbook;\n    }\n}\n\nconst fetchComponentData = (component) => {\n    return {\n        data: component.view.map(item => item),\n        group: component.group\n    };\n};\nconst toExcelColumn = (column) => {\n    return {\n        title: column.title,\n        field: column.field,\n        locked: Boolean(column.locked),\n        width: column.width,\n        level: column.level,\n        hidden: !column.isVisible,\n        groupHeaderTemplate: column.groupHeaderTemplate,\n        groupHeaderColumnTemplate: column.groupHeaderColumnTemplate,\n        groupFooterTemplate: column.groupFooterTemplate,\n        footerTemplate: column.footerTemplate\n    };\n};\nconst toExcelColumns = (columns) => {\n    const result = [];\n    sortColumns(columns)\n        .forEach((column) => {\n        if (column.isSpanColumn) {\n            result.push(...toExcelColumns(column.childrenArray));\n        }\n        else {\n            const excelColumn = toExcelColumn(column);\n            if (column.isColumnGroup) {\n                excelColumn.children = [excelColumn].concat(toExcelColumns(column.childrenArray));\n            }\n            result.push(excelColumn);\n        }\n    });\n    return result;\n};\nconst componentColumns = (component) => {\n    const columns = toExcelColumns(component.columns.toArray());\n    return orderBy(columns, [{ field: 'locked', dir: 'desc' }]);\n};\n/**\n * Configures the settings for the export of Grid in Excel ([see example]({% slug excelexport_grid %})).\n */\nclass ExcelComponent {\n    constructor(excelService, localization, zone) {\n        this.localization = localization;\n        this.zone = zone;\n        /**\n         * Specifies the file name of the exported Excel file.\n         * @default \"Export.xlsx\"\n         */\n        this.fileName = 'Export.xlsx';\n        /**\n         * @hidden\n         */\n        this.columns = new QueryList();\n        this.saveSubscription = excelService.saveToExcel.subscribe(this.save.bind(this));\n    }\n    ngOnDestroy() {\n        this.saveSubscription.unsubscribe();\n        if (this.dataSubscription) {\n            this.dataSubscription.unsubscribe();\n        }\n    }\n    save(component) {\n        const data = (this.fetchData || fetchComponentData)(component);\n        const exportData = (result) => {\n            delete this.dataSubscription;\n            this.exportData(component, result);\n        };\n        if (data instanceof Promise) {\n            data.then(exportData);\n        }\n        else if (data instanceof Observable) {\n            this.dataSubscription = data.pipe(take(1)).subscribe(exportData);\n        }\n        else {\n            exportData(data);\n        }\n    }\n    exportData(component, result) {\n        const options = workbookOptions({\n            columns: this.columns.length ? this.columns : componentColumns(component),\n            data: result.data,\n            group: result.group,\n            filterable: this.filterable,\n            creator: this.creator,\n            date: this.date,\n            paddingCellOptions: this.paddingCellOptions,\n            headerPaddingCellOptions: this.headerPaddingCellOptions,\n            rtl: this.localization.rtl,\n            collapsible: this.collapsible\n        });\n        const args = new ExcelExportEvent(options);\n        component.excelExport.emit(args);\n        if (!args.isDefaultPrevented()) {\n            this.zone.runOutsideAngular(() => this.saveFile(options));\n        }\n    }\n    saveFile(options) {\n        toDataURL(options).then((dataURL) => {\n            saveAs(dataURL, this.fileName, {\n                forceProxy: this.forceProxy,\n                proxyURL: this.proxyURL\n            });\n        });\n    }\n}\nExcelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExcelComponent, deps: [{ token: ExcelService }, { token: i1.LocalizationService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nExcelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ExcelComponent, selector: \"kendo-grid-excel\", inputs: { fileName: \"fileName\", filterable: \"filterable\", creator: \"creator\", date: \"date\", forceProxy: \"forceProxy\", proxyURL: \"proxyURL\", fetchData: \"fetchData\", paddingCellOptions: \"paddingCellOptions\", headerPaddingCellOptions: \"headerPaddingCellOptions\", collapsible: \"collapsible\" }, queries: [{ propertyName: \"columns\", predicate: ColumnBase$1, descendants: true }], ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExcelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-grid-excel',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: ExcelService }, { type: i1.LocalizationService }, { type: i0.NgZone }]; }, propDecorators: { fileName: [{\n                type: Input\n            }], filterable: [{\n                type: Input\n            }], creator: [{\n                type: Input\n            }], date: [{\n                type: Input\n            }], forceProxy: [{\n                type: Input\n            }], proxyURL: [{\n                type: Input\n            }], fetchData: [{\n                type: Input\n            }], paddingCellOptions: [{\n                type: Input\n            }], headerPaddingCellOptions: [{\n                type: Input\n            }], collapsible: [{\n                type: Input\n            }], columns: [{\n                type: ContentChildren,\n                args: [ColumnBase$1, { descendants: true }]\n            }] } });\n\n/**\n * Represents the `export-to-Excel` command of the Grid. You can apply this\n * directive to any `button` element inside a\n * [ToolbarTemplate]({% slug api_grid_commandcolumncomponent %}).\n * When the user clicks a button associated with the directive, the\n * [excelExport]({% slug api_grid_gridcomponent %}#toc-excelexport) event\n * fires ([see example]({% slug excelexport_grid %})).\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *      <ng-template kendoGridToolbarTemplate>\n *          <button kendoGridExcelCommand>Export to PDF</button>\n *      </ng-template>\n *      <kendo-grid-excel fileName=\"Grid.xlsx\">\n *      </kendo-grid-excel>\n * </kendo-grid>\n * ```\n */\nclass ExcelCommandDirective extends Button {\n    constructor(excelService, element, renderer, localization, ngZone) {\n        super(element, renderer, null, localization, ngZone);\n        this.excelService = excelService;\n        this.ngZone = ngZone;\n    }\n    /**\n     * @hidden\n     */\n    onClick(e) {\n        e.preventDefault();\n        this.excelService.exportClick.emit();\n    }\n    /**\n     * @hidden\n     */\n    get excelClass() {\n        return true;\n    }\n}\nExcelCommandDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExcelCommandDirective, deps: [{ token: ExcelService }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i1.LocalizationService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nExcelCommandDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ExcelCommandDirective, selector: \"[kendoGridExcelCommand]\", host: { listeners: { \"click\": \"onClick($event)\" }, properties: { \"class.k-grid-excel\": \"this.excelClass\" } }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExcelCommandDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoGridExcelCommand]'\n                }]\n        }], ctorParameters: function () { return [{ type: ExcelService }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i1.LocalizationService }, { type: i0.NgZone }]; }, propDecorators: { onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], excelClass: [{\n                type: HostBinding,\n                args: ['class.k-grid-excel']\n            }] } });\n\nconst declarations = [ExcelComponent, ExcelCommandDirective];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Excel component of the Grid.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Grid and Excel modules\n * import { GridModule, ExcelModule } from '@progress/kendo-angular-grid';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, GridModule, ExcelModule], // import Grid and Excel modules\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass ExcelModule {\n}\nExcelModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExcelModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nExcelModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExcelModule, declarations: [ExcelComponent, ExcelCommandDirective], exports: [ExcelComponent, ExcelCommandDirective, ExcelExportModule] });\nExcelModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExcelModule, imports: [ExcelExportModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ExcelModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [declarations],\n                    exports: [declarations, ExcelExportModule]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AddCommandDirective, AfterEqFilterOperatorComponent, AfterFilterOperatorComponent, AutoCompleteFilterCellComponent, BaseFilterCellComponent, BeforeEqFilterOperatorComponent, BeforeFilterOperatorComponent, BodyModule, BooleanFilterCellComponent, BooleanFilterComponent, BooleanFilterMenuComponent, BooleanFilterRadioButtonDirective, BrowserSupportService, CELL_CONTEXT, CancelCommandDirective, CellCloseEvent, CellComponent, CellLoadingTemplateDirective, CellSelectionService, CellTemplateDirective, ChangeNotificationService, CheckboxColumnComponent, ColGroupComponent, ColumnBase, ColumnChooserComponent, ColumnComponent, ColumnGroupComponent, ColumnHandleDirective, ColumnInfoService, ColumnLockedChangeEvent, ColumnMenuAutoSizeAllColumnsComponent, ColumnMenuAutoSizeColumnComponent, ColumnMenuChooserComponent, ColumnMenuComponent, ColumnMenuContainerComponent, ColumnMenuFilterComponent, ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, ColumnMenuItemDirective, ColumnMenuLockComponent, ColumnMenuPositionComponent, ColumnMenuService, ColumnMenuSortComponent, ColumnMenuStickComponent, ColumnMenuTemplateDirective, ColumnReorderEvent, ColumnReorderService, ColumnResizingService, ColumnStickyChangeEvent, ColumnVisibilityChangeEvent, ColumnsContainer, CommandColumnComponent, ContainsFilterOperatorComponent, ContextService, CustomMessagesComponent, DEFAULT_SCROLLER_FACTORY, DataBindingDirective, DateFilterCellComponent, DateFilterComponent, DateFilterMenuComponent, DateFilterMenuInputComponent, DetailCollapseEvent, DetailExpandEvent, DetailTemplateDirective, DetailsService, DoesNotContainFilterOperatorComponent, DomEventsService, DragAndDropService, DragHintService, DropCueService, EditCommandDirective, EditService, EditTemplateDirective, EditingDirectiveBase, EndsWithFilterOperatorComponent, EqualFilterOperatorComponent, ExcelCommandDirective, ExcelComponent, ExcelExportEvent, ExcelModule, ExcelService, ExpandDetailsDirective, ExpandGroupDirective, FieldAccessorPipe, FilterCellComponent, FilterCellHostDirective, FilterCellOperatorsComponent, FilterCellTemplateDirective, FilterCellWrapperComponent, FilterInputDirective, FilterMenuComponent, FilterMenuContainerComponent, FilterMenuDropDownListDirective, FilterMenuHostDirective, FilterMenuInputWrapperComponent, FilterMenuModule, FilterMenuTemplateDirective, FilterRowComponent, FilterService, FocusRoot, FocusableDirective, FooterComponent, FooterModule, FooterTemplateDirective, GreaterFilterOperatorComponent, GreaterOrEqualToFilterOperatorComponent, GridComponent, GridModule, GridSpacerComponent, GroupBindingDirective, GroupFooterTemplateDirective, GroupHeaderColumnTemplateDirective, GroupHeaderComponent, GroupHeaderTemplateDirective, GroupIndicatorComponent, GroupInfoService, GroupModule, GroupPanelComponent, GroupsService, HeaderComponent, HeaderModule, HeaderTemplateDirective, IdService, InCellEditingDirective, IsEmptyFilterOperatorComponent, IsNotEmptyFilterOperatorComponent, IsNotNullFilterOperatorComponent, IsNullFilterOperatorComponent, LessFilterOperatorComponent, LessOrEqualToFilterOperatorComponent, ListComponent, LoadingComponent, LoadingTemplateDirective, LocalDataChangesService, LogicalCellDirective, LogicalRowDirective, MenuTabbingService, NavigationService, NoRecordsTemplateDirective, NotEqualFilterOperatorComponent, NumericFilterCellComponent, NumericFilterComponent, NumericFilterMenuComponent, NumericFilterMenuInputComponent, PDFCommandDirective, PDFComponent, PDFMarginComponent, PDFModule, PDFService, PDFTemplateDirective, PagerComponent, PagerContextService, PagerDropDownListDirective, PagerInfoComponent, PagerInputComponent, PagerInputDirective, PagerModule, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerPageSizesComponent, PagerPrevButtonsComponent, PagerTemplateDirective, PopupCloseEvent, ReactiveEditingDirective, RemoveCommandDirective, ResizableContainerDirective, ResizeService, ResponsiveService, RowEditingDirectiveBase, RowFilterModule, SaveCommandDirective, ScrollRequestService, ScrollSyncService, SelectAllCheckboxDirective, SelectionCheckboxDirective, SelectionDirective, SelectionService, SharedFilterModule, SharedModule, SinglePopupService, Skip, SortService, SpanColumnComponent, StartsWithFilterOperatorComponent, StringFilterCellComponent, StringFilterComponent, StringFilterMenuComponent, StringFilterMenuInputComponent, SuspendService, TableBodyComponent, TableDirective, TemplateContextDirective, TemplateEditingDirective, ToolbarComponent, ToolbarTemplateDirective, count, defaultTrackBy, hasFilterMenu, hasFilterRow, isFilterable, slice };\n\n"]},"metadata":{},"sourceType":"module"}