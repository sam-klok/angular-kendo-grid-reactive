{"ast":null,"code":"/**-----------------------------------------------------------------------------------------\n* Copyright © 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ViewChild, HostBinding, Directive, Injectable, InjectionToken, HostListener, ViewChildren, forwardRef, isDevMode, ViewContainerRef, Optional, Inject, ContentChild, ContentChildren, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i9 from '@progress/kendo-angular-common';\nimport { isDocumentAvailable, Keys, isChanged, hasObservers, KendoInput, anyChanged, guid as guid$1, ResizeSensorModule, EventsModule } from '@progress/kendo-angular-common';\nimport * as i12 from '@angular/forms';\nimport { NgControl, NG_VALUE_ACCESSOR, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { getter as getter$1, detectDesktopBrowser, detectMobileOS, pointers, touchEnabled } from '@progress/kendo-common';\nimport { Subscription, merge, fromEvent, Subject, of, interval } from 'rxjs';\nimport * as i1 from '@progress/kendo-angular-l10n';\nimport { ComponentMessages, LocalizationService, L10N_PREFIX } from '@progress/kendo-angular-l10n';\nimport * as i2 from '@progress/kendo-angular-popup';\nimport { PopupModule } from '@progress/kendo-angular-popup';\nexport { PopupComponent } from '@progress/kendo-angular-popup';\nimport { map, switchMap, take, auditTime, tap, filter, partition, throttleTime, catchError, skipWhile, concatMap, takeUntil } from 'rxjs/operators';\nimport * as i11 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$1 from '@progress/kendo-angular-treeview';\nimport { DataBoundComponent, ExpandableComponent, FlatDataBindingDirective, HierarchyBindingDirective, ExpandDirective, TreeViewModule } from '@progress/kendo-angular-treeview';\n/**\n * @hidden\n */\n\nconst _c0 = [\"input\"];\n\nconst _c1 = function (a0, a1) {\n  return {\n    focus: a0,\n    blur: a1\n  };\n};\n\nconst _c2 = [\"content\"];\nconst _c3 = [\"list\"];\nconst _c4 = [\"virtualContainer\"];\n\nfunction ListComponent_div_0_1_ng_template_0_Template(rf, ctx) {}\n\nconst _c5 = function (a0, a1) {\n  return {\n    templateRef: a0,\n    $implicit: a1\n  };\n};\n\nfunction ListComponent_div_0_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ListComponent_div_0_1_ng_template_0_Template, 0, 0, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction2(1, _c5, ctx_r7.fixedGroupTemplate.templateRef, ctx_r7.currentGroup));\n  }\n}\n\nfunction ListComponent_div_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r8.listGroupStickyHeaderTextClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r8.currentGroup);\n  }\n}\n\nconst _c6 = function (a0, a1, a2) {\n  return {\n    \"height.px\": a0,\n    \"minHeight.px\": a1,\n    \"boxSizing\": a2\n  };\n};\n\nfunction ListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, ListComponent_div_0_1_Template, 1, 4, undefined, 5);\n    i0.ɵɵtemplate(2, ListComponent_div_0_ng_template_2_Template, 2, 3, \"ng-template\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.listGroupStickyHeaderClass);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction3(5, _c6, ctx_r0.virtual == null ? null : ctx_r0.virtual.itemHeight, ctx_r0.virtual == null ? null : ctx_r0.virtual.itemHeight, ctx_r0.virtual ? \"border-box\" : \"inherit\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.fixedGroupTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.fixedGroupTemplate);\n  }\n}\n\nfunction ListComponent_5_ng_template_0_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 14);\n    i0.ɵɵlistener(\"change\", function ListComponent_5_ng_template_0_input_1_Template_input_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const itemIndex_r12 = i0.ɵɵnextContext().index;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return ctx_r16.onCheckedChange($event, itemIndex_r12);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const itemIndex_r12 = i0.ɵɵnextContext().index;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r13.checkboxClasses)(\"checked\", ctx_r13.isChecked(itemIndex_r12));\n  }\n}\n\nfunction ListComponent_5_ng_template_0_2_ng_template_0_Template(rf, ctx) {}\n\nfunction ListComponent_5_ng_template_0_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ListComponent_5_ng_template_0_2_ng_template_0_Template, 0, 0, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    const dataItem_r11 = i0.ɵɵnextContext().$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction2(1, _c5, ctx_r14.template.templateRef, dataItem_r11));\n  }\n}\n\nfunction ListComponent_5_ng_template_0_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const dataItem_r11 = i0.ɵɵnextContext().$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r15.getText(dataItem_r11));\n  }\n}\n\nconst _c7 = function (a0, a1) {\n  return {\n    \"k-disabled\": a0,\n    \"k-table-alt-row\": a1\n  };\n};\n\nfunction ListComponent_5_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 12);\n    i0.ɵɵtemplate(1, ListComponent_5_ng_template_0_input_1_Template, 1, 2, \"input\", 13);\n    i0.ɵɵtemplate(2, ListComponent_5_ng_template_0_2_Template, 1, 4, undefined, 5);\n    i0.ɵɵtemplate(3, ListComponent_5_ng_template_0_ng_template_3_Template, 2, 1, \"ng-template\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const dataItem_r11 = ctx.$implicit;\n    const itemIndex_r12 = ctx.index;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r10.listItemClass);\n    i0.ɵɵproperty(\"checkboxes\", ctx_r10.checkboxes)(\"height\", ctx_r10.virtual == null ? null : ctx_r10.virtual.itemHeight)(\"index\", itemIndex_r12 + ctx_r10.startFrom)(\"multipleSelection\", ctx_r10.multipleSelection)(\"ngClass\", i0.ɵɵpureFunction2(13, _c7, ctx_r10.isDisabled(itemIndex_r12), ctx_r10.isAltRow(itemIndex_r12)));\n    i0.ɵɵattribute(\"id\", ctx_r10.optionPrefix + \"-\" + ctx_r10.getValue(dataItem_r11))(\"tabIndex\", -1)(\"aria-selected\", ctx_r10.isItemSelected(itemIndex_r12));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r10.checkboxes.enabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r10.template);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r10.template);\n  }\n}\n\nfunction ListComponent_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ListComponent_5_ng_template_0_Template, 4, 16, \"ng-template\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.data);\n  }\n}\n\nfunction ListComponent_6_ng_template_0_li_0_2_ng_template_0_Template(rf, ctx) {}\n\nfunction ListComponent_6_ng_template_0_li_0_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ListComponent_6_ng_template_0_li_0_2_ng_template_0_Template, 0, 0, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    const dataItem_r24 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction2(1, _c5, ctx_r28.groupTemplate.templateRef, dataItem_r24.value));\n  }\n}\n\nfunction ListComponent_6_ng_template_0_li_0_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const dataItem_r24 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵtextInterpolate(dataItem_r24.value);\n  }\n}\n\nfunction ListComponent_6_ng_template_0_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 18);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtemplate(2, ListComponent_6_ng_template_0_li_0_2_Template, 1, 4, undefined, 5);\n    i0.ɵɵtemplate(3, ListComponent_6_ng_template_0_li_0_ng_template_3_Template, 1, 1, \"ng-template\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r33 = i0.ɵɵnextContext();\n    const itemIndex_r25 = ctx_r33.index;\n    const dataItem_r24 = ctx_r33.$implicit;\n    const ctx_r26 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r26.listGroupItemClass);\n    i0.ɵɵclassProp(\"k-table-alt-row\", ctx_r26.isAltRow(itemIndex_r25 - 1));\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction3(12, _c6, ctx_r26.virtual == null ? null : ctx_r26.virtual.itemHeight, ctx_r26.virtual == null ? null : ctx_r26.virtual.itemHeight, ctx_r26.virtual ? \"border-box\" : \"inherit\"));\n    i0.ɵɵattribute(\"group-index\", dataItem_r24.index)(\"id\", ctx_r26.optionPrefix + \"-\" + ctx_r26.getValue(dataItem_r24.value))(\"tabIndex\", -1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r26.listGroupItemTextClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r26.groupTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r26.groupTemplate);\n  }\n}\n\nfunction ListComponent_6_ng_template_0_li_1_1_ng_template_0_Template(rf, ctx) {}\n\nfunction ListComponent_6_ng_template_0_li_1_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ListComponent_6_ng_template_0_li_1_1_ng_template_0_Template, 0, 0, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    const dataItem_r24 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r34 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction2(1, _c5, ctx_r34.template.templateRef, dataItem_r24.value));\n  }\n}\n\nfunction ListComponent_6_ng_template_0_li_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const dataItem_r24 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r35 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r35.getText(dataItem_r24.value));\n  }\n}\n\nfunction ListComponent_6_ng_template_0_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 19);\n    i0.ɵɵtemplate(1, ListComponent_6_ng_template_0_li_1_1_Template, 1, 4, undefined, 5);\n    i0.ɵɵtemplate(2, ListComponent_6_ng_template_0_li_1_ng_template_2_Template, 2, 1, \"ng-template\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r39 = i0.ɵɵnextContext();\n    const dataItem_r24 = ctx_r39.$implicit;\n    const itemIndex_r25 = ctx_r39.index;\n    const ctx_r27 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r27.listItemClass);\n    i0.ɵɵproperty(\"height\", ctx_r27.virtual == null ? null : ctx_r27.virtual.itemHeight)(\"index\", dataItem_r24.offsetIndex)(\"multipleSelection\", ctx_r27.multipleSelection)(\"ngClass\", i0.ɵɵpureFunction2(12, _c7, ctx_r27.isDisabled(dataItem_r24.offsetIndex), ctx_r27.isAltRow(itemIndex_r25 - 1)));\n    i0.ɵɵattribute(\"absolute-index\", dataItem_r24.index)(\"id\", ctx_r27.optionPrefix + \"-\" + ctx_r27.getValue(dataItem_r24.value))(\"tabIndex\", -1)(\"aria-selected\", ctx_r27.isItemSelected(dataItem_r24.offsetIndex));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r27.template);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r27.template);\n  }\n}\n\nfunction ListComponent_6_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ListComponent_6_ng_template_0_li_0_Template, 4, 16, \"li\", 16);\n    i0.ɵɵtemplate(1, ListComponent_6_ng_template_0_li_1_Template, 3, 15, \"li\", 17);\n  }\n\n  if (rf & 2) {\n    const dataItem_r24 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", dataItem_r24.header && dataItem_r24.index > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !dataItem_r24.header);\n  }\n}\n\nfunction ListComponent_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ListComponent_6_ng_template_0_Template, 2, 2, \"ng-template\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.data);\n  }\n}\n\nfunction ListComponent_kendo_resize_sensor_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r41 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-resize-sensor\", 20);\n    i0.ɵɵlistener(\"resize\", function ListComponent_kendo_resize_sensor_7_Template_kendo_resize_sensor_resize_0_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r40 = i0.ɵɵnextContext();\n      return ctx_r40.listResize.emit();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ListComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 21, 22);\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵelementStart(3, \"kendo-resize-sensor\", 20);\n    i0.ɵɵlistener(\"resize\", function ListComponent_div_8_Template_kendo_resize_sensor_resize_3_listener() {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r43 = i0.ɵɵnextContext();\n      return ctx_r43.listResize.emit();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"height\", ctx_r6.scrollHeight, \"px\");\n  }\n}\n\nconst _c8 = [\"container\"];\nconst _c9 = [\"popupTemplate\"];\nconst _c10 = [\"optionsList\"];\n\nfunction AutoCompleteComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵlistener(\"click\", function AutoCompleteComponent_span_3_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.clearValue($event);\n    })(\"mousedown\", function AutoCompleteComponent_span_3_Template_span_mousedown_0_listener($event) {\n      return $event.preventDefault();\n    });\n    i0.ɵɵelement(1, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"visibility\", ctx_r1.clearButtonVisiblity);\n    i0.ɵɵattribute(\"title\", ctx_r1.messageFor(\"clearTitle\"));\n  }\n}\n\nfunction AutoCompleteComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 10);\n  }\n}\n\nfunction AutoCompleteComponent_ng_template_5_0_ng_template_0_Template(rf, ctx) {}\n\nconst _c15 = function (a0) {\n  return {\n    templateRef: a0\n  };\n};\n\nfunction AutoCompleteComponent_ng_template_5_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoCompleteComponent_ng_template_5_0_ng_template_0_Template, 0, 0, \"ng-template\", 15);\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction1(1, _c15, ctx_r10.headerTemplate.templateRef));\n  }\n}\n\nfunction AutoCompleteComponent_ng_template_5_div_3_ng_template_1_Template(rf, ctx) {}\n\nfunction AutoCompleteComponent_ng_template_5_div_3_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r16.messageFor(\"noDataText\"));\n  }\n}\n\nfunction AutoCompleteComponent_ng_template_5_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, AutoCompleteComponent_ng_template_5_div_3_ng_template_1_Template, 0, 0, \"ng-template\", 17);\n    i0.ɵɵtemplate(2, AutoCompleteComponent_ng_template_5_div_3_ng_template_2_Template, 2, 1, \"ng-template\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.noDataTemplate)(\"templateContext\", i0.ɵɵpureFunction1(3, _c15, ctx_r12.noDataTemplate == null ? null : ctx_r12.noDataTemplate.templateRef));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r12.noDataTemplate);\n  }\n}\n\nfunction AutoCompleteComponent_ng_template_5_4_ng_template_0_Template(rf, ctx) {}\n\nfunction AutoCompleteComponent_ng_template_5_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoCompleteComponent_ng_template_5_4_ng_template_0_Template, 0, 0, \"ng-template\", 15);\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction1(1, _c15, ctx_r13.footerTemplate.templateRef));\n  }\n}\n\nfunction AutoCompleteComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵtemplate(0, AutoCompleteComponent_ng_template_5_0_Template, 1, 3, undefined, 11);\n    i0.ɵɵelementStart(1, \"kendo-list\", 12, 13);\n    i0.ɵɵlistener(\"pageChange\", function AutoCompleteComponent_ng_template_5_Template_kendo_list_pageChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.pageChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AutoCompleteComponent_ng_template_5_div_3_Template, 3, 5, \"div\", 14);\n    i0.ɵɵtemplate(4, AutoCompleteComponent_ng_template_5_4_Template, 1, 3, undefined, 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"size\", ctx_r4.size)(\"rounded\", ctx_r4.rounded)(\"id\", ctx_r4.listBoxId)(\"optionPrefix\", ctx_r4.optionPrefix)(\"data\", ctx_r4.data)(\"textField\", ctx_r4.valueField)(\"valueField\", ctx_r4.valueField)(\"template\", ctx_r4.template)(\"groupTemplate\", ctx_r4.groupTemplate)(\"fixedGroupTemplate\", ctx_r4.fixedGroupTemplate)(\"height\", ctx_r4.listHeight)(\"show\", ctx_r4.isOpen)(\"virtual\", ctx_r4.virtual);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.data.length === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.footerTemplate);\n  }\n}\n\nfunction AutoCompleteComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-resize-sensor\", 18);\n    i0.ɵɵlistener(\"resize\", function AutoCompleteComponent_ng_template_7_Template_kendo_resize_sensor_resize_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.onResize();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c16 = [\"select\"];\n\nconst _c23 = function (a0) {\n  return {\n    mousedown: a0\n  };\n};\n\nfunction ComboBoxComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵlistener(\"click\", function ComboBoxComponent_span_3_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.clearValue($event);\n    });\n    i0.ɵɵelement(1, \"span\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"visibility\", ctx_r1.clearButtonVisiblity);\n    i0.ɵɵproperty(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction1(4, _c23, ctx_r1.preventEventDefault));\n    i0.ɵɵattribute(\"title\", ctx_r1.messageFor(\"clearTitle\"));\n  }\n}\n\nfunction ComboBoxComponent_ng_template_7_0_ng_template_0_Template(rf, ctx) {}\n\nfunction ComboBoxComponent_ng_template_7_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ComboBoxComponent_ng_template_7_0_ng_template_0_Template, 0, 0, \"ng-template\", 16);\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction1(1, _c15, ctx_r9.headerTemplate.templateRef));\n  }\n}\n\nfunction ComboBoxComponent_ng_template_7_div_3_ng_template_1_Template(rf, ctx) {}\n\nfunction ComboBoxComponent_ng_template_7_div_3_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r15.messageFor(\"noDataText\"));\n  }\n}\n\nfunction ComboBoxComponent_ng_template_7_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, ComboBoxComponent_ng_template_7_div_3_ng_template_1_Template, 0, 0, \"ng-template\", 18);\n    i0.ɵɵtemplate(2, ComboBoxComponent_ng_template_7_div_3_ng_template_2_Template, 2, 1, \"ng-template\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.noDataTemplate)(\"templateContext\", i0.ɵɵpureFunction1(3, _c15, ctx_r11.noDataTemplate ? ctx_r11.noDataTemplate.templateRef : undefined));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r11.noDataTemplate);\n  }\n}\n\nfunction ComboBoxComponent_ng_template_7_4_ng_template_0_Template(rf, ctx) {}\n\nfunction ComboBoxComponent_ng_template_7_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ComboBoxComponent_ng_template_7_4_ng_template_0_Template, 0, 0, \"ng-template\", 16);\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction1(1, _c15, ctx_r12.footerTemplate.templateRef));\n  }\n}\n\nfunction ComboBoxComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵtemplate(0, ComboBoxComponent_ng_template_7_0_Template, 1, 3, undefined, 12);\n    i0.ɵɵelementStart(1, \"kendo-list\", 13, 14);\n    i0.ɵɵlistener(\"pageChange\", function ComboBoxComponent_ng_template_7_Template_kendo_list_pageChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.pageChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ComboBoxComponent_ng_template_7_div_3_Template, 3, 5, \"div\", 15);\n    i0.ɵɵtemplate(4, ComboBoxComponent_ng_template_7_4_Template, 1, 3, undefined, 12);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"size\", ctx_r4.size)(\"rounded\", ctx_r4.rounded)(\"id\", ctx_r4.listBoxId)(\"optionPrefix\", ctx_r4.optionPrefix)(\"data\", ctx_r4.data)(\"textField\", ctx_r4.textField)(\"valueField\", ctx_r4.valueField)(\"template\", ctx_r4.template)(\"groupTemplate\", ctx_r4.groupTemplate)(\"fixedGroupTemplate\", ctx_r4.fixedGroupTemplate)(\"height\", ctx_r4.listHeight)(\"show\", ctx_r4.isOpen)(\"virtual\", ctx_r4.virtual);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.data.length === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.footerTemplate);\n  }\n}\n\nfunction ComboBoxComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-resize-sensor\", 19);\n    i0.ɵɵlistener(\"resize\", function ComboBoxComponent_ng_template_9_Template_kendo_resize_sensor_resize_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.onResize();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DropDownListComponent_3_ng_template_0_Template(rf, ctx) {}\n\nfunction DropDownListComponent_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DropDownListComponent_3_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction2(1, _c5, ctx_r0.valueTemplate.templateRef, ctx_r0.dataItem));\n  }\n}\n\nfunction DropDownListComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate(ctx_r1.getText());\n  }\n}\n\nfunction DropDownListComponent_ng_template_7_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵlistener(\"click\", function DropDownListComponent_ng_template_7_ng_template_0_Template_div_click_0_listener($event) {\n      return $event.stopImmediatePropagation();\n    });\n    i0.ɵɵelementStart(1, \"span\", 14);\n    i0.ɵɵelement(2, \"span\", 15);\n    i0.ɵɵelementStart(3, \"input\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function DropDownListComponent_ng_template_7_ng_template_0_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.filterText = $event;\n    })(\"keydown\", function DropDownListComponent_ng_template_7_ng_template_0_Template_input_keydown_3_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return ctx_r17.keydown($event);\n    })(\"input\", function DropDownListComponent_ng_template_7_ng_template_0_Template_input_input_3_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return ctx_r18.handleFilter($event);\n    })(\"focus\", function DropDownListComponent_ng_template_7_ng_template_0_Template_input_focus_3_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.onFilterFocus();\n    })(\"blur\", function DropDownListComponent_ng_template_7_ng_template_0_Template_input_blur_3_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return ctx_r20.blurFilterInput();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r7.filterInputClasses);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"filterInput\", ctx_r7.isFocused && !ctx_r7.touchEnabled)(\"dir\", ctx_r7.direction)(\"ngModel\", ctx_r7.filterText);\n    i0.ɵɵattribute(\"aria-controls\", ctx_r7.ariaControls)(\"aria-activedescendant\", ctx_r7.ariaActivedescendant);\n  }\n}\n\nconst _c28 = function (a0) {\n  return {\n    \"k-disabled\": a0\n  };\n};\n\nfunction DropDownListComponent_ng_template_7_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelementStart(1, \"div\", 18);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r8.optionLabelSizeClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c28, ctx_r8.isDisabledDefaultItem))(\"index\", -1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.getDefaultItemText(), \" \");\n  }\n}\n\nfunction DropDownListComponent_ng_template_7_ng_template_2_ng_template_2_Template(rf, ctx) {}\n\nfunction DropDownListComponent_ng_template_7_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelementStart(1, \"div\", 18);\n    i0.ɵɵtemplate(2, DropDownListComponent_ng_template_7_ng_template_2_ng_template_2_Template, 0, 0, \"ng-template\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r9.optionLabelSizeClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c28, ctx_r9.isDisabledDefaultItem))(\"index\", -1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction2(6, _c5, ctx_r9.itemTemplate.templateRef, ctx_r9.defaultItem));\n  }\n}\n\nfunction DropDownListComponent_ng_template_7_3_ng_template_0_Template(rf, ctx) {}\n\nfunction DropDownListComponent_ng_template_7_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DropDownListComponent_ng_template_7_3_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction1(1, _c15, ctx_r10.headerTemplate.templateRef));\n  }\n}\n\nfunction DropDownListComponent_ng_template_7_div_6_ng_template_1_Template(rf, ctx) {}\n\nfunction DropDownListComponent_ng_template_7_div_6_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r24.messageFor(\"noDataText\"));\n  }\n}\n\nfunction DropDownListComponent_ng_template_7_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, DropDownListComponent_ng_template_7_div_6_ng_template_1_Template, 0, 0, \"ng-template\", 20);\n    i0.ɵɵtemplate(2, DropDownListComponent_ng_template_7_div_6_ng_template_2_Template, 2, 1, \"ng-template\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.noDataTemplate)(\"templateContext\", i0.ɵɵpureFunction1(3, _c15, ctx_r12.noDataTemplate ? ctx_r12.noDataTemplate.templateRef : undefined));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r12.noDataTemplate);\n  }\n}\n\nfunction DropDownListComponent_ng_template_7_7_ng_template_0_Template(rf, ctx) {}\n\nfunction DropDownListComponent_ng_template_7_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DropDownListComponent_ng_template_7_7_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction1(1, _c15, ctx_r13.footerTemplate.templateRef));\n  }\n}\n\nfunction DropDownListComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵtemplate(0, DropDownListComponent_ng_template_7_ng_template_0_Template, 4, 6, \"ng-template\", 4);\n    i0.ɵɵtemplate(1, DropDownListComponent_ng_template_7_ng_template_1_Template, 3, 6, \"ng-template\", 4);\n    i0.ɵɵtemplate(2, DropDownListComponent_ng_template_7_ng_template_2_Template, 3, 9, \"ng-template\", 4);\n    i0.ɵɵtemplate(3, DropDownListComponent_ng_template_7_3_Template, 1, 3, undefined, 3);\n    i0.ɵɵelementStart(4, \"kendo-list\", 10, 11);\n    i0.ɵɵlistener(\"pageChange\", function DropDownListComponent_ng_template_7_Template_kendo_list_pageChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.pageChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, DropDownListComponent_ng_template_7_div_6_Template, 3, 5, \"div\", 12);\n    i0.ɵɵtemplate(7, DropDownListComponent_ng_template_7_7_Template, 1, 3, undefined, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.filterable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.defaultItem && !ctx_r3.itemTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.defaultItem && ctx_r3.itemTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"size\", ctx_r3.size)(\"rounded\", ctx_r3.rounded)(\"id\", ctx_r3.listBoxId)(\"optionPrefix\", ctx_r3.optionPrefix)(\"data\", ctx_r3.data)(\"textField\", ctx_r3.textField)(\"valueField\", ctx_r3.valueField)(\"template\", ctx_r3.itemTemplate)(\"groupTemplate\", ctx_r3.groupTemplate)(\"fixedGroupTemplate\", ctx_r3.fixedGroupTemplate)(\"height\", ctx_r3.listHeight)(\"show\", ctx_r3.isOpen)(\"virtual\", ctx_r3.virtual)(\"ariaLive\", ctx_r3.ariaLive);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.data.length === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.footerTemplate);\n  }\n}\n\nfunction DropDownListComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-resize-sensor\", 21);\n    i0.ɵɵlistener(\"resize\", function DropDownListComponent_ng_template_9_Template_kendo_resize_sensor_resize_0_listener() {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return ctx_r28.onResize();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TagListComponent_div_0_2_ng_template_0_Template(rf, ctx) {}\n\nfunction TagListComponent_div_0_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TagListComponent_div_0_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\n\nfunction TagListComponent_div_0_ng_template_3_1_ng_template_0_Template(rf, ctx) {}\n\nfunction TagListComponent_div_0_ng_template_3_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TagListComponent_div_0_ng_template_3_1_ng_template_0_Template, 0, 0, \"ng-template\", 12);\n  }\n\n  if (rf & 2) {\n    const tag_r1 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction2(1, _c5, ctx_r9.groupTemplate.templateRef, tag_r1));\n  }\n}\n\nfunction TagListComponent_div_0_ng_template_3_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const tag_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵtextInterpolate2(\"\", tag_r1.length, \" \", tag_r1.length === 1 ? \"item\" : \"items\", \" selected\");\n  }\n}\n\nfunction TagListComponent_div_0_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtemplate(1, TagListComponent_div_0_ng_template_3_1_Template, 1, 4, undefined, 10);\n    i0.ɵɵtemplate(2, TagListComponent_div_0_ng_template_3_ng_template_2_Template, 1, 2, \"ng-template\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.groupTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.groupTemplate);\n  }\n}\n\nfunction TagListComponent_div_0_ng_template_5_1_ng_template_0_Template(rf, ctx) {}\n\nfunction TagListComponent_div_0_ng_template_5_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TagListComponent_div_0_ng_template_5_1_ng_template_0_Template, 0, 0, \"ng-template\", 12);\n  }\n\n  if (rf & 2) {\n    const tag_r1 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction2(1, _c5, ctx_r14.template.templateRef, tag_r1));\n  }\n}\n\nfunction TagListComponent_div_0_ng_template_5_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    const tag_r1 = ctx_r18.$implicit;\n    const index_r2 = ctx_r18.index;\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate(ctx_r15.tagProp(tag_r1, ctx_r15.textField, index_r2));\n  }\n}\n\nfunction TagListComponent_div_0_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtemplate(1, TagListComponent_div_0_ng_template_5_1_Template, 1, 4, undefined, 10);\n    i0.ɵɵtemplate(2, TagListComponent_div_0_ng_template_5_ng_template_2_Template, 1, 1, \"ng-template\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.template);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r7.template);\n  }\n}\n\nconst _c29 = function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n  return {\n    \"k-focus\": a0,\n    \"k-disabled\": a1,\n    \"k-chip-sm\": a2,\n    \"k-chip-md\": a3,\n    \"k-chip-lg\": a4,\n    \"k-rounded-sm\": a5,\n    \"k-rounded-md\": a6,\n    \"k-rounded-lg\": a7,\n    \"k-rounded-full\": a8,\n    \"k-chip-solid k-chip-solid-base\": a9,\n    \"k-chip-flat k-chip-flat-base\": a10,\n    \"k-chip-outline k-chip-outline-base\": a11\n  };\n};\n\nfunction TagListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"span\", 2);\n    i0.ɵɵtemplate(2, TagListComponent_div_0_2_Template, 1, 0, undefined, 3);\n    i0.ɵɵtemplate(3, TagListComponent_div_0_ng_template_3_Template, 3, 2, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(5, TagListComponent_div_0_ng_template_5_Template, 3, 2, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\", 6);\n    i0.ɵɵelementStart(8, \"span\", 7);\n    i0.ɵɵelementStart(9, \"span\", 8);\n    i0.ɵɵlistener(\"mousedown\", function TagListComponent_div_0_Template_span_mousedown_9_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const tag_r1 = restoredCtx.$implicit;\n      const index_r2 = restoredCtx.index;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.deleteTag($event, tag_r1, index_r2);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tag_r1 = ctx.$implicit;\n    const index_r2 = ctx.index;\n\n    const _r4 = i0.ɵɵreference(4);\n\n    const _r6 = i0.ɵɵreference(6);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunctionV(7, _c29, [index_r2 === ctx_r0.focused, ctx_r0.isTagDisabled(tag_r1, index_r2), ctx_r0.size === \"small\", ctx_r0.size === \"medium\", ctx_r0.size === \"large\", ctx_r0.rounded === \"small\", ctx_r0.rounded === \"medium\", ctx_r0.rounded === \"large\", ctx_r0.rounded === \"full\", ctx_r0.fillMode === \"solid\", ctx_r0.fillMode === \"flat\", ctx_r0.fillMode === \"outline\"]));\n    i0.ɵɵattribute(\"id\", ctx_r0.itemId(tag_r1, index_r2))(\"aria-hidden\", ctx_r0.tagAriaHidden(index_r2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isGroupTag(tag_r1))(\"ngIfThen\", _r4)(\"ngIfElse\", _r6);\n    i0.ɵɵadvance(6);\n    i0.ɵɵattribute(\"aria-hidden\", index_r2 !== ctx_r0.focused);\n  }\n}\n\nconst _c30 = [\"*\"];\n\nfunction MultiSelectComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵlistener(\"mousedown\", function MultiSelectComponent_span_4_Template_span_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.clearAll($event);\n    });\n    i0.ɵɵelement(1, \"span\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"visibility\", ctx_r1.clearButtonVisiblity);\n    i0.ɵɵattribute(\"title\", ctx_r1.messageFor(\"clearTitle\"));\n  }\n}\n\nfunction MultiSelectComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 11);\n  }\n}\n\nfunction MultiSelectComponent_ng_template_6_0_ng_template_0_Template(rf, ctx) {}\n\nfunction MultiSelectComponent_ng_template_6_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MultiSelectComponent_ng_template_6_0_ng_template_0_Template, 0, 0, \"ng-template\", 17);\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction1(1, _c15, ctx_r9.headerTemplate.templateRef));\n  }\n}\n\nfunction MultiSelectComponent_ng_template_6_div_1_2_ng_template_0_Template(rf, ctx) {}\n\nfunction MultiSelectComponent_ng_template_6_div_1_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MultiSelectComponent_ng_template_6_div_1_2_ng_template_0_Template, 0, 0, \"ng-template\", 17);\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction2(1, _c5, ctx_r15.customItemTemplate.templateRef, ctx_r15.text));\n  }\n}\n\nfunction MultiSelectComponent_ng_template_6_div_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(3);\n    i0.ɵɵtextInterpolate(ctx_r17.text);\n  }\n}\n\nfunction MultiSelectComponent_ng_template_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelementStart(1, \"div\", 19);\n    i0.ɵɵtemplate(2, MultiSelectComponent_ng_template_6_div_1_2_Template, 1, 4, undefined, 20);\n    i0.ɵɵtemplate(3, MultiSelectComponent_ng_template_6_div_1_ng_template_3_Template, 1, 1, \"ng-template\", null, 21, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelement(5, \"span\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r16 = i0.ɵɵreference(4);\n\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r10.customItemSizeClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"multipleSelection\", true)(\"index\", -1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r10.customItemTemplate)(\"ngIfElse\", _r16);\n  }\n}\n\nfunction MultiSelectComponent_ng_template_6_div_4_ng_template_1_Template(rf, ctx) {}\n\nfunction MultiSelectComponent_ng_template_6_div_4_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r20.messageFor(\"noDataText\"));\n  }\n}\n\nfunction MultiSelectComponent_ng_template_6_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, MultiSelectComponent_ng_template_6_div_4_ng_template_1_Template, 0, 0, \"ng-template\", 24);\n    i0.ɵɵtemplate(2, MultiSelectComponent_ng_template_6_div_4_ng_template_2_Template, 2, 1, \"ng-template\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.noDataTemplate)(\"templateContext\", i0.ɵɵpureFunction1(3, _c15, ctx_r12.noDataTemplate ? ctx_r12.noDataTemplate.templateRef : undefined));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r12.noDataTemplate);\n  }\n}\n\nfunction MultiSelectComponent_ng_template_6_5_ng_template_0_Template(rf, ctx) {}\n\nfunction MultiSelectComponent_ng_template_6_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MultiSelectComponent_ng_template_6_5_ng_template_0_Template, 0, 0, \"ng-template\", 17);\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction1(1, _c15, ctx_r13.footerTemplate.templateRef));\n  }\n}\n\nfunction MultiSelectComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵtemplate(0, MultiSelectComponent_ng_template_6_0_Template, 1, 3, undefined, 12);\n    i0.ɵɵtemplate(1, MultiSelectComponent_ng_template_6_div_1_Template, 6, 5, \"div\", 13);\n    i0.ɵɵelementStart(2, \"kendo-list\", 14, 15);\n    i0.ɵɵlistener(\"pageChange\", function MultiSelectComponent_ng_template_6_Template_kendo_list_pageChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.pageChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, MultiSelectComponent_ng_template_6_div_4_Template, 3, 5, \"div\", 16);\n    i0.ɵɵtemplate(5, MultiSelectComponent_ng_template_6_5_Template, 1, 3, undefined, 12);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.allowCustom && ctx_r4.text);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"size\", ctx_r4.size)(\"rounded\", ctx_r4.rounded)(\"id\", ctx_r4.listBoxId)(\"optionPrefix\", ctx_r4.optionPrefix)(\"data\", ctx_r4.data)(\"textField\", ctx_r4.textField)(\"valueField\", ctx_r4.valueField)(\"height\", ctx_r4.listHeight)(\"template\", ctx_r4.template)(\"groupTemplate\", ctx_r4.groupTemplate)(\"fixedGroupTemplate\", ctx_r4.fixedGroupTemplate)(\"show\", ctx_r4.isOpen)(\"multipleSelection\", true)(\"virtual\", ctx_r4.virtual)(\"checkboxes\", ctx_r4.checkboxes)(\"isMultiselect\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.data.length === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.footerTemplate);\n  }\n}\n\nfunction MultiSelectComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-resize-sensor\", 25);\n    i0.ɵɵlistener(\"resize\", function MultiSelectComponent_ng_template_8_Template_kendo_resize_sensor_resize_0_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.onResize();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c35 = [\"header\"];\n\nfunction MultiColumnComboBoxComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵlistener(\"click\", function MultiColumnComboBoxComponent_span_3_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.clearValue($event);\n    });\n    i0.ɵɵelement(1, \"span\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"visibility\", ctx_r1.clearButtonVisiblity);\n    i0.ɵɵproperty(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction1(4, _c23, ctx_r1.preventEventDefault));\n    i0.ɵɵattribute(\"title\", ctx_r1.messageFor(\"clearTitle\"));\n  }\n}\n\nfunction MultiColumnComboBoxComponent_ng_template_7_0_ng_template_0_Template(rf, ctx) {}\n\nfunction MultiColumnComboBoxComponent_ng_template_7_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MultiColumnComboBoxComponent_ng_template_7_0_ng_template_0_Template, 0, 0, \"ng-template\", 25);\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction1(1, _c15, ctx_r9.headerTemplate == null ? null : ctx_r9.headerTemplate.templateRef));\n  }\n}\n\nfunction MultiColumnComboBoxComponent_ng_template_7_ng_container_7_col_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"col\");\n  }\n\n  if (rf & 2) {\n    const column_r19 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵstyleProp(\"width\", column_r19.width, \"px\");\n  }\n}\n\nfunction MultiColumnComboBoxComponent_ng_template_7_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MultiColumnComboBoxComponent_ng_template_7_ng_container_7_col_1_Template, 1, 2, \"col\", 26);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r19 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !column_r19.hidden && column_r19.matchesMedia);\n  }\n}\n\nfunction MultiColumnComboBoxComponent_ng_template_7_ng_container_10_th_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r22 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", column_r22.title || column_r22.field, \" \");\n  }\n}\n\nfunction MultiColumnComboBoxComponent_ng_template_7_ng_container_10_th_1_2_ng_template_0_Template(rf, ctx) {}\n\nconst _c42 = function (a0, a1, a2) {\n  return {\n    templateRef: a0,\n    $implicit: a1,\n    column: a2\n  };\n};\n\nfunction MultiColumnComboBoxComponent_ng_template_7_ng_container_10_th_1_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MultiColumnComboBoxComponent_ng_template_7_ng_container_10_th_1_2_ng_template_0_Template, 0, 0, \"ng-template\", 25);\n  }\n\n  if (rf & 2) {\n    const column_r22 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction3(1, _c42, column_r22.headerTemplate == null ? null : column_r22.headerTemplate.templateRef, column_r22, column_r22));\n  }\n}\n\nfunction MultiColumnComboBoxComponent_ng_template_7_ng_container_10_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 28);\n    i0.ɵɵtemplate(1, MultiColumnComboBoxComponent_ng_template_7_ng_container_10_th_1_ng_container_1_Template, 2, 1, \"ng-container\", 12);\n    i0.ɵɵtemplate(2, MultiColumnComboBoxComponent_ng_template_7_ng_container_10_th_1_2_Template, 1, 5, undefined, 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r22 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngStyle\", column_r22.headerStyle)(\"ngClass\", column_r22.headerClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !column_r22.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", column_r22.headerTemplate);\n  }\n}\n\nfunction MultiColumnComboBoxComponent_ng_template_7_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MultiColumnComboBoxComponent_ng_template_7_ng_container_10_th_1_Template, 3, 4, \"th\", 27);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r22 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !column_r22.hidden && column_r22.matchesMedia);\n  }\n}\n\nfunction MultiColumnComboBoxComponent_ng_template_7_ng_template_11_ng_container_0_span_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r32 = i0.ɵɵnextContext(2).$implicit;\n    const dataItem_r30 = i0.ɵɵnextContext().$implicit;\n    const ctx_r34 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r34.textFrom(dataItem_r30, column_r32.field), \" \");\n  }\n}\n\nfunction MultiColumnComboBoxComponent_ng_template_7_ng_template_11_ng_container_0_span_1_2_ng_template_0_Template(rf, ctx) {}\n\nconst _c43 = function (a0, a1, a2, a3) {\n  return {\n    templateRef: a0,\n    $implicit: a1,\n    dataItem: a2,\n    column: a3\n  };\n};\n\nfunction MultiColumnComboBoxComponent_ng_template_7_ng_template_11_ng_container_0_span_1_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MultiColumnComboBoxComponent_ng_template_7_ng_template_11_ng_container_0_span_1_2_ng_template_0_Template, 0, 0, \"ng-template\", 25);\n  }\n\n  if (rf & 2) {\n    const column_r32 = i0.ɵɵnextContext(2).$implicit;\n    const dataItem_r30 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction4(1, _c43, column_r32.cellTemplate == null ? null : column_r32.cellTemplate.templateRef, dataItem_r30, dataItem_r30, column_r32));\n  }\n}\n\nfunction MultiColumnComboBoxComponent_ng_template_7_ng_template_11_ng_container_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵtemplate(1, MultiColumnComboBoxComponent_ng_template_7_ng_template_11_ng_container_0_span_1_ng_container_1_Template, 2, 1, \"ng-container\", 12);\n    i0.ɵɵtemplate(2, MultiColumnComboBoxComponent_ng_template_7_ng_template_11_ng_container_0_span_1_2_Template, 1, 6, undefined, 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r32 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵstyleProp(\"width\", column_r32.width, \"px\");\n    i0.ɵɵproperty(\"ngClass\", column_r32.class)(\"ngStyle\", column_r32.style);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !column_r32.cellTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", column_r32.cellTemplate);\n  }\n}\n\nfunction MultiColumnComboBoxComponent_ng_template_7_ng_template_11_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MultiColumnComboBoxComponent_ng_template_7_ng_template_11_ng_container_0_span_1_Template, 3, 6, \"span\", 29);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r32 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !column_r32.hidden && column_r32.matchesMedia);\n  }\n}\n\nfunction MultiColumnComboBoxComponent_ng_template_7_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MultiColumnComboBoxComponent_ng_template_7_ng_template_11_ng_container_0_Template, 2, 1, \"ng-container\", 18);\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r14.columns);\n  }\n}\n\nfunction MultiColumnComboBoxComponent_ng_template_7_div_15_ng_template_1_Template(rf, ctx) {}\n\nfunction MultiColumnComboBoxComponent_ng_template_7_div_15_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r43 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r43.messageFor(\"noDataText\"));\n  }\n}\n\nfunction MultiColumnComboBoxComponent_ng_template_7_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, MultiColumnComboBoxComponent_ng_template_7_div_15_ng_template_1_Template, 0, 0, \"ng-template\", 32);\n    i0.ɵɵtemplate(2, MultiColumnComboBoxComponent_ng_template_7_div_15_ng_template_2_Template, 2, 1, \"ng-template\", 33);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r16.noDataTemplate)(\"templateContext\", i0.ɵɵpureFunction1(3, _c15, ctx_r16.noDataTemplate == null ? null : ctx_r16.noDataTemplate.templateRef));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r16.noDataTemplate);\n  }\n}\n\nfunction MultiColumnComboBoxComponent_ng_template_7_ng_container_16_ng_template_6_Template(rf, ctx) {}\n\nfunction MultiColumnComboBoxComponent_ng_template_7_ng_container_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 34);\n    i0.ɵɵelementStart(2, \"table\", 35);\n    i0.ɵɵelementStart(3, \"tfoot\", 36);\n    i0.ɵɵelementStart(4, \"tr\", 20);\n    i0.ɵɵelementStart(5, \"td\", 37);\n    i0.ɵɵtemplate(6, MultiColumnComboBoxComponent_ng_template_7_ng_container_16_ng_template_6_Template, 0, 0, \"ng-template\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction1(1, _c15, ctx_r17.footerTemplate.templateRef));\n  }\n}\n\nfunction MultiColumnComboBoxComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵtemplate(0, MultiColumnComboBoxComponent_ng_template_7_0_Template, 1, 3, undefined, 12);\n    i0.ɵɵelementStart(1, \"div\", 13);\n    i0.ɵɵelementStart(2, \"div\", 14, 15);\n    i0.ɵɵelementStart(4, \"div\", 16);\n    i0.ɵɵelementStart(5, \"table\", 17);\n    i0.ɵɵelementStart(6, \"colgroup\");\n    i0.ɵɵtemplate(7, MultiColumnComboBoxComponent_ng_template_7_ng_container_7_Template, 2, 1, \"ng-container\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"thead\", 19);\n    i0.ɵɵelementStart(9, \"tr\", 20);\n    i0.ɵɵtemplate(10, MultiColumnComboBoxComponent_ng_template_7_ng_container_10_Template, 2, 1, \"ng-container\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, MultiColumnComboBoxComponent_ng_template_7_ng_template_11_Template, 1, 1, \"ng-template\", null, 21, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(13, \"kendo-list\", 22, 23);\n    i0.ɵɵlistener(\"pageChange\", function MultiColumnComboBoxComponent_ng_template_7_Template_kendo_list_pageChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r45 = i0.ɵɵnextContext();\n      return ctx_r45.pageChange($event);\n    })(\"listResize\", function MultiColumnComboBoxComponent_ng_template_7_Template_kendo_list_listResize_13_listener() {\n      i0.ɵɵrestoreView(_r46);\n\n      const _r10 = i0.ɵɵreference(3);\n\n      const ctx_r47 = i0.ɵɵnextContext();\n      return ctx_r47.updateHeaderPadding(_r10);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(15, MultiColumnComboBoxComponent_ng_template_7_div_15_Template, 3, 5, \"div\", 24);\n    i0.ɵɵtemplate(16, MultiColumnComboBoxComponent_ng_template_7_ng_container_16_Template, 7, 3, \"ng-container\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r13 = i0.ɵɵreference(12);\n\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r4.tableSizeClass);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.columns);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.columns);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"id\", ctx_r4.listBoxId)(\"optionPrefix\", ctx_r4.optionPrefix)(\"data\", ctx_r4.data)(\"textField\", ctx_r4.textField)(\"valueField\", ctx_r4.valueField)(\"template\", i0.ɵɵpureFunction1(18, _c15, _r13))(\"groupTemplate\", ctx_r4.groupTemplate)(\"fixedGroupTemplate\", ctx_r4.fixedGroupTemplate)(\"height\", ctx_r4.listHeight)(\"show\", ctx_r4.isOpen)(\"virtual\", ctx_r4.virtual)(\"type\", \"dropdowngrid\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.data.length === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.footerTemplate);\n  }\n}\n\nfunction MultiColumnComboBoxComponent_kendo_resize_sensor_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r49 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-resize-sensor\", 38);\n    i0.ɵɵlistener(\"resize\", function MultiColumnComboBoxComponent_kendo_resize_sensor_9_Template_kendo_resize_sensor_resize_0_listener() {\n      i0.ɵɵrestoreView(_r49);\n      const ctx_r48 = i0.ɵɵnextContext();\n      return ctx_r48.onResize();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c44 = [\"treeview\"];\nconst _c45 = [\"filterInput\"];\n\nfunction DropDownTreeComponent_3_ng_template_0_Template(rf, ctx) {}\n\nfunction DropDownTreeComponent_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DropDownTreeComponent_3_ng_template_0_Template, 0, 0, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction2(1, _c5, ctx_r0.valueTemplate.templateRef, ctx_r0.dataItem));\n  }\n}\n\nfunction DropDownTreeComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.text || ctx_r1.placeholder, \" \");\n  }\n}\n\nfunction DropDownTreeComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵlistener(\"click\", function DropDownTreeComponent_span_5_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.clearValue($event);\n    });\n    i0.ɵɵelement(1, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"visibility\", ctx_r2.clearButtonVisiblity);\n    i0.ɵɵattribute(\"title\", ctx_r2.messageFor(\"clearTitle\"));\n  }\n}\n\nconst _c52 = function (a0) {\n  return {\n    blur: a0\n  };\n};\n\nfunction DropDownTreeComponent_ng_template_8_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵelementStart(1, \"span\", 17);\n    i0.ɵɵelementStart(2, \"span\", 18);\n    i0.ɵɵelement(3, \"span\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 20, 21);\n    i0.ɵɵlistener(\"input\", function DropDownTreeComponent_ng_template_8_span_0_Template_input_input_4_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.handleFilterInputChange($event.target);\n    })(\"keydown.arrowdown\", function DropDownTreeComponent_ng_template_8_span_0_Template_input_keydown_arrowdown_4_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return ctx_r17.handleKeydown($event);\n    })(\"keydown.alt.arrowup\", function DropDownTreeComponent_ng_template_8_span_0_Template_input_keydown_alt_arrowup_4_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return ctx_r18.handleKeydown($event);\n    })(\"ngModelChange\", function DropDownTreeComponent_ng_template_8_span_0_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.filter = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r9.filterInputClasses);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"filterInput\", ctx_r9.filterable && !ctx_r9.touchEnabled)(\"ngModel\", ctx_r9.filter)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction1(5, _c52, ctx_r9.handleBlur))(\"scope\", ctx_r9);\n  }\n}\n\nfunction DropDownTreeComponent_ng_template_8_1_ng_template_0_Template(rf, ctx) {}\n\nfunction DropDownTreeComponent_ng_template_8_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DropDownTreeComponent_ng_template_8_1_ng_template_0_Template, 0, 0, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction1(1, _c15, ctx_r10.headerTemplate == null ? null : ctx_r10.headerTemplate.templateRef));\n  }\n}\n\nfunction DropDownTreeComponent_ng_template_8_kendo_treeview_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"kendo-treeview\", 22, 23);\n    i0.ɵɵlistener(\"selectedKeysChange\", function DropDownTreeComponent_ng_template_8_kendo_treeview_2_Template_kendo_treeview_selectedKeysChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return ctx_r22.selectedKeys = $event;\n    })(\"focusout\", function DropDownTreeComponent_ng_template_8_kendo_treeview_2_Template_kendo_treeview_focusout_0_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return ctx_r24.handleBlur($event);\n    })(\"keydown\", function DropDownTreeComponent_ng_template_8_kendo_treeview_2_Template_kendo_treeview_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return ctx_r25.handleKeydown($event);\n    })(\"selectionChange\", function DropDownTreeComponent_ng_template_8_kendo_treeview_2_Template_kendo_treeview_selectionChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r26 = i0.ɵɵnextContext(2);\n      return ctx_r26.onSelectionChange($event);\n    })(\"expand\", function DropDownTreeComponent_ng_template_8_kendo_treeview_2_Template_kendo_treeview_expand_0_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return ctx_r27.nodeExpand.emit($event);\n    })(\"collapse\", function DropDownTreeComponent_ng_template_8_kendo_treeview_2_Template_kendo_treeview_collapse_0_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      return ctx_r28.nodeCollapse.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"max-height\", ctx_r11.listHeight, \"px\");\n    i0.ɵɵproperty(\"size\", ctx_r11.size)(\"nodes\", ctx_r11.data)(\"animate\", false)(\"selectedKeys\", ctx_r11.selectedKeys)(\"selectBy\", ctx_r11.selectBy)(\"textField\", ctx_r11.textField)(\"children\", ctx_r11.children)(\"hasChildren\", ctx_r11.hasChildren)(\"loadOnDemand\", ctx_r11.loadOnDemand)(\"isExpanded\", ctx_r11.isNodeExpanded)(\"isDisabled\", ctx_r11.itemDisabled)(\"nodeTemplate\", ctx_r11.nodeTemplate)(\"filter\", ctx_r11.filter)(\"isVisible\", ctx_r11.isNodeVisible);\n  }\n}\n\nfunction DropDownTreeComponent_ng_template_8_3_ng_template_0_Template(rf, ctx) {}\n\nfunction DropDownTreeComponent_ng_template_8_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DropDownTreeComponent_ng_template_8_3_ng_template_0_Template, 0, 0, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction1(1, _c15, ctx_r12.footerTemplate == null ? null : ctx_r12.footerTemplate.templateRef));\n  }\n}\n\nfunction DropDownTreeComponent_ng_template_8_div_4_ng_template_1_Template(rf, ctx) {}\n\nfunction DropDownTreeComponent_ng_template_8_div_4_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r31.messageFor(\"noDataText\"));\n  }\n}\n\nfunction DropDownTreeComponent_ng_template_8_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, DropDownTreeComponent_ng_template_8_div_4_ng_template_1_Template, 0, 0, \"ng-template\", 25);\n    i0.ɵɵtemplate(2, DropDownTreeComponent_ng_template_8_div_4_ng_template_2_Template, 2, 1, \"ng-template\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.noDataTemplate)(\"templateContext\", i0.ɵɵpureFunction1(3, _c15, ctx_r13.noDataTemplate == null ? null : ctx_r13.noDataTemplate.templateRef));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r13.noDataTemplate);\n  }\n}\n\nfunction DropDownTreeComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DropDownTreeComponent_ng_template_8_span_0_Template, 6, 7, \"span\", 13);\n    i0.ɵɵtemplate(1, DropDownTreeComponent_ng_template_8_1_Template, 1, 3, undefined, 3);\n    i0.ɵɵtemplate(2, DropDownTreeComponent_ng_template_8_kendo_treeview_2_Template, 2, 16, \"kendo-treeview\", 14);\n    i0.ɵɵtemplate(3, DropDownTreeComponent_ng_template_8_3_Template, 1, 3, undefined, 3);\n    i0.ɵɵtemplate(4, DropDownTreeComponent_ng_template_8_div_4_Template, 3, 5, \"div\", 15);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.filterable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.data.length !== 0 && !ctx_r4.allNodesHidden);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.footerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.data.length === 0 || ctx_r4.allNodesHidden);\n  }\n}\n\nconst _c53 = [\"checkAllInput\"];\n\nfunction MultiSelectTreeComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵelementStart(1, \"span\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.placeholder);\n  }\n}\n\nfunction MultiSelectTreeComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵlistener(\"click\", function MultiSelectTreeComponent_span_3_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.clearAll($event);\n    });\n    i0.ɵɵelement(1, \"span\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"title\", ctx_r1.messageFor(\"clearTitle\"));\n  }\n}\n\nfunction MultiSelectTreeComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 11);\n  }\n}\n\nfunction MultiSelectTreeComponent_ng_template_5_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵelementStart(1, \"span\", 19);\n    i0.ɵɵelementStart(2, \"span\", 20);\n    i0.ɵɵelement(3, \"span\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 22, 23);\n    i0.ɵɵlistener(\"input\", function MultiSelectTreeComponent_ng_template_5_span_0_Template_input_input_4_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.handleFilterInputChange($event.target);\n    })(\"keydown\", function MultiSelectTreeComponent_ng_template_5_span_0_Template_input_keydown_4_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return ctx_r17.handleKeydown($event);\n    })(\"ngModelChange\", function MultiSelectTreeComponent_ng_template_5_span_0_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return ctx_r18.filter = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r8.filterInputClasses);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"filterInput\", ctx_r8.filterable && !ctx_r8.touchEnabled)(\"ngModel\", ctx_r8.filter)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction1(5, _c52, ctx_r8.handleBlur))(\"scope\", ctx_r8);\n  }\n}\n\nfunction MultiSelectTreeComponent_ng_template_5_1_ng_template_0_Template(rf, ctx) {}\n\nfunction MultiSelectTreeComponent_ng_template_5_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MultiSelectTreeComponent_ng_template_5_1_ng_template_0_Template, 0, 0, \"ng-template\", 24);\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction1(1, _c15, ctx_r9.headerTemplate == null ? null : ctx_r9.headerTemplate.templateRef));\n  }\n}\n\nfunction MultiSelectTreeComponent_ng_template_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵelementStart(1, \"input\", 26, 27);\n    i0.ɵɵlistener(\"checkedItemsChange\", function MultiSelectTreeComponent_ng_template_5_div_2_Template_input_checkedItemsChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return ctx_r21.handleCheckedItemsChange($event);\n    })(\"keydown\", function MultiSelectTreeComponent_ng_template_5_div_2_Template_input_keydown_1_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return ctx_r23.handleKeydown($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 28);\n    i0.ɵɵlistener(\"click\", function MultiSelectTreeComponent_ng_template_5_div_2_Template_span_click_3_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return ctx_r24.toggleCheckAll();\n    })(\"mousedown\", function MultiSelectTreeComponent_ng_template_5_div_2_Template_span_mousedown_3_listener($event) {\n      return $event.preventDefault();\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r11 = i0.ɵɵreference(4);\n\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checkAll\", !ctx_r10.filterable && !ctx_r10.touchEnabled)(\"ngClass\", ctx_r10.checkAllCheckboxClasses)(\"treeview\", _r11)(\"checkedItems\", ctx_r10.checkedItems)(\"valueField\", ctx_r10.valueField)(\"lastAction\", ctx_r10.lastAction)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction1(9, _c52, ctx_r10.handleBlur))(\"scope\", ctx_r10);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.messageFor(\"checkAllText\"), \" \");\n  }\n}\n\nfunction MultiSelectTreeComponent_ng_template_5_5_ng_template_0_Template(rf, ctx) {}\n\nfunction MultiSelectTreeComponent_ng_template_5_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MultiSelectTreeComponent_ng_template_5_5_ng_template_0_Template, 0, 0, \"ng-template\", 24);\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"templateContext\", i0.ɵɵpureFunction1(1, _c15, ctx_r12.footerTemplate == null ? null : ctx_r12.footerTemplate.templateRef));\n  }\n}\n\nfunction MultiSelectTreeComponent_ng_template_5_div_6_ng_template_1_Template(rf, ctx) {}\n\nfunction MultiSelectTreeComponent_ng_template_5_div_6_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r28.messageFor(\"noDataText\"));\n  }\n}\n\nfunction MultiSelectTreeComponent_ng_template_5_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, MultiSelectTreeComponent_ng_template_5_div_6_ng_template_1_Template, 0, 0, \"ng-template\", 30);\n    i0.ɵɵtemplate(2, MultiSelectTreeComponent_ng_template_5_div_6_ng_template_2_Template, 2, 1, \"ng-template\", 31);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.noDataTemplate)(\"templateContext\", i0.ɵɵpureFunction1(3, _c15, ctx_r13.noDataTemplate == null ? null : ctx_r13.noDataTemplate.templateRef));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r13.noDataTemplate);\n  }\n}\n\nconst _c60 = function (a0) {\n  return {\n    focusout: a0\n  };\n};\n\nfunction MultiSelectTreeComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵtemplate(0, MultiSelectTreeComponent_ng_template_5_span_0_Template, 6, 7, \"span\", 12);\n    i0.ɵɵtemplate(1, MultiSelectTreeComponent_ng_template_5_1_Template, 1, 3, undefined, 13);\n    i0.ɵɵtemplate(2, MultiSelectTreeComponent_ng_template_5_div_2_Template, 5, 11, \"div\", 14);\n    i0.ɵɵelementStart(3, \"kendo-treeview\", 15, 16);\n    i0.ɵɵlistener(\"keydown\", function MultiSelectTreeComponent_ng_template_5_Template_kendo_treeview_keydown_3_listener($event) {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return ctx_r29.handleKeydown($event);\n    })(\"nodeClick\", function MultiSelectTreeComponent_ng_template_5_Template_kendo_treeview_nodeClick_3_listener($event) {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return ctx_r31.handleNodeClick($event);\n    })(\"expand\", function MultiSelectTreeComponent_ng_template_5_Template_kendo_treeview_expand_3_listener($event) {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return ctx_r32.nodeExpand.emit($event);\n    })(\"collapse\", function MultiSelectTreeComponent_ng_template_5_Template_kendo_treeview_collapse_3_listener($event) {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return ctx_r33.nodeCollapse.emit($event);\n    })(\"checkedItemsChange\", function MultiSelectTreeComponent_ng_template_5_Template_kendo_treeview_checkedItemsChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return ctx_r34.handleCheckedItemsChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, MultiSelectTreeComponent_ng_template_5_5_Template, 1, 3, undefined, 13);\n    i0.ɵɵtemplate(6, MultiSelectTreeComponent_ng_template_5_div_6_Template, 3, 5, \"div\", 17);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.filterable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.checkAll);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"max-height\", ctx_r4.listHeight, \"px\");\n    i0.ɵɵproperty(\"size\", ctx_r4.size)(\"nodes\", ctx_r4.data)(\"animate\", false)(\"isHeterogeneous\", ctx_r4.isHeterogeneous)(\"checkable\", ctx_r4.checkableSettings)(\"checkedItems\", ctx_r4.checkedItems)(\"valueField\", ctx_r4.valueField)(\"textField\", ctx_r4.textField)(\"children\", ctx_r4.children)(\"hasChildren\", ctx_r4.hasChildren)(\"isExpanded\", ctx_r4.isNodeExpanded)(\"isDisabled\", ctx_r4.itemDisabled)(\"nodeTemplate\", ctx_r4.nodeTemplate)(\"loadOnDemand\", ctx_r4.loadOnDemand)(\"filter\", ctx_r4.filter)(\"isVisible\", ctx_r4.isNodeVisible)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction1(25, _c60, ctx_r4.handleBlur))(\"scope\", ctx_r4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.footerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.data || (ctx_r4.data == null ? null : ctx_r4.data.length) === 0 || ctx_r4.allNodesHidden);\n  }\n}\n\nconst packageMetadata = {\n  name: '@progress/kendo-angular-dropdowns',\n  productName: 'Kendo UI for Angular',\n  productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n  publishDate: 1668698206,\n  version: '',\n  licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/?utm_medium=product&utm_source=kendoangular&utm_campaign=kendo-ui-angular-purchase-license-keys-warning'\n};\n/* eslint-disable no-bitwise */\n\n/**\n * @hidden\n */\n\nconst isPresent = value => value !== null && value !== undefined;\n/**\n * @hidden\n */\n\n\nconst isNumber = value => !isNaN(value);\n/**\n * @hidden\n */\n\n\nconst guid = () => {\n  let id = \"\";\n  let i;\n  let random;\n\n  for (i = 0; i < 32; i++) {\n    random = Math.random() * 16 | 0;\n\n    if (i === 8 || i === 12 || i === 16 || i === 20) {\n      id += \"-\";\n    }\n\n    id += (i === 12 ? 4 : i === 16 ? random & 3 | 8 : random).toString(16);\n  }\n\n  return id;\n};\n/**\n * @hidden\n */\n\n\nconst combineStr = (begin, end) => {\n  return begin.concat(end.substr(end.toLowerCase().indexOf(begin.toLowerCase()) + begin.length));\n};\n/**\n * @hidden\n */\n\n\nconst isWindowAvailable = () => typeof window !== 'undefined';\n/**\n * @hidden\n */\n\n\nconst isArray = value => Array.isArray(value);\n/**\n * @hidden\n */\n\n\nconst isObject = value => isPresent(value) && typeof value === 'object';\n/**\n * @hidden\n */\n\n\nconst isEmptyString = value => typeof value === 'string' && value.length === 0;\n/**\n * @hidden\n */\n\n\nconst resolveValuesInArray = (values, data = [], valueField) => values.map(value => {\n  return data.find(item => getter(item, valueField) === value);\n}).filter(value => value !== undefined);\n/**\n * @hidden\n */\n\n\nconst validateComplexValues = (values, valueField) => isArray(values) && values.filter(item => {\n  return isObject(item) && isPresent(getter(item, valueField));\n});\n/**\n * @hidden\n */\n\n\nconst resolveAllValues = (value, data, valueField) => {\n  const customValues = validateComplexValues(value, valueField) || [];\n  const resolvedValues = resolveValuesInArray(value, data, valueField) || [];\n  return resolvedValues.concat(customValues);\n};\n/**\n * @hidden\n */\n\n\nconst isObjectArray = values => {\n  return isArray(values) && values.every(item => isObject(item));\n};\n/**\n * @hidden\n */\n\n\nconst selectedIndices = (values, data, valueField) => {\n  const extractedValues = data.map(item => {\n    return isPresent(item) && isPresent(getter(item, valueField)) ? getter(item, valueField) : item;\n  });\n  return values.reduce((arr, item) => {\n    const value = isPresent(item) && isPresent(getter(item, valueField)) ? getter(item, valueField) : item;\n    const index = extractedValues.indexOf(value);\n\n    if (index !== -1) {\n      arr.push(index);\n    }\n\n    return arr;\n  }, []);\n};\n/**\n * @hidden\n */\n\n\nconst getter = (dataItem, field) => {\n  if (!isPresent(dataItem)) {\n    return null;\n  }\n\n  if (!isPresent(field) || !isObject(dataItem)) {\n    return dataItem;\n  } // creates a field accessor supporting nested fields processing\n\n\n  const valueFrom = getter$1(field);\n  return valueFrom(dataItem);\n};\n/**\n * @hidden\n */\n\n\nconst resolveValue = args => {\n  let dataItem;\n\n  if (isPresent(args.value)) {\n    const data = [args.defaultItem, ...args.data];\n    dataItem = data.find(element => getter(element, args.valueField) === args.value);\n    return {\n      dataItem: dataItem,\n      focused: args.data.indexOf(dataItem),\n      selected: args.data.indexOf(dataItem)\n    };\n  } else if (args.index) {\n    dataItem = args.data[args.index];\n    return {\n      dataItem: args.data[args.index],\n      focused: args.index,\n      selected: args.index\n    };\n  }\n\n  return {\n    dataItem: args.defaultItem,\n    focused: -1,\n    selected: -1\n  };\n};\n/**\n * @hidden\n */\n\n\nconst sameCharsOnly = (word, character) => {\n  for (let idx = 0; idx < word.length; idx++) {\n    if (word.charAt(idx) !== character) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * @hidden\n */\n\n\nconst shuffleData = (data, splitIndex, defaultItem) => {\n  let result = data;\n\n  if (defaultItem) {\n    result = [defaultItem].concat(result);\n  }\n\n  return result.slice(splitIndex).concat(result.slice(0, splitIndex));\n};\n/**\n * @hidden\n */\n\n\nconst matchText = (text, word, ignoreCase) => {\n  if (!isPresent(text)) {\n    return false;\n  }\n\n  let temp = String(text);\n\n  if (ignoreCase) {\n    temp = temp.toLowerCase();\n  }\n\n  return temp.indexOf(word) === 0;\n};\n/**\n * @hidden\n */\n\n\nconst elementFromPoint = (x, y) => {\n  if (!isDocumentAvailable()) {\n    return;\n  }\n\n  return document.elementFromPoint(x, y);\n};\n/**\n * @hidden\n *\n * Checks whether the passed object has all of the listed properties.\n */\n\n\nconst hasProps = (obj, props) => {\n  if (!isPresent(obj)) {\n    return false;\n  }\n\n  return props.every(prop => obj.hasOwnProperty(prop));\n};\n/**\n * @hidden\n *\n * Checks whether an element is untouched by looking for the ng-untouched css class\n */\n\n\nconst isUntouched = element => element.className.includes('ng-untouched');\n/**\n * @hidden\n */\n\n\nconst noop = _ => {};\n/**\n * IE element `matches` polyfill.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n */\n\n\nconst matches = (element, selector) => {\n  const matcher = element.matches || element.msMatchesSelector || element.webkitMatchesSelector;\n\n  if (!matcher) {\n    return false;\n  }\n\n  return matcher.call(element, selector);\n};\n/**\n * @hidden\n *\n * IE element `closest` polyfill.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n */\n\n\nconst closest = (element, selector) => {\n  let parent = element;\n\n  while (parent !== null && parent.nodeType === 1) {\n    if (matches(parent, selector)) {\n      return parent;\n    }\n\n    parent = parent.parentElement || parent.parentNode;\n  }\n\n  return null;\n};\n/**\n * @hidden\n *\n * Parses a provided value to its type 'number' representation.\n * If the parsed value (via Number(value)) is NaN, the provided default value is returned.\n * Uses 0 as default value if a second param is not provided.\n */\n\n\nconst parseNumber = (num, defaultValue = 0) => {\n  const normalizedValue = Number(num);\n  return isNaN(normalizedValue) ? defaultValue : normalizedValue;\n};\n/**\n * @hidden\n *\n * Checks whether the passed target element is inside the provided host or popupRef.\n */\n\n\nconst inDropDown = (host, target, popupRef) => {\n  return host.nativeElement.contains(target) || popupRef && popupRef.popupElement.contains(target);\n};\n/**\n * @hidden\n *\n * Calculates the hierarchical level of an item, based on the provided index.\n * The result level is zero-based (starts from 0).\n */\n\n\nconst getHierarchicalItemLevel = index => {\n  return (index || '').split('_').length - 1;\n};\n/**\n * @hidden\n *\n * Retrieves all descendant nodes' lookups which are currently registered in the provided lookup item as a flat array.\n */\n\n\nconst fetchDescendentNodes = (lookup, filterExpression) => {\n  if (!isPresent(lookup) || lookup.children.length === 0) {\n    return [];\n  }\n\n  let descendants = lookup.children;\n\n  if (isPresent(filterExpression)) {\n    descendants = descendants.filter(descendent => filterExpression(descendent.item));\n  }\n\n  descendants.forEach(child => descendants = descendants.concat(fetchDescendentNodes(child, filterExpression)));\n  return descendants;\n};\n/**\n * @hidden\n *\n * Retrieves the correct value based on the item's level and the provided value field/s.\n * Used in the MultiSelectTree component.\n */\n\n\nconst valueFrom = ({\n  dataItem,\n  index,\n  level\n}, valueField) => {\n  const fields = Array.isArray(valueField) ? valueField : [valueField]; // either use the explicitly provided value level, or infer it from the item index\n\n  const valueLevel = isPresent(level) ? level : getHierarchicalItemLevel(index); // fall-back to the last available one, if the current node is in a deeper level\n\n  const normalizedLevel = Math.min(valueLevel, fields.length - 1);\n  const field = fields[normalizedLevel];\n  return getter$1(field)(dataItem);\n};\n/**\n * @hidden\n * Returns the size class based on the component and size input.\n */\n\n\nconst getSizeClass = (component, size) => {\n  const SIZE_CLASSES = {\n    'small': `k-${component}-sm`,\n    'medium': `k-${component}-md`,\n    'large': `k-${component}-lg`\n  };\n  return SIZE_CLASSES[size];\n};\n/**\n * @hidden\n * Returns the rounded class based on the rounded input.\n */\n\n\nconst getRoundedClass = rounded => {\n  const ROUNDED_CLASSES = {\n    'small': 'k-rounded-sm',\n    'medium': 'k-rounded-md',\n    'large': 'k-rounded-lg',\n    'full': 'k-rounded-full'\n  };\n  return ROUNDED_CLASSES[rounded];\n};\n/**\n * @hidden\n * Return the fillMode class based on the component and fillMode input.\n */\n\n\nconst getFillModeClass = (component, fillMode) => {\n  const FILLMODE_CLASSES = {\n    'solid': `k-${component}-solid`,\n    'flat': `k-${component}-flat`,\n    'outline': `k-${component}-outline`\n  };\n  return FILLMODE_CLASSES[fillMode];\n};\n/**\n * @hidden\n */\n\n\nconst filterAndMap = (arr, predicate, mapper) => arr.reduce((acc, curr) => predicate(curr) ? [...acc, mapper(curr)] : acc, []);\n/**\n * @hidden\n *\n * Returns true if the used browser is Safari.\n */\n\n\nconst isSafari = userAgent => {\n  return detectDesktopBrowser(userAgent).safari || detectMobileOS(userAgent) && detectMobileOS(userAgent).browser === 'mobilesafari';\n};\n/**\n * @hidden\n *\n * Checks if input is Japanese IME\n */\n\n\nconst isJapanese = input => {\n  const japaneseRegex = /[\\u3000-\\u303F]|[\\u3040-\\u309F]|[\\u30A0-\\u30FF]|[\\uFF00-\\uFFEF]|[\\u4E00-\\u9FAF]|[\\u2605-\\u2606]|[\\u2190-\\u2195]|\\u203B/g;\n  return japaneseRegex.test(input);\n};\n/**\n * @hidden\n */\n\n\nclass SearchBarComponent {\n  constructor(localization, renderer, injector) {\n    this.localization = localization;\n    this.injector = injector;\n    this.valueChange = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onClick = new EventEmitter();\n    this.onNavigate = new EventEmitter();\n    this.searchBarClass = true;\n    this._userInput = \"\";\n    this._previousValue = \"\";\n    this._placeholder = \"\";\n    this._isSuggestable = false;\n    this._isFilterable = false;\n    this.subs = new Subscription();\n    this.direction = localization.rtl ? 'rtl' : 'ltr';\n    this.renderer = renderer;\n  }\n\n  set isSuggestable(isSuggestable) {\n    this._isSuggestable = isSuggestable;\n    this.setAriaAutocomplete();\n  }\n\n  get isSuggestable() {\n    return this._isSuggestable;\n  }\n\n  set isFilterable(isFilterable) {\n    this._isFilterable = isFilterable;\n    this.setAriaAutocomplete();\n  }\n\n  get isFilterable() {\n    return this._isFilterable;\n  }\n\n  get userInput() {\n    return this._userInput;\n  }\n\n  set userInput(userInput) {\n    this._userInput = userInput || \"\";\n  }\n  /**\n   * @hidden\n   */\n\n\n  get formControl() {\n    const ngControl = this.injector.get(NgControl, null);\n    return (ngControl === null || ngControl === void 0 ? void 0 : ngControl.control) || null;\n  }\n\n  get value() {\n    return this.input.nativeElement.value;\n  }\n\n  set placeholder(text) {\n    this._placeholder = text || '';\n    this.setInputSize();\n  }\n\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  get ariaExpanded() {\n    return this.role === 'combobox' ? this.popupOpen : null;\n  }\n\n  ngOnInit() {\n    this.subs.add(this.localization.changes.subscribe(({\n      rtl\n    }) => this.direction = rtl ? 'rtl' : 'ltr'));\n  }\n\n  ngOnChanges(changes) {\n    let previousUserInput;\n\n    if (this.input && (changes.userInput || changes.suggestedText)) {\n      if (changes.userInput && changes.userInput.previousValue) {\n        if (this._previousValue === changes.userInput.previousValue) {\n          previousUserInput = this._previousValue;\n        } else {\n          previousUserInput = changes.userInput.currentValue || \"\";\n        }\n      } else {\n        previousUserInput = this._previousValue;\n      }\n\n      const caretStart = this.input.nativeElement.selectionStart;\n      const caretAtEnd = previousUserInput.length === caretStart;\n      this.writeInputValue(this.suggestedText ? combineStr(this.userInput, this.suggestedText) : this.userInput);\n\n      if (this.suggestedText) {\n        this.setInputSelection(this.userInput.length, this.suggestedText.length);\n      } else if (isSafari(navigator.userAgent) && !caretAtEnd) {\n        this.setInputSelection(caretStart, this.userInput.length);\n      } else if (caretAtEnd) {\n        this.setInputSelection(this.userInput.length, this.userInput.length);\n      } else {\n        this.setInputSelection(caretStart, caretStart);\n      }\n\n      this._previousValue = this.userInput;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n\n  writeInputValue(text) {\n    if (isDocumentAvailable()) {\n      this.renderer.setProperty(this.input.nativeElement, 'value', text);\n    }\n  }\n\n  setInputSelection(start, end) {\n    if (isDocumentAvailable() && this.input.nativeElement === document.activeElement) {\n      try {\n        this.input.nativeElement.setSelectionRange(start, end);\n      } catch (e) {//Make sure that the element is in the DOM before you invoke its methods\n      }\n    }\n  }\n\n  setAriaAutocomplete() {\n    if (this.isFilterable) {\n      this.renderer.setAttribute(this.input.nativeElement, 'aria-autocomplete', 'list');\n    }\n\n    if (this.isSuggestable) {\n      this.renderer.setAttribute(this.input.nativeElement, 'aria-autocomplete', 'inline');\n    }\n\n    if (this.isFilterable && this.isSuggestable) {\n      this.renderer.setAttribute(this.input.nativeElement, 'aria-autocomplete', 'both');\n    }\n\n    if (!this.isFilterable && !this.isSuggestable) {\n      this.renderer.removeAttribute(this.input.nativeElement, 'aria-autocomplete');\n    }\n  }\n\n  handleInput(event) {\n    const target = event.target;\n    const isBrowserSafari = isSafari(navigator.userAgent);\n    const value = isBrowserSafari && isJapanese(target.value) ? event.data : target.value;\n\n    if (value !== this.userInput) {\n      this._previousValue = value;\n      this.valueChange.emit(value);\n    }\n  }\n\n  handleFocus(event) {\n    this.onFocus.emit(event);\n  }\n\n  handleBlur(event) {\n    this.onBlur.emit(event);\n  }\n\n  handleKeydown(event) {\n    const keyCode = event.keyCode;\n    const keys = [Keys.ArrowUp, Keys.ArrowDown, Keys.ArrowLeft, Keys.ArrowRight, Keys.Enter, Keys.Escape, Keys.Delete, Keys.Backspace, Keys.Home, Keys.End, Keys.PageDown, Keys.PageUp];\n\n    if (keys.indexOf(keyCode) > -1) {\n      this.onNavigate.emit(event);\n    }\n  }\n\n  focus() {\n    if (isDocumentAvailable()) {\n      this.input.nativeElement.focus();\n    }\n  }\n\n  blur() {\n    if (isDocumentAvailable()) {\n      this.input.nativeElement.blur();\n    }\n  }\n\n  setInputSize() {\n    const lengthOf = x => x ? x.length : 0;\n\n    const input = this.input.nativeElement;\n    const placeholderLength = lengthOf(this.placeholder);\n    const textLength = lengthOf(this.value);\n    const size = Math.max(placeholderLength, textLength, 1);\n    this.renderer.setAttribute(input, 'size', size.toString());\n  }\n\n}\n\nSearchBarComponent.ɵfac = function SearchBarComponent_Factory(t) {\n  return new (t || SearchBarComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.Injector));\n};\n\nSearchBarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SearchBarComponent,\n  selectors: [[\"kendo-searchbar\"]],\n  viewQuery: function SearchBarComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function SearchBarComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-searchbar\", ctx.searchBarClass);\n    }\n  },\n  inputs: {\n    id: \"id\",\n    listId: \"listId\",\n    tagListId: \"tagListId\",\n    activeDescendant: \"activeDescendant\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    tabIndex: \"tabIndex\",\n    popupOpen: \"popupOpen\",\n    role: \"role\",\n    isLoading: \"isLoading\",\n    isSuggestable: \"isSuggestable\",\n    isFilterable: \"isFilterable\",\n    userInput: \"userInput\",\n    suggestedText: \"suggestedText\",\n    placeholder: \"placeholder\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    onBlur: \"onBlur\",\n    onFocus: \"onFocus\",\n    onClick: \"onClick\",\n    onNavigate: \"onNavigate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 20,\n  consts: [[\"autocomplete\", \"off\", \"aria-haspopup\", \"listbox\", 3, \"id\", \"disabled\", \"readonly\", \"placeholder\", \"kendoEventsOutsideAngular\", \"scope\", \"input\", \"keydown\"], [\"input\", \"\"]],\n  template: function SearchBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"input\", 0, 1);\n      i0.ɵɵlistener(\"input\", function SearchBarComponent_Template_input_input_0_listener($event) {\n        return ctx.handleInput($event);\n      })(\"keydown\", function SearchBarComponent_Template_input_keydown_0_listener($event) {\n        return ctx.handleKeydown($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(\"k-input-inner\");\n      i0.ɵɵproperty(\"id\", ctx.id)(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly)(\"placeholder\", ctx.placeholder)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction2(17, _c1, ctx.handleFocus, ctx.handleBlur))(\"scope\", ctx);\n      i0.ɵɵattribute(\"tabIndex\", ctx.tabIndex)(\"dir\", ctx.direction)(\"role\", ctx.role)(\"aria-expanded\", ctx.ariaExpanded)(\"aria-controls\", ctx.listId)(\"aria-describedby\", ctx.tagListId)(\"aria-activedescendant\", ctx.activeDescendant)(\"aria-busy\", ctx.isLoading)(\"aria-invalid\", ctx.formControl == null ? null : ctx.formControl.invalid);\n    }\n  },\n  directives: [i9.EventsOutsideAngularDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SearchBarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-searchbar',\n      template: `\n        <input #input\n            autocomplete=\"off\"\n            [id]=\"id\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [placeholder]=\"placeholder\"\n            [class]=\"'k-input-inner'\"\n            (input)=\"handleInput($event)\"\n            (keydown)=\"handleKeydown($event)\"\n            [kendoEventsOutsideAngular]=\"{\n                focus: handleFocus,\n                blur: handleBlur\n            }\"\n            [scope]=\"this\"\n            [attr.tabIndex]=\"tabIndex\"\n            [attr.dir]=\"direction\"\n            [attr.role]=\"role\"\n            aria-haspopup=\"listbox\"\n            [attr.aria-expanded]=\"ariaExpanded\"\n            [attr.aria-controls]=\"listId\"\n            [attr.aria-describedby]=\"tagListId\"\n            [attr.aria-activedescendant]=\"activeDescendant\"\n            [attr.aria-busy]=\"isLoading\"\n            [attr.aria-invalid]=\"formControl?.invalid\"\n        />\n   `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.Injector\n    }];\n  }, {\n    id: [{\n      type: Input\n    }],\n    listId: [{\n      type: Input\n    }],\n    tagListId: [{\n      type: Input\n    }],\n    activeDescendant: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    popupOpen: [{\n      type: Input\n    }],\n    role: [{\n      type: Input\n    }],\n    isLoading: [{\n      type: Input\n    }],\n    isSuggestable: [{\n      type: Input\n    }],\n    isFilterable: [{\n      type: Input\n    }],\n    userInput: [{\n      type: Input\n    }],\n    suggestedText: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onNavigate: [{\n      type: Output\n    }],\n    input: [{\n      type: ViewChild,\n      args: ['input', {\n        static: true\n      }]\n    }],\n    searchBarClass: [{\n      type: HostBinding,\n      args: ['class.k-searchbar']\n    }],\n    placeholder: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Renders the list item content. To define the item template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>ItemTemplate` directive inside the component tag. The template context is\n * set to the current component. To get a reference to the current data item, use the `let-dataItem` directive.\n *\n * - [Using `ItemTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-item-template)\n * - [Using `ItemTemplate` with the ComboBox]({% slug templates_combobox %}#toc-item-template)\n * - [Using `ItemTemplate` with the DropDownList]({% slug templates_ddl %}#toc-item-template)\n * - [Using `ItemTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-item-template)\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *    <ng-template kendoComboBoxItemTemplate let-dataItem>\n *      <span>{{dataItem}} option</span>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\n\n\nclass ItemTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nItemTemplateDirective.ɵfac = function ItemTemplateDirective_Factory(t) {\n  return new (t || ItemTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nItemTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ItemTemplateDirective,\n  selectors: [[\"\", \"kendoDropDownListItemTemplate\", \"\"], [\"\", \"kendoComboBoxItemTemplate\", \"\"], [\"\", \"kendoAutoCompleteItemTemplate\", \"\"], [\"\", \"kendoMultiSelectItemTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ItemTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownListItemTemplate],[kendoComboBoxItemTemplate],[kendoAutoCompleteItemTemplate],[kendoMultiSelectItemTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Renders the header content of the list. To define the header template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>HeaderTemplate` directive inside the component tag.\n *\n * - [Using `HeaderTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-header-template)\n * - [Using `HeaderTemplate` with the ComboBox]({% slug templates_combobox %}#toc-header-template)\n * - [Using `HeaderTemplate` with the MultiColumnComboBox]({% slug templates_multicolumncombobox %}#toc-header-template)\n * - [Using `HeaderTemplate` with the DropDownList]({% slug templates_ddl %}#toc-header-template)\n * - [Using `HeaderTemplate` with the DropDownTree]({% slug templates_ddt %}#toc-header-template)\n * - [Using `HeaderTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-header-template)\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *    <ng-template kendoComboBoxHeaderTemplate>\n *      <h4>Header template</h4>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\n\n\nclass HeaderTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nHeaderTemplateDirective.ɵfac = function HeaderTemplateDirective_Factory(t) {\n  return new (t || HeaderTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nHeaderTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: HeaderTemplateDirective,\n  selectors: [[\"\", \"kendoDropDownListHeaderTemplate\", \"\"], [\"\", \"kendoComboBoxHeaderTemplate\", \"\"], [\"\", \"kendoDropDownTreeHeaderTemplate\", \"\"], [\"\", \"kendoMultiColumnComboBoxHeaderTemplate\", \"\"], [\"\", \"kendoAutoCompleteHeaderTemplate\", \"\"], [\"\", \"kendoMultiSelectHeaderTemplate\", \"\"], [\"\", \"kendoMultiSelectTreeHeaderTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeaderTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownListHeaderTemplate],[kendoComboBoxHeaderTemplate],[kendoDropDownTreeHeaderTemplate],[kendoMultiColumnComboBoxHeaderTemplate],[kendoAutoCompleteHeaderTemplate],[kendoMultiSelectHeaderTemplate],[kendoMultiSelectTreeHeaderTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Renders the footer content of the list. To define the footer template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>FooterTemplate` directive inside the component tag.\n *\n * - [Using `FooterTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-footer-template)\n * - [Using `FooterTemplate` with the ComboBox]({% slug templates_combobox %}#toc-footer-template)\n * - [Using `FooterTemplate` with the MultiColumnComboBox]({% slug templates_multicolumncombobox %}#toc-footer-template)\n * - [Using `FooterTemplate` with the DropDownList]({% slug templates_ddl %}#toc-footer-template)\n * - [Using `FooterTemplate` with the DropDownTree]({% slug templates_ddt %}#toc-footer-template)\n * - [Using `FooterTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-footer-template)\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *    <ng-template kendoComboBoxFooterTemplate>\n *      <h4>Footer template</h4>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\n\n\nclass FooterTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nFooterTemplateDirective.ɵfac = function FooterTemplateDirective_Factory(t) {\n  return new (t || FooterTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nFooterTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FooterTemplateDirective,\n  selectors: [[\"\", \"kendoDropDownListFooterTemplate\", \"\"], [\"\", \"kendoComboBoxFooterTemplate\", \"\"], [\"\", \"kendoDropDownTreeFooterTemplate\", \"\"], [\"\", \"kendoMultiColumnComboBoxFooterTemplate\", \"\"], [\"\", \"kendoAutoCompleteFooterTemplate\", \"\"], [\"\", \"kendoMultiSelectFooterTemplate\", \"\"], [\"\", \"kendoMultiSelectTreeFooterTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FooterTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownListFooterTemplate],[kendoComboBoxFooterTemplate],[kendoDropDownTreeFooterTemplate],[kendoMultiColumnComboBoxFooterTemplate],[kendoAutoCompleteFooterTemplate],[kendoMultiSelectFooterTemplate],[kendoMultiSelectTreeFooterTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Renders the group header content. To define the group template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>GroupTemplate` directive inside the component tag. The template context is\n * set to the current component. To get a reference to the current data item, use the `let-groupName` directive.\n *\n * - [Using `GroupTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-group-template)\n * - [Using `GroupTemplate` with the ComboBox]({% slug templates_combobox %}#toc-group-template)\n * - [Using `GroupTemplate` with the MultiColumnComboBox]({% slug templates_multicolumncombobox %}#toc-group-template)\n * - [Using `GroupTemplate` with the DropDownList]({% slug templates_ddl %}#toc-group-template)\n * - [Using `GroupTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-group-template)\n *\n * @example\n * ```ts\n * import { groupBy } from '@progress/kendo-data-query';\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"groupedData\" textField=\"name\" valueField=\"name\">\n *    <ng-template kendoComboBoxGroupTemplate let-groupName>\n *      <span>Food type: {{groupName}} option</span>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public data = [\n *       { name: \"Pork\", category: \"Food\", subcategory: \"Meat\" },\n *       { name: \"Pepper\", category: \"Food\", subcategory: \"Vegetables\" },\n *       { name: \"Beef\", category: \"Food\", subcategory: \"Meat\" }\n *   ];\n *   public groupedData = groupBy(this.data, [{field: \"subcategory\"}]);\n * }\n * ```\n */\n\n\nclass GroupTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nGroupTemplateDirective.ɵfac = function GroupTemplateDirective_Factory(t) {\n  return new (t || GroupTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nGroupTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GroupTemplateDirective,\n  selectors: [[\"\", \"kendoDropDownListGroupTemplate\", \"\"], [\"\", \"kendoComboBoxGroupTemplate\", \"\"], [\"\", \"kendoMultiColumnComboBoxGroupTemplate\", \"\"], [\"\", \"kendoAutoCompleteGroupTemplate\", \"\"], [\"\", \"kendoMultiSelectGroupTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GroupTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownListGroupTemplate],[kendoComboBoxGroupTemplate],[kendoMultiColumnComboBoxGroupTemplate],[kendoAutoCompleteGroupTemplate],[kendoMultiSelectGroupTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Renders the fixed group header content. To define the fixed group template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>FixedGroupTemplate` directive inside the component tag. The template context is\n * set to the current component. To get a reference to the current data item, use the `let-groupName` directive.\n *\n * - [Using `FixedGroupTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-fixed-group-template)\n * - [Using `FixedGroupTemplate` with the ComboBox]({% slug templates_combobox %}#toc-fixed-group-template)\n * - [Using `FixedGroupTemplate` with the MultiColumnComboBox]({% slug templates_multicolumncombobox %}#toc-fixed-group-template)\n * - [Using `FixedGroupTemplate` with the DropDownList]({% slug templates_ddl %}#toc-fixed-group-template)\n * - [Using `FixedGroupTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-fixed-group-template)\n *\n * @example\n * ```ts\n * import { groupBy } from '@progress/kendo-data-query';\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"groupedData\" textField=\"name\" valueField=\"name\">\n *    <ng-template kendoComboBoxFixedGroupTemplate let-groupName>\n *      <span>Food type: {{groupName}} option</span>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public data = [\n *       { name: \"Pork\", category: \"Food\", subcategory: \"Meat\" },\n *       { name: \"Pepper\", category: \"Food\", subcategory: \"Vegetables\" },\n *       { name: \"Beef\", category: \"Food\", subcategory: \"Meat\" }\n *   ];\n *   public groupedData = groupBy(this.data, [{field: \"subcategory\"}]);\n * }\n * ```\n */\n\n\nclass FixedGroupTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nFixedGroupTemplateDirective.ɵfac = function FixedGroupTemplateDirective_Factory(t) {\n  return new (t || FixedGroupTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nFixedGroupTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FixedGroupTemplateDirective,\n  selectors: [[\"\", \"kendoDropDownListFixedGroupTemplate\", \"\"], [\"\", \"kendoComboBoxFixedGroupTemplate\", \"\"], [\"\", \"kendoMultiColumnComboBoxFixedGroupTemplate\", \"\"], [\"\", \"kendoAutoCompleteFixedGroupTemplate\", \"\"], [\"\", \"kendoMultiSelectFixedGroupTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FixedGroupTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownListFixedGroupTemplate],[kendoComboBoxFixedGroupTemplate],[kendoMultiColumnComboBoxFixedGroupTemplate],[kendoAutoCompleteFixedGroupTemplate],[kendoMultiSelectFixedGroupTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass DataService {\n  constructor() {\n    this.grouped = false;\n    this.groupIndices = [];\n  }\n\n  set data(data) {\n    this._data = data;\n    this.grouped = this.isGrouped(data);\n\n    if (this.grouped) {\n      this.groupIndices = this.getGroupIndices(data);\n      this._flatData = this.flatten(data);\n    }\n  }\n\n  get data() {\n    if (this.grouped) {\n      return this._flatData;\n    }\n\n    return this._data;\n  }\n  /**\n   * @hidden\n   * Used to get the actual items count, i.e. excluding the header items in case of grouping.\n   */\n\n\n  get itemsCount() {\n    if (!isPresent(this.data) || this.data.length === 0) {\n      return 0;\n    }\n\n    const items = this.grouped ? this._flatData.filter(item => !item.header) : this.data;\n    return items.length;\n  }\n  /**\n   * @hidden\n   * Used to determine if the component received grouped data.\n   */\n\n\n  isGrouped(data) {\n    // GroupResult { aggregates: AggregateResult, field: string, items: object[], value: any }\n    // https://www.telerik.com/kendo-angular-ui/components/dataquery/api/GroupResult/\n    return isPresent(data) && data.length !== 0 && isPresent(data[0]) && hasProps(data[0], ['aggregates', 'field', 'items', 'value']);\n  }\n  /**\n   * @hidden\n   * Used to calculate the last item index of each group.\n   */\n\n\n  getGroupIndices(data) {\n    let groupIndices = [];\n\n    for (let i = 0; i <= data.length - 1; i++) {\n      groupIndices[i] = (groupIndices[i - 1] || 0) + data[i].items.length;\n    }\n\n    return groupIndices;\n  }\n  /**\n   * @hidden\n   * Used to get a flat array containing all items matching certain criteria.\n   */\n\n\n  filter(predicate) {\n    let result = [];\n\n    if (this.isGrouped(this.data)) {\n      for (let i = 0; i <= this.groupIndices.length - 1; i++) {\n        const matches = this.data[i].items.filter(predicate);\n\n        if (matches) {\n          result = result.concat(matches);\n        }\n      }\n    } else {\n      result = this.data.filter(predicate);\n    }\n\n    return result;\n  }\n  /**\n   * @hidden\n   * Used to get the index of a given data item.\n   */\n\n\n  indexOf(item, startFrom = 0) {\n    let predicate = element => {\n      return element === item;\n    };\n\n    if (this.grouped) {\n      predicate = element => {\n        return element.value === item;\n      };\n    }\n\n    return this.findIndex(predicate, startFrom);\n  }\n  /**\n   * @hidden\n   * Used to get the index of a data item based on an expression.\n   */\n\n\n  findIndex(predicate, startFrom = 0) {\n    let index = -1;\n\n    if (this.grouped) {\n      const data = this._flatData.filter(item => !item.header && item.offsetIndex >= startFrom);\n\n      index = data.findIndex(predicate);\n      index = data[index] ? data[index].offsetIndex : -1;\n    } else {\n      const data = this.data.slice(startFrom);\n      const itemIndex = data.findIndex(predicate);\n      index = itemIndex !== -1 ? itemIndex + startFrom : -1;\n    }\n\n    return index;\n  }\n  /**\n   * @hidden\n   * Used to get the closest group header prior to an item index.\n   */\n\n\n  closestGroup(index) {\n    for (let i = index; i >= 0; i--) {\n      if (this._flatData[i].header) {\n        return this._flatData[i];\n      }\n    }\n  }\n  /**\n   * @hidden\n   * Used to get the first item matching the criteria.\n   */\n\n\n  find(predicate) {\n    const index = this.findIndex(predicate);\n    return this.itemAt(index);\n  }\n  /**\n   * @hidden\n   * Used to get the true index in a flattened data array.\n   */\n\n\n  flatIndex(index) {\n    if (this.itemsCount === 0) {\n      return -1;\n    }\n\n    if (this.grouped) {\n      const match = this._flatData.find(item => !item.header && item.offsetIndex === index);\n\n      if (match) {\n        return match.index;\n      }\n    } else {\n      return index;\n    }\n\n    return -1;\n  }\n  /**\n   * @hidden\n   * Used to get the item at the provided index.\n   */\n\n\n  itemAt(index) {\n    let dataItem;\n\n    if (this.itemsCount === 0) {\n      return dataItem;\n    }\n\n    if (this.grouped) {\n      const match = this._flatData.find(item => !item.header && item.offsetIndex === index);\n\n      if (match) {\n        dataItem = match.value;\n      }\n    } else {\n      dataItem = this.data[index];\n    }\n\n    return dataItem;\n  }\n  /**\n   * @hidden\n   * Used to get the group at the provided index.\n   */\n\n\n  groupAt(index) {\n    if (this.itemsCount === 0 || !this.isGrouped) {\n      return;\n    }\n\n    return this._flatData.find(item => item.header && item.index === index);\n  }\n  /**\n   * @hidden\n   * Used to get all group items indices.\n   */\n\n\n  groupItemsIndices() {\n    if (this.isGrouped) {\n      return filterAndMap(this.data, item => item.header, mappedItem => mappedItem.index);\n    }\n\n    return [];\n  }\n  /**\n   * @hidden\n   * Used to get the field by which the data is grouped.\n   */\n\n\n  groupField() {\n    if (this.itemsCount === 0 || !this.isGrouped) {\n      return null;\n    }\n\n    return this._data[0].field;\n  }\n  /**\n   * @hidden\n   * Used to get the group to which a dataItem belongs.\n   */\n\n\n  itemGroup(item) {\n    if (!item || this.itemsCount === 0 || !this.isGrouped) {\n      return;\n    }\n\n    const fieldName = this.groupField();\n\n    if (fieldName) {\n      return getter(item, fieldName);\n    }\n  }\n\n  flatten(data, group = undefined, offset = 0, groupIndex = 0) {\n    let flat = [];\n\n    if (isPresent(group)) {\n      flat.push({\n        header: true,\n        index: groupIndex + offset,\n        offsetIndex: groupIndex,\n        value: group\n      });\n    }\n\n    for (let i = 0; i < data.length; i++) {\n      let result = [];\n\n      if (data[i].items) {\n        result = this.flatten(data[i].items, data[i].value, offset, i);\n        offset = offset + data[i].items.length;\n      } else {\n        result.push({\n          header: false,\n          index: groupIndex + offset + i + 1,\n          offsetIndex: offset + i,\n          value: data[i]\n        });\n      }\n\n      flat = flat.concat(result);\n    }\n\n    return flat;\n  }\n\n}\n\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)();\n};\n\nDataService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nclass DisabledItemsService {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.itemDisabled = null;\n  }\n\n  isIndexDisabled(index) {\n    if (this.itemDisabled) {\n      const item = this.dataService.itemAt(index);\n\n      if (isPresent(item)) {\n        return this.itemDisabled({\n          dataItem: item,\n          index\n        });\n      } else if (isPresent(this.defaultItem)) {\n        return this.itemDisabled({\n          dataItem: this.defaultItem,\n          index: -1\n        });\n      }\n    }\n  }\n\n  isItemDisabled(item) {\n    if (this.itemDisabled) {\n      const index = this.dataService.indexOf(item);\n\n      if (index !== -1) {\n        return this.itemDisabled({\n          dataItem: item,\n          index\n        });\n      } else if (isPresent(this.defaultItem)) {\n        return this.itemDisabled({\n          dataItem: this.defaultItem,\n          index: -1\n        });\n      }\n    }\n  }\n\n}\n\nDisabledItemsService.ɵfac = function DisabledItemsService_Factory(t) {\n  return new (t || DisabledItemsService)(i0.ɵɵinject(DataService));\n};\n\nDisabledItemsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DisabledItemsService,\n  factory: DisabledItemsService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DisabledItemsService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: DataService\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass SelectionService {\n  constructor(disabledItemsService) {\n    this.disabledItemsService = disabledItemsService;\n    this.onSelect = new EventEmitter();\n    this.onChange = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.total = 0;\n    this.selectedIndices = [];\n    this.indicesToBeRemoved = [];\n    this.indicesToBeAdded = [];\n  }\n\n  getTotal() {\n    return this.total;\n  }\n\n  isSelected(index) {\n    return isPresent(this.selectedIndices.find(current => current === index));\n  }\n\n  isFocused(index) {\n    return index === this.focused;\n  }\n\n  focus(index) {\n    if (this.isFocused(index)) {\n      return;\n    }\n\n    this.focused = index;\n    this.onFocus.emit(index);\n  }\n\n  select(index) {\n    if (this.isSelected(index)) {\n      return;\n    }\n\n    this.selectedIndices = [index];\n    this.focused = index;\n    this.onSelect.emit({\n      indices: [index],\n      newSelection: isPresent(index)\n    });\n  }\n\n  add(index, preventClosingPopup) {\n    if (this.isSelected(index)) {\n      return;\n    }\n\n    this.selectedIndices.push(index);\n    this.focused = index;\n    this.onChange.emit({\n      added: index,\n      indices: this.selectedIndices.slice(),\n      preventClosingPopup: preventClosingPopup\n    });\n  }\n\n  emitMultipleAddedRemoved() {\n    this.onChange.emit({\n      added: this.indicesToBeAdded,\n      removed: this.indicesToBeRemoved,\n      indices: this.selectedIndices.slice(),\n      preventClosingPopup: true,\n      isMultipleSelection: true\n    });\n    this.indicesToBeAdded = [];\n    this.indicesToBeRemoved = [];\n  }\n\n  addMultiple(indices) {\n    this.indicesToBeAdded = indices.slice();\n    this.selectedIndices.push(...indices);\n  }\n\n  deselect(index, preventClosingPopup) {\n    if (!this.isSelected(index)) {\n      return;\n    }\n\n    const position = this.selectedIndices.indexOf(index);\n    this.selectedIndices.splice(position, 1);\n    this.focused = index;\n\n    if (this.selected.length === 0) {\n      this.lastClickedIndex = null;\n    }\n\n    this.onChange.emit({\n      indices: this.selectedIndices.slice(),\n      removed: index,\n      preventClosingPopup: preventClosingPopup\n    });\n  }\n\n  unselectMultiple(indices) {\n    indices.forEach(index => {\n      const position = this.selectedIndices.indexOf(index);\n      this.selectedIndices.splice(position, 1);\n    });\n    this.indicesToBeRemoved = indices.slice();\n  }\n\n  change(index) {\n    const newSelection = isPresent(index) && !this.isSelected(index);\n    this.selectedIndices = [index];\n    this.focused = index;\n    this.onChange.emit({\n      indices: [index],\n      newSelection: newSelection\n    });\n  }\n\n  resetSelection(index) {\n    this.selectedIndices = index instanceof Array ? index : [index];\n    this.focused = this.selectedIndices[this.selectedIndices.length - 1];\n  }\n\n  get selected() {\n    return this.selectedIndices.slice();\n  }\n\n  get focused() {\n    return this.focusedIndex;\n  }\n\n  set focused(index) {\n    if (this.focusedIndex !== index) {\n      this.focusedIndex = index;\n      this.onFocus.emit(index);\n    }\n  }\n\n  selectFromTo(from, to) {\n    let addedIndices = [];\n\n    for (let i = from; i <= to; i++) {\n      if (!this.isSelected(i) && !this.disabledItemsService.isIndexDisabled(i)) {\n        addedIndices.push(i);\n      }\n    }\n\n    this.addMultiple(addedIndices);\n  }\n\n  unselectFromTo(from, to) {\n    let indicesToBeUnselected = [];\n\n    for (let i = from; i >= to; i--) {\n      if (this.isSelected(i) && !this.disabledItemsService.isIndexDisabled(i)) {\n        indicesToBeUnselected.push(i);\n      }\n    }\n\n    this.unselectMultiple(indicesToBeUnselected);\n  }\n\n  unselectNotNeededIndices(startOfSelection, endOfSelection, totalItems) {\n    let indicesToBeUnselected = [];\n\n    for (let i = 0; i < startOfSelection; i++) {\n      if (this.isSelected(i)) {\n        indicesToBeUnselected.push(i);\n      }\n    }\n\n    for (let i = endOfSelection + 1; i < totalItems; i++) {\n      if (this.isSelected(i)) {\n        indicesToBeUnselected.push(i);\n      }\n    }\n\n    this.unselectMultiple(indicesToBeUnselected);\n  }\n\n}\n\nSelectionService.ɵfac = function SelectionService_Factory(t) {\n  return new (t || SelectionService)(i0.ɵɵinject(DisabledItemsService));\n};\n\nSelectionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SelectionService,\n  factory: SelectionService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectionService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: DisabledItemsService\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar NavigationAction;\n\n(function (NavigationAction) {\n  // eslint-disable-next-line id-denylist\n  NavigationAction[NavigationAction[\"Undefined\"] = 0] = \"Undefined\";\n  NavigationAction[NavigationAction[\"Open\"] = 1] = \"Open\";\n  NavigationAction[NavigationAction[\"Close\"] = 2] = \"Close\";\n  NavigationAction[NavigationAction[\"Enter\"] = 3] = \"Enter\";\n  NavigationAction[NavigationAction[\"Tab\"] = 4] = \"Tab\";\n  NavigationAction[NavigationAction[\"Esc\"] = 5] = \"Esc\";\n  NavigationAction[NavigationAction[\"Delete\"] = 6] = \"Delete\";\n  NavigationAction[NavigationAction[\"Backspace\"] = 7] = \"Backspace\";\n  NavigationAction[NavigationAction[\"Home\"] = 8] = \"Home\";\n  NavigationAction[NavigationAction[\"End\"] = 9] = \"End\";\n  NavigationAction[NavigationAction[\"Up\"] = 10] = \"Up\";\n  NavigationAction[NavigationAction[\"Down\"] = 11] = \"Down\";\n  NavigationAction[NavigationAction[\"Left\"] = 12] = \"Left\";\n  NavigationAction[NavigationAction[\"Right\"] = 13] = \"Right\";\n  NavigationAction[NavigationAction[\"PageDown\"] = 14] = \"PageDown\";\n  NavigationAction[NavigationAction[\"PageUp\"] = 15] = \"PageUp\";\n  NavigationAction[NavigationAction[\"SelectPrevious\"] = 16] = \"SelectPrevious\";\n  NavigationAction[NavigationAction[\"SelectNext\"] = 17] = \"SelectNext\";\n  NavigationAction[NavigationAction[\"SelectAll\"] = 18] = \"SelectAll\";\n  NavigationAction[NavigationAction[\"SelectAllToBeginning\"] = 19] = \"SelectAllToBeginning\";\n  NavigationAction[NavigationAction[\"SelectAllToEnd\"] = 20] = \"SelectAllToEnd\";\n})(NavigationAction || (NavigationAction = {}));\n\nconst MIN_INDEX = 0;\n/**\n * @hidden\n */\n\nclass NavigationEvent {\n  /**\n   * The index of the item to which the user navigated.\n   */\n  constructor(index, originalEvent) {\n    this.index = index;\n    this.originalEvent = originalEvent;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nclass NavigationService {\n  constructor(disabledItemsService, selectionService) {\n    this.disabledItemsService = disabledItemsService;\n    this.selectionService = selectionService;\n    this.open = new EventEmitter();\n    this.close = new EventEmitter();\n    this.enter = new EventEmitter();\n    this.tab = new EventEmitter();\n    this.esc = new EventEmitter();\n    this.up = new EventEmitter();\n    this.right = new EventEmitter();\n    this.down = new EventEmitter();\n    this.left = new EventEmitter();\n    this.delete = new EventEmitter();\n    this.backspace = new EventEmitter();\n    this.home = new EventEmitter();\n    this.end = new EventEmitter();\n    this.pagedown = new EventEmitter();\n    this.pageup = new EventEmitter();\n    this.selectnext = new EventEmitter();\n    this.selectprevious = new EventEmitter();\n    this.selectall = new EventEmitter();\n    this.selectalltobeginning = new EventEmitter();\n    this.selectalltoend = new EventEmitter();\n  }\n\n  process(args) {\n    const keyCode = args.originalEvent.keyCode;\n    const altKey = args.originalEvent.altKey;\n    const shiftKey = args.originalEvent.shiftKey;\n    const ctrlKey = args.originalEvent.ctrlKey || args.originalEvent.metaKey;\n    let index;\n    let action = NavigationAction.Undefined;\n\n    if (altKey && keyCode === Keys.ArrowDown) {\n      action = NavigationAction.Open;\n    } else if (altKey && keyCode === Keys.ArrowUp) {\n      action = NavigationAction.Close;\n    } else if (shiftKey && keyCode === Keys.ArrowUp) {\n      action = NavigationAction.SelectPrevious;\n    } else if (shiftKey && keyCode === Keys.ArrowDown) {\n      action = NavigationAction.SelectNext;\n    } else if (ctrlKey && keyCode === Keys.KeyA) {\n      action = NavigationAction.SelectAll;\n    } else if (ctrlKey && shiftKey && keyCode === Keys.Home) {\n      action = NavigationAction.SelectAllToBeginning;\n    } else if (ctrlKey && shiftKey && keyCode === Keys.End) {\n      action = NavigationAction.SelectAllToEnd;\n    } else if (keyCode === Keys.Enter) {\n      action = NavigationAction.Enter;\n    } else if (keyCode === Keys.Escape) {\n      action = NavigationAction.Esc;\n    } else if (keyCode === Keys.Tab) {\n      action = NavigationAction.Tab;\n    } else if (keyCode === Keys.ArrowUp) {\n      index = this.next({\n        current: args.current,\n        start: args.min,\n        end: args.max,\n        step: -1\n      });\n      action = NavigationAction.Up;\n    } else if (keyCode === Keys.ArrowLeft) {\n      index = this.next({\n        current: args.current,\n        start: args.min,\n        end: args.max,\n        step: -1\n      });\n      action = NavigationAction.Left;\n    } else if (keyCode === Keys.ArrowDown) {\n      index = this.next({\n        current: args.current,\n        start: args.min,\n        end: args.max,\n        step: 1\n      });\n      action = NavigationAction.Down;\n    } else if (keyCode === Keys.ArrowRight) {\n      index = this.next({\n        current: args.current,\n        start: args.min,\n        end: args.max,\n        step: 1\n      });\n      action = NavigationAction.Right;\n    } else if (keyCode === Keys.Home) {\n      index = this.isDisabled(MIN_INDEX) ? args.current : MIN_INDEX;\n      action = NavigationAction.Home;\n    } else if (keyCode === Keys.End) {\n      index = this.isDisabled(args.max) ? args.current : args.max;\n      action = NavigationAction.End;\n    } else if (keyCode === Keys.Delete) {\n      action = NavigationAction.Delete;\n    } else if (keyCode === Keys.Backspace) {\n      action = NavigationAction.Backspace;\n    } else if (keyCode === Keys.PageDown) {\n      action = NavigationAction.PageDown;\n    } else if (keyCode === Keys.PageUp) {\n      action = NavigationAction.PageUp;\n    }\n\n    const eventData = new NavigationEvent(index, args.originalEvent);\n\n    if (action !== NavigationAction.Undefined) {\n      this[NavigationAction[action].toLowerCase()].emit(eventData);\n    }\n\n    return action;\n  }\n\n  next(args) {\n    const {\n      current,\n      start,\n      end,\n      step\n    } = args;\n    const nextIndex = !isPresent(current) ? start : this.clampIndex(current + step, start, end);\n    const firstFocusableIndex = this.firstFocusableIndex(nextIndex, start, end, step);\n\n    if (isPresent(firstFocusableIndex)) {\n      return firstFocusableIndex;\n    }\n\n    if (this.selectionService.isSelected(current) && current >= start) {\n      return current;\n    }\n\n    const inversedStep = -1 * step;\n    return this.firstFocusableIndex(nextIndex, start, end, inversedStep);\n  }\n\n  clampIndex(index, min, max) {\n    if (!isPresent(index) || index < min) {\n      return min;\n    }\n\n    if (index > max) {\n      return max;\n    }\n\n    return index;\n  }\n\n  firstFocusableIndex(startIndex, min, max, step) {\n    while (min <= startIndex && startIndex <= max) {\n      if (!this.isDisabled(startIndex)) {\n        return startIndex;\n      }\n\n      startIndex += step;\n    }\n\n    return undefined;\n  }\n\n  isDisabled(index) {\n    if (this.disabledItemsService) {\n      return this.disabledItemsService.isIndexDisabled(index);\n    }\n  }\n\n}\n\nNavigationService.ɵfac = function NavigationService_Factory(t) {\n  return new (t || NavigationService)(i0.ɵɵinject(DisabledItemsService), i0.ɵɵinject(SelectionService));\n};\n\nNavigationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NavigationService,\n  factory: NavigationService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NavigationService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: DisabledItemsService\n    }, {\n      type: SelectionService\n    }];\n  }, null);\n})();\n/**\n * Renders content when no data is available. To define the no-data template, nest a `<ng-template>` tag\n * with the `kendo<ComponentName>NoDataTemplate` directive inside the component tag.\n *\n * - [Using `NoDataTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-no-data-template)\n * - [Using `NoDataTemplate` with the ComboBox]({% slug templates_combobox %}#toc-no-data-template)\n * - [Using `NoDataTemplate` with the MultiColumnComboBox]({% slug templates_multicolumncombobox %}#toc-no-data-template)\n * - [Using `NoDataTemplate` with the DropDownList]({% slug templates_ddl %}#toc-no-data-template)\n * - [Using `NoDataTemplate` with the DropDownTree]({% slug templates_ddt %}#toc-no-data-template)\n * - [Using `NoDataTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-no-data-template)\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *    <ng-template kendoComboBoxNoDataTemplate>\n *      <h4>No data!</h4>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [];\n * }\n * ```\n */\n\n\nclass NoDataTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNoDataTemplateDirective.ɵfac = function NoDataTemplateDirective_Factory(t) {\n  return new (t || NoDataTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNoDataTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NoDataTemplateDirective,\n  selectors: [[\"\", \"kendoDropDownListNoDataTemplate\", \"\"], [\"\", \"kendoDropDownTreeNoDataTemplate\", \"\"], [\"\", \"kendoComboBoxNoDataTemplate\", \"\"], [\"\", \"kendoMultiColumnComboBoxNoDataTemplate\", \"\"], [\"\", \"kendoAutoCompleteNoDataTemplate\", \"\"], [\"\", \"kendoMultiSelectNoDataTemplate\", \"\"], [\"\", \"kendoMultiSelectTreeNoDataTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NoDataTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownListNoDataTemplate],[kendoDropDownTreeNoDataTemplate],[kendoComboBoxNoDataTemplate],[kendoMultiColumnComboBoxNoDataTemplate],[kendoAutoCompleteNoDataTemplate],[kendoMultiSelectNoDataTemplate],[kendoMultiSelectTreeNoDataTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass PreventableEvent {\n  constructor() {\n    this.prevented = false;\n  }\n  /**\n   * Prevents the default action for a specified event.\n   * In this way, the source component suppresses the built-in behavior that follows the event.\n   */\n\n\n  preventDefault() {\n    this.prevented = true;\n  }\n  /**\n   * If the event is prevented by any of its subscribers, returns `true`.\n   *\n   * @returns `true` if the default action was prevented. Otherwise, returns `false`.\n   */\n\n\n  isDefaultPrevented() {\n    return this.prevented;\n  }\n\n}\n/**\n * Defines the mandatory properties of the `kendoDropDownFilter` directive\n * so that `kendoDropDownFilter` can be used with any of the DropDowns components\n * which implement the `FilterableDropDownComponentBase` class.\n *\n * @hidden\n */\n\n\nclass FilterableComponent {}\n/**\n * @hidden\n */\n\n\nconst DEFAULTS = {\n  pageSize: 50,\n  itemHeight: 28\n};\n/**\n * @hidden\n */\n\nconst normalizeVirtualizationSettings = (settings, defaultOverrides) => {\n  const defaults = Object.assign({}, DEFAULTS, defaultOverrides);\n\n  if (settings === true) {\n    return defaults;\n  }\n\n  if (!settings) {\n    return null;\n  }\n\n  return Object.assign({\n    pageSize: DEFAULTS.pageSize\n  }, settings);\n};\n/**\n * @hidden\n */\n\n\nconst TOUCH_ENABLED = new InjectionToken('dropdowns-touch-enabled');\n/**\n * @hidden\n */\n\nclass ListItemDirective {\n  constructor(element) {\n    this.element = element;\n  }\n\n}\n\nListItemDirective.ɵfac = function ListItemDirective_Factory(t) {\n  return new (t || ListItemDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nListItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ListItemDirective,\n  selectors: [[\"li\", \"role\", \"option\"], [\"li\", \"role\", \"group\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListItemDirective, [{\n    type: Directive,\n    args: [{\n      selector: '\"li[role=option], li[role=group]\"' // eslint-disable-line\n\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass TemplateContextDirective {\n  constructor(viewContainerRef) {\n    this.viewContainerRef = viewContainerRef;\n  }\n\n  set templateContext(context) {\n    if (this.insertedViewRef) {\n      this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.insertedViewRef));\n      this.insertedViewRef = undefined;\n    }\n\n    if (context.templateRef) {\n      this.insertedViewRef = this.viewContainerRef.createEmbeddedView(context.templateRef, context);\n    }\n  }\n\n}\n\nTemplateContextDirective.ɵfac = function TemplateContextDirective_Factory(t) {\n  return new (t || TemplateContextDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n};\n\nTemplateContextDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TemplateContextDirective,\n  selectors: [[\"\", \"templateContext\", \"\"]],\n  inputs: {\n    templateContext: \"templateContext\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TemplateContextDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[templateContext]' // eslint-disable-line\n\n    }]\n  }], function () {\n    return [{\n      type: i0.ViewContainerRef\n    }];\n  }, {\n    templateContext: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass SelectableDirective {\n  constructor(selectionService) {\n    this.checkboxes = {\n      enabled: false\n    }; // @HostBinding('attr.offset-index')\n    // @Input() public offsetIndex: number;\n\n    this.multipleSelection = false;\n    this.selectionService = selectionService;\n  }\n\n  get focusedClassName() {\n    return this.selectionService.isFocused(this.index);\n  }\n\n  get selectedClassName() {\n    return !this.checkboxes.enabled && this.selectionService.isSelected(this.index);\n  }\n\n  onClick(event) {\n    event.stopPropagation();\n    this.selectionService.lastClickedIndex = this.index;\n\n    if (this.checkboxes.enabled && !this.checkboxes.checkOnClick) {\n      return;\n    }\n\n    if (this.multipleSelection) {\n      if (this.selectionService.isSelected(this.index)) {\n        this.selectionService.deselect(this.index);\n      } else {\n        this.selectionService.add(this.index);\n      }\n    } else {\n      this.selectionService.change(this.index);\n    }\n  }\n\n}\n\nSelectableDirective.ɵfac = function SelectableDirective_Factory(t) {\n  return new (t || SelectableDirective)(i0.ɵɵdirectiveInject(SelectionService));\n};\n\nSelectableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: SelectableDirective,\n  selectors: [[\"\", \"kendoDropDownsSelectable\", \"\"]],\n  hostVars: 9,\n  hostBindings: function SelectableDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function SelectableDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"index\", ctx.index);\n      i0.ɵɵstyleProp(\"height\", ctx.height, \"px\")(\"min-height\", ctx.height, \"px\");\n      i0.ɵɵclassProp(\"k-focus\", ctx.focusedClassName)(\"k-selected\", ctx.selectedClassName);\n    }\n  },\n  inputs: {\n    index: \"index\",\n    checkboxes: \"checkboxes\",\n    height: \"height\",\n    multipleSelection: \"multipleSelection\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownsSelectable]'\n    }]\n  }], function () {\n    return [{\n      type: SelectionService\n    }];\n  }, {\n    index: [{\n      type: HostBinding,\n      args: ['attr.index']\n    }, {\n      type: Input\n    }],\n    checkboxes: [{\n      type: Input\n    }],\n    height: [{\n      type: HostBinding,\n      args: ['style.height.px']\n    }, {\n      type: HostBinding,\n      args: ['style.minHeight.px']\n    }, {\n      type: Input\n    }],\n    multipleSelection: [{\n      type: Input\n    }],\n    focusedClassName: [{\n      type: HostBinding,\n      args: ['class.k-focus']\n    }],\n    selectedClassName: [{\n      type: HostBinding,\n      args: ['class.k-selected']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass ListComponent {\n  /* tslint:disable:member-ordering */\n  constructor(dataService, wrapper, selectionService, disabledItemsService, cdr, zone, renderer) {\n    this.dataService = dataService;\n    this.wrapper = wrapper;\n    this.selectionService = selectionService;\n    this.disabledItemsService = disabledItemsService;\n    this.cdr = cdr;\n    this.zone = zone;\n    this.renderer = renderer;\n    this.selected = [];\n    this.focused = -1;\n    this.show = true;\n    this.multipleSelection = false;\n    this.type = 'list';\n    this.checkboxes = {\n      enabled: false\n    };\n    this.rounded = 'medium';\n    this.onClick = new EventEmitter();\n    this.pageChange = new EventEmitter();\n    this.listResize = new EventEmitter();\n    this.startFrom = 0;\n    this.lastLoaded = 0;\n    this.lastScrollTop = 0;\n    this.scrollToFocused = false;\n    this._size = 'medium';\n    this.selectSubscription = merge(this.selectionService.onSelect.pipe(map(args => args.indices[0])), this.selectionService.onFocus).pipe( // handle only the very last onSelect/onFocus emission\n    switchMap(event => this.zone.onStable.pipe(take(1), map(() => event)))).subscribe(this.scrollToItem.bind(this));\n    this.prepareClasses();\n  }\n\n  set data(data) {\n    this._data = data[0] && data[0].header ? data.slice(0) : data;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  set size(size) {\n    if (this.type === 'list') {\n      this.renderer.removeClass(this.wrapper.nativeElement, getSizeClass('list', this.size));\n\n      if (size) {\n        this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('list', size));\n      }\n\n      this._size = size;\n    }\n  }\n\n  get size() {\n    return this._size;\n  }\n\n  get pageSize() {\n    if (this.virtual.pageSize) {\n      return this.virtual.pageSize;\n    }\n\n    let size = Math.round(this.height / this.virtual.itemHeight);\n    return size;\n  }\n\n  get scrollHeight() {\n    return (this.dataService.grouped ? this.virtual.total - 1 : this.virtual.total) * this.virtual.itemHeight;\n  }\n\n  get overflowY() {\n    if (isPresent(this.virtual)) {\n      const overflow = this.hasVirtualScrollbar() ? 'scroll' : 'hidden';\n      return overflow;\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  get checkboxClasses() {\n    return `${this.size ? getSizeClass('checkbox', this.size) : ''} ${this.rounded ? getRoundedClass(this.rounded) : ''}`;\n  }\n\n  ngOnChanges(changes) {\n    if (isChanged('data', changes, false)) {\n      if (this.lastLoaded <= 0) {\n        this.lastLoaded = this.data.length - 1;\n        this.scrollToFocused = !changes.data.isFirstChange();\n      }\n\n      this.setOverflow();\n    }\n\n    if (isChanged('virtual', changes, false)) {\n      this.setOverflow();\n    }\n\n    if (isChanged('type', changes, false)) {\n      this.prepareClasses();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.setComponentClasses();\n    this.zone.runOutsideAngular(() => {\n      this.scrollSubscription = fromEvent(this.content.nativeElement, \"scroll\").pipe(auditTime(100), tap(this.prefetchData.bind(this)), tap(this.findCurrentGroup.bind(this))).subscribe(() => {\n        this.lastScrollTop = this.content.nativeElement.scrollTop;\n      });\n    });\n    this.setOverflow();\n  }\n\n  ngAfterViewChecked() {\n    if (this.virtual) {\n      this.positionItems();\n    }\n\n    if (this.items && this.scrollToFocused) {\n      this.scrollToFocused = false;\n      const scrollTarget = this.items.length && this.selectionService.focused === -1 ? 0 : this.selectionService.focused;\n      this.scrollToItem(scrollTarget);\n    }\n\n    if (this.dataService.grouped) {\n      this.findCurrentGroup();\n    }\n  }\n\n  ngOnDestroy() {\n    this.selectSubscription.unsubscribe();\n\n    if (this.scrollSubscription) {\n      this.scrollSubscription.unsubscribe();\n    }\n  }\n\n  onCheckedChange(e, index) {\n    const isChecked = e.target['checked'];\n\n    if (isChecked && !this.selectionService.isSelected(index)) {\n      this.selectionService.add(index);\n    }\n\n    if (!isChecked && this.selectionService.isSelected(index)) {\n      this.selectionService.deselect(index);\n    }\n  }\n\n  prepareClasses() {\n    if (this.type === 'list') {\n      this.listContentClass = 'k-list-content';\n      this.listClass = 'k-list-ul';\n      this.listItemClass = 'k-list-item';\n      this.listVirtualClass = 'k-virtual-list';\n      this.listGroupStickyHeaderClass = 'k-list-group-sticky-header';\n      this.listGroupStickyHeaderTextClass = 'k-list-header-text';\n      this.listGroupItemClass = 'k-list-group-item';\n      this.listGroupItemTextClass = 'k-list-item-text';\n    } else {\n      this.listContentClass = 'k-table-body k-table-scroller';\n      this.listClass = 'k-table k-table-list';\n      this.listItemClass = 'k-table-row';\n      this.listVirtualClass = 'k-virtual-table';\n      this.listGroupStickyHeaderClass = 'k-table-group-sticky-header';\n      this.listGroupStickyHeaderTextClass = 'k-table-th';\n      this.listGroupItemClass = 'k-table-group-row';\n      this.listGroupItemTextClass = 'k-table-th';\n    }\n  }\n\n  isChecked(index) {\n    const normalizedIndex = this.virtual ? index + this.virtual.skip : index;\n    return this.selectionService.isSelected(normalizedIndex);\n  }\n\n  firstVisibleItem() {\n    const content = this.content.nativeElement;\n    const rect = content.getBoundingClientRect(); // IE9 hack\n\n    const disabled = Array.prototype.slice.call(content.querySelectorAll(\".k-disabled\")); // This is a workaround for finding elements with pointer-events: none;\n\n    disabled.forEach(el => this.renderer.setStyle(el, \"pointer-events\", \"auto\"));\n    const item = document.elementFromPoint(rect.left + 1, rect.top + 1);\n    disabled.forEach(el => this.renderer.setStyle(el, \"pointer-events\", \"none\")); // return the closest `li` item to cover the custom template scenario\n\n    return closest(item, 'li');\n  }\n\n  findCurrentGroup() {\n    if (!this.dataService.grouped) {\n      this.currentGroup = undefined;\n      return;\n    }\n\n    const item = this.firstVisibleItem();\n\n    if (item) {\n      let index;\n\n      if (item.getAttribute(\"role\") === \"group\") {\n        index = parseInt(item.getAttribute(\"group-index\"), 10);\n        this.currentGroup = this.dataService.groupAt(index).value;\n      } else {\n        index = parseInt(item.getAttribute(\"index\"), 10);\n        this.currentGroup = this.dataService.itemGroup(this.dataService.itemAt(index));\n      }\n    } else {\n      this.currentGroup = undefined;\n    }\n\n    this.cdr.detectChanges();\n  }\n\n  prefetchData() {\n    if (!this.virtual) {\n      return;\n    }\n\n    const visibleItems = Math.trunc(this.content.nativeElement.clientHeight / this.virtual.itemHeight);\n    const offsetY = this.content.nativeElement.scrollTop;\n    const start = Math.trunc(offsetY / this.virtual.itemHeight);\n    const down = offsetY > this.lastScrollTop;\n    const nextPage = start + visibleItems >= this.lastLoaded && this.lastLoaded < this.virtual.total - 1;\n    const leftOver = this.pageSize - (this.lastLoaded - this.startFrom);\n    const prevPage = this.lastLoaded - this.pageSize + visibleItems >= start - leftOver;\n\n    if (down && nextPage) {\n      this.changePage(start);\n    }\n\n    if (!down && prevPage) {\n      this.changePage(start - this.pageSize + visibleItems + 1);\n    }\n  }\n\n  changePage(start) {\n    this.zone.run(() => {\n      let end = this.pageSize + start;\n\n      if (end > this.virtual.total) {\n        start--;\n        end = this.virtual.total;\n      }\n\n      if (start < 0) {\n        start = 0;\n      }\n\n      this.startFrom = start;\n      this.lastLoaded = end;\n      this.pageChange.emit({\n        skip: start,\n        take: this.pageSize\n      });\n    });\n  }\n\n  index(groupIndex, itemIndex) {\n    return groupIndex > 0 ? this.dataService.groupIndices[groupIndex - 1] + itemIndex : itemIndex;\n  }\n\n  getText(dataItem) {\n    return getter(dataItem, this.textField);\n  }\n\n  getValue(dataItem) {\n    return getter(dataItem, this.valueField);\n  }\n\n  isDisabled(index) {\n    if (isPresent(this.virtual)) {\n      index += this.virtual.skip;\n    }\n\n    return this.disabledItemsService.isIndexDisabled(index);\n  }\n\n  isAltRow(index) {\n    return this.type === 'dropdowngrid' && index % 2 !== 0;\n  }\n\n  scrollToItem(index) {\n    let flatIndex = index;\n\n    if (this.dataService.grouped) {\n      // takes into account the group header items\n      flatIndex = this.dataService.flatIndex(index);\n      /* The first group header item is not rendered in the list (see template), so subtract 1 when calulating the flat index.\n         With virtualization enabled, the first group header could be in a previous page, in which case don't subtract anything. */\n\n      const groupHeaderOffset = this.firstGroupHeaderInTargetedPage(flatIndex) ? -1 : 0;\n      flatIndex += groupHeaderOffset;\n    }\n\n    if (this.virtual && flatIndex > -1) {\n      this.scrollToIndex(flatIndex);\n      return;\n    }\n\n    const items = this.items.toArray();\n\n    if (isPresent(items[flatIndex]) && flatIndex !== -1) {\n      this.scroll(items[flatIndex].element);\n    }\n  }\n\n  scrollWithOnePage(action) {\n    let content = this.content.nativeElement;\n    const contentOffsetHeight = content.clientHeight;\n\n    if (action === NavigationAction.PageDown) {\n      content.scrollTop += contentOffsetHeight;\n    } else if (action === NavigationAction.PageUp) {\n      content.scrollTop -= contentOffsetHeight;\n    }\n  }\n\n  scrollToIndex(index) {\n    let content = this.content.nativeElement;\n    let contentScrollTop = content.scrollTop;\n    const itemOffsetTop = index * this.virtual.itemHeight;\n    const itemOffsetHeight = this.virtual.itemHeight;\n    const contentOffsetHeight = content.clientHeight;\n    const bottomDistance = itemOffsetTop + itemOffsetHeight;\n\n    if (contentScrollTop > itemOffsetTop) {\n      contentScrollTop = itemOffsetTop;\n    } else if (bottomDistance > contentScrollTop + contentOffsetHeight) {\n      contentScrollTop = bottomDistance - contentOffsetHeight;\n    }\n\n    content.scrollTop = contentScrollTop;\n  }\n\n  scroll(item) {\n    if (!item) {\n      return;\n    }\n\n    const nativeElement = item.nativeElement;\n    let content = this.content.nativeElement,\n        itemOffsetTop = nativeElement.offsetTop,\n        itemOffsetHeight = nativeElement.offsetHeight,\n        contentScrollTop = content.scrollTop,\n        contentOffsetHeight = content.clientHeight,\n        bottomDistance = itemOffsetTop + itemOffsetHeight;\n\n    if (contentScrollTop > itemOffsetTop) {\n      contentScrollTop = itemOffsetTop;\n    } else if (bottomDistance > contentScrollTop + contentOffsetHeight) {\n      contentScrollTop = bottomDistance - contentOffsetHeight;\n    }\n\n    content.scrollTop = contentScrollTop;\n  }\n  /**\n   * Indicates whether a scrollbar is currently rendered in the list.\n   */\n\n\n  hasScrollbar() {\n    if (!(isPresent(this.items) && this.items.length && isPresent(this.list) && isPresent(this.content))) {\n      return false;\n    }\n\n    const hasVirtualScroll = isPresent(this.virtual) && this.hasVirtualScrollbar();\n    return hasVirtualScroll || this.list.nativeElement.scrollHeight > this.content.nativeElement.offsetHeight;\n  }\n\n  isItemSelected(index) {\n    return this.selectionService.isSelected(index) || null;\n  }\n  /**\n   * Sets the list's content overflow (hides/shows scrollbar)\n   */\n\n\n  setOverflow() {\n    if (this.virtual) {\n      const overflow = this.hasVirtualScrollbar() ? 'scroll' : 'hidden';\n      this.renderer.setStyle(this.content.nativeElement, 'overflow-y', overflow);\n    }\n  }\n  /**\n   * Indicates whether the scrollbar should be visible in virtual mode.\n   */\n\n\n  hasVirtualScrollbar() {\n    const contentOffsetHeight = this.content.nativeElement.offsetHeight;\n    const virtualOffsetHeight = this.virtualContainer && this.virtualContainer.nativeElement.offsetHeight;\n    return this.virtualContainer && virtualOffsetHeight > contentOffsetHeight;\n  }\n\n  positionItems() {\n    this.items.forEach((item, index) => {\n      const offsetY = (index + this.startFrom) * this.virtual.itemHeight;\n      this.renderer.setStyle(item.element.nativeElement, \"transform\", `translateY(${offsetY}px`);\n    });\n  }\n  /**\n   * Indicates whether the first group header from the data set is in the targeted virtual page.\n   */\n\n\n  firstGroupHeaderInTargetedPage(itemIndex) {\n    if (!isPresent(this.virtual)) {\n      return true;\n    }\n\n    return this.virtual.skip === 0 && this.virtual.pageSize > itemIndex;\n  }\n\n  setComponentClasses() {\n    if (this.type === 'list') {\n      this.renderer.addClass(this.wrapper.nativeElement, 'k-list');\n\n      if (this.size) {\n        this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('list', this.size));\n      }\n    }\n\n    if (isPresent(this.virtual)) {\n      this.renderer.addClass(this.wrapper.nativeElement, this.listVirtualClass);\n    }\n  }\n\n}\n\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)(i0.ɵɵdirectiveInject(DataService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(SelectionService), i0.ɵɵdirectiveInject(DisabledItemsService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nListComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"kendo-list\"]],\n  viewQuery: function ListComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c2, 7);\n      i0.ɵɵviewQuery(_c3, 7);\n      i0.ɵɵviewQuery(_c4, 5);\n      i0.ɵɵviewQuery(ListItemDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.list = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.virtualContainer = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n    }\n  },\n  inputs: {\n    selected: \"selected\",\n    focused: \"focused\",\n    textField: \"textField\",\n    valueField: \"valueField\",\n    height: \"height\",\n    template: \"template\",\n    groupTemplate: \"groupTemplate\",\n    fixedGroupTemplate: \"fixedGroupTemplate\",\n    show: \"show\",\n    id: \"id\",\n    optionPrefix: \"optionPrefix\",\n    multipleSelection: \"multipleSelection\",\n    virtual: \"virtual\",\n    type: \"type\",\n    checkboxes: \"checkboxes\",\n    ariaLive: \"ariaLive\",\n    isMultiselect: \"isMultiselect\",\n    data: \"data\",\n    size: \"size\",\n    rounded: \"rounded\"\n  },\n  outputs: {\n    onClick: \"onClick\",\n    pageChange: \"pageChange\",\n    listResize: \"listResize\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 9,\n  vars: 17,\n  consts: [[3, \"class\", \"ngStyle\", 4, \"ngIf\"], [\"unselectable\", \"on\"], [\"content\", \"\"], [\"role\", \"listbox\"], [\"list\", \"\"], [4, \"ngIf\"], [3, \"resize\", 4, \"ngIf\"], [\"class\", \"k-height-container\", \"role\", \"presentation\", 4, \"ngIf\"], [3, \"ngStyle\"], [3, \"ngIf\"], [3, \"templateContext\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"role\", \"option\", \"kendoDropDownsSelectable\", \"\", 3, \"checkboxes\", \"height\", \"index\", \"multipleSelection\", \"ngClass\"], [\"type\", \"checkbox\", \"class\", \"k-checkbox\", 3, \"ngClass\", \"checked\", \"change\", 4, \"ngIf\"], [\"type\", \"checkbox\", 1, \"k-checkbox\", 3, \"ngClass\", \"checked\", \"change\"], [1, \"k-list-item-text\"], [\"role\", \"group\", 3, \"class\", \"k-table-alt-row\", \"ngStyle\", 4, \"ngIf\"], [\"role\", \"option\", \"kendoDropDownsSelectable\", \"\", 3, \"height\", \"index\", \"multipleSelection\", \"class\", \"ngClass\", 4, \"ngIf\"], [\"role\", \"group\", 3, \"ngStyle\"], [\"role\", \"option\", \"kendoDropDownsSelectable\", \"\", 3, \"height\", \"index\", \"multipleSelection\", \"ngClass\"], [3, \"resize\"], [\"role\", \"presentation\", 1, \"k-height-container\"], [\"virtualContainer\", \"\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ListComponent_div_0_Template, 3, 9, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1, 2);\n      i0.ɵɵelementStart(3, \"ul\", 3, 4);\n      i0.ɵɵtemplate(5, ListComponent_5_Template, 1, 1, undefined, 5);\n      i0.ɵɵtemplate(6, ListComponent_6_Template, 1, 1, undefined, 5);\n      i0.ɵɵtemplate(7, ListComponent_kendo_resize_sensor_7_Template, 1, 0, \"kendo-resize-sensor\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, ListComponent_div_8_Template, 4, 2, \"div\", 7);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.dataService.grouped);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMap(ctx.listContentClass);\n      i0.ɵɵstyleProp(\"overscroll-behavior\", \"none\")(\"max-height\", ctx.height, \"px\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassMap(ctx.listClass);\n      i0.ɵɵattribute(\"id\", ctx.id)(\"aria-live\", ctx.ariaLive)(\"aria-multiselectable\", ctx.isMultiselect)(\"aria-hidden\", !ctx.show);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.dataService.grouped && ctx.show);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dataService.grouped);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.virtual);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.virtual);\n    }\n  },\n  directives: [i11.NgIf, i11.NgStyle, TemplateContextDirective, i11.NgForOf, ListItemDirective, SelectableDirective, i11.NgClass, i9.ResizeSensorComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ListComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-list',\n      template: `\n    <div *ngIf=\"dataService.grouped\"\n        [class]=\"listGroupStickyHeaderClass\"\n        [ngStyle]=\"{\n            'height.px': virtual?.itemHeight,\n            'minHeight.px' : virtual?.itemHeight,\n            'boxSizing' : virtual ? 'border-box' : 'inherit'}\"\n        >\n        <ng-template *ngIf=\"fixedGroupTemplate\"\n            [templateContext]=\"{\n                templateRef: fixedGroupTemplate.templateRef,\n                $implicit: currentGroup\n            }\">\n        </ng-template>\n        <ng-template [ngIf]=\"!fixedGroupTemplate\"><span [class]=\"listGroupStickyHeaderTextClass\">{{ currentGroup }}</span></ng-template>\n    </div>\n    <div #content\n        [class]=\"listContentClass\"\n        [style.overscrollBehavior]=\"'none'\"\n        [style.maxHeight.px]=\"height\"\n        unselectable=\"on\">\n    <ul #list\n        role=\"listbox\"\n        [class]=\"listClass\"\n        [attr.id]=\"id\"\n        [attr.aria-live]=\"ariaLive\"\n        [attr.aria-multiselectable]=\"isMultiselect\"\n        [attr.aria-hidden]=\"!show\">\n         <ng-template *ngIf=\"!dataService.grouped && show\" ngFor let-dataItem let-itemIndex=\"index\" [ngForOf]=\"data\">\n            <li\n                role=\"option\"\n                kendoDropDownsSelectable\n                [checkboxes]=\"checkboxes\"\n                [height]=\"virtual?.itemHeight\"\n                [index]=\"itemIndex + startFrom\"\n                [multipleSelection]=\"multipleSelection\"\n                [attr.id]=\"optionPrefix + '-' + getValue(dataItem)\"\n                [attr.tabIndex]=\"-1\"\n                [attr.aria-selected]=\"isItemSelected(itemIndex)\"\n                [class]=\"listItemClass\"\n                [ngClass]=\"{\n                    'k-disabled': isDisabled(itemIndex),\n                    'k-table-alt-row': isAltRow(itemIndex)\n                }\"\n            >\n                <input\n                    *ngIf=\"checkboxes.enabled\"\n                    type=\"checkbox\"\n                    class=\"k-checkbox\"\n                    [ngClass]=\"checkboxClasses\"\n                    (change)=\"onCheckedChange($event, itemIndex)\"\n                    [checked]=\"isChecked(itemIndex)\"\n                />\n                <ng-template *ngIf=\"template\"\n                    [templateContext]=\"{\n                        templateRef: template.templateRef,\n                        $implicit: dataItem\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!template\"><span class=\"k-list-item-text\">{{ getText(dataItem) }}</span></ng-template>\n            </li>\n         </ng-template>\n         <ng-template *ngIf=\"dataService.grouped\" ngFor let-dataItem let-itemIndex=\"index\" [ngForOf]=\"data\">\n            <li\n                *ngIf=\"dataItem.header && dataItem.index > 0\"\n                role=\"group\"\n                [class]=\"listGroupItemClass\"\n                [class.k-table-alt-row]=\"isAltRow(itemIndex - 1)\"\n                [ngStyle]=\"{\n                    'height.px': virtual?.itemHeight,\n                    'minHeight.px' : virtual?.itemHeight,\n                    'boxSizing' : virtual ? 'border-box' : 'inherit'}\"\n                [attr.group-index]=\"dataItem.index\"\n                [attr.id]=\"optionPrefix + '-' + getValue(dataItem.value)\"\n                [attr.tabIndex]=\"-1\">\n                    <span [class]=\"listGroupItemTextClass\">\n                        <ng-template *ngIf=\"groupTemplate\"\n                            [templateContext]=\"{\n                                templateRef: groupTemplate.templateRef,\n                                $implicit: dataItem.value\n                        }\">\n                        </ng-template>\n                        <ng-template [ngIf]=\"!groupTemplate\">{{ dataItem.value }}</ng-template>\n                    </span>\n            </li>\n            <li\n                *ngIf=\"!dataItem.header\"\n                role=\"option\"\n                kendoDropDownsSelectable\n                [height]=\"virtual?.itemHeight\"\n                [index]=\"dataItem.offsetIndex\"\n                [multipleSelection]=\"multipleSelection\"\n                [attr.absolute-index]=\"dataItem.index\"\n                [attr.id]=\"optionPrefix + '-' + getValue(dataItem.value)\"\n                [attr.tabIndex]=\"-1\"\n                [attr.aria-selected]=\"isItemSelected(dataItem.offsetIndex)\"\n                [class]=\"listItemClass\"\n                [ngClass]=\"{\n                    'k-disabled': isDisabled(dataItem.offsetIndex),\n                    'k-table-alt-row': isAltRow(itemIndex - 1)\n                }\"\n            >\n                <ng-template *ngIf=\"template\"\n                    [templateContext]=\"{\n                        templateRef: template.templateRef,\n                        $implicit: dataItem.value\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!template\"><span class=\"k-list-item-text\">{{ getText(dataItem.value) }}</span></ng-template>\n            </li>\n        </ng-template>\n        <kendo-resize-sensor\n            *ngIf=\"!virtual\"\n            (resize)=\"listResize.emit()\"\n        >\n        </kendo-resize-sensor>\n    </ul>\n    <div *ngIf=\"virtual\" #virtualContainer class=\"k-height-container\" role=\"presentation\">\n        <div [style.height.px]=\"scrollHeight\">\n            <kendo-resize-sensor (resize)=\"listResize.emit()\"></kendo-resize-sensor>\n        </div>\n    </div>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: DataService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: SelectionService\n    }, {\n      type: DisabledItemsService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    selected: [{\n      type: Input\n    }],\n    focused: [{\n      type: Input\n    }],\n    textField: [{\n      type: Input\n    }],\n    valueField: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    groupTemplate: [{\n      type: Input\n    }],\n    fixedGroupTemplate: [{\n      type: Input\n    }],\n    show: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    optionPrefix: [{\n      type: Input\n    }],\n    multipleSelection: [{\n      type: Input\n    }],\n    virtual: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    checkboxes: [{\n      type: Input\n    }],\n    ariaLive: [{\n      type: Input\n    }],\n    isMultiselect: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    onClick: [{\n      type: Output\n    }],\n    pageChange: [{\n      type: Output\n    }],\n    listResize: [{\n      type: Output\n    }],\n    items: [{\n      type: ViewChildren,\n      args: [ListItemDirective]\n    }],\n    content: [{\n      type: ViewChild,\n      args: ['content', {\n        static: true\n      }]\n    }],\n    list: [{\n      type: ViewChild,\n      args: ['list', {\n        static: true\n      }]\n    }],\n    virtualContainer: [{\n      type: ViewChild,\n      args: ['virtualContainer', {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass Messages extends ComponentMessages {}\n\nMessages.ɵfac = /* @__PURE__ */function () {\n  let ɵMessages_BaseFactory;\n  return function Messages_Factory(t) {\n    return (ɵMessages_BaseFactory || (ɵMessages_BaseFactory = i0.ɵɵgetInheritedFactory(Messages)))(t || Messages);\n  };\n}();\n\nMessages.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: Messages,\n  inputs: {\n    noDataText: \"noDataText\",\n    clearTitle: \"clearTitle\",\n    checkAllText: \"checkAllText\",\n    selectButtonText: \"selectButtonText\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Messages, [{\n    type: Directive\n  }], null, {\n    noDataText: [{\n      type: Input\n    }],\n    clearTitle: [{\n      type: Input\n    }],\n    checkAllText: [{\n      type: Input\n    }],\n    selectButtonText: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nclass LocalizedMessagesDirective extends Messages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n}\n\nLocalizedMessagesDirective.ɵfac = function LocalizedMessagesDirective_Factory(t) {\n  return new (t || LocalizedMessagesDirective)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nLocalizedMessagesDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LocalizedMessagesDirective,\n  selectors: [[\"\", \"kendoDropDownListLocalizedMessages\", \"\"], [\"\", \"kendoDropDownTreeLocalizedMessages\", \"\"], [\"\", \"kendoComboBoxLocalizedMessages\", \"\"], [\"\", \"kendoMultiColumnComboBoxLocalizedMessages\", \"\"], [\"\", \"kendoAutoCompleteLocalizedMessages\", \"\"], [\"\", \"kendoMultiSelectLocalizedMessages\", \"\"], [\"\", \"kendoMultiSelectTreeLocalizedMessages\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: Messages,\n    useExisting: forwardRef(() => LocalizedMessagesDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LocalizedMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: Messages,\n        useExisting: forwardRef(() => LocalizedMessagesDirective)\n      }],\n      selector: `\n    [kendoDropDownListLocalizedMessages],\n    [kendoDropDownTreeLocalizedMessages],\n    [kendoComboBoxLocalizedMessages],\n    [kendoMultiColumnComboBoxLocalizedMessages],\n    [kendoAutoCompleteLocalizedMessages],\n    [kendoMultiSelectLocalizedMessages],\n    [kendoMultiSelectTreeLocalizedMessages]\n  `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n\nconst NO_VALUE = \"\";\nconst DEFAULT_SIZE$5 = 'medium';\nconst DEFAULT_ROUNDED$5 = 'medium';\nconst DEFAULT_FILL_MODE$5 = 'solid';\n/**\n * @hidden\n */\n\nconst AUTOCOMPLETE_VALUE_ACCESSOR = {\n  multi: true,\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AutoCompleteComponent)\n};\n/**\n * Represents the [Kendo UI AutoComplete component for Angular]({% slug overview_autocomplete %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-autocomplete\n *      [data]=\"listItems\"\n *      [placeholder]=\"placeholder\"\n *  >\n * `\n * })\n * class AppComponent {\n *   public placeholder: string = 'Type \"it\" for suggestions';\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\n\nclass AutoCompleteComponent {\n  constructor(localization, dataService, popupService, selectionService, navigationService, disabledItemsService, _zone, cdr, renderer, hostElement, touchEnabled) {\n    this.localization = localization;\n    this.dataService = dataService;\n    this.popupService = popupService;\n    this.selectionService = selectionService;\n    this.navigationService = navigationService;\n    this.disabledItemsService = disabledItemsService;\n    this._zone = _zone;\n    this.cdr = cdr;\n    this.renderer = renderer;\n    this.hostElement = hostElement;\n    this.touchEnabled = touchEnabled;\n    /**\n     * Defines whether the first match from the suggestions list will be automatically focused.\n     * By default, `highlightFirst` is set to `true`.\n     */\n\n    this.highlightFirst = true;\n    /**\n     * @hidden\n     */\n\n    this.focusableId = `k-${guid()}`;\n    /**\n     * The hint which is displayed when the component is empty.\n     */\n\n    this.placeholder = \"\";\n    /**\n     * Sets the height of the suggestions list. By default, `listHeight` is 200px.\n     *\n     * > The `listHeight` property affects only the list of suggestions and not the whole popup container.\n     * > To set the height of the popup container, use `popupSettings.height`.\n     */\n\n    this.listHeight = 200;\n    /**\n     * @hidden\n     *\n     * If set to `true`, renders a button on hovering over the component.\n     * Clicking this button resets the value of the component to `undefined` and triggers the `change` event.\n     */\n\n    this.clearButton = true;\n    /**\n     * Sets the disabled state of the component.\n     */\n\n    this.disabled = false;\n    /**\n     * Sets the read-only state of the component.\n     */\n\n    this.readonly = false;\n    /**\n     * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n\n    this.tabindex = 0;\n    /**\n     * Enables the [filtering]({% slug filtering_autocomplete %}) functionality.\n     * If set to `true`, the component emits the `filterChange` event.\n     */\n\n    this.filterable = false;\n    /**\n     * Fires each time the value is changed&mdash;\n     * when the component is blurred or the value is cleared through the **Clear** button\n     * ([see example]({% slug overview_autocomplete %}#toc-events)).\n     * When the value of the component is programmatically changed to `ngModel` or `formControl`\n     * through its API or form binding, the `valueChange` event is not triggered because it\n     * might cause a mix-up with the built-in `valueChange` mechanisms of the `ngModel` or `formControl` bindings.\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires each time the user types in the input field.\n     * You can filter the source based on the passed filtration value\n     * ([see example]({% slug overview_autocomplete %}#toc-events)).\n     */\n\n    this.filterChange = new EventEmitter();\n    /**\n     * Fires each time the popup is about to open.\n     * This event is preventable. If you cancel it, the popup will remain closed.\n     */\n\n    this.open = new EventEmitter();\n    /**\n     * Fires after the popup has been opened.\n     */\n\n    this.opened = new EventEmitter();\n    /**\n     * Fires each time the popup is about to close.\n     * This event is preventable. If you cancel it, the popup will remain open.\n     */\n\n    this.close = new EventEmitter();\n    /**\n     * Fires after the popup has been closed.\n     */\n\n    this.closed = new EventEmitter();\n    /**\n     * Fires each time the user focuses the AutoComplete.\n     */\n\n    this.onFocus = new EventEmitter();\n    /**\n     * Fires each time the AutoComplete gets blurred.\n     */\n\n    this.onBlur = new EventEmitter();\n    this.widgetClasses = true;\n    this.listBoxId = guid();\n    this.optionPrefix = guid();\n    this.onChangeCallback = noop;\n    this.onTouchedCallback = noop;\n\n    this.popupMouseDownHandler = event => event.preventDefault();\n\n    this._popupSettings = {\n      animate: true\n    };\n    this._open = false;\n    this._value = \"\";\n    this.valueChangeSubject = new Subject();\n    this._isFocused = false;\n    this._size = 'medium';\n    this._rounded = 'medium';\n    this._fillMode = 'solid';\n    validatePackage(packageMetadata);\n    this.direction = localization.rtl ? 'rtl' : 'ltr';\n    this.wrapper = this.hostElement.nativeElement;\n    this.data = [];\n    this.subscribeEvents();\n    this.subscribeTouchEvents();\n    this.selectionService.resetSelection([-1]);\n  }\n\n  get width() {\n    let wrapperOffsetWidth = 0;\n\n    if (isDocumentAvailable()) {\n      wrapperOffsetWidth = this.wrapper.offsetWidth;\n    }\n\n    const width = this.popupSettings.width || wrapperOffsetWidth;\n    const minWidth = isNaN(wrapperOffsetWidth) ? wrapperOffsetWidth : `${wrapperOffsetWidth}px`;\n    const maxWidth = isNaN(width) ? width : `${width}px`;\n    return {\n      min: minWidth,\n      max: maxWidth\n    };\n  }\n\n  get height() {\n    const popupHeight = this.popupSettings.height;\n    return isPresent(popupHeight) ? `${popupHeight}px` : 'auto';\n  }\n\n  get listContainerClasses() {\n    const containerClasses = ['k-list-container', 'k-reset'];\n\n    if (this.popupSettings.popupClass) {\n      containerClasses.push(this.popupSettings.popupClass);\n    }\n\n    return containerClasses;\n  }\n\n  get suggestion() {\n    if (!this.text || !this.suggestedText) {\n      this.suggestedText = undefined;\n      return;\n    }\n\n    const hasMatch = this.suggestedText.toLowerCase().startsWith(this.text.toLowerCase());\n    const shouldSuggest = this.suggest && !this.backspacePressed;\n\n    if (shouldSuggest && hasMatch) {\n      return this.suggestedText;\n    }\n  }\n\n  get appendTo() {\n    const {\n      appendTo\n    } = this.popupSettings;\n\n    if (!appendTo || appendTo === 'root') {\n      return undefined;\n    }\n\n    return appendTo === 'component' ? this.container : appendTo;\n  }\n\n  get clearButtonVisiblity() {\n    if (this.touchEnabled) {\n      return 'visible';\n    }\n  }\n  /**\n   * Toggles the visibility of the popup.\n   * If you use the `toggle` method to open or close the popup, the `open` and `close` events will not be fired.\n   *\n   * @param open - The state of the popup.\n   */\n\n\n  toggle(open) {\n    Promise.resolve(null).then(() => {\n      const shouldOpen = isPresent(open) ? open : !this._open;\n\n      this._toggle(shouldOpen);\n    });\n  }\n  /**\n   * Returns the current open state of the popup.\n   */\n\n\n  get isOpen() {\n    return this._open;\n  }\n  /**\n   * @hidden\n   */\n\n\n  togglePopup(open) {\n    const isDisabled = this.disabled || this.readonly;\n    const sameState = this.isOpen === open;\n\n    if (isDisabled || sameState) {\n      return;\n    }\n\n    const isDefaultPrevented = this.triggerPopupEvents(open);\n\n    if (!isDefaultPrevented) {\n      this._toggle(open);\n    }\n  }\n\n  get activeDescendant() {\n    if (!this.isOpen || !isPresent(this.selectionService.focused) || this.selectionService.focused === -1) {\n      return null;\n    }\n\n    const dataItem = this.dataService.itemAt(this.selectionService.focused);\n    return this.optionPrefix + \"-\" + getter(dataItem, this.valueField);\n  }\n  /**\n   * Sets the data of the AutoComplete.\n   *\n   * > The data has to be provided in an array-like list.\n   */\n\n\n  set data(data) {\n    this.dataService.data = data || [];\n\n    if (this.virtual) {\n      this.virtual.skip = 0;\n    }\n\n    if (this.filterable) {\n      this.selectionService.focused = this.isOpen && this.data.length && this.highlightFirst ? this.firstFocusableIndex(0) : -1;\n    }\n\n    if (this.suggest && this.dataService.itemsCount > 0) {\n      this.suggestedText = getter(this.dataService.itemAt(0), this.valueField);\n    }\n  }\n\n  get data() {\n    const virtual = this.virtual;\n\n    if (virtual) {\n      const start = virtual.skip || 0;\n      const end = start + virtual.pageSize; // Use length instead of itemsCount because of the grouping.\n\n      virtual.total = this.dataService.data.length;\n      return this.dataService.data.slice(start, end);\n    }\n\n    return this.dataService.data;\n  }\n  /**\n   * Sets the value of the AutoComplete.\n   */\n\n\n  set value(newValue) {\n    this.verifySettings(newValue);\n    this._value = newValue || NO_VALUE;\n    this.text = this.value;\n    this.cdr.markForCheck();\n  }\n\n  get value() {\n    return this._value || NO_VALUE;\n  }\n  /**\n   * Configures the popup of the AutoComplete.\n   *\n   * The available options are:\n   * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n   * - `width: Number | String`&mdash;Sets the width of the popup container. By default, the width of the host element is used. If set to `auto`, the component automatically adjusts the width of the popup and no item labels are wrapped. The `auto` mode is not supported when virtual scrolling is enabled.\n   * - `height: Number`&mdash;Sets the height of the popup container.\n   * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n   * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n   */\n\n\n  set popupSettings(settings) {\n    this._popupSettings = Object.assign({\n      animate: true\n    }, settings);\n  }\n\n  get popupSettings() {\n    return this._popupSettings;\n  }\n  /**\n   * Defines a Boolean function that is executed for each data item in the component\n   * ([see examples]({% slug disableditems_autocomplete %})).\n   * Determines whether the item will be disabled.\n   */\n\n\n  set itemDisabled(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error(`itemDisabled must be a function, but received ${JSON.stringify(fn)}.`);\n    }\n\n    this.disabledItemsService.itemDisabled = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  set tabIndex(tabIndex) {\n    this.tabindex = tabIndex;\n  }\n\n  get tabIndex() {\n    return this.tabindex;\n  }\n  /**\n   * Enables the [virtualization]({% slug virtualization_autocomplete %}) functionality.\n   */\n\n\n  set virtual(settings) {\n    this._virtualSettings = normalizeVirtualizationSettings(settings);\n  }\n\n  get virtual() {\n    return this._virtualSettings;\n  }\n  /**\n   * Sets the size of the component.\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `none`\n   *\n   */\n\n\n  set size(size) {\n    const newSize = size ? size : DEFAULT_SIZE$5;\n    this.renderer.removeClass(this.wrapper, getSizeClass('input', this.size));\n\n    if (size !== 'none') {\n      this.renderer.addClass(this.wrapper, getSizeClass('input', newSize));\n    }\n\n    this._size = newSize;\n  }\n\n  get size() {\n    return this._size;\n  }\n  /**\n   * Sets the border radius of the component.\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `full`\n   * * `none`\n   *\n   */\n\n\n  set rounded(rounded) {\n    const newRounded = rounded ? rounded : DEFAULT_ROUNDED$5;\n    this.renderer.removeClass(this.wrapper, getRoundedClass(this.rounded));\n\n    if (rounded !== 'none') {\n      this.renderer.addClass(this.wrapper, getRoundedClass(newRounded));\n    }\n\n    this._rounded = newRounded;\n  }\n\n  get rounded() {\n    return this._rounded;\n  }\n  /**\n   * Sets the fillMode of the component.\n   *\n   * The possible values are:\n   * * `flat`\n   * * `solid` (default)\n   * * `outline`\n   * * `none`\n   *\n   */\n\n\n  set fillMode(fillMode) {\n    const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$5;\n    this.renderer.removeClass(this.wrapper, getFillModeClass('input', this.fillMode));\n\n    if (fillMode !== 'none') {\n      this.renderer.addClass(this.wrapper, getFillModeClass('input', newFillMode));\n    }\n\n    this._fillMode = newFillMode;\n  }\n\n  get fillMode() {\n    return this._fillMode;\n  }\n\n  get isFocused() {\n    return this._isFocused;\n  }\n\n  set isFocused(isFocused) {\n    this.renderer[isFocused ? 'addClass' : 'removeClass'](this.wrapper, \"k-focus\");\n    this._isFocused = isFocused;\n  }\n\n  get isDisabled() {\n    return this.disabled;\n  }\n\n  get isLoading() {\n    return this.loading;\n  }\n\n  get dir() {\n    return this.direction;\n  }\n\n  ngOnInit() {\n    this.renderer.removeAttribute(this.wrapper, \"tabindex\");\n    this.localizationChangeSubscription = this.localization.changes.subscribe(({\n      rtl\n    }) => {\n      this.direction = rtl ? 'rtl' : 'ltr';\n      this.cdr.detectChanges();\n    });\n    this.setComponentClasses();\n  }\n\n  ngOnDestroy() {\n    this.destroyPopup();\n    this.unsubscribeEvents();\n\n    if (this.localizationChangeSubscription) {\n      this.localizationChangeSubscription.unsubscribe();\n    }\n  }\n\n  ngOnChanges(changes) {\n    const virtual = this.virtual;\n    const requestInitialData = virtual && changes.data && changes.data.isFirstChange();\n\n    if (requestInitialData) {\n      this.pageChange({\n        skip: 0,\n        take: virtual.pageSize\n      });\n    }\n  }\n  /**\n   * Resets the value of the AutoComplete.\n   * If you use the `reset` method to clear the value of the component,\n   * the model will not update automatically and the `selectionChange` and `valueChange` events will not be fired.\n   */\n\n\n  reset() {\n    this.value = NO_VALUE;\n  }\n  /**\n   * @hidden\n   */\n\n\n  messageFor(key) {\n    return this.localization.get(key);\n  }\n  /**\n   * @hidden\n   */\n\n\n  clearValue(event) {\n    event.stopImmediatePropagation();\n    this.focus();\n    this.change(NO_VALUE);\n\n    if (this.filterable) {\n      this.filterChange.emit('');\n    }\n\n    this.selectionService.resetSelection([]);\n  }\n  /**\n   * @hidden\n   */\n\n\n  writeValue(value) {\n    this.value = value;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnChange(fn) {\n    this.onChangeCallback = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnTouched(fn) {\n    this.onTouchedCallback = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  /**\n   * Focuses a specific item of the AutoComplete based on a provided index.\n   * If null or invalid index is provided the focus will be removed.\n   */\n\n\n  focusItemAt(index) {\n    const isInRange = index >= 0 && index < this.data.length;\n\n    if (isPresent(index) && isInRange && !this.disabledItemsService.isIndexDisabled(index)) {\n      this.selectionService.focus(index);\n    } else {\n      this.selectionService.focus(-1);\n    }\n  }\n  /**\n   * Focuses the AutoComplete.\n   */\n\n\n  focus() {\n    if (!this.disabled) {\n      this.searchbar.focus();\n    }\n  }\n  /**\n   * Blurs the AutoComplete.\n   */\n\n\n  blur() {\n    if (!this.disabled) {\n      this.searchbar.blur();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  onResize() {\n    if (this._open) {\n      const popupWrapper = this.popupRef.popupElement;\n      const {\n        min,\n        max\n      } = this.width;\n      popupWrapper.style.minWidth = min;\n      popupWrapper.style.width = max;\n    }\n  }\n\n  emitChange(value) {\n    this.onChangeCallback(value);\n    this.valueChange.emit(value);\n  }\n\n  verifySettings(newValue) {\n    if (!isDevMode()) {\n      return;\n    }\n\n    if (isPresent(newValue) && typeof newValue !== \"string\") {\n      throw new Error(\"Expected value of type string. See https://www.telerik.com/kendo-angular-ui/components/dropdowns/autocomplete/value-binding/\");\n    }\n  }\n\n  search(text, startFrom = 0) {\n    let index;\n\n    if (text.length && this.dataService.itemsCount) {\n      index = this.dataService.findIndex(this.findIndexPredicate(text), startFrom);\n    } else {\n      index = -1;\n    }\n\n    if (this.disabledItemsService.isIndexDisabled(index)) {\n      if (index + 1 < this.dataService.itemsCount) {\n        this.search(text, index + 1);\n      } else {\n        this.selectionService.focus(-1);\n      }\n    } else {\n      this.selectionService.focus(index);\n\n      if (this.suggest) {\n        this.suggestedText = getter(this.dataService.itemAt(index), this.valueField);\n      }\n    }\n  }\n\n  navigate(index) {\n    if (!this.isOpen) {\n      return;\n    }\n\n    this.selectionService.focus(index);\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleNavigate(event) {\n    const focused = isNaN(this.selectionService.focused) ? this.firstFocusableIndex(0) : this.selectionService.focused;\n\n    if (this.disabled || this.readonly || isNaN(focused)) {\n      return;\n    }\n\n    const action = this.navigationService.process({\n      current: focused,\n      max: this.dataService.itemsCount - 1,\n      min: 0,\n      originalEvent: event\n    });\n\n    if (action !== NavigationAction.Undefined && action !== NavigationAction.Backspace && action !== NavigationAction.Delete && action !== NavigationAction.Home && action !== NavigationAction.End && action !== NavigationAction.Left && action !== NavigationAction.Right && action !== NavigationAction.PageDown && action !== NavigationAction.PageUp && (action === NavigationAction.Enter && this.isOpen || action !== NavigationAction.Enter)) {\n      event.preventDefault();\n    }\n  }\n\n  handleEnter(event) {\n    const focused = this.selectionService.focused;\n    let value;\n\n    if (this.isOpen) {\n      event.originalEvent.preventDefault();\n    }\n\n    if (focused >= 0) {\n      value = getter(this.dataService.itemAt(focused), this.valueField);\n    } else {\n      const match = this.suggest && this.suggestedText && this.data.length && getter(this.dataService.itemAt(0), this.valueField).toLowerCase() === this.searchbar.value.toLowerCase();\n\n      if (this.isOpen && match) {\n        value = this.suggestedText;\n      } else {\n        value = this.searchbar.value;\n      }\n    }\n\n    this.change(value);\n  }\n\n  handleEscape() {\n    if (this.isOpen) {\n      this.togglePopup(false);\n    } else {\n      this.value = '';\n    }\n\n    this.selectionService.focused = -1;\n    this.suggestedText = null;\n  }\n  /**\n   * @hidden\n   */\n\n\n  searchBarChange(text) {\n    const currentTextLength = isPresent(this.text) ? this.text.length : 0;\n    this.backspacePressed = text.length < currentTextLength ? true : false;\n    this.text = text;\n    this.togglePopup(text.length > 0);\n\n    if (!this.highlightFirst) {\n      this.selectionService.focused = -1;\n    }\n\n    if (this.filterable) {\n      this.filterChange.emit(text);\n    } else if (this.highlightFirst) {\n      this.search(text);\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleFocus() {\n    this.isFocused = true;\n\n    if (hasObservers(this.onFocus)) {\n      this._zone.run(() => {\n        this.onFocus.emit();\n      });\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleBlur() {\n    const focused = this.filterable ? this.selectionService.focused : -1;\n    this.searchbar.input.nativeElement.scrollLeft = 0; // Firefox doesn't auto-scroll to the left on blur like other browsers\n\n    let dataItem;\n    let text;\n\n    if (focused !== -1) {\n      dataItem = this.dataService.itemAt(focused);\n      text = getter(dataItem, this.valueField) || \"\";\n    } else {\n      text = this.searchbar.value;\n    }\n\n    const exactMatch = text === this.searchbar.value;\n    const insensitiveMatch = text.toLowerCase() === this.searchbar.value.toLowerCase();\n\n    if (!exactMatch && insensitiveMatch) {\n      this.selectionService.resetSelection([]);\n    }\n\n    this.isFocused = false;\n    const valueHasChanged = this.value !== this.text;\n    const runInZone = hasObservers(this.onBlur) || hasObservers(this.close) || isUntouched(this.wrapper) || valueHasChanged;\n\n    if (runInZone) {\n      this._zone.run(() => {\n        if (valueHasChanged) {\n          this.change(this.searchbar.value);\n        }\n\n        this.onBlur.emit();\n        this.onTouchedCallback();\n        this.togglePopup(false);\n      });\n    } else {\n      this.togglePopup(false);\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  pageChange(event) {\n    const virtual = this.virtual;\n    virtual.skip = event.skip;\n  }\n\n  change(value) {\n    this.togglePopup(false);\n    this.valueChangeSubject.next(value);\n  }\n\n  subscribeEvents() {\n    if (!isDocumentAvailable()) {\n      return;\n    }\n\n    this.valueChangeSubscription = this.valueChangeSubject.subscribe(value => {\n      const hasChange = this.value !== value;\n      this.value = value;\n      this.text = value; // emit change after assigning `this.value` => allows the user to modify the component value on `valueChange`\n\n      if (hasChange) {\n        this.emitChange(value);\n      }\n    });\n    this.changeSubscription = this.selectionService.onChange.subscribe(this.handleItemChange.bind(this));\n    this.focusSubscription = this.selectionService.onFocus.subscribe(this.handleItemFocus.bind(this));\n    this.navigationSubscription = merge(this.navigationService.up, this.navigationService.down).subscribe(event => this.navigate(event.index));\n    this.closeSubscription = this.navigationService.close.subscribe(() => this.togglePopup(false));\n    this.openSubscription = this.navigationService.open.subscribe(() => this.togglePopup(true));\n    this.enterSubscription = this.navigationService.enter.subscribe(this.handleEnter.bind(this));\n    this.escSubscription = this.navigationService.esc.subscribe(this.handleEscape.bind(this));\n    this.scrollSubscription = merge(this.navigationService.pagedown, this.navigationService.pageup).subscribe(event => {\n      if (this.isOpen) {\n        event.originalEvent.preventDefault();\n        this.optionsList.scrollWithOnePage(NavigationAction[event.originalEvent.code]);\n      }\n    });\n  }\n\n  subscribeTouchEvents() {\n    if (!isDocumentAvailable() || !this.touchEnabled) {\n      return;\n    }\n\n    this._zone.runOutsideAngular(() => // Roll up AutoComplete on iOS when tapped outside\n    this.touchstartDisposeHandler = this.renderer.listen(document, 'touchstart', e => {\n      const target = e.target;\n\n      if (this.isFocused && !inDropDown(this.hostElement, target, this.popupRef)) {\n        this._zone.run(() => this.blur());\n      }\n    }));\n  }\n\n  unsubscribeEvents() {\n    if (!isDocumentAvailable()) {\n      return;\n    }\n\n    this.changeSubscription.unsubscribe();\n    this.navigationSubscription.unsubscribe();\n    this.closeSubscription.unsubscribe();\n    this.openSubscription.unsubscribe();\n    this.enterSubscription.unsubscribe();\n    this.escSubscription.unsubscribe();\n    this.scrollSubscription.unsubscribe();\n    this.valueChangeSubscription.unsubscribe();\n    this.focusSubscription.unsubscribe();\n\n    if (this.touchstartDisposeHandler) {\n      this.touchstartDisposeHandler();\n    }\n  }\n\n  handleItemChange(event) {\n    const index = event.indices.length ? event.indices[0] : undefined;\n    this.selectionService.resetSelection([-1]);\n\n    if (!isPresent(index)) {\n      return;\n    }\n\n    let text = getter(this.dataService.itemAt(index), this.valueField);\n    this.change(text);\n  }\n\n  handleItemFocus(_event) {\n    const focused = this.selectionService.focused;\n    const shouldSuggest = Boolean(this.suggest && this.data && this.data.length && focused >= 0);\n\n    if (shouldSuggest) {\n      this.suggestedText = getter(this.dataService.itemAt(focused), this.valueField);\n    }\n  }\n\n  createPopup() {\n    if (this.virtual) {\n      this.virtual.skip = 0;\n    }\n\n    const horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n    const anchorPosition = {\n      horizontal: horizontalAlign,\n      vertical: \"bottom\"\n    };\n    const popupPosition = {\n      horizontal: horizontalAlign,\n      vertical: \"top\"\n    };\n    this.popupRef = this.popupService.open({\n      anchor: this.wrapper,\n      animate: this.popupSettings.animate,\n      appendTo: this.appendTo,\n      content: this.popupTemplate,\n      popupClass: this.listContainerClasses,\n      positionMode: 'absolute',\n      popupAlign: popupPosition,\n      anchorAlign: anchorPosition\n    });\n    const popupWrapper = this.popupRef.popupElement;\n    const {\n      min,\n      max\n    } = this.width;\n    popupWrapper.addEventListener('mousedown', this.popupMouseDownHandler);\n    popupWrapper.style.minWidth = min;\n    popupWrapper.style.width = max;\n    popupWrapper.style.height = this.height;\n    popupWrapper.setAttribute(\"dir\", this.direction);\n    const listBox = popupWrapper.querySelector('ul.k-list-ul');\n    const ariaLabel = this.searchbar.input.nativeElement.getAttribute('aria-labelledby');\n\n    if (ariaLabel) {\n      listBox.setAttribute('aria-labelledby', ariaLabel);\n    }\n\n    this.popupRef.popupOpen.subscribe(() => {\n      this.cdr.detectChanges();\n      this.optionsList.scrollToItem(this.selectionService.focused);\n      this.opened.emit();\n    });\n    this.popupRef.popupClose.subscribe(() => {\n      this.closed.emit();\n    });\n    this.popupRef.popupAnchorViewportLeave.subscribe(() => this.togglePopup(false));\n  }\n\n  destroyPopup() {\n    if (this.popupRef) {\n      this.popupRef.popupElement.removeEventListener('mousedown', this.popupMouseDownHandler);\n      this.popupRef.close();\n      this.popupRef = null;\n    }\n  }\n\n  _toggle(open) {\n    this._open = open;\n    this.destroyPopup();\n\n    if (this._open) {\n      this.createPopup();\n    }\n  }\n\n  triggerPopupEvents(open) {\n    const eventArgs = new PreventableEvent();\n\n    if (open) {\n      this.open.emit(eventArgs);\n    } else {\n      this.close.emit(eventArgs);\n    }\n\n    return eventArgs.isDefaultPrevented();\n  }\n\n  firstFocusableIndex(index) {\n    const maxIndex = this.data.length - 1;\n\n    if (this.disabledItemsService.isIndexDisabled(index)) {\n      return index < maxIndex ? this.firstFocusableIndex(index + 1) : undefined;\n    } else {\n      return index;\n    }\n  }\n\n  findIndexPredicate(text) {\n    if (this.dataService.grouped) {\n      return item => {\n        let itemText = getter(item.value, this.valueField);\n        itemText = !isPresent(itemText) ? \"\" : itemText.toString().toLowerCase();\n        return itemText.startsWith(text.toLowerCase());\n      };\n    } else {\n      return item => {\n        let itemText = getter(item, this.valueField);\n        itemText = !isPresent(itemText) ? \"\" : itemText.toString().toLowerCase();\n        return itemText.startsWith(text.toLowerCase());\n      };\n    }\n  }\n\n  setComponentClasses() {\n    if (this.size !== 'none') {\n      this.renderer.addClass(this.wrapper, getSizeClass('input', this.size));\n    }\n\n    if (this.rounded !== 'none') {\n      this.renderer.addClass(this.wrapper, getRoundedClass(this.rounded));\n    }\n\n    if (this.fillMode !== 'none') {\n      this.renderer.addClass(this.wrapper, getFillModeClass('input', this.fillMode));\n    }\n  }\n\n}\n\nAutoCompleteComponent.ɵfac = function AutoCompleteComponent_Factory(t) {\n  return new (t || AutoCompleteComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(DataService), i0.ɵɵdirectiveInject(i2.PopupService), i0.ɵɵdirectiveInject(SelectionService), i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(DisabledItemsService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(TOUCH_ENABLED, 8));\n};\n\nAutoCompleteComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AutoCompleteComponent,\n  selectors: [[\"kendo-autocomplete\"]],\n  contentQueries: function AutoCompleteComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ItemTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, HeaderTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, FooterTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, NoDataTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, GroupTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, FixedGroupTemplateDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.noDataTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.groupTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fixedGroupTemplate = _t.first);\n    }\n  },\n  viewQuery: function AutoCompleteComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c8, 7, ViewContainerRef);\n      i0.ɵɵviewQuery(_c9, 7);\n      i0.ɵɵviewQuery(SearchBarComponent, 7);\n      i0.ɵɵviewQuery(_c10, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.searchbar = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.optionsList = _t.first);\n    }\n  },\n  hostVars: 9,\n  hostBindings: function AutoCompleteComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx.dir);\n      i0.ɵɵclassProp(\"k-autocomplete\", ctx.widgetClasses)(\"k-input\", ctx.widgetClasses)(\"k-disabled\", ctx.isDisabled)(\"k-loading\", ctx.isLoading);\n    }\n  },\n  inputs: {\n    highlightFirst: \"highlightFirst\",\n    focusableId: \"focusableId\",\n    data: \"data\",\n    value: \"value\",\n    valueField: \"valueField\",\n    placeholder: \"placeholder\",\n    popupSettings: \"popupSettings\",\n    listHeight: \"listHeight\",\n    loading: \"loading\",\n    clearButton: \"clearButton\",\n    suggest: \"suggest\",\n    disabled: \"disabled\",\n    itemDisabled: \"itemDisabled\",\n    readonly: \"readonly\",\n    tabindex: \"tabindex\",\n    tabIndex: \"tabIndex\",\n    filterable: \"filterable\",\n    virtual: \"virtual\",\n    size: \"size\",\n    rounded: \"rounded\",\n    fillMode: \"fillMode\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    filterChange: \"filterChange\",\n    open: \"open\",\n    opened: \"opened\",\n    close: \"close\",\n    closed: \"closed\",\n    onFocus: \"focus\",\n    onBlur: \"blur\"\n  },\n  exportAs: [\"kendoAutoComplete\"],\n  features: [i0.ɵɵProvidersFeature([AUTOCOMPLETE_VALUE_ACCESSOR, DataService, SelectionService, NavigationService, DisabledItemsService, LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.autocomplete'\n  }, {\n    provide: FilterableComponent,\n    useExisting: forwardRef(() => AutoCompleteComponent)\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(() => AutoCompleteComponent)\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 10,\n  vars: 17,\n  consts: function () {\n    let i18n_11;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text displayed in the popup when there are no items\n       * @meaning kendo.autocomplete.noDataText\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_12 = goog.getMsg(\"NO DATA FOUND\");\n      i18n_11 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_12;\n    } else {\n      i18n_11 = $localize`:kendo.autocomplete.noDataText|The text displayed in the popup when there are no items:NO DATA FOUND`;\n    }\n\n    let i18n_13;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the clear button\n       * @meaning kendo.autocomplete.clearTitle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_14 = goog.getMsg(\"clear\");\n      i18n_13 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_14;\n    } else {\n      i18n_13 = $localize`:kendo.autocomplete.clearTitle|The title of the clear button:clear`;\n    }\n\n    return [[\"kendoAutoCompleteLocalizedMessages\", \"\", \"noDataText\", i18n_11, \"clearTitle\", i18n_13], [3, \"role\", \"isSuggestable\", \"isFilterable\", \"isLoading\", \"id\", \"listId\", \"activeDescendant\", \"userInput\", \"suggestedText\", \"disabled\", \"readonly\", \"tabIndex\", \"popupOpen\", \"placeholder\", \"onNavigate\", \"valueChange\", \"onBlur\", \"onFocus\"], [\"searchbar\", \"\"], [\"class\", \"k-clear-value\", \"role\", \"button\", \"tabindex\", \"-1\", 3, \"visibility\", \"click\", \"mousedown\", 4, \"ngIf\"], [\"class\", \"k-icon k-i-loading k-input-loading-icon\", 4, \"ngIf\"], [\"popupTemplate\", \"\"], [3, \"ngIf\"], [\"container\", \"\"], [\"role\", \"button\", \"tabindex\", \"-1\", 1, \"k-clear-value\", 3, \"click\", \"mousedown\"], [1, \"k-icon\", \"k-i-x\"], [1, \"k-icon\", \"k-i-loading\", \"k-input-loading-icon\"], [4, \"ngIf\"], [3, \"size\", \"rounded\", \"id\", \"optionPrefix\", \"data\", \"textField\", \"valueField\", \"template\", \"groupTemplate\", \"fixedGroupTemplate\", \"height\", \"show\", \"virtual\", \"pageChange\"], [\"optionsList\", \"\"], [\"class\", \"k-no-data\", 4, \"ngIf\"], [3, \"templateContext\"], [1, \"k-no-data\"], [3, \"ngIf\", \"templateContext\"], [3, \"resize\"]];\n  },\n  template: function AutoCompleteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵelementStart(1, \"kendo-searchbar\", 1, 2);\n      i0.ɵɵlistener(\"onNavigate\", function AutoCompleteComponent_Template_kendo_searchbar_onNavigate_1_listener($event) {\n        return ctx.handleNavigate($event);\n      })(\"valueChange\", function AutoCompleteComponent_Template_kendo_searchbar_valueChange_1_listener($event) {\n        return ctx.searchBarChange($event);\n      })(\"onBlur\", function AutoCompleteComponent_Template_kendo_searchbar_onBlur_1_listener() {\n        return ctx.handleBlur();\n      })(\"onFocus\", function AutoCompleteComponent_Template_kendo_searchbar_onFocus_1_listener() {\n        return ctx.handleFocus();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, AutoCompleteComponent_span_3_Template, 2, 3, \"span\", 3);\n      i0.ɵɵtemplate(4, AutoCompleteComponent_span_4_Template, 1, 0, \"span\", 4);\n      i0.ɵɵtemplate(5, AutoCompleteComponent_ng_template_5_Template, 5, 16, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(7, AutoCompleteComponent_ng_template_7_Template, 1, 0, \"ng-template\", 6);\n      i0.ɵɵelementContainer(8, null, 7);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"role\", \"combobox\")(\"isSuggestable\", ctx.suggest)(\"isFilterable\", ctx.filterable)(\"isLoading\", ctx.isLoading)(\"id\", ctx.focusableId)(\"listId\", ctx.listBoxId)(\"activeDescendant\", ctx.activeDescendant)(\"userInput\", ctx.text)(\"suggestedText\", ctx.suggestion)(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly)(\"tabIndex\", ctx.tabIndex)(\"popupOpen\", ctx.isOpen)(\"placeholder\", ctx.placeholder);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loading && !ctx.readonly && ctx.clearButton && (ctx.text == null ? null : ctx.text.length));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n    }\n  },\n  directives: [LocalizedMessagesDirective, SearchBarComponent, i11.NgIf, ListComponent, TemplateContextDirective, i9.ResizeSensorComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoCompleteComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoAutoComplete',\n      providers: [AUTOCOMPLETE_VALUE_ACCESSOR, DataService, SelectionService, NavigationService, DisabledItemsService, LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.autocomplete'\n      }, {\n        provide: FilterableComponent,\n        useExisting: forwardRef(() => AutoCompleteComponent)\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(() => AutoCompleteComponent)\n      }],\n      selector: 'kendo-autocomplete',\n      template: `\n        <ng-container kendoAutoCompleteLocalizedMessages\n            i18n-noDataText=\"kendo.autocomplete.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.autocomplete.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n        >\n        </ng-container>\n        <kendo-searchbar #searchbar\n            [role]=\"'combobox'\"\n            [isSuggestable]=\"suggest\"\n            [isFilterable]=\"filterable\"\n            [isLoading]=\"isLoading\"\n            [id]=\"focusableId\"\n            [listId]=\"listBoxId\"\n            [activeDescendant]=\"activeDescendant\"\n            [userInput]=\"text\"\n            [suggestedText]=\"suggestion\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [tabIndex]=\"tabIndex\"\n            [popupOpen]=\"isOpen\"\n            [placeholder]=\"placeholder\"\n            (onNavigate)=\"handleNavigate($event)\"\n            (valueChange)=\"searchBarChange($event)\"\n            (onBlur)=\"handleBlur()\"\n            (onFocus)=\"handleFocus()\"\n        ></kendo-searchbar>\n        <span\n            *ngIf=\"!loading && !readonly && (clearButton && text?.length)\"\n            class=\"k-clear-value\"\n            [style.visibility]=\"clearButtonVisiblity\"\n            [attr.title]=\"messageFor('clearTitle')\"\n            role=\"button\"\n            tabindex=\"-1\"\n            (click)=\"clearValue($event)\"\n            (mousedown)=\"$event.preventDefault()\"\n        >\n            <span class=\"k-icon k-i-x\"></span>\n        </span>\n        <span *ngIf=\"loading\" class=\"k-icon k-i-loading k-input-loading-icon\"></span>\n        <ng-template #popupTemplate>\n            <!--header template-->\n            <ng-template *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate.templateRef\n                }\">\n            </ng-template>\n            <!--list-->\n            <kendo-list\n                #optionsList\n                [size]=\"size\"\n                [rounded]=\"rounded\"\n                [id]=\"listBoxId\"\n                [optionPrefix]=\"optionPrefix\"\n                [data]=\"data\"\n                [textField]=\"valueField\"\n                [valueField]=\"valueField\"\n                [template]=\"template\"\n                [groupTemplate]=\"groupTemplate\"\n                [fixedGroupTemplate]=\"fixedGroupTemplate\"\n                [height]=\"listHeight\"\n                [show]=\"isOpen\"\n                [virtual]=\"virtual\"\n                (pageChange)=\"pageChange($event)\"\n            >\n            </kendo-list>\n            <!--no-data template-->\n            <div class=\"k-no-data\" *ngIf=\"data.length === 0\">\n                <ng-template [ngIf]=\"noDataTemplate\"\n                    [templateContext]=\"{\n                        templateRef: noDataTemplate?.templateRef\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!noDataTemplate\">\n                    <div>{{ messageFor('noDataText') }}</div>\n                </ng-template>\n            </div>\n            <!--footer template-->\n            <ng-template *ngIf=\"footerTemplate\"\n                [templateContext]=\"{\n                    templateRef: footerTemplate.templateRef\n                }\">\n            </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"isOpen\">\n            <kendo-resize-sensor (resize)=\"onResize()\"></kendo-resize-sensor>\n        </ng-template>\n        <ng-container #container></ng-container>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: DataService\n    }, {\n      type: i2.PopupService\n    }, {\n      type: SelectionService\n    }, {\n      type: NavigationService\n    }, {\n      type: DisabledItemsService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TOUCH_ENABLED]\n      }]\n    }];\n  }, {\n    highlightFirst: [{\n      type: Input\n    }],\n    focusableId: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    valueField: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    popupSettings: [{\n      type: Input\n    }],\n    listHeight: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    clearButton: [{\n      type: Input\n    }],\n    suggest: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    itemDisabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [\"tabIndex\"]\n    }],\n    filterable: [{\n      type: Input\n    }],\n    virtual: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    fillMode: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    filterChange: [{\n      type: Output\n    }],\n    open: [{\n      type: Output\n    }],\n    opened: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    closed: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    template: [{\n      type: ContentChild,\n      args: [ItemTemplateDirective, {\n        static: false\n      }]\n    }],\n    headerTemplate: [{\n      type: ContentChild,\n      args: [HeaderTemplateDirective, {\n        static: false\n      }]\n    }],\n    footerTemplate: [{\n      type: ContentChild,\n      args: [FooterTemplateDirective, {\n        static: false\n      }]\n    }],\n    noDataTemplate: [{\n      type: ContentChild,\n      args: [NoDataTemplateDirective, {\n        static: false\n      }]\n    }],\n    groupTemplate: [{\n      type: ContentChild,\n      args: [GroupTemplateDirective, {\n        static: false\n      }]\n    }],\n    fixedGroupTemplate: [{\n      type: ContentChild,\n      args: [FixedGroupTemplateDirective, {\n        static: false\n      }]\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }],\n    popupTemplate: [{\n      type: ViewChild,\n      args: ['popupTemplate', {\n        static: true\n      }]\n    }],\n    searchbar: [{\n      type: ViewChild,\n      args: [SearchBarComponent, {\n        static: true\n      }]\n    }],\n    optionsList: [{\n      type: ViewChild,\n      args: ['optionsList', {\n        static: false\n      }]\n    }],\n    widgetClasses: [{\n      type: HostBinding,\n      args: ['class.k-autocomplete']\n    }, {\n      type: HostBinding,\n      args: ['class.k-input']\n    }],\n    isDisabled: [{\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }],\n    isLoading: [{\n      type: HostBinding,\n      args: ['class.k-loading']\n    }],\n    dir: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nconst MultiselectMessages = {\n  'array': 'Expected values of array type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselect/#value-selection',\n  'object': 'Expected values of Object type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselect/#value-selection',\n  'primitive': 'Expected values of primitive type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselect/#value-selection',\n  'textAndValue': 'Expected textField and valueField options to be set. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselect/#toc-bind-to-arrays-of-complex-data'\n};\n/**\n * @hidden\n */\n\nconst MultiSelectTreeMessages = {\n  'array': 'Expected values of array type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselecttree/#value-selection',\n  'primitive': 'Expected values of primitive type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselecttree/value-binding/#toc-primitive-values',\n  'object': 'Expected values of type Object. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselecttree/value-binding/#toc-object-values',\n  'dataItems': 'Expected dataItems of type Object[] to be set. See https://www.telerik.com/kendo-angular-ui/components/dropdowns/api/MultiSelectTreeComponent/#toc-dataitems',\n  'dataItemsLength': 'Expected dataItems length to match the number of provided values. See https://www.telerik.com/kendo-angular-ui/components/dropdowns/api/MultiSelectTreeComponent/#toc-dataitems',\n  'textAndValue': 'Expected textField and valueField options to be set. See https://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselecttree/value-binding',\n  'valueDepth': 'Expected valueDepth of type number[] to be set. See https://www.telerik.com/kendo-angular-ui-develop/components/dropdowns/api/MultiSelectTreeComponent/#toc-valuedepth',\n  'valueDepthLength': 'Expected valueDepth length to match the number of provided values. See https://www.telerik.com/kendo-angular-ui-develop/components/dropdowns/api/MultiSelectTreeComponent/#toc-valuedepth'\n};\n/**\n * @hidden\n */\n\nconst ComboBoxMessages = {\n  'object': 'Expected value of type Object. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/combobox/#toc-value-selection',\n  'primitive': 'Expected value of primitive type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/combobox/#toc-value-selection',\n  'textAndValue': 'Expected textField and valueField options to be set. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/combobox/#toc-bind-to-arrays-of-complex-data',\n  'noItemHeight': 'Expected virtual.itemHeight of type number.'\n};\n/**\n * @hidden\n */\n\nconst MultiColumnComboBoxMessages = {\n  'data': 'Provided data must consist only of objects. See https://www.telerik.com/kendo-angular-ui/components/dropdowns/multicolumncombobox/data-binding/',\n  'textAndValue': 'Expected textField and valueField options to be set. See https://www.telerik.com/kendo-angular-ui/components/dropdowns/multicolumncombobox/data-binding/#toc-fields-configuration'\n};\n/**\n * @hidden\n */\n\nconst DropDownListMessages = {\n  'defaultItem': 'defaultItem and data items must be of same type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/api/DropDownListComponent/#toc-defaultitem',\n  'object': 'Expected value of type Object. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/dropdownlist/#toc-value-selection',\n  'primitive': 'Expected value of primitive type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/dropdownlist/#toc-value-selection',\n  'textAndValue': 'Expected textField and valueField options to be set. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/dropdownlist/#toc-bind-to-arrays-of-complex-data'\n};\n/**\n * @hidden\n */\n\nconst DropDownTreeMessages = {\n  'primitive': 'Expected value of primitive type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/dropdowntree/value-binding/#toc-primitive-values',\n  'object': 'Expected value of type Object. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/dropdowntree/value-binding/#toc-object-values',\n  'dataItem': 'Expected dataItem of type Object to be set. See https://www.telerik.com/kendo-angular-ui/components/dropdowns/api/DropDownTreeComponent/#toc-dataitem',\n  'textAndValue': 'Expected textField and valueField options to be set. See https://www.telerik.com/kendo-angular-ui/components/dropdowns/dropdowntree/value-binding',\n  'valueDepth': 'Expected valueDepth to be set. See https://www.telerik.com/kendo-angular-ui-develop/components/dropdowns/api/DropDownTreeComponent/#toc-valuedepth'\n};\n/**\n * @hidden\n */\n\nconst COMBOBOX_VALUE_ACCESSOR = {\n  multi: true,\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ComboBoxComponent)\n};\nconst DEFAULT_SIZE$4 = 'medium';\nconst DEFAULT_ROUNDED$4 = 'medium';\nconst DEFAULT_FILL_MODE$4 = 'solid';\n/**\n * Represents the [Kendo UI ComboBox component for Angular]({% slug overview_combobox %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\n\nclass ComboBoxComponent {\n  constructor(wrapper, localization, popupService, selectionService, navigationService, disabledItemsService, dataService, zone, cdr, renderer, touchEnabled) {\n    this.wrapper = wrapper;\n    this.localization = localization;\n    this.popupService = popupService;\n    this.selectionService = selectionService;\n    this.navigationService = navigationService;\n    this.disabledItemsService = disabledItemsService;\n    this.dataService = dataService;\n    this.zone = zone;\n    this.cdr = cdr;\n    this.renderer = renderer;\n    this.touchEnabled = touchEnabled;\n    this.selected = [];\n    /**\n     * @hidden\n     */\n\n    this.focusableId = `k-${guid()}`;\n    /**\n     * Specifies whether the ComboBox allows user-defined values that are not present in the dataset\n     * ([more information and examples]({% slug custom_values_combobox %})).\n     * Defaults to `false`.\n     */\n\n    this.allowCustom = false;\n    /**\n     * A user-defined callback which returns normalized custom values.\n     * Typically used when the data items are different from type `string`.\n     * @param { Any } value - The custom value defined by the user.\n     * @returns { Any }\n     *\n     * @example\n     * ```ts\n     * import { map } from 'rxjs/operators';\n     *\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *   <kendo-combobox\n     *       [allowCustom]=\"true\"\n     *       [data]=\"listItems\"\n     *       textField=\"text\"\n     *       valueField=\"value\"\n     *       [valueNormalizer]=\"valueNormalizer\"\n     *       (valueChange)=\"onValueChange($event)\"\n     *   >\n     *   </kendo-combobox>\n     * `\n     * })\n     *\n     * class AppComponent {\n     *   public listItems: Array<{ text: string, value: number }> = [\n     *       { text: \"Small\", value: 1 },\n     *       { text: \"Medium\", value: 2 },\n     *       { text: \"Large\", value: 3 }\n     *   ];\n     *\n     *   public onValueChange(value) {\n     *       console.log(\"valueChange : \", value);\n     *   }\n     *\n     *   public valueNormalizer = (text$: Observable<string>) => text$.pipe(map((text: string) => {\n     *      return { ProductID: null, ProductName: text };\n     *   }));\n     *\n     * }\n     * ```\n     */\n\n    this.valueNormalizer = text => text.pipe(map(userInput => userInput));\n    /**\n     * The hint that is displayed when the component is empty.\n     *\n     */\n\n\n    this.placeholder = \"\";\n    /**\n     * Sets the height of the suggestions list. By default, `listHeight` is 200px.\n     *\n     * > The `listHeight` property affects only the list of suggestions and not the whole popup container.\n     * > To set the height of the popup container, use `popupSettings.height`.\n     */\n\n    this.listHeight = 200;\n    /**\n     * Enables the auto-completion of the text based on the first data item.\n     */\n\n    this.suggest = false;\n    /**\n     * If set to `true`, renders a button on hovering over the component.\n     * Clicking this button resets the value of the component to `undefined` and triggers the `change` event.\n     */\n\n    this.clearButton = true;\n    /**\n     * Sets the disabled state of the component.\n     */\n\n    this.disabled = false;\n    /**\n     * Sets the read-only state of the component.\n     */\n\n    this.readonly = false;\n    /**\n     * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n\n    this.tabindex = 0;\n    /**\n     * Enables the [filtering]({% slug filtering_combobox %}) functionality.\n     * If set to `true`, the component emits the `filterChange` event.\n     */\n\n    this.filterable = false;\n    /**\n     * Fires each time the value is changed&mdash;\n     * when the component is blurred or the value is cleared through the **Clear** button\n     * ([see example]({% slug overview_combobox %}#toc-events)).\n     * When the value of the component is programmatically changed to `ngModel` or `formControl`\n     * through its API or form binding, the `valueChange` event is not triggered because it\n     * might cause a mix-up with the built-in `valueChange` mechanisms of the `ngModel` or `formControl` bindings.\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires each time an item selection is changed\n     * ([see example]({% slug overview_combobox %}#toc-events)).\n     */\n\n    this.selectionChange = new EventEmitter();\n    /**\n     * Fires each time the user types in the input field.\n     * You can filter the source based on the passed filtration value\n     * ([see example]({% slug overview_combobox %}#toc-events)).\n     */\n\n    this.filterChange = new EventEmitter();\n    /**\n     * Fires each time the popup is about to open.\n     * This event is preventable. If you cancel it, the popup will remain closed.\n     */\n\n    this.open = new EventEmitter();\n    /**\n     * Fires after the popup has been opened.\n     */\n\n    this.opened = new EventEmitter();\n    /**\n     * Fires each time the popup is about to close.\n     * This event is preventable. If you cancel it, the popup will remain open.\n     */\n\n    this.close = new EventEmitter();\n    /**\n     * Fires after the popup has been closed.\n     */\n\n    this.closed = new EventEmitter();\n    /**\n     * Fires each time the user focuses the ComboBox.\n     */\n\n    this.onFocus = new EventEmitter();\n    /**\n     * Fires each time the ComboBox gets blurred.\n     */\n\n    this.onBlur = new EventEmitter();\n    this.widgetClasses = true;\n    this._isFocused = false;\n    this.listBoxId = guid();\n    this.optionPrefix = guid();\n\n    this.onChangeCallback = _ => {};\n\n    this.onTouchedCallback = _ => {};\n    /**\n     * Used for the default virtualization settings config.\n     */\n\n\n    this.defaultVirtualItemHeight = 28;\n    /**\n     * Used for the default virtualization settings config.\n     */\n\n    this.defaultVirtualPageSize = 50;\n    this._filtering = false;\n    this._text = '';\n    this.filterText = '';\n    this._open = false;\n    this._popupSettings = {\n      animate: true\n    };\n\n    this.popupMouseDownHandler = event => event.preventDefault();\n\n    this.customValueSubject = new Subject();\n    this.valueSubject = new Subject();\n    this.clearValueSubject = new Subject();\n    this.subs = new Subscription();\n    this._size = 'medium';\n    this._rounded = 'medium';\n    this._fillMode = 'solid';\n    validatePackage(packageMetadata);\n    this.direction = localization.rtl ? 'rtl' : 'ltr';\n    this.data = [];\n  }\n\n  set text(text) {\n    this._text = isPresent(text) ? text.toString() : \"\";\n  }\n\n  get text() {\n    return this._text;\n  }\n  /**\n   * @hidden\n   */\n\n\n  togglePopup(open) {\n    const isDisabled = this.disabled || this.readonly;\n    const sameState = this.isOpen === open;\n\n    if (isDisabled || sameState) {\n      return;\n    }\n\n    const isDefaultPrevented = this.triggerPopupEvents(open);\n\n    if (!isDefaultPrevented) {\n      this._toggle(open);\n    }\n  }\n\n  get activeDescendant() {\n    if (!this.isOpen || !isPresent(this.selectionService.focused) || this.selectionService.focused === -1) {\n      return null;\n    }\n\n    const dataItem = this.dataService.itemAt(this.selectionService.focused);\n    return this.optionPrefix + \"-\" + (dataItem ? getter(dataItem, this.valueField) : \"\");\n  }\n\n  get appendTo() {\n    const {\n      appendTo\n    } = this.popupSettings;\n\n    if (!appendTo || appendTo === 'root') {\n      return undefined;\n    }\n\n    return appendTo === 'component' ? this.container : appendTo;\n  }\n  /**\n   * Sets the data of the ComboBox.\n   *\n   * > The data has to be provided in an array-like list.\n   */\n\n\n  set data(data) {\n    this.dataService.data = data || [];\n\n    if (this.virtual) {\n      this.virtual.skip = 0;\n    }\n\n    this.setState();\n\n    if (this._filtering) {\n      const queryAndDataPresent = this.text.length > 0 && this.dataService.itemsCount > 0;\n      const index = queryAndDataPresent ? this.firstFocusableIndex(0) : -1;\n      this.selectionService.focused = index;\n    }\n\n    if (this.suggest && this.dataService.itemsCount && this.text) {\n      this.suggestedText = getter(this.dataService.itemAt(0), this.textField);\n    }\n  }\n\n  get data() {\n    const virtual = this.virtual;\n\n    if (virtual) {\n      const start = virtual.skip || 0;\n      const end = start + virtual.pageSize; // Use length instead of itemsCount because of the grouping.\n\n      virtual.total = this.dataService.data.length;\n      return this.dataService.data.slice(start, end);\n    }\n\n    return this.dataService.data;\n  }\n  /**\n   * Sets the value of the ComboBox.\n   * It can either be of the primitive (string, numbers) or of the complex (objects) type.\n   * To define the type, use the `valuePrimitive` option.\n   *\n   * > All selected values which are not present in the dataset are considered custom values.\n   * > When the `Enter` key is pressed or the component loses focus, custom values get dismissed unless `allowCustom` is set to `true`.\n   */\n\n\n  set value(newValue) {\n    this._value = newValue;\n    this.setState();\n    this.cdr.markForCheck();\n  }\n\n  get value() {\n    return this._value;\n  }\n  /**\n   * Specifies the type of the selected value.\n   * If set to `true`, the selected value has to be of the primitive type\n   * ([more information and example]({% slug valuebinding_combobox %}#toc-primitive-values-from-object-fields)).\n   */\n\n\n  set valuePrimitive(isPrimitive) {\n    this._valuePrimitive = isPrimitive;\n  }\n\n  get valuePrimitive() {\n    if (!isPresent(this._valuePrimitive)) {\n      return !isPresent(this.valueField);\n    }\n\n    return this._valuePrimitive;\n  }\n  /**\n   * Configures the popup of the ComboBox.\n   *\n   * The available options are:\n   * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n   * - `width: Number | String`&mdash;Sets the width of the popup container. By default, the width of the host element is used. If set to `auto`, the component automatically adjusts the width of the popup and no item labels are wrapped. The `auto` mode is not supported when virtual scrolling is enabled.\n   * - `height: Number`&mdash;Sets the height of the popup container.\n   * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n   * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n   */\n\n\n  set popupSettings(settings) {\n    this._popupSettings = Object.assign({\n      animate: true\n    }, settings);\n  }\n\n  get popupSettings() {\n    return this._popupSettings;\n  }\n  /**\n   * Defines a Boolean function that is executed for each data item in the component\n   * ([see examples]({% slug disableditems_combobox %})). Determines whether the item will be disabled.\n   */\n\n\n  set itemDisabled(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error(`itemDisabled must be a function, but received ${JSON.stringify(fn)}.`);\n    }\n\n    this.disabledItemsService.itemDisabled = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  set tabIndex(tabIndex) {\n    this.tabindex = tabIndex;\n  }\n\n  get tabIndex() {\n    return this.tabindex;\n  }\n  /**\n   * Enables the [virtualization]({% slug virtualization_combobox %}) functionality.\n   */\n\n\n  set virtual(settings) {\n    this._virtualSettings = normalizeVirtualizationSettings(settings, {\n      itemHeight: this.defaultVirtualItemHeight,\n      pageSize: this.defaultVirtualPageSize\n    });\n  }\n\n  get virtual() {\n    return this._virtualSettings;\n  }\n  /**\n   * Sets the size of the component.\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `none`\n   *\n   */\n\n\n  set size(size) {\n    const newSize = size ? size : DEFAULT_SIZE$4;\n    this.renderer.removeClass(this.wrapper.nativeElement, getSizeClass('input', this.size));\n\n    if (size !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('input', newSize));\n    }\n\n    this._size = newSize;\n  }\n\n  get size() {\n    return this._size;\n  }\n  /**\n   * Sets the border radius of the component.\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `full`\n   * * `none`\n   *\n   */\n\n\n  set rounded(rounded) {\n    const newRounded = rounded ? rounded : DEFAULT_ROUNDED$4;\n    this.renderer.removeClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n\n    if (rounded !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(newRounded));\n    }\n\n    this._rounded = newRounded;\n  }\n\n  get rounded() {\n    return this._rounded;\n  }\n  /**\n   * Sets the fillMode of the component.\n   *\n   * The possible values are:\n   * * `flat`\n   * * `solid` (default)\n   * * `outline`\n   * * `none`\n   *\n   */\n\n\n  set fillMode(fillMode) {\n    const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$4;\n    this.renderer.removeClass(this.wrapper.nativeElement, getFillModeClass('input', this.fillMode));\n\n    if (fillMode !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('input', newFillMode));\n    }\n\n    this._fillMode = newFillMode;\n  }\n\n  get fillMode() {\n    return this._fillMode;\n  }\n\n  get isDisabled() {\n    return this.disabled;\n  }\n\n  get isLoading() {\n    return this.loading;\n  }\n\n  get dir() {\n    return this.direction;\n  }\n\n  get isFocused() {\n    return this._isFocused;\n  }\n\n  set isFocused(value) {\n    this.renderer[value ? 'addClass' : 'removeClass'](this.wrapper.nativeElement, \"k-focus\");\n    this._isFocused = value;\n  }\n\n  get clearButtonVisiblity() {\n    if (this.touchEnabled) {\n      return 'visible';\n    }\n  }\n\n  get popupWidth() {\n    let wrapperOffsetWidth = 0;\n\n    if (isDocumentAvailable()) {\n      wrapperOffsetWidth = this.wrapper.nativeElement.offsetWidth;\n    }\n\n    const width = this.popupSettings.width || wrapperOffsetWidth;\n    const minWidth = isNaN(wrapperOffsetWidth) ? wrapperOffsetWidth : `${wrapperOffsetWidth}px`;\n    const maxWidth = isNaN(width) ? width : `${width}px`;\n    return {\n      min: minWidth,\n      max: maxWidth\n    };\n  }\n\n  get popupHeight() {\n    const popupHeight = this.popupSettings.height;\n    return isPresent(popupHeight) ? `${popupHeight}px` : 'auto';\n  }\n\n  ngOnInit() {\n    this.renderer.removeAttribute(this.wrapper.nativeElement, 'tabindex');\n    this.attachStreams();\n    this.createValueStream();\n    this.subscribeTouchEvents();\n    this.attachSelectClickHandler();\n    this.setComponentClasses();\n  }\n\n  createValueStream() {\n    const valueStream = this.valueSubject.pipe(filter(candidate => {\n      const current = getter(this.value, this.valueField);\n      const newValue = getter(candidate, this.valueField);\n      let newText = getter(candidate, this.textField);\n\n      if (!isPresent(this.value) && !isPresent(newValue)) {\n        return false;\n      }\n\n      if (isPresent(newText)) {\n        newText = newText.toString();\n      }\n\n      if (current === newValue && this.text === newText) {\n        this.clearFilter();\n        return false;\n      } else {\n        return true;\n      }\n    }), map(candidate => {\n      const newValue = getter(candidate, this.valueField);\n      const newText = getter(candidate, this.textField);\n      return {\n        dataItem: candidate,\n        text: newText,\n        value: this.valuePrimitive ? newValue : candidate\n      };\n    }));\n    const customValueStreams = partition(() => this.allowCustom)(this.customValueSubject.pipe(throttleTime(300)));\n    const allowCustomValueStream = customValueStreams[0].pipe(tap(() => {\n      this.loading = true;\n      this.disabled = true;\n      this.cdr.detectChanges();\n    }), filter(() => {\n      const hasChange = this.text !== getter(this.value, this.valueField);\n      this.loading = hasChange;\n      this.disabled = hasChange;\n\n      if (!hasChange) {\n        this.clearFilter();\n      }\n\n      return hasChange;\n    }), this.valueNormalizer, map(normalizedValue => {\n      return {\n        custom: true,\n        dataItem: normalizedValue,\n        text: this.text,\n        value: normalizedValue\n      };\n    }));\n    const disableCustomValueStream = customValueStreams[1].pipe(map(() => {\n      return {\n        custom: true,\n        dataItem: undefined,\n        text: undefined,\n        value: undefined\n      };\n    }));\n    const clearValueStream = this.clearValueSubject.pipe(map(() => ({\n      dataItem: undefined,\n      text: undefined,\n      value: undefined\n    })));\n\n    if (this.valueSubscription) {\n      this.valueSubscription.unsubscribe();\n    }\n\n    const merged = merge(valueStream, allowCustomValueStream, disableCustomValueStream, clearValueStream);\n    this.valueSubscription = merged.pipe(catchError(() => {\n      const selectionChanged = getter(this.dataItem, this.valueField) !== undefined;\n      this.dataItem = undefined;\n      this.value = undefined;\n      this.text = undefined;\n      this.loading = false;\n      this.disabled = false;\n\n      if (selectionChanged) {\n        this.selectionChange.emit(undefined);\n      }\n\n      this.emitValueChange();\n      this.createValueStream();\n      return of(null);\n    })).subscribe(state => {\n      const selectionChanged = getter(this.dataItem, this.valueField) !== getter(state.dataItem, this.valueField);\n      this.dataItem = state.dataItem;\n      this.value = state.value;\n      this.text = state.text;\n      this.loading = false;\n      this.disabled = false;\n      this.clearFilter();\n\n      if (state.custom) {\n        this.selectionService.focused = -1;\n      }\n\n      if (selectionChanged) {\n        const selectionArgs = state.custom ? undefined : this.dataItem;\n        this.selectionChange.emit(selectionArgs);\n      }\n\n      this.emitValueChange();\n    });\n  }\n\n  attachStreams() {\n    if (!isDocumentAvailable()) {\n      return;\n    }\n\n    this.subs.add(this.localization.changes.subscribe(({\n      rtl\n    }) => {\n      this.direction = rtl ? 'rtl' : 'ltr';\n      this.cdr.detectChanges();\n    }));\n    this.subs.add(merge(this.navigationService.up, this.navigationService.down, this.navigationService.home, this.navigationService.end).pipe(filter(event => isPresent(event.index))).subscribe(event => this.navigate(event.index)));\n    this.subs.add(this.navigationService.open.subscribe(this.handleNavigationOpen.bind(this)));\n    this.subs.add(this.navigationService.close.subscribe(() => this.togglePopup(false)));\n    this.subs.add(merge(this.navigationService.pagedown, this.navigationService.pageup).subscribe(event => {\n      if (this.isOpen) {\n        event.originalEvent.preventDefault();\n        this.optionsList.scrollWithOnePage(NavigationAction[event.originalEvent.code]);\n      }\n    }));\n    this.subs.add(this.navigationService.esc.subscribe(this.handleEscape.bind(this)));\n    this.subs.add(this.navigationService.enter.pipe(tap(event => {\n      if (this.isOpen) {\n        event.originalEvent.preventDefault();\n      }\n    })).subscribe(this.handleEnter.bind(this)));\n    this.subs.add(merge(this.selectionService.onChange, this.selectionService.onSelect.pipe(filter(_ => !this.isOpen))).pipe(tap(_ => {\n      this._filtering = false;\n      this.togglePopup(false);\n    }), map(event => this.dataService.itemAt(event.indices[0]))).subscribe(dataItem => {\n      this.change(dataItem);\n    }));\n    this.subs.add(this.selectionService.onSelect.pipe(filter(_ => this.isOpen), tap(_ => this._filtering = false), map(event => this.dataService.itemAt(event.indices[0]))).subscribe(dataItem => {\n      const selectionChanged = getter(dataItem, this.valueField) !== getter(this.dataItem, this.valueField);\n      this.updateState({\n        dataItem\n      });\n\n      if (selectionChanged) {\n        this.selectionChange.emit(dataItem);\n      }\n    }));\n  }\n\n  ngOnDestroy() {\n    this.destroyPopup();\n    this.subs.unsubscribe();\n\n    if (isPresent(this.valueSubscription)) {\n      this.valueSubscription.unsubscribe();\n    }\n\n    if (this.touchstartDisposeHandler) {\n      this.touchstartDisposeHandler();\n    }\n\n    if (this.selectClickDisposeHandler) {\n      this.selectClickDisposeHandler();\n    }\n  }\n\n  ngOnChanges(changes) {\n    const virtual = this.virtual;\n    const requestInitialData = virtual && changes.data && changes.data.isFirstChange();\n\n    if (requestInitialData) {\n      this.pageChange({\n        skip: 0,\n        take: virtual.pageSize\n      });\n    }\n\n    if (isChanged('valueNormalizer', changes)) {\n      this.createValueStream();\n    }\n\n    if (anyChanged(['textField', 'valueField', 'valuePrimitive'], changes, false)) {\n      this.setState();\n    }\n  }\n\n  ngAfterContentChecked() {\n    this.verifySettings();\n  }\n  /**\n   * Focuses a specific item of the ComboBox based on a provided index.\n   * If null or invalid index is provided the focus will be removed.\n   */\n\n\n  focusItemAt(index) {\n    const isInRange = index >= 0 && index < this.data.length;\n\n    if (isPresent(index) && isInRange && !this.disabledItemsService.isIndexDisabled(index)) {\n      this.selectionService.focus(index);\n    } else {\n      this.selectionService.focus(-1);\n    }\n  }\n  /**\n   * Focuses the ComboBox.\n   */\n\n\n  focus() {\n    if (!this.disabled) {\n      this.searchbar.focus();\n    }\n  }\n  /**\n   * Blurs the ComboBox.\n   */\n\n\n  blur() {\n    if (!this.disabled) {\n      this.searchbar.blur();\n    }\n  }\n  /**\n   * Toggles the visibility of the popup. If you use the `toggle` method to open or close the popup,\n   * the `open` and `close` events will not be fired.\n   *\n   * @param open - The state of the popup.\n   */\n\n\n  toggle(open) {\n    Promise.resolve(null).then(() => {\n      const shouldOpen = isPresent(open) ? open : !this._open;\n\n      this._toggle(shouldOpen);\n\n      this.cdr.markForCheck();\n    });\n  }\n  /**\n   * Returns the current open state of the popup.\n   */\n\n\n  get isOpen() {\n    return this._open;\n  }\n  /**\n   * Resets the value of the ComboBox.\n   * If you use the `reset` method to clear the value of the component,\n   * the model will not update automatically and the `selectionChange` and `valueChange` events will not be fired.\n   */\n\n\n  reset() {\n    this.value = undefined;\n    this.clearState();\n    this.resetSelection();\n  }\n  /**\n   * @hidden\n   *\n   * Used by the TextBoxContainer to determine if the floating label\n   * should be rendered in the input when the component is not focused.\n   */\n\n\n  isEmpty() {\n    const textEmpty = !isPresent(this.text) || isEmptyString(this.text);\n    const valueEmpty = !isPresent(this.value) || isEmptyString(this.value);\n    return textEmpty && valueEmpty;\n  }\n  /**\n   * @hidden\n   */\n\n\n  messageFor(key) {\n    return this.localization.get(key);\n  }\n  /**\n   * @hidden\n   */\n\n\n  clearValue(event) {\n    event === null || event === void 0 ? void 0 : event.stopImmediatePropagation();\n\n    if (event) {\n      this.focus();\n    }\n\n    this._previousDataItem = undefined;\n    this.selectionService.resetSelection([]);\n    this.clearValueSubject.next();\n    this._filtering = false;\n  }\n  /**\n   * @hidden\n   */\n\n\n  writeValue(value) {\n    this.value = value === null ? undefined : value;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnChange(fn) {\n    this.onChangeCallback = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnTouched(fn) {\n    this.onTouchedCallback = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get buttonClasses() {\n    return this.loading ? 'k-i-loading k-input-loading-icon' : this.iconClass || 'k-i-caret-alt-down';\n  }\n  /**\n   * @hidden\n   */\n\n\n  get selectButtonClasses() {\n    return `${this.size ? getSizeClass('button', this.size) : ''} ${this.fillMode ? 'k-button-' + this.fillMode : ''} ${this.fillMode ? 'k-button-' + this.fillMode + '-base' : ''}\n        `;\n  }\n  /**\n   * @hidden\n   */\n\n\n  onResize() {\n    if (this.isOpen) {\n      const popupWrapper = this.popupRef.popupElement;\n      const {\n        min,\n        max\n      } = this.popupWidth;\n      popupWrapper.style.minWidth = min;\n      popupWrapper.style.width = max;\n    }\n  }\n\n  verifySettings() {\n    if (!isDevMode()) {\n      return;\n    }\n\n    if (this.valuePrimitive === true && isPresent(this.value) && typeof this.value === \"object\") {\n      throw new Error(ComboBoxMessages.primitive);\n    }\n\n    if (this.valuePrimitive === false && isPresent(this.value) && typeof this.value !== \"object\") {\n      throw new Error(ComboBoxMessages.object);\n    }\n\n    const valueOrText = !isPresent(this.valueField) !== !isPresent(this.textField);\n\n    if (valueOrText) {\n      throw new Error(ComboBoxMessages.textAndValue);\n    }\n\n    if (this.virtual && isNaN(this.virtual.itemHeight)) {\n      throw new Error(ComboBoxMessages.noItemHeight);\n    }\n  }\n\n  setState() {\n    // Filtering in process, do nothing.\n    if (this._filtering) {\n      return;\n    }\n\n    const value = this.value;\n    const valueField = this.valueField;\n    const resolved = this.findDataItem({\n      valueField,\n      value\n    });\n\n    if (isPresent(resolved.index) && resolved.index !== -1) {\n      this.updateState({\n        dataItem: resolved.dataItem,\n        confirm: true\n      });\n      this.resetSelection(resolved.index);\n    } else if (isPresent(value) && this.allowCustom) {\n      this.updateState({\n        dataItem: value\n      });\n      this.resetSelection(-1);\n    } else if (this._previousDataItem && this.value) {\n      this.updateState({\n        dataItem: this._previousDataItem\n      });\n      this.resetSelection();\n    } else {\n      this.clearState();\n      this.resetSelection(-1);\n    }\n  }\n\n  updateState({\n    dataItem,\n    confirm = false\n  }) {\n    this.dataItem = dataItem;\n    this.text = getter(dataItem, this.textField);\n\n    if (confirm) {\n      this._previousDataItem = dataItem;\n    }\n  }\n\n  clearState() {\n    this.text = undefined;\n    this.dataItem = undefined;\n  }\n\n  resetSelection(index) {\n    const clear = !isPresent(index) || index < 0;\n    this.selectionService.resetSelection(clear ? [] : [index]);\n    this.selectionService.focused = index;\n  }\n\n  firstFocusableIndex(index) {\n    const maxIndex = this.data.length - 1;\n\n    if (this.disabledItemsService.isIndexDisabled(index)) {\n      return index < maxIndex ? this.firstFocusableIndex(index + 1) : undefined;\n    } else {\n      return index;\n    }\n  }\n\n  findIndexPredicate(text) {\n    if (this.dataService.grouped) {\n      return item => {\n        let itemText = getter(item.value, this.textField);\n        itemText = !isPresent(itemText) ? \"\" : itemText.toString().toLowerCase();\n        return itemText.startsWith(text.toLowerCase());\n      };\n    } else {\n      return item => {\n        let itemText = getter(item, this.textField);\n        itemText = !isPresent(itemText) ? \"\" : itemText.toString().toLowerCase();\n        return itemText.startsWith(text.toLowerCase());\n      };\n    }\n  }\n\n  findDataItem({\n    valueField,\n    value\n  }) {\n    const result = {\n      dataItem: null,\n      index: -1\n    };\n\n    const comparer = element => {\n      const dataItem = this.dataService.grouped ? element.value : element;\n      return getter(dataItem, valueField) === getter(value, valueField);\n    };\n\n    const index = this.dataService.findIndex(comparer);\n    result.dataItem = this.dataService.itemAt(index);\n    result.index = index;\n    return result;\n  }\n\n  search(text, startFrom = 0) {\n    let index;\n\n    if (text.length && this.dataService.itemsCount) {\n      index = this.dataService.findIndex(this.findIndexPredicate(text), startFrom);\n    } else {\n      index = -1;\n    }\n\n    if (this.disabledItemsService.isIndexDisabled(index)) {\n      if (index + 1 < this.dataService.itemsCount) {\n        this.search(text, index + 1);\n      } else {\n        this.selectionService.focus(-1);\n      }\n    } else {\n      this.selectionService.focus(index);\n\n      if (this.suggest) {\n        this.suggestedText = getter(this.dataService.itemAt(index), this.textField);\n      }\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  getSuggestion() {\n    const hasSelected = !!this.selectionService.selected.length;\n    const shouldSuggest = this.suggest && !this.backspacePressed && this.suggestedText && this.text;\n\n    if (!hasSelected && shouldSuggest && this.suggestedText.toLowerCase().startsWith(this.text.toLowerCase())) {\n      return this.suggestedText;\n    } else {\n      this.suggestedText = undefined;\n    }\n  }\n\n  navigate(index) {\n    if (this.dataService.itemsCount === 0) {\n      return;\n    }\n\n    this.text = getter(this.dataService.itemAt(index), this.textField);\n    this.selectionService.select(index);\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleNavigate(event) {\n    const hasSelected = isPresent(this.selectionService.selected[0]);\n    const focused = isNaN(this.selectionService.focused) ? this.firstFocusableIndex(0) : this.selectionService.focused;\n    let offset = 0;\n\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    if (event.keyCode === Keys.Home || event.keyCode === Keys.End) {\n      return;\n    }\n\n    if (!hasSelected) {\n      if (event.keyCode === Keys.ArrowDown) {\n        offset = -1;\n      } else if (event.keyCode === Keys.ArrowUp) {\n        offset = 1;\n      }\n    }\n\n    const action = this.navigationService.process({\n      current: offset + focused,\n      max: this.dataService.itemsCount - 1,\n      min: 0,\n      originalEvent: event\n    });\n\n    if (action !== NavigationAction.Undefined && action !== NavigationAction.Left && action !== NavigationAction.Right && action !== NavigationAction.Backspace && action !== NavigationAction.Delete && action !== NavigationAction.PageDown && action !== NavigationAction.PageUp && (action === NavigationAction.Enter && this.isOpen || action !== NavigationAction.Enter)) {\n      event.preventDefault();\n    }\n  }\n\n  handleEnter() {\n    const text = this.text;\n    const focused = this.selectionService.focused;\n    const hasFocused = isPresent(focused) && focused !== -1;\n    const previousText = getter(this._previousDataItem, this.textField) || \"\";\n    const focusedItemText = getter(this.dataService.itemAt(focused), this.textField);\n    const textHasChanged = text !== previousText;\n    this.togglePopup(false);\n    this._filtering = false;\n\n    if (this.allowCustom && textHasChanged) {\n      if (text === focusedItemText || this.useSuggestion()) {\n        this.selectionService.change(focused);\n      } else {\n        this.change(text, true);\n      }\n    }\n\n    if (!this.allowCustom) {\n      if (hasFocused) {\n        this.selectionService.change(focused);\n      } else if (textHasChanged) {\n        this.change(text, true);\n      }\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleBlur() {\n    this._filtering = false;\n    this.searchbar.input.nativeElement.scrollLeft = 0; // Firefox doesn't auto-scroll to the left on blur like other browsers\n\n    this.isFocused = false;\n    const unresolvedSelection = getter(this.dataItem, this.valueField) !== getter(this.value, this.valueField);\n    const currentText = this.searchbar.value;\n    const textHasChanged = currentText !== (getter(this.dataItem, this.textField) || '');\n    const valueHasChanged = unresolvedSelection || textHasChanged;\n    const runInZone = valueHasChanged || hasObservers(this.onBlur) || hasObservers(this.close) || isUntouched(this.wrapper.nativeElement);\n\n    if (runInZone) {\n      this.zone.run(() => {\n        if (valueHasChanged) {\n          const lowerCaseMatch = isPresent(this.focusedItemText) && this.focusedItemText.toLowerCase() === currentText.toLowerCase();\n\n          if (lowerCaseMatch || unresolvedSelection) {\n            this.selectionService.change(this.selectionService.focused);\n          } else {\n            this.change(currentText, true);\n          }\n        }\n\n        this.onBlur.emit();\n        this.onTouchedCallback();\n        this.togglePopup(false);\n      });\n    } else {\n      this.togglePopup(false);\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleEscape() {\n    this.isOpen ? this.togglePopup(false) : this.clearValue(); // clear the focus only if the focused item is not selected\n\n    const hasSelected = this.selectionService.selected.length > 0;\n\n    if (!hasSelected) {\n      this.suggestedText = null;\n      this.selectionService.focused = -1;\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleNavigationOpen() {\n    this.restoreItemFocus();\n    this.togglePopup(true);\n  }\n  /**\n   * @hidden\n   */\n\n\n  searchBarChange(text) {\n    const currentTextLength = this.text ? this.text.length : 0;\n    this.backspacePressed = text.length < currentTextLength ? true : false;\n    this.text = text; // Reset the selection prior to filter. If a match is present, it will be resolved. If a match is not present, it is not needed.\n\n    this.selectionService.resetSelection([]);\n    this.togglePopup(true);\n    this._filtering = true;\n\n    if (this.filterable && this.filterText !== text) {\n      this.filterText = text;\n      this.filterChange.emit(text);\n    } else {\n      this.search(text);\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleFocus() {\n    this.isFocused = true;\n\n    if (hasObservers(this.onFocus)) {\n      this.zone.run(() => this.onFocus.emit());\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  pageChange(event) {\n    const virtual = this.virtual;\n    virtual.skip = event.skip;\n  }\n\n  change(candidate, isCustom = false) {\n    if (isCustom) {\n      this.customValueSubject.next(candidate);\n    } else {\n      this.valueSubject.next(candidate);\n    }\n  }\n\n  emitValueChange() {\n    this.onChangeCallback(this.value);\n    this.valueChange.emit(this.value);\n    this._previousDataItem = this.dataItem;\n  }\n  /**\n   * @hidden\n   */\n\n\n  selectClick() {\n    if (!this.touchEnabled) {\n      this.searchbar.focus();\n    }\n\n    if (!this.isOpen) {\n      this.restoreItemFocus();\n    }\n\n    this.togglePopup(!this.isOpen);\n  }\n\n  get listContainerClasses() {\n    return ['k-list-container', 'k-reset'].concat(this.popupSettings.popupClass || []);\n  }\n  /**\n   * @hidden\n   */\n\n\n  preventEventDefault(event) {\n    event.preventDefault();\n  }\n\n  get focusedItemText() {\n    const focused = this.selectionService.focused;\n\n    if (!isPresent(focused) || focused === -1) {\n      return null;\n    }\n\n    const itemText = getter(this.dataService.itemAt(focused), this.textField);\n    return !isPresent(itemText) ? \"\" : itemText.toString();\n  }\n  /**\n   * Focuses the first match when there's text in the input field, but no focused item.\n   */\n\n\n  restoreItemFocus() {\n    const hasFocus = isPresent(this.selectionService.focused) && this.selectionService.focused > -1;\n\n    if (!hasFocus && this.text && this.dataService.itemsCount) {\n      if (this.filterable) {\n        this.selectionService.focused = this.firstFocusableIndex(0);\n      } else {\n        this.search(this.text);\n      }\n    }\n  }\n\n  useSuggestion() {\n    if (!(this.suggest && isPresent(this.searchbar.value))) {\n      return false;\n    }\n\n    const focusedDataItem = this.dataService.itemAt(this.selectionService.focused);\n    const focusedItemText = getter(focusedDataItem, this.textField);\n\n    if (!isPresent(focusedItemText)) {\n      return false;\n    }\n\n    return this.searchbar.value.toLowerCase() === focusedItemText.toLowerCase();\n  }\n\n  destroyPopup() {\n    if (this.popupRef) {\n      this.popupRef.popupElement.removeEventListener('mousedown', this.popupMouseDownHandler);\n      this.popupRef.close();\n      this.popupRef = null;\n    }\n  }\n\n  createPopup() {\n    if (this.virtual) {\n      this.virtual.skip = 0;\n    }\n\n    const horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n    const anchorPosition = {\n      horizontal: horizontalAlign,\n      vertical: \"bottom\"\n    };\n    const popupPosition = {\n      horizontal: horizontalAlign,\n      vertical: \"top\"\n    };\n    this.popupRef = this.popupService.open({\n      anchor: this.wrapper,\n      animate: this.popupSettings.animate,\n      appendTo: this.appendTo,\n      content: this.popupTemplate,\n      popupClass: this.listContainerClasses,\n      positionMode: 'absolute',\n      anchorAlign: anchorPosition,\n      popupAlign: popupPosition\n    });\n    const popupWrapper = this.popupRef.popupElement;\n    const {\n      min,\n      max\n    } = this.popupWidth;\n    popupWrapper.addEventListener('mousedown', this.popupMouseDownHandler);\n    popupWrapper.style.minWidth = min;\n    popupWrapper.style.width = max;\n    popupWrapper.style.height = this.popupHeight;\n    popupWrapper.setAttribute(\"dir\", this.direction);\n    const listBox = this.popupRef.popupElement.querySelector('ul');\n    const ariaLabel = this.searchbar.input.nativeElement.getAttribute('aria-labelledby');\n\n    if (ariaLabel) {\n      listBox.setAttribute('aria-labelledby', ariaLabel);\n    }\n\n    this.popupRef.popupOpen.subscribe(() => {\n      this.cdr.detectChanges();\n      this.optionsList.scrollToItem(this.selectionService.focused);\n      this.opened.emit();\n    });\n    this.popupRef.popupClose.subscribe(() => {\n      this.closed.emit();\n    });\n    this.popupRef.popupAnchorViewportLeave.subscribe(() => this.togglePopup(false));\n  }\n\n  _toggle(open) {\n    this._open = open;\n    this.destroyPopup();\n\n    if (this._open) {\n      this.createPopup();\n    }\n  }\n\n  triggerPopupEvents(open) {\n    const eventArgs = new PreventableEvent();\n\n    if (open) {\n      this.open.emit(eventArgs);\n    } else {\n      this.close.emit(eventArgs);\n    }\n\n    return eventArgs.isDefaultPrevented();\n  }\n\n  clearFilter() {\n    if (!(this.filterable && this.filterText)) {\n      return;\n    }\n\n    this.filterText = '';\n    this.filterChange.emit(this.filterText);\n  }\n\n  subscribeTouchEvents() {\n    if (!isDocumentAvailable() || !this.touchEnabled) {\n      return;\n    }\n\n    this.zone.runOutsideAngular(() => // Roll up ComboBox on iOS when tapped outside\n    this.touchstartDisposeHandler = this.renderer.listen(document, 'touchstart', e => {\n      const target = e.target;\n      const isInDropDown = inDropDown(this.wrapper, target, this.popupRef);\n\n      if (this.isFocused && !isInDropDown) {\n        // Close popup and mobile keyboard if searchbar is focused\n        this.zone.run(() => this.blur());\n      } else if (this.isOpen && !isInDropDown) {\n        // Close popup if the popup is opened via the select click\n        this.zone.run(() => this.togglePopup(false));\n      }\n    }));\n  }\n\n  attachSelectClickHandler() {\n    const selectElement = this.select.nativeElement;\n    const event = pointers ? 'pointerdown' : 'click';\n    this.selectClickDisposeHandler = this.renderer.listen(selectElement, event, this.selectClick.bind(this));\n  }\n\n  setComponentClasses() {\n    if (this.size !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('input', this.size));\n    }\n\n    if (this.rounded !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n    }\n\n    if (this.fillMode !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('input', this.fillMode));\n    }\n  }\n\n}\n\nComboBoxComponent.ɵfac = function ComboBoxComponent_Factory(t) {\n  return new (t || ComboBoxComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i2.PopupService), i0.ɵɵdirectiveInject(SelectionService), i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(DisabledItemsService), i0.ɵɵdirectiveInject(DataService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(TOUCH_ENABLED, 8));\n};\n\nComboBoxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ComboBoxComponent,\n  selectors: [[\"kendo-combobox\"]],\n  contentQueries: function ComboBoxComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ItemTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, HeaderTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, FooterTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, NoDataTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, GroupTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, FixedGroupTemplateDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.noDataTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.groupTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fixedGroupTemplate = _t.first);\n    }\n  },\n  viewQuery: function ComboBoxComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c8, 7, ViewContainerRef);\n      i0.ɵɵviewQuery(_c9, 7);\n      i0.ɵɵviewQuery(SearchBarComponent, 7);\n      i0.ɵɵviewQuery(_c10, 5);\n      i0.ɵɵviewQuery(_c16, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.searchbar = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.optionsList = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.select = _t.first);\n    }\n  },\n  hostVars: 9,\n  hostBindings: function ComboBoxComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx.dir);\n      i0.ɵɵclassProp(\"k-combobox\", ctx.widgetClasses)(\"k-input\", ctx.widgetClasses)(\"k-disabled\", ctx.isDisabled)(\"k-loading\", ctx.isLoading);\n    }\n  },\n  inputs: {\n    focusableId: \"focusableId\",\n    allowCustom: \"allowCustom\",\n    data: \"data\",\n    value: \"value\",\n    textField: \"textField\",\n    valueField: \"valueField\",\n    valuePrimitive: \"valuePrimitive\",\n    valueNormalizer: \"valueNormalizer\",\n    placeholder: \"placeholder\",\n    popupSettings: \"popupSettings\",\n    listHeight: \"listHeight\",\n    iconClass: \"iconClass\",\n    loading: \"loading\",\n    suggest: \"suggest\",\n    clearButton: \"clearButton\",\n    disabled: \"disabled\",\n    itemDisabled: \"itemDisabled\",\n    readonly: \"readonly\",\n    tabindex: \"tabindex\",\n    tabIndex: \"tabIndex\",\n    filterable: \"filterable\",\n    virtual: \"virtual\",\n    size: \"size\",\n    rounded: \"rounded\",\n    fillMode: \"fillMode\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    selectionChange: \"selectionChange\",\n    filterChange: \"filterChange\",\n    open: \"open\",\n    opened: \"opened\",\n    close: \"close\",\n    closed: \"closed\",\n    onFocus: \"focus\",\n    onBlur: \"blur\"\n  },\n  exportAs: [\"kendoComboBox\"],\n  features: [i0.ɵɵProvidersFeature([COMBOBOX_VALUE_ACCESSOR, DataService, SelectionService, NavigationService, DisabledItemsService, LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.combobox'\n  }, {\n    provide: FilterableComponent,\n    useExisting: forwardRef(() => ComboBoxComponent)\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(() => ComboBoxComponent)\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 12,\n  vars: 22,\n  consts: function () {\n    let i18n_17;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text displayed in the popup when there are no items\n       * @meaning kendo.combobox.noDataText\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_18 = goog.getMsg(\"NO DATA FOUND\");\n      i18n_17 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_18;\n    } else {\n      i18n_17 = $localize`:kendo.combobox.noDataText|The text displayed in the popup when there are no items:NO DATA FOUND`;\n    }\n\n    let i18n_19;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the clear button\n       * @meaning kendo.combobox.clearTitle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_20 = goog.getMsg(\"clear\");\n      i18n_19 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_20;\n    } else {\n      i18n_19 = $localize`:kendo.combobox.clearTitle|The title of the clear button:clear`;\n    }\n\n    let i18n_21;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text set as aria-label on the select button\n       * @meaning kendo.combobox.selectButtonText\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_22 = goog.getMsg(\"Select\");\n      i18n_21 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_22;\n    } else {\n      i18n_21 = $localize`:kendo.combobox.selectButtonText|The text set as aria-label on the select button:Select`;\n    }\n\n    return [[\"kendoComboBoxLocalizedMessages\", \"\", \"noDataText\", i18n_17, \"clearTitle\", i18n_19, \"selectButtonText\", i18n_21], [3, \"role\", \"id\", \"listId\", \"isLoading\", \"isSuggestable\", \"isFilterable\", \"activeDescendant\", \"userInput\", \"suggestedText\", \"disabled\", \"readonly\", \"tabIndex\", \"popupOpen\", \"placeholder\", \"onNavigate\", \"valueChange\", \"onBlur\", \"onFocus\"], [\"searchbar\", \"\"], [\"class\", \"k-clear-value\", \"aria-hidden\", \"true\", 3, \"visibility\", \"kendoEventsOutsideAngular\", \"click\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"unselectable\", \"on\", \"type\", \"button\", 1, \"k-input-button\", \"k-button\", \"k-icon-button\", 3, \"ngClass\", \"kendoEventsOutsideAngular\"], [\"select\", \"\"], [1, \"k-button-icon\", \"k-icon\", 3, \"ngClass\"], [\"popupTemplate\", \"\"], [3, \"ngIf\"], [\"container\", \"\"], [\"aria-hidden\", \"true\", 1, \"k-clear-value\", 3, \"kendoEventsOutsideAngular\", \"click\"], [1, \"k-icon\", \"k-i-x\"], [4, \"ngIf\"], [3, \"size\", \"rounded\", \"id\", \"optionPrefix\", \"data\", \"textField\", \"valueField\", \"template\", \"groupTemplate\", \"fixedGroupTemplate\", \"height\", \"show\", \"virtual\", \"pageChange\"], [\"optionsList\", \"\"], [\"class\", \"k-no-data\", 4, \"ngIf\"], [3, \"templateContext\"], [1, \"k-no-data\"], [3, \"ngIf\", \"templateContext\"], [3, \"resize\"]];\n  },\n  template: function ComboBoxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵelementStart(1, \"kendo-searchbar\", 1, 2);\n      i0.ɵɵlistener(\"onNavigate\", function ComboBoxComponent_Template_kendo_searchbar_onNavigate_1_listener($event) {\n        return ctx.handleNavigate($event);\n      })(\"valueChange\", function ComboBoxComponent_Template_kendo_searchbar_valueChange_1_listener($event) {\n        return ctx.searchBarChange($event);\n      })(\"onBlur\", function ComboBoxComponent_Template_kendo_searchbar_onBlur_1_listener() {\n        return ctx.handleBlur();\n      })(\"onFocus\", function ComboBoxComponent_Template_kendo_searchbar_onFocus_1_listener() {\n        return ctx.handleFocus();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, ComboBoxComponent_span_3_Template, 2, 6, \"span\", 3);\n      i0.ɵɵelementStart(4, \"button\", 4, 5);\n      i0.ɵɵelement(6, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, ComboBoxComponent_ng_template_7_Template, 5, 16, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(9, ComboBoxComponent_ng_template_9_Template, 1, 0, \"ng-template\", 8);\n      i0.ɵɵelementContainer(10, null, 9);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"role\", \"combobox\")(\"id\", ctx.focusableId)(\"listId\", ctx.listBoxId)(\"isLoading\", ctx.loading)(\"isSuggestable\", ctx.suggest)(\"isFilterable\", ctx.filterable)(\"activeDescendant\", ctx.activeDescendant)(\"userInput\", ctx.text)(\"suggestedText\", ctx.getSuggestion())(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly)(\"tabIndex\", ctx.tabIndex)(\"popupOpen\", ctx.isOpen)(\"placeholder\", ctx.placeholder);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.clearButton && !ctx.loading && !ctx.disabled && !ctx.readonly && (ctx.text == null ? null : ctx.text.length));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", ctx.selectButtonClasses)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction1(20, _c23, ctx.preventEventDefault));\n      i0.ɵɵattribute(\"aria-label\", ctx.messageFor(\"selectButtonText\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", ctx.buttonClasses);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n    }\n  },\n  directives: [LocalizedMessagesDirective, SearchBarComponent, i11.NgIf, i11.NgClass, i9.EventsOutsideAngularDirective, ListComponent, TemplateContextDirective, i9.ResizeSensorComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ComboBoxComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoComboBox',\n      providers: [COMBOBOX_VALUE_ACCESSOR, DataService, SelectionService, NavigationService, DisabledItemsService, LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.combobox'\n      }, {\n        provide: FilterableComponent,\n        useExisting: forwardRef(() => ComboBoxComponent)\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(() => ComboBoxComponent)\n      }],\n      selector: 'kendo-combobox',\n      template: `\n        <ng-container kendoComboBoxLocalizedMessages\n            i18n-noDataText=\"kendo.combobox.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.combobox.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n\n            i18n-selectButtonText=\"kendo.combobox.selectButtonText|The text set as aria-label on the select button\"\n            selectButtonText=\"Select\"\n        >\n        </ng-container>\n        <kendo-searchbar #searchbar\n            [role]=\"'combobox'\"\n            [id]=\"focusableId\"\n            [listId]=\"listBoxId\"\n            [isLoading]=\"loading\"\n            [isSuggestable]=\"suggest\"\n            [isFilterable]=\"filterable\"\n            [activeDescendant]=\"activeDescendant\"\n            [userInput]=\"text\"\n            [suggestedText]=\"getSuggestion()\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [tabIndex]=\"tabIndex\"\n            [popupOpen]=\"isOpen\"\n            [placeholder]=\"placeholder\"\n            (onNavigate)=\"handleNavigate($event)\"\n            (valueChange)=\"searchBarChange($event)\"\n            (onBlur)=\"handleBlur()\"\n            (onFocus)=\"handleFocus()\"\n        ></kendo-searchbar>\n        <span\n            *ngIf=\"clearButton && !loading && !disabled && !readonly && text?.length\"\n            class=\"k-clear-value\"\n            [style.visibility]=\"clearButtonVisiblity\"\n            aria-hidden=\"true\"\n            [attr.title]=\"messageFor('clearTitle')\"\n            (click)=\"clearValue($event)\"\n            [kendoEventsOutsideAngular]=\"{\n                mousedown: preventEventDefault\n            }\"\n        >\n            <span class=\"k-icon k-i-x\"></span>\n        </span>\n        <button\n            #select\n            tabindex=\"-1\"\n            unselectable=\"on\"\n            type=\"button\"\n            class=\"k-input-button k-button k-icon-button\"\n            [ngClass]=\"selectButtonClasses\"\n            [attr.aria-label]=\"messageFor('selectButtonText')\"\n            [kendoEventsOutsideAngular]=\"{\n                mousedown: preventEventDefault\n            }\"\n        >\n            <span class=\"k-button-icon k-icon\" [ngClass]=\"buttonClasses\"></span>\n        </button>\n        <ng-template #popupTemplate>\n            <!--header template-->\n            <ng-template *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate.templateRef\n                }\">\n            </ng-template>\n            <!--list-->\n            <kendo-list\n                #optionsList\n                [size]=\"size\"\n                [rounded]=\"rounded\"\n                [id]=\"listBoxId\"\n                [optionPrefix]=\"optionPrefix\"\n                [data]=\"data\"\n                [textField]=\"textField\"\n                [valueField]=\"valueField\"\n                [template]=\"template\"\n                [groupTemplate]=\"groupTemplate\"\n                [fixedGroupTemplate]=\"fixedGroupTemplate\"\n                [height]=\"listHeight\"\n                [show]=\"isOpen\"\n                [virtual]=\"virtual\"\n                (pageChange)=\"pageChange($event)\"\n            >\n            </kendo-list>\n            <!--no-data template-->\n            <div class=\"k-no-data\" *ngIf=\"data.length === 0\">\n                <ng-template [ngIf]=\"noDataTemplate\"\n                    [templateContext]=\"{\n                        templateRef: noDataTemplate ? noDataTemplate.templateRef : undefined\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!noDataTemplate\">\n                    <div>{{ messageFor('noDataText') }}</div>\n                </ng-template>\n            </div>\n            <!--footer template-->\n            <ng-template *ngIf=\"footerTemplate\"\n                [templateContext]=\"{\n                    templateRef: footerTemplate.templateRef\n                }\">\n            </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"isOpen\">\n            <kendo-resize-sensor (resize)=\"onResize()\"></kendo-resize-sensor>\n        </ng-template>\n        <ng-container #container></ng-container>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i2.PopupService\n    }, {\n      type: SelectionService\n    }, {\n      type: NavigationService\n    }, {\n      type: DisabledItemsService\n    }, {\n      type: DataService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TOUCH_ENABLED]\n      }]\n    }];\n  }, {\n    focusableId: [{\n      type: Input\n    }],\n    allowCustom: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    textField: [{\n      type: Input\n    }],\n    valueField: [{\n      type: Input\n    }],\n    valuePrimitive: [{\n      type: Input\n    }],\n    valueNormalizer: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    popupSettings: [{\n      type: Input\n    }],\n    listHeight: [{\n      type: Input\n    }],\n    iconClass: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    suggest: [{\n      type: Input\n    }],\n    clearButton: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    itemDisabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [\"tabIndex\"]\n    }],\n    filterable: [{\n      type: Input\n    }],\n    virtual: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    fillMode: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    filterChange: [{\n      type: Output\n    }],\n    open: [{\n      type: Output\n    }],\n    opened: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    closed: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    template: [{\n      type: ContentChild,\n      args: [ItemTemplateDirective, {\n        static: false\n      }]\n    }],\n    headerTemplate: [{\n      type: ContentChild,\n      args: [HeaderTemplateDirective, {\n        static: false\n      }]\n    }],\n    footerTemplate: [{\n      type: ContentChild,\n      args: [FooterTemplateDirective, {\n        static: false\n      }]\n    }],\n    noDataTemplate: [{\n      type: ContentChild,\n      args: [NoDataTemplateDirective, {\n        static: false\n      }]\n    }],\n    groupTemplate: [{\n      type: ContentChild,\n      args: [GroupTemplateDirective, {\n        static: false\n      }]\n    }],\n    fixedGroupTemplate: [{\n      type: ContentChild,\n      args: [FixedGroupTemplateDirective, {\n        static: false\n      }]\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }],\n    popupTemplate: [{\n      type: ViewChild,\n      args: ['popupTemplate', {\n        static: true\n      }]\n    }],\n    searchbar: [{\n      type: ViewChild,\n      args: [SearchBarComponent, {\n        static: true\n      }]\n    }],\n    optionsList: [{\n      type: ViewChild,\n      args: ['optionsList', {\n        static: false\n      }]\n    }],\n    select: [{\n      type: ViewChild,\n      args: ['select', {\n        static: true\n      }]\n    }],\n    widgetClasses: [{\n      type: HostBinding,\n      args: ['class.k-combobox']\n    }, {\n      type: HostBinding,\n      args: ['class.k-input']\n    }],\n    isDisabled: [{\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }],\n    isLoading: [{\n      type: HostBinding,\n      args: ['class.k-loading']\n    }],\n    dir: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }]\n  });\n})();\n/**\n * Renders the selected value of the dropdown. To define the header template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>ValueTemplate` directive inside the component tag.\n *\n * The template context is set to the current component.\n * To get a reference to the current data item, use the `let-dataItem` directive.\n *\n * > The `ValueTemplate` directive can only be used with the DropDownList and DropDownTree components.\n *\n * - [Using `ValueTemplate` with the DropDownList]({% slug templates_ddl %}#toc-value-template)\n * - [Using `ValueTemplate` with the DropDownTree]({% slug templates_ddt %}#toc-value-template)\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-dropdownlist [data]=\"listItems\">\n *    <ng-template kendoDropDownListValueTemplate let-dataItem>\n *      <span>{{dataItem}} option</span>\n *    </ng-template>\n *  </kendo-dropdownlist>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\n\n\nclass ValueTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nValueTemplateDirective.ɵfac = function ValueTemplateDirective_Factory(t) {\n  return new (t || ValueTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nValueTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ValueTemplateDirective,\n  selectors: [[\"\", \"kendoDropDownListValueTemplate\", \"\"], [\"\", \"kendoDropDownTreeValueTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ValueTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownListValueTemplate],[kendoDropDownTreeValueTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nclass FilterInputDirective {\n  constructor(element, zone) {\n    this.element = element;\n    this.zone = zone;\n  }\n\n  ngOnChanges() {\n    if (this.focused) {\n      this.nextTick(() => this.element.nativeElement.focus());\n    }\n  }\n\n  nextTick(fn) {\n    this.zone.runOutsideAngular(() => setTimeout(fn));\n  }\n\n}\n\nFilterInputDirective.ɵfac = function FilterInputDirective_Factory(t) {\n  return new (t || FilterInputDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nFilterInputDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FilterInputDirective,\n  selectors: [[\"\", \"filterInput\", \"\"]],\n  inputs: {\n    focused: [\"filterInput\", \"focused\"]\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterInputDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[filterInput]' // eslint-disable-line\n\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    focused: [{\n      type: Input,\n      args: ['filterInput']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nconst DROPDOWNLIST_VALUE_ACCESSOR = {\n  multi: true,\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => DropDownListComponent)\n};\nconst DEFAULT_SIZE$3 = 'medium';\nconst DEFAULT_ROUNDED$3 = 'medium';\nconst DEFAULT_FILL_MODE$3 = 'solid';\n/**\n * Represents the [Kendo UI DropDownList component for Angular]({% slug overview_ddl %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-dropdownlist [data]=\"listItems\">\n *  </kendo-dropdownlist>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\n\nclass DropDownListComponent {\n  constructor(wrapper, localization, popupService, selectionService, navigationService, disabledItemsService, dataService, _zone, renderer, cdr, touchEnabled, injector) {\n    this.wrapper = wrapper;\n    this.localization = localization;\n    this.popupService = popupService;\n    this.selectionService = selectionService;\n    this.navigationService = navigationService;\n    this.disabledItemsService = disabledItemsService;\n    this.dataService = dataService;\n    this._zone = _zone;\n    this.renderer = renderer;\n    this.cdr = cdr;\n    this.touchEnabled = touchEnabled;\n    this.injector = injector;\n    /**\n     * Sets the height of the options list. By default, `listHeight` is 200px.\n     *\n     * > The `listHeight` property affects only the list of options and not the whole popup container.\n     * > To set the height of the popup container, use `popupSettings.height`.\n     */\n\n    this.listHeight = 200;\n    /**\n     * Sets the read-only state of the component.\n     */\n\n    this.readonly = false;\n    /**\n     * Enables the [filtering]({% slug filtering_ddl %}) functionality of the DropDownList.\n     */\n\n    this.filterable = false;\n    /**\n     * Enables a case-insensitive search. When filtration is disabled, use this option.\n     */\n\n    this.ignoreCase = true;\n    /**\n     * Sets the delay before an item search is performed. When filtration is disabled, use this option.\n     */\n\n    this.delay = 500;\n    /**\n     * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n\n    this.tabindex = 0;\n    /**\n     * Fires each time the value is changed ([see example]({% slug overview_ddl %}#toc-events)).\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires each time the user types in the input field\n     * ([see example]({% slug overview_ddl %}#toc-events)).\n     * You can filter the source based on the passed filtration value.\n     * When the value of the component is programmatically changed to `ngModel` or `formControl`\n     * through its API or form binding, the `valueChange` event is not triggered because it\n     * might cause a mix-up with the built-in `valueChange` mechanisms of the `ngModel` or `formControl` bindings.\n     */\n\n    this.filterChange = new EventEmitter();\n    /**\n     * Fires each time the item selection is changed\n     * ([see example]({% slug overview_ddl %}#toc-events)).\n     */\n\n    this.selectionChange = new EventEmitter();\n    /**\n     * Fires each time the popup is about to open\n     * ([see example]({% slug openstate_ddl %}#toc-preventing-opening-and-closing)).\n     * This event is preventable. If you cancel it, the popup will remain closed.\n     */\n\n    this.open = new EventEmitter();\n    /**\n     * Fires after the popup has been opened.\n     */\n\n    this.opened = new EventEmitter();\n    /**\n     * Fires each time the popup is about to close\n     * ([see example]({% slug openstate_ddl %}#toc-preventing-opening-and-closing)).\n     * This event is preventable. If you cancel it, the popup will remain open.\n     */\n\n    this.close = new EventEmitter();\n    /**\n     * Fires after the popup has been closed.\n     */\n\n    this.closed = new EventEmitter();\n    /**\n     * Fires each time the user focuses the DropDownList.\n     */\n\n    this.onFocus = new EventEmitter();\n    /**\n     * Fires each time the DropDownList gets blurred.\n     */\n\n    this.onBlur = new EventEmitter();\n    this.hostClasses = true;\n    /**\n     * @hidden\n     */\n\n    this.focusableId = `k-${guid()}`;\n    this.role = 'combobox';\n    this.haspopup = 'listbox';\n    this.groupIndices = [];\n    this.listBoxId = guid();\n    this.optionPrefix = guid();\n    this.filterText = \"\";\n    this.subs = new Subscription();\n    this._isFocused = false;\n\n    this.onTouchedCallback = _ => {};\n\n    this.onChangeCallback = _ => {};\n\n    this.word = \"\";\n    this.last = \"\";\n    this.filterFocused = new EventEmitter();\n    this.filterBlurred = new EventEmitter();\n    this.hostElementFocused = new EventEmitter();\n    this.hostElementBlurred = new EventEmitter();\n    this._open = false;\n    this._popupSettings = {\n      animate: true\n    };\n    this._size = 'medium';\n    this._rounded = 'medium';\n    this._fillMode = 'solid';\n    validatePackage(packageMetadata);\n    this.direction = localization.rtl ? 'rtl' : 'ltr';\n    this.data = [];\n    this.subscribeEvents();\n    this.subscribeTouchEvents();\n    this.subscribeFocusEvents();\n    this.popupMouseDownHandler = this.onMouseDown.bind(this);\n  }\n\n  get width() {\n    const wrapperWidth = isDocumentAvailable() ? this.wrapper.nativeElement.offsetWidth : 0;\n    const width = this.popupSettings.width || wrapperWidth;\n    const minWidth = isNaN(wrapperWidth) ? wrapperWidth : `${wrapperWidth}px`;\n    const maxWidth = isNaN(width) ? width : `${width}px`;\n    return {\n      min: minWidth,\n      max: maxWidth\n    };\n  }\n\n  get height() {\n    const popupHeight = this.popupSettings.height;\n    return isPresent(popupHeight) ? `${popupHeight}px` : 'auto';\n  }\n\n  get widgetTabIndex() {\n    if (this.disabled) {\n      return undefined;\n    }\n\n    const providedTabIndex = Number(this.tabIndex);\n    const defaultTabIndex = 0;\n    return !isNaN(providedTabIndex) ? providedTabIndex : defaultTabIndex;\n  }\n\n  get ariaExpanded() {\n    return this.isOpen;\n  }\n\n  get ariaControls() {\n    if (!this.isOpen) {\n      return;\n    }\n\n    return this.listBoxId;\n  }\n\n  get ariaActivedescendant() {\n    if (!isPresent(this.dataItem) || !this.isOpen) {\n      return;\n    }\n\n    return this.optionPrefix + \"-\" + getter(this.dataItem, this.valueField);\n  }\n\n  get appendTo() {\n    const {\n      appendTo\n    } = this.popupSettings;\n\n    if (!appendTo || appendTo === 'root') {\n      return undefined;\n    }\n\n    return appendTo === 'component' ? this.container : appendTo;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get ariaLive() {\n    return this.filterable ? 'polite' : 'off';\n  }\n  /**\n   * Sets the data of the DropDownList.\n   *\n   * > The data has to be provided in an array-like list.\n   */\n\n\n  set data(data) {\n    this.dataService.data = data || [];\n\n    if (this.virtual) {\n      this.virtual.skip = 0;\n    }\n\n    this.setState();\n  }\n\n  get data() {\n    const virtual = this.virtual;\n\n    if (virtual) {\n      const start = virtual.skip || 0;\n      const end = start + virtual.pageSize; // Use length instead of itemsCount because of the grouping.\n\n      virtual.total = this.dataService.data.length;\n      return this.dataService.data.slice(start, end);\n    }\n\n    return this.dataService.data;\n  }\n  /**\n   * Sets the value of the DropDownList.\n   * It can either be of the primitive (string, numbers) or of the complex (objects) type.\n   * To define the type, use the `valuePrimitive` option.\n   *\n   * > All selected values which are not present in the source are ignored.\n   */\n\n\n  set value(newValue) {\n    if (!isPresent(newValue)) {\n      this._previousDataItem = undefined;\n    }\n\n    this._value = newValue;\n    this.setState();\n    this.cdr.markForCheck();\n  }\n\n  get value() {\n    return this._value;\n  }\n  /**\n   * Configures the popup of the DropDownList.\n   *\n   * The available options are:\n   * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n   * - `width: Number | String`&mdash;Sets the width of the popup container. By default, the width of the host element is used. If set to `auto`, the component automatically adjusts the width of the popup and no item labels are wrapped. The `auto` mode is not supported when virtual scrolling is enabled.\n   * - `height: Number`&mdash;Sets the height of the popup container.\n   * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n   * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n   */\n\n\n  set popupSettings(settings) {\n    this._popupSettings = Object.assign({\n      animate: true\n    }, settings);\n  }\n\n  get popupSettings() {\n    return this._popupSettings;\n  }\n  /**\n   * Defines a Boolean function that is executed for each data item in the component\n   * ([see examples]({% slug disableditems_ddl %})). Determines whether the item will be disabled.\n   */\n\n\n  set itemDisabled(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error(`itemDisabled must be a function, but received ${JSON.stringify(fn)}.`);\n    }\n\n    this.disabledItemsService.itemDisabled = fn;\n  }\n  /**\n   * Enables the [virtualization]({% slug virtualization_ddl %}) functionality.\n   */\n\n\n  set virtual(settings) {\n    this._virtualSettings = normalizeVirtualizationSettings(settings);\n  }\n\n  get virtual() {\n    return this._virtualSettings;\n  }\n  /**\n   * Specifies the type of the selected value\n   * ([more information and example]({% slug valuebinding_ddl %}#toc-primitive-values-from-object-fields)).\n   * If set to `true`, the selected value has to be of a primitive value.\n   */\n\n\n  set valuePrimitive(isPrimitive) {\n    this._valuePrimitive = isPrimitive;\n  }\n\n  get valuePrimitive() {\n    if (!isPresent(this._valuePrimitive)) {\n      return !isPresent(this.valueField);\n    }\n\n    return this._valuePrimitive;\n  }\n  /**\n   * @hidden\n   */\n\n\n  set tabIndex(tabIndex) {\n    this.tabindex = tabIndex;\n  }\n\n  get tabIndex() {\n    return this.tabindex;\n  }\n  /**\n   * Sets the size of the component.\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `none`\n   *\n   */\n\n\n  set size(size) {\n    const newSize = size ? size : DEFAULT_SIZE$3;\n    this.renderer.removeClass(this.wrapper.nativeElement, getSizeClass('picker', this.size));\n\n    if (size !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('picker', newSize));\n    }\n\n    this._size = newSize;\n  }\n\n  get size() {\n    return this._size;\n  }\n  /**\n   * Sets the border radius of the component.\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `full`\n   * * `none`\n   *\n   */\n\n\n  set rounded(rounded) {\n    const newRounded = rounded ? rounded : DEFAULT_ROUNDED$3;\n    this.renderer.removeClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n\n    if (rounded !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(newRounded));\n    }\n\n    this._rounded = rounded;\n  }\n\n  get rounded() {\n    return this._rounded;\n  }\n  /**\n   * Sets the fillMode of the component.\n   *\n   * The possible values are:\n   * * `flat`\n   * * `solid` (default)\n   * * `outline`\n   * * `none`\n   *\n   */\n\n\n  set fillMode(fillMode) {\n    const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$3;\n    this.renderer.removeClass(this.wrapper.nativeElement, getFillModeClass('picker', this.fillMode));\n\n    if (fillMode !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('picker', newFillMode));\n    }\n\n    this._fillMode = newFillMode;\n  }\n\n  get fillMode() {\n    return this._fillMode;\n  }\n  /**\n   * @hidden\n   */\n\n\n  blurComponent(event) {\n    if (event.target !== this.wrapper.nativeElement) {\n      return;\n    }\n\n    event.stopImmediatePropagation();\n    this.hostElementBlurred.emit();\n  }\n  /**\n   * @hidden\n   */\n\n\n  blurFilterInput() {\n    this.filterBlurred.emit();\n  }\n  /**\n   * @hidden\n   */\n\n\n  focusComponent(event) {\n    if (event.target !== this.wrapper.nativeElement) {\n      return;\n    }\n\n    event.stopImmediatePropagation();\n    this.hostElementFocused.emit();\n\n    if (!this.isFocused) {\n      this.isFocused = true;\n\n      if (hasObservers(this.onFocus)) {\n        this._zone.run(() => {\n          this.onFocus.emit();\n        });\n      }\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  onResize() {\n    if (this._open) {\n      const popupWrapper = this.popupRef.popupElement;\n      const {\n        min,\n        max\n      } = this.width;\n      popupWrapper.style.minWidth = min;\n      popupWrapper.style.width = max;\n    }\n  }\n\n  get isDisabledClass() {\n    return this.disabled;\n  }\n\n  get isDisabledAttribute() {\n    return this.disabled ? '' : null;\n  }\n\n  get isLoading() {\n    return this.loading;\n  }\n\n  get dir() {\n    return this.direction;\n  }\n\n  get hostTabIndex() {\n    return this.widgetTabIndex;\n  }\n\n  get readonlyClass() {\n    return this.readonly;\n  }\n\n  get readonlyAttr() {\n    return this.readonly ? '' : null;\n  }\n\n  get isBusy() {\n    return this.isLoading;\n  }\n\n  get isAriaExpanded() {\n    return this.ariaExpanded;\n  }\n\n  get hostAriaControls() {\n    return this.ariaControls;\n  }\n\n  get hostAriaInvalid() {\n    var _a;\n\n    return this.formControl ? (_a = this.formControl) === null || _a === void 0 ? void 0 : _a.invalid.toString() : null;\n  }\n\n  get hostAriaActivedescendant() {\n    return this.ariaActivedescendant;\n  }\n  /**\n   * @hidden\n   */\n\n\n  keydown(event) {\n    const firstIndex = isPresent(this.defaultItem) ? -1 : 0;\n    let focused = isNaN(this.selectionService.focused) ? this.firstFocusableIndex(firstIndex) : this.selectionService.focused;\n    let offset = 0;\n\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    const isHomeEnd = event.keyCode === Keys.Home || event.keyCode === Keys.End;\n    const isFilterFocused = this.filterable && this.isFocused && this.isOpen;\n\n    if (isFilterFocused && isHomeEnd) {\n      return;\n    }\n\n    const hasSelected = isPresent(this.selectionService.selected[0]);\n    const focusedItemNotSelected = isPresent(this.selectionService.focused) && !this.selectionService.isSelected(this.selectionService.focused);\n\n    if (!hasSelected || focusedItemNotSelected) {\n      if (event.keyCode === Keys.ArrowDown || event.keyCode === Keys.ArrowRight) {\n        offset = -1;\n      } else if (event.keyCode === Keys.ArrowUp || event.keyCode === Keys.ArrowLeft) {\n        offset = 1;\n      }\n    }\n\n    const eventData = event;\n    const action = this.navigationService.process({\n      current: focused + offset,\n      max: this.dataService.itemsCount - 1,\n      min: this.defaultItem ? -1 : 0,\n      originalEvent: eventData\n    });\n    const leftRightKeys = action === NavigationAction.Left || action === NavigationAction.Right;\n\n    if (action !== NavigationAction.Undefined && action !== NavigationAction.Tab && action !== NavigationAction.Backspace && action !== NavigationAction.Delete && action !== NavigationAction.PageDown && action !== NavigationAction.PageUp && action !== NavigationAction.SelectAll && !(leftRightKeys && this.filterable) && action !== NavigationAction.Enter //enter when popup is opened is handled before `handleEnter`\n    ) {\n      eventData.preventDefault();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  keypress(event) {\n    if (this.disabled || this.readonly || this.filterable) {\n      return;\n    }\n\n    this.onKeyPress(event);\n  }\n  /**\n   * @hidden\n   */\n\n\n  click(event) {\n    event.preventDefault();\n    this.focus();\n    this.togglePopup(!this.isOpen);\n  }\n\n  set isFocused(isFocused) {\n    this.renderer[isFocused ? 'addClass' : 'removeClass'](this.wrapper.nativeElement, 'k-focus');\n    this._isFocused = isFocused;\n  }\n\n  get isFocused() {\n    return this._isFocused;\n  }\n\n  ngOnInit() {\n    this.renderer.removeAttribute(this.wrapper.nativeElement, \"tabindex\");\n    this.subs.add(this.localization.changes.subscribe(({\n      rtl\n    }) => {\n      this.direction = rtl ? 'rtl' : 'ltr';\n      this.cdr.detectChanges();\n    }));\n    this.assignAriaDescribedBy();\n    this.setComponentClasses();\n  }\n  /**\n   * @hidden\n   * Used by the TextBoxContainer to determine if the component is empty.\n   */\n\n\n  isEmpty() {\n    const value = this.value;\n    return !(value === 0 || value === false || value || this.defaultItem);\n  }\n  /**\n   * @hidden\n   */\n\n\n  onFilterFocus() {\n    this.filterFocused.emit();\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngOnDestroy() {\n    this.destroyPopup();\n    this.subs.unsubscribe();\n    this.unSubscribeFocusEvents();\n\n    if (this.touchstartDisposeHandler) {\n      this.touchstartDisposeHandler();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngOnChanges(changes) {\n    const virtual = this.virtual;\n    const requestInitialData = virtual && changes.data && changes.data.isFirstChange();\n\n    if (requestInitialData) {\n      this.pageChange({\n        skip: 0,\n        take: virtual.pageSize\n      });\n    }\n\n    if (isChanged('defaultItem', changes, false)) {\n      this.disabledItemsService.defaultItem = this.defaultItem;\n    }\n\n    if (anyChanged(['textField', 'valueField', 'valuePrimitive', 'defaultItem', 'itemDisabled'], changes, false)) {\n      this.setState();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngAfterContentChecked() {\n    this.verifySettings();\n  }\n  /**\n   * @hidden\n   */\n\n\n  get formControl() {\n    const ngControl = this.injector.get(NgControl, null);\n    return (ngControl === null || ngControl === void 0 ? void 0 : ngControl.control) || null;\n  }\n  /**\n   * Focuses a specific item of the DropDownList based on a provided index.\n   * If there is a default item it is positioned at index -1.\n   * If null or invalid index is provided the focus will be removed.\n   */\n\n\n  focusItemAt(index) {\n    const minIndex = isPresent(this.defaultItem) ? -1 : 0;\n    const isInRange = minIndex <= index && index < this.data.length;\n\n    if (isPresent(index) && isInRange && !this.disabledItemsService.isIndexDisabled(index)) {\n      this.selectionService.focus(index);\n    } else {\n      this.selectionService.focus(null);\n    }\n  }\n  /**\n   * Focuses the DropDownList.\n   */\n\n\n  focus() {\n    if (!this.disabled) {\n      this.wrapper.nativeElement.focus();\n    }\n  }\n  /**\n   * Blurs the DropDownList.\n   */\n\n\n  blur() {\n    if (!this.disabled) {\n      this.wrapper.nativeElement.blur();\n      this.cdr.detectChanges();\n    }\n  }\n  /**\n   * Toggles the visibility of the popup\n   * ([see example]({% slug openstate_ddl %}#toc-setting-the-initially-opened-component)).\n   * If you use the `toggle` method to open or close the popup, the `open` and `close` events will not be fired.\n   *\n   * @param open - The state of the popup.\n   */\n\n\n  toggle(open) {\n    // The Promise is required to open the popup on load.\n    // Otherwise, the \"Expression has changed...\" type error will be thrown.\n    Promise.resolve(null).then(() => {\n      const shouldOpen = isPresent(open) ? open : !this._open;\n\n      this._toggle(shouldOpen);\n    });\n  }\n\n  _toggle(open) {\n    this._open = open;\n    this.destroyPopup();\n\n    if (this._open) {\n      this.createPopup();\n    }\n  }\n\n  triggerPopupEvents(open) {\n    const eventArgs = new PreventableEvent();\n\n    if (open) {\n      this.open.emit(eventArgs);\n    } else {\n      this.close.emit(eventArgs);\n    }\n\n    return eventArgs.isDefaultPrevented();\n  }\n  /**\n   * @hidden\n   */\n\n\n  togglePopup(open) {\n    const isDisabled = this.disabled || this.readonly;\n    const sameState = this.isOpen === open;\n\n    if (isDisabled || sameState) {\n      return;\n    }\n\n    const isDefaultPrevented = this.triggerPopupEvents(open);\n\n    if (!isDefaultPrevented) {\n      if (!open && this.filterable && this.isFocused) {\n        this.focus();\n      }\n\n      this._toggle(open);\n    }\n  }\n  /**\n   * Returns the current open state of the popup.\n   */\n\n\n  get isOpen() {\n    return this._open;\n  }\n  /**\n   * Resets the value of the DropDownList.\n   * If you use the `reset` method to clear the value of the component,\n   * the model will not update automatically and the `selectionChange` and `valueChange` events will not be fired.\n   */\n\n\n  reset() {\n    this.value = undefined;\n  }\n  /**\n   * @hidden\n   */\n\n\n  messageFor(key) {\n    return this.localization.get(key);\n  }\n  /**\n   * @hidden\n   */\n\n\n  writeValue(value) {\n    this.value = value === null ? undefined : value;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnChange(fn) {\n    this.onChangeCallback = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnTouched(fn) {\n    this.onTouchedCallback = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get buttonClasses() {\n    return this.loading ? 'k-i-loading k-input-loading-icon' : this.iconClass || 'k-i-caret-alt-down';\n  }\n  /**\n   * @hidden\n   */\n\n\n  get selectButtonClasses() {\n    return `${this.size ? getSizeClass('button', this.size) : ''} ${this.fillMode ? 'k-button-' + this.fillMode : ''} ${this.fillMode ? 'k-button-' + this.fillMode + '-base' : ''}`;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get filterInputClasses() {\n    return `${this.size ? getSizeClass('input', this.size) : ''} ${this.fillMode ? 'k-input-' + this.fillMode : ''} ${this.rounded ? getRoundedClass(this.rounded) : ''}`;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get optionLabelSizeClass() {\n    return `${this.size ? getSizeClass('list', this.size) : ''}`;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get listContainerClasses() {\n    const containerClasses = ['k-list-container', 'k-reset'];\n\n    if (this.popupSettings.popupClass) {\n      containerClasses.push(this.popupSettings.popupClass);\n    }\n\n    return containerClasses;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get isDisabledDefaultItem() {\n    return this.disabledItemsService.isItemDisabled(this.defaultItem);\n  }\n  /**\n   * @hidden\n   */\n\n\n  getText() {\n    return this.text;\n  }\n  /**\n   * @hidden\n   */\n\n\n  getDefaultItemText() {\n    return getter(this.defaultItem, this.textField);\n  }\n\n  createPopup() {\n    if (this.virtual) {\n      this.virtual.skip = 0;\n    }\n\n    const horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n    const anchorPosition = {\n      horizontal: horizontalAlign,\n      vertical: \"bottom\"\n    };\n    const popupPosition = {\n      horizontal: horizontalAlign,\n      vertical: \"top\"\n    };\n    this.popupRef = this.popupService.open({\n      anchor: this.wrapper,\n      anchorAlign: anchorPosition,\n      animate: this.popupSettings.animate,\n      appendTo: this.appendTo,\n      content: this.popupTemplate,\n      popupAlign: popupPosition,\n      popupClass: this.listContainerClasses,\n      positionMode: 'absolute'\n    });\n    const popupWrapper = this.popupRef.popupElement;\n    const {\n      min,\n      max\n    } = this.width;\n    popupWrapper.addEventListener('mousedown', this.popupMouseDownHandler);\n    popupWrapper.style.minWidth = min;\n    popupWrapper.style.width = max;\n    popupWrapper.style.height = this.height;\n    popupWrapper.setAttribute(\"dir\", this.direction);\n    const listBox = popupWrapper.querySelector('ul.k-list-ul');\n    const ariaLabel = this.wrapper.nativeElement.getAttribute('aria-labelledby');\n\n    if (ariaLabel) {\n      listBox.setAttribute('aria-labelledby', ariaLabel);\n    }\n\n    this.subs.add(this.popupRef.popupOpen.subscribe(() => {\n      this.cdr.detectChanges();\n      this.optionsList.scrollToItem(this.selectionService.focused);\n      this.opened.emit();\n    }));\n    this.subs.add(this.popupRef.popupClose.subscribe(() => {\n      this.closed.emit();\n    }));\n\n    if (!this.filterable) {\n      this.subs.add(this.popupRef.popupAnchorViewportLeave.subscribe(() => this.togglePopup(false)));\n    }\n  }\n\n  destroyPopup() {\n    if (this.popupRef) {\n      this.popupRef.popupElement.removeEventListener('mousedown', this.popupMouseDownHandler);\n      this.popupRef.close();\n      this.popupRef = null;\n    }\n  }\n\n  updateState({\n    dataItem,\n    confirm = false\n  }) {\n    this.dataItem = dataItem;\n    this.text = getter(dataItem, this.textField);\n\n    if (confirm) {\n      this._previousDataItem = dataItem;\n    }\n  }\n\n  clearState() {\n    this.text = undefined;\n    this.dataItem = undefined;\n  }\n\n  resetSelection(index) {\n    const clear = !isPresent(index);\n    this.selectionService.resetSelection(clear ? [] : [index]);\n    this.selectionService.focused = clear ? this.firstFocusableIndex(0) : index;\n  }\n\n  onSelectionChange({\n    dataItem\n  }) {\n    this.updateState({\n      dataItem\n    });\n    this.selectionChange.emit(dataItem); // reassigning the value label ID as aria-deascibedby forces firefox/nvda, forefox/jaws to read\n    // the new value when the popup is closed and the value is changed with the arrow keys (up/down)\n\n    this.assignAriaDescribedBy();\n  }\n\n  subscribeEvents() {\n    if (!isDocumentAvailable()) {\n      return;\n    } // Item selection when the popup is open.\n\n\n    this.subs.add(this.selectionService.onSelect.pipe(filter(_ => this.isOpen), map(this.itemFromEvent.bind(this))).subscribe(this.onSelectionChange.bind(this))); // Item selection when the popup is closed | clicked | enter, and so on.\n\n    this.subs.add(merge(this.selectionService.onSelect.pipe(filter(_ => !this.isOpen)), this.selectionService.onChange).pipe(map(this.itemFromEvent.bind(this)), tap(_ => this.togglePopup(false))).subscribe(({\n      dataItem,\n      value: newValue,\n      newSelection\n    }) => {\n      if (newSelection) {\n        this.onSelectionChange({\n          dataItem\n        });\n      }\n\n      const shouldUsePrevious = !isPresent(dataItem) && this._previousDataItem;\n      const shouldUseNewValue = newValue !== getter(this.value, this.valueField);\n\n      if (shouldUsePrevious) {\n        this.updateState({\n          dataItem: this._previousDataItem\n        });\n        this.resetSelection();\n      } else if (shouldUseNewValue) {\n        this.value = this.valuePrimitive ? newValue : dataItem;\n        this._previousDataItem = dataItem;\n        this.emitChange(this.value);\n      }\n\n      this.clearFilter();\n    }));\n    this.subs.add(merge(this.navigationService.up, this.navigationService.down, this.navigationService.left.pipe(skipWhile(() => this.filterable)), this.navigationService.right.pipe(skipWhile(() => this.filterable)), this.navigationService.home, this.navigationService.end).pipe(filter(event => !isNaN(event.index))).subscribe(event => this.selectionService.select(event.index)));\n    this.subs.add(merge(this.navigationService.pagedown, this.navigationService.pageup).subscribe(event => {\n      if (this.isOpen) {\n        event.originalEvent.preventDefault();\n        this.optionsList.scrollWithOnePage(NavigationAction[event.originalEvent.code]);\n      }\n    }));\n    this.subs.add(this.navigationService.open.subscribe(() => this.togglePopup(true)));\n    this.subs.add(this.navigationService.close.subscribe(() => {\n      this.togglePopup(false);\n      this.focus();\n    }));\n    this.subs.add(this.navigationService.enter.pipe(tap(event => event.originalEvent.preventDefault())).subscribe(this.handleEnter.bind(this)));\n    this.subs.add(this.navigationService.esc.subscribe(this.handleEscape.bind(this)));\n    this.subs.add(this.filterBlurred.pipe(concatMap(() => interval(10).pipe(take(1), takeUntil(this.hostElementFocused)))).subscribe(() => {\n      this.hostElementBlurred.emit();\n    }));\n\n    this._zone.runOutsideAngular(() => {\n      this.subs.add(merge(this.hostElementBlurred.pipe(concatMap(() => interval(10).pipe(take(1), takeUntil(this.filterFocused)))), this.navigationService.tab).pipe(tap(event => event instanceof NavigationEvent && this.focus()), filter(() => this.isFocused)).subscribe(() => this.componentBlur()));\n    });\n  }\n\n  subscribeTouchEvents() {\n    if (!isDocumentAvailable() || !this.touchEnabled) {\n      return;\n    }\n\n    this._zone.runOutsideAngular(() => // Roll up DropDownList on iOS when tapped outside\n    this.touchstartDisposeHandler = this.renderer.listen(document, 'touchstart', e => {\n      const target = e.target;\n\n      if (this.isFocused && !inDropDown(this.wrapper, target, this.popupRef)) {\n        this._zone.run(() => {\n          if (this.filterFocused) {\n            // Close popup if filter is focused\n            this.togglePopup(false);\n          }\n\n          this.blur();\n        });\n      }\n    }));\n  }\n\n  subscribeFocusEvents() {\n    if (isDocumentAvailable()) {\n      this.focusComponent = this.focusComponent.bind(this);\n      this.blurComponent = this.blurComponent.bind(this);\n\n      this._zone.runOutsideAngular(() => {\n        const useCapture = true;\n        document.addEventListener('focus', this.focusComponent, useCapture);\n        document.addEventListener('blur', this.blurComponent, useCapture);\n      });\n    }\n  }\n\n  unSubscribeFocusEvents() {\n    if (isDocumentAvailable()) {\n      const useCapture = true;\n      document.removeEventListener('focus', this.focusComponent, useCapture);\n      document.removeEventListener('blur', this.blurComponent, useCapture);\n    }\n  }\n\n  itemFromEvent(event) {\n    const index = event.indices[0];\n    let dataItem = this.dataService.itemAt(index);\n    dataItem = isPresent(dataItem) ? dataItem : this.currentOrDefault(index);\n    const value = getter(dataItem, this.valueField);\n    const newSelection = event.newSelection;\n    return {\n      dataItem,\n      index,\n      newSelection,\n      value\n    };\n  }\n\n  currentOrDefault(selectedIndex) {\n    const defaultItemIndex = -1;\n\n    if (isPresent(this.dataItem) && selectedIndex !== defaultItemIndex) {\n      return this.dataItem;\n    } else {\n      return this.defaultItem;\n    }\n  }\n\n  firstFocusableIndex(index) {\n    const maxIndex = this.dataService.itemsCount - 1;\n\n    if (this.disabledItemsService.isIndexDisabled(index)) {\n      return index < maxIndex ? this.firstFocusableIndex(index + 1) : undefined;\n    } else {\n      return index;\n    }\n  }\n\n  handleEnter() {\n    if (this.isOpen) {\n      this.selectionService.change(this.selectionService.focused);\n      this.focus();\n    } else {\n      this.togglePopup(true);\n    }\n  }\n\n  handleEscape() {\n    if (isPresent(this.selectionService.selected[0])) {\n      this.selectionService.change(this.selectionService.selected[0]);\n    } else {\n      this.togglePopup(false);\n      this.clearFilter();\n    }\n\n    this.focus();\n  }\n\n  clearFilter() {\n    if (!(this.filterable && this.filterText)) {\n      return;\n    }\n\n    this.filterText = \"\";\n    this.cdr.markForCheck();\n    this.filterChange.emit(this.filterText);\n  }\n\n  verifySettings() {\n    if (!isDevMode()) {\n      return;\n    }\n\n    if (this.defaultItem && this.valueField && typeof this.defaultItem !== \"object\") {\n      throw new Error(DropDownListMessages.defaultItem);\n    }\n\n    if (this.valuePrimitive === true && isPresent(this.value) && typeof this.value === \"object\") {\n      throw new Error(DropDownListMessages.primitive);\n    }\n\n    if (this.valuePrimitive === false && isPresent(this.value) && typeof this.value !== \"object\") {\n      throw new Error(DropDownListMessages.object);\n    }\n\n    const valueOrText = !isPresent(this.valueField) !== !isPresent(this.textField);\n\n    if (valueOrText) {\n      throw new Error(DropDownListMessages.textAndValue);\n    }\n  }\n\n  componentBlur() {\n    this.isFocused = false;\n    const selectionPresent = isPresent(this.selectionService.selected[0]);\n    const valueHasChanged = selectionPresent && getter(this.value, this.valueField) !== getter(this.dataService.itemAt(this.selectionService.selected[0]), this.valueField);\n\n    if (valueHasChanged || hasObservers(this.close) || hasObservers(this.onBlur) || hasObservers(this.filterChange) || isUntouched(this.wrapper.nativeElement)) {\n      this._zone.run(() => {\n        if (valueHasChanged) {\n          this.selectionService.change(this.selectionService.selected[0]);\n        }\n\n        this.togglePopup(false);\n        this.clearFilter();\n        this.onBlur.emit();\n        this.onTouchedCallback();\n      });\n    } else {\n      this.togglePopup(false);\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  onMouseDown(event) {\n    const tagName = event.target.tagName.toLowerCase();\n\n    if (tagName !== \"input\") {\n      event.preventDefault();\n    }\n  }\n\n  onKeyPress(event) {\n    if (event.which === 0 || event.keyCode === Keys.Enter) {\n      return;\n    }\n\n    let character = String.fromCharCode(event.charCode || event.keyCode);\n\n    if (this.ignoreCase) {\n      character = character.toLowerCase();\n    }\n\n    if (character === \" \") {\n      event.preventDefault();\n    }\n\n    this.word += character;\n    this.last = character;\n    this.search();\n  }\n\n  search() {\n    clearTimeout(this.typingTimeout);\n\n    if (!this.filterable) {\n      this.typingTimeout = setTimeout(() => {\n        this.word = \"\";\n      }, this.delay);\n      this.selectNext();\n    }\n  }\n\n  selectNext() {\n    let data = this.dataService.filter(item => isPresent(item) && !item.header && !this.disabledItemsService.isItemDisabled(item)).map(item => {\n      if (this.dataService.grouped) {\n        return {\n          item: item.value,\n          itemIndex: item.offsetIndex\n        };\n      }\n\n      return {\n        item: item,\n        itemIndex: this.dataService.indexOf(item)\n      };\n    });\n    const isInLoop = sameCharsOnly(this.word, this.last);\n    let dataLength = data.length;\n    let hasSelected = !isNaN(this.selectionService.selected[0]);\n    let startIndex = !hasSelected ? 0 : this.selectionService.selected[0];\n    let text, index, defaultItem;\n\n    if (this.defaultItem && !this.disabledItemsService.isItemDisabled(this.defaultItem)) {\n      defaultItem = {\n        item: this.defaultItem,\n        itemIndex: -1\n      };\n      dataLength += 1;\n      startIndex += 1;\n    }\n\n    startIndex += isInLoop && hasSelected ? 1 : 0;\n    data = shuffleData(data, startIndex, defaultItem);\n    index = 0;\n\n    for (; index < dataLength; index++) {\n      text = getter(data[index].item, this.textField);\n      const loopMatch = Boolean(isInLoop && matchText(text, this.last, this.ignoreCase));\n      const nextMatch = Boolean(matchText(text, this.word, this.ignoreCase));\n\n      if (loopMatch || nextMatch) {\n        index = data[index].itemIndex;\n        break;\n      }\n    }\n\n    if (index !== dataLength) {\n      this.navigate(index);\n    }\n  }\n\n  emitChange(value) {\n    this.onChangeCallback(value);\n    this.valueChange.emit(value);\n  }\n\n  navigate(index) {\n    this.selectionService.select(index);\n  }\n\n  findDataItem({\n    valueField,\n    value\n  }) {\n    const result = {\n      dataItem: null,\n      index: -1\n    };\n\n    const prop = dataItem => getter(dataItem, valueField);\n\n    let comparer;\n\n    if (this.dataService.grouped) {\n      comparer = element => {\n        return prop(element.value) === prop(value);\n      };\n    } else {\n      comparer = element => {\n        return prop(element) === prop(value);\n      };\n    }\n\n    const index = this.dataService.findIndex(comparer);\n    result.dataItem = this.dataService.itemAt(index);\n    result.index = index;\n    return result;\n  }\n\n  setState() {\n    const value = this.value;\n    const valueField = this.valueField;\n    const textField = this.textField;\n    const primitive = this.valuePrimitive;\n\n    if (this.defaultItem) {\n      const defaultValue = getter(this.defaultItem, valueField);\n      const currentValue = getter(value, valueField);\n\n      if (!isPresent(value) || currentValue === defaultValue) {\n        this.updateState({\n          dataItem: this.defaultItem,\n          confirm: true\n        });\n        this.resetSelection(-1);\n\n        if (this.filterable && this.filterText && this.dataService.itemsCount) {\n          this.selectionService.focused = this.firstFocusableIndex(0);\n        }\n\n        return;\n      }\n    }\n\n    const resolved = this.findDataItem({\n      valueField,\n      value\n    }); // The data and value are of same shape,\n    // for example, value: 'foo', data: ['foo', 'bar']\n    // or value: { value: 1, text: 'foo' }, data: [{ value: 1, text: 'foo' }].\n\n    const ofSameType = !(primitive && textField);\n\n    if (resolved.dataItem) {\n      this.updateState({\n        dataItem: resolved.dataItem,\n        confirm: true\n      });\n      this.resetSelection(resolved.index);\n    } else if (isPresent(value) && ofSameType) {\n      this.updateState({\n        dataItem: value\n      });\n      this.resetSelection();\n    } else if (this._previousDataItem) {\n      this.updateState({\n        dataItem: this._previousDataItem\n      });\n      this.resetSelection();\n    } else {\n      this.clearState();\n      this.resetSelection();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleFilter(event) {\n    this.filterChange.emit(event.target.value);\n  }\n  /**\n   * @hidden\n   */\n\n\n  pageChange(event) {\n    const virtual = this.virtual;\n    virtual.skip = event.skip;\n  }\n\n  assignAriaDescribedBy() {\n    const currentValue = this.wrapper.nativeElement.getAttribute('aria-describedby') || '';\n    const trimmed = currentValue.replace(this.valueLabelId, '').trim(); // reset the value label ID to force readers to read the new value\n\n    this.valueLabelId = guid(); // add to the current value - don't replace it\n\n    const newValue = `${this.valueLabelId} ${trimmed}`.trim();\n    this.renderer.setAttribute(this.wrapper.nativeElement, 'aria-describedby', newValue);\n  }\n\n  setComponentClasses() {\n    if (this.size !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('picker', this.size));\n    }\n\n    if (this.rounded !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n    }\n\n    if (this.fillMode !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('picker', this.fillMode));\n    }\n  }\n\n}\n\nDropDownListComponent.ɵfac = function DropDownListComponent_Factory(t) {\n  return new (t || DropDownListComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i2.PopupService), i0.ɵɵdirectiveInject(SelectionService), i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(DisabledItemsService), i0.ɵɵdirectiveInject(DataService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(TOUCH_ENABLED, 8), i0.ɵɵdirectiveInject(i0.Injector));\n};\n\nDropDownListComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DropDownListComponent,\n  selectors: [[\"kendo-dropdownlist\"]],\n  contentQueries: function DropDownListComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ItemTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, GroupTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, FixedGroupTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, ValueTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, HeaderTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, FooterTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, NoDataTemplateDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.groupTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fixedGroupTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.valueTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.noDataTemplate = _t.first);\n    }\n  },\n  viewQuery: function DropDownListComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c8, 7, ViewContainerRef);\n      i0.ɵɵviewQuery(_c9, 7);\n      i0.ɵɵviewQuery(_c10, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.optionsList = _t.first);\n    }\n  },\n  hostVars: 20,\n  hostBindings: function DropDownListComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function DropDownListComponent_keydown_HostBindingHandler($event) {\n        return ctx.keydown($event);\n      })(\"keypress\", function DropDownListComponent_keypress_HostBindingHandler($event) {\n        return ctx.keypress($event);\n      })(\"click\", function DropDownListComponent_click_HostBindingHandler($event) {\n        return ctx.click($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"disabled\", ctx.isDisabledAttribute)(\"id\", ctx.focusableId)(\"dir\", ctx.dir)(\"tabindex\", ctx.hostTabIndex)(\"readonly\", ctx.readonlyAttr)(\"aria-busy\", ctx.isBusy)(\"role\", ctx.role)(\"aria-haspopup\", ctx.haspopup)(\"aria-expanded\", ctx.isAriaExpanded)(\"aria-controls\", ctx.hostAriaControls)(\"aria-invalid\", ctx.hostAriaInvalid)(\"aria-activedescendant\", ctx.hostAriaActivedescendant);\n      i0.ɵɵclassProp(\"k-dropdownlist\", ctx.hostClasses)(\"k-picker\", ctx.hostClasses)(\"k-disabled\", ctx.isDisabledClass)(\"k-loading\", ctx.isLoading);\n    }\n  },\n  inputs: {\n    iconClass: \"iconClass\",\n    loading: \"loading\",\n    data: \"data\",\n    value: \"value\",\n    textField: \"textField\",\n    valueField: \"valueField\",\n    popupSettings: \"popupSettings\",\n    listHeight: \"listHeight\",\n    defaultItem: \"defaultItem\",\n    disabled: \"disabled\",\n    itemDisabled: \"itemDisabled\",\n    readonly: \"readonly\",\n    filterable: \"filterable\",\n    virtual: \"virtual\",\n    ignoreCase: \"ignoreCase\",\n    delay: \"delay\",\n    valuePrimitive: \"valuePrimitive\",\n    tabindex: \"tabindex\",\n    tabIndex: \"tabIndex\",\n    size: \"size\",\n    rounded: \"rounded\",\n    fillMode: \"fillMode\",\n    focusableId: [\"id\", \"focusableId\"]\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    filterChange: \"filterChange\",\n    selectionChange: \"selectionChange\",\n    open: \"open\",\n    opened: \"opened\",\n    close: \"close\",\n    closed: \"closed\",\n    onFocus: \"focus\",\n    onBlur: \"blur\"\n  },\n  exportAs: [\"kendoDropDownList\"],\n  features: [i0.ɵɵProvidersFeature([DROPDOWNLIST_VALUE_ACCESSOR, DataService, SelectionService, NavigationService, DisabledItemsService, LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.dropdownlist'\n  }, {\n    provide: FilterableComponent,\n    useExisting: forwardRef(() => DropDownListComponent)\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(() => DropDownListComponent)\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 12,\n  vars: 10,\n  consts: function () {\n    let i18n_24;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text displayed in the popup when there are no items\n       * @meaning kendo.dropdownlist.noDataText\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_25 = goog.getMsg(\"NO DATA FOUND\");\n      i18n_24 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_25;\n    } else {\n      i18n_24 = $localize`:kendo.dropdownlist.noDataText|The text displayed in the popup when there are no items:NO DATA FOUND`;\n    }\n\n    let i18n_26;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text set as aria-label on the select button\n       * @meaning kendo.dropdownlist.selectButtonText\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_27 = goog.getMsg(\"Select\");\n      i18n_26 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_27;\n    } else {\n      i18n_26 = $localize`:kendo.dropdownlist.selectButtonText|The text set as aria-label on the select button:Select`;\n    }\n\n    return [[\"kendoDropDownListLocalizedMessages\", \"\", \"noDataText\", i18n_24, \"selectButtonText\", i18n_26], [\"unselectable\", \"on\", 1, \"k-input-inner\", 3, \"id\"], [1, \"k-input-value-text\"], [4, \"ngIf\"], [3, \"ngIf\"], [\"tabindex\", \"-1\", \"unselectable\", \"on\", \"type\", \"button\", 1, \"k-input-button\", \"k-button\", \"k-icon-button\", 3, \"ngClass\", \"kendoEventsOutsideAngular\"], [\"unselectable\", \"on\", 1, \"k-button-icon\", \"k-icon\", 3, \"ngClass\"], [\"popupTemplate\", \"\"], [\"container\", \"\"], [3, \"templateContext\"], [3, \"size\", \"rounded\", \"id\", \"optionPrefix\", \"data\", \"textField\", \"valueField\", \"template\", \"groupTemplate\", \"fixedGroupTemplate\", \"height\", \"show\", \"virtual\", \"ariaLive\", \"pageChange\"], [\"optionsList\", \"\"], [\"class\", \"k-no-data\", 4, \"ngIf\"], [1, \"k-list-filter\", 3, \"click\"], [1, \"k-searchbox\", \"k-input\", 3, \"ngClass\"], [\"unselectable\", \"on\", 1, \"k-input-icon\", \"k-icon\", \"k-i-search\"], [\"role\", \"searchbox\", \"aria-autocomplete\", \"list\", \"aria-haspopup\", \"listbox\", \"tabindex\", \"-1\", 1, \"k-input-inner\", 3, \"filterInput\", \"dir\", \"ngModel\", \"ngModelChange\", \"keydown\", \"input\", \"focus\", \"blur\"], [1, \"k-list\", 3, \"ngClass\"], [\"kendoDropDownsSelectable\", \"\", 1, \"k-list-optionlabel\", 3, \"ngClass\", \"index\"], [1, \"k-no-data\"], [3, \"ngIf\", \"templateContext\"], [3, \"resize\"]];\n  },\n  template: function DropDownListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵelementStart(1, \"span\", 1);\n      i0.ɵɵelementStart(2, \"span\", 2);\n      i0.ɵɵtemplate(3, DropDownListComponent_3_Template, 1, 4, undefined, 3);\n      i0.ɵɵtemplate(4, DropDownListComponent_ng_template_4_Template, 1, 1, \"ng-template\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 5);\n      i0.ɵɵelement(6, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, DropDownListComponent_ng_template_7_Template, 8, 20, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(9, DropDownListComponent_ng_template_9_Template, 1, 0, \"ng-template\", 4);\n      i0.ɵɵelementContainer(10, null, 8);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"id\", ctx.valueLabelId);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.valueTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.valueTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", ctx.selectButtonClasses)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction1(8, _c23, ctx.onMouseDown));\n      i0.ɵɵattribute(\"aria-label\", ctx.messageFor(\"selectButtonText\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", ctx.buttonClasses);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n    }\n  },\n  directives: [LocalizedMessagesDirective, i11.NgIf, i11.NgClass, i9.EventsOutsideAngularDirective, TemplateContextDirective, ListComponent, i12.DefaultValueAccessor, FilterInputDirective, i12.NgControlStatus, i12.NgModel, SelectableDirective, i9.ResizeSensorComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropDownListComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoDropDownList',\n      providers: [DROPDOWNLIST_VALUE_ACCESSOR, DataService, SelectionService, NavigationService, DisabledItemsService, LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.dropdownlist'\n      }, {\n        provide: FilterableComponent,\n        useExisting: forwardRef(() => DropDownListComponent)\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(() => DropDownListComponent)\n      }],\n      selector: 'kendo-dropdownlist',\n      template: `\n        <ng-container kendoDropDownListLocalizedMessages\n            i18n-noDataText=\"kendo.dropdownlist.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-selectButtonText=\"kendo.dropdownlist.selectButtonText|The text set as aria-label on the select button\"\n            selectButtonText=\"Select\"\n        >\n        </ng-container>\n        <span class=\"k-input-inner\" unselectable=\"on\" [id]=\"valueLabelId\">\n            <span class=\"k-input-value-text\">\n                <ng-template *ngIf=\"valueTemplate\"\n                    [templateContext]=\"{\n                        templateRef: valueTemplate.templateRef,\n                        $implicit: dataItem\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!valueTemplate\">{{ getText() }}</ng-template>\n            </span>\n        </span>\n        <button\n            tabindex=\"-1\"\n            unselectable=\"on\"\n            type=\"button\"\n            class=\"k-input-button k-button k-icon-button\"\n            [ngClass]=\"selectButtonClasses\"\n            [attr.aria-label]=\"messageFor('selectButtonText')\"\n            [kendoEventsOutsideAngular]=\"{\n                mousedown: onMouseDown\n            }\"\n        >\n            <span\n                class=\"k-button-icon k-icon\"\n                unselectable=\"on\"\n                [ngClass]=\"buttonClasses\"\n            ></span>\n        </button>\n        <ng-template #popupTemplate>\n            <!--filterable-->\n\n            <ng-template [ngIf]=\"filterable\">\n                <div class=\"k-list-filter\" (click)=\"$event.stopImmediatePropagation()\">\n                    <span\n                        class=\"k-searchbox k-input\"\n                        [ngClass]=\"filterInputClasses\"\n                    >\n                        <span class=\"k-input-icon k-icon k-i-search\" unselectable=\"on\"></span>\n                        <input\n                            role=\"searchbox\"\n                            aria-autocomplete=\"list\"\n                            aria-haspopup=\"listbox\"\n                            [attr.aria-controls]=\"ariaControls\"\n                            [attr.aria-activedescendant]=\"ariaActivedescendant\"\n                            tabindex=\"-1\"\n                            [filterInput]=\"isFocused && !touchEnabled\"\n                            [dir]=\"direction\"\n                            [(ngModel)]=\"filterText\"\n                            class=\"k-input-inner\"\n                            (keydown)=\"keydown($event)\"\n                            (input)=\"handleFilter($event)\"\n                            (focus)=\"onFilterFocus()\"\n                            (blur)=\"blurFilterInput()\" />\n                    </span>\n                </div>\n            </ng-template>\n            <!--default item-->\n            <ng-template [ngIf]=\"defaultItem && !itemTemplate\">\n                <div\n                    class=\"k-list\"\n                    [ngClass]=\"optionLabelSizeClass\"\n                >\n                    <div class=\"k-list-optionlabel\" [ngClass]=\"{ 'k-disabled': isDisabledDefaultItem }\" kendoDropDownsSelectable [index]=\"-1\">\n                        {{ getDefaultItemText() }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template [ngIf]=\"defaultItem && itemTemplate\">\n                <div\n                    class=\"k-list\"\n                    [ngClass]=\"optionLabelSizeClass\"\n                >\n                    <div class=\"k-list-optionlabel\" [ngClass]=\"{ 'k-disabled': isDisabledDefaultItem }\" kendoDropDownsSelectable [index]=\"-1\">\n                        <ng-template\n                            [templateContext]=\"{\n                                templateRef: itemTemplate.templateRef,\n                                $implicit: defaultItem\n                            }\">\n                        </ng-template>\n                    </div>\n                </div>\n            </ng-template>\n            <!--header template-->\n            <ng-template *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate.templateRef\n                }\">\n            </ng-template>\n            <!--list-->\n            <kendo-list\n                #optionsList\n                [size]=\"size\"\n                [rounded]=\"rounded\"\n                [id]=\"listBoxId\"\n                [optionPrefix]=\"optionPrefix\"\n                [data]=\"data\"\n                [textField]=\"textField\"\n                [valueField]=\"valueField\"\n                [template]=\"itemTemplate\"\n                [groupTemplate]=\"groupTemplate\"\n                [fixedGroupTemplate]=\"fixedGroupTemplate\"\n                [height]=\"listHeight\"\n                [show]=\"isOpen\"\n                [virtual]=\"virtual\"\n                [ariaLive]=\"ariaLive\"\n                (pageChange)=\"pageChange($event)\"\n                >\n            </kendo-list>\n            <!--no-data template-->\n            <div class=\"k-no-data\" *ngIf=\"data.length === 0\">\n                <ng-template [ngIf]=\"noDataTemplate\"\n                    [templateContext]=\"{\n                        templateRef: noDataTemplate ? noDataTemplate.templateRef : undefined\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!noDataTemplate\">\n                    <div>{{ messageFor('noDataText') }}</div>\n                </ng-template>\n            </div>\n            <!--footer template-->\n            <ng-template *ngIf=\"footerTemplate\"\n                [templateContext]=\"{\n                    templateRef: footerTemplate.templateRef\n                }\">\n            </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"isOpen\">\n            <kendo-resize-sensor (resize)=\"onResize()\"></kendo-resize-sensor>\n        </ng-template>\n        <ng-container #container></ng-container>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i2.PopupService\n    }, {\n      type: SelectionService\n    }, {\n      type: NavigationService\n    }, {\n      type: DisabledItemsService\n    }, {\n      type: DataService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TOUCH_ENABLED]\n      }]\n    }, {\n      type: i0.Injector\n    }];\n  }, {\n    iconClass: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    textField: [{\n      type: Input\n    }],\n    valueField: [{\n      type: Input\n    }],\n    popupSettings: [{\n      type: Input\n    }],\n    listHeight: [{\n      type: Input\n    }],\n    defaultItem: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    itemDisabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    virtual: [{\n      type: Input\n    }],\n    ignoreCase: [{\n      type: Input\n    }],\n    delay: [{\n      type: Input\n    }],\n    valuePrimitive: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [\"tabIndex\"]\n    }],\n    size: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    fillMode: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    filterChange: [{\n      type: Output\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    open: [{\n      type: Output\n    }],\n    opened: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    closed: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    itemTemplate: [{\n      type: ContentChild,\n      args: [ItemTemplateDirective, {\n        static: false\n      }]\n    }],\n    groupTemplate: [{\n      type: ContentChild,\n      args: [GroupTemplateDirective, {\n        static: false\n      }]\n    }],\n    fixedGroupTemplate: [{\n      type: ContentChild,\n      args: [FixedGroupTemplateDirective, {\n        static: false\n      }]\n    }],\n    valueTemplate: [{\n      type: ContentChild,\n      args: [ValueTemplateDirective, {\n        static: false\n      }]\n    }],\n    headerTemplate: [{\n      type: ContentChild,\n      args: [HeaderTemplateDirective, {\n        static: false\n      }]\n    }],\n    footerTemplate: [{\n      type: ContentChild,\n      args: [FooterTemplateDirective, {\n        static: false\n      }]\n    }],\n    noDataTemplate: [{\n      type: ContentChild,\n      args: [NoDataTemplateDirective, {\n        static: false\n      }]\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }],\n    popupTemplate: [{\n      type: ViewChild,\n      args: ['popupTemplate', {\n        static: true\n      }]\n    }],\n    optionsList: [{\n      type: ViewChild,\n      args: ['optionsList', {\n        static: false\n      }]\n    }],\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-dropdownlist']\n    }, {\n      type: HostBinding,\n      args: ['class.k-picker']\n    }],\n    isDisabledClass: [{\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }],\n    isDisabledAttribute: [{\n      type: HostBinding,\n      args: ['attr.disabled']\n    }],\n    isLoading: [{\n      type: HostBinding,\n      args: ['class.k-loading']\n    }],\n    focusableId: [{\n      type: Input,\n      args: ['id']\n    }, {\n      type: HostBinding,\n      args: ['attr.id']\n    }],\n    dir: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    hostTabIndex: [{\n      type: HostBinding,\n      args: ['attr.tabindex']\n    }],\n    readonlyClass: [{\n      type: HostBinding,\n      args: ['attr.readonly']\n    }],\n    readonlyAttr: [{\n      type: HostBinding,\n      args: ['attr.readonly']\n    }],\n    isBusy: [{\n      type: HostBinding,\n      args: ['attr.aria-busy']\n    }],\n    role: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    haspopup: [{\n      type: HostBinding,\n      args: ['attr.aria-haspopup']\n    }],\n    isAriaExpanded: [{\n      type: HostBinding,\n      args: ['attr.aria-expanded']\n    }],\n    hostAriaControls: [{\n      type: HostBinding,\n      args: ['attr.aria-controls']\n    }],\n    hostAriaInvalid: [{\n      type: HostBinding,\n      args: ['attr.aria-invalid']\n    }],\n    hostAriaActivedescendant: [{\n      type: HostBinding,\n      args: ['attr.aria-activedescendant']\n    }],\n    keydown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }],\n    keypress: [{\n      type: HostListener,\n      args: ['keypress', ['$event']]\n    }],\n    click: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n/**\n * Renders the content of the custom list item in the MultiSelect\n * ([see example]({% slug templates_multiselect %}#toc-customizing-the-item-content)).\n * The template context is set to the current component.\n * To get a reference to the current text that is typed by the\n * user, use the `let-customItem` directive.\n *\n * > The `CustomItemTemplate` directive can only be used with the MultiSelect component.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-multiselect [data]=\"listItems\" [allowCustom]=\"true\">\n *    <ng-template kendoMultiSelectCustomItemTemplate let-customItem>\n *      <span>New Item: {{customItem}}</span>\n *    </ng-template>\n *  </kendo-multiselect>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n *\n */\n\n\nclass CustomItemTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nCustomItemTemplateDirective.ɵfac = function CustomItemTemplateDirective_Factory(t) {\n  return new (t || CustomItemTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nCustomItemTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CustomItemTemplateDirective,\n  selectors: [[\"\", \"kendoMultiSelectCustomItemTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomItemTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoMultiSelectCustomItemTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Renders the selected tag value of the MultiSelect\n * ([see example]({% slug templates_multiselect %}#toc-tag-template)).\n * The template context is set to the current component.\n * To get a reference to the current data item, use the `let-dataItem` directive.\n *\n * > The `TagTemplate` directive can only be used with the MultiSelect and MultiSelectTree components.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-multiselect [data]=\"items\">\n *    <ng-template kendoMultiSelectTagTemplate let-dataItem>\n *      <span>{{dataItem}} option</span>\n *    </ng-template>\n *  </kendo-multiselect>\n * `\n * })\n * class AppComponent {\n *   public items: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\n\n\nclass TagTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nTagTemplateDirective.ɵfac = function TagTemplateDirective_Factory(t) {\n  return new (t || TagTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nTagTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TagTemplateDirective,\n  selectors: [[\"\", \"kendoMultiSelectTagTemplate\", \"\"], [\"\", \"kendoMultiSelectTreeTagTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TagTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoMultiSelectTagTemplate],[kendoMultiSelectTreeTagTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Renders the grouped tag values in the MultiSelect\n * ([see example]({% slug summarytagmode_multiselect %})).\n * The template context is set to the current component.\n * To get a reference to the current grouped\n * data items collection, use the `let-dataItems` directive.\n *\n * > The `GroupTagTemplate` directive can only be used with the MultiSelect and MultiSelectTree components.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-multiselect kendoMultiSelectSummaryTag [data]=\"items\">\n *    <ng-template kendoMultiSelectGroupTagTemplate let-dataItems>\n *      <span>{{dataItems.length}} item(s) selected</span>\n *    </ng-template>\n *  </kendo-multiselect>\n * `\n * })\n * class AppComponent {\n *   public items: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\n\n\nclass GroupTagTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nGroupTagTemplateDirective.ɵfac = function GroupTagTemplateDirective_Factory(t) {\n  return new (t || GroupTagTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nGroupTagTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GroupTagTemplateDirective,\n  selectors: [[\"\", \"kendoMultiSelectGroupTagTemplate\", \"\"], [\"\", \"kendoMultiSelectTreeGroupTagTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GroupTagTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoMultiSelectGroupTagTemplate],[kendoMultiSelectTreeGroupTagTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Arguments for the `removeTag` event. The `removeTag` event fires when a tag is about\n * to the removed. If you cancel the event, the removal is prevented.\n */\n\n\nclass RemoveTagEvent extends PreventableEvent {\n  /**\n   * Constructs the event arguments for the `remove` event.\n   * @param dataItem - The data item or an array of data items that will be removed.\n   */\n  constructor(dataItem) {\n    super();\n    this.dataItem = dataItem;\n  }\n\n}\n/**\n * @hidden\n */\n\n\nconst normalizeCheckboxesSettings = settings => {\n  if (isObject(settings)) {\n    const defaultSettings = {\n      enabled: true,\n      checkOnClick: true\n    };\n    return Object.assign({}, defaultSettings, settings);\n  }\n\n  return {\n    enabled: Boolean(settings),\n    checkOnClick: true\n  };\n};\n/**\n * @hidden\n */\n\n\nclass TagListComponent {\n  constructor(renderer, hostElement) {\n    this.renderer = renderer;\n    this.hostElement = hostElement;\n    this.rounded = 'medium';\n    this.fillMode = 'solid';\n    /**\n     * A collection with the disabled tags' indices.\n     */\n\n    this.disabledIndices = new Set();\n    this.removeTag = new EventEmitter();\n    this.hostClasses = true;\n    this._size = 'medium';\n  }\n\n  set size(size) {\n    this.renderer.removeClass(this.hostElement.nativeElement, getSizeClass('chip-list', this.size));\n\n    if (size) {\n      this.renderer.addClass(this.hostElement.nativeElement, getSizeClass('chip-list', size));\n    }\n\n    this._size = size;\n  }\n\n  get size() {\n    return this._size;\n  }\n\n  get hostId() {\n    return this.id;\n  }\n\n  tagProp(tag, prop, index) {\n    const propField = prop && this.getPropField(tag, prop, index);\n    return getter(tag, propField);\n  }\n\n  isTagDisabled(tag, positionIndex) {\n    if (this.isGroupTag(tag)) {\n      /** The `positionIndex` is used to determine after how many single tags is the group tag displayed =>\n       * => it is used to increment the indices inside the group tag so that we determine the actual position index\n       * of each group tag item as they appear in the `value` (important to check against `disabledIndices`)\n       * e.g. `disabledIndices = [0, 1]` && `tags = ['Small', ['Medium', 'Large']]` => without the incrementation with\n       * `positionIndex`, the group tag would yield [0, 1] as indices, while it should yield [1, 2]\n       */\n      return tag.every((_tag, index) => this.disabledIndices.has(index + positionIndex));\n    }\n\n    return this.disabledIndices.has(positionIndex);\n  }\n\n  deleteTag(event, tag, index) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n\n    if (!this.disabled && event.which === 1) {\n      this.removeTag.emit({\n        tag,\n        index\n      });\n    }\n  }\n\n  itemId(tag, index) {\n    if (tag) {\n      //because of custom values\n      return this.tagPrefix + \"-\" + this.tagProp(tag, this.valueField, index);\n    }\n  }\n\n  isGroupTag(tag) {\n    return tag instanceof Array;\n  }\n\n  tagAriaHidden(index) {\n    return isPresent(this.focused) && this.focused !== index;\n  }\n\n  getPropField(tag, prop, index) {\n    // Needed for MultiSelectTree value binding (Heterogeneous Data)\n    const fieldsCount = prop.length - 1;\n\n    if (typeof prop === 'string') {\n      return prop;\n    } else if (this.valueDepth) {\n      const depth = this.valueDepth[index];\n      return fieldsCount < depth ? prop[fieldsCount] : prop[depth];\n    } else {\n      return prop.find(item => item in tag);\n    }\n  }\n\n}\n\nTagListComponent.ɵfac = function TagListComponent_Factory(t) {\n  return new (t || TagListComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nTagListComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TagListComponent,\n  selectors: [[\"kendo-taglist\"]],\n  hostVars: 7,\n  hostBindings: function TagListComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"id\", ctx.hostId);\n      i0.ɵɵclassProp(\"k-input-values\", ctx.hostClasses)(\"k-chip-list\", ctx.hostClasses)(\"k-selection-multiple\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    tags: \"tags\",\n    textField: \"textField\",\n    valueField: \"valueField\",\n    valueDepth: \"valueDepth\",\n    focused: \"focused\",\n    template: \"template\",\n    groupTemplate: \"groupTemplate\",\n    disabled: \"disabled\",\n    tagPrefix: \"tagPrefix\",\n    id: \"id\",\n    size: \"size\",\n    rounded: \"rounded\",\n    fillMode: \"fillMode\",\n    disabledIndices: \"disabledIndices\"\n  },\n  outputs: {\n    removeTag: \"removeTag\"\n  },\n  ngContentSelectors: _c30,\n  decls: 2,\n  vars: 1,\n  consts: [[\"class\", \"k-chip\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"k-chip\", 3, \"ngClass\"], [1, \"k-chip-content\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"groupTag\", \"\"], [\"singleTag\", \"\"], [1, \"k-chip-actions\"], [\"aria-label\", \"delete\", 1, \"k-chip-action\", \"k-chip-remove-action\"], [1, \"k-icon\", \"k-i-x-circle\", 3, \"mousedown\"], [1, \"k-chip-label\", \"k-text-ellipsis\"], [4, \"ngIf\"], [3, \"ngIf\"], [3, \"templateContext\"]],\n  template: function TagListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, TagListComponent_div_0_Template, 10, 20, \"div\", 0);\n      i0.ɵɵprojection(1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.tags);\n    }\n  },\n  directives: [i11.NgForOf, i11.NgClass, i11.NgIf, TemplateContextDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TagListComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-taglist',\n      template: `\n        <div\n            *ngFor=\"let tag of tags; let index = index;\"\n            [attr.id]=\"itemId(tag, index)\"\n            [attr.aria-hidden]=\"tagAriaHidden(index)\"\n            class=\"k-chip\"\n            [ngClass]=\"{\n                'k-focus': index === focused,\n                'k-disabled': isTagDisabled(tag, index),\n                'k-chip-sm': size === 'small',\n                'k-chip-md': size === 'medium',\n                'k-chip-lg': size === 'large',\n                'k-rounded-sm': rounded === 'small',\n                'k-rounded-md': rounded === 'medium',\n                'k-rounded-lg': rounded === 'large',\n                'k-rounded-full': rounded === 'full',\n                'k-chip-solid k-chip-solid-base': fillMode === 'solid',\n                'k-chip-flat k-chip-flat-base': fillMode === 'flat',\n                'k-chip-outline k-chip-outline-base': fillMode === 'outline'\n            }\"\n        >\n            <span class=\"k-chip-content\">\n                <ng-template *ngIf=\"isGroupTag(tag); then groupTag else singleTag\"></ng-template>\n                <ng-template #groupTag>\n                    <span class=\"k-chip-label k-text-ellipsis\">\n                        <ng-template *ngIf=\"groupTemplate\"\n                            [templateContext]=\"{\n                            templateRef: groupTemplate.templateRef,\n                            $implicit: tag\n                        }\">\n                        </ng-template>\n                        <ng-template [ngIf]=\"!groupTemplate\">{{ tag.length }} {{ tag.length === 1 ? 'item' : 'items' }} selected</ng-template>\n                    </span>\n                </ng-template>\n                <ng-template #singleTag>\n                    <span class=\"k-chip-label k-text-ellipsis\">\n                        <ng-template *ngIf=\"template\"\n                            [templateContext]=\"{\n                            templateRef: template.templateRef,\n                            $implicit: tag\n                        }\">\n                        </ng-template>\n                        <ng-template [ngIf]=\"!template\">{{ tagProp(tag, textField, index) }}</ng-template>\n                    </span>\n                </ng-template>\n            </span>\n\n            <span class=\"k-chip-actions\">\n                <span aria-label=\"delete\" [attr.aria-hidden]=\"index !== focused\" class=\"k-chip-action k-chip-remove-action\">\n                    <span class=\"k-icon k-i-x-circle\" (mousedown)=\"deleteTag($event, tag, index)\">\n                    </span>\n                </span>\n            </span>\n        </div>\n        <ng-content></ng-content>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    tags: [{\n      type: Input\n    }],\n    textField: [{\n      type: Input\n    }],\n    valueField: [{\n      type: Input\n    }],\n    valueDepth: [{\n      type: Input\n    }],\n    focused: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    groupTemplate: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    tagPrefix: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    fillMode: [{\n      type: Input\n    }],\n    disabledIndices: [{\n      type: Input\n    }],\n    removeTag: [{\n      type: Output\n    }],\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-input-values']\n    }, {\n      type: HostBinding,\n      args: ['class.k-chip-list']\n    }, {\n      type: HostBinding,\n      args: ['class.k-selection-multiple']\n    }],\n    hostId: [{\n      type: HostBinding,\n      args: ['attr.id']\n    }]\n  });\n})();\n\nconst MULTISELECT_VALUE_ACCESSOR = {\n  multi: true,\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MultiSelectComponent)\n};\nconst DEFAULT_SIZE$2 = 'medium';\nconst DEFAULT_ROUNDED$2 = 'medium';\nconst DEFAULT_FILL_MODE$2 = 'solid';\n/**\n * Represents the [Kendo UI MultiSelect component for Angular]({% slug overview_multiselect %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-multiselect [data]=\"listItems\">\n *  </kendo-multiselect>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\n\nclass MultiSelectComponent {\n  constructor(wrapper, localization, popupService, dataService, selectionService, navigationService, disabledItemsService, cdr, differs, renderer, _zone, touchEnabled) {\n    this.wrapper = wrapper;\n    this.localization = localization;\n    this.popupService = popupService;\n    this.dataService = dataService;\n    this.selectionService = selectionService;\n    this.navigationService = navigationService;\n    this.disabledItemsService = disabledItemsService;\n    this.cdr = cdr;\n    this.differs = differs;\n    this.renderer = renderer;\n    this._zone = _zone;\n    this.touchEnabled = touchEnabled;\n    this.listBoxId = guid();\n    this.tagListId = guid();\n    this.tagPrefix = \"tag-\" + guid();\n    this.optionPrefix = \"option-\" + guid();\n    this.focusedTagIndex = undefined;\n    /**\n     * @hidden\n     */\n\n    this.focusableId = `k-${guid()}`;\n    /**\n     * Determines whether to close the options list of the MultiSelect after the item selection is finished\n     * ([see example]({% slug openstate_multiselect %}#toc-keeping-the-options-list-open-while-on-focus)).\n     * @default true\n     */\n\n    this.autoClose = true;\n    /**\n     * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n\n    this.tabindex = 0;\n    /**\n     * Sets the disabled state of the component.\n     */\n\n    this.disabled = false;\n    /**\n     * Sets the read-only state of the component.\n     */\n\n    this.readonly = false;\n    /**\n     * Enables the [filtering]({% slug filtering_multiselect %}) functionality of the MultiSelect.\n     */\n\n    this.filterable = false;\n    /**\n     * Sets the height of the suggestions list. By default, `listHeight` is 200px.\n     *\n     * > The `listHeight` property affects only the list of suggestions and not the whole popup container.\n     * > To set the height of the popup container, use `popupSettings.height`.\n     */\n\n    this.listHeight = 200;\n    /**\n     * If set to `true`, renders a button on hovering over the component.\n     * Clicking this button resets the value of the component to an empty array and triggers the `change` event.\n     */\n\n    this.clearButton = true;\n    /**\n     * A user-defined callback function which receives an array of selected data items and maps them to an array of tags\n     * ([see examples]({% slug summarytagmode_multiselect %}#toc-rendering-of-tags)).\n     *\n     * @param { Any[] } dataItems - The selected data items from the list.\n     * @returns { Any[] } - The tags that will be rendered by the component.\n     */\n\n    this.tagMapper = tags => tags || [];\n    /**\n     * Specifies whether the MultiSelect allows user-defined values that are not present in the dataset\n     * ([more information and examples]({% slug custom_values_multiselect %})).\n     * Defaults to `false`.\n     */\n\n\n    this.allowCustom = false;\n    /**\n     * A user-defined callback function which returns normalized custom values.\n     * Typically used when the data items are different from type `string`.\n     *\n     * @param { Any } value - The custom value that is defined by the user.\n     * @returns { Any }\n     *\n     * @example\n     * ```ts\n     * import { map } from 'rxjs/operators';\n     *\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *   <kendo-multiselect\n     *       [allowCustom]=\"true\"\n     *       [data]=\"listItems\"\n     *       textField=\"text\"\n     *       valueField=\"value\"\n     *       [valueNormalizer]=\"valueNormalizer\"\n     *       (valueChange)=\"onValueChange($event)\"\n     *   >\n     *   </kendo-multiselect>\n     * `\n     * })\n     *\n     * class AppComponent {\n     *   public listItems: Array<{ text: string, value: number }> = [\n     *       { text: \"Small\", value: 1 },\n     *       { text: \"Medium\", value: 2 },\n     *       { text: \"Large\", value: 3 }\n     *   ];\n     *\n     *   public onValueChange(value) {\n     *       console.log(\"valueChange : \", value);\n     *   }\n     *\n     *   public valueNormalizer = (text$: Observable<string>) => text$.pipe(map((text: string) => {\n     *      return {\n     *         value: Math.floor(Math.random() * (1000 - 100) + 1000), //generate unique valueField\n     *         text: text };\n     *   }));\n     *\n     * }\n     * ```\n     */\n\n    this.valueNormalizer = text => text.pipe(map(userInput => {\n      const comparer = item => typeof item === 'string' && userInput.toLowerCase() === item.toLowerCase();\n\n      const matchingValue = this.value.find(comparer);\n\n      if (matchingValue) {\n        return matchingValue;\n      }\n\n      const matchingItem = this.dataService.find(comparer);\n      return matchingItem ? matchingItem : userInput;\n    }));\n    /**\n     * Fires each time the user types in the input field.\n     * You can filter the source based on the passed filtration value.\n     */\n\n\n    this.filterChange = new EventEmitter();\n    /**\n     * Fires each time the value is changed&mdash;\n     * when the component is blurred or the value is cleared through the **Clear** button\n     * ([see example]({% slug overview_multiselect %}#toc-events)).\n     * When the value of the component is programmatically changed to `ngModel` or `formControl`\n     * through its API or form binding, the `valueChange` event is not triggered because it\n     * might cause a mix-up with the built-in `valueChange` mechanisms of the `ngModel` or `formControl` bindings.\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires each time the popup is about to open\n     * ([see example]({% slug openstate_multiselect %}#toc-preventing-opening-and-closing)).\n     * This event is preventable. If you cancel it, the popup will remain closed.\n     */\n\n    this.open = new EventEmitter();\n    /**\n     * Fires after the popup has been opened.\n     */\n\n    this.opened = new EventEmitter();\n    /**\n     * Fires each time the popup is about to close\n     * ([see example]({% slug openstate_multiselect %}#toc-preventing-opening-and-closing)).\n     * This event is preventable. If you cancel it, the popup will remain open.\n     */\n\n    this.close = new EventEmitter();\n    /**\n     * Fires after the popup has been closed.\n     */\n\n    this.closed = new EventEmitter();\n    /**\n     * Fires each time the user focuses the MultiSelect.\n     */\n\n    this.onFocus = new EventEmitter();\n    /**\n     * Fires each time the MultiSelect gets blurred.\n     */\n\n    this.onBlur = new EventEmitter();\n    /**\n     * Fires each time a tag is about to be removed([see examples]({% slug summarytagmode_multiselecttree %}#toc-notifying-on-removing-group-tags)).\n     * This event is preventable. If you cancel it, the tag will not be removed.\n     */\n\n    this.removeTag = new EventEmitter();\n    this.hostClasses = true;\n    this.initialized = false;\n    this._size = 'medium';\n    this._rounded = 'medium';\n    this._fillMode = 'solid';\n\n    this.onChangeCallback = _ => {};\n\n    this.onTouchedCallback = _ => {};\n\n    this._placeholder = '';\n    this._open = false;\n    this._value = [];\n    this._popupSettings = {\n      animate: true\n    };\n    this._checkboxes = {\n      enabled: false\n    };\n    this._isFocused = false;\n    this.selectedDataItems = [];\n    this.customValueSubject = new Subject();\n    this.observableSubscriptions = new Subscription();\n    validatePackage(packageMetadata);\n    this.popupMouseDownHandler = this.onMouseDown.bind(this);\n    this.data = [];\n    this.direction = this.localization.rtl ? 'rtl' : 'ltr';\n    this.subscribeEvents();\n    this.subscribeTouchEvents();\n  }\n  /**\n   * Focuses a specific item of the MultiSelect based on a provided index.\n   * If there is a custom item it is positioned at index -1.\n   * If null or invalid index is provided the focus will be removed.\n   */\n\n\n  focusItemAt(index) {\n    const minIndex = this.allowCustom ? -1 : 0;\n    const isInRange = minIndex <= 0 && index < this.data.length;\n\n    if (isPresent(index) && isInRange && !this.disabledItemsService.isIndexDisabled(index)) {\n      this.selectionService.focus(index);\n    } else {\n      this.selectionService.focus(null);\n    }\n  }\n  /**\n   * Focuses the MultiSelect.\n   */\n\n\n  focus() {\n    if (!this.disabled) {\n      this.searchbar.focus();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  onSearchBarFocus() {\n    if (!this.isFocused) {\n      this.isFocused = true;\n\n      if (hasObservers(this.onFocus)) {\n        this._zone.run(() => {\n          this.onFocus.emit();\n        });\n      }\n    }\n  }\n  /**\n   * Blurs the MultiSelect.\n   */\n\n\n  blur() {\n    if (!this.disabled) {\n      this.searchbar.blur();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  onSearchBarBlur() {\n    if (!this.isFocused) {\n      return;\n    }\n\n    this.isFocused = false;\n\n    if (hasObservers(this.onBlur) || hasObservers(this.filterChange) || hasObservers(this.close) || isUntouched(this.wrapper.nativeElement)) {\n      this._zone.run(() => {\n        this.closePopup();\n\n        if (!(this.isOpen && this.allowCustom)) {\n          this.clearFilter();\n        }\n\n        this.onBlur.emit();\n        this.onTouchedCallback();\n      });\n    } else {\n      if (!this.allowCustom) {\n        this.clearFilter();\n      }\n\n      this.closePopup();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  onMouseDown(event) {\n    event.preventDefault();\n  }\n  /**\n   * @hidden\n   */\n\n\n  onResize() {\n    if (this._open) {\n      const popupWrapper = this.popupRef.popupElement;\n      const {\n        min,\n        max\n      } = this.width;\n      popupWrapper.style.minWidth = min;\n      popupWrapper.style.width = max;\n    }\n  }\n\n  get appendTo() {\n    const {\n      appendTo\n    } = this.popupSettings;\n\n    if (!appendTo || appendTo === 'root') {\n      return undefined;\n    }\n\n    return appendTo === 'component' ? this.container : appendTo;\n  }\n  /**\n   * Sets the data of the MultiSelect.\n   *\n   * > The data has to be provided in an array-like list of items.\n   */\n\n\n  set data(data) {\n    this.dataService.data = data || [];\n\n    if (this.virtual) {\n      this.virtual.skip = 0;\n    }\n\n    if (this.initialized) {\n      this.setState(this.value);\n    }\n  }\n\n  get data() {\n    const virtual = this.virtual;\n\n    if (virtual) {\n      const start = virtual.skip || 0;\n      const end = start + virtual.pageSize; //Use length instead of itemsCount because of grouping\n\n      virtual.total = this.dataService.data.length;\n      return this.dataService.data.slice(start, end);\n    }\n\n    return this.dataService.data;\n  }\n  /**\n   * Sets the value of the MultiSelect. It can be either of the primitive (string, numbers) or of the complex (objects) type.\n   * To define the type, use the `valuePrimitive` option.\n   *\n   * > All selected values which are not present in the source are ignored.\n   */\n\n\n  set value(values) {\n    this._value = values ? values : [];\n\n    if (!this.differ && this.value) {\n      this.differ = this.differs.find(this.value).create();\n    }\n\n    this.valueChangeDetected = true;\n\n    if (this.initialized) {\n      this.setState(this.value);\n    }\n  }\n\n  get value() {\n    return this._value;\n  }\n  /**\n   * @hidden\n   */\n\n\n  set tabIndex(tabIndex) {\n    this.tabindex = tabIndex;\n  }\n\n  get tabIndex() {\n    return this.tabindex;\n  }\n  /**\n   * Sets the size of the component.\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `none`\n   *\n   */\n\n\n  set size(size) {\n    const newSize = size ? size : DEFAULT_SIZE$2;\n    this.renderer.removeClass(this.wrapper.nativeElement, getSizeClass('input', this.size));\n\n    if (size !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('input', newSize));\n    }\n\n    this._size = newSize;\n  }\n\n  get size() {\n    return this._size;\n  }\n  /**\n   * Sets the border radius of the component.\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `full`\n   * * `none`\n   *\n   */\n\n\n  set rounded(rounded) {\n    const newRounded = rounded ? rounded : DEFAULT_ROUNDED$2;\n    this.renderer.removeClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n\n    if (rounded !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(newRounded));\n    }\n\n    this._rounded = newRounded;\n  }\n\n  get rounded() {\n    return this._rounded;\n  }\n  /**\n   * Sets the fillMode of the component.\n   *\n   * The possible values are:\n   * * `flat`\n   * * `solid` (default)\n   * * `outline`\n   * * `none`\n   *\n   */\n\n\n  set fillMode(fillMode) {\n    const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$2;\n    this.renderer.removeClass(this.wrapper.nativeElement, getFillModeClass('input', this.fillMode));\n\n    if (fillMode !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('input', newFillMode));\n    }\n\n    this._fillMode = newFillMode;\n  }\n\n  get fillMode() {\n    return this._fillMode;\n  }\n  /**\n   * The hint which is displayed when the component is empty.\n   * When the values are selected, it disappears.\n   */\n\n\n  set placeholder(text) {\n    this._placeholder = text || '';\n  }\n\n  get placeholder() {\n    return this.selectedDataItems.length ? '' : this._placeholder;\n  }\n  /**\n   * Defines a Boolean function that is executed for each data item in the component\n   * ([see examples]({% slug disableditems_multiselect %})). Determines whether the item will be disabled.\n   */\n\n\n  set itemDisabled(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error(`itemDisabled must be a function, but received ${JSON.stringify(fn)}.`);\n    }\n\n    this.disabledItemsService.itemDisabled = fn;\n  }\n  /**\n   * Specifies whether checkboxes will be rendered before each item in the popup list.\n   */\n\n\n  set checkboxes(settings) {\n    this._checkboxes = normalizeCheckboxesSettings(settings);\n  }\n\n  get checkboxes() {\n    return this._checkboxes;\n  }\n  /**\n   * Enables the [virtualization]({% slug virtualization_multiselect %}) functionality.\n   */\n\n\n  set virtual(settings) {\n    this._virtualSettings = normalizeVirtualizationSettings(settings);\n  }\n\n  get virtual() {\n    return this._virtualSettings;\n  }\n  /**\n   * Configures the popup of the MultiSelect.\n   *\n   * The available options are:\n   * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n   * - `width: Number | String`&mdash;Sets the width of the popup container. By default, the width of the host element is used. If set to `auto`, the component automatically adjusts the width of the popup and no item labels are wrapped. The `auto` mode is not supported when virtual scrolling is enabled.\n   * - `height: Number`&mdash;Sets the height of the popup container.\n   * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n   * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n   */\n\n\n  set popupSettings(settings) {\n    this._popupSettings = Object.assign({\n      animate: true\n    }, settings);\n  }\n\n  get popupSettings() {\n    return this._popupSettings;\n  }\n  /**\n   * Specifies the type of the selected value.\n   * If set to `true`, the selected value has to be of the primitive type\n   * ([more information and example]({% slug valuebinding_multiselect %}#toc-primitive-values-from-object-fields)).\n   */\n\n\n  set valuePrimitive(isPrimitive) {\n    this._valuePrimitive = isPrimitive;\n  }\n\n  get valuePrimitive() {\n    if (!isPresent(this._valuePrimitive)) {\n      return !isPresent(this.valueField);\n    }\n\n    return this._valuePrimitive;\n  }\n\n  get dir() {\n    return this.direction;\n  }\n\n  get disabledClass() {\n    return this.disabled;\n  }\n\n  get isLoading() {\n    return this.loading;\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleKeyboardEvent(event) {\n    if (this.isFocused && this.isOpen && (event.ctrlKey || event.metaKey) && event.keyCode === Keys.KeyA) {\n      event.preventDefault();\n      this.handleSelectAll();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  hostMousedown(event) {\n    const inputElement = this.searchbar.input.nativeElement;\n\n    if (event.button === 0) {\n      if (this.isFocused && this.isOpen && event.target === inputElement) {\n        return;\n      }\n\n      if (!this.touchEnabled || this.touchEnabled && event.target.tagName !== 'SPAN') {\n        this.searchbar.focus();\n      }\n\n      this.togglePopup(!this.isOpen);\n      event.preventDefault();\n    }\n  }\n\n  get listContainerClasses() {\n    const containerClasses = ['k-list-container', 'k-reset'];\n\n    if (this.popupSettings.popupClass) {\n      containerClasses.push(this.popupSettings.popupClass);\n    }\n\n    return containerClasses;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get customItemSizeClass() {\n    return `${this.size ? getSizeClass('list', this.size) : ''}`;\n  }\n\n  get width() {\n    let wrapperOffsetWidth = 0;\n\n    if (isDocumentAvailable()) {\n      wrapperOffsetWidth = this.wrapper.nativeElement.offsetWidth;\n    }\n\n    const width = this.popupSettings.width || wrapperOffsetWidth;\n    const minWidth = isNaN(wrapperOffsetWidth) ? wrapperOffsetWidth : `${wrapperOffsetWidth}px`;\n    const maxWidth = isNaN(width) ? width : `${width}px`;\n    return {\n      min: minWidth,\n      max: maxWidth\n    };\n  }\n\n  get height() {\n    const popupHeight = this.popupSettings.height;\n    return isPresent(popupHeight) ? `${popupHeight}px` : 'auto';\n  }\n\n  get activeDescendant() {\n    const focusedTagIndex = this.focusedTagIndex;\n    const focusedListIndex = this.selectionService.focused;\n    let prefix;\n    let item;\n\n    if (isPresent(focusedTagIndex) && !this.isOpen) {\n      item = this.tags[focusedTagIndex];\n      prefix = this.tagPrefix;\n    } else if (isPresent(focusedListIndex) && focusedListIndex !== -1 && this.isOpen) {\n      item = this.dataService.itemAt(focusedListIndex);\n      prefix = this.optionPrefix;\n    } else {\n      return null;\n    }\n\n    return prefix + \"-\" + getter(item, this.valueField);\n  }\n\n  get clearButtonVisiblity() {\n    if (this.touchEnabled) {\n      return 'visible';\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  verifySettings() {\n    if (!isDevMode() || this.value.length === 0) {\n      return;\n    }\n\n    if (!isArray(this.value)) {\n      throw new Error(MultiselectMessages.array);\n    }\n\n    if (this.valuePrimitive === true && isObjectArray(this.value)) {\n      throw new Error(MultiselectMessages.primitive);\n    }\n\n    if (this.valuePrimitive === false && !isObjectArray(this.value)) {\n      throw new Error(MultiselectMessages.object);\n    }\n\n    const valueOrText = !isPresent(this.valueField) !== !isPresent(this.textField);\n\n    if (valueOrText) {\n      throw new Error(MultiselectMessages.textAndValue);\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  change(event) {\n    if (event.isMultipleSelection) {\n      // Existing items.\n      if (isPresent(event.added) && event.added.length > 0) {\n        event.added.forEach(itemIndex => {\n          const dataItem = this.dataService.itemAt(itemIndex);\n          const newItem = this.valuePrimitive && isPresent(dataItem) && isPresent(dataItem[this.valueField]) ? dataItem[this.valueField] : dataItem;\n\n          if (newItem) {\n            this.value = [...this.value, newItem];\n          }\n        });\n      }\n\n      if (isPresent(event.removed) && event.removed.length > 0) {\n        event.removed.forEach(itemIndex => {\n          const dataItem = this.dataService.itemAt(itemIndex);\n\n          const filter = item => getter(item, this.valueField) !== getter(dataItem, this.valueField);\n\n          this.value = this.value.filter(filter);\n        });\n        this.cdr.detectChanges();\n      }\n    } else {\n      const isCustomItem = (isPresent(event.added) || isPresent(event.removed)) && (event.added === -1 || event.removed === -1);\n\n      if (isCustomItem) {\n        this.addCustomValue(this.text);\n        return; // The change is emited asynchronosly.\n      } // Existing items.\n\n\n      if (isPresent(event.added)) {\n        const dataItem = this.dataService.itemAt(event.added);\n        const newItem = this.valuePrimitive && isPresent(dataItem) && isPresent(dataItem[this.valueField]) ? dataItem[this.valueField] : dataItem;\n        this.value = [...this.value, newItem];\n      }\n\n      if (isPresent(event.removed)) {\n        const dataItem = this.dataService.itemAt(event.removed);\n\n        const filter = item => getter(item, this.valueField) !== getter(dataItem, this.valueField);\n\n        this.value = this.value.filter(filter);\n        this.selectionService.focused = event.removed;\n        this.cdr.detectChanges();\n      }\n    }\n\n    this.emitValueChange();\n  }\n  /**\n   * @hidden\n   */\n\n\n  setState(value) {\n    let data = this.dataService.data;\n\n    if (this.dataService.grouped) {\n      data = data.filter(item => !item.header).map(item => item.value);\n    }\n\n    const selection = selectedIndices(this.value, data, this.valueField);\n    this.selectionService.resetSelection(selection);\n\n    if (this.disabledItemsService.isIndexDisabled(this.selectionService.focused)) {\n      this.selectionService.focused = this.firstFocusableIndex(0);\n    }\n\n    if (this.isOpen && this.selectionService.focused === undefined) {\n      if (this.dataService.itemsCount > 0) {\n        this.selectionService.focused = this.firstFocusableIndex(0);\n      } else if (this.allowCustom) {\n        this.selectionService.focused = -1;\n      }\n    }\n\n    if (this.valuePrimitive && !this.valueField) {\n      this.selectedDataItems = value.slice();\n    }\n\n    if (isObjectArray(value) || this.valuePrimitive && this.valueField) {\n      this.selectedDataItems = resolveAllValues(value, data, this.valueField);\n    }\n\n    if (this.selectedDataItems.length < value.length) {\n      this.selectedDataItems = value.map(current => {\n        const dataItem = this.selectedDataItems.find(item => getter(item, this.valueField) === getter(current, this.valueField));\n        return isPresent(dataItem) ? dataItem : this.resolveDataItemFromTags(current);\n      }).filter(dataItem => isPresent(dataItem));\n    }\n\n    this.tags = this.tagMapper(this.selectedDataItems.slice(0));\n    this.disabledIndices = this.disabledItemsMapper();\n    this.cdr.markForCheck();\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleFilter(text) {\n    this.text = text;\n\n    if (text && !this.isOpen) {\n      this.openPopup();\n    }\n\n    if (this.filterable) {\n      this.filterChange.emit(text);\n    } else {\n      this.searchTextAndFocus(text);\n    }\n\n    this.searchbar.setInputSize();\n  }\n  /**\n   * @hidden\n   */\n\n\n  pageChange(event) {\n    const virtual = this.virtual;\n    virtual.skip = event.skip;\n  }\n  /**\n   * @hidden\n   */\n\n\n  clearFilter() {\n    if (this.filterable && this.text) {\n      this.filterChange.emit(\"\");\n    }\n\n    this.text = \"\";\n    /* Clearing the value from the input as the setInputSize calculation will be incorrect otherwise.\n     Calling cdr.detectChanges to clear the input value as a result of property binding\n     causes JAWS to read outdated tag values in IE upon tag selection for some reason. */\n\n    this.searchbar.input.nativeElement.value = \"\";\n    this.searchbar.setInputSize();\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleNavigate(event) {\n    const navigateInput = this.text && event.keyCode !== Keys.ArrowDown && event.keyCode !== Keys.ArrowUp;\n    const selectValue = this.text && event.keyCode === Keys.Enter || event.keyCode === Keys.Escape;\n    const deleteTag = !this.text && event.keyCode === Keys.Backspace && this.tags.length > 0;\n\n    if (deleteTag) {\n      this.handleBackspace();\n      return;\n    }\n\n    if (this.disabled || navigateInput && !selectValue) {\n      return;\n    }\n\n    const eventData = event;\n    const focused = isNaN(this.selectionService.focused) ? -1 : this.selectionService.focused;\n    const action = this.navigationService.process({\n      current: focused,\n      max: this.dataService.itemsCount - 1,\n      min: this.allowCustom && this.text ? -1 : 0,\n      open: this.isOpen,\n      originalEvent: eventData\n    });\n\n    if (action !== NavigationAction.Undefined && (action === NavigationAction.Enter && this.isOpen || action !== NavigationAction.Enter)) {\n      event.preventDefault();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleRemoveTag({\n    tag\n  }) {\n    const eventArgs = new RemoveTagEvent(tag);\n\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    this.focus();\n    this.removeTag.emit(eventArgs);\n\n    if (eventArgs.isDefaultPrevented()) {\n      return;\n    }\n\n    if (tag instanceof Array) {\n      this.removeGroupTag(tag);\n    } else {\n      this.removeSingleTag(tag);\n    }\n\n    this.cdr.detectChanges();\n  }\n  /**\n   * @hidden\n   */\n\n\n  clearAll(event) {\n    event === null || event === void 0 ? void 0 : event.stopImmediatePropagation();\n    event === null || event === void 0 ? void 0 : event.preventDefault();\n    this.focus();\n    this.clearFilter();\n    this.selectionService.lastClickedIndex = null;\n    const selected = this.selectionService.selected;\n    this.value = this.value.filter((_item, index) => this.disabledItemsService.isIndexDisabled(selected[index]));\n    this.emitValueChange();\n  }\n  /**\n   * @hidden\n   */\n\n\n  addCustomValue(text) {\n    this.customValueSubject.next(text);\n  }\n\n  ngAfterContentChecked() {\n    this.verifySettings();\n  }\n\n  ngDoCheck() {\n    const valueChanges = this.differ && this.differ.diff(this.value);\n\n    if (valueChanges && !this.valueChangeDetected) {\n      this.setState(this.value);\n    }\n\n    this.valueChangeDetected = false;\n  }\n\n  ngOnInit() {\n    this.renderer.removeAttribute(this.wrapper.nativeElement, \"tabindex\");\n    this.createCustomValueStream();\n    this.localizationChangeSubscription = this.localization.changes.subscribe(({\n      rtl\n    }) => {\n      this.direction = rtl ? 'rtl' : 'ltr';\n      this.cdr.markForCheck();\n    });\n    this.setState(this.value);\n    this.setComponentClasses();\n    this.initialized = true;\n  }\n\n  ngOnChanges(changes) {\n    const virtual = this.virtual;\n    const requestInitialData = virtual && changes.data && changes.data.isFirstChange();\n\n    if (requestInitialData) {\n      this.pageChange({\n        skip: 0,\n        take: virtual.pageSize\n      });\n    }\n\n    if (isChanged('valueNormalizer', changes)) {\n      this.createCustomValueStream();\n    }\n\n    if (anyChanged(['textField', 'valueField', 'valuePrimitive'], changes)) {\n      this.setState(this.value);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.searchbar.setInputSize();\n  }\n\n  ngOnDestroy() {\n    this._toggle(false);\n\n    this.unsubscribeEvents();\n  }\n  /**\n   * Toggles the visibility of the popup\n   * ([see example]({% slug openstate_multiselect %}#toc-setting-the-initially-opened-component)).\n   * If you use the `toggle` method to open or close the popup, the respective `open` and `close` events will not be fired.\n   *\n   * @param open - The state of the popup.\n   */\n\n\n  toggle(open) {\n    // The Promise is required for opening the popup on load.\n    // Otherwise, the \"Expression has changed...\" type error will be thrown.\n    Promise.resolve(null).then(() => {\n      const shouldOpen = isPresent(open) ? open : !this._open;\n\n      this._toggle(shouldOpen);\n\n      this.cdr.markForCheck();\n    });\n  }\n  /**\n   * Returns the current open state of the popup.\n   */\n\n\n  get isOpen() {\n    return this._open;\n  }\n  /**\n   * Resets the value of the MultiSelect.\n   * If you use the `reset` method to clear the value of the component,\n   * the model will not update automatically and the `selectionChange` and `valueChange` events will not be fired.\n   */\n\n\n  reset() {\n    this.text = \"\";\n    this.value = [];\n  }\n  /**\n   * @hidden\n   */\n\n\n  messageFor(key) {\n    return this.localization.get(key);\n  } // NG MODEL BINDINGS\n\n  /**\n   * @hidden\n   */\n\n\n  writeValue(value) {\n    this.value = value || [];\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnChange(fn) {\n    this.onChangeCallback = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnTouched(fn) {\n    this.onTouchedCallback = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  /**\n   * @hidden\n   */\n\n\n  onTagMapperChange() {\n    this.tags = this.tagMapper(this.selectedDataItems.slice(0));\n    this.cdr.markForCheck();\n  }\n\n  set isFocused(isFocused) {\n    this.renderer[isFocused ? 'addClass' : 'removeClass'](this.wrapper.nativeElement, 'k-focus');\n    this._isFocused = isFocused;\n  }\n\n  get isFocused() {\n    return this._isFocused;\n  }\n\n  subscribeEvents() {\n    if (!isDocumentAvailable()) {\n      return;\n    }\n\n    const isOpen = () => this.isOpen;\n\n    const isClosed = () => !this.isOpen;\n\n    const isTagFocused = () => !this.isOpen && this.focusedTagIndex !== undefined;\n\n    [this.selectionService.onChange.subscribe(this.handleItemChange.bind(this)), this.navigationService.esc.subscribe(this.closePopup.bind(this)), this.navigationService.enter.pipe(filter(isOpen)).subscribe(this.handleEnter.bind(this)), this.navigationService.open.subscribe(this.openPopup.bind(this)), this.navigationService.close.subscribe(this.handleClose.bind(this)), this.navigationService.up.pipe(filter(isOpen)).subscribe(event => this.handleUp(event.index)), this.navigationService.home.pipe(filter(() => isClosed)).subscribe(this.handleHome.bind(this)), this.navigationService.end.pipe(filter(() => isClosed)).subscribe(this.handleEnd.bind(this)), this.navigationService.backspace.pipe(filter(isTagFocused)).subscribe(this.handleBackspace.bind(this)), this.navigationService.delete.pipe(filter(isTagFocused)).subscribe(this.handleDelete.bind(this)), this.navigationService.left.subscribe(this.direction === 'rtl' ? this.handleRightKey.bind(this) : this.handleLeftKey.bind(this)), this.navigationService.right.subscribe(this.direction === 'rtl' ? this.handleLeftKey.bind(this) : this.handleRightKey.bind(this)), this.navigationService.down.subscribe(event => this.handleDownKey(event.index)), this.navigationService.selectprevious.pipe(filter(isOpen)).subscribe(event => this.handleSelectUpDown(event)), this.navigationService.selectnext.pipe(filter(isOpen)).subscribe(event => this.handleSelectUpDown(event)), this.navigationService.selectalltobeginning.pipe(filter(isOpen)).subscribe(() => this.handleSelectAllToBeginning()), this.navigationService.selectalltoend.pipe(filter(isOpen)).subscribe(() => this.handleSelectAllToEnd()), merge(this.navigationService.pagedown, this.navigationService.pageup).subscribe(event => {\n      if (this.isOpen) {\n        event.originalEvent.preventDefault();\n        this.optionsList.scrollWithOnePage(NavigationAction[event.originalEvent.code]);\n      }\n    })].forEach(s => this.observableSubscriptions.add(s));\n  }\n\n  subscribeTouchEvents() {\n    if (!isDocumentAvailable() || !this.touchEnabled) {\n      return;\n    }\n\n    this._zone.runOutsideAngular(() => // Roll up MultiSelect on iOS when tapped outside\n    this.touchstartDisposeHandler = this.renderer.listen(document, 'touchstart', e => {\n      const target = e.target;\n\n      if ((this.isFocused || this.isOpen) && !inDropDown(this.wrapper, target, this.popupRef)) {\n        this._zone.run(() => {\n          this.blur();\n\n          if (this.isOpen) {\n            this.togglePopup(false);\n          }\n        });\n      }\n    }));\n  }\n\n  unsubscribeEvents() {\n    if (!isDocumentAvailable()) {\n      return;\n    }\n\n    this.observableSubscriptions.unsubscribe();\n\n    if (this.customValueSubscription) {\n      this.customValueSubscription.unsubscribe();\n    }\n\n    if (this.localizationChangeSubscription) {\n      this.localizationChangeSubscription.unsubscribe();\n    }\n\n    if (this.touchstartDisposeHandler) {\n      this.touchstartDisposeHandler();\n    }\n  }\n\n  removeGroupTag(dataItems) {\n    let data = this.dataService.data;\n\n    if (this.dataService.grouped) {\n      data = data.filter(item => !item.header).map(item => item.value);\n    }\n\n    const dataItemValues = new Set(dataItems.map(item => getter(item, this.valueField)));\n    this.value = this.value.filter(value => {\n      const index = selectedIndices([value], data, this.valueField)[0];\n      const isDataItemDisabled = this.disabledItemsService.isIndexDisabled(index);\n      return !dataItemValues.has(getter(value, this.valueField)) || isDataItemDisabled;\n    });\n    this.emitValueChange();\n  }\n\n  removeSingleTag(dataItem) {\n    let data = this.dataService.data;\n\n    if (this.dataService.grouped) {\n      data = data.filter(item => !item.header).map(item => item.value);\n    }\n\n    const index = selectedIndices([dataItem], data, this.valueField)[0];\n\n    if (this.disabledItemsService.isIndexDisabled(index)) {\n      return;\n    }\n\n    if (isNumber(index)) {\n      this.selectionService.deselect(index);\n      this.selectionService.focused = index;\n      this.togglePopup(false);\n    } else {\n      // the deleted item is not present in the source\n      const filter = item => getter(item, this.valueField) !== getter(dataItem, this.valueField);\n\n      this.value = this.value.filter(filter);\n      this.emitValueChange();\n    }\n  }\n  /**\n   * @hidden\n   *\n   * Determines which of the provided tags should be disabled and stores their position indices\n   */\n\n\n  disabledItemsMapper() {\n    const {\n      selected\n    } = this.selectionService;\n    return new Set(this.selectedDataItems.reduce((indices, _item, index) => {\n      if (this.disabledItemsService.isIndexDisabled(selected[index])) {\n        indices.push(index);\n      }\n\n      return indices;\n    }, []));\n  }\n\n  createCustomValueStream() {\n    if (this.customValueSubscription) {\n      this.customValueSubscription.unsubscribe();\n    }\n\n    this.customValueSubscription = this.customValueSubject.pipe(tap(() => {\n      this.loading = true;\n      this.disabled = true;\n      this.cdr.detectChanges();\n    }), this.valueNormalizer, catchError(() => {\n      this.loading = false;\n      this.disabled = false;\n\n      if (this.autoClose) {\n        this.togglePopup(false);\n      }\n\n      if (this.autoClose || !this.filterable) {\n        this.clearFilter();\n      }\n\n      this.nextTick(() => {\n        this.searchbar.focus();\n      });\n      this.createCustomValueStream();\n      return of(null);\n    })).subscribe(normalizedValue => {\n      this.loading = false;\n      this.disabled = false;\n\n      if (isPresent(normalizedValue)) {\n        // if valueNormalizer returns `null` or `undefined` custom value is discarded\n        const newValue = this.valuePrimitive ? getter(normalizedValue, this.valueField) : normalizedValue;\n        const itemIndex = this.dataService.indexOf(newValue);\n        const customItem = itemIndex === -1;\n\n        if (this.value.indexOf(newValue) === -1) {\n          this.tags = this.tagMapper([...this.selectedDataItems, normalizedValue]);\n\n          if (!customItem) {\n            this.selectionService.add(itemIndex);\n          } else {\n            this.value = [...this.value, newValue];\n          }\n        } else {\n          if (!customItem && this.selectionService.isSelected(itemIndex)) {\n            this.selectionService.deselect(itemIndex);\n            this.selectionService.focused = itemIndex;\n          } else {\n            this.value = this.value.filter(item => getter(item, this.valueField) !== newValue);\n          }\n        }\n\n        this.emitValueChange();\n      }\n\n      if (this.autoClose) {\n        this.togglePopup(false);\n      }\n\n      if (this.autoClose || !this.filterable) {\n        this.clearFilter();\n      }\n\n      this.nextTick(() => {\n        this.searchbar.focus();\n      });\n    });\n  }\n\n  handleItemChange(event) {\n    this.change(event);\n\n    if (this.autoClose && !event.preventClosingPopup) {\n      this.togglePopup(false);\n    }\n\n    if (this.autoClose || !this.filterable) {\n      this.clearFilter();\n    }\n  }\n\n  handleEnter(event) {\n    const service = this.selectionService;\n    const focusedIndex = this.selectionService.focused;\n    this.selectionService.lastClickedIndex = focusedIndex;\n\n    if (this.isOpen) {\n      event.originalEvent.preventDefault();\n    }\n\n    if (focusedIndex === -1) {\n      if (this.allowCustom && this.text) {\n        this.addCustomValue(this.text);\n      }\n\n      return; // Clear filter & close are done at customValueSubscription due to race conditions.\n    }\n\n    if (service.isSelected(focusedIndex)) {\n      service.deselect(focusedIndex);\n      service.focused = focusedIndex;\n    } else {\n      service.add(focusedIndex);\n    }\n\n    if (this.autoClose) {\n      this.togglePopup(false);\n    }\n\n    if (this.autoClose || !this.filterable) {\n      this.clearFilter();\n    }\n  }\n\n  handleClose() {\n    this.closePopup();\n    this.searchbar.focus();\n  }\n\n  handleEnd() {\n    this.focusedTagIndex = this.tags.length - 1;\n  }\n\n  handleHome() {\n    this.focusedTagIndex = 0;\n  }\n\n  sortSelectionAscending() {\n    return this.selectionService.selected.sort((a, b) => a - b);\n  }\n\n  handleSelectAll() {\n    const selectedItemsCount = this.selectionService.selected.length;\n    const dataItemsCount = this.dataService.data.length;\n    const dataItemsWithoutHeadersCount = this.dataService.data.filter(i => !i.header).length;\n\n    if (!this.dataService.grouped && selectedItemsCount === dataItemsCount || this.dataService.grouped && selectedItemsCount === dataItemsWithoutHeadersCount) {\n      this.clearAll();\n    } else {\n      this.selectionService.selectFromTo(0, dataItemsCount - 1);\n      this.selectionService.emitMultipleAddedRemoved();\n    }\n  }\n\n  handleSelectAllToBeginning() {\n    const selectedItemsCount = this.selectionService.selected.length;\n    const dataItemsCount = this.dataService.data.length;\n    const focusedItem = this.selectionService.focused;\n    const largestIndex = this.sortSelectionAscending()[selectedItemsCount - 1];\n\n    if (selectedItemsCount !== dataItemsCount) {\n      this.selectionService.unselectFromTo(largestIndex, focusedItem + 1);\n      this.selectionService.selectFromTo(0, focusedItem);\n    }\n\n    this.nextTick(() => this.selectionService.focus(0));\n    this.selectionService.emitMultipleAddedRemoved();\n  }\n\n  handleSelectAllToEnd() {\n    const selectedItemsCount = this.selectionService.selected.length;\n    const dataItemsCount = this.dataService.data.length;\n    const focusedItem = this.selectionService.focused;\n\n    if (selectedItemsCount !== dataItemsCount) {\n      this.selectionService.unselectFromTo(focusedItem - 1, 0);\n      this.selectionService.selectFromTo(focusedItem, dataItemsCount - 1);\n    }\n\n    if (this.dataService.grouped) {\n      const lastItemIndex = this.dataService.groupIndices[this.dataService.groupIndices.length - 1] - 1;\n      this.nextTick(() => this.selectionService.focus(lastItemIndex));\n    } else {\n      this.nextTick(() => this.selectionService.focus(dataItemsCount - 1));\n    }\n\n    this.selectionService.emitMultipleAddedRemoved();\n  }\n\n  handleSelectUpDown(event) {\n    const focusedIndex = this.selectionService.focused;\n\n    if (!isPresent(focusedIndex)) {\n      return;\n    }\n\n    let indexToSelect;\n\n    if (event.originalEvent.key === 'ArrowUp') {\n      indexToSelect = focusedIndex > 0 ? focusedIndex - 1 : focusedIndex;\n    } else {\n      indexToSelect = focusedIndex < this.dataService.data.length - 1 ? focusedIndex + 1 : focusedIndex;\n    }\n\n    if (!isPresent(this.selectionService.lastClickedIndex)) {\n      this.selectionService.lastClickedIndex = focusedIndex;\n    }\n\n    this.selectRangeFromTo(indexToSelect);\n  }\n  /**\n   * Selects all items between the focused item and the last clicked item (index). Also removes all other selected items.\n   */\n\n\n  selectRangeFromTo(indexToSelect) {\n    const lastClickedIndex = this.selectionService.lastClickedIndex;\n\n    if (lastClickedIndex > indexToSelect) {\n      this.selectionService.unselectNotNeededIndices(indexToSelect, lastClickedIndex, this.dataService.data.length);\n      this.selectionService.selectFromTo(indexToSelect, this.selectionService.lastClickedIndex);\n      this.selectionService.emitMultipleAddedRemoved();\n    } else {\n      this.selectionService.unselectNotNeededIndices(lastClickedIndex, indexToSelect, this.dataService.data.length);\n      this.selectionService.selectFromTo(lastClickedIndex, indexToSelect);\n      this.selectionService.emitMultipleAddedRemoved();\n    }\n\n    this.nextTick(() => this.selectionService.focus(indexToSelect));\n  }\n\n  handleUp(index) {\n    this.selectionService.focused = index;\n  }\n\n  handleBackspace() {\n    if (this.focusedTagIndex !== undefined) {\n      this.handleDelete();\n    } else {\n      this.handleRemoveTag({\n        tag: this.tags[this.tags.length - 1]\n      });\n      this.searchbar.focus();\n    }\n  }\n\n  handleDelete() {\n    this.handleRemoveTag({\n      tag: this.tags[this.focusedTagIndex]\n    });\n\n    if (this.focusedTagIndex === this.tags.length) {\n      this.focusedTagIndex = undefined;\n    }\n  }\n\n  handleLeftKey() {\n    if (this.focusedTagIndex === undefined || this.focusedTagIndex < 0) {\n      this.focusedTagIndex = this.tags.length - 1;\n    } else if (this.focusedTagIndex !== 0) {\n      this.focusedTagIndex--;\n    }\n  }\n\n  handleDownKey(index) {\n    if (this.isOpen) {\n      this.selectionService.focused = index || this.firstFocusableIndex(0);\n    } else {\n      this.openPopup();\n    }\n  }\n\n  handleRightKey() {\n    const last = this.tags.length - 1;\n\n    if (this.focusedTagIndex === last) {\n      this.focusedTagIndex = undefined;\n    } else if (this.focusedTagIndex < last) {\n      this.focusedTagIndex++;\n    }\n  }\n\n  findIndex(text, startsFrom = 0) {\n    let itemText;\n    text = text.toLowerCase();\n    let index = this.dataService.findIndex(item => {\n      if (this.dataService.grouped) {\n        itemText = getter(item.value, this.textField);\n      } else {\n        itemText = getter(item, this.textField);\n      }\n\n      itemText = !isPresent(itemText) ? \"\" : itemText.toString().toLowerCase();\n      return text && itemText.startsWith(text);\n    }, startsFrom);\n\n    if (this.disabledItemsService.isIndexDisabled(index)) {\n      return index + 1 > this.dataService.itemsCount ? -1 : this.findIndex(text, index + 1);\n    } else {\n      return index;\n    }\n  }\n\n  searchTextAndFocus(text) {\n    const index = this.findIndex(text);\n    this.selectionService.focused = index;\n  }\n\n  closePopup() {\n    this.togglePopup(false);\n    this.focusedTagIndex = undefined;\n  }\n\n  openPopup() {\n    this.togglePopup(true);\n    this.focusedTagIndex = undefined;\n  }\n\n  togglePopup(open) {\n    const isDisabled = this.disabled || this.readonly;\n    const sameState = this.isOpen === open;\n\n    if (isDisabled || sameState) {\n      return;\n    }\n\n    const isDefaultPrevented = this.triggerPopupEvents(open);\n\n    if (!isDefaultPrevented) {\n      this._toggle(open);\n    }\n  }\n\n  triggerPopupEvents(open) {\n    const eventArgs = new PreventableEvent();\n\n    if (open) {\n      this.open.emit(eventArgs);\n    } else {\n      this.close.emit(eventArgs);\n    }\n\n    return eventArgs.isDefaultPrevented();\n  }\n\n  _toggle(open) {\n    this._open = open;\n    this.destroyPopup();\n\n    if (this._open) {\n      this.createPopup();\n    }\n  }\n\n  destroyPopup() {\n    if (this.popupRef) {\n      this.popupRef.popupElement.removeEventListener('mousedown', this.popupMouseDownHandler);\n      this.popupRef.close();\n      this.popupRef = null;\n    }\n  }\n\n  createPopup() {\n    if (this.virtual) {\n      this.virtual.skip = 0;\n    }\n\n    const horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n    const anchorPosition = {\n      horizontal: horizontalAlign,\n      vertical: \"bottom\"\n    };\n    const popupPosition = {\n      horizontal: horizontalAlign,\n      vertical: \"top\"\n    };\n    this.popupRef = this.popupService.open({\n      anchor: this.wrapper,\n      anchorAlign: anchorPosition,\n      animate: this.popupSettings.animate,\n      appendTo: this.appendTo,\n      content: this.popupTemplate,\n      popupAlign: popupPosition,\n      popupClass: this.listContainerClasses,\n      positionMode: 'absolute'\n    });\n    const popupWrapper = this.popupRef.popupElement;\n    const {\n      min,\n      max\n    } = this.width;\n    popupWrapper.addEventListener('mousedown', this.popupMouseDownHandler);\n    popupWrapper.style.minWidth = min;\n    popupWrapper.style.width = max;\n    popupWrapper.style.height = this.height;\n    popupWrapper.setAttribute(\"dir\", this.direction);\n    const listBox = popupWrapper.querySelector('ul.k-list-ul');\n    const ariaLabel = this.searchbar.input.nativeElement.getAttribute('aria-labelledby');\n\n    if (ariaLabel) {\n      listBox.setAttribute('aria-labelledby', ariaLabel);\n    }\n\n    this.popupRef.popupOpen.subscribe(() => {\n      this.cdr.detectChanges();\n      this.optionsList.scrollToItem(this.selectionService.focused);\n      this.opened.emit();\n    });\n    this.popupRef.popupClose.subscribe(() => {\n      this.closed.emit();\n    });\n    this.popupRef.popupAnchorViewportLeave.subscribe(() => {\n      this.togglePopup(false);\n    });\n  }\n\n  emitValueChange() {\n    this.onChangeCallback(this.value);\n    this.valueChange.emit(this.value);\n  }\n\n  resolveDataItemFromTags(value) {\n    if (!(this.tags && this.tags.length && isPresent(value))) {\n      return undefined;\n    } // Flattening the tags array in case of a summary tag occurrence.\n\n\n    const tags = this.tags.reduce((acc, tag) => {\n      const items = isArray(tag) ? tag : [tag];\n      acc.push(...items);\n      return acc;\n    }, []);\n    return tags.find(tag => getter(tag, this.valueField) === getter(value, this.valueField));\n  }\n\n  firstFocusableIndex(index) {\n    const maxIndex = this.dataService.itemsCount;\n\n    if (this.disabledItemsService.isIndexDisabled(index)) {\n      const nextIndex = index + 1;\n      return nextIndex < maxIndex ? this.firstFocusableIndex(nextIndex) : undefined;\n    } else {\n      return index;\n    }\n  }\n\n  nextTick(f) {\n    this._zone.runOutsideAngular(() => {\n      // Use `setTimeout` instead of a resolved promise\n      // because the latter does not wait long enough.\n      setTimeout(() => this._zone.run(f));\n    });\n  }\n\n  setComponentClasses() {\n    if (this.size !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('input', this.size));\n    }\n\n    if (this.rounded !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n    }\n\n    if (this.fillMode !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('input', this.fillMode));\n    }\n  }\n\n}\n\nMultiSelectComponent.ɵfac = function MultiSelectComponent_Factory(t) {\n  return new (t || MultiSelectComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i2.PopupService), i0.ɵɵdirectiveInject(DataService), i0.ɵɵdirectiveInject(SelectionService), i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(DisabledItemsService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.KeyValueDiffers), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(TOUCH_ENABLED, 8));\n};\n\nMultiSelectComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MultiSelectComponent,\n  selectors: [[\"kendo-multiselect\"]],\n  contentQueries: function MultiSelectComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ItemTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, CustomItemTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, GroupTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, FixedGroupTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, HeaderTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, FooterTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, TagTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, GroupTagTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, NoDataTemplateDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customItemTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.groupTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fixedGroupTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tagTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.groupTagTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.noDataTemplate = _t.first);\n    }\n  },\n  viewQuery: function MultiSelectComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c8, 7, ViewContainerRef);\n      i0.ɵɵviewQuery(SearchBarComponent, 7);\n      i0.ɵɵviewQuery(_c9, 7);\n      i0.ɵɵviewQuery(_c10, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.searchbar = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.optionsList = _t.first);\n    }\n  },\n  hostVars: 9,\n  hostBindings: function MultiSelectComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function MultiSelectComponent_keydown_HostBindingHandler($event) {\n        return ctx.handleKeyboardEvent($event);\n      })(\"mousedown\", function MultiSelectComponent_mousedown_HostBindingHandler($event) {\n        return ctx.hostMousedown($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx.dir);\n      i0.ɵɵclassProp(\"k-multiselect\", ctx.hostClasses)(\"k-input\", ctx.hostClasses)(\"k-disabled\", ctx.disabledClass)(\"k-loading\", ctx.isLoading);\n    }\n  },\n  inputs: {\n    focusableId: \"focusableId\",\n    autoClose: \"autoClose\",\n    loading: \"loading\",\n    data: \"data\",\n    value: \"value\",\n    valueField: \"valueField\",\n    textField: \"textField\",\n    tabindex: \"tabindex\",\n    tabIndex: \"tabIndex\",\n    size: \"size\",\n    rounded: \"rounded\",\n    fillMode: \"fillMode\",\n    placeholder: \"placeholder\",\n    disabled: \"disabled\",\n    itemDisabled: \"itemDisabled\",\n    checkboxes: \"checkboxes\",\n    readonly: \"readonly\",\n    filterable: \"filterable\",\n    virtual: \"virtual\",\n    popupSettings: \"popupSettings\",\n    listHeight: \"listHeight\",\n    valuePrimitive: \"valuePrimitive\",\n    clearButton: \"clearButton\",\n    tagMapper: \"tagMapper\",\n    allowCustom: \"allowCustom\",\n    valueNormalizer: \"valueNormalizer\"\n  },\n  outputs: {\n    filterChange: \"filterChange\",\n    valueChange: \"valueChange\",\n    open: \"open\",\n    opened: \"opened\",\n    close: \"close\",\n    closed: \"closed\",\n    onFocus: \"focus\",\n    onBlur: \"blur\",\n    removeTag: \"removeTag\"\n  },\n  exportAs: [\"kendoMultiSelect\"],\n  features: [i0.ɵɵProvidersFeature([MULTISELECT_VALUE_ACCESSOR, DataService, SelectionService, NavigationService, DisabledItemsService, LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.multiselect'\n  }, {\n    provide: FilterableComponent,\n    useExisting: forwardRef(() => MultiSelectComponent)\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(() => MultiSelectComponent)\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 11,\n  vars: 29,\n  consts: function () {\n    let i18n_31;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text displayed in the popup when there are no items\n       * @meaning kendo.multiselect.noDataText\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_32 = goog.getMsg(\"NO DATA FOUND\");\n      i18n_31 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_32;\n    } else {\n      i18n_31 = $localize`:kendo.multiselect.noDataText|The text displayed in the popup when there are no items:NO DATA FOUND`;\n    }\n\n    let i18n_33;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the clear button\n       * @meaning kendo.multiselect.clearTitle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_34 = goog.getMsg(\"clear\");\n      i18n_33 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_34;\n    } else {\n      i18n_33 = $localize`:kendo.multiselect.clearTitle|The title of the clear button:clear`;\n    }\n\n    return [[\"kendoMultiSelectLocalizedMessages\", \"\", \"noDataText\", i18n_31, \"clearTitle\", i18n_33], [3, \"size\", \"rounded\", \"fillMode\", \"id\", \"tags\", \"textField\", \"valueField\", \"focused\", \"disabled\", \"template\", \"groupTemplate\", \"tagPrefix\", \"disabledIndices\", \"removeTag\"], [3, \"id\", \"role\", \"tagListId\", \"listId\", \"isLoading\", \"isFilterable\", \"activeDescendant\", \"userInput\", \"disabled\", \"readonly\", \"tabIndex\", \"popupOpen\", \"placeholder\", \"onNavigate\", \"valueChange\", \"onBlur\", \"onFocus\"], [\"searchbar\", \"\"], [\"class\", \"k-clear-value\", \"role\", \"button\", \"tabindex\", \"-1\", 3, \"visibility\", \"mousedown\", 4, \"ngIf\"], [\"class\", \"k-icon k-i-loading k-input-loading-icon\", 4, \"ngIf\"], [\"popupTemplate\", \"\"], [3, \"ngIf\"], [\"container\", \"\"], [\"role\", \"button\", \"tabindex\", \"-1\", 1, \"k-clear-value\", 3, \"mousedown\"], [1, \"k-icon\", \"k-i-x\"], [1, \"k-icon\", \"k-i-loading\", \"k-input-loading-icon\"], [4, \"ngIf\"], [\"class\", \"k-list\", 3, \"ngClass\", 4, \"ngIf\"], [3, \"size\", \"rounded\", \"id\", \"optionPrefix\", \"data\", \"textField\", \"valueField\", \"height\", \"template\", \"groupTemplate\", \"fixedGroupTemplate\", \"show\", \"multipleSelection\", \"virtual\", \"checkboxes\", \"isMultiselect\", \"pageChange\"], [\"optionsList\", \"\"], [\"class\", \"k-no-data\", 4, \"ngIf\"], [3, \"templateContext\"], [1, \"k-list\", 3, \"ngClass\"], [\"kendoDropDownsSelectable\", \"\", 1, \"k-list-item\", \"k-custom-item\", 3, \"multipleSelection\", \"index\"], [4, \"ngIf\", \"ngIfElse\"], [\"default_custom_item_template\", \"\"], [1, \"k-icon\", \"k-i-plus\", 2, \"float\", \"right\"], [1, \"k-no-data\"], [3, \"ngIf\", \"templateContext\"], [3, \"resize\"]];\n  },\n  template: function MultiSelectComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵelementStart(1, \"kendo-taglist\", 1);\n      i0.ɵɵlistener(\"removeTag\", function MultiSelectComponent_Template_kendo_taglist_removeTag_1_listener($event) {\n        return ctx.handleRemoveTag($event);\n      });\n      i0.ɵɵelementStart(2, \"kendo-searchbar\", 2, 3);\n      i0.ɵɵlistener(\"onNavigate\", function MultiSelectComponent_Template_kendo_searchbar_onNavigate_2_listener($event) {\n        return ctx.handleNavigate($event);\n      })(\"valueChange\", function MultiSelectComponent_Template_kendo_searchbar_valueChange_2_listener($event) {\n        return ctx.handleFilter($event);\n      })(\"onBlur\", function MultiSelectComponent_Template_kendo_searchbar_onBlur_2_listener() {\n        return ctx.onSearchBarBlur();\n      })(\"onFocus\", function MultiSelectComponent_Template_kendo_searchbar_onFocus_2_listener() {\n        return ctx.onSearchBarFocus();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, MultiSelectComponent_span_4_Template, 2, 3, \"span\", 4);\n      i0.ɵɵtemplate(5, MultiSelectComponent_span_5_Template, 1, 0, \"span\", 5);\n      i0.ɵɵtemplate(6, MultiSelectComponent_ng_template_6_Template, 6, 20, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(8, MultiSelectComponent_ng_template_8_Template, 1, 0, \"ng-template\", 7);\n      i0.ɵɵelementContainer(9, null, 8);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"size\", ctx.size)(\"rounded\", ctx.rounded)(\"fillMode\", ctx.fillMode)(\"id\", ctx.tagListId)(\"tags\", ctx.tags)(\"textField\", ctx.textField)(\"valueField\", ctx.valueField)(\"focused\", ctx.focusedTagIndex)(\"disabled\", ctx.disabled)(\"template\", ctx.tagTemplate)(\"groupTemplate\", ctx.groupTagTemplate)(\"tagPrefix\", ctx.tagPrefix)(\"disabledIndices\", ctx.disabledIndices);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"id\", ctx.focusableId)(\"role\", \"combobox\")(\"tagListId\", ctx.tagListId)(\"listId\", ctx.listBoxId)(\"isLoading\", ctx.loading)(\"isFilterable\", ctx.filterable)(\"activeDescendant\", ctx.activeDescendant)(\"userInput\", ctx.text)(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly)(\"tabIndex\", ctx.tabIndex)(\"popupOpen\", ctx.isOpen)(\"placeholder\", ctx.placeholder);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loading && !ctx.readonly && ctx.clearButton && ((ctx.tags == null ? null : ctx.tags.length) || (ctx.text == null ? null : ctx.text.length)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n    }\n  },\n  directives: [LocalizedMessagesDirective, TagListComponent, SearchBarComponent, i11.NgIf, ListComponent, TemplateContextDirective, i11.NgClass, SelectableDirective, i9.ResizeSensorComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MultiSelectComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoMultiSelect',\n      providers: [MULTISELECT_VALUE_ACCESSOR, DataService, SelectionService, NavigationService, DisabledItemsService, LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.multiselect'\n      }, {\n        provide: FilterableComponent,\n        useExisting: forwardRef(() => MultiSelectComponent)\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(() => MultiSelectComponent)\n      }],\n      selector: 'kendo-multiselect',\n      template: `\n        <ng-container kendoMultiSelectLocalizedMessages\n            i18n-noDataText=\"kendo.multiselect.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.multiselect.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n        >\n        </ng-container>\n        <kendo-taglist\n            [size]=\"size\"\n            [rounded]=\"rounded\"\n            [fillMode]=\"fillMode\"\n            [id]=\"tagListId\"\n            [tags]=\"tags\"\n            [textField]=\"textField\"\n            [valueField]=\"valueField\"\n            [focused]=\"focusedTagIndex\"\n            [disabled]=\"disabled\"\n            [template]=\"tagTemplate\"\n            [groupTemplate]=\"groupTagTemplate\"\n            [tagPrefix]=\"tagPrefix\"\n            [disabledIndices]=\"disabledIndices\"\n            (removeTag)=\"handleRemoveTag($event)\"\n        >\n            <kendo-searchbar\n                #searchbar\n                [id]=\"focusableId\"\n                [role]=\"'combobox'\"\n                [tagListId]=\"tagListId\"\n                [listId]=\"listBoxId\"\n                [isLoading]=\"loading\"\n                [isFilterable]=\"filterable\"\n                [activeDescendant]=\"activeDescendant\"\n                [userInput]=\"text\"\n                [disabled]=\"disabled\"\n                [readonly]=\"readonly\"\n                [tabIndex]=\"tabIndex\"\n                [popupOpen]=\"isOpen\"\n                [placeholder]=\"placeholder\"\n                (onNavigate)=\"handleNavigate($event)\"\n                (valueChange)=\"handleFilter($event)\"\n                (onBlur)=\"onSearchBarBlur()\"\n                (onFocus)=\"onSearchBarFocus()\"\n            >\n            </kendo-searchbar>\n        </kendo-taglist>\n\n        <span\n            *ngIf=\"!loading && !readonly && clearButton && (tags?.length || text?.length)\"\n            class=\"k-clear-value\"\n            [style.visibility]=\"clearButtonVisiblity\"\n            [attr.title]=\"messageFor('clearTitle')\"\n            role=\"button\"\n            tabindex=\"-1\"\n            (mousedown)=\"clearAll($event)\"\n        >\n            <span class=\"k-icon k-i-x\"></span>\n        </span>\n        <span\n            *ngIf=\"loading\"\n            class=\"k-icon k-i-loading k-input-loading-icon\"\n        >\n        </span>\n        <ng-template #popupTemplate>\n            <!--header template-->\n            <ng-template *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate.templateRef\n                }\">\n            </ng-template>\n            <!--custom item template-->\n            <div\n                *ngIf=\"allowCustom && text\"\n                class=\"k-list\"\n                [ngClass]=\"customItemSizeClass\"\n            >\n                <div class=\"k-list-item k-custom-item\" kendoDropDownsSelectable [multipleSelection]=\"true\" [index]=\"-1\">\n                    <ng-template *ngIf=\"customItemTemplate;else default_custom_item_template\"\n                        [templateContext]=\"{\n                            templateRef: customItemTemplate.templateRef,\n                            $implicit: text\n                        }\">\n                    </ng-template>\n                    <ng-template #default_custom_item_template>{{ text }}</ng-template>\n                    <span class=\"k-icon k-i-plus\" style=\"float: right\"></span>\n                </div>\n            </div>\n            <!--list-->\n            <kendo-list\n                #optionsList\n                [size]=\"size\"\n                [rounded]=\"rounded\"\n                [id]=\"listBoxId\"\n                [optionPrefix]=\"optionPrefix\"\n                [data]=\"data\"\n                [textField]=\"textField\"\n                [valueField]=\"valueField\"\n                [height]=\"listHeight\"\n                [template]=\"template\"\n                [groupTemplate]=\"groupTemplate\"\n                [fixedGroupTemplate]=\"fixedGroupTemplate\"\n                [show]=\"isOpen\"\n                [multipleSelection]=\"true\"\n                [virtual]=\"virtual\"\n                (pageChange)=\"pageChange($event)\"\n                [checkboxes]=\"checkboxes\"\n                [isMultiselect]=\"true\"\n                >\n            </kendo-list>\n            <!--no data template-->\n            <div class=\"k-no-data\" *ngIf=\"data.length === 0\">\n                <ng-template [ngIf]=\"noDataTemplate\"\n                    [templateContext]=\"{\n                        templateRef: noDataTemplate ? noDataTemplate.templateRef : undefined\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!noDataTemplate\">\n                    <div>{{ messageFor('noDataText') }}</div>\n                </ng-template>\n            </div>\n            <!--footer template-->\n            <ng-template *ngIf=\"footerTemplate\"\n                [templateContext]=\"{\n                    templateRef: footerTemplate.templateRef\n                }\">\n            </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"isOpen\">\n            <kendo-resize-sensor (resize)=\"onResize()\"></kendo-resize-sensor>\n        </ng-template>\n        <ng-container #container></ng-container>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i2.PopupService\n    }, {\n      type: DataService\n    }, {\n      type: SelectionService\n    }, {\n      type: NavigationService\n    }, {\n      type: DisabledItemsService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.KeyValueDiffers\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TOUCH_ENABLED]\n      }]\n    }];\n  }, {\n    focusableId: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    valueField: [{\n      type: Input\n    }],\n    textField: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [\"tabIndex\"]\n    }],\n    size: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    fillMode: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    itemDisabled: [{\n      type: Input\n    }],\n    checkboxes: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    virtual: [{\n      type: Input\n    }],\n    popupSettings: [{\n      type: Input\n    }],\n    listHeight: [{\n      type: Input\n    }],\n    valuePrimitive: [{\n      type: Input\n    }],\n    clearButton: [{\n      type: Input\n    }],\n    tagMapper: [{\n      type: Input\n    }],\n    allowCustom: [{\n      type: Input\n    }],\n    valueNormalizer: [{\n      type: Input\n    }],\n    filterChange: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    open: [{\n      type: Output\n    }],\n    opened: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    closed: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    removeTag: [{\n      type: Output\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }],\n    searchbar: [{\n      type: ViewChild,\n      args: [SearchBarComponent, {\n        static: true\n      }]\n    }],\n    popupTemplate: [{\n      type: ViewChild,\n      args: ['popupTemplate', {\n        static: true\n      }]\n    }],\n    optionsList: [{\n      type: ViewChild,\n      args: ['optionsList', {\n        static: false\n      }]\n    }],\n    template: [{\n      type: ContentChild,\n      args: [ItemTemplateDirective, {\n        static: false\n      }]\n    }],\n    customItemTemplate: [{\n      type: ContentChild,\n      args: [CustomItemTemplateDirective, {\n        static: false\n      }]\n    }],\n    groupTemplate: [{\n      type: ContentChild,\n      args: [GroupTemplateDirective, {\n        static: false\n      }]\n    }],\n    fixedGroupTemplate: [{\n      type: ContentChild,\n      args: [FixedGroupTemplateDirective, {\n        static: false\n      }]\n    }],\n    headerTemplate: [{\n      type: ContentChild,\n      args: [HeaderTemplateDirective, {\n        static: false\n      }]\n    }],\n    footerTemplate: [{\n      type: ContentChild,\n      args: [FooterTemplateDirective, {\n        static: false\n      }]\n    }],\n    tagTemplate: [{\n      type: ContentChild,\n      args: [TagTemplateDirective, {\n        static: false\n      }]\n    }],\n    groupTagTemplate: [{\n      type: ContentChild,\n      args: [GroupTagTemplateDirective, {\n        static: false\n      }]\n    }],\n    noDataTemplate: [{\n      type: ContentChild,\n      args: [NoDataTemplateDirective, {\n        static: false\n      }]\n    }],\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-multiselect']\n    }, {\n      type: HostBinding,\n      args: ['class.k-input']\n    }],\n    dir: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    disabledClass: [{\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }],\n    isLoading: [{\n      type: HostBinding,\n      args: ['class.k-loading']\n    }],\n    handleKeyboardEvent: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }],\n    hostMousedown: [{\n      type: HostListener,\n      args: ['mousedown', ['$event']]\n    }]\n  });\n})();\n/**\n * Renders the column cell content of the MultiColumnComboBox. To define a column cell template, nest an `<ng-template>` tag\n * with the `kendoMultiColumnComboBoxColumnCellTemplate` directive inside the [`<kendo-combobox-column>`]({% slug api_dropdowns_comboboxcolumncomponent %}) tag\n * ([see example]({% slug templates_multicolumncombobox %})).\n *\n * The current [`column`]({% slug api_dropdowns_comboboxcolumncomponent %}) and data item are available as context variables:\n *\n * - `let-dataItem=\"dataItem\"` (`any`) - The current data item. Also available as implicit context variable.\n * - `let-column=\"column\"` ([`ColumnComponent`]({% slug api_dropdowns_comboboxcolumncomponent %})) - The current column configuration obejct.\n */\n\n\nclass ColumnCellTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nColumnCellTemplateDirective.ɵfac = function ColumnCellTemplateDirective_Factory(t) {\n  return new (t || ColumnCellTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nColumnCellTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ColumnCellTemplateDirective,\n  selectors: [[\"\", \"kendoMultiColumnComboBoxColumnCellTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnCellTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoMultiColumnComboBoxColumnCellTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Renders the column header content of the MultiColumnComboBox. To define a column header template, nest an `<ng-template>` tag\n * with the `kendoMultiColumnComboBoxColumnHeaderTemplate` directive inside the [`<kendo-combobox-column>`]({% slug api_dropdowns_comboboxcolumncomponent %}) tag\n * ([see example]({% slug templates_multicolumncombobox %})).\n *\n * The current [`column`]({% slug api_dropdowns_comboboxcolumncomponent %}) is available as implicit context variable.\n */\n\n\nclass ColumnHeaderTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nColumnHeaderTemplateDirective.ɵfac = function ColumnHeaderTemplateDirective_Factory(t) {\n  return new (t || ColumnHeaderTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nColumnHeaderTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ColumnHeaderTemplateDirective,\n  selectors: [[\"\", \"kendoMultiColumnComboBoxColumnHeaderTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnHeaderTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoMultiColumnComboBoxColumnHeaderTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Represents the column definition of the [MultiColumnComboBox]({% slug overview_multicolumncombobox %})\n * ([see example]({% slug columns_multicolumncombobox %})).\n */\n\n\nclass ComboBoxColumnComponent {\n  constructor() {\n    /**\n     * Sets the visibility of the column.\n     *\n     * @default false\n     */\n    this.hidden = false;\n    /**\n     * @hidden\n     */\n\n    this.matchesMedia = true;\n  }\n\n}\n\nComboBoxColumnComponent.ɵfac = function ComboBoxColumnComponent_Factory(t) {\n  return new (t || ComboBoxColumnComponent)();\n};\n\nComboBoxColumnComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ComboBoxColumnComponent,\n  selectors: [[\"kendo-combobox-column\"]],\n  contentQueries: function ComboBoxColumnComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ColumnCellTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, ColumnHeaderTemplateDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cellTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n    }\n  },\n  inputs: {\n    field: \"field\",\n    title: \"title\",\n    width: \"width\",\n    hidden: \"hidden\",\n    style: \"style\",\n    headerStyle: \"headerStyle\",\n    class: \"class\",\n    headerClass: \"headerClass\",\n    media: \"media\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function ComboBoxColumnComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ComboBoxColumnComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-combobox-column',\n      template: ''\n    }]\n  }], null, {\n    cellTemplate: [{\n      type: ContentChild,\n      args: [ColumnCellTemplateDirective, {\n        static: false\n      }]\n    }],\n    headerTemplate: [{\n      type: ContentChild,\n      args: [ColumnHeaderTemplateDirective, {\n        static: false\n      }]\n    }],\n    field: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    hidden: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    headerStyle: [{\n      type: Input\n    }],\n    class: [{\n      type: Input\n    }],\n    headerClass: [{\n      type: Input\n    }],\n    media: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Persists the intially resolved scrollbar width value.\n */\n\n\nlet SCROLLBAR_WIDTH;\n/**\n * @hidden\n *\n * Gets the default scrollbar width accoring to the current environment.\n */\n\nconst scrollbarWidth = () => {\n  // calculate scrollbar width only once, then return the memoized value\n  if (isNaN(SCROLLBAR_WIDTH)) {\n    const div = document.createElement('div');\n    div.style.cssText = 'overflow: scroll; overflow-x: hidden; zoom: 1; clear: both; display: block;';\n    div.innerHTML = '&nbsp;';\n    document.body.appendChild(div);\n    SCROLLBAR_WIDTH = div.offsetWidth - div.scrollWidth;\n    document.body.removeChild(div);\n  }\n\n  return SCROLLBAR_WIDTH;\n};\n/**\n * Checks if all columns have a valid user-defined width.\n */\n\n\nconst allColumnsWidthsSet = columns => {\n  if (!isPresent(columns) || columns.length === 0) {\n    return false;\n  }\n\n  return columns.toArray().every(column => !isNaN(column.width) && column.width > 0);\n};\n/**\n * @hidden\n *\n * Calculates the row width according to the passed columns width configuration.\n * Hidden columns and such that don't match the provided media query are ignored.\n * If some of the columns don't have a preset width or have an invalid width value, the function returns `null`.\n */\n\n\nconst getRowWidthFromColumnsMeta = columns => {\n  if (!allColumnsWidthsSet(columns)) {\n    return null;\n  }\n\n  const bordersWidth = 2;\n  const initialRowWidht = scrollbarWidth() + bordersWidth;\n  return columns.reduce((totalWidth, column) => {\n    if (!column.hidden && column.matchesMedia) {\n      totalWidth += parseInt(column.width, 10);\n    }\n\n    return totalWidth;\n  }, initialRowWidht);\n};\n/**\n * Represents the [Kendo UI MultiColumnComboBox component for Angular]({% slug overview_multicolumncombobox %}).\n */\n\n\nclass MultiColumnComboBoxComponent extends ComboBoxComponent {\n  constructor(localization, popupService, selectionService, navigationService, disabledItemsService, dataService, zone, changeDetector, renderer, wrapper, touchEnabled) {\n    super(wrapper, localization, popupService, selectionService, navigationService, disabledItemsService, dataService, zone, changeDetector, renderer, touchEnabled);\n    /**\n     * @hidden\n     */\n\n    this.hostClasses = true;\n    this.removeWindowResizeListener = noop; // the row height in @progress/kendo-theme-default\n\n    this.defaultVirtualItemHeight = 36; // use a smaller virtual page size as columns with multiple cells can cause poor performance\n\n    this.defaultVirtualPageSize = 30;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get isDisabled() {\n    return this.disabled;\n  }\n  /**\n   * @hidden\n   */\n\n\n  set header(header) {\n    // updates the header padding on initial render as the resize senzor doesn't kick in as early\n    this.updateHeaderPadding(header && header.nativeElement);\n  }\n\n  get popupWidth() {\n    const wrapperOffsetWidth = this.wrapper.nativeElement.offsetWidth;\n    const min = `${wrapperOffsetWidth}px`;\n    const width = this.popupSettings.width || getRowWidthFromColumnsMeta(this.columns) || wrapperOffsetWidth;\n    const max = isNaN(width) ? width : `${width}px`;\n    return {\n      min,\n      max\n    };\n  }\n  /**\n   * @hidden\n   */\n\n\n  get tableSizeClass() {\n    return `${this.size ? getSizeClass('table', this.size) : ''}`;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get listContainerClasses() {\n    return ['k-popup', 'k-dropdowngrid-popup'].concat(this.popupSettings.popupClass || []);\n  }\n\n  ngAfterViewInit() {\n    this.updateColumnsMediaState();\n    this.addWindowResizeListener();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.removeWindowResizeListener();\n  }\n  /**\n   * @hidden\n   */\n\n\n  textFrom(dataItem, field) {\n    return getter(dataItem, field);\n  }\n  /**\n   * @hidden\n   *\n   * Adds or removes a padding value at the end of the header container equal to the size of the scrollbar.\n   * As when the items container has a scrollbar, the column headers and the cells are misaligned.\n   * When the container has a scrollbar, the padding style is added, and when there is none - it is removed.\n   */\n\n\n  updateHeaderPadding(header) {\n    if (!isPresent(header)) {\n      return;\n    } // the scrollbar is rendered on the left in rtl\n\n\n    const headerPaddingPosition = this.localization.rtl ? 'padding-left' : 'padding-right';\n\n    if (this.optionsList.hasScrollbar() && scrollbarWidth() > 0) {\n      this.renderer.setStyle(header, headerPaddingPosition, `${scrollbarWidth()}px`);\n    } else {\n      this.renderer.removeStyle(header, headerPaddingPosition);\n    }\n  }\n\n  verifySettings() {\n    if (!isDevMode()) {\n      return;\n    }\n\n    if (isPresent(this.data) && this.data.length > 0 && this.data.some(item => !isObject(item))) {\n      throw new Error(MultiColumnComboBoxMessages.data);\n    }\n\n    if (!isPresent(this.valueField) || !isPresent(this.textField)) {\n      throw new Error(MultiColumnComboBoxMessages.textAndValue);\n    }\n\n    super.verifySettings();\n  }\n\n  addWindowResizeListener() {\n    if (!isDocumentAvailable()) {\n      return;\n    }\n\n    this.zone.runOutsideAngular(() => this.removeWindowResizeListener = this.renderer.listen(window, 'resize', this.updateColumnsMediaState.bind(this)));\n  }\n\n  updateColumnsMediaState() {\n    if (!(isPresent(this.columns) && isDocumentAvailable())) {\n      return;\n    }\n\n    this.columns.forEach(column => {\n      const matchesMedia = !column.media || window.matchMedia(column.media).matches;\n\n      if (column.matchesMedia !== matchesMedia) {\n        column.matchesMedia = matchesMedia;\n\n        if (this.isOpen) {\n          // enter the zone only if the popup is actually open\n          // update its width in case it's dependent on the columns' width\n          this.zone.run(() => this.popupRef.popupElement.style.width = this.popupWidth.max);\n        }\n      }\n    });\n  }\n\n}\n\nMultiColumnComboBoxComponent.ɵfac = function MultiColumnComboBoxComponent_Factory(t) {\n  return new (t || MultiColumnComboBoxComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i2.PopupService), i0.ɵɵdirectiveInject(SelectionService), i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(DisabledItemsService), i0.ɵɵdirectiveInject(DataService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(TOUCH_ENABLED));\n};\n\nMultiColumnComboBoxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MultiColumnComboBoxComponent,\n  selectors: [[\"kendo-multicolumncombobox\"]],\n  contentQueries: function MultiColumnComboBoxComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ComboBoxColumnComponent, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.columns = _t);\n    }\n  },\n  viewQuery: function MultiColumnComboBoxComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c35, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.header = _t.first);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function MultiColumnComboBoxComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-dropdowngrid\", ctx.hostClasses)(\"k-disabled\", ctx.isDisabled);\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([SelectionService, DataService, NavigationService, DisabledItemsService, LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.multicolumncombobox'\n  }, {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MultiColumnComboBoxComponent)\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(() => MultiColumnComboBoxComponent)\n  }, {\n    provide: FilterableComponent,\n    useExisting: forwardRef(() => MultiColumnComboBoxComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 12,\n  vars: 22,\n  consts: function () {\n    let i18n_36;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text displayed in the popup when there are no items\n       * @meaning kendo.multicolumncombobox.noDataText\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_37 = goog.getMsg(\"NO DATA FOUND\");\n      i18n_36 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_37;\n    } else {\n      i18n_36 = $localize`:kendo.multicolumncombobox.noDataText|The text displayed in the popup when there are no items:NO DATA FOUND`;\n    }\n\n    let i18n_38;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the clear button\n       * @meaning kendo.multicolumncombobox.clearTitle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_39 = goog.getMsg(\"clear\");\n      i18n_38 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_39;\n    } else {\n      i18n_38 = $localize`:kendo.multicolumncombobox.clearTitle|The title of the clear button:clear`;\n    }\n\n    let i18n_40;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the select button\n       * @meaning kendo.multicolumncombobox.selectButtonText\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_41 = goog.getMsg(\"Select\");\n      i18n_40 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_41;\n    } else {\n      i18n_40 = $localize`:kendo.multicolumncombobox.selectButtonText|The title of the select button:Select`;\n    }\n\n    return [[\"kendoMultiColumnComboBoxLocalizedMessages\", \"\", \"noDataText\", i18n_36, \"clearTitle\", i18n_38, \"selectButtonText\", i18n_40], [3, \"role\", \"id\", \"listId\", \"isLoading\", \"isSuggestable\", \"isFilterable\", \"activeDescendant\", \"userInput\", \"suggestedText\", \"disabled\", \"readonly\", \"tabIndex\", \"popupOpen\", \"placeholder\", \"onNavigate\", \"valueChange\", \"onBlur\", \"onFocus\"], [\"searchbar\", \"\"], [\"class\", \"k-clear-value\", \"aria-hidden\", \"true\", 3, \"visibility\", \"kendoEventsOutsideAngular\", \"click\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"aria-hidden\", \"true\", \"unselectable\", \"on\", \"type\", \"button\", 1, \"k-input-button\", \"k-button\", \"k-icon-button\", 3, \"ngClass\", \"kendoEventsOutsideAngular\"], [\"select\", \"\"], [1, \"k-button-icon\", \"k-icon\", 3, \"ngClass\"], [\"popupTemplate\", \"\"], [3, \"resize\", 4, \"ngIf\"], [\"container\", \"\"], [\"aria-hidden\", \"true\", 1, \"k-clear-value\", 3, \"kendoEventsOutsideAngular\", \"click\"], [1, \"k-icon\", \"k-i-x\"], [4, \"ngIf\"], [1, \"k-data-table\", 3, \"ngClass\"], [1, \"k-table-header\"], [\"header\", \"\"], [1, \"k-table-header-wrap\"], [\"role\", \"presentation\", 1, \"k-table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"k-table-thead\"], [1, \"k-table-row\"], [\"rowTemplate\", \"\"], [3, \"id\", \"optionPrefix\", \"data\", \"textField\", \"valueField\", \"template\", \"groupTemplate\", \"fixedGroupTemplate\", \"height\", \"show\", \"virtual\", \"type\", \"pageChange\", \"listResize\"], [\"optionsList\", \"\"], [\"class\", \"k-no-data\", 4, \"ngIf\"], [3, \"templateContext\"], [3, \"width\", 4, \"ngIf\"], [\"class\", \"k-table-th\", 3, \"ngStyle\", \"ngClass\", 4, \"ngIf\"], [1, \"k-table-th\", 3, \"ngStyle\", \"ngClass\"], [\"class\", \"k-table-td\", 3, \"ngClass\", \"width\", \"ngStyle\", 4, \"ngIf\"], [1, \"k-table-td\", 3, \"ngClass\", \"ngStyle\"], [1, \"k-no-data\"], [3, \"ngIf\", \"templateContext\"], [3, \"ngIf\"], [1, \"k-table-footer\"], [1, \"k-table\"], [1, \"k-table-tfoot\"], [1, \"k-table-td\"], [3, \"resize\"]];\n  },\n  template: function MultiColumnComboBoxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵelementStart(1, \"kendo-searchbar\", 1, 2);\n      i0.ɵɵlistener(\"onNavigate\", function MultiColumnComboBoxComponent_Template_kendo_searchbar_onNavigate_1_listener($event) {\n        return ctx.handleNavigate($event);\n      })(\"valueChange\", function MultiColumnComboBoxComponent_Template_kendo_searchbar_valueChange_1_listener($event) {\n        return ctx.searchBarChange($event);\n      })(\"onBlur\", function MultiColumnComboBoxComponent_Template_kendo_searchbar_onBlur_1_listener() {\n        return ctx.handleBlur();\n      })(\"onFocus\", function MultiColumnComboBoxComponent_Template_kendo_searchbar_onFocus_1_listener() {\n        return ctx.handleFocus();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, MultiColumnComboBoxComponent_span_3_Template, 2, 6, \"span\", 3);\n      i0.ɵɵelementStart(4, \"button\", 4, 5);\n      i0.ɵɵelement(6, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, MultiColumnComboBoxComponent_ng_template_7_Template, 17, 20, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(9, MultiColumnComboBoxComponent_kendo_resize_sensor_9_Template, 1, 0, \"kendo-resize-sensor\", 8);\n      i0.ɵɵelementContainer(10, null, 9);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"role\", \"combobox\")(\"id\", ctx.focusableId)(\"listId\", ctx.listBoxId)(\"isLoading\", ctx.loading)(\"isSuggestable\", ctx.suggest)(\"isFilterable\", ctx.filterable)(\"activeDescendant\", ctx.activeDescendant)(\"userInput\", ctx.text)(\"suggestedText\", ctx.getSuggestion())(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly)(\"tabIndex\", ctx.tabIndex)(\"popupOpen\", ctx.isOpen)(\"placeholder\", ctx.placeholder);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.clearButton && !ctx.loading && !ctx.disabled && !ctx.readonly && (ctx.text == null ? null : ctx.text.length));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", ctx.selectButtonClasses)(\"kendoEventsOutsideAngular\", i0.ɵɵpureFunction1(20, _c23, ctx.preventEventDefault));\n      i0.ɵɵattribute(\"aria-label\", ctx.messageFor(\"selectButtonText\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", ctx.buttonClasses);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n    }\n  },\n  directives: [LocalizedMessagesDirective, SearchBarComponent, i11.NgIf, i11.NgClass, i9.EventsOutsideAngularDirective, i11.NgForOf, ListComponent, TemplateContextDirective, i11.NgStyle, i9.ResizeSensorComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MultiColumnComboBoxComponent, [{\n    type: Component,\n    args: [{\n      providers: [SelectionService, DataService, NavigationService, DisabledItemsService, LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.multicolumncombobox'\n      }, {\n        multi: true,\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => MultiColumnComboBoxComponent)\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(() => MultiColumnComboBoxComponent)\n      }, {\n        provide: FilterableComponent,\n        useExisting: forwardRef(() => MultiColumnComboBoxComponent)\n      }],\n      selector: 'kendo-multicolumncombobox',\n      template: `\n        <ng-container\n            kendoMultiColumnComboBoxLocalizedMessages\n\n            i18n-noDataText=\"kendo.multicolumncombobox.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.multicolumncombobox.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n\n            i18n-selectButtonText=\"kendo.multicolumncombobox.selectButtonText|The title of the select button\"\n            selectButtonText=\"Select\"\n        >\n        </ng-container>\n        <kendo-searchbar\n            #searchbar\n            [role]=\"'combobox'\"\n            [id]=\"focusableId\"\n            [listId]=\"listBoxId\"\n            [isLoading]=\"loading\"\n            [isSuggestable]=\"suggest\"\n            [isFilterable]=\"filterable\"\n            [activeDescendant]=\"activeDescendant\"\n            [userInput]=\"text\"\n            [suggestedText]=\"getSuggestion()\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [tabIndex]=\"tabIndex\"\n            [popupOpen]=\"isOpen\"\n            [placeholder]=\"placeholder\"\n            (onNavigate)=\"handleNavigate($event)\"\n            (valueChange)=\"searchBarChange($event)\"\n            (onBlur)=\"handleBlur()\"\n            (onFocus)=\"handleFocus()\"\n        >\n        </kendo-searchbar>\n\n        <span\n            *ngIf=\"clearButton && !loading && !disabled && !readonly && text?.length\"\n            class=\"k-clear-value\"\n            [style.visibility]=\"clearButtonVisiblity\"\n            aria-hidden=\"true\"\n            [attr.title]=\"messageFor('clearTitle')\"\n            (click)=\"clearValue($event)\"\n            [kendoEventsOutsideAngular]=\"{\n                mousedown: preventEventDefault\n            }\"\n        >\n            <span class=\"k-icon k-i-x\"></span>\n        </span>\n\n        <button\n            #select\n            tabindex=\"-1\"\n            aria-hidden=\"true\"\n            unselectable=\"on\"\n            type=\"button\"\n            class=\"k-input-button k-button k-icon-button\"\n            [ngClass]=\"selectButtonClasses\"\n            [attr.aria-label]=\"messageFor('selectButtonText')\"\n            [kendoEventsOutsideAngular]=\"{\n                mousedown: preventEventDefault\n            }\"\n        >\n            <span class=\"k-button-icon k-icon\" [ngClass]=\"buttonClasses\"></span>\n        </button>\n\n        <ng-template #popupTemplate>\n            <!--user-defined header template -->\n            <ng-template\n                *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate?.templateRef\n                }\"\n            >\n            </ng-template>\n\n            <!--data table-->\n            <div class=\"k-data-table\" [ngClass]=\"tableSizeClass\">\n\n                <!--grid header-->\n                <div\n                    #header\n                    class=\"k-table-header\"\n                >\n                    <div class=\"k-table-header-wrap\">\n                        <table class=\"k-table\" role=\"presentation\">\n                            <colgroup>\n                                <ng-container *ngFor=\"let column of columns\">\n                                    <col\n                                        *ngIf=\"!column.hidden && column.matchesMedia\"\n                                        [style.width.px]=\"column.width\"\n                                    />\n                                </ng-container>\n                            </colgroup>\n                            <thead class=\"k-table-thead\">\n                                <tr class=\"k-table-row\">\n                                    <ng-container *ngFor=\"let column of columns\">\n                                        <th\n                                            *ngIf=\"!column.hidden && column.matchesMedia\"\n                                            class=\"k-table-th\"\n                                            [ngStyle]=\"column.headerStyle\"\n                                            [ngClass]=\"column.headerClass\"\n                                        >\n                                            <ng-container *ngIf=\"!column.headerTemplate\">\n                                                {{ column.title || column.field }}\n                                            </ng-container>\n                                            <ng-template\n                                                *ngIf=\"column.headerTemplate\"\n                                                [templateContext]=\"{\n                                                    templateRef: column.headerTemplate?.templateRef,\n                                                    $implicit: column,\n                                                    column: column\n                                                }\"\n                                            >\n                                            </ng-template>\n                                        </th>\n                                    </ng-container>\n                                </tr>\n                            </thead>\n                        </table>\n                    </div>\n                </div>\n\n                <!-- item template -->\n                <ng-template #rowTemplate let-dataItem>\n                    <ng-container *ngFor=\"let column of columns\">\n                        <span\n                            *ngIf=\"!column.hidden && column.matchesMedia\"\n                            class=\"k-table-td\"\n                            [ngClass]=\"column.class\"\n                            [style.width.px]=\"column.width\"\n                            [ngStyle]=\"column.style\"\n                        >\n                            <ng-container *ngIf=\"!column.cellTemplate\">\n                                {{ textFrom(dataItem, column.field) }}\n                            </ng-container>\n                            <ng-template\n                                *ngIf=\"column.cellTemplate\"\n                                [templateContext]=\"{\n                                    templateRef: column.cellTemplate?.templateRef,\n                                    $implicit: dataItem,\n                                    dataItem: dataItem,\n                                    column: column\n                                }\"\n                            >\n                            </ng-template>\n                        </span>\n                    </ng-container>\n                </ng-template>\n\n                <!--list-->\n                <kendo-list\n                    #optionsList\n                    [id]=\"listBoxId\"\n                    [optionPrefix]=\"optionPrefix\"\n                    [data]=\"data\"\n                    [textField]=\"textField\"\n                    [valueField]=\"valueField\"\n                    [template]=\"{ templateRef: rowTemplate }\"\n                    [groupTemplate]=\"groupTemplate\"\n                    [fixedGroupTemplate]=\"fixedGroupTemplate\"\n                    [height]=\"listHeight\"\n                    [show]=\"isOpen\"\n                    [virtual]=\"virtual\"\n                    [type]=\"'dropdowngrid'\"\n                    (pageChange)=\"pageChange($event)\"\n                    (listResize)=\"updateHeaderPadding(header)\"\n                >\n                </kendo-list>\n\n                <!--no-data template-->\n                <div\n                    class=\"k-no-data\"\n                    *ngIf=\"data.length === 0\"\n                >\n                    <ng-template\n                        [ngIf]=\"noDataTemplate\"\n                        [templateContext]=\"{\n                            templateRef: noDataTemplate?.templateRef\n                        }\"\n                    >\n                    </ng-template>\n                    <ng-template [ngIf]=\"!noDataTemplate\">\n                        <div>{{ messageFor('noDataText') }}</div>\n                    </ng-template>\n                </div>\n\n                <!--user-defined footer template-->\n                <ng-container *ngIf=\"footerTemplate\">\n                    <div class=\"k-table-footer\">\n                        <table class=\"k-table\">\n                            <tfoot class=\"k-table-tfoot\">\n                                <tr class=\"k-table-row\">\n                                    <td class=\"k-table-td\">\n                                        <ng-template\n                                            [templateContext]=\"{\n                                                templateRef: footerTemplate.templateRef\n                                            }\"\n                                        >\n                                        </ng-template>\n                                    </td>\n                                </tr>\n                            </tfoot>\n                        </table>\n                    </div>\n                </ng-container>\n\n            </div>\n\n        </ng-template>\n\n        <kendo-resize-sensor\n            *ngIf=\"isOpen\"\n            (resize)=\"onResize()\"\n        >\n        </kendo-resize-sensor>\n\n        <!-- when the popupSettings.appendTo value is set to 'component', this container is used -->\n        <ng-container #container></ng-container>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: i2.PopupService\n    }, {\n      type: SelectionService\n    }, {\n      type: NavigationService\n    }, {\n      type: DisabledItemsService\n    }, {\n      type: DataService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TOUCH_ENABLED]\n      }]\n    }];\n  }, {\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-dropdowngrid']\n    }],\n    isDisabled: [{\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }],\n    columns: [{\n      type: ContentChildren,\n      args: [ComboBoxColumnComponent]\n    }],\n    header: [{\n      type: ViewChild,\n      args: ['header', {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * Renders the content of each node in the DropDownTree. To define a node template, nest an `<ng-template>` tag\n * with the `kendoDropDownTreeNodeTemplate` directive inside the `<kendo-dropdowntree>` tag.\n *\n * The current data item and hierarchical index are available as context variables:\n *\n * - `let-dataItem` (`any`) - The current data item. Available as implicit context variable.\n * - `let-index=\"index\"` (`string`) - The current item hierarchical index.\n */\n\n\nclass NodeTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNodeTemplateDirective.ɵfac = function NodeTemplateDirective_Factory(t) {\n  return new (t || NodeTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNodeTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NodeTemplateDirective,\n  selectors: [[\"\", \"kendoDropDownTreeNodeTemplate\", \"\"], [\"\", \"kendoMultiSelectTreeNodeTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NodeTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownTreeNodeTemplate], [kendoMultiSelectTreeNodeTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n\nconst DEFAULT_POPUP_SETTINGS$1 = {\n  animate: true\n};\n\nconst hasChildren$1 = () => false;\n\nconst fetchChildren$1 = () => of([]);\n\nconst itemDisabled$1 = () => false;\n\nconst isNodeVisible$1 = () => true;\n\nconst DEFAULT_SIZE$1 = 'medium';\nconst DEFAULT_ROUNDED$1 = 'medium';\nconst DEFAULT_FILL_MODE$1 = 'solid';\n/**\n * Represents the [Kendo UI DropDownTree component for Angular]({% slug overview_ddt %}).\n */\n\nclass DropDownTreeComponent {\n  constructor(injector, wrapper, popupService, navigationService, renderer, _zone, cdr, localization, touchEnabled) {\n    this.injector = injector;\n    this.wrapper = wrapper;\n    this.popupService = popupService;\n    this.navigationService = navigationService;\n    this.renderer = renderer;\n    this._zone = _zone;\n    this.cdr = cdr;\n    this.localization = localization;\n    this.touchEnabled = touchEnabled;\n    this.hostClasses = true;\n    this.role = 'combobox';\n    this.ariaHasPopup = 'tree';\n    /**\n     * Fires each time the popup is about to open\n     * ([see example]({% slug openstate_ddt %})).\n     * This event is preventable. If you cancel it, the popup will remain closed.\n     */\n\n    this.open = new EventEmitter();\n    /**\n     * Fires after the popup has been opened.\n     */\n\n    this.opened = new EventEmitter();\n    /**\n     * Fires each time the popup is about to close\n     * ([see example]({% slug openstate_ddt %})).\n     * This event is preventable. If you cancel it, the popup will remain open.\n     */\n\n    this.close = new EventEmitter();\n    /**\n     * Fires after the popup has been closed.\n     */\n\n    this.closed = new EventEmitter();\n    /**\n     * Fires when the user expands a node in the popup TreeView.\n     */\n\n    this.nodeExpand = new EventEmitter();\n    /**\n     * Fires when the user collapses a node in the popup TreeView.\n     */\n\n    this.nodeCollapse = new EventEmitter();\n    /**\n     * Fires each time the user focuses the DropDownTree.\n     */\n\n    this.onFocus = new EventEmitter();\n    /**\n     * Fires each time the DropDownTree gets blurred.\n     */\n\n    this.onBlur = new EventEmitter();\n    /**\n     * Fires each time the value is changed\n     * ([see example]({% slug overview_ddt %}#toc-events)).\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires when the value of the built-in filter input element changes.\n     */\n\n    this.filterChange = new EventEmitter();\n    /**\n     * If set to `true`, renders a button on hovering over the component.\n     * Clicking this button resets the value of the component to `undefined` and triggers the `change` event.\n     */\n\n    this.clearButton = true;\n    /**\n     * A function which determines if a specific node has child nodes.\n     */\n\n    this.hasChildren = hasChildren$1;\n    /**\n     * A function which provides the child nodes for a given parent node.\n     */\n\n    this.fetchChildren = fetchChildren$1;\n    /**\n     * The hint which is displayed when the component is empty.\n     */\n\n    this.placeholder = \"\";\n    /**\n     * Sets the height of the options list. By default, `listHeight` is 200px.\n     *\n     * > The `listHeight` property affects only the list of options and not the whole popup container.\n     * > To set the height of the popup container, use `popupSettings.height`.\n     */\n\n    this.listHeight = 200;\n    /**\n     * Sets the disabled state of the component.\n     */\n\n    this.disabled = false;\n    /**\n     * Sets the read-only state of the component.\n     */\n\n    this.readonly = false;\n    /**\n     * Specifies the type of the selected value\n     * ([more information and example]({% slug valuebinding_ddt %}#toc-primitive-values)).\n     * If set to `true`, the selected value has to be of a primitive value.\n     */\n\n    this.valuePrimitive = false;\n    /**\n     * A function that is executed for each data item and determines if a specific item is disabled.\n     */\n\n    this.itemDisabled = itemDisabled$1;\n    /**\n     * A callback which determines whether a tree node should be rendered as hidden. The utility .k-display-none class is used to hide the nodes.\n     * Useful for custom filtering implementations.\n     */\n\n    this.isNodeVisible = isNodeVisible$1;\n    /**\n     * Indicates whether the child nodes will be fetched on node expand or will be initially prefetched.\n     * @default true\n     */\n\n    this.loadOnDemand = true;\n    /**\n     * Renders the built-in input element for filtering the DropDownTree.\n     * If set to `true`, the component emits the `filterChange` event, which can be used to [filter the DropDownTree manually]({% slug filtering_ddt %}#toc-manual-filtering).\n     * A built-in filtering implementation is available to use with the [`kendoDropDownTreeHierarchyBinding`]({% slug api_dropdowns_dropdowntreehierarchybindingdirective %}) and [`kendoDropDownTreeFlatBinding`]({% slug api_dropdowns_dropdowntreeflatbindingdirective %}) directives.\n     */\n\n    this.filterable = false;\n    /**\n     * @hidden\n     */\n\n    this.filter = '';\n    /**\n     * @hidden\n     *\n     * Used by the kendo-label and kendo-floatinglabel to access and associate the focusable element with the provided label via aria-labelledby.\n     */\n\n    this.focusableId = `k-${guid$1()}`;\n    /**\n     * @hidden\n     */\n\n    this.selectedKeys = [];\n    /**\n     * @hidden\n     */\n\n    this.filterStateChange = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.allNodesHidden = false;\n    /**\n     * @hidden\n     *\n     * Used to associate the value label with the wrapper via aria-describedby.\n     */\n\n    this.valueLabelId = `k-${guid$1()}`;\n    this._popupSettings = DEFAULT_POPUP_SETTINGS$1;\n    this._tabindex = 0;\n    this._isFocused = false;\n    this._popupId = guid$1();\n    this._size = 'medium';\n    this._rounded = 'medium';\n    this._fillMode = 'solid';\n    this.subscriptions = [];\n    this.onTouchedCallback = noop;\n    this.onChangeCallback = noop;\n    this.direction = localization.rtl ? 'rtl' : 'ltr';\n    this.subscribeEvents();\n    this.subscribeTouchEvents();\n    this.subscribeFocusEvents();\n  }\n\n  get hostAriaInvalid() {\n    return this.formControl ? this.formControl.invalid.toString() : null;\n  }\n\n  get isDisabled() {\n    return this.disabled;\n  }\n\n  get isDisabledAttribute() {\n    return this.disabled ? '' : null;\n  }\n\n  get isLoading() {\n    return this.loading;\n  }\n\n  get isBusy() {\n    return this.loading ? 'true' : null;\n  }\n\n  get hostAriaControls() {\n    return this.isOpen ? this._popupId : null;\n  }\n\n  get id() {\n    return this.focusableId;\n  }\n\n  get hostTabIndex() {\n    return this.tabindex;\n  }\n\n  get isAriaExpanded() {\n    return this.isOpen;\n  }\n\n  get hostAriaAutocomplete() {\n    return this.filterable ? 'list' : null;\n  }\n\n  get isReadonly() {\n    return this.readonly ? '' : null;\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleClick() {\n    this.togglePopup(!this.isOpen);\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleKeydown(event) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    const eventData = event;\n    this.navigationService.process({\n      originalEvent: eventData\n    });\n  }\n\n  set treeview(treeview) {\n    if (treeview) {\n      if (this.isFocused && !this.filterable || this.touchEnabled) {\n        treeview.focus();\n      } // the treeview animations are initially disabled (we don't want expand animations during popup opening)\n      // re-enables the animations for user interaction\n\n\n      treeview.animate = true;\n      this._treeview = treeview;\n    }\n  }\n\n  get treeview() {\n    return this._treeview;\n  }\n  /**\n   * Sets the data of the DropDownTree.\n   *\n   * > The data has to be provided in an array-like list with objects.\n   */\n\n\n  set data(data) {\n    this._nodes = data;\n    this.setState();\n  }\n\n  get data() {\n    return this._nodes;\n  }\n  /**\n   * Sets the value of the DropDownTree.\n   * It can either be of the primitive (string, numbers) or of the complex (objects) type.\n   * To define the type, use the `valuePrimitive` option.\n   *\n   */\n\n\n  set value(newValue) {\n    this._value = newValue;\n    this.setState();\n  }\n\n  get value() {\n    return this._value;\n  }\n  /**\n   * Configures the popup of the DropDownTree.\n   *\n   * The available options are:\n   * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n   * - `width: Number | String`&mdash;Sets the width of the popup container. By default, the width of the host element is used. If set to `auto`, the component automatically adjusts the width of the popup and no item labels are wrapped.\n   * - `height: Number`&mdash;Sets the height of the popup container.\n   * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n   * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n   */\n\n\n  set popupSettings(settings) {\n    this._popupSettings = Object.assign({}, DEFAULT_POPUP_SETTINGS$1, settings);\n  }\n\n  get popupSettings() {\n    return this._popupSettings;\n  }\n  /**\n   * Keeps the current `dataItem` object in order to resolve selection.\n   * Needs to be provided when `value` is bound in and `valuePrimitive` is set to true.\n   */\n\n\n  set dataItem(item) {\n    this._dataItem = item;\n    this.setState();\n  }\n\n  get dataItem() {\n    return this._dataItem ? this._dataItem : this.value;\n  }\n  /**\n   * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n   */\n\n\n  set tabindex(value) {\n    const providedTabIndex = Number(value);\n    const defaultTabIndex = 0;\n    this._tabindex = !isNaN(providedTabIndex) ? providedTabIndex : defaultTabIndex;\n  }\n\n  get tabindex() {\n    return this.disabled ? -1 : this._tabindex;\n  }\n  /**\n   * Sets the size of the component.\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `none`\n   *\n   */\n\n\n  set size(size) {\n    const newSize = size ? size : DEFAULT_SIZE$1;\n    this.renderer.removeClass(this.wrapper.nativeElement, getSizeClass('picker', this.size));\n\n    if (size !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('picker', newSize));\n    }\n\n    this._size = newSize;\n  }\n\n  get size() {\n    return this._size;\n  }\n  /**\n   * Sets the border radius of the component.\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `full`\n   * * `none`\n   *\n   */\n\n\n  set rounded(rounded) {\n    const newRounded = rounded ? rounded : DEFAULT_ROUNDED$1;\n    this.renderer.removeClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n\n    if (rounded !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(newRounded));\n    }\n\n    this._rounded = newRounded;\n  }\n\n  get rounded() {\n    return this._rounded;\n  }\n  /**\n   * Sets the fillMode of the component.\n   *\n   * The possible values are:\n   * * `flat`\n   * * `solid` (default)\n   * * `outline`\n   * * `none`\n   *\n   */\n\n\n  set fillMode(fillMode) {\n    const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$1;\n    this.renderer.removeClass(this.wrapper.nativeElement, getFillModeClass('picker', this.fillMode));\n\n    if (fillMode !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('picker', newFillMode));\n    }\n\n    this._fillMode = newFillMode;\n  }\n\n  get fillMode() {\n    return this._fillMode;\n  }\n\n  set isFocused(isFocused) {\n    this.renderer[isFocused ? 'addClass' : 'removeClass'](this.wrapper.nativeElement, 'k-focus');\n    this._isFocused = isFocused;\n  }\n\n  get isFocused() {\n    return this._isFocused;\n  }\n\n  get width() {\n    const wrapperWidth = this.wrapper.nativeElement.offsetWidth;\n    const width = this.popupSettings.width || wrapperWidth;\n    const minWidth = isNaN(wrapperWidth) ? wrapperWidth : `${wrapperWidth}px`;\n    const maxWidth = isNaN(width) ? width : `${width}px`;\n    return {\n      min: minWidth,\n      max: maxWidth\n    };\n  }\n\n  get height() {\n    const popupHeight = this.popupSettings.height;\n    return isPresent(popupHeight) ? `${popupHeight}px` : 'auto';\n  }\n  /**\n   * Returns the current open state of the popup.\n   */\n\n\n  get isOpen() {\n    return isPresent(this.popupRef);\n  }\n\n  get clearButtonVisiblity() {\n    if (this.touchEnabled) {\n      return 'visible';\n    }\n  }\n  /**\n   * @hidden\n   *\n   * Alias for `isNodeExpanded`. Used for compatibility with the `ExpandableComponent` interface.\n   * Required for the expand-directive.\n   */\n\n\n  set isExpanded(callback) {\n    this.isNodeExpanded = callback;\n  }\n\n  get isExpanded() {\n    return this.isNodeExpanded;\n  }\n  /**\n   * @hidden\n   *\n   * Alias for `nodeExpand`. Used for compatibility with the `ExpandableComponent` interface.\n   * Required for the expand-directive.\n   */\n\n\n  get expand() {\n    return this.nodeExpand;\n  }\n  /**\n   * @hidden\n   *\n   * Alias for `nodeCollapse`. Used for compatibility with the `ExpandableComponent` interface.\n   * Required for the expand-directive.\n   */\n\n\n  get collapse() {\n    return this.nodeCollapse;\n  }\n  /**\n   * @hidden\n   *\n   * Alias for `data`. Used for compatibility with the `DataBoundComponent` interface.\n   * Required for the data-binding directives.\n   */\n\n\n  set nodes(nodes) {\n    this.data = nodes;\n  }\n\n  get nodes() {\n    return this.data;\n  }\n  /**\n   * @hidden\n   *\n   * Alias for `fetchChildren`. Used for compatibility with the `DataBoundComponent` interface.\n   * Required for the data-binding directives\n   */\n\n\n  set children(callback) {\n    this.fetchChildren = callback;\n  }\n\n  get children() {\n    return this.fetchChildren;\n  }\n  /**\n   * @hidden\n   *\n   * Alias for `isNodeVisible`. Used for compatibility with the `DataBoundComponent` interface.\n   * The `DataBoundComponent` interface is used in the data-binding directives.\n   */\n\n\n  set isVisible(callback) {\n    this.isNodeVisible = callback;\n  }\n\n  get isVisible() {\n    return this.isNodeVisible;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get formControl() {\n    const ngControl = this.injector.get(NgControl, null);\n    return (ngControl === null || ngControl === void 0 ? void 0 : ngControl.control) || null;\n  }\n\n  ngOnInit() {\n    this.renderer.removeAttribute(this.wrapper.nativeElement, 'tabindex');\n    this.assignAriaDescribedBy();\n    this.subscriptions.push(this.localization.changes.subscribe(({\n      rtl\n    }) => {\n      this.direction = rtl ? 'rtl' : 'ltr';\n      this.cdr.markForCheck();\n    }));\n    this.setComponentClasses();\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngOnDestroy() {\n    this.destroyPopup();\n    this.unsubscribeEvents();\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngOnChanges(changes) {\n    if (anyChanged(['textField', 'valueField', 'valuePrimitive'], changes, false)) {\n      this.setState();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngAfterContentChecked() {\n    this.verifySettings();\n  }\n  /**\n   * @hidden\n   *\n   * Used by the kendo-floatinglabel component to determine if the floating label\n   * should be rendered inside the input when the component is not focused.\n   */\n\n\n  isEmpty() {\n    return !this.text && !this.placeholder;\n  }\n  /**\n   * @hidden\n   */\n\n\n  togglePopup(open) {\n    const isDisabled = this.disabled || this.readonly;\n    const sameState = this.isOpen === open;\n\n    if (isDisabled || sameState) {\n      return;\n    }\n\n    const togglePrevented = this.triggerPopupEvents(open);\n\n    if (!togglePrevented) {\n      if (open) {\n        this.createPopup();\n      } else {\n        this.destroyPopup();\n      }\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleFocus(event) {\n    if (event.target !== this.wrapper.nativeElement) {\n      return;\n    }\n\n    event.stopImmediatePropagation();\n\n    if (!this.isFocused) {\n      this.isFocused = true;\n\n      if (hasObservers(this.onFocus)) {\n        this._zone.run(() => {\n          this.onFocus.emit();\n        });\n      }\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleBlur(e) {\n    const relatedTarget = e && e.relatedTarget;\n\n    if (this.wrapper.nativeElement.contains(relatedTarget) || this.isOpen && this.popupRef.popupElement.contains(relatedTarget)) {\n      return;\n    }\n\n    this.isFocused = false;\n\n    if (hasObservers(this.onBlur) || isUntouched(this.wrapper.nativeElement)) {\n      this._zone.run(() => {\n        this.togglePopup(false);\n        this.onBlur.emit();\n        this.onTouchedCallback();\n      });\n    } else {\n      this.togglePopup(false);\n    }\n  }\n  /**\n   * Focuses a specific item of the DropDownTree based on a provided index in the format of `1_1`.\n   * The targeted item should be expanded in order for it to be focused.\n   * If null or invalid index is provided the focus will be set on the first item.\n   */\n\n\n  focusItemAt(index) {\n    if (this.treeview) {\n      const lookup = this.treeview.itemLookup(index);\n      let isItemDisabled = !isPresent(lookup) || this.treeview.isDisabled(lookup.item.dataItem, lookup.item.index);\n\n      if (!isItemDisabled) {\n        this.treeview.focus(index);\n      }\n    }\n  }\n  /**\n   * Focuses the DropDownTree.\n   */\n\n\n  focus() {\n    if (!this.disabled) {\n      this.wrapper.nativeElement.focus();\n    }\n  }\n  /**\n   * Blurs the DropDownTree.\n   */\n\n\n  blur() {\n    if (!this.disabled) {\n      this.wrapper.nativeElement.blur();\n    }\n  }\n  /**\n   * Resets the value of the DropDownTree.\n   * If you use the `reset` method to clear the value of the component,\n   * the model will not update automatically and the `valueChange` event will not be fired.\n   */\n\n\n  reset() {\n    this.value = undefined;\n    this.dataItem = undefined;\n  }\n  /**\n   * Toggles the visibility of the popup\n   * ([see example]({% slug openstate_ddt %})).\n   * If you use the `toggle` method to open or close the popup, the `open` and `close` events will not be fired.\n   *\n   * @param open - The state of the popup.\n   */\n\n\n  toggle(open) {\n    // The Promise is required to open the popup on load.\n    // Otherwise, the \"ViewContainerRef not found...\" error will be thrown.\n    Promise.resolve(null).then(() => {\n      const shouldOpen = isPresent(open) ? open : !isPresent(this.popupRef);\n      this.destroyPopup();\n\n      if (shouldOpen) {\n        this.createPopup();\n      }\n    });\n  }\n  /**\n   * @hidden\n   */\n\n\n  get popupContainerClasses() {\n    const containerClasses = ['k-popup-dropdowntree'];\n\n    if (this.popupSettings.popupClass) {\n      containerClasses.push(this.popupSettings.popupClass);\n    }\n\n    return containerClasses;\n  }\n  /**\n   * @hidden\n   */\n\n\n  onSelectionChange({\n    dataItem,\n    index\n  }) {\n    this.valueDepth = index.split('_').length - 1;\n    const valueField = this.getField(this.valueField, dataItem);\n    const newValue = this.valuePrimitive ? getter$1(valueField)(dataItem) : dataItem;\n    const shouldUpdateValue = newValue !== this.value;\n\n    if (shouldUpdateValue) {\n      this.value = newValue;\n      this.dataItem = dataItem;\n      this.emitValueChange(this.value);\n    }\n\n    this.togglePopup(false);\n    this.focus();\n  }\n  /**\n   * @hidden\n   */\n\n\n  messageFor(key) {\n    return this.localization.get(key);\n  }\n  /**\n   * @hidden\n   */\n\n\n  clearValue(event) {\n    event.stopImmediatePropagation();\n    this.focus();\n    this.value = undefined;\n    this.dataItem = undefined;\n    this.clearState();\n    this.valueChange.emit(undefined);\n    this.emitValueChange();\n  }\n\n  get appendTo() {\n    const {\n      appendTo\n    } = this.popupSettings;\n\n    if (!appendTo || appendTo === 'root') {\n      return undefined;\n    }\n\n    return appendTo === 'component' ? this.container : appendTo;\n  }\n  /**\n   * @hidden\n   */\n\n\n  preventEventDefault(event) {\n    event.preventDefault();\n  }\n  /**\n   * @hidden\n   */\n\n\n  writeValue(value) {\n    // If the user resets the value by providing null/undefined we need to reset the `dataItem`\n    // Because upon initialization of the component the `writeValue` is being called twice -\n    // first time with `null` value regardless of sync/async value - an extra check is added to\n    // distinguish between client reset and initial phanotm 'null' value\n    if (!isPresent(value) && isPresent(this.value)) {\n      this.dataItem = null;\n    }\n\n    this.value = value === null ? undefined : value;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnChange(fn) {\n    this.onChangeCallback = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnTouched(fn) {\n    this.onTouchedCallback = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleFilterInputChange(input) {\n    this.filterChange.next(input.value);\n    this.allNodesHidden = this.nodes.every((node, index) => !this.isVisible(node, String(index)));\n  }\n  /**\n   * @hidden\n   */\n\n\n  get buttonClasses() {\n    return this.loading ? 'k-i-loading k-input-loading-icon' : 'k-i-caret-alt-down';\n  }\n  /**\n   * @hidden\n   */\n\n\n  get selectButtonClasses() {\n    return `${this.size ? getSizeClass('button', this.size) : ''} ${this.fillMode ? 'k-button-' + this.fillMode : ''} ${this.fillMode ? 'k-button-' + this.fillMode + '-base' : ''}`;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get filterInputClasses() {\n    return `${this.size ? getSizeClass('input', this.size) : ''} ${this.fillMode ? 'k-input-' + this.fillMode : ''} ${this.rounded ? getRoundedClass(this.rounded) : ''}`;\n  }\n\n  verifySettings() {\n    if (!isDevMode()) {\n      return;\n    }\n\n    if (this.valuePrimitive === true && isPresent(this.value) && typeof this.value === \"object\") {\n      throw new Error(DropDownTreeMessages.primitive);\n    }\n\n    if (this.valuePrimitive === true && isPresent(this.value) && typeof this.dataItem !== \"object\") {\n      throw new Error(DropDownTreeMessages.dataItem);\n    }\n\n    if (this.valuePrimitive === false && isPresent(this.value) && typeof this.value !== \"object\") {\n      throw new Error(DropDownTreeMessages.object);\n    }\n\n    if (!isPresent(this.valueField) || !isPresent(this.textField)) {\n      throw new Error(DropDownTreeMessages.textAndValue);\n    }\n\n    if ((isArray(this.valueField) || isArray(this.textField)) && isPresent(this.value) && !isPresent(this.valueDepth)) {\n      throw new Error(DropDownTreeMessages.valueDepth);\n    }\n  }\n\n  emitValueChange(value) {\n    this.onChangeCallback(value);\n    this.valueChange.emit(value);\n  }\n\n  getText(textField, dataItem) {\n    if (isPresent(dataItem) && isPresent(textField)) {\n      const field = this.getField(textField, dataItem);\n      return getter$1(field)(dataItem);\n    }\n\n    return null;\n  }\n  /**\n   * @hidden\n   *\n   * Determines the `valueField` and `textField` for a specific level in the data set\n   *  @param field - the field value (string | string[])\n   *  @param value - current value\n   */\n\n\n  getField(field, value) {\n    const fieldsCount = field.length - 1;\n\n    if (typeof field === 'string') {\n      // If the `valueField` | `textField` is the same for all levels\n      return field;\n    } else if (isPresent(this.valueDepth)) {\n      // When `valueDepth` can be defined from the index on selectionChange or provided by the user\n      return fieldsCount < this.valueDepth ? field[fieldsCount] : field[this.valueDepth];\n    } else {\n      // Fallback: Look to find a match of each field in the current data item\n      // Side effect may occur if all of the listed fields are present in the data item\n      return field.find(item => item in value);\n    }\n  }\n\n  triggerPopupEvents(open) {\n    const eventArgs = new PreventableEvent();\n\n    if (open) {\n      this.open.emit(eventArgs);\n    } else {\n      this.close.emit(eventArgs);\n    }\n\n    return eventArgs.isDefaultPrevented();\n  }\n\n  createPopup() {\n    const horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n    const anchorPosition = {\n      horizontal: horizontalAlign,\n      vertical: 'bottom'\n    };\n    const popupPosition = {\n      horizontal: horizontalAlign,\n      vertical: 'top'\n    };\n    this.popupRef = this.popupService.open({\n      anchor: this.wrapper,\n      appendTo: this.appendTo,\n      anchorAlign: anchorPosition,\n      content: this.popupTemplate,\n      popupAlign: popupPosition,\n      positionMode: 'absolute',\n      popupClass: this.popupContainerClasses\n    });\n    const popupWrapper = this.popupRef.popupElement;\n    const {\n      min,\n      max\n    } = this.width;\n    this.renderer.setStyle(popupWrapper, 'minWidth', min);\n    this.renderer.setStyle(popupWrapper, 'width', max);\n    this.renderer.setStyle(popupWrapper, 'height', this.height);\n    this.renderer.setAttribute(popupWrapper, 'dir', this.direction);\n    this.renderer.setAttribute(popupWrapper, 'id', this._popupId);\n    this.popupRef.popupOpen.subscribe(() => {\n      this.cdr.detectChanges();\n      this.opened.emit();\n    });\n    this.popupRef.popupClose.subscribe(() => {\n      this.closed.emit();\n    });\n  }\n\n  destroyPopup() {\n    if (this.popupRef) {\n      this.popupRef.close();\n      this.popupRef = null;\n\n      if (this.filter !== \"\") {\n        this.filter = \"\";\n        this.allNodesHidden = false;\n\n        if (hasObservers(this.filterChange)) {\n          this._zone.run(() => {\n            this.filterChange.emit(\"\");\n          });\n        }\n      }\n    }\n  }\n\n  handleEscape() {\n    this.togglePopup(false);\n    this.focus();\n  }\n\n  setState() {\n    if (isPresent(this.value) && isPresent(this.dataItem) && isPresent(this.valueField)) {\n      this.text = this.getText(this.textField, this.dataItem);\n      const valueField = this.getField(this.valueField, this.dataItem);\n      this.selectBy = valueField;\n      this.selectedKeys = [getter$1(valueField)(this.dataItem)];\n    } else {\n      this.clearState();\n    }\n\n    this.cdr.markForCheck();\n  }\n\n  clearState() {\n    this.text = undefined;\n    this.selectedKeys = [];\n  }\n\n  subscribeEvents() {\n    this.subscriptions.push(this.navigationService.open.subscribe(event => {\n      event.originalEvent.preventDefault();\n      this.togglePopup(true);\n    }), this.navigationService.close.subscribe(event => {\n      event.originalEvent.preventDefault();\n      this.togglePopup(false);\n      this.focus();\n    }), this.navigationService.enter.pipe(tap(event => event.originalEvent.preventDefault())).subscribe(() => this.togglePopup(true)), this.navigationService.esc.subscribe(() => this.handleEscape()), this.navigationService.tab.subscribe(() => this.focus()), this.navigationService.down.subscribe(event => {\n      if (!this.treeview) {\n        return;\n      }\n\n      event.originalEvent.preventDefault();\n\n      if (!this.treeview.isActive) {\n        this.treeview.focus();\n      }\n    }), this.navigationService.up.subscribe(event => {\n      if (!this.treeview) {\n        return;\n      }\n\n      event.originalEvent.preventDefault();\n\n      if (this.filterable && this.treeview['navigationService']['activeIndex'] === '0') {\n        this.filterInput.nativeElement.focus();\n      }\n    }));\n  }\n\n  subscribeTouchEvents() {\n    if (!isDocumentAvailable() || !this.touchEnabled) {\n      return;\n    }\n\n    this._zone.runOutsideAngular(() => // Roll up DropDownTree on iOS when tapped outside\n    this.touchstartDisposeHandler = this.renderer.listen(document, 'touchstart', e => {\n      const target = e.target;\n\n      if (this.isFocused && !inDropDown(this.wrapper, target, this.popupRef)) {\n        this._zone.run(() => {\n          if (this.isOpen) {\n            this.treeview.blur();\n          }\n\n          this.blur();\n        });\n      }\n    }));\n  }\n\n  subscribeFocusEvents() {\n    if (isDocumentAvailable()) {\n      this.handleFocus = this.handleFocus.bind(this);\n      this.handleDocumentBlur = this.handleDocumentBlur.bind(this);\n\n      this._zone.runOutsideAngular(() => {\n        const useCapture = true;\n        document.addEventListener('focus', this.handleFocus, useCapture);\n        document.addEventListener('blur', this.handleDocumentBlur, useCapture);\n      });\n    }\n  }\n\n  unSubscribeFocusEvents() {\n    if (isDocumentAvailable()) {\n      const useCapture = true;\n      document.removeEventListener('focus', this.handleFocus, useCapture);\n      document.removeEventListener('blur', this.handleDocumentBlur, useCapture);\n    }\n  }\n\n  unsubscribeEvents() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.unSubscribeFocusEvents();\n\n    if (this.touchstartDisposeHandler) {\n      this.touchstartDisposeHandler();\n    }\n  }\n\n  handleDocumentBlur(event) {\n    if (event.target !== this.wrapper.nativeElement) {\n      return;\n    }\n\n    event.stopImmediatePropagation();\n    this.handleBlur(event);\n  }\n\n  assignAriaDescribedBy() {\n    const currentValue = this.wrapper.nativeElement.getAttribute('aria-describedby') || ''; // add to the current value - don't replace it (the aria-describedby is used by the FormField component as well)\n\n    const newValue = `${this.valueLabelId} ${currentValue.trim()}`.trim();\n    this.renderer.setAttribute(this.wrapper.nativeElement, 'aria-describedby', newValue);\n  }\n\n  setComponentClasses() {\n    if (this.size !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('picker', this.size));\n    }\n\n    if (this.rounded !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n    }\n\n    if (this.fillMode !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('picker', this.fillMode));\n    }\n  }\n\n}\n\nDropDownTreeComponent.ɵfac = function DropDownTreeComponent_Factory(t) {\n  return new (t || DropDownTreeComponent)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.PopupService), i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(TOUCH_ENABLED, 8));\n};\n\nDropDownTreeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DropDownTreeComponent,\n  selectors: [[\"kendo-dropdowntree\"]],\n  contentQueries: function DropDownTreeComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NoDataTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, HeaderTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, FooterTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, NodeTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, ValueTemplateDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.noDataTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nodeTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.valueTemplate = _t.first);\n    }\n  },\n  viewQuery: function DropDownTreeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c9, 7);\n      i0.ɵɵviewQuery(_c8, 7, ViewContainerRef);\n      i0.ɵɵviewQuery(_c44, 5);\n      i0.ɵɵviewQuery(_c45, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.treeview = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filterInput = _t.first);\n    }\n  },\n  hostVars: 20,\n  hostBindings: function DropDownTreeComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function DropDownTreeComponent_click_HostBindingHandler() {\n        return ctx.handleClick();\n      })(\"keydown\", function DropDownTreeComponent_keydown_HostBindingHandler($event) {\n        return ctx.handleKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-invalid\", ctx.hostAriaInvalid)(\"disabled\", ctx.isDisabledAttribute)(\"aria-busy\", ctx.isBusy)(\"aria-controls\", ctx.hostAriaControls)(\"id\", ctx.id)(\"dir\", ctx.direction)(\"tabindex\", ctx.hostTabIndex)(\"role\", ctx.role)(\"aria-haspopup\", ctx.ariaHasPopup)(\"aria-expanded\", ctx.isAriaExpanded)(\"aria-autocomplete\", ctx.hostAriaAutocomplete)(\"readonly\", ctx.isReadonly);\n      i0.ɵɵclassProp(\"k-dropdowntree\", ctx.hostClasses)(\"k-picker\", ctx.hostClasses)(\"k-disabled\", ctx.isDisabled)(\"k-loading\", ctx.isLoading);\n    }\n  },\n  inputs: {\n    loading: \"loading\",\n    clearButton: \"clearButton\",\n    data: \"data\",\n    value: \"value\",\n    textField: \"textField\",\n    valueField: \"valueField\",\n    valueDepth: \"valueDepth\",\n    hasChildren: \"hasChildren\",\n    fetchChildren: \"fetchChildren\",\n    placeholder: \"placeholder\",\n    popupSettings: \"popupSettings\",\n    dataItem: \"dataItem\",\n    listHeight: \"listHeight\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    valuePrimitive: \"valuePrimitive\",\n    tabindex: \"tabindex\",\n    size: \"size\",\n    rounded: \"rounded\",\n    fillMode: \"fillMode\",\n    itemDisabled: \"itemDisabled\",\n    isNodeExpanded: \"isNodeExpanded\",\n    isNodeVisible: \"isNodeVisible\",\n    loadOnDemand: \"loadOnDemand\",\n    filterable: \"filterable\",\n    filter: \"filter\",\n    focusableId: \"focusableId\"\n  },\n  outputs: {\n    open: \"open\",\n    opened: \"opened\",\n    close: \"close\",\n    closed: \"closed\",\n    nodeExpand: \"nodeExpand\",\n    nodeCollapse: \"nodeCollapse\",\n    onFocus: \"focus\",\n    onBlur: \"blur\",\n    valueChange: \"valueChange\",\n    filterChange: \"filterChange\"\n  },\n  exportAs: [\"kendoDropDownTree\"],\n  features: [i0.ɵɵProvidersFeature([DataService, SelectionService, NavigationService, DisabledItemsService, LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.dropdowntree'\n  }, {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DropDownTreeComponent)\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(() => DropDownTreeComponent)\n  }, {\n    provide: DataBoundComponent,\n    useExisting: forwardRef(() => DropDownTreeComponent)\n  }, {\n    provide: ExpandableComponent,\n    useExisting: forwardRef(() => DropDownTreeComponent)\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 12,\n  vars: 7,\n  consts: function () {\n    let i18n_46;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text displayed in the popup when there are no items\n       * @meaning kendo.dropdowntree.noDataText\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_47 = goog.getMsg(\"NO DATA FOUND\");\n      i18n_46 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_47;\n    } else {\n      i18n_46 = $localize`:kendo.dropdowntree.noDataText|The text displayed in the popup when there are no items:NO DATA FOUND`;\n    }\n\n    let i18n_48;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the clear button\n       * @meaning kendo.dropdowntree.clearTitle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_49 = goog.getMsg(\"clear\");\n      i18n_48 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_49;\n    } else {\n      i18n_48 = $localize`:kendo.dropdowntree.clearTitle|The title of the clear button:clear`;\n    }\n\n    let i18n_50;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text set as aria-label on the select button\n       * @meaning kendo.dropdowntree.selectButtonText\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_51 = goog.getMsg(\"Select\");\n      i18n_50 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_51;\n    } else {\n      i18n_50 = $localize`:kendo.dropdowntree.selectButtonText|The text set as aria-label on the select button:Select`;\n    }\n\n    return [[\"kendoDropDownTreeLocalizedMessages\", \"\", \"noDataText\", i18n_46, \"clearTitle\", i18n_48, \"selectButtonText\", i18n_50], [1, \"k-input-inner\"], [1, \"k-input-value-text\"], [4, \"ngIf\"], [3, \"ngIf\"], [\"class\", \"k-clear-value\", \"aria-hidden\", \"true\", 3, \"visibility\", \"click\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"type\", \"button\", \"aria-hidden\", \"true\", 1, \"k-input-button\", \"k-button\", \"k-icon-button\", 3, \"ngClass\"], [1, \"k-button-icon\", \"k-icon\", 3, \"ngClass\"], [\"popupTemplate\", \"\"], [\"container\", \"\"], [3, \"templateContext\"], [\"aria-hidden\", \"true\", 1, \"k-clear-value\", 3, \"click\"], [1, \"k-icon\", \"k-i-x\"], [\"class\", \"k-list-filter\", 4, \"ngIf\"], [\"kendoTreeViewSelectable\", \"\", 3, \"size\", \"nodes\", \"maxHeight\", \"animate\", \"selectedKeys\", \"selectBy\", \"textField\", \"children\", \"hasChildren\", \"loadOnDemand\", \"isExpanded\", \"isDisabled\", \"nodeTemplate\", \"filter\", \"isVisible\", \"selectedKeysChange\", \"focusout\", \"keydown\", \"selectionChange\", \"expand\", \"collapse\", 4, \"ngIf\"], [\"class\", \"k-no-data\", 4, \"ngIf\"], [1, \"k-list-filter\"], [1, \"k-textbox\", \"k-input\", 3, \"ngClass\"], [1, \"k-input-prefix\"], [1, \"k-input-icon\", \"k-icon\", \"k-i-search\"], [\"role\", \"textbox\", \"aria-haspopup\", \"true\", \"aria-expanded\", \"false\", \"tabindex\", \"0\", \"aria-disabled\", \"false\", \"aria-readonly\", \"false\", 1, \"k-input-inner\", 3, \"filterInput\", \"ngModel\", \"kendoEventsOutsideAngular\", \"scope\", \"input\", \"keydown.arrowdown\", \"keydown.alt.arrowup\", \"ngModelChange\"], [\"filterInput\", \"\"], [\"kendoTreeViewSelectable\", \"\", 3, \"size\", \"nodes\", \"animate\", \"selectedKeys\", \"selectBy\", \"textField\", \"children\", \"hasChildren\", \"loadOnDemand\", \"isExpanded\", \"isDisabled\", \"nodeTemplate\", \"filter\", \"isVisible\", \"selectedKeysChange\", \"focusout\", \"keydown\", \"selectionChange\", \"expand\", \"collapse\"], [\"treeview\", \"\"], [1, \"k-no-data\"], [3, \"ngIf\", \"templateContext\"]];\n  },\n  template: function DropDownTreeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵelementStart(1, \"span\", 1);\n      i0.ɵɵelementStart(2, \"span\", 2);\n      i0.ɵɵtemplate(3, DropDownTreeComponent_3_Template, 1, 4, undefined, 3);\n      i0.ɵɵtemplate(4, DropDownTreeComponent_ng_template_4_Template, 1, 1, \"ng-template\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, DropDownTreeComponent_span_5_Template, 2, 3, \"span\", 5);\n      i0.ɵɵelementStart(6, \"button\", 6);\n      i0.ɵɵelement(7, \"span\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, DropDownTreeComponent_ng_template_8_Template, 5, 5, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementContainer(10, null, 9);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"id\", ctx.valueLabelId);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.valueTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.valueTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loading && !ctx.readonly && ctx.clearButton && (ctx.text == null ? null : ctx.text.length) && !ctx.disabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", ctx.selectButtonClasses);\n      i0.ɵɵattribute(\"aria-label\", ctx.messageFor(\"selectButtonText\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", ctx.buttonClasses);\n    }\n  },\n  directives: [LocalizedMessagesDirective, i11.NgIf, i11.NgClass, TemplateContextDirective, i12.DefaultValueAccessor, FilterInputDirective, i12.NgControlStatus, i12.NgModel, i9.EventsOutsideAngularDirective, i1$1.TreeViewComponent, i1$1.SelectDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropDownTreeComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoDropDownTree',\n      providers: [DataService, SelectionService, NavigationService, DisabledItemsService, LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.dropdowntree'\n      }, {\n        multi: true,\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => DropDownTreeComponent)\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(() => DropDownTreeComponent)\n      }, {\n        provide: DataBoundComponent,\n        useExisting: forwardRef(() => DropDownTreeComponent)\n      }, {\n        provide: ExpandableComponent,\n        useExisting: forwardRef(() => DropDownTreeComponent)\n      }],\n      selector: 'kendo-dropdowntree',\n      template: `\n        <ng-container kendoDropDownTreeLocalizedMessages\n            i18n-noDataText=\"kendo.dropdowntree.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.dropdowntree.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n\n            i18n-selectButtonText=\"kendo.dropdowntree.selectButtonText|The text set as aria-label on the select button\"\n            selectButtonText=\"Select\"\n        >\n        </ng-container>\n        <span\n            [attr.id]=\"valueLabelId\"\n            class=\"k-input-inner\"\n        >\n            <span class=\"k-input-value-text\">\n                <ng-template *ngIf=\"valueTemplate\"\n                    [templateContext]=\"{\n                        templateRef: valueTemplate.templateRef,\n                        $implicit: dataItem\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!valueTemplate\"> {{ text || placeholder }} </ng-template>\n            </span>\n        </span>\n        <span\n            *ngIf=\"!loading && !readonly && clearButton && text?.length && !disabled\"\n            class=\"k-clear-value\"\n            [style.visibility]=\"clearButtonVisiblity\"\n            aria-hidden=\"true\"\n            [attr.title]=\"messageFor('clearTitle')\"\n            (click)=\"clearValue($event)\"\n        >\n            <span class=\"k-icon k-i-x\"></span>\n        </span>\n        <button\n            tabindex=\"-1\"\n            type=\"button\"\n            aria-hidden=\"true\"\n            class=\"k-input-button k-button k-icon-button\"\n            [ngClass]=\"selectButtonClasses\"\n            [attr.aria-label]=\"messageFor('selectButtonText')\"\n        >\n            <span\n                class=\"k-button-icon k-icon\"\n                [ngClass]=\"buttonClasses\"\n            ></span>\n        </button>\n        <ng-template #popupTemplate>\n            <span\n                *ngIf=\"filterable\"\n                class=\"k-list-filter\"\n            >\n                <span\n                    class=\"k-textbox k-input\"\n                    [ngClass]=\"filterInputClasses\"\n                >\n                    <span class=\"k-input-prefix\">\n                        <span class=\"k-input-icon k-icon k-i-search\"></span>\n                    </span>\n                    <input\n                        #filterInput\n                        (input)=\"handleFilterInputChange($event.target)\"\n                        [filterInput]=\"filterable && !touchEnabled\"\n                        (keydown.arrowdown)=\"handleKeydown($event)\"\n                        (keydown.alt.arrowup)=\"handleKeydown($event)\"\n                        [(ngModel)]=\"filter\"\n                        class=\"k-input-inner\"\n                        role=\"textbox\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                        tabindex=\"0\"\n                        aria-disabled=\"false\"\n                        aria-readonly=\"false\"\n                        [kendoEventsOutsideAngular]=\"{\n                            blur: handleBlur\n                        }\"\n                        [scope]=\"this\"\n                    >\n                </span>\n            </span>\n            <!--header template-->\n            <ng-template\n                *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate?.templateRef\n                }\">\n            </ng-template>\n            <kendo-treeview\n                #treeview\n                *ngIf=\"data.length !== 0 && !allNodesHidden\"\n                [size]=\"size\"\n                [nodes]=\"data\"\n                [style.maxHeight.px]=\"listHeight\"\n                [animate]=\"false\"\n                [(selectedKeys)]=\"selectedKeys\"\n                [selectBy]=\"selectBy\"\n                [textField]=\"textField\"\n                kendoTreeViewSelectable\n                [children]=\"children\"\n                [hasChildren]=\"hasChildren\"\n                [loadOnDemand]=\"loadOnDemand\"\n                [isExpanded]=\"isNodeExpanded\"\n                [isDisabled]=\"itemDisabled\"\n                [nodeTemplate]=\"nodeTemplate\"\n                [filter]=\"filter\"\n                [isVisible]=\"isNodeVisible\"\n                (focusout)=\"handleBlur($event)\"\n                (keydown)=\"handleKeydown($event)\"\n                (selectionChange)=\"onSelectionChange($event)\"\n                (expand)=\"nodeExpand.emit($event)\"\n                (collapse)=\"nodeCollapse.emit($event)\"\n            >\n            </kendo-treeview>\n            <!--footer template-->\n            <ng-template\n                *ngIf=\"footerTemplate\"\n                [templateContext]=\"{\n                    templateRef: footerTemplate?.templateRef\n                }\">\n            </ng-template>\n            <!--no-data template-->\n            <div class=\"k-no-data\" *ngIf=\"data.length === 0 || allNodesHidden\">\n                <ng-template [ngIf]=\"noDataTemplate\"\n                    [templateContext]=\"{\n                        templateRef: noDataTemplate?.templateRef\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!noDataTemplate\">\n                    <div>{{ messageFor('noDataText') }}</div>\n                </ng-template>\n            </div>\n        </ng-template>\n        <ng-container #container></ng-container>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i2.PopupService\n    }, {\n      type: NavigationService\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TOUCH_ENABLED]\n      }]\n    }];\n  }, {\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-dropdowntree']\n    }, {\n      type: HostBinding,\n      args: ['class.k-picker']\n    }],\n    hostAriaInvalid: [{\n      type: HostBinding,\n      args: ['attr.aria-invalid']\n    }],\n    isDisabled: [{\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }],\n    isDisabledAttribute: [{\n      type: HostBinding,\n      args: ['attr.disabled']\n    }],\n    isLoading: [{\n      type: HostBinding,\n      args: ['class.k-loading']\n    }],\n    isBusy: [{\n      type: HostBinding,\n      args: ['attr.aria-busy']\n    }],\n    hostAriaControls: [{\n      type: HostBinding,\n      args: ['attr.aria-controls']\n    }],\n    id: [{\n      type: HostBinding,\n      args: ['attr.id']\n    }],\n    direction: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    hostTabIndex: [{\n      type: HostBinding,\n      args: ['attr.tabindex']\n    }],\n    role: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    ariaHasPopup: [{\n      type: HostBinding,\n      args: ['attr.aria-haspopup']\n    }],\n    isAriaExpanded: [{\n      type: HostBinding,\n      args: ['attr.aria-expanded']\n    }],\n    hostAriaAutocomplete: [{\n      type: HostBinding,\n      args: ['attr.aria-autocomplete']\n    }],\n    isReadonly: [{\n      type: HostBinding,\n      args: ['attr.readonly']\n    }],\n    handleClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    handleKeydown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }],\n    noDataTemplate: [{\n      type: ContentChild,\n      args: [NoDataTemplateDirective, {\n        static: false\n      }]\n    }],\n    headerTemplate: [{\n      type: ContentChild,\n      args: [HeaderTemplateDirective, {\n        static: false\n      }]\n    }],\n    footerTemplate: [{\n      type: ContentChild,\n      args: [FooterTemplateDirective, {\n        static: false\n      }]\n    }],\n    nodeTemplate: [{\n      type: ContentChild,\n      args: [NodeTemplateDirective, {\n        static: false\n      }]\n    }],\n    valueTemplate: [{\n      type: ContentChild,\n      args: [ValueTemplateDirective, {\n        static: false\n      }]\n    }],\n    popupTemplate: [{\n      type: ViewChild,\n      args: ['popupTemplate', {\n        static: true\n      }]\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }],\n    treeview: [{\n      type: ViewChild,\n      args: ['treeview', {\n        static: false\n      }]\n    }],\n    filterInput: [{\n      type: ViewChild,\n      args: ['filterInput', {\n        static: false\n      }]\n    }],\n    open: [{\n      type: Output\n    }],\n    opened: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    closed: [{\n      type: Output\n    }],\n    nodeExpand: [{\n      type: Output\n    }],\n    nodeCollapse: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    filterChange: [{\n      type: Output\n    }],\n    loading: [{\n      type: Input\n    }],\n    clearButton: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    textField: [{\n      type: Input\n    }],\n    valueField: [{\n      type: Input\n    }],\n    valueDepth: [{\n      type: Input\n    }],\n    hasChildren: [{\n      type: Input\n    }],\n    fetchChildren: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    popupSettings: [{\n      type: Input\n    }],\n    dataItem: [{\n      type: Input\n    }],\n    listHeight: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    valuePrimitive: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    fillMode: [{\n      type: Input\n    }],\n    itemDisabled: [{\n      type: Input\n    }],\n    isNodeExpanded: [{\n      type: Input\n    }],\n    isNodeVisible: [{\n      type: Input\n    }],\n    loadOnDemand: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    focusableId: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nconst nodeIndex$1 = item => (item || {}).key;\n/**\n * @hidden\n */\n\n\nconst buildTreeIndex = (parentIndex, itemIndex) => {\n  return [parentIndex, itemIndex].filter(part => isPresent(part)).join('_');\n};\n/**\n * @hidden\n */\n\n\nconst buildTreeItem = (dataItem, valueField, currentLevelIndex) => {\n  if (!isPresent(dataItem)) {\n    return null;\n  }\n\n  return {\n    dataItem,\n    key: valueFrom({\n      dataItem,\n      level: currentLevelIndex\n    }, valueField) + '_' + currentLevelIndex\n  };\n};\n/**\n * @hidden\n */\n\n\nclass MultiSelectTreeLookupService {\n  constructor() {\n    this.map = new Map();\n  }\n\n  reset() {\n    this.map.clear();\n  }\n\n  registerChildren(index, children) {\n    const item = this.item(index);\n\n    if (!item) {\n      return;\n    }\n\n    item.children = children;\n  }\n\n  item(index) {\n    return this.map.get(index) || null;\n  }\n\n  registerItem(item, parent) {\n    const currentLookup = {\n      children: [],\n      item,\n      parent: this.item(nodeIndex$1(parent))\n    };\n    this.map.set(item.key, currentLookup);\n  }\n\n  itemLookup(index) {\n    const item = this.item(index);\n\n    if (!item) {\n      return null;\n    }\n\n    return {\n      children: this.mapChildren(item.children),\n      item: item.item,\n      parent: item.parent\n    };\n  }\n\n  mapChildren(children = []) {\n    return children.map(c => {\n      const {\n        item,\n        parent,\n        children\n      } = this.item(c.key);\n      return {\n        children: this.mapChildren(children),\n        item,\n        parent\n      };\n    });\n  }\n\n}\n\nMultiSelectTreeLookupService.ɵfac = function MultiSelectTreeLookupService_Factory(t) {\n  return new (t || MultiSelectTreeLookupService)();\n};\n\nMultiSelectTreeLookupService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MultiSelectTreeLookupService,\n  factory: MultiSelectTreeLookupService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MultiSelectTreeLookupService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @hidden\n *\n * A directive which manages the in-memory checked state of the MultiSelectTree nodes.\n */\n\n\nclass BaseCheckDirective {\n  addItem(item) {\n    if (this.isItemChecked(item)) {\n      return;\n    }\n\n    const level = getHierarchicalItemLevel(item.index);\n    const key = this.getKey(item, level);\n    const candidate = Object.assign(Object.assign({}, item), {\n      level,\n      key\n    });\n    this.checkedItems.push(candidate);\n    this.checkedKeys.add(key);\n  }\n\n  removeItem(item) {\n    if (!this.isItemChecked(item)) {\n      return;\n    }\n\n    const level = getHierarchicalItemLevel(item.index);\n    const key = this.getKey(item, level);\n    const candidate = Object.assign(Object.assign({}, item), {\n      level,\n      key\n    });\n    this.checkedItems = this.checkedItems.filter(item => valueFrom(item, this.valueField) !== valueFrom(candidate, this.valueField));\n    this.checkedKeys.delete(key);\n  }\n\n  isItemChecked(item) {\n    const level = item.index.split('_').length - 1;\n    item.level = level;\n    const key = this.getKey(item, level);\n    return this.checkedKeys.has(key);\n  }\n\n  updateItems() {\n    this.checkedItems = this.checkedItems || [];\n    this.checkedKeys = new Set(this.checkedItems.map(item => item.key));\n  }\n  /**\n   * Adds the item's depth to the item's value to allow duplicate values on different levels.\n   *\n   * @param item - The checked key.\n   * @returns { string } - A string key consisting of the item's `valueField` value and its depth (depth is 0 if data is homogeneous).\n   */\n\n\n  getKey(item, level) {\n    return valueFrom(item, this.valueField) + '_' + (this.isHeterogeneous ? level : 0);\n  }\n\n}\n\nBaseCheckDirective.ɵfac = function BaseCheckDirective_Factory(t) {\n  return new (t || BaseCheckDirective)();\n};\n\nBaseCheckDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: BaseCheckDirective,\n  inputs: {\n    valueField: \"valueField\",\n    checkedItems: \"checkedItems\",\n    isHeterogeneous: \"isHeterogeneous\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseCheckDirective, [{\n    type: Directive\n  }], null, {\n    valueField: [{\n      type: Input\n    }],\n    checkedItems: [{\n      type: Input\n    }],\n    isHeterogeneous: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n *\n * A directive which manages the in-memory checked state of the MultiSelectTree nodes.\n */\n\n\nclass CheckAllDirective extends BaseCheckDirective {\n  constructor(element, zone, cdr, renderer) {\n    super();\n    this.element = element;\n    this.zone = zone;\n    this.cdr = cdr;\n    this.renderer = renderer;\n    /**\n     * Fires when the `checkedItems` collection was updated.\n     */\n\n    this.checkedItemsChange = new EventEmitter();\n    /**\n     * Holds a Set with just the checked item keys.\n     *\n     * Should be updated each time the `checkedItems` value or content is changed.\n     * Can be used for efficient look-up of whether an item is checked or not (O(1) access time).\n     */\n\n    this.checkedKeys = new Set();\n  }\n\n  handleChange(event) {\n    // Need to store the current checkbox state at the moment of click\n    this.currentCheckedState = event.checked;\n    this.currentIndeterminateState = this.isIndeterminate;\n    this.treeview.nodes.map((_value, index) => {\n      const itemIndex = String(index);\n      const itemLookup = this.treeview.itemLookup(itemIndex);\n      this.checkNode(itemLookup);\n    });\n    this.checkedItemsChange.emit(this.checkedItems.slice());\n  }\n\n  get isIndeterminate() {\n    const isIndeterminate = this.treeview.nodes.some((_node, index) => {\n      const itemIndex = String(index);\n      const itemLookup = this.treeview.itemLookup(itemIndex);\n      return this.someChecked(itemLookup);\n    });\n    return this.isChecked ? false : isIndeterminate;\n  }\n\n  get isChecked() {\n    const isChecked = this.treeview.nodes.every((_node, index) => {\n      const itemIndex = String(index);\n      const itemLookup = this.treeview.itemLookup(itemIndex);\n      return this.allChecked(itemLookup);\n    });\n    return isChecked;\n  }\n\n  ngOnChanges(changes) {\n    if (isPresent(changes.checkedItems)) {\n      this.updateItems();\n      this.renderer.setProperty(this.element.nativeElement, 'checked', this.isChecked);\n      this.renderer.setProperty(this.element.nativeElement, 'indeterminate', this.isIndeterminate);\n    }\n  }\n\n  ngOnInit() {\n    if (this.focused) {\n      this.nextTick(() => this.element.nativeElement.focus());\n    }\n  }\n\n  nextTick(fn) {\n    this.zone.runOutsideAngular(() => setTimeout(fn));\n  }\n\n  checkNode(itemLookup) {\n    if (this.treeview.isDisabled(itemLookup.item.dataItem, itemLookup.item.index)) {\n      return;\n    }\n\n    const pendingCheck = [];\n\n    const filter = item => this.treeview.isVisible(item.dataItem, item.index) && !this.treeview.isDisabled(item.dataItem, item.index);\n\n    pendingCheck.push(itemLookup.item);\n    fetchDescendentNodes(itemLookup, filter).forEach(lookup => pendingCheck.push(lookup.item));\n    pendingCheck.forEach(item => {\n      if (this.currentIndeterminateState) {\n        if (this.lastAction === 'check') {\n          this.addItem(item);\n        } else {\n          this.removeItem(item);\n        }\n\n        return;\n      }\n\n      if (this.currentCheckedState) {\n        this.addItem(item);\n      } else {\n        this.removeItem(item);\n      }\n    });\n  }\n\n  allChecked(lookup) {\n    const children = lookup && lookup.children;\n\n    if (!Array.isArray(children)) {\n      return;\n    }\n\n    const childrenChecked = children.every(child => {\n      if (child.children.length) {\n        return this.isItemChecked(child.item) && this.allChecked(child);\n      }\n\n      return this.isItemChecked(child.item);\n    });\n    return childrenChecked && this.isItemChecked(lookup.item);\n  }\n\n  someChecked(lookup) {\n    const children = lookup && lookup.children;\n\n    if (!Array.isArray(children)) {\n      return;\n    }\n\n    const childrenChecked = children.some(child => {\n      if (child.children.length) {\n        return this.isItemChecked(child.item) || this.someChecked(child);\n      }\n\n      return this.isItemChecked(child.item);\n    });\n    return childrenChecked || this.isItemChecked(lookup.item);\n  }\n\n}\n\nCheckAllDirective.ɵfac = function CheckAllDirective_Factory(t) {\n  return new (t || CheckAllDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nCheckAllDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CheckAllDirective,\n  selectors: [[\"\", \"checkAll\", \"\"]],\n  hostBindings: function CheckAllDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"change\", function CheckAllDirective_change_HostBindingHandler($event) {\n        return ctx.handleChange($event.target);\n      });\n    }\n  },\n  inputs: {\n    lastAction: \"lastAction\",\n    treeview: \"treeview\",\n    checkedItems: \"checkedItems\",\n    valueField: \"valueField\",\n    focused: [\"checkAll\", \"focused\"]\n  },\n  outputs: {\n    checkedItemsChange: \"checkedItemsChange\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckAllDirective, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line\n      selector: '[checkAll]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    lastAction: [{\n      type: Input\n    }],\n    treeview: [{\n      type: Input\n    }],\n    checkedItems: [{\n      type: Input\n    }],\n    valueField: [{\n      type: Input\n    }],\n    focused: [{\n      type: Input,\n      args: ['checkAll']\n    }],\n    checkedItemsChange: [{\n      type: Output\n    }],\n    handleChange: [{\n      type: HostListener,\n      args: ['change', ['$event.target']]\n    }]\n  });\n})();\n/**\n * @hidden\n *\n * A directive which manages the in-memory checked state of the MultiSelectTree nodes.\n */\n\n\nclass CheckDirective extends BaseCheckDirective {\n  constructor(treeView) {\n    super();\n    this.treeView = treeView;\n    /**\n     * Fires when the `checkedItems` collection was updated.\n     */\n\n    this.checkedItemsChange = new EventEmitter();\n    /**\n     * Holds a Set with just the checked item keys.\n     *\n     * Should be updated each time the `checkedItems` value or content is changed.\n     * Can be used for efficient look-up of whether an item is checked or not (O(1) access time).\n     */\n\n    this.checkedKeys = new Set();\n    this.subscriptions = new Subscription();\n    this.subscriptions.add(this.treeView.checkedChange.subscribe(this.handleCheckedChange.bind(this)));\n    this.treeView.isChecked = this.getCheckedState.bind(this);\n  }\n\n  ngOnChanges(changes) {\n    if (isPresent(changes.checkable)) {\n      this.toggleCheckOnClick();\n    }\n\n    if (isPresent(changes.checkedItems)) {\n      this.updateItems();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n    this.unsubscribeClick();\n  }\n\n  getCheckedState(dataItem, index) {\n    if (this.isItemChecked({\n      dataItem,\n      index\n    })) {\n      return 'checked';\n    } else if (this.checkable.checkChildren && this.isItemIndeterminate(this.treeView.itemLookup(index))) {\n      return 'indeterminate';\n    } else {\n      return 'none';\n    }\n  }\n\n  handleCheckedChange(node) {\n    this.checkNode(node); // parents should be checked if `checkChildren` is set to `true` (single config option for both)\n\n    const checkParents = this.checkable.checkChildren;\n\n    if (checkParents) {\n      this.checkParents(node.parent);\n    }\n\n    this.checkedItemsChange.emit(this.checkedItems.slice());\n  }\n\n  toggleCheckOnClick() {\n    this.unsubscribeClick();\n\n    if (this.checkable.checkOnClick) {\n      this.clickSubscription = this.treeView.nodeClick.pipe(filter(event => event.type === 'click')).subscribe(event => {\n        const lookup = this.treeView.itemLookup(event.item.index);\n        this.handleCheckedChange(lookup);\n      });\n    }\n  }\n\n  unsubscribeClick() {\n    if (this.clickSubscription) {\n      this.clickSubscription.unsubscribe();\n      this.clickSubscription = null;\n    }\n  }\n\n  checkNode(lookup) {\n    if (this.treeView.isDisabled(lookup.item.dataItem, lookup.item.index)) {\n      return;\n    }\n\n    const target = lookup.item;\n    const pendingCheck = [target]; // TODO: extract in a separate `checkChildren` method?\n\n    if (this.checkable.checkChildren) {\n      const filter = item => this.treeView.isVisible(item.dataItem, item.index) && !this.treeView.isDisabled(item.dataItem, item.index);\n\n      fetchDescendentNodes(lookup, filter).forEach(lookup => pendingCheck.push(lookup.item));\n    }\n\n    const shouldCheck = !this.isItemChecked(target);\n    pendingCheck.forEach(item => {\n      if (shouldCheck) {\n        this.addItem(item);\n      } else {\n        this.removeItem(item);\n      }\n    });\n  }\n\n  checkParents(parent) {\n    let currentParent = parent;\n\n    while (currentParent) {\n      const allChildrenSelected = currentParent.children.every(item => this.isItemChecked(item));\n\n      if (allChildrenSelected) {\n        this.addItem(currentParent.item);\n      } else {\n        this.removeItem(currentParent.item);\n      }\n\n      currentParent = currentParent.parent;\n    }\n  }\n\n  isItemIndeterminate(lookup) {\n    const children = lookup.children;\n\n    if (!Array.isArray(children) || children.length === 0) {\n      return false;\n    }\n\n    let index = 0;\n    let child = children[index];\n\n    while (isPresent(child)) {\n      if (this.isItemChecked(child.item) || this.isItemIndeterminate(child)) {\n        return true;\n      }\n\n      index += 1;\n      child = children[index];\n    }\n\n    return false;\n  }\n\n}\n\nCheckDirective.ɵfac = function CheckDirective_Factory(t) {\n  return new (t || CheckDirective)(i0.ɵɵdirectiveInject(i1$1.TreeViewComponent));\n};\n\nCheckDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CheckDirective,\n  selectors: [[\"\", \"kendoMultiSelectTreeCheckable\", \"\"]],\n  inputs: {\n    checkable: \"checkable\",\n    valueField: \"valueField\",\n    checkedItems: \"checkedItems\"\n  },\n  outputs: {\n    checkedItemsChange: \"checkedItemsChange\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoMultiSelectTreeCheckable]'\n    }]\n  }], function () {\n    return [{\n      type: i1$1.TreeViewComponent\n    }];\n  }, {\n    checkable: [{\n      type: Input\n    }],\n    valueField: [{\n      type: Input\n    }],\n    checkedItems: [{\n      type: Input\n    }],\n    checkedItemsChange: [{\n      type: Output\n    }]\n  });\n})();\n\nconst DEFAULT_POPUP_SETTINGS = {\n  animate: true\n};\nconst DEFAULT_CHECKABLE_SETTINGS = {\n  checkChildren: true,\n  checkOnClick: true\n};\n\nconst hasChildren = () => false;\n\nconst fetchChildren = () => of([]);\n\nconst itemDisabled = () => false;\n\nconst isNodeVisible = () => true;\n\nconst DEFAULT_SIZE = 'medium';\nconst DEFAULT_ROUNDED = 'medium';\nconst DEFAULT_FILL_MODE = 'solid';\n/**\n * Represents the [Kendo UI MultiSelectTree component for Angular]({% slug overview_multiselecttree %}).\n */\n\nclass MultiSelectTreeComponent {\n  constructor(injector, wrapper, popupService, renderer, navigationService, _zone, localization, cdr, lookup, touchEnabled) {\n    this.injector = injector;\n    this.wrapper = wrapper;\n    this.popupService = popupService;\n    this.renderer = renderer;\n    this.navigationService = navigationService;\n    this._zone = _zone;\n    this.localization = localization;\n    this.cdr = cdr;\n    this.lookup = lookup;\n    this.touchEnabled = touchEnabled;\n    this.hostClasses = true;\n    this.role = 'combobox';\n    this.ariaHasPopup = 'tree';\n    /**\n     * Sets the levels in the data set where the values can be found when `valueField` is an Array.\n     * The field serves to correctly allocate a data item used when the MultiSelectTree is initialized with a value.\n     */\n\n    this.valueDepth = [];\n    /**\n     * The hint which is displayed when the component is empty.\n     */\n\n    this.placeholder = \"\";\n    /**\n     * Sets the height of the options list. By default, `listHeight` is 200px.\n     *\n     * > The `listHeight` property affects only the list of options and not the whole popup container.\n     * > To set the height of the popup container, use `popupSettings.height`.\n     */\n\n    this.listHeight = 200;\n    /**\n     * Sets the disabled state of the component.\n     */\n\n    this.disabled = false;\n    /**\n     * Sets the read-only state of the component.\n     */\n\n    this.readonly = false;\n    /**\n     * Specifies the type of the selected value\n     * ([more information and example]({% slug valuebinding_multiselecttree %}#toc-primitive-values)).\n     * If set to `true`, the selected value has to be a primitive one.\n     */\n\n    this.valuePrimitive = false;\n    /**\n     * Indicates whether the child nodes will be fetched on node expand or will be initially prefetched.\n     * @default false\n     */\n\n    this.loadOnDemand = false;\n    /**\n     * @hidden\n     *\n     * Used by the kendo-label and kendo-floatinglabel to access and associate the focusable element with the provided label via aria-labelledby.\n     */\n\n    this.focusableId = `k-${guid$1()}`;\n    /**\n     * If set to `true`, renders a button on hovering over the component.\n     * Clicking this button resets the value of the component to `undefined` and triggers the `change` event.\n     * @default true\n     */\n\n    this.clearButton = true;\n    /**\n     * Renders the built-in input element for filtering the MultiSelectTree.\n     * If set to `true`, the component emits the `filterChange` event, which can be used to [filter the MultiSelectTree manually]({% slug filtering_multiselecttree %}#toc-manual-filtering).\n     * A built-in filtering implementation is available to use with the [`kendoMultiSelectTreeHierarchyBinding`]({% slug api_dropdowns_multiselecttreehierarchybindingdirective %}) and [`kendoMultiSelectTreeFlatBinding`]({% slug api_dropdowns_multiselecttreeflatbindingdirective %}) directives.\n     * @default false\n     */\n\n    this.filterable = false;\n    /**\n     * If `checkАll` is set to `true` and the checkboxes are enabled, a tri-state checkbox appears above the embedded treeview.\n     * Clicking the checkbox checks or unchecks all enabled items of the treeview that are loaded.\n     * @default false\n     */\n\n    this.checkAll = false;\n    /**\n     * A function which determines if a specific node has child nodes.\n     */\n\n    this.hasChildren = hasChildren;\n    /**\n     * A function which provides the child nodes for a given parent node.\n     */\n\n    this.fetchChildren = fetchChildren;\n    /**\n     * A callback which determines whether a tree node should be rendered as hidden. The utility .k-display-none class is used to hide the nodes.\n     * Useful for custom filtering implementations.\n     */\n\n    this.isNodeVisible = isNodeVisible;\n    /**\n     * A function that is executed for each data item and determines if a specific item is disabled.\n     */\n\n    this.itemDisabled = itemDisabled;\n    /**\n     * A user-defined callback function which receives an array of selected data items and maps them to an array of tags.\n     *\n     * @param { Any[] } dataItems - The selected data items from the list.\n     * @returns { Any[] } - The tags that will be rendered by the component.\n     */\n\n    this.tagMapper = tags => tags || [];\n    /**\n     * Fires each time the user focuses the MultiSelectTree.\n     */\n\n\n    this.onFocus = new EventEmitter();\n    /**\n     * Fires each time the MultiSelectTree gets blurred.\n     */\n\n    this.onBlur = new EventEmitter();\n    /**\n     * Fires each time the popup is about to open\n     * ([see example]({% slug openstate_multiselecttree %})).\n     * This event is preventable. If you cancel it, the popup will remain closed.\n     */\n\n    this.open = new EventEmitter();\n    /**\n     * Fires after the popup has been opened.\n     */\n\n    this.opened = new EventEmitter();\n    /**\n     * Fires each time the popup is about to close\n     * ([see example]({% slug openstate_multiselecttree %})).\n     * This event is preventable. If you cancel it, the popup will remain open.\n     */\n\n    this.close = new EventEmitter();\n    /**\n     * Fires after the popup has been closed.\n     */\n\n    this.closed = new EventEmitter();\n    /**\n     * Fires when the user expands a node in the popup TreeView.\n     */\n\n    this.nodeExpand = new EventEmitter();\n    /**\n     * Fires when the user collapses a node in the popup TreeView.\n     */\n\n    this.nodeCollapse = new EventEmitter();\n    /**\n     * Fires each time the value is changed\n     * ([see example]({% slug overview_multiselecttree %}#toc-events)).\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires each time a tag is about to be removed([see examples]({% slug summarytagmode_multiselect %}#toc-notifying-on-removing-group-tags)).\n     * This event is preventable. If you cancel it, the tag will not be removed.\n     */\n\n    this.removeTag = new EventEmitter();\n    /**\n     * Fires when the value of the built-in filter input element changes.\n     */\n\n    this.filterChange = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.filterStateChange = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.checkedItems = [];\n    /**\n     * @hidden\n     */\n\n    this.showAfter = 0;\n    /**\n     * @hidden\n     */\n\n    this.allNodesHidden = false;\n    this.tagListId = guid$1();\n    this.tagPrefix = \"tag-\" + guid$1();\n    this.focusedTagIndex = undefined;\n    this._value = [];\n    this._tabindex = 0;\n    this._popupSettings = DEFAULT_POPUP_SETTINGS;\n    this._checkableSettings = DEFAULT_CHECKABLE_SETTINGS;\n    this._isFocused = false;\n    this._popupId = guid$1();\n    this._size = 'medium';\n    this._rounded = 'medium';\n    this._fillMode = 'solid';\n    this.subscriptions = [];\n    this.lastAction = 'check';\n    this.onTouchedCallback = noop;\n    this.onChangeCallback = noop;\n    this.direction = localization.rtl ? 'rtl' : 'ltr';\n    this.subscribeEvents();\n    this.subscribeFocusEvents();\n  }\n\n  get isDisabled() {\n    return this.disabled;\n  }\n\n  get hostAriaControls() {\n    return this.isOpen ? this._popupId : null;\n  }\n\n  get hostAriaAutocomplete() {\n    return this.filterable ? 'list' : null;\n  }\n\n  get isLoading() {\n    return this.loading;\n  }\n\n  get hostAriaInvalid() {\n    return this.formControl ? this.formControl.invalid.toString() : null;\n  }\n\n  get isBusy() {\n    return this.loading ? 'true' : null;\n  }\n\n  get id() {\n    return this.focusableId;\n  }\n\n  get hostTabIndex() {\n    return this.tabindex;\n  }\n\n  get isAriaExpanded() {\n    return this.isOpen;\n  }\n\n  get isReadonly() {\n    return this.readonly ? '' : null;\n  }\n\n  get ariaDescribedBy() {\n    return this.tagListId;\n  }\n\n  get ariaActiveDescendant() {\n    return this.focusedTagId;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get formControl() {\n    const ngControl = this.injector.get(NgControl, null);\n    return (ngControl === null || ngControl === void 0 ? void 0 : ngControl.control) || null;\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleClick() {\n    this.togglePopup(!this.isOpen);\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleKeydown(event) {\n    const deleteTag = this.isWrapperActive && event.keyCode === Keys.Backspace && this.tags.length > 0;\n\n    if (deleteTag) {\n      this.handleBackspace();\n      return;\n    }\n\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    const eventData = event;\n    const action = this.navigationService.process({\n      originalEvent: eventData\n    });\n\n    if (action === NavigationAction.Open) {\n      eventData.preventDefault();\n    }\n  }\n\n  set treeview(treeview) {\n    this._treeview = treeview;\n\n    if (treeview) {\n      // If filtering is enabled, focus the TreeView on mobile devices instead of the filter input\n      if (this.isFocused && !this.filterable && !this.checkAll || this.touchEnabled) {\n        treeview.focus();\n      }\n      /**\n       * the treeview animations are initially disabled (we don't want expand animations during popup opening)\n       * re-enables the animations for user interaction\n       * The Promise is required to properly change the `animate` property when\n       * the popup is appended to a container and opened upon initialization.\n       * Otherwise, the \"Expression has changed...\" type error will be thrown.\n       */\n\n\n      Promise.resolve(null).then(() => this.treeview.animate = true);\n    }\n  }\n\n  get treeview() {\n    return this._treeview;\n  }\n  /**\n   * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n   */\n\n\n  set tabindex(value) {\n    const providedTabIndex = parseNumber(value);\n    const defaultTabIndex = 0;\n    this._tabindex = !isNaN(providedTabIndex) ? providedTabIndex : defaultTabIndex;\n  }\n\n  get tabindex() {\n    return this.disabled ? -1 : this._tabindex;\n  }\n  /**\n   * Sets the size of the component.\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `none`\n   *\n   */\n\n\n  set size(size) {\n    const newSize = size ? size : DEFAULT_SIZE;\n    this.renderer.removeClass(this.wrapper.nativeElement, getSizeClass('input', this.size));\n\n    if (size !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('input', newSize));\n    }\n\n    this._size = newSize;\n  }\n\n  get size() {\n    return this._size;\n  }\n  /**\n   * Sets the border radius of the component.\n   *\n   * The possible values are:\n   * * `small`\n   * * `medium` (default)\n   * * `large`\n   * * `full`\n   * * `none`\n   *\n   */\n\n\n  set rounded(rounded) {\n    const newRounded = rounded ? rounded : DEFAULT_ROUNDED;\n    this.renderer.removeClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n\n    if (rounded !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(newRounded));\n    }\n\n    this._rounded = newRounded;\n  }\n\n  get rounded() {\n    return this._rounded;\n  }\n  /**\n   * Sets the fillMode of the component.\n   *\n   * The possible values are:\n   * * `flat`\n   * * `solid` (default)\n   * * `outline`\n   * * `none`\n   *\n   */\n\n\n  set fillMode(fillMode) {\n    const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE;\n    this.renderer.removeClass(this.wrapper.nativeElement, getFillModeClass('input', this.fillMode));\n\n    if (fillMode !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('input', newFillMode));\n    }\n\n    this._fillMode = newFillMode;\n  }\n\n  get fillMode() {\n    return this._fillMode;\n  }\n  /**\n   * Configures the popup of the MultiSelectTree.\n   *\n   * The available options are:\n   * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n   * - `width: Number | String`&mdash;Sets the width of the popup container. By default, the width of the host element is used. If set to `auto`, the component automatically adjusts the width of the popup and no item labels are wrapped.\n   * - `height: Number`&mdash;Sets the height of the popup container.\n   * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n   * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n   */\n\n\n  set popupSettings(settings) {\n    this._popupSettings = Object.assign({}, DEFAULT_POPUP_SETTINGS, settings); // `detectChanges` needed, otherwise upon value initialization and `appendTo` property\n    // an error is thrown => ExpressionChangedAfterItHasBeenCheckedError\n\n    this.cdr.detectChanges();\n  }\n\n  get popupSettings() {\n    return this._popupSettings;\n  }\n  /**\n   * Defines the checkable settings of the MultiSelecTree nodes.\n   * If no value is provided, the default [`CheckableSettings`]({% slug api_dropdowns_multiselecttreecheckablesettings %}) are applied.\n   */\n\n\n  set checkableSettings(settings) {\n    this._checkableSettings = Object.assign({}, DEFAULT_CHECKABLE_SETTINGS, settings);\n  }\n\n  get checkableSettings() {\n    return this._checkableSettings;\n  }\n  /**\n   * Sets the data of the MultiSelectTree.\n   *\n   * > The data has to be provided in an array-like list with objects.\n   */\n\n\n  set data(data) {\n    this._nodes = data;\n    this.setState();\n\n    if (this.isContentInit) {\n      // Needed for when the data is loaded later/asynchronously because it would not exist on ngContentInit\n      this.registerLookupItems(data);\n    }\n  }\n\n  get data() {\n    return this._nodes;\n  }\n  /**\n   * Sets the value of the MultiSelectTree.\n   * It can either be of the primitive (string, numbers) or of the complex (objects) type.\n   * To define the type, use the `valuePrimitive` option.\n   *\n   */\n\n\n  set value(value) {\n    this._value = value ? value : [];\n    this.setState();\n  }\n\n  get value() {\n    return this._value;\n  }\n  /**\n   * Keeps the current `dataItems` object in order to resolve selection.\n   * Needs to be provided when when programmatically setting a `value` and `valuePrimitive` is set to `true`.\n   */\n\n\n  set dataItems(items) {\n    this._dataItems = (items || []).map((dataItem, index) => {\n      if (hasProps(dataItem, ['dataItem', 'index', 'level'])) {\n        return dataItem;\n      }\n\n      const level = this.valueDepth[index] || 0;\n      const key = valueFrom({\n        dataItem,\n        level\n      }, this.valueField) + '_' + (this.isHeterogeneous ? this.valueDepth[index] : 0);\n      return {\n        dataItem,\n        index: null,\n        level,\n        key\n      };\n    });\n    this.setState();\n  }\n\n  get dataItems() {\n    return this._dataItems || this.value.map((value, index) => {\n      const level = this.valueDepth[index] || 0;\n      const key = valueFrom({\n        dataItem: value,\n        level\n      }, this.valueField) + '_' + (this.isHeterogeneous ? this.valueDepth[index] : 0);\n      return {\n        dataItem: value,\n        index: null,\n        level,\n        key\n      };\n    });\n  }\n  /**\n   * @hidden\n   */\n\n\n  get focusedTagId() {\n    if (!isPresent(this.focusedTagIndex) || this.isOpen) {\n      return null;\n    }\n\n    const dataItem = this.tags[this.focusedTagIndex];\n    return `${this.tagPrefix}-${valueFrom({\n      dataItem\n    }, this.valueField)}`;\n  }\n\n  set isFocused(isFocused) {\n    this.renderer[isFocused ? 'addClass' : 'removeClass'](this.wrapper.nativeElement, 'k-focus');\n    this._isFocused = isFocused;\n  }\n\n  get isFocused() {\n    return this._isFocused;\n  }\n  /**\n   * Returns the current open state of the popup.\n   */\n\n\n  get isOpen() {\n    return isPresent(this.popupRef);\n  }\n\n  get width() {\n    const wrapperWidth = this.wrapper.nativeElement.offsetWidth;\n    const width = this.popupSettings.width || wrapperWidth;\n    const minWidth = isNaN(wrapperWidth) ? wrapperWidth : `${wrapperWidth}px`;\n    const maxWidth = isNaN(width) ? width : `${width}px`;\n    return {\n      min: minWidth,\n      max: maxWidth\n    };\n  }\n\n  get height() {\n    const popupHeight = this.popupSettings.height;\n    return isPresent(popupHeight) ? `${popupHeight}px` : 'auto';\n  }\n\n  get appendTo() {\n    const {\n      appendTo\n    } = this.popupSettings;\n\n    if (!appendTo || appendTo === 'root') {\n      return undefined;\n    }\n\n    return appendTo === 'component' ? this.container : appendTo;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get popupContainerClasses() {\n    const containerClasses = ['k-popup-dropdowntree'];\n\n    if (this.popupSettings.popupClass) {\n      containerClasses.push(this.popupSettings.popupClass);\n    }\n\n    return containerClasses;\n  }\n  /**\n   * @hidden\n   *\n   * Alias for `data`. Used for compatibility with the `DataBoundComponent` interface.\n   * Required for the data-binding directives.\n   */\n\n\n  set nodes(nodes) {\n    this.data = nodes;\n  }\n\n  get nodes() {\n    return this.data;\n  }\n  /**\n   * @hidden\n   *\n   * Alias for `fetchChildren`. Used for compatibility with the `DataBoundComponent` interface.\n   * Required for the data-binding directives\n   */\n\n\n  set children(callback) {\n    this.fetchChildren = callback;\n  }\n\n  get children() {\n    return this.fetchChildren;\n  }\n  /**\n   * @hidden\n   *\n   * Alias for `nodeExpand`. Used for compatibility with the `ExpandableComponent` interface.\n   * Required for the expand-directive.\n   */\n\n\n  get expand() {\n    return this.nodeExpand;\n  }\n  /**\n   * @hidden\n   *\n   * Alias for `nodeCollapse`. Used for compatibility with the `ExpandableComponent` interface.\n   * Required for the expand-directive.\n   */\n\n\n  get collapse() {\n    return this.nodeCollapse;\n  }\n  /**\n   * @hidden\n   *\n   * Alias for `isNodeExpanded`. Used for compatibility with the `ExpandableComponent` interface.\n   * Required for the expand-directive.\n   */\n\n\n  set isExpanded(callback) {\n    this.isNodeExpanded = callback;\n  }\n\n  get isExpanded() {\n    return this.isNodeExpanded;\n  }\n  /**\n   * @hidden\n   *\n   * Alias for `isNodeVisible`. Used for compatibility with the `DataBoundComponent` interface.\n   * The `DataBoundComponent` interface is used in the data-binding directives.\n   */\n\n\n  set isVisible(callback) {\n    this.isNodeVisible = callback;\n  }\n\n  get isVisible() {\n    return this.isNodeVisible;\n  }\n\n  get isTagFocused() {\n    return !this.isOpen && this.focusedTagIndex !== undefined;\n  }\n\n  get isTreeViewActive() {\n    return this.treeview && this.treeview.isActive;\n  }\n\n  get isWrapperActive() {\n    return document.activeElement === this.wrapper.nativeElement;\n  }\n\n  get isFilterActive() {\n    return this.filterInput && document.activeElement === this.filterInput.nativeElement;\n  }\n\n  get isCheckAllActive() {\n    return this.checkAllInput && document.activeElement === this.checkAllInput.nativeElement;\n  }\n\n  ngOnInit() {\n    this.renderer.removeAttribute(this.wrapper.nativeElement, 'tabindex');\n    this.renderer.setAttribute(this.wrapper.nativeElement, 'aria-expanded', String(this.isOpen));\n    this.subscriptions.push(this.localization.changes.subscribe(({\n      rtl\n    }) => {\n      this.direction = rtl ? 'rtl' : 'ltr';\n      this.cdr.markForCheck();\n    }));\n    this.setComponentClasses();\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngOnDestroy() {\n    this.destroyPopup();\n    this.unsubscribeEvents();\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngOnChanges(changes) {\n    if (anyChanged(['textField', 'valueField', 'valuePrimitive'], changes, false)) {\n      this.isHeterogeneous = this.valueField && isArray(this.valueField);\n      this.setState();\n    }\n\n    if (anyChanged(['valueDepth', 'value', 'dataItems'], changes, false)) {\n      if (changes.value && !changes.dataItems && !this.valuePrimitive) {\n        // Update the dataItems if the value is updated programmatically (non-primitive values only)\n        // In the primitive case, the client should update the dataItems as well\n        this.dataItems = this.value;\n      } else {\n        // Re-map the dataItems because `valueDepth` is not yet available when the check directive parses the items\n        this.dataItems = this.dataItems.map((item, index) => Object.assign(Object.assign({}, item), {\n          key: valueFrom({\n            dataItem: item.dataItem,\n            index: null,\n            level: this.valueDepth[index] || 0\n          }, this.valueField) + '_' + (this.isHeterogeneous ? this.valueDepth[index] : 0),\n          level: this.valueDepth[index] || 0\n        }));\n      }\n    }\n\n    if (anyChanged(['data', 'children', 'hasChildren', 'loadOnDemand', 'valueField'], changes, true) && !this.loadOnDemand) {\n      this.lookup.reset();\n      this.registerLookupItems(this.data);\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  ngAfterContentChecked() {\n    this.verifySettings();\n  }\n\n  ngAfterContentInit() {\n    this.isContentInit = true; // Still need to keep the call of 'registerLookupItems()' from ngAfterContentInit in the cases when the data is passed initially\n    // The call is execute here because we have to make sure it happens after all input properties are loaded (not the case in the data setter initially)\n\n    this.registerLookupItems(this.data);\n  }\n  /**\n   * @hidden\n   *\n   * Used by the kendo-floatinglabel component to determine if the floating label\n   * should be rendered inside the input when the component is not focused.\n   */\n\n\n  isEmpty() {\n    return !Boolean(this.placeholder) && (!isPresent(this.value) || this.value.length === 0);\n  }\n  /**\n   * Focuses the MultiSelectTree.\n   */\n\n\n  focus() {\n    if (!this.disabled) {\n      this.wrapper.nativeElement.focus();\n    }\n  }\n  /**\n   * Blurs the MultiSelectTree.\n   */\n\n\n  blur() {\n    if (!this.disabled) {\n      this.wrapper.nativeElement.blur();\n    }\n  }\n  /**\n   * Focuses a specific item of the MultiSelectTree based on a provided index in the format of `1_1`.\n   * The targeted item should be expanded in order for it to be focused.\n   * If null or invalid index is provided the focus will be set on the first item.\n   */\n\n\n  focusItemAt(index) {\n    if (this.treeview) {\n      const lookup = this.treeview.itemLookup(index);\n      const isItemDisabled = !isPresent(lookup) || this.treeview.isDisabled(lookup.item.dataItem, lookup.item.index);\n\n      if (!isItemDisabled) {\n        this.treeview.focus(index);\n      }\n    }\n  }\n  /**\n   * Resets the value of the MultiSelectTree.\n   * If you use the `reset` method to clear the value of the component,\n   * the model will not update automatically and the `valueChange` event will not be fired.\n   */\n\n\n  reset() {\n    this.value = [];\n    this.dataItems = [];\n    this.valueDepth = [];\n  }\n  /**\n   * Toggles the visibility of the popup\n   * ([see example]({% slug openstate_multiselecttree %})).\n   * If you use the `toggle` method to open or close the popup, the `open` and `close` events will not be fired.\n   *\n   * @param open - The state of the popup.\n   */\n\n\n  toggle(open) {\n    // The Promise is required to open the popup on load.\n    // Otherwise, the \"ViewContainerRef not found...\" error will be thrown.\n    Promise.resolve(null).then(() => {\n      const shouldOpen = isPresent(open) ? open : !isPresent(this.popupRef);\n      this.destroyPopup();\n\n      if (shouldOpen) {\n        this.createPopup();\n      }\n    });\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleFocus(event) {\n    if (event.target !== this.wrapper.nativeElement) {\n      return;\n    }\n\n    event.stopImmediatePropagation();\n\n    if (!this.isFocused) {\n      this.isFocused = true;\n\n      if (hasObservers(this.onFocus)) {\n        this._zone.run(() => {\n          this.onFocus.emit();\n        });\n      } // Re-focus the treeview if `close` is prevented\n\n\n      if (this.isOpen && this.treeview) {\n        if (this.lastNodeOnFocus) {\n          this.lastNodeOnFocus.setAttribute('tabindex', '0');\n        }\n\n        this.treeview.focus();\n      }\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleBlur(e) {\n    const relatedTarget = e && e.relatedTarget;\n\n    if (this.wrapper.nativeElement.contains(relatedTarget) || this.isOpen && this.popupRef.popupElement.contains(relatedTarget)) {\n      return;\n    }\n\n    this.isFocused = false;\n    this.togglePopup(false);\n\n    if (hasObservers(this.onBlur) || isUntouched(this.wrapper.nativeElement)) {\n      this._zone.run(() => {\n        this.onBlur.emit();\n        this.onTouchedCallback();\n      });\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleNodeClick(node) {\n    if (!this.isFocused) {\n      // Re-focus the MultiSelectTree when popup close is prevented and a node is clicked\n      // On click the focus should be on the clicked element which is why we need to update the lastNodeOnFocus\n      const parent = node.originalEvent.target.parentElement.parentElement;\n      this.lastNodeOnFocus = parent;\n      this.focus();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  togglePopup(open) {\n    const isDisabled = this.disabled || this.readonly;\n    const sameState = this.isOpen === open;\n\n    this._zone.run(() => {\n      this.focusedTagIndex = undefined;\n    });\n\n    if (isDisabled || sameState) {\n      return;\n    }\n\n    const togglePrevented = this.triggerPopupEvents(open);\n\n    if (!togglePrevented) {\n      if (open) {\n        this.createPopup();\n      } else {\n        this.destroyPopup();\n      }\n    } else {\n      this.removeTreeViewFromTabOrder();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  messageFor(key) {\n    return this.localization.get(key);\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleCheckedItemsChange(items) {\n    this.valueDepth = items.map(item => item.level);\n    this.lastAction = items.length > this.dataItems.length ? 'check' : 'uncheck';\n    this.dataItems = items.slice();\n    this.updateValue(this.dataItems);\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleRemoveTag({\n    tag,\n    index\n  }) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    const eventArgs = new RemoveTagEvent(tag);\n    this.removeTag.emit(eventArgs);\n\n    if (eventArgs.isDefaultPrevented()) {\n      return;\n    } // Remove tags based on their position index\n\n\n    if (tag instanceof Array) {\n      // Remove group tag\n      this.dataItems = this.dataItems.filter((_item, i) => i < this.showAfter || this.disabledIndices.has(i));\n      this.valueDepth = this.valueDepth.filter((_item, i) => i < this.showAfter || this.disabledIndices.has(i));\n    } else {\n      // Remove single tag\n      const dataItem = this.dataItems[index];\n      const itemKey = dataItem.key;\n      const lookup = this.lookup.itemLookup(itemKey);\n      const pendingCheck = [lookup.item];\n\n      if (this.checkableSettings.checkChildren) {\n        fetchDescendentNodes(lookup).forEach(lookup => pendingCheck.push(lookup.item));\n        pendingCheck.push(...this.removeParents(lookup.parent));\n      }\n\n      const keysToRemove = pendingCheck.map(item => item.key);\n      const valueDepthIndices = [];\n      this.dataItems = this.dataItems.filter((_item, i) => {\n        // We need to know the index position of the data item to be able to update the valueDepth array accordignly\n        // as each data item's position is corresponding to the same position in valueDepth\n        valueDepthIndices.push(i);\n        return !keysToRemove.includes(_item.key) || this.disabledIndices.has(i);\n      });\n      this.valueDepth = this.valueDepth.filter((_item, i) => valueDepthIndices.includes(i) || this.disabledIndices.has(i));\n    }\n\n    this.updateValue(this.dataItems);\n\n    if (!this.isFocused) {\n      this.focus();\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleTagMapperChange(showAfter) {\n    this.showAfter = parseNumber(showAfter);\n    this.setTags();\n  }\n  /**\n   * @hidden\n   */\n\n\n  clearAll(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n    this.focus();\n    this.value = this.value.filter((_item, index) => this.disabledIndices.has(index));\n    this.dataItems = this.dataItems.filter((_item, index) => this.disabledIndices.has(index));\n    this.valueDepth = this.valueDepth.filter((_depth, index) => this.disabledIndices.has(index));\n    this.emitValueChange(this.value);\n  }\n  /**\n   * @hidden\n   */\n\n\n  writeValue(value) {\n    this.value = value || []; // Update the dataItems if the value is updated programmatically (non-primitive values only)\n    // In the primitive case, the client should update the dataItems as well\n\n    if (!this.valuePrimitive) {\n      this.dataItems = this.value;\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnChange(fn) {\n    this.onChangeCallback = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  registerOnTouched(fn) {\n    this.onTouchedCallback = fn;\n  }\n  /**\n   * @hidden\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n  /**\n   * @hidden\n   */\n\n\n  handleFilterInputChange(input) {\n    this.filterChange.next(input.value);\n    this.allNodesHidden = this.nodes.every((node, index) => !this.isVisible(node, String(index)));\n  }\n  /**\n   * @hidden\n   */\n\n\n  get filterInputClasses() {\n    return `${this.size ? getSizeClass('input', this.size) : ''} ${this.fillMode ? 'k-input-' + this.fillMode : ''} ${this.rounded ? getRoundedClass(this.rounded) : ''}`;\n  }\n  /**\n   * @hidden\n   */\n\n\n  get checkAllCheckboxClasses() {\n    return `${this.size ? getSizeClass('checkbox', this.size) : ''}`;\n  }\n  /**\n   * @hidden\n   */\n\n\n  toggleCheckAll() {\n    this.checkAllInput.nativeElement.focus();\n    this.checkAllInput.nativeElement.click();\n  }\n\n  verifySettings() {\n    if (!isDevMode()) {\n      return;\n    }\n\n    if (!isPresent(this.valueField) || !isPresent(this.textField)) {\n      throw new Error(MultiSelectTreeMessages.textAndValue);\n    }\n\n    if (!isArray(this.value)) {\n      throw new Error(MultiSelectTreeMessages.array);\n    }\n\n    if (this.value.length > 0) {\n      if (this.valuePrimitive && this.value.some(item => isObject(item))) {\n        throw new Error(MultiSelectTreeMessages.primitive);\n      }\n\n      const isEveryDataItemObject = this.dataItems.every(item => isObject(item.dataItem));\n\n      if (this.valuePrimitive && !isArray(this.dataItems)) {\n        throw new Error(MultiSelectTreeMessages.dataItems);\n      }\n\n      if (this.valuePrimitive && !isEveryDataItemObject) {\n        throw new Error(MultiSelectTreeMessages.dataItems);\n      }\n\n      if (this.valuePrimitive && this.dataItems.length !== this.value.length) {\n        throw new Error(MultiSelectTreeMessages.dataItemsLength);\n      }\n\n      if (!this.valuePrimitive && !isObjectArray(this.value)) {\n        throw new Error(MultiSelectTreeMessages.object);\n      }\n\n      if ((isArray(this.valueField) || isArray(this.textField)) && !isArray(this.valueDepth)) {\n        throw new Error(MultiSelectTreeMessages.valueDepth);\n      }\n\n      if ((isArray(this.valueField) || isArray(this.textField)) && this.valueDepth.length === 0) {\n        throw new Error(MultiSelectTreeMessages.valueDepth);\n      }\n\n      if ((isArray(this.valueField) || isArray(this.textField)) && this.valueDepth.length !== this.value.length) {\n        throw new Error(MultiSelectTreeMessages.valueDepthLength);\n      }\n    }\n  }\n\n  emitValueChange(value) {\n    this.onChangeCallback(value);\n    this.valueChange.emit(value);\n  }\n\n  triggerPopupEvents(open) {\n    const eventArgs = new PreventableEvent();\n\n    if (open) {\n      this.open.emit(eventArgs);\n    } else {\n      this.close.emit(eventArgs);\n    }\n\n    return eventArgs.isDefaultPrevented();\n  }\n\n  createPopup() {\n    const horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n    const anchorPosition = {\n      horizontal: horizontalAlign,\n      vertical: 'bottom'\n    };\n    const popupPosition = {\n      horizontal: horizontalAlign,\n      vertical: 'top'\n    };\n    this.popupRef = this.popupService.open({\n      anchor: this.wrapper,\n      appendTo: this.appendTo,\n      anchorAlign: anchorPosition,\n      content: this.popupTemplate,\n      popupAlign: popupPosition,\n      positionMode: 'absolute',\n      popupClass: this.popupContainerClasses\n    });\n    const popupWrapper = this.popupRef.popupElement;\n    const {\n      min,\n      max\n    } = this.width;\n    popupWrapper.style.minWidth = min;\n    popupWrapper.style.width = max;\n    popupWrapper.style.height = this.height;\n    this.renderer.setAttribute(popupWrapper, 'dir', this.direction);\n    this.renderer.setAttribute(this.wrapper.nativeElement, 'aria-expanded', 'true');\n    this.popupRef.popupOpen.subscribe(() => {\n      this.cdr.detectChanges();\n      this.opened.emit();\n    });\n    this.popupRef.popupClose.subscribe(() => {\n      this.closed.emit();\n    });\n  }\n\n  destroyPopup() {\n    if (this.popupRef) {\n      this.popupRef.close();\n      this.popupRef = null;\n      this.renderer.setAttribute(this.wrapper.nativeElement, 'aria-expanded', 'false');\n\n      if (this.filter !== \"\") {\n        this.filter = \"\";\n        this.allNodesHidden = false;\n\n        if (hasObservers(this.filterChange)) {\n          this._zone.run(() => {\n            this.filterChange.emit(\"\");\n          });\n        }\n      }\n    }\n  }\n\n  subscribeEvents() {\n    this.subscriptions.push(this.navigationService.open.subscribe(event => {\n      event.originalEvent.preventDefault();\n      this.togglePopup(true);\n    }), this.navigationService.enter.pipe(tap(event => event.originalEvent.preventDefault())).subscribe(() => this.togglePopup(true)), merge(this.navigationService.close, this.navigationService.esc).subscribe(event => {\n      event.originalEvent.preventDefault();\n      this.focus();\n      this.togglePopup(false);\n    }), this.navigationService.tab.subscribe(this.handleTabKey.bind(this)), this.navigationService.up.subscribe(this.handleUpKey.bind(this)), this.navigationService.down.subscribe(this.handleDownKey.bind(this)), this.navigationService.left.pipe(filter(() => !this.isTreeViewActive)).subscribe(this.direction === 'rtl' ? this.handleRightKey.bind(this) : this.handleLeftKey.bind(this)), this.navigationService.right.pipe(filter(() => !this.isTreeViewActive)).subscribe(this.direction === 'rtl' ? this.handleLeftKey.bind(this) : this.handleRightKey.bind(this)), this.navigationService.home.pipe(filter(() => !this.isOpen)).subscribe(this.handleHome.bind(this)), this.navigationService.end.pipe(filter(() => !this.isOpen)).subscribe(this.handleEnd.bind(this)), this.navigationService.backspace.pipe(filter(() => this.isTagFocused)).subscribe(this.handleBackspace.bind(this)), this.navigationService.delete.pipe(filter(() => this.isTagFocused)).subscribe(this.handleDelete.bind(this)));\n  }\n\n  subscribeFocusEvents() {\n    if (isDocumentAvailable()) {\n      this.handleFocus = this.handleFocus.bind(this);\n      this.handleDocumentBlur = this.handleDocumentBlur.bind(this);\n\n      this._zone.runOutsideAngular(() => {\n        const useCapture = true;\n        document.addEventListener('focus', this.handleFocus, useCapture);\n        document.addEventListener('blur', this.handleDocumentBlur, useCapture);\n      });\n    }\n  }\n\n  unSubscribeFocusEvents() {\n    if (isDocumentAvailable()) {\n      const useCapture = true;\n      document.removeEventListener('focus', this.handleFocus, useCapture);\n      document.removeEventListener('blur', this.handleDocumentBlur, useCapture);\n    }\n  }\n\n  handleDocumentBlur(event) {\n    if (event.target !== this.wrapper.nativeElement) {\n      return;\n    }\n\n    event.stopImmediatePropagation();\n    this.handleBlur(event);\n  }\n\n  handleTabKey() {\n    this.focus();\n\n    if (this.isOpen) {\n      this.treeview.blur();\n      this.removeTreeViewFromTabOrder();\n    }\n  }\n\n  handleUpKey(event) {\n    if (!this.treeview) {\n      return;\n    }\n\n    event.originalEvent.preventDefault(); // Prevent toggling the focus between the filterInput and the wrapper elements with `up` key\n\n    if (this.isWrapperActive) {\n      return;\n    }\n\n    const isFirstNodeActive = this.treeview['navigationService']['activeIndex'] === '0'; // Current focus is on the filter input => should focus the wrapper\n\n    if (this.filterable && this.isFilterActive) {\n      this.focus(); // Current focus is on the treeview first node => should focus the check all checkbox if enabled\n    } else if (this.checkAll && !this.isCheckAllActive && isFirstNodeActive) {\n      this.checkAllInput.nativeElement.focus(); // Current focus is either on the check all checkbox or the treeview's first node\n      // => should focus either the filter input (if enabled) or the wrapper\n    } else if (this.isCheckAllActive || isFirstNodeActive) {\n      if (this.filterable) {\n        this.filterInput.nativeElement.focus();\n      } else {\n        this.focus();\n      }\n    }\n  }\n\n  handleDownKey(event) {\n    if (!this.treeview) {\n      return;\n    }\n\n    event.originalEvent.preventDefault(); // Current focus is on the wrapper => should focus the filter input\n\n    if (this.filterable && this.isWrapperActive) {\n      this.filterInput.nativeElement.focus(); // Current focus is on the wrapper/filter input => should focus check all checkbox if enabled\n    } else if (this.checkAll && (this.isWrapperActive || this.isFilterActive)) {\n      this.checkAllInput.nativeElement.focus(); // Should focus the treeview if filterable and check all are disabled\n    } else if (!this.treeview.isActive) {\n      this.treeview.focus();\n    }\n\n    this.focusedTagIndex = undefined;\n  }\n\n  handleRightKey(event) {\n    event.originalEvent.preventDefault();\n    const last = this.tags.length - 1;\n\n    if (this.focusedTagIndex === last) {\n      this.focusedTagIndex = undefined;\n    } else if (this.focusedTagIndex < last) {\n      this.focusedTagIndex++;\n    } else if (!this.focusedTagIndex) {\n      this.focusedTagIndex = 0;\n    }\n  }\n\n  handleLeftKey(event) {\n    event.originalEvent.preventDefault();\n\n    if (this.focusedTagIndex === undefined || this.focusedTagIndex < 0) {\n      this.focusedTagIndex = this.tags.length - 1;\n    } else if (this.focusedTagIndex !== 0) {\n      this.focusedTagIndex--;\n    }\n  }\n\n  handleEnd(event) {\n    event.originalEvent.preventDefault();\n    this.focusedTagIndex = this.tags.length - 1;\n  }\n\n  handleHome(event) {\n    event.originalEvent.preventDefault();\n    this.focusedTagIndex = 0;\n  }\n\n  handleBackspace() {\n    if (this.focusedTagIndex !== undefined) {\n      this.handleDelete();\n    } else {\n      const tag = this.tags[this.tags.length - 1];\n      const index = this.tags.length - 1;\n      this.handleRemoveTag({\n        tag,\n        index\n      });\n    }\n  }\n\n  handleDelete() {\n    const tag = this.tags[this.focusedTagIndex];\n    const index = this.focusedTagIndex;\n    this.handleRemoveTag({\n      tag,\n      index\n    });\n\n    if (this.focusedTagIndex === this.tags.length) {\n      this.focusedTagIndex = undefined;\n    }\n  }\n\n  unsubscribeEvents() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.unSubscribeFocusEvents();\n  }\n  /**\n   * Remove the `TreeView` from the tab order, otherwise a focus loop between the page elements will occur\n   * and the user will not be able to tab to the rest of the browser elements\n   */\n\n\n  removeTreeViewFromTabOrder() {\n    const nodes = this.treeview.element.nativeElement.querySelectorAll('li');\n    nodes.forEach(item => {\n      if (item.getAttribute('tabindex') === '0') {\n        this.lastNodeOnFocus = item;\n        this.lastNodeOnFocus.setAttribute('tabindex', '-1');\n      }\n    });\n  }\n\n  setState() {\n    if (isPresent(this.dataItems) && isPresent(this.valueField)) {\n      this.setTags();\n      this.checkedItems = this.dataItems.slice();\n    }\n\n    this.cdr.markForCheck();\n  }\n\n  setTags() {\n    const source = this.dataItems.map(item => item.dataItem);\n    this.tags = this.tagMapper(source);\n    this.disabledIndices = this.disabledItemsMapper();\n  }\n\n  updateValue(value) {\n    const newValue = this.valuePrimitive ? value.map(item => valueFrom(item, this.valueField)) : value.map(item => item.dataItem);\n    this.value = newValue;\n    this.emitValueChange(this.value);\n  }\n  /**\n   * @hidden\n   *\n   * Determines which of the provided tags should be disabled and stores their position indices\n   */\n\n\n  disabledItemsMapper() {\n    return new Set(this.dataItems.reduce((indices, item, index) => {\n      if (this.itemDisabled(item.dataItem, item.index)) {\n        indices.push(index);\n      }\n\n      return indices;\n    }, []));\n  }\n\n  setComponentClasses() {\n    if (this.size !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('input', this.size));\n    }\n\n    if (this.rounded !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n    }\n\n    if (this.fillMode !== 'none') {\n      this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('input', this.fillMode));\n    }\n  }\n\n  removeParents(parent) {\n    let currentParent = parent;\n    const nodes = [];\n\n    while (currentParent) {\n      nodes.push(currentParent.item);\n      currentParent = currentParent.parent;\n    }\n\n    return nodes;\n  }\n  /**\n   * Creates an internal map of the available tree items to be used as a reference\n   * to retrieve the item's children/parent and determine the checked sate\n   */\n\n\n  registerLookupItems(data, parentItem = null, levelIndex = 0) {\n    if (!isPresent(data) || data.length === 0) {\n      return;\n    }\n\n    const parentIndex = nodeIndex$1(parentItem);\n    const treeItems = data.map(node => buildTreeItem(node, this.valueField, levelIndex));\n\n    if (isPresent(parentItem)) {\n      this.lookup.registerChildren(parentIndex, treeItems);\n    }\n\n    treeItems.forEach(item => {\n      this.lookup.registerItem(item, parentItem);\n\n      if (!this.loadOnDemand) {\n        this.registerChildLookupItems(item, levelIndex);\n      }\n    });\n  }\n\n  registerChildLookupItems(item, levelIndex) {\n    if (this.hasChildren(item.dataItem)) {\n      this.children(item.dataItem).subscribe(children => {\n        const index = this.isHeterogeneous ? levelIndex + 1 : 0;\n        this.registerLookupItems(children, item, index);\n      });\n    }\n  }\n\n}\n\nMultiSelectTreeComponent.ɵfac = function MultiSelectTreeComponent_Factory(t) {\n  return new (t || MultiSelectTreeComponent)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.PopupService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(NavigationService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MultiSelectTreeLookupService), i0.ɵɵdirectiveInject(TOUCH_ENABLED, 8));\n};\n\nMultiSelectTreeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MultiSelectTreeComponent,\n  selectors: [[\"kendo-multiselecttree\"]],\n  contentQueries: function MultiSelectTreeComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, HeaderTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, FooterTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, NodeTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, NoDataTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, TagTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, GroupTagTemplateDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nodeTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.noDataTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tagTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.groupTagTemplate = _t.first);\n    }\n  },\n  viewQuery: function MultiSelectTreeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c9, 7);\n      i0.ɵɵviewQuery(_c8, 7, ViewContainerRef);\n      i0.ɵɵviewQuery(_c44, 5);\n      i0.ɵɵviewQuery(_c45, 5);\n      i0.ɵɵviewQuery(_c53, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.treeview = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filterInput = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.checkAllInput = _t.first);\n    }\n  },\n  hostVars: 22,\n  hostBindings: function MultiSelectTreeComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function MultiSelectTreeComponent_click_HostBindingHandler() {\n        return ctx.handleClick();\n      })(\"keydown\", function MultiSelectTreeComponent_keydown_HostBindingHandler($event) {\n        return ctx.handleKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-disabled\", ctx.isDisabled)(\"aria-controls\", ctx.hostAriaControls)(\"aria-autocomplete\", ctx.hostAriaAutocomplete)(\"aria-invalid\", ctx.hostAriaInvalid)(\"aria-busy\", ctx.isBusy)(\"id\", ctx.id)(\"dir\", ctx.direction)(\"tabindex\", ctx.hostTabIndex)(\"role\", ctx.role)(\"aria-expanded\", ctx.isAriaExpanded)(\"aria-haspopup\", ctx.ariaHasPopup)(\"readonly\", ctx.isReadonly)(\"aria-describedby\", ctx.ariaDescribedBy)(\"aria-activedescendant\", ctx.ariaActiveDescendant);\n      i0.ɵɵclassProp(\"k-multiselect-tree\", ctx.hostClasses)(\"k-input\", ctx.hostClasses)(\"k-disabled\", ctx.isDisabled)(\"k-loading\", ctx.isLoading);\n    }\n  },\n  inputs: {\n    tabindex: \"tabindex\",\n    size: \"size\",\n    rounded: \"rounded\",\n    fillMode: \"fillMode\",\n    popupSettings: \"popupSettings\",\n    checkableSettings: \"checkableSettings\",\n    data: \"data\",\n    value: \"value\",\n    dataItems: \"dataItems\",\n    textField: \"textField\",\n    valueField: \"valueField\",\n    valueDepth: \"valueDepth\",\n    loading: \"loading\",\n    placeholder: \"placeholder\",\n    listHeight: \"listHeight\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    valuePrimitive: \"valuePrimitive\",\n    loadOnDemand: \"loadOnDemand\",\n    focusableId: \"focusableId\",\n    clearButton: \"clearButton\",\n    filterable: \"filterable\",\n    checkAll: \"checkAll\",\n    hasChildren: \"hasChildren\",\n    fetchChildren: \"fetchChildren\",\n    isNodeExpanded: \"isNodeExpanded\",\n    isNodeVisible: \"isNodeVisible\",\n    itemDisabled: \"itemDisabled\",\n    tagMapper: \"tagMapper\"\n  },\n  outputs: {\n    onFocus: \"focus\",\n    onBlur: \"blur\",\n    open: \"open\",\n    opened: \"opened\",\n    close: \"close\",\n    closed: \"closed\",\n    nodeExpand: \"nodeExpand\",\n    nodeCollapse: \"nodeCollapse\",\n    valueChange: \"valueChange\",\n    removeTag: \"removeTag\",\n    filterChange: \"filterChange\"\n  },\n  exportAs: [\"kendoMultiSelectTree\"],\n  features: [i0.ɵɵProvidersFeature([LocalizationService, NavigationService, DataService, DisabledItemsService, SelectionService, MultiSelectTreeLookupService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.multiselecttree'\n  }, {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MultiSelectTreeComponent)\n  }, {\n    provide: DataBoundComponent,\n    useExisting: forwardRef(() => MultiSelectTreeComponent)\n  }, {\n    provide: ExpandableComponent,\n    useExisting: forwardRef(() => MultiSelectTreeComponent)\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(() => MultiSelectTreeComponent)\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 9,\n  vars: 17,\n  consts: function () {\n    let i18n_54;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text displayed in the popup when there are no items\n       * @meaning kendo.multiselecttree.noDataText\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_55 = goog.getMsg(\"NO DATA FOUND\");\n      i18n_54 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_55;\n    } else {\n      i18n_54 = $localize`:kendo.multiselecttree.noDataText|The text displayed in the popup when there are no items:NO DATA FOUND`;\n    }\n\n    let i18n_56;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the clear button\n       * @meaning kendo.multiselecttree.clearTitle\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_57 = goog.getMsg(\"clear\");\n      i18n_56 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_57;\n    } else {\n      i18n_56 = $localize`:kendo.multiselecttree.clearTitle|The title of the clear button:clear`;\n    }\n\n    let i18n_58;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text displayed for the check-all checkbox\n       * @meaning kendo.multiselecttree.checkAllText\n       */\n      const MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_59 = goog.getMsg(\"Check all\");\n      i18n_58 = MSG_C__REPOS_ANGULAR_KENDO_GRID_NODE_MODULES__PROGRESS_KENDO_ANGULAR_DROPDOWNS_FESM2015_KENDO_ANGULAR_DROPDOWNS_JS_59;\n    } else {\n      i18n_58 = $localize`:kendo.multiselecttree.checkAllText|The text displayed for the check-all checkbox:Check all`;\n    }\n\n    return [[\"kendoMultiSelectTreeLocalizedMessages\", \"\", \"noDataText\", i18n_54, \"clearTitle\", i18n_56, \"checkAllText\", i18n_58], [3, \"size\", \"rounded\", \"fillMode\", \"id\", \"tags\", \"focused\", \"textField\", \"valueField\", \"valueDepth\", \"disabled\", \"tagPrefix\", \"template\", \"groupTemplate\", \"disabledIndices\", \"removeTag\"], [\"class\", \"k-input-inner k-readonly\", 4, \"ngIf\"], [\"class\", \"k-clear-value\", \"role\", \"button\", \"tabindex\", \"-1\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"k-icon k-i-loading k-input-loading-icon\", 4, \"ngIf\"], [\"popupTemplate\", \"\"], [\"container\", \"\"], [1, \"k-input-inner\", \"k-readonly\"], [1, \"k-input-value-text\"], [\"role\", \"button\", \"tabindex\", \"-1\", 1, \"k-clear-value\", 3, \"click\"], [1, \"k-icon\", \"k-i-x\"], [1, \"k-icon\", \"k-i-loading\", \"k-input-loading-icon\"], [\"class\", \"k-list-filter\", 4, \"ngIf\"], [4, \"ngIf\"], [\"class\", \"k-check-all\", 4, \"ngIf\"], [\"kendoMultiSelectTreeCheckable\", \"\", 3, \"size\", \"nodes\", \"animate\", \"isHeterogeneous\", \"checkable\", \"checkedItems\", \"valueField\", \"textField\", \"children\", \"hasChildren\", \"isExpanded\", \"isDisabled\", \"nodeTemplate\", \"loadOnDemand\", \"filter\", \"isVisible\", \"kendoEventsOutsideAngular\", \"scope\", \"keydown\", \"nodeClick\", \"expand\", \"collapse\", \"checkedItemsChange\"], [\"treeview\", \"\"], [\"class\", \"k-no-data\", 4, \"ngIf\"], [1, \"k-list-filter\"], [1, \"k-textbox\", \"k-input\", 3, \"ngClass\"], [1, \"k-input-prefix\"], [1, \"k-input-icon\", \"k-icon\", \"k-i-search\"], [\"role\", \"textbox\", \"aria-haspopup\", \"true\", \"aria-expanded\", \"false\", \"tabindex\", \"0\", \"aria-disabled\", \"false\", \"aria-readonly\", \"false\", 1, \"k-input-inner\", 3, \"filterInput\", \"ngModel\", \"kendoEventsOutsideAngular\", \"scope\", \"input\", \"keydown\", \"ngModelChange\"], [\"filterInput\", \"\"], [3, \"templateContext\"], [1, \"k-check-all\"], [\"type\", \"checkbox\", \"role\", \"checkbox\", \"tabindex\", \"0\", \"aria-disabled\", \"false\", \"aria-readonly\", \"false\", 1, \"k-checkbox\", 3, \"checkAll\", \"ngClass\", \"treeview\", \"checkedItems\", \"valueField\", \"lastAction\", \"kendoEventsOutsideAngular\", \"scope\", \"checkedItemsChange\", \"keydown\"], [\"checkAllInput\", \"\"], [1, \"k-checkbox-label\", 3, \"click\", \"mousedown\"], [1, \"k-no-data\"], [3, \"ngIf\", \"templateContext\"], [3, \"ngIf\"]];\n  },\n  template: function MultiSelectTreeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵelementStart(1, \"kendo-taglist\", 1);\n      i0.ɵɵlistener(\"removeTag\", function MultiSelectTreeComponent_Template_kendo_taglist_removeTag_1_listener($event) {\n        return ctx.handleRemoveTag($event);\n      });\n      i0.ɵɵtemplate(2, MultiSelectTreeComponent_span_2_Template, 3, 1, \"span\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, MultiSelectTreeComponent_span_3_Template, 2, 1, \"span\", 3);\n      i0.ɵɵtemplate(4, MultiSelectTreeComponent_span_4_Template, 1, 0, \"span\", 4);\n      i0.ɵɵtemplate(5, MultiSelectTreeComponent_ng_template_5_Template, 7, 27, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementContainer(7, null, 6);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"size\", ctx.size)(\"rounded\", ctx.rounded)(\"fillMode\", ctx.fillMode)(\"id\", ctx.tagListId)(\"tags\", ctx.tags)(\"focused\", ctx.focusedTagIndex)(\"textField\", ctx.textField)(\"valueField\", ctx.valueField)(\"valueDepth\", ctx.valueDepth)(\"disabled\", ctx.disabled)(\"tagPrefix\", ctx.tagPrefix)(\"template\", ctx.tagTemplate)(\"groupTemplate\", ctx.groupTagTemplate)(\"disabledIndices\", ctx.disabledIndices);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tags || !ctx.tags.length);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.disabled && !ctx.loading && !ctx.readonly && ctx.clearButton && (ctx.tags == null ? null : ctx.tags.length));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n    }\n  },\n  directives: [LocalizedMessagesDirective, TagListComponent, i11.NgIf, i1$1.TreeViewComponent, CheckDirective, i9.EventsOutsideAngularDirective, i11.NgClass, i12.DefaultValueAccessor, FilterInputDirective, i12.NgControlStatus, i12.NgModel, TemplateContextDirective, CheckAllDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MultiSelectTreeComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoMultiSelectTree',\n      providers: [LocalizationService, NavigationService, DataService, DisabledItemsService, SelectionService, MultiSelectTreeLookupService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.multiselecttree'\n      }, {\n        multi: true,\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => MultiSelectTreeComponent)\n      }, {\n        provide: DataBoundComponent,\n        useExisting: forwardRef(() => MultiSelectTreeComponent)\n      }, {\n        provide: ExpandableComponent,\n        useExisting: forwardRef(() => MultiSelectTreeComponent)\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(() => MultiSelectTreeComponent)\n      }],\n      selector: 'kendo-multiselecttree',\n      template: `\n        <ng-container kendoMultiSelectTreeLocalizedMessages\n            i18n-noDataText=\"kendo.multiselecttree.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.multiselecttree.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n\n            i18n-checkAllText=\"kendo.multiselecttree.checkAllText|The text displayed for the check-all checkbox\"\n            checkAllText=\"Check all\"\n        >\n        </ng-container>\n        <kendo-taglist\n            [size]=\"size\"\n            [rounded]=\"rounded\"\n            [fillMode]=\"fillMode\"\n            [id]=\"tagListId\"\n            [tags]=\"tags\"\n            [focused]=\"focusedTagIndex\"\n            [textField]=\"textField\"\n            [valueField]=\"valueField\"\n            [valueDepth]=\"valueDepth\"\n            [disabled]=\"disabled\"\n            [tagPrefix]=\"tagPrefix\"\n            [template]=\"tagTemplate\"\n            [groupTemplate]=\"groupTagTemplate\"\n            [disabledIndices]=\"disabledIndices\"\n            (removeTag)=\"handleRemoveTag($event)\"\n        >\n            <span *ngIf=\"!tags || !tags.length\"\n                class=\"k-input-inner k-readonly\"\n            >\n                <span class=\"k-input-value-text\">{{ placeholder }}</span>\n            </span>\n        </kendo-taglist>\n        <span\n            *ngIf=\"!disabled && !loading && !readonly && clearButton && tags?.length\"\n            class=\"k-clear-value\"\n            [attr.title]=\"messageFor('clearTitle')\"\n            role=\"button\"\n            tabindex=\"-1\"\n            (click)=\"clearAll($event)\"\n        >\n            <span class=\"k-icon k-i-x\"></span>\n        </span>\n        <span\n            *ngIf=\"loading\"\n            class=\"k-icon k-i-loading k-input-loading-icon\"\n        >\n        </span>\n        <ng-template #popupTemplate>\n            <span\n                *ngIf=\"filterable\"\n                class=\"k-list-filter\"\n            >\n                <span\n                    class=\"k-textbox k-input\"\n                    [ngClass]=\"filterInputClasses\"\n                >\n                    <span class=\"k-input-prefix\">\n                        <span class=\"k-input-icon k-icon k-i-search\"></span>\n                    </span>\n                    <input\n                        #filterInput\n                        (input)=\"handleFilterInputChange($event.target)\"\n                        [filterInput]=\"filterable && !touchEnabled\"\n                        (keydown)=\"handleKeydown($event)\"\n                        [(ngModel)]=\"filter\"\n                        class=\"k-input-inner\"\n                        role=\"textbox\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                        tabindex=\"0\"\n                        aria-disabled=\"false\"\n                        aria-readonly=\"false\"\n                        [kendoEventsOutsideAngular]=\"{\n                            blur: handleBlur\n                        }\"\n                        [scope]=\"this\"\n                    >\n                </span>\n            </span>\n            <!--header template-->\n            <ng-template\n                *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate?.templateRef\n                }\">\n            </ng-template>\n            <div *ngIf=\"checkAll\" class=\"k-check-all\">\n                <input\n                    #checkAllInput\n                    [checkAll]=\"!filterable && !touchEnabled\"\n                    type=\"checkbox\"\n                    class=\"k-checkbox\"\n                    [ngClass]=\"checkAllCheckboxClasses\"\n                    role=\"checkbox\"\n                    tabindex=\"0\"\n                    aria-disabled=\"false\"\n                    aria-readonly=\"false\"\n                    [treeview]=\"treeview\"\n                    [checkedItems]=\"checkedItems\"\n                    [valueField]=\"valueField\"\n                    [lastAction]=\"lastAction\"\n                    (checkedItemsChange)=\"handleCheckedItemsChange($event)\"\n                    (keydown)=\"handleKeydown($event)\"\n                    [kendoEventsOutsideAngular]=\"{\n                        blur: handleBlur\n                    }\"\n                    [scope]=\"this\"\n                >\n                <span\n                    class=\"k-checkbox-label\"\n                    (click)=\"toggleCheckAll()\"\n                    (mousedown)=\"$event.preventDefault()\"\n                >\n                    {{ messageFor('checkAllText') }}\n                </span>\n            </div>\n            <kendo-treeview\n                #treeview\n                [size]=\"size\"\n                [nodes]=\"data\"\n                [style.maxHeight.px]=\"listHeight\"\n                [animate]=\"false\"\n                kendoMultiSelectTreeCheckable\n                [isHeterogeneous]=\"isHeterogeneous\"\n                [checkable]=\"checkableSettings\"\n                [checkedItems]=\"checkedItems\"\n                [valueField]=\"valueField\"\n                [textField]=\"textField\"\n                [children]=\"children\"\n                [hasChildren]=\"hasChildren\"\n                [isExpanded]=\"isNodeExpanded\"\n                [isDisabled]=\"itemDisabled\"\n                [nodeTemplate]=\"nodeTemplate\"\n                [loadOnDemand]=\"loadOnDemand\"\n                [filter]=\"filter\"\n                [isVisible]=\"isNodeVisible\"\n                (keydown)=\"handleKeydown($event)\"\n                (nodeClick)=\"handleNodeClick($event)\"\n                (expand)=\"nodeExpand.emit($event)\"\n                (collapse)=\"nodeCollapse.emit($event)\"\n                (checkedItemsChange)=\"handleCheckedItemsChange($event)\"\n                [kendoEventsOutsideAngular]=\"{\n                    focusout: handleBlur\n                }\"\n                [scope]=\"this\"\n            >\n            </kendo-treeview>\n            <!--footer template-->\n            <ng-template\n                *ngIf=\"footerTemplate\"\n                [templateContext]=\"{\n                    templateRef: footerTemplate?.templateRef\n                }\">\n            </ng-template>\n            <!--no-data template-->\n            <div class=\"k-no-data\" *ngIf=\"!data || data?.length === 0 || allNodesHidden\">\n                <ng-template [ngIf]=\"noDataTemplate\"\n                    [templateContext]=\"{\n                        templateRef: noDataTemplate?.templateRef\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!noDataTemplate\">\n                    <div>{{ messageFor('noDataText') }}</div>\n                </ng-template>\n            </div>\n        </ng-template>\n        <ng-container #container></ng-container>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i2.PopupService\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: NavigationService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: MultiSelectTreeLookupService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TOUCH_ENABLED]\n      }]\n    }];\n  }, {\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-multiselect-tree']\n    }, {\n      type: HostBinding,\n      args: ['class.k-input']\n    }],\n    isDisabled: [{\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }, {\n      type: HostBinding,\n      args: ['attr.aria-disabled']\n    }],\n    hostAriaControls: [{\n      type: HostBinding,\n      args: ['attr.aria-controls']\n    }],\n    hostAriaAutocomplete: [{\n      type: HostBinding,\n      args: ['attr.aria-autocomplete']\n    }],\n    isLoading: [{\n      type: HostBinding,\n      args: ['class.k-loading']\n    }],\n    hostAriaInvalid: [{\n      type: HostBinding,\n      args: ['attr.aria-invalid']\n    }],\n    isBusy: [{\n      type: HostBinding,\n      args: ['attr.aria-busy']\n    }],\n    id: [{\n      type: HostBinding,\n      args: ['attr.id']\n    }],\n    direction: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    hostTabIndex: [{\n      type: HostBinding,\n      args: ['attr.tabindex']\n    }],\n    role: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    isAriaExpanded: [{\n      type: HostBinding,\n      args: ['attr.aria-expanded']\n    }],\n    ariaHasPopup: [{\n      type: HostBinding,\n      args: ['attr.aria-haspopup']\n    }],\n    isReadonly: [{\n      type: HostBinding,\n      args: ['attr.readonly']\n    }],\n    ariaDescribedBy: [{\n      type: HostBinding,\n      args: ['attr.aria-describedby']\n    }],\n    ariaActiveDescendant: [{\n      type: HostBinding,\n      args: ['attr.aria-activedescendant']\n    }],\n    handleClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    handleKeydown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }],\n    headerTemplate: [{\n      type: ContentChild,\n      args: [HeaderTemplateDirective, {\n        static: false\n      }]\n    }],\n    footerTemplate: [{\n      type: ContentChild,\n      args: [FooterTemplateDirective, {\n        static: false\n      }]\n    }],\n    nodeTemplate: [{\n      type: ContentChild,\n      args: [NodeTemplateDirective, {\n        static: false\n      }]\n    }],\n    noDataTemplate: [{\n      type: ContentChild,\n      args: [NoDataTemplateDirective, {\n        static: false\n      }]\n    }],\n    tagTemplate: [{\n      type: ContentChild,\n      args: [TagTemplateDirective, {\n        static: false\n      }]\n    }],\n    groupTagTemplate: [{\n      type: ContentChild,\n      args: [GroupTagTemplateDirective, {\n        static: false\n      }]\n    }],\n    popupTemplate: [{\n      type: ViewChild,\n      args: ['popupTemplate', {\n        static: true\n      }]\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }],\n    treeview: [{\n      type: ViewChild,\n      args: ['treeview', {\n        static: false\n      }]\n    }],\n    filterInput: [{\n      type: ViewChild,\n      args: ['filterInput', {\n        static: false\n      }]\n    }],\n    checkAllInput: [{\n      type: ViewChild,\n      args: ['checkAllInput', {\n        static: false\n      }]\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    fillMode: [{\n      type: Input\n    }],\n    popupSettings: [{\n      type: Input\n    }],\n    checkableSettings: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    dataItems: [{\n      type: Input\n    }],\n    textField: [{\n      type: Input\n    }],\n    valueField: [{\n      type: Input\n    }],\n    valueDepth: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    listHeight: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    valuePrimitive: [{\n      type: Input\n    }],\n    loadOnDemand: [{\n      type: Input\n    }],\n    focusableId: [{\n      type: Input\n    }],\n    clearButton: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    checkAll: [{\n      type: Input\n    }],\n    hasChildren: [{\n      type: Input\n    }],\n    fetchChildren: [{\n      type: Input\n    }],\n    isNodeExpanded: [{\n      type: Input\n    }],\n    isNodeVisible: [{\n      type: Input\n    }],\n    itemDisabled: [{\n      type: Input\n    }],\n    tagMapper: [{\n      type: Input\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    open: [{\n      type: Output\n    }],\n    opened: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    closed: [{\n      type: Output\n    }],\n    nodeExpand: [{\n      type: Output\n    }],\n    nodeCollapse: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    removeTag: [{\n      type: Output\n    }],\n    filterChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * A directive which encapsulates the retrieval of the child nodes when flat data is provided.\n */\n\n\nclass DropDownTreeFlatBindingDirective extends FlatDataBindingDirective {\n  constructor(dropDownTree) {\n    super(dropDownTree);\n    this.dropDownTree = dropDownTree;\n  }\n  /**\n   * @hidden\n   */\n\n\n  set filter(term) {\n    super.filter = term;\n  }\n\n  ngOnChanges(changes) {\n    if (isChanged('nodes', changes, false)) {\n      this.dropDownTree.nodes = changes.nodes.currentValue;\n      super.nodes = changes.nodes.currentValue;\n    }\n\n    super.ngOnChanges(changes);\n  }\n\n}\n\nDropDownTreeFlatBindingDirective.ɵfac = function DropDownTreeFlatBindingDirective_Factory(t) {\n  return new (t || DropDownTreeFlatBindingDirective)(i0.ɵɵdirectiveInject(i1$1.DataBoundComponent));\n};\n\nDropDownTreeFlatBindingDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DropDownTreeFlatBindingDirective,\n  selectors: [[\"\", \"kendoDropDownTreeFlatBinding\", \"\"]],\n  inputs: {\n    nodes: [\"kendoDropDownTreeFlatBinding\", \"nodes\"],\n    idField: [\"valueField\", \"idField\"]\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropDownTreeFlatBindingDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownTreeFlatBinding]'\n    }]\n  }], function () {\n    return [{\n      type: i1$1.DataBoundComponent\n    }];\n  }, {\n    nodes: [{\n      type: Input,\n      args: ['kendoDropDownTreeFlatBinding']\n    }],\n    idField: [{\n      type: Input,\n      args: ['valueField']\n    }]\n  });\n})();\n\nconst INDEX_SEPARATOR = '_';\n\nconst nodeIndex = (index = '', parentIndex = '') => {\n  return `${parentIndex}${parentIndex ? INDEX_SEPARATOR : ''}${index}`;\n};\n\nconst isArrayWithAtLeastOneItem = v => v && Array.isArray(v) && v.length !== 0;\n\nconst mapToWrappers = (currentLevelNodes, childrenField, parent = null, parentIndex = '') => {\n  if (!isArrayWithAtLeastOneItem(currentLevelNodes)) {\n    return [];\n  }\n\n  return currentLevelNodes.map((node, idx) => {\n    const index = nodeIndex(idx.toString(), parentIndex);\n    const wrapper = {\n      dataItem: node,\n      index,\n      parent,\n      visible: true\n    };\n    wrapper.children = mapToWrappers(getter$1(childrenField)(node), childrenField, wrapper, index);\n    return wrapper;\n  });\n};\n/**\n * A directive which encapsulates the retrieval of the child nodes when hierarchical data is provided.\n */\n\n\nclass DropDownTreeHierarchyBindingDirective extends HierarchyBindingDirective {\n  constructor(dropDownTree) {\n    super(dropDownTree);\n    this.dropDownTree = dropDownTree;\n  }\n  /**\n   * @hidden\n   */\n\n\n  set filter(term) {\n    super.filter = term;\n  }\n\n  ngOnChanges(changes) {\n    if (isChanged('nodes', changes, false)) {\n      this.dropDownTree.nodes = changes.nodes.currentValue;\n      super.nodes = changes.nodes.currentValue;\n    }\n\n    super.ngOnChanges(changes);\n  }\n\n}\n\nDropDownTreeHierarchyBindingDirective.ɵfac = function DropDownTreeHierarchyBindingDirective_Factory(t) {\n  return new (t || DropDownTreeHierarchyBindingDirective)(i0.ɵɵdirectiveInject(i1$1.DataBoundComponent));\n};\n\nDropDownTreeHierarchyBindingDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DropDownTreeHierarchyBindingDirective,\n  selectors: [[\"\", \"kendoDropDownTreeHierarchyBinding\", \"\"]],\n  inputs: {\n    nodes: [\"kendoDropDownTreeHierarchyBinding\", \"nodes\"]\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropDownTreeHierarchyBindingDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownTreeHierarchyBinding]'\n    }]\n  }], function () {\n    return [{\n      type: i1$1.DataBoundComponent\n    }];\n  }, {\n    nodes: [{\n      type: Input,\n      args: ['kendoDropDownTreeHierarchyBinding']\n    }]\n  });\n})();\n/**\n * A directive which encapsulates the retrieval of the child nodes when flat data is provided.\n */\n\n\nclass MultiSelectTreeFlatBindingDirective extends FlatDataBindingDirective {\n  constructor(multiSelectTree) {\n    super(multiSelectTree);\n    this.multiSelectTree = multiSelectTree;\n  }\n  /**\n   * @hidden\n   */\n\n\n  set filter(term) {\n    super.filter = term;\n  }\n\n  ngOnChanges(changes) {\n    if (isChanged('nodes', changes, false)) {\n      this.multiSelectTree.nodes = changes.nodes.currentValue;\n      super.nodes = changes.nodes.currentValue;\n    }\n\n    super.ngOnChanges(changes);\n  }\n\n}\n\nMultiSelectTreeFlatBindingDirective.ɵfac = function MultiSelectTreeFlatBindingDirective_Factory(t) {\n  return new (t || MultiSelectTreeFlatBindingDirective)(i0.ɵɵdirectiveInject(i1$1.DataBoundComponent));\n};\n\nMultiSelectTreeFlatBindingDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MultiSelectTreeFlatBindingDirective,\n  selectors: [[\"\", \"kendoMultiSelectTreeFlatBinding\", \"\"]],\n  inputs: {\n    nodes: [\"kendoMultiSelectTreeFlatBinding\", \"nodes\"],\n    idField: [\"valueField\", \"idField\"]\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MultiSelectTreeFlatBindingDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoMultiSelectTreeFlatBinding]'\n    }]\n  }], function () {\n    return [{\n      type: i1$1.DataBoundComponent\n    }];\n  }, {\n    nodes: [{\n      type: Input,\n      args: ['kendoMultiSelectTreeFlatBinding']\n    }],\n    idField: [{\n      type: Input,\n      args: ['valueField']\n    }]\n  });\n})();\n/**\n * A directive which encapsulates the retrieval of the child nodes when hierarchical data is provided.\n */\n\n\nclass MultiSelectTreeHierarchyBindingDirective extends HierarchyBindingDirective {\n  constructor(multiSelectTree) {\n    super(multiSelectTree);\n    this.multiSelectTree = multiSelectTree;\n  }\n  /**\n   * @hidden\n   */\n\n\n  set filter(term) {\n    super.filter = term;\n  }\n\n  ngOnChanges(changes) {\n    if (isChanged('nodes', changes, false)) {\n      this.multiSelectTree.nodes = changes.nodes.currentValue;\n      super.nodes = changes.nodes.currentValue;\n    }\n\n    super.ngOnChanges(changes);\n  }\n\n}\n\nMultiSelectTreeHierarchyBindingDirective.ɵfac = function MultiSelectTreeHierarchyBindingDirective_Factory(t) {\n  return new (t || MultiSelectTreeHierarchyBindingDirective)(i0.ɵɵdirectiveInject(i1$1.DataBoundComponent));\n};\n\nMultiSelectTreeHierarchyBindingDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MultiSelectTreeHierarchyBindingDirective,\n  selectors: [[\"\", \"kendoMultiSelectTreeHierarchyBinding\", \"\"]],\n  inputs: {\n    nodes: [\"kendoMultiSelectTreeHierarchyBinding\", \"nodes\"]\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MultiSelectTreeHierarchyBindingDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoMultiSelectTreeHierarchyBinding]'\n    }]\n  }], function () {\n    return [{\n      type: i1$1.DataBoundComponent\n    }];\n  }, {\n    nodes: [{\n      type: Input,\n      args: ['kendoMultiSelectTreeHierarchyBinding']\n    }]\n  });\n})();\n/**\n * A directive which manages the expanded state of the popup TreeView.\n */\n\n\nclass DropDownTreesExpandDirective extends ExpandDirective {\n  constructor(dropDownTree) {\n    super(dropDownTree);\n    this.dropDownTree = dropDownTree;\n  }\n  /**\n   * @hidden\n   *\n   * Ensures a user-defined `isNodeExpanded` callback will not be overriden by the default directive setup.\n   * Implemented as a value setter in the base directive, this just overrides the input name.\n   */\n\n\n  set isExpanded(value) {\n    this.dropDownTree.isExpanded = value;\n  }\n\n}\n\nDropDownTreesExpandDirective.ɵfac = function DropDownTreesExpandDirective_Factory(t) {\n  return new (t || DropDownTreesExpandDirective)(i0.ɵɵdirectiveInject(i1$1.ExpandableComponent));\n};\n\nDropDownTreesExpandDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DropDownTreesExpandDirective,\n  selectors: [[\"\", \"kendoDropDownTreeExpandable\", \"\"], [\"\", \"kendoMultiSelectTreeExpandable\", \"\"]],\n  inputs: {\n    isExpanded: [\"isNodeExpanded\", \"isExpanded\"]\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropDownTreesExpandDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownTreeExpandable], [kendoMultiSelectTreeExpandable]'\n    }]\n  }], function () {\n    return [{\n      type: i1$1.ExpandableComponent\n    }];\n  }, {\n    isExpanded: [{\n      type: Input,\n      args: ['isNodeExpanded']\n    }]\n  });\n})();\n/**\n * Custom component messages override default component messages\n * ([see example]({% slug rtl_dropdowns %}#toc-messages)).\n */\n\n\nclass CustomMessagesComponent extends Messages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n\n  get override() {\n    return true;\n  }\n\n}\n\nCustomMessagesComponent.ɵfac = function CustomMessagesComponent_Factory(t) {\n  return new (t || CustomMessagesComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\n\nCustomMessagesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CustomMessagesComponent,\n  selectors: [[\"kendo-dropdownlist-messages\"], [\"kendo-combobox-messages\"], [\"kendo-multicolumncombobox-messages\"], [\"kendo-autocomplete-messages\"], [\"kendo-multiselect-messages\"], [\"kendo-dropdowntree-messages\"], [\"kendo-multiselecttree-messages\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: Messages,\n    useExisting: forwardRef(() => CustomMessagesComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function CustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomMessagesComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: Messages,\n        useExisting: forwardRef(() => CustomMessagesComponent)\n      }],\n      selector: 'kendo-dropdownlist-messages,kendo-combobox-messages,kendo-multicolumncombobox-messages,kendo-autocomplete-messages,kendo-multiselect-messages,kendo-dropdowntree-messages,kendo-multiselecttree-messages',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n\nconst DEFAULT_FILTER_SETTINGS = {\n  caseSensitive: false,\n  operator: 'startsWith'\n};\n/**\n * Implements an event handler for the `filterChange` event of a DropDowns component\n * which performs simple data filtering.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-autocomplete\n *      [data]=\"data\"\n *      kendoDropDownFilter\n *      placeholder=\"e.g. Andorra\"\n *  >\n *  </kendo-autocomplete>\n * `\n * })\n * class AppComponent {\n *     public data: Array<string> = [\"Albania\", \"Andorra\", \"Armenia\", \"Austria\", \"Azerbaijan\"];\n * }\n * ```\n * > Currently, the built-in filtering does not work with [grouped data]({% slug api_kendo-data-query_groupby %}).\n */\n\nclass FilterDirective {\n  constructor(component) {\n    this.component = component;\n    /**\n     * @hidden\n     *\n     * Sets whether the filtering functionality is enabled on component init.\n     */\n\n    this.filterable = true;\n    this._data = [];\n  }\n  /**\n   * The initial data that will be used as a source array for the filtering operations.\n   */\n\n\n  set data(data) {\n    this._data = data || [];\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  ngOnInit() {\n    this.component.filterable = this.filterable;\n    this.filterChangeSubscription = this.component.filterChange.subscribe(this.handleFilterChange.bind(this));\n  }\n\n  ngOnDestroy() {\n    if (isPresent(this.filterChangeSubscription)) {\n      this.filterChangeSubscription.unsubscribe();\n    }\n  }\n\n  handleFilterChange(query) {\n    this.component.data = this.data.filter(item => this.matchesAnyField(item, query));\n  }\n\n  matchesAnyField(item, query) {\n    const normalizedQuery = this.normalizeValue(query);\n    const {\n      fields\n    } = this.filterSettings; // if no filter fields are present, we are dealing with primitive data\n\n    if (fields.length === 0) {\n      return this.checkItem(item, normalizedQuery);\n    }\n\n    return fields.some(field => this.checkItem(getter(item, field), normalizedQuery));\n  }\n\n  checkItem(target, query) {\n    target = this.normalizeValue(target);\n\n    if (this.filterSettings.operator === 'contains') {\n      return target.indexOf(query) !== -1;\n    } else {\n      return target.indexOf(query) === 0;\n    }\n  }\n\n  normalizeValue(value) {\n    const normalizedValue = isPresent(value) ? value.toString() : '';\n    return this.filterSettings.caseSensitive ? normalizedValue : normalizedValue.toLowerCase();\n  }\n\n  getFilterFields(providedFields) {\n    // ignore provided fields if the component deals with primitive data\n    if (!this.component.textField && !this.component.valueField) {\n      return [];\n    }\n\n    if (isArray(providedFields) && providedFields.length > 0) {\n      return providedFields;\n    } else {\n      // the autocomplete uses `valueField` for text extraction\n      const textField = this.component.textField || this.component.valueField;\n      return [textField];\n    }\n  }\n\n  get filterSettings() {\n    const settings = this.rawSettings;\n    const providedFields = isPresent(settings) && typeof settings === 'object' ? settings.fields : [];\n    return Object.assign({}, DEFAULT_FILTER_SETTINGS, settings, {\n      fields: this.getFilterFields(providedFields)\n    });\n  }\n\n}\n\nFilterDirective.ɵfac = function FilterDirective_Factory(t) {\n  return new (t || FilterDirective)(i0.ɵɵdirectiveInject(FilterableComponent));\n};\n\nFilterDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FilterDirective,\n  selectors: [[\"\", \"kendoDropDownFilter\", \"\"]],\n  inputs: {\n    data: \"data\",\n    rawSettings: [\"kendoDropDownFilter\", \"rawSettings\"],\n    filterable: \"filterable\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownFilter]'\n    }]\n  }], function () {\n    return [{\n      type: FilterableComponent\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    rawSettings: [{\n      type: Input,\n      args: ['kendoDropDownFilter']\n    }],\n    filterable: [{\n      type: Input\n    }]\n  });\n})();\n\nconst SHARED_DIRECTIVES = [HeaderTemplateDirective, FooterTemplateDirective, ItemTemplateDirective, GroupTemplateDirective, FixedGroupTemplateDirective, NoDataTemplateDirective, ValueTemplateDirective, TagTemplateDirective, GroupTagTemplateDirective, LocalizedMessagesDirective, CustomMessagesComponent, FilterDirective, FilterInputDirective];\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `ItemTemplateDirective`&mdash;The item template directive.\n * - `ValueTemplateDirective`&mdash;The value template directive.\n * - `HeaderTemplateDirective`&mdash;The header template directive.\n * - `FooterTemplateDirective`&mdash;The footer template directive.\n * - `NoDataTemplateDirective`&mdash;The noData template directive.\n * - `TagTemplateDirective`&mdash;The tag template directive.\n * - `SummaryTagTemplateDirective`&mdash;The summary tag template directive.\n */\n\nclass SharedDirectivesModule {}\n\nSharedDirectivesModule.ɵfac = function SharedDirectivesModule_Factory(t) {\n  return new (t || SharedDirectivesModule)();\n};\n\nSharedDirectivesModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SharedDirectivesModule\n});\nSharedDirectivesModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SharedDirectivesModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [SHARED_DIRECTIVES],\n      exports: [SHARED_DIRECTIVES]\n    }]\n  }], null, null);\n})();\n\nconst INTERNAL_DIRECTIVES = [ListComponent, ListItemDirective, SelectableDirective, SearchBarComponent, TemplateContextDirective, TagListComponent, CheckDirective, CheckAllDirective];\n/**\n * @hidden\n */\n\nclass SharedModule {}\n\nSharedModule.ɵfac = function SharedModule_Factory(t) {\n  return new (t || SharedModule)();\n};\n\nSharedModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SharedModule\n});\nSharedModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule, ReactiveFormsModule, PopupModule, ResizeSensorModule, SharedDirectivesModule, EventsModule], CommonModule, FormsModule, ReactiveFormsModule, PopupModule, ResizeSensorModule, SharedDirectivesModule, EventsModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SharedModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [INTERNAL_DIRECTIVES],\n      exports: [INTERNAL_DIRECTIVES, CommonModule, FormsModule, ReactiveFormsModule, PopupModule, ResizeSensorModule, SharedDirectivesModule, EventsModule],\n      imports: [CommonModule, FormsModule, ReactiveFormsModule, PopupModule, ResizeSensorModule, SharedDirectivesModule, EventsModule]\n    }]\n  }], null, null);\n})();\n/**\n * A directive which configures the MultiSelectTree to show one single summary tag for all selected data items.\n * When a number is provided, the summary tag is displayed after the given amount of data items are selected\n * ([more information and examples]({% slug api_dropdowns_multiselecttreesummarytagdirective %})).\n *\n * @example\n * ```ts-no-run\n * <kendo-multiselecttree kendoMultiSelectTreeSummaryTag [data]=\"data\"></kendo-multiselecttree>\n * ```\n *\n * @example\n * ```ts-no-run\n * <kendo-multiselecttree [kendoMultiSelectTreeSummaryTag]=\"2\" [data]=\"data\"></kendo-multiselecttree>\n * ```\n */\n\n\nclass MultiSelectTreeSummaryTagDirective {\n  constructor(multiSelectTreeComponent) {\n    this.multiSelectTreeComponent = multiSelectTreeComponent;\n    /**\n     * A numeric value that indicates the number of selected data items after which the summary tag will appear.\n     */\n\n    this.showAfter = 0;\n    this.createTagMapper();\n  }\n\n  ngOnChanges(changes) {\n    if (isPresent(changes.showAfter)) {\n      this.createTagMapper();\n      this.multiSelectTreeComponent.handleTagMapperChange(this.showAfter);\n    }\n  }\n\n  createTagMapper() {\n    const showAfter = parseNumber(this.showAfter);\n\n    this.multiSelectTreeComponent.tagMapper = tags => {\n      if (tags.length > showAfter) {\n        // tags provided in an array are rendered as a single group tag\n        return [...tags.slice(0, showAfter), tags.slice(showAfter)];\n      } else {\n        return tags;\n      }\n    };\n  }\n\n}\n\nMultiSelectTreeSummaryTagDirective.ɵfac = function MultiSelectTreeSummaryTagDirective_Factory(t) {\n  return new (t || MultiSelectTreeSummaryTagDirective)(i0.ɵɵdirectiveInject(MultiSelectTreeComponent));\n};\n\nMultiSelectTreeSummaryTagDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MultiSelectTreeSummaryTagDirective,\n  selectors: [[\"\", \"kendoMultiSelectTreeSummaryTag\", \"\"]],\n  inputs: {\n    showAfter: [\"kendoMultiSelectTreeSummaryTag\", \"showAfter\"]\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MultiSelectTreeSummaryTagDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoMultiSelectTreeSummaryTag]'\n    }]\n  }], function () {\n    return [{\n      type: MultiSelectTreeComponent\n    }];\n  }, {\n    showAfter: [{\n      type: Input,\n      args: ['kendoMultiSelectTreeSummaryTag']\n    }]\n  });\n})();\n\nconst DROPDOWNTREE_DIRECTIVES = [DropDownTreeComponent, MultiSelectTreeComponent, DropDownTreeFlatBindingDirective, DropDownTreeHierarchyBindingDirective, MultiSelectTreeFlatBindingDirective, MultiSelectTreeHierarchyBindingDirective, DropDownTreesExpandDirective, NodeTemplateDirective, MultiSelectTreeSummaryTagDirective];\n/**\n * @hidden\n */\n\nclass DropDownTreesModule {}\n\nDropDownTreesModule.ɵfac = function DropDownTreesModule_Factory(t) {\n  return new (t || DropDownTreesModule)();\n};\n\nDropDownTreesModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: DropDownTreesModule\n});\nDropDownTreesModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[SharedModule, TreeViewModule], SharedDirectivesModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropDownTreesModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [DROPDOWNTREE_DIRECTIVES],\n      exports: [DROPDOWNTREE_DIRECTIVES, SharedDirectivesModule],\n      imports: [SharedModule, TreeViewModule]\n    }]\n  }], null, null);\n})();\n/**\n * A directive which configures the MultiSelect to show one single summary tag for all selected data items.\n * When a number is provided, the summary tag is displayed after the given amount of data items are selected\n * ([more information and examples]({% slug summarytagmode_multiselect %})).\n *\n * @example\n * ```ts-no-run\n * <kendo-multiselect kendoMultiSelectSummaryTag [data]=\"data\"></kendo-multiselect>\n * ```\n *\n * @example\n * ```ts-no-run\n * <kendo-multiselect [kendoMultiSelectSummaryTag]=\"2\" [data]=\"data\"></kendo-multiselect>\n * ```\n */\n\n\nclass SummaryTagDirective {\n  constructor(multiSelectComponent) {\n    this.multiSelectComponent = multiSelectComponent;\n    /**\n     * A numeric value that indicates the number of selected data items after which the summary tag will appear.\n     */\n\n    this.showAfter = 0;\n    this.createTagMapper();\n  }\n\n  ngOnChanges(changes) {\n    if (isPresent(changes.showAfter)) {\n      this.createTagMapper();\n      this.multiSelectComponent.onTagMapperChange();\n    }\n  }\n\n  createTagMapper() {\n    const showAfter = parseNumber(this.showAfter);\n\n    this.multiSelectComponent.tagMapper = tags => {\n      if (tags.length > showAfter) {\n        let result;\n        result = tags.slice(0, showAfter);\n        result.push(tags.slice(showAfter, tags.length));\n        return result;\n      } else {\n        return tags;\n      }\n    };\n  }\n\n}\n\nSummaryTagDirective.ɵfac = function SummaryTagDirective_Factory(t) {\n  return new (t || SummaryTagDirective)(i0.ɵɵdirectiveInject(MultiSelectComponent));\n};\n\nSummaryTagDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: SummaryTagDirective,\n  selectors: [[\"\", \"kendoMultiSelectSummaryTag\", \"\"]],\n  inputs: {\n    showAfter: [\"kendoMultiSelectSummaryTag\", \"showAfter\"]\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SummaryTagDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoMultiSelectSummaryTag]'\n    }]\n  }], function () {\n    return [{\n      type: MultiSelectComponent\n    }];\n  }, {\n    showAfter: [{\n      type: Input,\n      args: ['kendoMultiSelectSummaryTag']\n    }]\n  });\n})();\n\nconst AUTOCOMPLETE_DIRECTIVES = [AutoCompleteComponent];\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `AutoCompleteComponent`&mdash;The AutoComplete component class.\n * - `ItemTemplateDirective`&mdash;The item template directive.\n * - `HeaderTemplateDirective`&mdash;The header template directive.\n * - `FooterTemplateDirective`&mdash;The footer template directive.\n */\n\nclass AutoCompleteModule {}\n\nAutoCompleteModule.ɵfac = function AutoCompleteModule_Factory(t) {\n  return new (t || AutoCompleteModule)();\n};\n\nAutoCompleteModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AutoCompleteModule\n});\nAutoCompleteModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[SharedModule], SharedDirectivesModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoCompleteModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [AUTOCOMPLETE_DIRECTIVES],\n      exports: [AUTOCOMPLETE_DIRECTIVES, SharedDirectivesModule],\n      imports: [SharedModule]\n    }]\n  }], null, null);\n})();\n\nconst COMBOBOX_DIRECTIVES = [ComboBoxComponent, MultiColumnComboBoxComponent, ComboBoxColumnComponent, ColumnHeaderTemplateDirective, ColumnCellTemplateDirective];\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `ComboBoxComponent`&mdash;The ComboBox component class.\n * - `MultiColumnComboBoxComponent`&mdash;The MultiColumnComboBox component class.\n * - `ItemTemplateDirective`&mdash;The item template directive.\n * - `HeaderTemplateDirective`&mdash;The header template directive.\n * - `FooterTemplateDirective`&mdash;The footer template directive.\n * - `ColumnHeaderTemplateDirective`&mdash;The column header template directive.\n * - `ColumnCellTemplateDirective`&mdash;The column cell template directive.\n */\n\nclass ComboBoxModule {}\n\nComboBoxModule.ɵfac = function ComboBoxModule_Factory(t) {\n  return new (t || ComboBoxModule)();\n};\n\nComboBoxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ComboBoxModule\n});\nComboBoxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: TOUCH_ENABLED,\n    useValue: touchEnabled\n  }],\n  imports: [[SharedModule], SharedDirectivesModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ComboBoxModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [COMBOBOX_DIRECTIVES],\n      exports: [COMBOBOX_DIRECTIVES, SharedDirectivesModule],\n      imports: [SharedModule],\n      providers: [{\n        provide: TOUCH_ENABLED,\n        useValue: touchEnabled\n      }]\n    }]\n  }], null, null);\n})();\n\nconst DROPDOWNLIST_DIRECTIVES = [DropDownListComponent];\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `DropDownListComponent`&mdash;The DropDownList component class.\n * - `ItemTemplateDirective`&mdash;The item template directive.\n * - `ValueTemplateDirective`&mdash;The value template directive.\n * - `HeaderTemplateDirective`&mdash;The header template directive.\n * - `FooterTemplateDirective`&mdash;The footer template directive.\n */\n\nclass DropDownListModule {}\n\nDropDownListModule.ɵfac = function DropDownListModule_Factory(t) {\n  return new (t || DropDownListModule)();\n};\n\nDropDownListModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: DropDownListModule\n});\nDropDownListModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[SharedModule], SharedDirectivesModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropDownListModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [DROPDOWNLIST_DIRECTIVES],\n      exports: [DROPDOWNLIST_DIRECTIVES, SharedDirectivesModule],\n      imports: [SharedModule]\n    }]\n  }], null, null);\n})();\n\nconst MULTISELECT_DIRECTIVES = [MultiSelectComponent, SummaryTagDirective, CustomItemTemplateDirective];\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `MultiSelectComponent`&mdash;The MultiSelect component class.\n * - `SummaryTagDirective`&mdash;The MultiSelect summary tag directive.\n * - `ItemTemplateDirective`&mdash;The item template directive.\n * - `CustomItemTemplateDirective`&mdash;The custom item template directive.\n * - `TagTemplateDirective`&mdash;The tag template directive.\n * - `SummaryTagTemplateDirective`&mdash;The summary tag template directive.\n * - `HeaderTemplateDirective`&mdash;The header template directive.\n * - `FooterTemplateDirective`&mdash;The footer template directive.\n * - `NoDataTemplateDirective`&mdash;The no-data template directive.\n */\n\nclass MultiSelectModule {}\n\nMultiSelectModule.ɵfac = function MultiSelectModule_Factory(t) {\n  return new (t || MultiSelectModule)();\n};\n\nMultiSelectModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MultiSelectModule\n});\nMultiSelectModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: TOUCH_ENABLED,\n    useValue: touchEnabled\n  }],\n  imports: [[SharedModule], SharedDirectivesModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MultiSelectModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [MULTISELECT_DIRECTIVES],\n      exports: [MULTISELECT_DIRECTIVES, SharedDirectivesModule],\n      imports: [SharedModule],\n      providers: [{\n        provide: TOUCH_ENABLED,\n        useValue: touchEnabled\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Dropdowns components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Dropdowns module\n * import { DropDownsModule } from '@progress/kendo-angular-dropdowns';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare the app component\n *     imports:      [BrowserModule, DropDownsModule], // import the Dropdowns module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\n\nclass DropDownsModule {}\n\nDropDownsModule.ɵfac = function DropDownsModule_Factory(t) {\n  return new (t || DropDownsModule)();\n};\n\nDropDownsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: DropDownsModule\n});\nDropDownsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [AutoCompleteModule, ComboBoxModule, DropDownListModule, MultiSelectModule, DropDownTreesModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropDownsModule, [{\n    type: NgModule,\n    args: [{\n      exports: [AutoCompleteModule, ComboBoxModule, DropDownListModule, MultiSelectModule, DropDownTreesModule]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AutoCompleteComponent, AutoCompleteModule, CheckAllDirective, CheckDirective, ColumnCellTemplateDirective, ColumnHeaderTemplateDirective, ComboBoxColumnComponent, ComboBoxComponent, ComboBoxModule, CustomItemTemplateDirective, CustomMessagesComponent, DropDownListComponent, DropDownListModule, DropDownTreeComponent, DropDownTreeFlatBindingDirective, DropDownTreeHierarchyBindingDirective, DropDownTreesExpandDirective, DropDownTreesModule, DropDownsModule, FilterDirective, FilterInputDirective, FilterableComponent, FixedGroupTemplateDirective, FooterTemplateDirective, GroupTagTemplateDirective, GroupTemplateDirective, HeaderTemplateDirective, ItemTemplateDirective, ListComponent, ListItemDirective, LocalizedMessagesDirective, MultiColumnComboBoxComponent, MultiSelectComponent, MultiSelectModule, MultiSelectTreeComponent, MultiSelectTreeFlatBindingDirective, MultiSelectTreeHierarchyBindingDirective, MultiSelectTreeSummaryTagDirective, NoDataTemplateDirective, NodeTemplateDirective, PreventableEvent, RemoveTagEvent, SearchBarComponent, SelectableDirective, SharedDirectivesModule, SharedModule, SummaryTagDirective, TagListComponent, TagTemplateDirective, TemplateContextDirective, ValueTemplateDirective };","map":{"version":3,"sources":["C:/Repos/angular-kendo-grid/node_modules/@progress/kendo-angular-dropdowns/fesm2015/kendo-angular-dropdowns.js"],"names":["i0","EventEmitter","Component","Input","Output","ViewChild","HostBinding","Directive","Injectable","InjectionToken","HostListener","ViewChildren","forwardRef","isDevMode","ViewContainerRef","Optional","Inject","ContentChild","ContentChildren","ChangeDetectionStrategy","NgModule","i9","isDocumentAvailable","Keys","isChanged","hasObservers","KendoInput","anyChanged","guid","guid$1","ResizeSensorModule","EventsModule","i12","NgControl","NG_VALUE_ACCESSOR","FormsModule","ReactiveFormsModule","validatePackage","getter","getter$1","detectDesktopBrowser","detectMobileOS","pointers","touchEnabled","Subscription","merge","fromEvent","Subject","of","interval","i1","ComponentMessages","LocalizationService","L10N_PREFIX","i2","PopupModule","PopupComponent","map","switchMap","take","auditTime","tap","filter","partition","throttleTime","catchError","skipWhile","concatMap","takeUntil","i11","CommonModule","i1$1","DataBoundComponent","ExpandableComponent","FlatDataBindingDirective","HierarchyBindingDirective","ExpandDirective","TreeViewModule","packageMetadata","name","productName","productCodes","publishDate","version","licensingDocsUrl","isPresent","value","undefined","isNumber","isNaN","id","i","random","Math","toString","combineStr","begin","end","concat","substr","toLowerCase","indexOf","length","isWindowAvailable","window","isArray","Array","isObject","isEmptyString","resolveValuesInArray","values","data","valueField","find","item","validateComplexValues","resolveAllValues","customValues","resolvedValues","isObjectArray","every","selectedIndices","extractedValues","reduce","arr","index","push","dataItem","field","valueFrom","resolveValue","args","defaultItem","element","focused","selected","sameCharsOnly","word","character","idx","charAt","shuffleData","splitIndex","result","slice","matchText","text","ignoreCase","temp","String","elementFromPoint","x","y","document","hasProps","obj","props","prop","hasOwnProperty","isUntouched","className","includes","noop","_","matches","selector","matcher","msMatchesSelector","webkitMatchesSelector","call","closest","parent","nodeType","parentElement","parentNode","parseNumber","num","defaultValue","normalizedValue","Number","inDropDown","host","target","popupRef","nativeElement","contains","popupElement","getHierarchicalItemLevel","split","fetchDescendentNodes","lookup","filterExpression","children","descendants","descendent","forEach","child","level","fields","valueLevel","normalizedLevel","min","getSizeClass","component","size","SIZE_CLASSES","getRoundedClass","rounded","ROUNDED_CLASSES","getFillModeClass","fillMode","FILLMODE_CLASSES","filterAndMap","predicate","mapper","acc","curr","isSafari","userAgent","safari","browser","isJapanese","input","japaneseRegex","test","SearchBarComponent","constructor","localization","renderer","injector","valueChange","onBlur","onFocus","onClick","onNavigate","searchBarClass","_userInput","_previousValue","_placeholder","_isSuggestable","_isFilterable","subs","direction","rtl","isSuggestable","setAriaAutocomplete","isFilterable","userInput","formControl","ngControl","get","control","placeholder","setInputSize","ariaExpanded","role","popupOpen","ngOnInit","add","changes","subscribe","ngOnChanges","previousUserInput","suggestedText","previousValue","currentValue","caretStart","selectionStart","caretAtEnd","writeInputValue","setInputSelection","navigator","ngOnDestroy","unsubscribe","setProperty","start","activeElement","setSelectionRange","e","setAttribute","removeAttribute","handleInput","event","isBrowserSafari","emit","handleFocus","handleBlur","handleKeydown","keyCode","keys","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","Enter","Escape","Delete","Backspace","Home","End","PageDown","PageUp","focus","blur","lengthOf","placeholderLength","textLength","max","ɵfac","Renderer2","Injector","ɵcmp","EventsOutsideAngularDirective","type","template","listId","tagListId","activeDescendant","disabled","readonly","tabIndex","isLoading","static","ItemTemplateDirective","templateRef","TemplateRef","ɵdir","HeaderTemplateDirective","FooterTemplateDirective","GroupTemplateDirective","FixedGroupTemplateDirective","DataService","grouped","groupIndices","_data","isGrouped","getGroupIndices","_flatData","flatten","itemsCount","items","header","startFrom","findIndex","offsetIndex","itemIndex","closestGroup","itemAt","flatIndex","match","groupAt","groupItemsIndices","mappedItem","groupField","itemGroup","fieldName","group","offset","groupIndex","flat","ɵprov","DisabledItemsService","dataService","itemDisabled","isIndexDisabled","isItemDisabled","SelectionService","disabledItemsService","onSelect","onChange","total","indicesToBeRemoved","indicesToBeAdded","getTotal","isSelected","current","isFocused","select","indices","newSelection","preventClosingPopup","added","emitMultipleAddedRemoved","removed","isMultipleSelection","addMultiple","deselect","position","splice","lastClickedIndex","unselectMultiple","change","resetSelection","focusedIndex","selectFromTo","from","to","addedIndices","unselectFromTo","indicesToBeUnselected","unselectNotNeededIndices","startOfSelection","endOfSelection","totalItems","NavigationAction","MIN_INDEX","NavigationEvent","originalEvent","NavigationService","selectionService","open","close","enter","tab","esc","up","right","down","left","delete","backspace","home","pagedown","pageup","selectnext","selectprevious","selectall","selectalltobeginning","selectalltoend","process","altKey","shiftKey","ctrlKey","metaKey","action","Undefined","Open","Close","SelectPrevious","SelectNext","KeyA","SelectAll","SelectAllToBeginning","SelectAllToEnd","Esc","Tab","next","step","Up","Left","Down","Right","isDisabled","eventData","nextIndex","clampIndex","firstFocusableIndex","inversedStep","startIndex","NoDataTemplateDirective","PreventableEvent","prevented","preventDefault","isDefaultPrevented","FilterableComponent","DEFAULTS","pageSize","itemHeight","normalizeVirtualizationSettings","settings","defaultOverrides","defaults","Object","assign","TOUCH_ENABLED","ListItemDirective","ElementRef","TemplateContextDirective","viewContainerRef","templateContext","context","insertedViewRef","remove","createEmbeddedView","SelectableDirective","checkboxes","enabled","multipleSelection","focusedClassName","selectedClassName","stopPropagation","checkOnClick","height","ListComponent","wrapper","cdr","zone","show","pageChange","listResize","lastLoaded","lastScrollTop","scrollToFocused","_size","selectSubscription","pipe","onStable","scrollToItem","bind","prepareClasses","removeClass","addClass","virtual","round","scrollHeight","overflowY","overflow","hasVirtualScrollbar","checkboxClasses","isFirstChange","setOverflow","ngAfterViewInit","setComponentClasses","runOutsideAngular","scrollSubscription","content","prefetchData","findCurrentGroup","scrollTop","ngAfterViewChecked","positionItems","scrollTarget","onCheckedChange","isChecked","listContentClass","listClass","listItemClass","listVirtualClass","listGroupStickyHeaderClass","listGroupStickyHeaderTextClass","listGroupItemClass","listGroupItemTextClass","normalizedIndex","skip","firstVisibleItem","rect","getBoundingClientRect","prototype","querySelectorAll","el","setStyle","top","currentGroup","getAttribute","parseInt","detectChanges","visibleItems","trunc","clientHeight","offsetY","nextPage","leftOver","prevPage","changePage","run","getText","textField","getValue","isAltRow","groupHeaderOffset","firstGroupHeaderInTargetedPage","scrollToIndex","toArray","scroll","scrollWithOnePage","contentOffsetHeight","contentScrollTop","itemOffsetTop","itemOffsetHeight","bottomDistance","offsetTop","offsetHeight","hasScrollbar","list","hasVirtualScroll","isItemSelected","virtualOffsetHeight","virtualContainer","ChangeDetectorRef","NgZone","NgIf","NgStyle","NgForOf","NgClass","ResizeSensorComponent","groupTemplate","fixedGroupTemplate","optionPrefix","ariaLive","isMultiselect","Messages","noDataText","clearTitle","checkAllText","selectButtonText","LocalizedMessagesDirective","service","provide","useExisting","providers","NO_VALUE","DEFAULT_SIZE$5","DEFAULT_ROUNDED$5","DEFAULT_FILL_MODE$5","AUTOCOMPLETE_VALUE_ACCESSOR","multi","AutoCompleteComponent","popupService","navigationService","_zone","hostElement","highlightFirst","focusableId","listHeight","clearButton","tabindex","filterable","filterChange","opened","closed","widgetClasses","listBoxId","onChangeCallback","onTouchedCallback","popupMouseDownHandler","_popupSettings","animate","_open","_value","valueChangeSubject","_isFocused","_rounded","_fillMode","subscribeEvents","subscribeTouchEvents","width","wrapperOffsetWidth","offsetWidth","popupSettings","minWidth","maxWidth","popupHeight","listContainerClasses","containerClasses","popupClass","suggestion","hasMatch","startsWith","shouldSuggest","suggest","backspacePressed","appendTo","container","clearButtonVisiblity","toggle","Promise","resolve","then","shouldOpen","_toggle","isOpen","togglePopup","sameState","triggerPopupEvents","newValue","verifySettings","markForCheck","fn","Error","JSON","stringify","_virtualSettings","newSize","newRounded","newFillMode","loading","dir","localizationChangeSubscription","destroyPopup","unsubscribeEvents","requestInitialData","reset","messageFor","key","clearValue","stopImmediatePropagation","writeValue","registerOnChange","registerOnTouched","setDisabledState","focusItemAt","isInRange","searchbar","onResize","popupWrapper","style","emitChange","search","findIndexPredicate","navigate","handleNavigate","handleEnter","handleEscape","searchBarChange","currentTextLength","scrollLeft","exactMatch","insensitiveMatch","valueHasChanged","runInZone","valueChangeSubscription","hasChange","changeSubscription","handleItemChange","focusSubscription","handleItemFocus","navigationSubscription","closeSubscription","openSubscription","enterSubscription","escSubscription","optionsList","code","touchstartDisposeHandler","listen","_event","Boolean","createPopup","horizontalAlign","anchorPosition","horizontal","vertical","popupPosition","anchor","popupTemplate","positionMode","popupAlign","anchorAlign","addEventListener","listBox","querySelector","ariaLabel","popupClose","popupAnchorViewportLeave","removeEventListener","eventArgs","maxIndex","itemText","PopupService","useValue","exportAs","decorators","headerTemplate","footerTemplate","noDataTemplate","read","MultiselectMessages","MultiSelectTreeMessages","ComboBoxMessages","MultiColumnComboBoxMessages","DropDownListMessages","DropDownTreeMessages","COMBOBOX_VALUE_ACCESSOR","ComboBoxComponent","DEFAULT_SIZE$4","DEFAULT_ROUNDED$4","DEFAULT_FILL_MODE$4","allowCustom","valueNormalizer","selectionChange","defaultVirtualItemHeight","defaultVirtualPageSize","_filtering","_text","filterText","customValueSubject","valueSubject","clearValueSubject","setState","queryAndDataPresent","valuePrimitive","isPrimitive","_valuePrimitive","popupWidth","attachStreams","createValueStream","attachSelectClickHandler","valueStream","candidate","newText","clearFilter","customValueStreams","allowCustomValueStream","custom","disableCustomValueStream","clearValueStream","valueSubscription","merged","selectionChanged","emitValueChange","state","selectionArgs","handleNavigationOpen","updateState","selectClickDisposeHandler","ngAfterContentChecked","clearState","isEmpty","textEmpty","valueEmpty","_previousDataItem","buttonClasses","iconClass","selectButtonClasses","primitive","object","valueOrText","textAndValue","noItemHeight","resolved","findDataItem","confirm","clear","comparer","getSuggestion","hasSelected","hasFocused","previousText","focusedItemText","textHasChanged","useSuggestion","unresolvedSelection","currentText","lowerCaseMatch","restoreItemFocus","isCustom","selectClick","preventEventDefault","hasFocus","focusedDataItem","isInDropDown","selectElement","ValueTemplateDirective","FilterInputDirective","nextTick","setTimeout","DROPDOWNLIST_VALUE_ACCESSOR","DropDownListComponent","DEFAULT_SIZE$3","DEFAULT_ROUNDED$3","DEFAULT_FILL_MODE$3","delay","hostClasses","haspopup","last","filterFocused","filterBlurred","hostElementFocused","hostElementBlurred","subscribeFocusEvents","onMouseDown","wrapperWidth","widgetTabIndex","providedTabIndex","defaultTabIndex","ariaControls","ariaActivedescendant","blurComponent","blurFilterInput","focusComponent","isDisabledClass","isDisabledAttribute","hostTabIndex","readonlyClass","readonlyAttr","isBusy","isAriaExpanded","hostAriaControls","hostAriaInvalid","_a","invalid","hostAriaActivedescendant","keydown","firstIndex","isHomeEnd","isFilterFocused","focusedItemNotSelected","leftRightKeys","keypress","onKeyPress","click","assignAriaDescribedBy","onFilterFocus","unSubscribeFocusEvents","minIndex","filterInputClasses","optionLabelSizeClass","isDisabledDefaultItem","getDefaultItemText","onSelectionChange","itemFromEvent","shouldUsePrevious","shouldUseNewValue","componentBlur","useCapture","currentOrDefault","selectedIndex","defaultItemIndex","selectionPresent","tagName","which","fromCharCode","charCode","clearTimeout","typingTimeout","selectNext","isInLoop","dataLength","loopMatch","nextMatch","ofSameType","handleFilter","trimmed","replace","valueLabelId","trim","DefaultValueAccessor","NgControlStatus","NgModel","itemTemplate","valueTemplate","CustomItemTemplateDirective","TagTemplateDirective","GroupTagTemplateDirective","RemoveTagEvent","normalizeCheckboxesSettings","defaultSettings","TagListComponent","disabledIndices","Set","removeTag","hostId","tagProp","tag","propField","getPropField","isTagDisabled","positionIndex","isGroupTag","_tag","has","deleteTag","itemId","tagPrefix","tagAriaHidden","fieldsCount","valueDepth","depth","tags","MULTISELECT_VALUE_ACCESSOR","MultiSelectComponent","DEFAULT_SIZE$2","DEFAULT_ROUNDED$2","DEFAULT_FILL_MODE$2","differs","focusedTagIndex","autoClose","tagMapper","matchingValue","matchingItem","initialized","_checkboxes","selectedDataItems","observableSubscriptions","onSearchBarFocus","onSearchBarBlur","closePopup","differ","create","valueChangeDetected","disabledClass","handleKeyboardEvent","handleSelectAll","hostMousedown","inputElement","button","customItemSizeClass","focusedListIndex","prefix","array","newItem","isCustomItem","addCustomValue","selection","resolveDataItemFromTags","disabledItemsMapper","openPopup","searchTextAndFocus","navigateInput","selectValue","handleBackspace","handleRemoveTag","removeGroupTag","removeSingleTag","clearAll","_item","ngDoCheck","valueChanges","diff","createCustomValueStream","onTagMapperChange","isClosed","isTagFocused","handleClose","handleUp","handleHome","handleEnd","handleDelete","handleRightKey","handleLeftKey","handleDownKey","handleSelectUpDown","handleSelectAllToBeginning","handleSelectAllToEnd","s","customValueSubscription","dataItems","dataItemValues","isDataItemDisabled","customItem","sortSelectionAscending","sort","a","b","selectedItemsCount","dataItemsCount","dataItemsWithoutHeadersCount","focusedItem","largestIndex","lastItemIndex","indexToSelect","selectRangeFromTo","startsFrom","f","KeyValueDiffers","customItemTemplate","tagTemplate","groupTagTemplate","ColumnCellTemplateDirective","ColumnHeaderTemplateDirective","ComboBoxColumnComponent","hidden","matchesMedia","cellTemplate","title","headerStyle","class","headerClass","media","SCROLLBAR_WIDTH","scrollbarWidth","div","createElement","cssText","innerHTML","body","appendChild","scrollWidth","removeChild","allColumnsWidthsSet","columns","column","getRowWidthFromColumnsMeta","bordersWidth","initialRowWidht","totalWidth","MultiColumnComboBoxComponent","changeDetector","removeWindowResizeListener","updateHeaderPadding","tableSizeClass","updateColumnsMediaState","addWindowResizeListener","textFrom","headerPaddingPosition","removeStyle","some","matchMedia","NodeTemplateDirective","DEFAULT_POPUP_SETTINGS$1","hasChildren$1","fetchChildren$1","itemDisabled$1","isNodeVisible$1","DEFAULT_SIZE$1","DEFAULT_ROUNDED$1","DEFAULT_FILL_MODE$1","DropDownTreeComponent","ariaHasPopup","nodeExpand","nodeCollapse","hasChildren","fetchChildren","isNodeVisible","loadOnDemand","selectedKeys","filterStateChange","allNodesHidden","_tabindex","_popupId","subscriptions","hostAriaAutocomplete","isReadonly","handleClick","treeview","_treeview","_nodes","_dataItem","isExpanded","callback","isNodeExpanded","expand","collapse","nodes","isVisible","togglePrevented","relatedTarget","itemLookup","popupContainerClasses","getField","shouldUpdateValue","handleFilterInputChange","node","selectBy","isActive","filterInput","handleDocumentBlur","sub","TreeViewComponent","SelectDirective","changeDetection","OnPush","nodeTemplate","nodeIndex$1","buildTreeIndex","parentIndex","part","join","buildTreeItem","currentLevelIndex","MultiSelectTreeLookupService","Map","registerChildren","registerItem","currentLookup","set","mapChildren","c","BaseCheckDirective","addItem","isItemChecked","getKey","checkedItems","checkedKeys","removeItem","updateItems","isHeterogeneous","CheckAllDirective","checkedItemsChange","handleChange","currentCheckedState","checked","currentIndeterminateState","isIndeterminate","checkNode","_node","someChecked","allChecked","pendingCheck","lastAction","childrenChecked","CheckDirective","treeView","checkedChange","handleCheckedChange","getCheckedState","checkable","toggleCheckOnClick","unsubscribeClick","checkChildren","isItemIndeterminate","checkParents","clickSubscription","nodeClick","shouldCheck","currentParent","allChildrenSelected","DEFAULT_POPUP_SETTINGS","DEFAULT_CHECKABLE_SETTINGS","DEFAULT_SIZE","DEFAULT_ROUNDED","DEFAULT_FILL_MODE","MultiSelectTreeComponent","checkAll","showAfter","_checkableSettings","ariaDescribedBy","ariaActiveDescendant","focusedTagId","isWrapperActive","checkableSettings","isContentInit","registerLookupItems","_dataItems","isTreeViewActive","isFilterActive","isCheckAllActive","checkAllInput","ngAfterContentInit","lastNodeOnFocus","handleNodeClick","removeTreeViewFromTabOrder","handleCheckedItemsChange","updateValue","itemKey","removeParents","keysToRemove","valueDepthIndices","handleTagMapperChange","setTags","_depth","checkAllCheckboxClasses","toggleCheckAll","isEveryDataItemObject","dataItemsLength","valueDepthLength","handleTabKey","handleUpKey","isFirstNodeActive","source","parentItem","levelIndex","treeItems","registerChildLookupItems","DropDownTreeFlatBindingDirective","dropDownTree","term","idField","INDEX_SEPARATOR","nodeIndex","isArrayWithAtLeastOneItem","v","mapToWrappers","currentLevelNodes","childrenField","visible","DropDownTreeHierarchyBindingDirective","MultiSelectTreeFlatBindingDirective","multiSelectTree","MultiSelectTreeHierarchyBindingDirective","DropDownTreesExpandDirective","CustomMessagesComponent","override","DEFAULT_FILTER_SETTINGS","caseSensitive","operator","FilterDirective","filterChangeSubscription","handleFilterChange","query","matchesAnyField","normalizedQuery","normalizeValue","filterSettings","checkItem","getFilterFields","providedFields","rawSettings","SHARED_DIRECTIVES","SharedDirectivesModule","ɵmod","ɵinj","declarations","exports","INTERNAL_DIRECTIVES","SharedModule","imports","MultiSelectTreeSummaryTagDirective","multiSelectTreeComponent","createTagMapper","DROPDOWNTREE_DIRECTIVES","DropDownTreesModule","SummaryTagDirective","multiSelectComponent","AUTOCOMPLETE_DIRECTIVES","AutoCompleteModule","COMBOBOX_DIRECTIVES","ComboBoxModule","DROPDOWNLIST_DIRECTIVES","DropDownListModule","MULTISELECT_DIRECTIVES","MultiSelectModule","DropDownsModule"],"mappings":"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","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright © 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ViewChild, HostBinding, Directive, Injectable, InjectionToken, HostListener, ViewChildren, forwardRef, isDevMode, ViewContainerRef, Optional, Inject, ContentChild, ContentChildren, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i9 from '@progress/kendo-angular-common';\nimport { isDocumentAvailable, Keys, isChanged, hasObservers, KendoInput, anyChanged, guid as guid$1, ResizeSensorModule, EventsModule } from '@progress/kendo-angular-common';\nimport * as i12 from '@angular/forms';\nimport { NgControl, NG_VALUE_ACCESSOR, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { getter as getter$1, detectDesktopBrowser, detectMobileOS, pointers, touchEnabled } from '@progress/kendo-common';\nimport { Subscription, merge, fromEvent, Subject, of, interval } from 'rxjs';\nimport * as i1 from '@progress/kendo-angular-l10n';\nimport { ComponentMessages, LocalizationService, L10N_PREFIX } from '@progress/kendo-angular-l10n';\nimport * as i2 from '@progress/kendo-angular-popup';\nimport { PopupModule } from '@progress/kendo-angular-popup';\nexport { PopupComponent } from '@progress/kendo-angular-popup';\nimport { map, switchMap, take, auditTime, tap, filter, partition, throttleTime, catchError, skipWhile, concatMap, takeUntil } from 'rxjs/operators';\nimport * as i11 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$1 from '@progress/kendo-angular-treeview';\nimport { DataBoundComponent, ExpandableComponent, FlatDataBindingDirective, HierarchyBindingDirective, ExpandDirective, TreeViewModule } from '@progress/kendo-angular-treeview';\n\n/**\n * @hidden\n */\nconst packageMetadata = {\n    name: '@progress/kendo-angular-dropdowns',\n    productName: 'Kendo UI for Angular',\n    productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n    publishDate: 1668698206,\n    version: '',\n    licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/?utm_medium=product&utm_source=kendoangular&utm_campaign=kendo-ui-angular-purchase-license-keys-warning'\n};\n\n/* eslint-disable no-bitwise */\n/**\n * @hidden\n */\nconst isPresent = (value) => value !== null && value !== undefined;\n/**\n * @hidden\n */\nconst isNumber = (value) => !isNaN(value);\n/**\n * @hidden\n */\nconst guid = () => {\n    let id = \"\";\n    let i;\n    let random;\n    for (i = 0; i < 32; i++) {\n        random = Math.random() * 16 | 0;\n        if (i === 8 || i === 12 || i === 16 || i === 20) {\n            id += \"-\";\n        }\n        id += (i === 12 ? 4 : (i === 16 ? (random & 3 | 8) : random)).toString(16);\n    }\n    return id;\n};\n/**\n * @hidden\n */\nconst combineStr = (begin, end) => {\n    return begin.concat(end.substr(end.toLowerCase().indexOf(begin.toLowerCase()) + begin.length));\n};\n/**\n * @hidden\n */\nconst isWindowAvailable = () => typeof window !== 'undefined';\n/**\n * @hidden\n */\nconst isArray = (value) => Array.isArray(value);\n/**\n * @hidden\n */\nconst isObject = (value) => isPresent(value) && typeof value === 'object';\n/**\n * @hidden\n */\nconst isEmptyString = (value) => typeof value === 'string' && value.length === 0;\n/**\n * @hidden\n */\nconst resolveValuesInArray = (values, data = [], valueField) => values\n    .map(value => {\n    return data.find(item => getter(item, valueField) === value);\n})\n    .filter(value => value !== undefined);\n/**\n * @hidden\n */\nconst validateComplexValues = (values, valueField) => isArray(values) && values.filter(item => {\n    return isObject(item) && isPresent(getter(item, valueField));\n});\n/**\n * @hidden\n */\nconst resolveAllValues = (value, data, valueField) => {\n    const customValues = validateComplexValues(value, valueField) || [];\n    const resolvedValues = resolveValuesInArray(value, data, valueField) || [];\n    return resolvedValues.concat(customValues);\n};\n/**\n * @hidden\n */\nconst isObjectArray = (values) => {\n    return isArray(values) && values.every(item => isObject(item));\n};\n/**\n * @hidden\n */\nconst selectedIndices = (values, data, valueField) => {\n    const extractedValues = data.map(item => {\n        return isPresent(item) && isPresent(getter(item, valueField)) ? getter(item, valueField) : item;\n    });\n    return values.reduce((arr, item) => {\n        const value = isPresent(item) && isPresent(getter(item, valueField)) ? getter(item, valueField) : item;\n        const index = extractedValues.indexOf(value);\n        if (index !== -1) {\n            arr.push(index);\n        }\n        return arr;\n    }, []);\n};\n/**\n * @hidden\n */\nconst getter = (dataItem, field) => {\n    if (!isPresent(dataItem)) {\n        return null;\n    }\n    if (!isPresent(field) || !isObject(dataItem)) {\n        return dataItem;\n    }\n    // creates a field accessor supporting nested fields processing\n    const valueFrom = getter$1(field);\n    return valueFrom(dataItem);\n};\n/**\n * @hidden\n */\nconst resolveValue = (args) => {\n    let dataItem;\n    if (isPresent(args.value)) {\n        const data = [args.defaultItem, ...args.data];\n        dataItem = data.find(element => getter(element, args.valueField) === args.value);\n        return {\n            dataItem: dataItem,\n            focused: args.data.indexOf(dataItem),\n            selected: args.data.indexOf(dataItem)\n        };\n    }\n    else if (args.index) {\n        dataItem = args.data[args.index];\n        return {\n            dataItem: args.data[args.index],\n            focused: args.index,\n            selected: args.index\n        };\n    }\n    return {\n        dataItem: args.defaultItem,\n        focused: -1,\n        selected: -1\n    };\n};\n/**\n * @hidden\n */\nconst sameCharsOnly = (word, character) => {\n    for (let idx = 0; idx < word.length; idx++) {\n        if (word.charAt(idx) !== character) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @hidden\n */\nconst shuffleData = (data, splitIndex, defaultItem) => {\n    let result = data;\n    if (defaultItem) {\n        result = [defaultItem].concat(result);\n    }\n    return result.slice(splitIndex).concat(result.slice(0, splitIndex));\n};\n/**\n * @hidden\n */\nconst matchText = (text, word, ignoreCase) => {\n    if (!isPresent(text)) {\n        return false;\n    }\n    let temp = String(text);\n    if (ignoreCase) {\n        temp = temp.toLowerCase();\n    }\n    return temp.indexOf(word) === 0;\n};\n/**\n * @hidden\n */\nconst elementFromPoint = (x, y) => {\n    if (!isDocumentAvailable()) {\n        return;\n    }\n    return document.elementFromPoint(x, y);\n};\n/**\n * @hidden\n *\n * Checks whether the passed object has all of the listed properties.\n */\nconst hasProps = (obj, props) => {\n    if (!isPresent(obj)) {\n        return false;\n    }\n    return props.every(prop => obj.hasOwnProperty(prop));\n};\n/**\n * @hidden\n *\n * Checks whether an element is untouched by looking for the ng-untouched css class\n */\nconst isUntouched = (element) => element.className.includes('ng-untouched');\n/**\n * @hidden\n */\nconst noop = (_) => { };\n/**\n * IE element `matches` polyfill.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n */\nconst matches = (element, selector) => {\n    const matcher = element.matches || element.msMatchesSelector || element.webkitMatchesSelector;\n    if (!matcher) {\n        return false;\n    }\n    return matcher.call(element, selector);\n};\n/**\n * @hidden\n *\n * IE element `closest` polyfill.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n */\nconst closest = (element, selector) => {\n    let parent = element;\n    while (parent !== null && parent.nodeType === 1) {\n        if (matches(parent, selector)) {\n            return parent;\n        }\n        parent = parent.parentElement || parent.parentNode;\n    }\n    return null;\n};\n/**\n * @hidden\n *\n * Parses a provided value to its type 'number' representation.\n * If the parsed value (via Number(value)) is NaN, the provided default value is returned.\n * Uses 0 as default value if a second param is not provided.\n */\nconst parseNumber = (num, defaultValue = 0) => {\n    const normalizedValue = Number(num);\n    return isNaN(normalizedValue) ? defaultValue : normalizedValue;\n};\n/**\n * @hidden\n *\n * Checks whether the passed target element is inside the provided host or popupRef.\n */\nconst inDropDown = (host, target, popupRef) => {\n    return host.nativeElement.contains(target) || (popupRef && popupRef.popupElement.contains(target));\n};\n/**\n * @hidden\n *\n * Calculates the hierarchical level of an item, based on the provided index.\n * The result level is zero-based (starts from 0).\n */\nconst getHierarchicalItemLevel = (index) => {\n    return (index || '').split('_').length - 1;\n};\n/**\n * @hidden\n *\n * Retrieves all descendant nodes' lookups which are currently registered in the provided lookup item as a flat array.\n */\nconst fetchDescendentNodes = (lookup, filterExpression) => {\n    if (!isPresent(lookup) || lookup.children.length === 0) {\n        return [];\n    }\n    let descendants = lookup.children;\n    if (isPresent(filterExpression)) {\n        descendants = descendants.filter(descendent => filterExpression(descendent.item));\n    }\n    descendants.forEach(child => descendants = descendants.concat(fetchDescendentNodes(child, filterExpression)));\n    return descendants;\n};\n/**\n * @hidden\n *\n * Retrieves the correct value based on the item's level and the provided value field/s.\n * Used in the MultiSelectTree component.\n */\nconst valueFrom = ({ dataItem, index, level }, valueField) => {\n    const fields = Array.isArray(valueField) ? valueField : [valueField];\n    // either use the explicitly provided value level, or infer it from the item index\n    const valueLevel = isPresent(level) ? level : getHierarchicalItemLevel(index);\n    // fall-back to the last available one, if the current node is in a deeper level\n    const normalizedLevel = Math.min(valueLevel, fields.length - 1);\n    const field = fields[normalizedLevel];\n    return getter$1(field)(dataItem);\n};\n/**\n * @hidden\n * Returns the size class based on the component and size input.\n */\nconst getSizeClass = (component, size) => {\n    const SIZE_CLASSES = {\n        'small': `k-${component}-sm`,\n        'medium': `k-${component}-md`,\n        'large': `k-${component}-lg`\n    };\n    return SIZE_CLASSES[size];\n};\n/**\n * @hidden\n * Returns the rounded class based on the rounded input.\n */\nconst getRoundedClass = (rounded) => {\n    const ROUNDED_CLASSES = {\n        'small': 'k-rounded-sm',\n        'medium': 'k-rounded-md',\n        'large': 'k-rounded-lg',\n        'full': 'k-rounded-full'\n    };\n    return ROUNDED_CLASSES[rounded];\n};\n/**\n * @hidden\n * Return the fillMode class based on the component and fillMode input.\n */\nconst getFillModeClass = (component, fillMode) => {\n    const FILLMODE_CLASSES = {\n        'solid': `k-${component}-solid`,\n        'flat': `k-${component}-flat`,\n        'outline': `k-${component}-outline`\n    };\n    return FILLMODE_CLASSES[fillMode];\n};\n/**\n * @hidden\n */\nconst filterAndMap = (arr, predicate, mapper) => arr.reduce((acc, curr) => predicate(curr) ? [...acc, mapper(curr)] : acc, []);\n/**\n * @hidden\n *\n * Returns true if the used browser is Safari.\n */\nconst isSafari = (userAgent) => {\n    return detectDesktopBrowser(userAgent).safari ||\n        (detectMobileOS(userAgent) && detectMobileOS(userAgent).browser === 'mobilesafari');\n};\n/**\n * @hidden\n *\n * Checks if input is Japanese IME\n */\nconst isJapanese = (input) => {\n    const japaneseRegex = /[\\u3000-\\u303F]|[\\u3040-\\u309F]|[\\u30A0-\\u30FF]|[\\uFF00-\\uFFEF]|[\\u4E00-\\u9FAF]|[\\u2605-\\u2606]|[\\u2190-\\u2195]|\\u203B/g;\n    return japaneseRegex.test(input);\n};\n\n/**\n * @hidden\n */\nclass SearchBarComponent {\n    constructor(localization, renderer, injector) {\n        this.localization = localization;\n        this.injector = injector;\n        this.valueChange = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onClick = new EventEmitter();\n        this.onNavigate = new EventEmitter();\n        this.searchBarClass = true;\n        this._userInput = \"\";\n        this._previousValue = \"\";\n        this._placeholder = \"\";\n        this._isSuggestable = false;\n        this._isFilterable = false;\n        this.subs = new Subscription();\n        this.direction = localization.rtl ? 'rtl' : 'ltr';\n        this.renderer = renderer;\n    }\n    set isSuggestable(isSuggestable) {\n        this._isSuggestable = isSuggestable;\n        this.setAriaAutocomplete();\n    }\n    ;\n    get isSuggestable() {\n        return this._isSuggestable;\n    }\n    ;\n    set isFilterable(isFilterable) {\n        this._isFilterable = isFilterable;\n        this.setAriaAutocomplete();\n    }\n    ;\n    get isFilterable() {\n        return this._isFilterable;\n    }\n    ;\n    get userInput() {\n        return this._userInput;\n    }\n    set userInput(userInput) {\n        this._userInput = userInput || \"\";\n    }\n    /**\n     * @hidden\n     */\n    get formControl() {\n        const ngControl = this.injector.get(NgControl, null);\n        return (ngControl === null || ngControl === void 0 ? void 0 : ngControl.control) || null;\n    }\n    get value() {\n        return this.input.nativeElement.value;\n    }\n    set placeholder(text) {\n        this._placeholder = text || '';\n        this.setInputSize();\n    }\n    get placeholder() {\n        return this._placeholder;\n    }\n    get ariaExpanded() {\n        return this.role === 'combobox' ? this.popupOpen : null;\n    }\n    ngOnInit() {\n        this.subs.add(this.localization\n            .changes.subscribe(({ rtl }) => this.direction = rtl ? 'rtl' : 'ltr'));\n    }\n    ngOnChanges(changes) {\n        let previousUserInput;\n        if (this.input && (changes.userInput || changes.suggestedText)) {\n            if (changes.userInput && changes.userInput.previousValue) {\n                if (this._previousValue === changes.userInput.previousValue) {\n                    previousUserInput = this._previousValue;\n                }\n                else {\n                    previousUserInput = changes.userInput.currentValue || \"\";\n                }\n            }\n            else {\n                previousUserInput = this._previousValue;\n            }\n            const caretStart = this.input.nativeElement.selectionStart;\n            const caretAtEnd = previousUserInput.length === caretStart;\n            this.writeInputValue(this.suggestedText ? combineStr(this.userInput, this.suggestedText) : this.userInput);\n            if (this.suggestedText) {\n                this.setInputSelection(this.userInput.length, this.suggestedText.length);\n            }\n            else if (isSafari(navigator.userAgent) && !caretAtEnd) {\n                this.setInputSelection(caretStart, this.userInput.length);\n            }\n            else if (caretAtEnd) {\n                this.setInputSelection(this.userInput.length, this.userInput.length);\n            }\n            else {\n                this.setInputSelection(caretStart, caretStart);\n            }\n            this._previousValue = this.userInput;\n        }\n    }\n    ngOnDestroy() {\n        this.subs.unsubscribe();\n    }\n    writeInputValue(text) {\n        if (isDocumentAvailable()) {\n            this.renderer.setProperty(this.input.nativeElement, 'value', text);\n        }\n    }\n    setInputSelection(start, end) {\n        if (isDocumentAvailable() && this.input.nativeElement === document.activeElement) {\n            try {\n                this.input.nativeElement.setSelectionRange(start, end);\n            }\n            catch (e) {\n                //Make sure that the element is in the DOM before you invoke its methods\n            }\n        }\n    }\n    setAriaAutocomplete() {\n        if (this.isFilterable) {\n            this.renderer.setAttribute(this.input.nativeElement, 'aria-autocomplete', 'list');\n        }\n        if (this.isSuggestable) {\n            this.renderer.setAttribute(this.input.nativeElement, 'aria-autocomplete', 'inline');\n        }\n        if (this.isFilterable && this.isSuggestable) {\n            this.renderer.setAttribute(this.input.nativeElement, 'aria-autocomplete', 'both');\n        }\n        if (!this.isFilterable && !this.isSuggestable) {\n            this.renderer.removeAttribute(this.input.nativeElement, 'aria-autocomplete');\n        }\n    }\n    handleInput(event) {\n        const target = event.target;\n        const isBrowserSafari = isSafari(navigator.userAgent);\n        const value = isBrowserSafari && isJapanese(target.value) ? event.data : target.value;\n        if (value !== this.userInput) {\n            this._previousValue = value;\n            this.valueChange.emit(value);\n        }\n    }\n    handleFocus(event) {\n        this.onFocus.emit(event);\n    }\n    handleBlur(event) {\n        this.onBlur.emit(event);\n    }\n    handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const keys = [Keys.ArrowUp, Keys.ArrowDown, Keys.ArrowLeft, Keys.ArrowRight, Keys.Enter,\n            Keys.Escape, Keys.Delete, Keys.Backspace, Keys.Home, Keys.End, Keys.PageDown, Keys.PageUp];\n        if (keys.indexOf(keyCode) > -1) {\n            this.onNavigate.emit(event);\n        }\n    }\n    focus() {\n        if (isDocumentAvailable()) {\n            this.input.nativeElement.focus();\n        }\n    }\n    blur() {\n        if (isDocumentAvailable()) {\n            this.input.nativeElement.blur();\n        }\n    }\n    setInputSize() {\n        const lengthOf = x => x ? x.length : 0;\n        const input = this.input.nativeElement;\n        const placeholderLength = lengthOf(this.placeholder);\n        const textLength = lengthOf(this.value);\n        const size = Math.max(placeholderLength, textLength, 1);\n        this.renderer.setAttribute(input, 'size', size.toString());\n    }\n}\nSearchBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SearchBarComponent, deps: [{ token: i1.LocalizationService }, { token: i0.Renderer2 }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\nSearchBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: SearchBarComponent, selector: \"kendo-searchbar\", inputs: { id: \"id\", listId: \"listId\", tagListId: \"tagListId\", activeDescendant: \"activeDescendant\", disabled: \"disabled\", readonly: \"readonly\", tabIndex: \"tabIndex\", popupOpen: \"popupOpen\", role: \"role\", isLoading: \"isLoading\", isSuggestable: \"isSuggestable\", isFilterable: \"isFilterable\", userInput: \"userInput\", suggestedText: \"suggestedText\", placeholder: \"placeholder\" }, outputs: { valueChange: \"valueChange\", onBlur: \"onBlur\", onFocus: \"onFocus\", onClick: \"onClick\", onNavigate: \"onNavigate\" }, host: { properties: { \"class.k-searchbar\": \"this.searchBarClass\" } }, viewQueries: [{ propertyName: \"input\", first: true, predicate: [\"input\"], descendants: true, static: true }], usesOnChanges: true, ngImport: i0, template: `\n        <input #input\n            autocomplete=\"off\"\n            [id]=\"id\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [placeholder]=\"placeholder\"\n            [class]=\"'k-input-inner'\"\n            (input)=\"handleInput($event)\"\n            (keydown)=\"handleKeydown($event)\"\n            [kendoEventsOutsideAngular]=\"{\n                focus: handleFocus,\n                blur: handleBlur\n            }\"\n            [scope]=\"this\"\n            [attr.tabIndex]=\"tabIndex\"\n            [attr.dir]=\"direction\"\n            [attr.role]=\"role\"\n            aria-haspopup=\"listbox\"\n            [attr.aria-expanded]=\"ariaExpanded\"\n            [attr.aria-controls]=\"listId\"\n            [attr.aria-describedby]=\"tagListId\"\n            [attr.aria-activedescendant]=\"activeDescendant\"\n            [attr.aria-busy]=\"isLoading\"\n            [attr.aria-invalid]=\"formControl?.invalid\"\n        />\n   `, isInline: true, directives: [{ type: i9.EventsOutsideAngularDirective, selector: \"[kendoEventsOutsideAngular]\", inputs: [\"kendoEventsOutsideAngular\", \"scope\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SearchBarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-searchbar',\n                    template: `\n        <input #input\n            autocomplete=\"off\"\n            [id]=\"id\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [placeholder]=\"placeholder\"\n            [class]=\"'k-input-inner'\"\n            (input)=\"handleInput($event)\"\n            (keydown)=\"handleKeydown($event)\"\n            [kendoEventsOutsideAngular]=\"{\n                focus: handleFocus,\n                blur: handleBlur\n            }\"\n            [scope]=\"this\"\n            [attr.tabIndex]=\"tabIndex\"\n            [attr.dir]=\"direction\"\n            [attr.role]=\"role\"\n            aria-haspopup=\"listbox\"\n            [attr.aria-expanded]=\"ariaExpanded\"\n            [attr.aria-controls]=\"listId\"\n            [attr.aria-describedby]=\"tagListId\"\n            [attr.aria-activedescendant]=\"activeDescendant\"\n            [attr.aria-busy]=\"isLoading\"\n            [attr.aria-invalid]=\"formControl?.invalid\"\n        />\n   `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: i0.Renderer2 }, { type: i0.Injector }]; }, propDecorators: { id: [{\n                type: Input\n            }], listId: [{\n                type: Input\n            }], tagListId: [{\n                type: Input\n            }], activeDescendant: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], popupOpen: [{\n                type: Input\n            }], role: [{\n                type: Input\n            }], isLoading: [{\n                type: Input\n            }], isSuggestable: [{\n                type: Input\n            }], isFilterable: [{\n                type: Input\n            }], userInput: [{\n                type: Input\n            }], suggestedText: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onClick: [{\n                type: Output\n            }], onNavigate: [{\n                type: Output\n            }], input: [{\n                type: ViewChild,\n                args: ['input', { static: true }]\n            }], searchBarClass: [{\n                type: HostBinding,\n                args: ['class.k-searchbar']\n            }], placeholder: [{\n                type: Input\n            }] } });\n\n/**\n * Renders the list item content. To define the item template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>ItemTemplate` directive inside the component tag. The template context is\n * set to the current component. To get a reference to the current data item, use the `let-dataItem` directive.\n *\n * - [Using `ItemTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-item-template)\n * - [Using `ItemTemplate` with the ComboBox]({% slug templates_combobox %}#toc-item-template)\n * - [Using `ItemTemplate` with the DropDownList]({% slug templates_ddl %}#toc-item-template)\n * - [Using `ItemTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-item-template)\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *    <ng-template kendoComboBoxItemTemplate let-dataItem>\n *      <span>{{dataItem}} option</span>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nclass ItemTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nItemTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ItemTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nItemTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ItemTemplateDirective, selector: \"[kendoDropDownListItemTemplate],[kendoComboBoxItemTemplate],[kendoAutoCompleteItemTemplate],[kendoMultiSelectItemTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ItemTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDropDownListItemTemplate],[kendoComboBoxItemTemplate],[kendoAutoCompleteItemTemplate],[kendoMultiSelectItemTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * Renders the header content of the list. To define the header template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>HeaderTemplate` directive inside the component tag.\n *\n * - [Using `HeaderTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-header-template)\n * - [Using `HeaderTemplate` with the ComboBox]({% slug templates_combobox %}#toc-header-template)\n * - [Using `HeaderTemplate` with the MultiColumnComboBox]({% slug templates_multicolumncombobox %}#toc-header-template)\n * - [Using `HeaderTemplate` with the DropDownList]({% slug templates_ddl %}#toc-header-template)\n * - [Using `HeaderTemplate` with the DropDownTree]({% slug templates_ddt %}#toc-header-template)\n * - [Using `HeaderTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-header-template)\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *    <ng-template kendoComboBoxHeaderTemplate>\n *      <h4>Header template</h4>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nclass HeaderTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nHeaderTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HeaderTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nHeaderTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: HeaderTemplateDirective, selector: \"[kendoDropDownListHeaderTemplate],[kendoComboBoxHeaderTemplate],[kendoDropDownTreeHeaderTemplate],[kendoMultiColumnComboBoxHeaderTemplate],[kendoAutoCompleteHeaderTemplate],[kendoMultiSelectHeaderTemplate],[kendoMultiSelectTreeHeaderTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HeaderTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDropDownListHeaderTemplate],[kendoComboBoxHeaderTemplate],[kendoDropDownTreeHeaderTemplate],[kendoMultiColumnComboBoxHeaderTemplate],[kendoAutoCompleteHeaderTemplate],[kendoMultiSelectHeaderTemplate],[kendoMultiSelectTreeHeaderTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * Renders the footer content of the list. To define the footer template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>FooterTemplate` directive inside the component tag.\n *\n * - [Using `FooterTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-footer-template)\n * - [Using `FooterTemplate` with the ComboBox]({% slug templates_combobox %}#toc-footer-template)\n * - [Using `FooterTemplate` with the MultiColumnComboBox]({% slug templates_multicolumncombobox %}#toc-footer-template)\n * - [Using `FooterTemplate` with the DropDownList]({% slug templates_ddl %}#toc-footer-template)\n * - [Using `FooterTemplate` with the DropDownTree]({% slug templates_ddt %}#toc-footer-template)\n * - [Using `FooterTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-footer-template)\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *    <ng-template kendoComboBoxFooterTemplate>\n *      <h4>Footer template</h4>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nclass FooterTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nFooterTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FooterTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nFooterTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FooterTemplateDirective, selector: \"[kendoDropDownListFooterTemplate],[kendoComboBoxFooterTemplate],[kendoDropDownTreeFooterTemplate],[kendoMultiColumnComboBoxFooterTemplate],[kendoAutoCompleteFooterTemplate],[kendoMultiSelectFooterTemplate],[kendoMultiSelectTreeFooterTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FooterTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDropDownListFooterTemplate],[kendoComboBoxFooterTemplate],[kendoDropDownTreeFooterTemplate],[kendoMultiColumnComboBoxFooterTemplate],[kendoAutoCompleteFooterTemplate],[kendoMultiSelectFooterTemplate],[kendoMultiSelectTreeFooterTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * Renders the group header content. To define the group template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>GroupTemplate` directive inside the component tag. The template context is\n * set to the current component. To get a reference to the current data item, use the `let-groupName` directive.\n *\n * - [Using `GroupTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-group-template)\n * - [Using `GroupTemplate` with the ComboBox]({% slug templates_combobox %}#toc-group-template)\n * - [Using `GroupTemplate` with the MultiColumnComboBox]({% slug templates_multicolumncombobox %}#toc-group-template)\n * - [Using `GroupTemplate` with the DropDownList]({% slug templates_ddl %}#toc-group-template)\n * - [Using `GroupTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-group-template)\n *\n * @example\n * ```ts\n * import { groupBy } from '@progress/kendo-data-query';\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"groupedData\" textField=\"name\" valueField=\"name\">\n *    <ng-template kendoComboBoxGroupTemplate let-groupName>\n *      <span>Food type: {{groupName}} option</span>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public data = [\n *       { name: \"Pork\", category: \"Food\", subcategory: \"Meat\" },\n *       { name: \"Pepper\", category: \"Food\", subcategory: \"Vegetables\" },\n *       { name: \"Beef\", category: \"Food\", subcategory: \"Meat\" }\n *   ];\n *   public groupedData = groupBy(this.data, [{field: \"subcategory\"}]);\n * }\n * ```\n */\nclass GroupTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nGroupTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nGroupTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: GroupTemplateDirective, selector: \"[kendoDropDownListGroupTemplate],[kendoComboBoxGroupTemplate],[kendoMultiColumnComboBoxGroupTemplate],[kendoAutoCompleteGroupTemplate],[kendoMultiSelectGroupTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDropDownListGroupTemplate],[kendoComboBoxGroupTemplate],[kendoMultiColumnComboBoxGroupTemplate],[kendoAutoCompleteGroupTemplate],[kendoMultiSelectGroupTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * Renders the fixed group header content. To define the fixed group template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>FixedGroupTemplate` directive inside the component tag. The template context is\n * set to the current component. To get a reference to the current data item, use the `let-groupName` directive.\n *\n * - [Using `FixedGroupTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-fixed-group-template)\n * - [Using `FixedGroupTemplate` with the ComboBox]({% slug templates_combobox %}#toc-fixed-group-template)\n * - [Using `FixedGroupTemplate` with the MultiColumnComboBox]({% slug templates_multicolumncombobox %}#toc-fixed-group-template)\n * - [Using `FixedGroupTemplate` with the DropDownList]({% slug templates_ddl %}#toc-fixed-group-template)\n * - [Using `FixedGroupTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-fixed-group-template)\n *\n * @example\n * ```ts\n * import { groupBy } from '@progress/kendo-data-query';\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"groupedData\" textField=\"name\" valueField=\"name\">\n *    <ng-template kendoComboBoxFixedGroupTemplate let-groupName>\n *      <span>Food type: {{groupName}} option</span>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public data = [\n *       { name: \"Pork\", category: \"Food\", subcategory: \"Meat\" },\n *       { name: \"Pepper\", category: \"Food\", subcategory: \"Vegetables\" },\n *       { name: \"Beef\", category: \"Food\", subcategory: \"Meat\" }\n *   ];\n *   public groupedData = groupBy(this.data, [{field: \"subcategory\"}]);\n * }\n * ```\n */\nclass FixedGroupTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nFixedGroupTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FixedGroupTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nFixedGroupTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FixedGroupTemplateDirective, selector: \"[kendoDropDownListFixedGroupTemplate],[kendoComboBoxFixedGroupTemplate],[kendoMultiColumnComboBoxFixedGroupTemplate],[kendoAutoCompleteFixedGroupTemplate],[kendoMultiSelectFixedGroupTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FixedGroupTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDropDownListFixedGroupTemplate],[kendoComboBoxFixedGroupTemplate],[kendoMultiColumnComboBoxFixedGroupTemplate],[kendoAutoCompleteFixedGroupTemplate],[kendoMultiSelectFixedGroupTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @hidden\n */\nclass DataService {\n    constructor() {\n        this.grouped = false;\n        this.groupIndices = [];\n    }\n    set data(data) {\n        this._data = data;\n        this.grouped = this.isGrouped(data);\n        if (this.grouped) {\n            this.groupIndices = this.getGroupIndices(data);\n            this._flatData = this.flatten(data);\n        }\n    }\n    get data() {\n        if (this.grouped) {\n            return this._flatData;\n        }\n        return this._data;\n    }\n    /**\n     * @hidden\n     * Used to get the actual items count, i.e. excluding the header items in case of grouping.\n     */\n    get itemsCount() {\n        if (!isPresent(this.data) || this.data.length === 0) {\n            return 0;\n        }\n        const items = this.grouped ? this._flatData.filter(item => !item.header) : this.data;\n        return items.length;\n    }\n    /**\n     * @hidden\n     * Used to determine if the component received grouped data.\n     */\n    isGrouped(data) {\n        // GroupResult { aggregates: AggregateResult, field: string, items: object[], value: any }\n        // https://www.telerik.com/kendo-angular-ui/components/dataquery/api/GroupResult/\n        return (isPresent(data) && data.length !== 0) && isPresent(data[0]) && hasProps(data[0], ['aggregates', 'field', 'items', 'value']);\n    }\n    /**\n     * @hidden\n     * Used to calculate the last item index of each group.\n     */\n    getGroupIndices(data) {\n        let groupIndices = [];\n        for (let i = 0; i <= data.length - 1; i++) {\n            groupIndices[i] = (groupIndices[i - 1] || 0) + data[i].items.length;\n        }\n        return groupIndices;\n    }\n    /**\n     * @hidden\n     * Used to get a flat array containing all items matching certain criteria.\n     */\n    filter(predicate) {\n        let result = [];\n        if (this.isGrouped(this.data)) {\n            for (let i = 0; i <= this.groupIndices.length - 1; i++) {\n                const matches = this.data[i].items.filter(predicate);\n                if (matches) {\n                    result = result.concat(matches);\n                }\n            }\n        }\n        else {\n            result = this.data.filter(predicate);\n        }\n        return result;\n    }\n    /**\n     * @hidden\n     * Used to get the index of a given data item.\n     */\n    indexOf(item, startFrom = 0) {\n        let predicate = (element) => {\n            return element === item;\n        };\n        if (this.grouped) {\n            predicate = (element) => {\n                return element.value === item;\n            };\n        }\n        return this.findIndex(predicate, startFrom);\n    }\n    /**\n     * @hidden\n     * Used to get the index of a data item based on an expression.\n     */\n    findIndex(predicate, startFrom = 0) {\n        let index = -1;\n        if (this.grouped) {\n            const data = this._flatData.filter(item => !item.header && item.offsetIndex >= startFrom);\n            index = data.findIndex(predicate);\n            index = data[index] ? data[index].offsetIndex : -1;\n        }\n        else {\n            const data = this.data.slice(startFrom);\n            const itemIndex = data.findIndex(predicate);\n            index = itemIndex !== -1 ? itemIndex + startFrom : -1;\n        }\n        return index;\n    }\n    /**\n     * @hidden\n     * Used to get the closest group header prior to an item index.\n     */\n    closestGroup(index) {\n        for (let i = index; i >= 0; i--) {\n            if (this._flatData[i].header) {\n                return this._flatData[i];\n            }\n        }\n    }\n    /**\n     * @hidden\n     * Used to get the first item matching the criteria.\n     */\n    find(predicate) {\n        const index = this.findIndex(predicate);\n        return this.itemAt(index);\n    }\n    /**\n     * @hidden\n     * Used to get the true index in a flattened data array.\n     */\n    flatIndex(index) {\n        if (this.itemsCount === 0) {\n            return -1;\n        }\n        if (this.grouped) {\n            const match = this._flatData.find((item) => !item.header && item.offsetIndex === index);\n            if (match) {\n                return match.index;\n            }\n        }\n        else {\n            return index;\n        }\n        return -1;\n    }\n    /**\n     * @hidden\n     * Used to get the item at the provided index.\n     */\n    itemAt(index) {\n        let dataItem;\n        if (this.itemsCount === 0) {\n            return dataItem;\n        }\n        if (this.grouped) {\n            const match = this._flatData.find((item) => !item.header && item.offsetIndex === index);\n            if (match) {\n                dataItem = match.value;\n            }\n        }\n        else {\n            dataItem = this.data[index];\n        }\n        return dataItem;\n    }\n    /**\n     * @hidden\n     * Used to get the group at the provided index.\n     */\n    groupAt(index) {\n        if (this.itemsCount === 0 || !this.isGrouped) {\n            return;\n        }\n        return this._flatData.find((item) => item.header && item.index === index);\n    }\n    /**\n     * @hidden\n     * Used to get all group items indices.\n     */\n    groupItemsIndices() {\n        if (this.isGrouped) {\n            return filterAndMap(this.data, item => item.header, mappedItem => mappedItem.index);\n        }\n        return [];\n    }\n    /**\n     * @hidden\n     * Used to get the field by which the data is grouped.\n     */\n    groupField() {\n        if (this.itemsCount === 0 || !this.isGrouped) {\n            return null;\n        }\n        return this._data[0].field;\n    }\n    /**\n     * @hidden\n     * Used to get the group to which a dataItem belongs.\n     */\n    itemGroup(item) {\n        if (!item || this.itemsCount === 0 || !this.isGrouped) {\n            return;\n        }\n        const fieldName = this.groupField();\n        if (fieldName) {\n            return getter(item, fieldName);\n        }\n    }\n    flatten(data, group = undefined, offset = 0, groupIndex = 0) {\n        let flat = [];\n        if (isPresent(group)) {\n            flat.push({\n                header: true,\n                index: groupIndex + offset,\n                offsetIndex: groupIndex,\n                value: group\n            });\n        }\n        for (let i = 0; i < data.length; i++) {\n            let result = [];\n            if (data[i].items) {\n                result = this.flatten(data[i].items, data[i].value, offset, i);\n                offset = offset + data[i].items.length;\n            }\n            else {\n                result.push({\n                    header: false,\n                    index: groupIndex + offset + i + 1,\n                    offsetIndex: offset + i,\n                    value: data[i]\n                });\n            }\n            flat = flat.concat(result);\n        }\n        return flat;\n    }\n}\nDataService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DataService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDataService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DataService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DataService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @hidden\n */\nclass DisabledItemsService {\n    constructor(dataService) {\n        this.dataService = dataService;\n        this.itemDisabled = null;\n    }\n    isIndexDisabled(index) {\n        if (this.itemDisabled) {\n            const item = this.dataService.itemAt(index);\n            if (isPresent(item)) {\n                return this.itemDisabled({ dataItem: item, index });\n            }\n            else if (isPresent(this.defaultItem)) {\n                return this.itemDisabled({ dataItem: this.defaultItem, index: -1 });\n            }\n        }\n    }\n    isItemDisabled(item) {\n        if (this.itemDisabled) {\n            const index = this.dataService.indexOf(item);\n            if (index !== -1) {\n                return this.itemDisabled({ dataItem: item, index });\n            }\n            else if (isPresent(this.defaultItem)) {\n                return this.itemDisabled({ dataItem: this.defaultItem, index: -1 });\n            }\n        }\n    }\n}\nDisabledItemsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DisabledItemsService, deps: [{ token: DataService }], target: i0.ɵɵFactoryTarget.Injectable });\nDisabledItemsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DisabledItemsService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DisabledItemsService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: DataService }]; } });\n\n/**\n * @hidden\n */\nclass SelectionService {\n    constructor(disabledItemsService) {\n        this.disabledItemsService = disabledItemsService;\n        this.onSelect = new EventEmitter();\n        this.onChange = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.total = 0;\n        this.selectedIndices = [];\n        this.indicesToBeRemoved = [];\n        this.indicesToBeAdded = [];\n    }\n    getTotal() {\n        return this.total;\n    }\n    isSelected(index) {\n        return isPresent(this.selectedIndices.find(current => current === index));\n    }\n    isFocused(index) {\n        return index === this.focused;\n    }\n    focus(index) {\n        if (this.isFocused(index)) {\n            return;\n        }\n        this.focused = index;\n        this.onFocus.emit(index);\n    }\n    select(index) {\n        if (this.isSelected(index)) {\n            return;\n        }\n        this.selectedIndices = [index];\n        this.focused = index;\n        this.onSelect.emit({\n            indices: [index],\n            newSelection: isPresent(index)\n        });\n    }\n    add(index, preventClosingPopup) {\n        if (this.isSelected(index)) {\n            return;\n        }\n        this.selectedIndices.push(index);\n        this.focused = index;\n        this.onChange.emit({\n            added: index,\n            indices: this.selectedIndices.slice(),\n            preventClosingPopup: preventClosingPopup\n        });\n    }\n    emitMultipleAddedRemoved() {\n        this.onChange.emit({\n            added: this.indicesToBeAdded,\n            removed: this.indicesToBeRemoved,\n            indices: this.selectedIndices.slice(),\n            preventClosingPopup: true,\n            isMultipleSelection: true\n        });\n        this.indicesToBeAdded = [];\n        this.indicesToBeRemoved = [];\n    }\n    addMultiple(indices) {\n        this.indicesToBeAdded = indices.slice();\n        this.selectedIndices.push(...indices);\n    }\n    deselect(index, preventClosingPopup) {\n        if (!this.isSelected(index)) {\n            return;\n        }\n        const position = this.selectedIndices.indexOf(index);\n        this.selectedIndices.splice(position, 1);\n        this.focused = index;\n        if (this.selected.length === 0) {\n            this.lastClickedIndex = null;\n        }\n        this.onChange.emit({\n            indices: this.selectedIndices.slice(),\n            removed: index,\n            preventClosingPopup: preventClosingPopup\n        });\n    }\n    unselectMultiple(indices) {\n        indices.forEach((index) => {\n            const position = this.selectedIndices.indexOf(index);\n            this.selectedIndices.splice(position, 1);\n        });\n        this.indicesToBeRemoved = indices.slice();\n    }\n    change(index) {\n        const newSelection = isPresent(index) && !this.isSelected(index);\n        this.selectedIndices = [index];\n        this.focused = index;\n        this.onChange.emit({\n            indices: [index],\n            newSelection: newSelection\n        });\n    }\n    resetSelection(index) {\n        this.selectedIndices = index instanceof Array ? index : [index];\n        this.focused = this.selectedIndices[this.selectedIndices.length - 1];\n    }\n    get selected() {\n        return this.selectedIndices.slice();\n    }\n    get focused() {\n        return this.focusedIndex;\n    }\n    set focused(index) {\n        if (this.focusedIndex !== index) {\n            this.focusedIndex = index;\n            this.onFocus.emit(index);\n        }\n    }\n    selectFromTo(from, to) {\n        let addedIndices = [];\n        for (let i = from; i <= to; i++) {\n            if (!this.isSelected(i) && !this.disabledItemsService.isIndexDisabled(i)) {\n                addedIndices.push(i);\n            }\n        }\n        this.addMultiple(addedIndices);\n    }\n    unselectFromTo(from, to) {\n        let indicesToBeUnselected = [];\n        for (let i = from; i >= to; i--) {\n            if (this.isSelected(i) && !this.disabledItemsService.isIndexDisabled(i)) {\n                indicesToBeUnselected.push(i);\n            }\n        }\n        this.unselectMultiple(indicesToBeUnselected);\n    }\n    unselectNotNeededIndices(startOfSelection, endOfSelection, totalItems) {\n        let indicesToBeUnselected = [];\n        for (let i = 0; i < startOfSelection; i++) {\n            if (this.isSelected(i)) {\n                indicesToBeUnselected.push(i);\n            }\n        }\n        for (let i = endOfSelection + 1; i < totalItems; i++) {\n            if (this.isSelected(i)) {\n                indicesToBeUnselected.push(i);\n            }\n        }\n        this.unselectMultiple(indicesToBeUnselected);\n    }\n}\nSelectionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SelectionService, deps: [{ token: DisabledItemsService }], target: i0.ɵɵFactoryTarget.Injectable });\nSelectionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SelectionService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SelectionService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: DisabledItemsService }]; } });\n\n/**\n * @hidden\n */\nvar NavigationAction;\n(function (NavigationAction) {\n    // eslint-disable-next-line id-denylist\n    NavigationAction[NavigationAction[\"Undefined\"] = 0] = \"Undefined\";\n    NavigationAction[NavigationAction[\"Open\"] = 1] = \"Open\";\n    NavigationAction[NavigationAction[\"Close\"] = 2] = \"Close\";\n    NavigationAction[NavigationAction[\"Enter\"] = 3] = \"Enter\";\n    NavigationAction[NavigationAction[\"Tab\"] = 4] = \"Tab\";\n    NavigationAction[NavigationAction[\"Esc\"] = 5] = \"Esc\";\n    NavigationAction[NavigationAction[\"Delete\"] = 6] = \"Delete\";\n    NavigationAction[NavigationAction[\"Backspace\"] = 7] = \"Backspace\";\n    NavigationAction[NavigationAction[\"Home\"] = 8] = \"Home\";\n    NavigationAction[NavigationAction[\"End\"] = 9] = \"End\";\n    NavigationAction[NavigationAction[\"Up\"] = 10] = \"Up\";\n    NavigationAction[NavigationAction[\"Down\"] = 11] = \"Down\";\n    NavigationAction[NavigationAction[\"Left\"] = 12] = \"Left\";\n    NavigationAction[NavigationAction[\"Right\"] = 13] = \"Right\";\n    NavigationAction[NavigationAction[\"PageDown\"] = 14] = \"PageDown\";\n    NavigationAction[NavigationAction[\"PageUp\"] = 15] = \"PageUp\";\n    NavigationAction[NavigationAction[\"SelectPrevious\"] = 16] = \"SelectPrevious\";\n    NavigationAction[NavigationAction[\"SelectNext\"] = 17] = \"SelectNext\";\n    NavigationAction[NavigationAction[\"SelectAll\"] = 18] = \"SelectAll\";\n    NavigationAction[NavigationAction[\"SelectAllToBeginning\"] = 19] = \"SelectAllToBeginning\";\n    NavigationAction[NavigationAction[\"SelectAllToEnd\"] = 20] = \"SelectAllToEnd\";\n})(NavigationAction || (NavigationAction = {}));\n\nconst MIN_INDEX = 0;\n/**\n * @hidden\n */\nclass NavigationEvent {\n    /**\n     * The index of the item to which the user navigated.\n     */\n    constructor(index, originalEvent) {\n        this.index = index;\n        this.originalEvent = originalEvent;\n    }\n}\n/**\n * @hidden\n */\nclass NavigationService {\n    constructor(disabledItemsService, selectionService) {\n        this.disabledItemsService = disabledItemsService;\n        this.selectionService = selectionService;\n        this.open = new EventEmitter();\n        this.close = new EventEmitter();\n        this.enter = new EventEmitter();\n        this.tab = new EventEmitter();\n        this.esc = new EventEmitter();\n        this.up = new EventEmitter();\n        this.right = new EventEmitter();\n        this.down = new EventEmitter();\n        this.left = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.backspace = new EventEmitter();\n        this.home = new EventEmitter();\n        this.end = new EventEmitter();\n        this.pagedown = new EventEmitter();\n        this.pageup = new EventEmitter();\n        this.selectnext = new EventEmitter();\n        this.selectprevious = new EventEmitter();\n        this.selectall = new EventEmitter();\n        this.selectalltobeginning = new EventEmitter();\n        this.selectalltoend = new EventEmitter();\n    }\n    process(args) {\n        const keyCode = args.originalEvent.keyCode;\n        const altKey = args.originalEvent.altKey;\n        const shiftKey = args.originalEvent.shiftKey;\n        const ctrlKey = args.originalEvent.ctrlKey || args.originalEvent.metaKey;\n        let index;\n        let action = NavigationAction.Undefined;\n        if (altKey && keyCode === Keys.ArrowDown) {\n            action = NavigationAction.Open;\n        }\n        else if (altKey && keyCode === Keys.ArrowUp) {\n            action = NavigationAction.Close;\n        }\n        else if (shiftKey && keyCode === Keys.ArrowUp) {\n            action = NavigationAction.SelectPrevious;\n        }\n        else if (shiftKey && keyCode === Keys.ArrowDown) {\n            action = NavigationAction.SelectNext;\n        }\n        else if (ctrlKey && keyCode === Keys.KeyA) {\n            action = NavigationAction.SelectAll;\n        }\n        else if (ctrlKey && shiftKey && keyCode === Keys.Home) {\n            action = NavigationAction.SelectAllToBeginning;\n        }\n        else if (ctrlKey && shiftKey && keyCode === Keys.End) {\n            action = NavigationAction.SelectAllToEnd;\n        }\n        else if (keyCode === Keys.Enter) {\n            action = NavigationAction.Enter;\n        }\n        else if (keyCode === Keys.Escape) {\n            action = NavigationAction.Esc;\n        }\n        else if (keyCode === Keys.Tab) {\n            action = NavigationAction.Tab;\n        }\n        else if (keyCode === Keys.ArrowUp) {\n            index = this.next({ current: args.current, start: args.min, end: args.max, step: -1 });\n            action = NavigationAction.Up;\n        }\n        else if (keyCode === Keys.ArrowLeft) {\n            index = this.next({ current: args.current, start: args.min, end: args.max, step: -1 });\n            action = NavigationAction.Left;\n        }\n        else if (keyCode === Keys.ArrowDown) {\n            index = this.next({ current: args.current, start: args.min, end: args.max, step: 1 });\n            action = NavigationAction.Down;\n        }\n        else if (keyCode === Keys.ArrowRight) {\n            index = this.next({ current: args.current, start: args.min, end: args.max, step: 1 });\n            action = NavigationAction.Right;\n        }\n        else if (keyCode === Keys.Home) {\n            index = this.isDisabled(MIN_INDEX) ? args.current : MIN_INDEX;\n            action = NavigationAction.Home;\n        }\n        else if (keyCode === Keys.End) {\n            index = this.isDisabled(args.max) ? args.current : args.max;\n            action = NavigationAction.End;\n        }\n        else if (keyCode === Keys.Delete) {\n            action = NavigationAction.Delete;\n        }\n        else if (keyCode === Keys.Backspace) {\n            action = NavigationAction.Backspace;\n        }\n        else if (keyCode === Keys.PageDown) {\n            action = NavigationAction.PageDown;\n        }\n        else if (keyCode === Keys.PageUp) {\n            action = NavigationAction.PageUp;\n        }\n        const eventData = new NavigationEvent(index, args.originalEvent);\n        if (action !== NavigationAction.Undefined) {\n            this[NavigationAction[action].toLowerCase()].emit(eventData);\n        }\n        return action;\n    }\n    next(args) {\n        const { current, start, end, step } = args;\n        const nextIndex = !isPresent(current) ? start : this.clampIndex(current + step, start, end);\n        const firstFocusableIndex = this.firstFocusableIndex(nextIndex, start, end, step);\n        if (isPresent(firstFocusableIndex)) {\n            return firstFocusableIndex;\n        }\n        if (this.selectionService.isSelected(current) && current >= start) {\n            return current;\n        }\n        const inversedStep = -1 * step;\n        return this.firstFocusableIndex(nextIndex, start, end, inversedStep);\n    }\n    clampIndex(index, min, max) {\n        if (!isPresent(index) || index < min) {\n            return min;\n        }\n        if (index > max) {\n            return max;\n        }\n        return index;\n    }\n    firstFocusableIndex(startIndex, min, max, step) {\n        while (min <= startIndex && startIndex <= max) {\n            if (!this.isDisabled(startIndex)) {\n                return startIndex;\n            }\n            startIndex += step;\n        }\n        return undefined;\n    }\n    isDisabled(index) {\n        if (this.disabledItemsService) {\n            return this.disabledItemsService.isIndexDisabled(index);\n        }\n    }\n}\nNavigationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NavigationService, deps: [{ token: DisabledItemsService }, { token: SelectionService }], target: i0.ɵɵFactoryTarget.Injectable });\nNavigationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NavigationService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NavigationService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: DisabledItemsService }, { type: SelectionService }]; } });\n\n/**\n * Renders content when no data is available. To define the no-data template, nest a `<ng-template>` tag\n * with the `kendo<ComponentName>NoDataTemplate` directive inside the component tag.\n *\n * - [Using `NoDataTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-no-data-template)\n * - [Using `NoDataTemplate` with the ComboBox]({% slug templates_combobox %}#toc-no-data-template)\n * - [Using `NoDataTemplate` with the MultiColumnComboBox]({% slug templates_multicolumncombobox %}#toc-no-data-template)\n * - [Using `NoDataTemplate` with the DropDownList]({% slug templates_ddl %}#toc-no-data-template)\n * - [Using `NoDataTemplate` with the DropDownTree]({% slug templates_ddt %}#toc-no-data-template)\n * - [Using `NoDataTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-no-data-template)\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *    <ng-template kendoComboBoxNoDataTemplate>\n *      <h4>No data!</h4>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [];\n * }\n * ```\n */\nclass NoDataTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNoDataTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NoDataTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nNoDataTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: NoDataTemplateDirective, selector: \"[kendoDropDownListNoDataTemplate],[kendoDropDownTreeNoDataTemplate],[kendoComboBoxNoDataTemplate],[kendoMultiColumnComboBoxNoDataTemplate],[kendoAutoCompleteNoDataTemplate],[kendoMultiSelectNoDataTemplate],[kendoMultiSelectTreeNoDataTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NoDataTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDropDownListNoDataTemplate],[kendoDropDownTreeNoDataTemplate],[kendoComboBoxNoDataTemplate],[kendoMultiColumnComboBoxNoDataTemplate],[kendoAutoCompleteNoDataTemplate],[kendoMultiSelectNoDataTemplate],[kendoMultiSelectTreeNoDataTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @hidden\n */\nclass PreventableEvent {\n    constructor() {\n        this.prevented = false;\n    }\n    /**\n     * Prevents the default action for a specified event.\n     * In this way, the source component suppresses the built-in behavior that follows the event.\n     */\n    preventDefault() {\n        this.prevented = true;\n    }\n    /**\n     * If the event is prevented by any of its subscribers, returns `true`.\n     *\n     * @returns `true` if the default action was prevented. Otherwise, returns `false`.\n     */\n    isDefaultPrevented() {\n        return this.prevented;\n    }\n}\n\n/**\n * Defines the mandatory properties of the `kendoDropDownFilter` directive\n * so that `kendoDropDownFilter` can be used with any of the DropDowns components\n * which implement the `FilterableDropDownComponentBase` class.\n *\n * @hidden\n */\nclass FilterableComponent {\n}\n\n/**\n * @hidden\n */\nconst DEFAULTS = {\n    pageSize: 50,\n    itemHeight: 28\n};\n/**\n * @hidden\n */\nconst normalizeVirtualizationSettings = (settings, defaultOverrides) => {\n    const defaults = Object.assign({}, DEFAULTS, defaultOverrides);\n    if (settings === true) {\n        return defaults;\n    }\n    if (!settings) {\n        return null;\n    }\n    return Object.assign({ pageSize: DEFAULTS.pageSize }, settings);\n};\n\n/**\n * @hidden\n */\nconst TOUCH_ENABLED = new InjectionToken('dropdowns-touch-enabled');\n\n/**\n * @hidden\n */\nclass ListItemDirective {\n    constructor(element) {\n        this.element = element;\n    }\n}\nListItemDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ListItemDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nListItemDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ListItemDirective, selector: \"\\\"li[role=option], li[role=group]\\\"\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ListItemDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '\"li[role=option], li[role=group]\"' // eslint-disable-line\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n\n/**\n * @hidden\n */\nclass TemplateContextDirective {\n    constructor(viewContainerRef) {\n        this.viewContainerRef = viewContainerRef;\n    }\n    set templateContext(context) {\n        if (this.insertedViewRef) {\n            this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.insertedViewRef));\n            this.insertedViewRef = undefined;\n        }\n        if (context.templateRef) {\n            this.insertedViewRef = this.viewContainerRef.createEmbeddedView(context.templateRef, context);\n        }\n    }\n}\nTemplateContextDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TemplateContextDirective, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nTemplateContextDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TemplateContextDirective, selector: \"[templateContext]\", inputs: { templateContext: \"templateContext\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TemplateContextDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[templateContext]' // eslint-disable-line\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; }, propDecorators: { templateContext: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass SelectableDirective {\n    constructor(selectionService) {\n        this.checkboxes = { enabled: false };\n        // @HostBinding('attr.offset-index')\n        // @Input() public offsetIndex: number;\n        this.multipleSelection = false;\n        this.selectionService = selectionService;\n    }\n    get focusedClassName() {\n        return this.selectionService.isFocused(this.index);\n    }\n    get selectedClassName() {\n        return !this.checkboxes.enabled && this.selectionService.isSelected(this.index);\n    }\n    onClick(event) {\n        event.stopPropagation();\n        this.selectionService.lastClickedIndex = this.index;\n        if (this.checkboxes.enabled && !this.checkboxes.checkOnClick) {\n            return;\n        }\n        if (this.multipleSelection) {\n            if (this.selectionService.isSelected(this.index)) {\n                this.selectionService.deselect(this.index);\n            }\n            else {\n                this.selectionService.add(this.index);\n            }\n        }\n        else {\n            this.selectionService.change(this.index);\n        }\n    }\n}\nSelectableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SelectableDirective, deps: [{ token: SelectionService }], target: i0.ɵɵFactoryTarget.Directive });\nSelectableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: SelectableDirective, selector: \"[kendoDropDownsSelectable]\", inputs: { index: \"index\", checkboxes: \"checkboxes\", height: \"height\", multipleSelection: \"multipleSelection\" }, host: { listeners: { \"click\": \"onClick($event)\" }, properties: { \"attr.index\": \"this.index\", \"style.height.px\": \"this.height\", \"style.minHeight.px\": \"this.height\", \"class.k-focus\": \"this.focusedClassName\", \"class.k-selected\": \"this.selectedClassName\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SelectableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDropDownsSelectable]'\n                }]\n        }], ctorParameters: function () { return [{ type: SelectionService }]; }, propDecorators: { index: [{\n                type: HostBinding,\n                args: ['attr.index']\n            }, {\n                type: Input\n            }], checkboxes: [{\n                type: Input\n            }], height: [{\n                type: HostBinding,\n                args: ['style.height.px']\n            }, {\n                type: HostBinding,\n                args: ['style.minHeight.px']\n            }, {\n                type: Input\n            }], multipleSelection: [{\n                type: Input\n            }], focusedClassName: [{\n                type: HostBinding,\n                args: ['class.k-focus']\n            }], selectedClassName: [{\n                type: HostBinding,\n                args: ['class.k-selected']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\n\n/**\n * @hidden\n */\nclass ListComponent {\n    /* tslint:disable:member-ordering */\n    constructor(dataService, wrapper, selectionService, disabledItemsService, cdr, zone, renderer) {\n        this.dataService = dataService;\n        this.wrapper = wrapper;\n        this.selectionService = selectionService;\n        this.disabledItemsService = disabledItemsService;\n        this.cdr = cdr;\n        this.zone = zone;\n        this.renderer = renderer;\n        this.selected = [];\n        this.focused = -1;\n        this.show = true;\n        this.multipleSelection = false;\n        this.type = 'list';\n        this.checkboxes = { enabled: false };\n        this.rounded = 'medium';\n        this.onClick = new EventEmitter();\n        this.pageChange = new EventEmitter();\n        this.listResize = new EventEmitter();\n        this.startFrom = 0;\n        this.lastLoaded = 0;\n        this.lastScrollTop = 0;\n        this.scrollToFocused = false;\n        this._size = 'medium';\n        this.selectSubscription = merge(this.selectionService.onSelect.pipe(map((args) => args.indices[0])), this.selectionService.onFocus)\n            .pipe(\n        // handle only the very last onSelect/onFocus emission\n        switchMap(event => this.zone.onStable.pipe(take(1), map(() => event))))\n            .subscribe(this.scrollToItem.bind(this));\n        this.prepareClasses();\n    }\n    set data(data) {\n        this._data = data[0] && data[0].header ? data.slice(0) : data;\n    }\n    get data() {\n        return this._data;\n    }\n    set size(size) {\n        if (this.type === 'list') {\n            this.renderer.removeClass(this.wrapper.nativeElement, getSizeClass('list', this.size));\n            if (size) {\n                this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('list', size));\n            }\n            this._size = size;\n        }\n    }\n    get size() {\n        return this._size;\n    }\n    get pageSize() {\n        if (this.virtual.pageSize) {\n            return this.virtual.pageSize;\n        }\n        let size = Math.round(this.height / this.virtual.itemHeight);\n        return size;\n    }\n    get scrollHeight() {\n        return (this.dataService.grouped ? this.virtual.total - 1 : this.virtual.total) * this.virtual.itemHeight;\n    }\n    get overflowY() {\n        if (isPresent(this.virtual)) {\n            const overflow = this.hasVirtualScrollbar() ? 'scroll' : 'hidden';\n            return overflow;\n        }\n    }\n    /**\n     * @hidden\n     */\n    get checkboxClasses() {\n        return `${this.size ? getSizeClass('checkbox', this.size) : ''} ${this.rounded ? getRoundedClass(this.rounded) : ''}`;\n    }\n    ngOnChanges(changes) {\n        if (isChanged('data', changes, false)) {\n            if (this.lastLoaded <= 0) {\n                this.lastLoaded = this.data.length - 1;\n                this.scrollToFocused = !changes.data.isFirstChange();\n            }\n            this.setOverflow();\n        }\n        if (isChanged('virtual', changes, false)) {\n            this.setOverflow();\n        }\n        if (isChanged('type', changes, false)) {\n            this.prepareClasses();\n        }\n    }\n    ngAfterViewInit() {\n        this.setComponentClasses();\n        this.zone.runOutsideAngular(() => {\n            this.scrollSubscription = fromEvent(this.content.nativeElement, \"scroll\").pipe(auditTime(100), tap(this.prefetchData.bind(this)), tap(this.findCurrentGroup.bind(this))).subscribe(() => {\n                this.lastScrollTop = this.content.nativeElement.scrollTop;\n            });\n        });\n        this.setOverflow();\n    }\n    ngAfterViewChecked() {\n        if (this.virtual) {\n            this.positionItems();\n        }\n        if (this.items && this.scrollToFocused) {\n            this.scrollToFocused = false;\n            const scrollTarget = this.items.length && this.selectionService.focused === -1 ? 0 : this.selectionService.focused;\n            this.scrollToItem(scrollTarget);\n        }\n        if (this.dataService.grouped) {\n            this.findCurrentGroup();\n        }\n    }\n    ngOnDestroy() {\n        this.selectSubscription.unsubscribe();\n        if (this.scrollSubscription) {\n            this.scrollSubscription.unsubscribe();\n        }\n    }\n    onCheckedChange(e, index) {\n        const isChecked = e.target['checked'];\n        if (isChecked && !this.selectionService.isSelected(index)) {\n            this.selectionService.add(index);\n        }\n        if (!isChecked && this.selectionService.isSelected(index)) {\n            this.selectionService.deselect(index);\n        }\n    }\n    prepareClasses() {\n        if (this.type === 'list') {\n            this.listContentClass = 'k-list-content';\n            this.listClass = 'k-list-ul';\n            this.listItemClass = 'k-list-item';\n            this.listVirtualClass = 'k-virtual-list';\n            this.listGroupStickyHeaderClass = 'k-list-group-sticky-header';\n            this.listGroupStickyHeaderTextClass = 'k-list-header-text';\n            this.listGroupItemClass = 'k-list-group-item';\n            this.listGroupItemTextClass = 'k-list-item-text';\n        }\n        else {\n            this.listContentClass = 'k-table-body k-table-scroller';\n            this.listClass = 'k-table k-table-list';\n            this.listItemClass = 'k-table-row';\n            this.listVirtualClass = 'k-virtual-table';\n            this.listGroupStickyHeaderClass = 'k-table-group-sticky-header';\n            this.listGroupStickyHeaderTextClass = 'k-table-th';\n            this.listGroupItemClass = 'k-table-group-row';\n            this.listGroupItemTextClass = 'k-table-th';\n        }\n    }\n    isChecked(index) {\n        const normalizedIndex = this.virtual ? index + this.virtual.skip : index;\n        return this.selectionService.isSelected(normalizedIndex);\n    }\n    firstVisibleItem() {\n        const content = this.content.nativeElement;\n        const rect = content.getBoundingClientRect();\n        // IE9 hack\n        const disabled = Array.prototype.slice.call(content.querySelectorAll(\".k-disabled\"));\n        // This is a workaround for finding elements with pointer-events: none;\n        disabled.forEach((el) => this.renderer.setStyle(el, \"pointer-events\", \"auto\"));\n        const item = document.elementFromPoint(rect.left + 1, rect.top + 1);\n        disabled.forEach((el) => this.renderer.setStyle(el, \"pointer-events\", \"none\"));\n        // return the closest `li` item to cover the custom template scenario\n        return closest(item, 'li');\n    }\n    findCurrentGroup() {\n        if (!this.dataService.grouped) {\n            this.currentGroup = undefined;\n            return;\n        }\n        const item = this.firstVisibleItem();\n        if (item) {\n            let index;\n            if (item.getAttribute(\"role\") === \"group\") {\n                index = parseInt(item.getAttribute(\"group-index\"), 10);\n                this.currentGroup = this.dataService.groupAt(index).value;\n            }\n            else {\n                index = parseInt(item.getAttribute(\"index\"), 10);\n                this.currentGroup = this.dataService.itemGroup(this.dataService.itemAt(index));\n            }\n        }\n        else {\n            this.currentGroup = undefined;\n        }\n        this.cdr.detectChanges();\n    }\n    prefetchData() {\n        if (!this.virtual) {\n            return;\n        }\n        const visibleItems = Math.trunc(this.content.nativeElement.clientHeight / this.virtual.itemHeight);\n        const offsetY = this.content.nativeElement.scrollTop;\n        const start = Math.trunc(offsetY / this.virtual.itemHeight);\n        const down = offsetY > this.lastScrollTop;\n        const nextPage = (start + visibleItems >= this.lastLoaded) && this.lastLoaded < this.virtual.total - 1;\n        const leftOver = this.pageSize - (this.lastLoaded - this.startFrom);\n        const prevPage = this.lastLoaded - this.pageSize + visibleItems >= start - leftOver;\n        if (down && nextPage) {\n            this.changePage(start);\n        }\n        if (!down && prevPage) {\n            this.changePage(start - this.pageSize + visibleItems + 1);\n        }\n    }\n    changePage(start) {\n        this.zone.run(() => {\n            let end = this.pageSize + start;\n            if (end > this.virtual.total) {\n                start--;\n                end = this.virtual.total;\n            }\n            if (start < 0) {\n                start = 0;\n            }\n            this.startFrom = start;\n            this.lastLoaded = end;\n            this.pageChange.emit({ skip: start, take: this.pageSize });\n        });\n    }\n    index(groupIndex, itemIndex) {\n        return groupIndex > 0 ? (this.dataService.groupIndices[groupIndex - 1] + itemIndex) : itemIndex;\n    }\n    getText(dataItem) {\n        return getter(dataItem, this.textField);\n    }\n    getValue(dataItem) {\n        return getter(dataItem, this.valueField);\n    }\n    isDisabled(index) {\n        if (isPresent(this.virtual)) {\n            index += this.virtual.skip;\n        }\n        return this.disabledItemsService.isIndexDisabled(index);\n    }\n    isAltRow(index) {\n        return this.type === 'dropdowngrid' && index % 2 !== 0;\n    }\n    scrollToItem(index) {\n        let flatIndex = index;\n        if (this.dataService.grouped) {\n            // takes into account the group header items\n            flatIndex = this.dataService.flatIndex(index);\n            /* The first group header item is not rendered in the list (see template), so subtract 1 when calulating the flat index.\n               With virtualization enabled, the first group header could be in a previous page, in which case don't subtract anything. */\n            const groupHeaderOffset = this.firstGroupHeaderInTargetedPage(flatIndex) ? -1 : 0;\n            flatIndex += groupHeaderOffset;\n        }\n        if (this.virtual && flatIndex > -1) {\n            this.scrollToIndex(flatIndex);\n            return;\n        }\n        const items = this.items.toArray();\n        if (isPresent(items[flatIndex]) && flatIndex !== -1) {\n            this.scroll(items[flatIndex].element);\n        }\n    }\n    scrollWithOnePage(action) {\n        let content = this.content.nativeElement;\n        const contentOffsetHeight = content.clientHeight;\n        if (action === NavigationAction.PageDown) {\n            content.scrollTop += contentOffsetHeight;\n        }\n        else if (action === NavigationAction.PageUp) {\n            content.scrollTop -= contentOffsetHeight;\n        }\n    }\n    scrollToIndex(index) {\n        let content = this.content.nativeElement;\n        let contentScrollTop = content.scrollTop;\n        const itemOffsetTop = index * this.virtual.itemHeight;\n        const itemOffsetHeight = this.virtual.itemHeight;\n        const contentOffsetHeight = content.clientHeight;\n        const bottomDistance = itemOffsetTop + itemOffsetHeight;\n        if (contentScrollTop > itemOffsetTop) {\n            contentScrollTop = itemOffsetTop;\n        }\n        else if (bottomDistance > (contentScrollTop + contentOffsetHeight)) {\n            contentScrollTop = (bottomDistance - contentOffsetHeight);\n        }\n        content.scrollTop = contentScrollTop;\n    }\n    scroll(item) {\n        if (!item) {\n            return;\n        }\n        const nativeElement = item.nativeElement;\n        let content = this.content.nativeElement, itemOffsetTop = nativeElement.offsetTop, itemOffsetHeight = nativeElement.offsetHeight, contentScrollTop = content.scrollTop, contentOffsetHeight = content.clientHeight, bottomDistance = itemOffsetTop + itemOffsetHeight;\n        if (contentScrollTop > itemOffsetTop) {\n            contentScrollTop = itemOffsetTop;\n        }\n        else if (bottomDistance > (contentScrollTop + contentOffsetHeight)) {\n            contentScrollTop = (bottomDistance - contentOffsetHeight);\n        }\n        content.scrollTop = contentScrollTop;\n    }\n    /**\n     * Indicates whether a scrollbar is currently rendered in the list.\n     */\n    hasScrollbar() {\n        if (!(isPresent(this.items) && this.items.length && isPresent(this.list) && isPresent(this.content))) {\n            return false;\n        }\n        const hasVirtualScroll = isPresent(this.virtual) && this.hasVirtualScrollbar();\n        return hasVirtualScroll || this.list.nativeElement.scrollHeight > this.content.nativeElement.offsetHeight;\n    }\n    isItemSelected(index) {\n        return this.selectionService.isSelected(index) || null;\n    }\n    /**\n     * Sets the list's content overflow (hides/shows scrollbar)\n     */\n    setOverflow() {\n        if (this.virtual) {\n            const overflow = this.hasVirtualScrollbar() ? 'scroll' : 'hidden';\n            this.renderer.setStyle(this.content.nativeElement, 'overflow-y', overflow);\n        }\n    }\n    /**\n     * Indicates whether the scrollbar should be visible in virtual mode.\n     */\n    hasVirtualScrollbar() {\n        const contentOffsetHeight = this.content.nativeElement.offsetHeight;\n        const virtualOffsetHeight = this.virtualContainer && this.virtualContainer.nativeElement.offsetHeight;\n        return this.virtualContainer && virtualOffsetHeight > contentOffsetHeight;\n    }\n    positionItems() {\n        this.items.forEach((item, index) => {\n            const offsetY = (index + this.startFrom) * this.virtual.itemHeight;\n            this.renderer.setStyle(item.element.nativeElement, \"transform\", `translateY(${offsetY}px`);\n        });\n    }\n    /**\n     * Indicates whether the first group header from the data set is in the targeted virtual page.\n     */\n    firstGroupHeaderInTargetedPage(itemIndex) {\n        if (!isPresent(this.virtual)) {\n            return true;\n        }\n        return this.virtual.skip === 0 && (this.virtual.pageSize > itemIndex);\n    }\n    setComponentClasses() {\n        if (this.type === 'list') {\n            this.renderer.addClass(this.wrapper.nativeElement, 'k-list');\n            if (this.size) {\n                this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('list', this.size));\n            }\n        }\n        if (isPresent(this.virtual)) {\n            this.renderer.addClass(this.wrapper.nativeElement, this.listVirtualClass);\n        }\n    }\n}\nListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ListComponent, deps: [{ token: DataService }, { token: i0.ElementRef }, { token: SelectionService }, { token: DisabledItemsService }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\nListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ListComponent, selector: \"kendo-list\", inputs: { selected: \"selected\", focused: \"focused\", textField: \"textField\", valueField: \"valueField\", height: \"height\", template: \"template\", groupTemplate: \"groupTemplate\", fixedGroupTemplate: \"fixedGroupTemplate\", show: \"show\", id: \"id\", optionPrefix: \"optionPrefix\", multipleSelection: \"multipleSelection\", virtual: \"virtual\", type: \"type\", checkboxes: \"checkboxes\", ariaLive: \"ariaLive\", isMultiselect: \"isMultiselect\", data: \"data\", size: \"size\", rounded: \"rounded\" }, outputs: { onClick: \"onClick\", pageChange: \"pageChange\", listResize: \"listResize\" }, viewQueries: [{ propertyName: \"content\", first: true, predicate: [\"content\"], descendants: true, static: true }, { propertyName: \"list\", first: true, predicate: [\"list\"], descendants: true, static: true }, { propertyName: \"virtualContainer\", first: true, predicate: [\"virtualContainer\"], descendants: true }, { propertyName: \"items\", predicate: ListItemDirective, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div *ngIf=\"dataService.grouped\"\n        [class]=\"listGroupStickyHeaderClass\"\n        [ngStyle]=\"{\n            'height.px': virtual?.itemHeight,\n            'minHeight.px' : virtual?.itemHeight,\n            'boxSizing' : virtual ? 'border-box' : 'inherit'}\"\n        >\n        <ng-template *ngIf=\"fixedGroupTemplate\"\n            [templateContext]=\"{\n                templateRef: fixedGroupTemplate.templateRef,\n                $implicit: currentGroup\n            }\">\n        </ng-template>\n        <ng-template [ngIf]=\"!fixedGroupTemplate\"><span [class]=\"listGroupStickyHeaderTextClass\">{{ currentGroup }}</span></ng-template>\n    </div>\n    <div #content\n        [class]=\"listContentClass\"\n        [style.overscrollBehavior]=\"'none'\"\n        [style.maxHeight.px]=\"height\"\n        unselectable=\"on\">\n    <ul #list\n        role=\"listbox\"\n        [class]=\"listClass\"\n        [attr.id]=\"id\"\n        [attr.aria-live]=\"ariaLive\"\n        [attr.aria-multiselectable]=\"isMultiselect\"\n        [attr.aria-hidden]=\"!show\">\n         <ng-template *ngIf=\"!dataService.grouped && show\" ngFor let-dataItem let-itemIndex=\"index\" [ngForOf]=\"data\">\n            <li\n                role=\"option\"\n                kendoDropDownsSelectable\n                [checkboxes]=\"checkboxes\"\n                [height]=\"virtual?.itemHeight\"\n                [index]=\"itemIndex + startFrom\"\n                [multipleSelection]=\"multipleSelection\"\n                [attr.id]=\"optionPrefix + '-' + getValue(dataItem)\"\n                [attr.tabIndex]=\"-1\"\n                [attr.aria-selected]=\"isItemSelected(itemIndex)\"\n                [class]=\"listItemClass\"\n                [ngClass]=\"{\n                    'k-disabled': isDisabled(itemIndex),\n                    'k-table-alt-row': isAltRow(itemIndex)\n                }\"\n            >\n                <input\n                    *ngIf=\"checkboxes.enabled\"\n                    type=\"checkbox\"\n                    class=\"k-checkbox\"\n                    [ngClass]=\"checkboxClasses\"\n                    (change)=\"onCheckedChange($event, itemIndex)\"\n                    [checked]=\"isChecked(itemIndex)\"\n                />\n                <ng-template *ngIf=\"template\"\n                    [templateContext]=\"{\n                        templateRef: template.templateRef,\n                        $implicit: dataItem\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!template\"><span class=\"k-list-item-text\">{{ getText(dataItem) }}</span></ng-template>\n            </li>\n         </ng-template>\n         <ng-template *ngIf=\"dataService.grouped\" ngFor let-dataItem let-itemIndex=\"index\" [ngForOf]=\"data\">\n            <li\n                *ngIf=\"dataItem.header && dataItem.index > 0\"\n                role=\"group\"\n                [class]=\"listGroupItemClass\"\n                [class.k-table-alt-row]=\"isAltRow(itemIndex - 1)\"\n                [ngStyle]=\"{\n                    'height.px': virtual?.itemHeight,\n                    'minHeight.px' : virtual?.itemHeight,\n                    'boxSizing' : virtual ? 'border-box' : 'inherit'}\"\n                [attr.group-index]=\"dataItem.index\"\n                [attr.id]=\"optionPrefix + '-' + getValue(dataItem.value)\"\n                [attr.tabIndex]=\"-1\">\n                    <span [class]=\"listGroupItemTextClass\">\n                        <ng-template *ngIf=\"groupTemplate\"\n                            [templateContext]=\"{\n                                templateRef: groupTemplate.templateRef,\n                                $implicit: dataItem.value\n                        }\">\n                        </ng-template>\n                        <ng-template [ngIf]=\"!groupTemplate\">{{ dataItem.value }}</ng-template>\n                    </span>\n            </li>\n            <li\n                *ngIf=\"!dataItem.header\"\n                role=\"option\"\n                kendoDropDownsSelectable\n                [height]=\"virtual?.itemHeight\"\n                [index]=\"dataItem.offsetIndex\"\n                [multipleSelection]=\"multipleSelection\"\n                [attr.absolute-index]=\"dataItem.index\"\n                [attr.id]=\"optionPrefix + '-' + getValue(dataItem.value)\"\n                [attr.tabIndex]=\"-1\"\n                [attr.aria-selected]=\"isItemSelected(dataItem.offsetIndex)\"\n                [class]=\"listItemClass\"\n                [ngClass]=\"{\n                    'k-disabled': isDisabled(dataItem.offsetIndex),\n                    'k-table-alt-row': isAltRow(itemIndex - 1)\n                }\"\n            >\n                <ng-template *ngIf=\"template\"\n                    [templateContext]=\"{\n                        templateRef: template.templateRef,\n                        $implicit: dataItem.value\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!template\"><span class=\"k-list-item-text\">{{ getText(dataItem.value) }}</span></ng-template>\n            </li>\n        </ng-template>\n        <kendo-resize-sensor\n            *ngIf=\"!virtual\"\n            (resize)=\"listResize.emit()\"\n        >\n        </kendo-resize-sensor>\n    </ul>\n    <div *ngIf=\"virtual\" #virtualContainer class=\"k-height-container\" role=\"presentation\">\n        <div [style.height.px]=\"scrollHeight\">\n            <kendo-resize-sensor (resize)=\"listResize.emit()\"></kendo-resize-sensor>\n        </div>\n    </div>\n    </div>\n  `, isInline: true, components: [{ type: i9.ResizeSensorComponent, selector: \"kendo-resize-sensor\", inputs: [\"rateLimit\"], outputs: [\"resize\"] }], directives: [{ type: i11.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i11.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: TemplateContextDirective, selector: \"[templateContext]\", inputs: [\"templateContext\"] }, { type: i11.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: ListItemDirective, selector: \"\\\"li[role=option], li[role=group]\\\"\" }, { type: SelectableDirective, selector: \"[kendoDropDownsSelectable]\", inputs: [\"index\", \"checkboxes\", \"height\", \"multipleSelection\"] }, { type: i11.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ListComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-list',\n                    template: `\n    <div *ngIf=\"dataService.grouped\"\n        [class]=\"listGroupStickyHeaderClass\"\n        [ngStyle]=\"{\n            'height.px': virtual?.itemHeight,\n            'minHeight.px' : virtual?.itemHeight,\n            'boxSizing' : virtual ? 'border-box' : 'inherit'}\"\n        >\n        <ng-template *ngIf=\"fixedGroupTemplate\"\n            [templateContext]=\"{\n                templateRef: fixedGroupTemplate.templateRef,\n                $implicit: currentGroup\n            }\">\n        </ng-template>\n        <ng-template [ngIf]=\"!fixedGroupTemplate\"><span [class]=\"listGroupStickyHeaderTextClass\">{{ currentGroup }}</span></ng-template>\n    </div>\n    <div #content\n        [class]=\"listContentClass\"\n        [style.overscrollBehavior]=\"'none'\"\n        [style.maxHeight.px]=\"height\"\n        unselectable=\"on\">\n    <ul #list\n        role=\"listbox\"\n        [class]=\"listClass\"\n        [attr.id]=\"id\"\n        [attr.aria-live]=\"ariaLive\"\n        [attr.aria-multiselectable]=\"isMultiselect\"\n        [attr.aria-hidden]=\"!show\">\n         <ng-template *ngIf=\"!dataService.grouped && show\" ngFor let-dataItem let-itemIndex=\"index\" [ngForOf]=\"data\">\n            <li\n                role=\"option\"\n                kendoDropDownsSelectable\n                [checkboxes]=\"checkboxes\"\n                [height]=\"virtual?.itemHeight\"\n                [index]=\"itemIndex + startFrom\"\n                [multipleSelection]=\"multipleSelection\"\n                [attr.id]=\"optionPrefix + '-' + getValue(dataItem)\"\n                [attr.tabIndex]=\"-1\"\n                [attr.aria-selected]=\"isItemSelected(itemIndex)\"\n                [class]=\"listItemClass\"\n                [ngClass]=\"{\n                    'k-disabled': isDisabled(itemIndex),\n                    'k-table-alt-row': isAltRow(itemIndex)\n                }\"\n            >\n                <input\n                    *ngIf=\"checkboxes.enabled\"\n                    type=\"checkbox\"\n                    class=\"k-checkbox\"\n                    [ngClass]=\"checkboxClasses\"\n                    (change)=\"onCheckedChange($event, itemIndex)\"\n                    [checked]=\"isChecked(itemIndex)\"\n                />\n                <ng-template *ngIf=\"template\"\n                    [templateContext]=\"{\n                        templateRef: template.templateRef,\n                        $implicit: dataItem\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!template\"><span class=\"k-list-item-text\">{{ getText(dataItem) }}</span></ng-template>\n            </li>\n         </ng-template>\n         <ng-template *ngIf=\"dataService.grouped\" ngFor let-dataItem let-itemIndex=\"index\" [ngForOf]=\"data\">\n            <li\n                *ngIf=\"dataItem.header && dataItem.index > 0\"\n                role=\"group\"\n                [class]=\"listGroupItemClass\"\n                [class.k-table-alt-row]=\"isAltRow(itemIndex - 1)\"\n                [ngStyle]=\"{\n                    'height.px': virtual?.itemHeight,\n                    'minHeight.px' : virtual?.itemHeight,\n                    'boxSizing' : virtual ? 'border-box' : 'inherit'}\"\n                [attr.group-index]=\"dataItem.index\"\n                [attr.id]=\"optionPrefix + '-' + getValue(dataItem.value)\"\n                [attr.tabIndex]=\"-1\">\n                    <span [class]=\"listGroupItemTextClass\">\n                        <ng-template *ngIf=\"groupTemplate\"\n                            [templateContext]=\"{\n                                templateRef: groupTemplate.templateRef,\n                                $implicit: dataItem.value\n                        }\">\n                        </ng-template>\n                        <ng-template [ngIf]=\"!groupTemplate\">{{ dataItem.value }}</ng-template>\n                    </span>\n            </li>\n            <li\n                *ngIf=\"!dataItem.header\"\n                role=\"option\"\n                kendoDropDownsSelectable\n                [height]=\"virtual?.itemHeight\"\n                [index]=\"dataItem.offsetIndex\"\n                [multipleSelection]=\"multipleSelection\"\n                [attr.absolute-index]=\"dataItem.index\"\n                [attr.id]=\"optionPrefix + '-' + getValue(dataItem.value)\"\n                [attr.tabIndex]=\"-1\"\n                [attr.aria-selected]=\"isItemSelected(dataItem.offsetIndex)\"\n                [class]=\"listItemClass\"\n                [ngClass]=\"{\n                    'k-disabled': isDisabled(dataItem.offsetIndex),\n                    'k-table-alt-row': isAltRow(itemIndex - 1)\n                }\"\n            >\n                <ng-template *ngIf=\"template\"\n                    [templateContext]=\"{\n                        templateRef: template.templateRef,\n                        $implicit: dataItem.value\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!template\"><span class=\"k-list-item-text\">{{ getText(dataItem.value) }}</span></ng-template>\n            </li>\n        </ng-template>\n        <kendo-resize-sensor\n            *ngIf=\"!virtual\"\n            (resize)=\"listResize.emit()\"\n        >\n        </kendo-resize-sensor>\n    </ul>\n    <div *ngIf=\"virtual\" #virtualContainer class=\"k-height-container\" role=\"presentation\">\n        <div [style.height.px]=\"scrollHeight\">\n            <kendo-resize-sensor (resize)=\"listResize.emit()\"></kendo-resize-sensor>\n        </div>\n    </div>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: DataService }, { type: i0.ElementRef }, { type: SelectionService }, { type: DisabledItemsService }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i0.Renderer2 }]; }, propDecorators: { selected: [{\n                type: Input\n            }], focused: [{\n                type: Input\n            }], textField: [{\n                type: Input\n            }], valueField: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], groupTemplate: [{\n                type: Input\n            }], fixedGroupTemplate: [{\n                type: Input\n            }], show: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], optionPrefix: [{\n                type: Input\n            }], multipleSelection: [{\n                type: Input\n            }], virtual: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], checkboxes: [{\n                type: Input\n            }], ariaLive: [{\n                type: Input\n            }], isMultiselect: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], rounded: [{\n                type: Input\n            }], onClick: [{\n                type: Output\n            }], pageChange: [{\n                type: Output\n            }], listResize: [{\n                type: Output\n            }], items: [{\n                type: ViewChildren,\n                args: [ListItemDirective]\n            }], content: [{\n                type: ViewChild,\n                args: ['content', { static: true }]\n            }], list: [{\n                type: ViewChild,\n                args: ['list', { static: true }]\n            }], virtualContainer: [{\n                type: ViewChild,\n                args: ['virtualContainer', { static: false }]\n            }] } });\n\n/**\n * @hidden\n */\nclass Messages extends ComponentMessages {\n}\nMessages.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: Messages, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMessages.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: Messages, inputs: { noDataText: \"noDataText\", clearTitle: \"clearTitle\", checkAllText: \"checkAllText\", selectButtonText: \"selectButtonText\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: Messages, decorators: [{\n            type: Directive\n        }], propDecorators: { noDataText: [{\n                type: Input\n            }], clearTitle: [{\n                type: Input\n            }], checkAllText: [{\n                type: Input\n            }], selectButtonText: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass LocalizedMessagesDirective extends Messages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nLocalizedMessagesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalizedMessagesDirective, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Directive });\nLocalizedMessagesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: LocalizedMessagesDirective, selector: \"\\n    [kendoDropDownListLocalizedMessages],\\n    [kendoDropDownTreeLocalizedMessages],\\n    [kendoComboBoxLocalizedMessages],\\n    [kendoMultiColumnComboBoxLocalizedMessages],\\n    [kendoAutoCompleteLocalizedMessages],\\n    [kendoMultiSelectLocalizedMessages],\\n    [kendoMultiSelectTreeLocalizedMessages]\\n  \", providers: [\n        {\n            provide: Messages,\n            useExisting: forwardRef(() => LocalizedMessagesDirective)\n        }\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: LocalizedMessagesDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    providers: [\n                        {\n                            provide: Messages,\n                            useExisting: forwardRef(() => LocalizedMessagesDirective)\n                        }\n                    ],\n                    selector: `\n    [kendoDropDownListLocalizedMessages],\n    [kendoDropDownTreeLocalizedMessages],\n    [kendoComboBoxLocalizedMessages],\n    [kendoMultiColumnComboBoxLocalizedMessages],\n    [kendoAutoCompleteLocalizedMessages],\n    [kendoMultiSelectLocalizedMessages],\n    [kendoMultiSelectTreeLocalizedMessages]\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\nconst NO_VALUE = \"\";\nconst DEFAULT_SIZE$5 = 'medium';\nconst DEFAULT_ROUNDED$5 = 'medium';\nconst DEFAULT_FILL_MODE$5 = 'solid';\n/**\n * @hidden\n */\nconst AUTOCOMPLETE_VALUE_ACCESSOR = {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AutoCompleteComponent)\n};\n/**\n * Represents the [Kendo UI AutoComplete component for Angular]({% slug overview_autocomplete %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-autocomplete\n *      [data]=\"listItems\"\n *      [placeholder]=\"placeholder\"\n *  >\n * `\n * })\n * class AppComponent {\n *   public placeholder: string = 'Type \"it\" for suggestions';\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nclass AutoCompleteComponent {\n    constructor(localization, dataService, popupService, selectionService, navigationService, disabledItemsService, _zone, cdr, renderer, hostElement, touchEnabled) {\n        this.localization = localization;\n        this.dataService = dataService;\n        this.popupService = popupService;\n        this.selectionService = selectionService;\n        this.navigationService = navigationService;\n        this.disabledItemsService = disabledItemsService;\n        this._zone = _zone;\n        this.cdr = cdr;\n        this.renderer = renderer;\n        this.hostElement = hostElement;\n        this.touchEnabled = touchEnabled;\n        /**\n         * Defines whether the first match from the suggestions list will be automatically focused.\n         * By default, `highlightFirst` is set to `true`.\n         */\n        this.highlightFirst = true;\n        /**\n         * @hidden\n         */\n        this.focusableId = `k-${guid()}`;\n        /**\n         * The hint which is displayed when the component is empty.\n         */\n        this.placeholder = \"\";\n        /**\n         * Sets the height of the suggestions list. By default, `listHeight` is 200px.\n         *\n         * > The `listHeight` property affects only the list of suggestions and not the whole popup container.\n         * > To set the height of the popup container, use `popupSettings.height`.\n         */\n        this.listHeight = 200;\n        /**\n         * @hidden\n         *\n         * If set to `true`, renders a button on hovering over the component.\n         * Clicking this button resets the value of the component to `undefined` and triggers the `change` event.\n         */\n        this.clearButton = true;\n        /**\n         * Sets the disabled state of the component.\n         */\n        this.disabled = false;\n        /**\n         * Sets the read-only state of the component.\n         */\n        this.readonly = false;\n        /**\n         * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n         */\n        this.tabindex = 0;\n        /**\n         * Enables the [filtering]({% slug filtering_autocomplete %}) functionality.\n         * If set to `true`, the component emits the `filterChange` event.\n         */\n        this.filterable = false;\n        /**\n         * Fires each time the value is changed&mdash;\n         * when the component is blurred or the value is cleared through the **Clear** button\n         * ([see example]({% slug overview_autocomplete %}#toc-events)).\n         * When the value of the component is programmatically changed to `ngModel` or `formControl`\n         * through its API or form binding, the `valueChange` event is not triggered because it\n         * might cause a mix-up with the built-in `valueChange` mechanisms of the `ngModel` or `formControl` bindings.\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires each time the user types in the input field.\n         * You can filter the source based on the passed filtration value\n         * ([see example]({% slug overview_autocomplete %}#toc-events)).\n         */\n        this.filterChange = new EventEmitter();\n        /**\n         * Fires each time the popup is about to open.\n         * This event is preventable. If you cancel it, the popup will remain closed.\n         */\n        this.open = new EventEmitter();\n        /**\n         * Fires after the popup has been opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Fires each time the popup is about to close.\n         * This event is preventable. If you cancel it, the popup will remain open.\n         */\n        this.close = new EventEmitter();\n        /**\n         * Fires after the popup has been closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Fires each time the user focuses the AutoComplete.\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * Fires each time the AutoComplete gets blurred.\n         */\n        this.onBlur = new EventEmitter();\n        this.widgetClasses = true;\n        this.listBoxId = guid();\n        this.optionPrefix = guid();\n        this.onChangeCallback = noop;\n        this.onTouchedCallback = noop;\n        this.popupMouseDownHandler = (event) => event.preventDefault();\n        this._popupSettings = { animate: true };\n        this._open = false;\n        this._value = \"\";\n        this.valueChangeSubject = new Subject();\n        this._isFocused = false;\n        this._size = 'medium';\n        this._rounded = 'medium';\n        this._fillMode = 'solid';\n        validatePackage(packageMetadata);\n        this.direction = localization.rtl ? 'rtl' : 'ltr';\n        this.wrapper = this.hostElement.nativeElement;\n        this.data = [];\n        this.subscribeEvents();\n        this.subscribeTouchEvents();\n        this.selectionService.resetSelection([-1]);\n    }\n    get width() {\n        let wrapperOffsetWidth = 0;\n        if (isDocumentAvailable()) {\n            wrapperOffsetWidth = this.wrapper.offsetWidth;\n        }\n        const width = this.popupSettings.width || wrapperOffsetWidth;\n        const minWidth = isNaN(wrapperOffsetWidth) ? wrapperOffsetWidth : `${wrapperOffsetWidth}px`;\n        const maxWidth = isNaN(width) ? width : `${width}px`;\n        return { min: minWidth, max: maxWidth };\n    }\n    get height() {\n        const popupHeight = this.popupSettings.height;\n        return isPresent(popupHeight) ? `${popupHeight}px` : 'auto';\n    }\n    get listContainerClasses() {\n        const containerClasses = ['k-list-container', 'k-reset'];\n        if (this.popupSettings.popupClass) {\n            containerClasses.push(this.popupSettings.popupClass);\n        }\n        return containerClasses;\n    }\n    get suggestion() {\n        if (!this.text || !this.suggestedText) {\n            this.suggestedText = undefined;\n            return;\n        }\n        const hasMatch = this.suggestedText.toLowerCase().startsWith(this.text.toLowerCase());\n        const shouldSuggest = this.suggest && !this.backspacePressed;\n        if (shouldSuggest && hasMatch) {\n            return this.suggestedText;\n        }\n    }\n    get appendTo() {\n        const { appendTo } = this.popupSettings;\n        if (!appendTo || appendTo === 'root') {\n            return undefined;\n        }\n        return appendTo === 'component' ? this.container : appendTo;\n    }\n    get clearButtonVisiblity() {\n        if (this.touchEnabled) {\n            return 'visible';\n        }\n    }\n    /**\n     * Toggles the visibility of the popup.\n     * If you use the `toggle` method to open or close the popup, the `open` and `close` events will not be fired.\n     *\n     * @param open - The state of the popup.\n     */\n    toggle(open) {\n        Promise.resolve(null).then(() => {\n            const shouldOpen = isPresent(open) ? open : !this._open;\n            this._toggle(shouldOpen);\n        });\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n    get isOpen() {\n        return this._open;\n    }\n    /**\n     * @hidden\n     */\n    togglePopup(open) {\n        const isDisabled = this.disabled || this.readonly;\n        const sameState = this.isOpen === open;\n        if (isDisabled || sameState) {\n            return;\n        }\n        const isDefaultPrevented = this.triggerPopupEvents(open);\n        if (!isDefaultPrevented) {\n            this._toggle(open);\n        }\n    }\n    get activeDescendant() {\n        if (!this.isOpen || !isPresent(this.selectionService.focused) || this.selectionService.focused === -1) {\n            return null;\n        }\n        const dataItem = this.dataService.itemAt(this.selectionService.focused);\n        return this.optionPrefix + \"-\" + getter(dataItem, this.valueField);\n    }\n    /**\n     * Sets the data of the AutoComplete.\n     *\n     * > The data has to be provided in an array-like list.\n     */\n    set data(data) {\n        this.dataService.data = data || [];\n        if (this.virtual) {\n            this.virtual.skip = 0;\n        }\n        if (this.filterable) {\n            this.selectionService.focused = this.isOpen && this.data.length && this.highlightFirst ? this.firstFocusableIndex(0) : -1;\n        }\n        if (this.suggest && this.dataService.itemsCount > 0) {\n            this.suggestedText = getter(this.dataService.itemAt(0), this.valueField);\n        }\n    }\n    get data() {\n        const virtual = this.virtual;\n        if (virtual) {\n            const start = virtual.skip || 0;\n            const end = start + virtual.pageSize;\n            // Use length instead of itemsCount because of the grouping.\n            virtual.total = this.dataService.data.length;\n            return this.dataService.data.slice(start, end);\n        }\n        return this.dataService.data;\n    }\n    /**\n     * Sets the value of the AutoComplete.\n     */\n    set value(newValue) {\n        this.verifySettings(newValue);\n        this._value = newValue || NO_VALUE;\n        this.text = this.value;\n        this.cdr.markForCheck();\n    }\n    get value() {\n        return this._value || NO_VALUE;\n    }\n    /**\n     * Configures the popup of the AutoComplete.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `width: Number | String`&mdash;Sets the width of the popup container. By default, the width of the host element is used. If set to `auto`, the component automatically adjusts the width of the popup and no item labels are wrapped. The `auto` mode is not supported when virtual scrolling is enabled.\n     * - `height: Number`&mdash;Sets the height of the popup container.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n     */\n    set popupSettings(settings) {\n        this._popupSettings = Object.assign({ animate: true }, settings);\n    }\n    get popupSettings() {\n        return this._popupSettings;\n    }\n    /**\n     * Defines a Boolean function that is executed for each data item in the component\n     * ([see examples]({% slug disableditems_autocomplete %})).\n     * Determines whether the item will be disabled.\n     */\n    set itemDisabled(fn) {\n        if (typeof fn !== 'function') {\n            throw new Error(`itemDisabled must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this.disabledItemsService.itemDisabled = fn;\n    }\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n        this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n        return this.tabindex;\n    }\n    /**\n     * Enables the [virtualization]({% slug virtualization_autocomplete %}) functionality.\n     */\n    set virtual(settings) {\n        this._virtualSettings = normalizeVirtualizationSettings(settings);\n    }\n    get virtual() {\n        return this._virtualSettings;\n    }\n    /**\n     * Sets the size of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     *\n     */\n    set size(size) {\n        const newSize = size ? size : DEFAULT_SIZE$5;\n        this.renderer.removeClass(this.wrapper, getSizeClass('input', this.size));\n        if (size !== 'none') {\n            this.renderer.addClass(this.wrapper, getSizeClass('input', newSize));\n        }\n        this._size = newSize;\n    }\n    get size() {\n        return this._size;\n    }\n    /**\n     * Sets the border radius of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `full`\n     * * `none`\n     *\n     */\n    set rounded(rounded) {\n        const newRounded = rounded ? rounded : DEFAULT_ROUNDED$5;\n        this.renderer.removeClass(this.wrapper, getRoundedClass(this.rounded));\n        if (rounded !== 'none') {\n            this.renderer.addClass(this.wrapper, getRoundedClass(newRounded));\n        }\n        this._rounded = newRounded;\n    }\n    get rounded() {\n        return this._rounded;\n    }\n    /**\n     * Sets the fillMode of the component.\n     *\n     * The possible values are:\n     * * `flat`\n     * * `solid` (default)\n     * * `outline`\n     * * `none`\n     *\n     */\n    set fillMode(fillMode) {\n        const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$5;\n        this.renderer.removeClass(this.wrapper, getFillModeClass('input', this.fillMode));\n        if (fillMode !== 'none') {\n            this.renderer.addClass(this.wrapper, getFillModeClass('input', newFillMode));\n        }\n        this._fillMode = newFillMode;\n    }\n    get fillMode() {\n        return this._fillMode;\n    }\n    get isFocused() {\n        return this._isFocused;\n    }\n    set isFocused(isFocused) {\n        this.renderer[isFocused ? 'addClass' : 'removeClass'](this.wrapper, \"k-focus\");\n        this._isFocused = isFocused;\n    }\n    get isDisabled() {\n        return this.disabled;\n    }\n    get isLoading() {\n        return this.loading;\n    }\n    get dir() {\n        return this.direction;\n    }\n    ngOnInit() {\n        this.renderer.removeAttribute(this.wrapper, \"tabindex\");\n        this.localizationChangeSubscription = this.localization\n            .changes\n            .subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n            this.cdr.detectChanges();\n        });\n        this.setComponentClasses();\n    }\n    ngOnDestroy() {\n        this.destroyPopup();\n        this.unsubscribeEvents();\n        if (this.localizationChangeSubscription) {\n            this.localizationChangeSubscription.unsubscribe();\n        }\n    }\n    ngOnChanges(changes) {\n        const virtual = this.virtual;\n        const requestInitialData = virtual && changes.data && changes.data.isFirstChange();\n        if (requestInitialData) {\n            this.pageChange({ skip: 0, take: virtual.pageSize });\n        }\n    }\n    /**\n     * Resets the value of the AutoComplete.\n     * If you use the `reset` method to clear the value of the component,\n     * the model will not update automatically and the `selectionChange` and `valueChange` events will not be fired.\n     */\n    reset() {\n        this.value = NO_VALUE;\n    }\n    /**\n     * @hidden\n     */\n    messageFor(key) {\n        return this.localization.get(key);\n    }\n    /**\n     * @hidden\n     */\n    clearValue(event) {\n        event.stopImmediatePropagation();\n        this.focus();\n        this.change(NO_VALUE);\n        if (this.filterable) {\n            this.filterChange.emit('');\n        }\n        this.selectionService.resetSelection([]);\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Focuses a specific item of the AutoComplete based on a provided index.\n     * If null or invalid index is provided the focus will be removed.\n     */\n    focusItemAt(index) {\n        const isInRange = index >= 0 && index < this.data.length;\n        if (isPresent(index) && isInRange && !this.disabledItemsService.isIndexDisabled(index)) {\n            this.selectionService.focus(index);\n        }\n        else {\n            this.selectionService.focus(-1);\n        }\n    }\n    /**\n     * Focuses the AutoComplete.\n     */\n    focus() {\n        if (!this.disabled) {\n            this.searchbar.focus();\n        }\n    }\n    /**\n     * Blurs the AutoComplete.\n     */\n    blur() {\n        if (!this.disabled) {\n            this.searchbar.blur();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onResize() {\n        if (this._open) {\n            const popupWrapper = this.popupRef.popupElement;\n            const { min, max } = this.width;\n            popupWrapper.style.minWidth = min;\n            popupWrapper.style.width = max;\n        }\n    }\n    emitChange(value) {\n        this.onChangeCallback(value);\n        this.valueChange.emit(value);\n    }\n    verifySettings(newValue) {\n        if (!isDevMode()) {\n            return;\n        }\n        if (isPresent(newValue) && typeof newValue !== \"string\") {\n            throw new Error(\"Expected value of type string. See https://www.telerik.com/kendo-angular-ui/components/dropdowns/autocomplete/value-binding/\");\n        }\n    }\n    search(text, startFrom = 0) {\n        let index;\n        if (text.length && this.dataService.itemsCount) {\n            index = this.dataService.findIndex(this.findIndexPredicate(text), startFrom);\n        }\n        else {\n            index = -1;\n        }\n        if (this.disabledItemsService.isIndexDisabled(index)) {\n            if (index + 1 < this.dataService.itemsCount) {\n                this.search(text, index + 1);\n            }\n            else {\n                this.selectionService.focus(-1);\n            }\n        }\n        else {\n            this.selectionService.focus(index);\n            if (this.suggest) {\n                this.suggestedText = getter(this.dataService.itemAt(index), this.valueField);\n            }\n        }\n    }\n    navigate(index) {\n        if (!this.isOpen) {\n            return;\n        }\n        this.selectionService.focus(index);\n    }\n    /**\n     * @hidden\n     */\n    handleNavigate(event) {\n        const focused = isNaN(this.selectionService.focused) ? this.firstFocusableIndex(0) : this.selectionService.focused;\n        if (this.disabled || this.readonly || isNaN(focused)) {\n            return;\n        }\n        const action = this.navigationService.process({\n            current: focused,\n            max: this.dataService.itemsCount - 1,\n            min: 0,\n            originalEvent: event\n        });\n        if (action !== NavigationAction.Undefined &&\n            action !== NavigationAction.Backspace &&\n            action !== NavigationAction.Delete &&\n            action !== NavigationAction.Home &&\n            action !== NavigationAction.End &&\n            action !== NavigationAction.Left &&\n            action !== NavigationAction.Right &&\n            action !== NavigationAction.PageDown &&\n            action !== NavigationAction.PageUp &&\n            ((action === NavigationAction.Enter && this.isOpen) || action !== NavigationAction.Enter)) {\n            event.preventDefault();\n        }\n    }\n    handleEnter(event) {\n        const focused = this.selectionService.focused;\n        let value;\n        if (this.isOpen) {\n            event.originalEvent.preventDefault();\n        }\n        if (focused >= 0) {\n            value = getter(this.dataService.itemAt(focused), this.valueField);\n        }\n        else {\n            const match = this.suggest && this.suggestedText && this.data.length &&\n                getter(this.dataService.itemAt(0), this.valueField).toLowerCase() === this.searchbar.value.toLowerCase();\n            if (this.isOpen && match) {\n                value = this.suggestedText;\n            }\n            else {\n                value = this.searchbar.value;\n            }\n        }\n        this.change(value);\n    }\n    handleEscape() {\n        if (this.isOpen) {\n            this.togglePopup(false);\n        }\n        else {\n            this.value = '';\n        }\n        this.selectionService.focused = -1;\n        this.suggestedText = null;\n    }\n    /**\n     * @hidden\n     */\n    searchBarChange(text) {\n        const currentTextLength = isPresent(this.text) ? this.text.length : 0;\n        this.backspacePressed = (text.length < currentTextLength) ? true : false;\n        this.text = text;\n        this.togglePopup(text.length > 0);\n        if (!this.highlightFirst) {\n            this.selectionService.focused = -1;\n        }\n        if (this.filterable) {\n            this.filterChange.emit(text);\n        }\n        else if (this.highlightFirst) {\n            this.search(text);\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleFocus() {\n        this.isFocused = true;\n        if (hasObservers(this.onFocus)) {\n            this._zone.run(() => {\n                this.onFocus.emit();\n            });\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleBlur() {\n        const focused = this.filterable ? this.selectionService.focused : -1;\n        this.searchbar.input.nativeElement.scrollLeft = 0; // Firefox doesn't auto-scroll to the left on blur like other browsers\n        let dataItem;\n        let text;\n        if (focused !== -1) {\n            dataItem = this.dataService.itemAt(focused);\n            text = getter(dataItem, this.valueField) || \"\";\n        }\n        else {\n            text = this.searchbar.value;\n        }\n        const exactMatch = text === this.searchbar.value;\n        const insensitiveMatch = text.toLowerCase() === this.searchbar.value.toLowerCase();\n        if (!exactMatch && insensitiveMatch) {\n            this.selectionService.resetSelection([]);\n        }\n        this.isFocused = false;\n        const valueHasChanged = this.value !== this.text;\n        const runInZone = hasObservers(this.onBlur) || hasObservers(this.close) || isUntouched(this.wrapper) || valueHasChanged;\n        if (runInZone) {\n            this._zone.run(() => {\n                if (valueHasChanged) {\n                    this.change(this.searchbar.value);\n                }\n                this.onBlur.emit();\n                this.onTouchedCallback();\n                this.togglePopup(false);\n            });\n        }\n        else {\n            this.togglePopup(false);\n        }\n    }\n    /**\n     * @hidden\n     */\n    pageChange(event) {\n        const virtual = this.virtual;\n        virtual.skip = event.skip;\n    }\n    change(value) {\n        this.togglePopup(false);\n        this.valueChangeSubject.next(value);\n    }\n    subscribeEvents() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        this.valueChangeSubscription = this.valueChangeSubject\n            .subscribe(value => {\n            const hasChange = this.value !== value;\n            this.value = value;\n            this.text = value;\n            // emit change after assigning `this.value` => allows the user to modify the component value on `valueChange`\n            if (hasChange) {\n                this.emitChange(value);\n            }\n        });\n        this.changeSubscription = this.selectionService.onChange.subscribe(this.handleItemChange.bind(this));\n        this.focusSubscription = this.selectionService.onFocus.subscribe(this.handleItemFocus.bind(this));\n        this.navigationSubscription = merge(this.navigationService.up, this.navigationService.down).subscribe((event) => this.navigate(event.index));\n        this.closeSubscription = this.navigationService.close.subscribe(() => this.togglePopup(false));\n        this.openSubscription = this.navigationService.open.subscribe(() => this.togglePopup(true));\n        this.enterSubscription = this.navigationService.enter.subscribe(this.handleEnter.bind(this));\n        this.escSubscription = this.navigationService.esc.subscribe(this.handleEscape.bind(this));\n        this.scrollSubscription = merge(this.navigationService.pagedown, this.navigationService.pageup).subscribe((event) => {\n            if (this.isOpen) {\n                event.originalEvent.preventDefault();\n                this.optionsList.scrollWithOnePage(NavigationAction[event.originalEvent.code]);\n            }\n        });\n    }\n    subscribeTouchEvents() {\n        if (!isDocumentAvailable() || !this.touchEnabled) {\n            return;\n        }\n        this._zone.runOutsideAngular(() => \n        // Roll up AutoComplete on iOS when tapped outside\n        this.touchstartDisposeHandler = this.renderer.listen(document, 'touchstart', (e) => {\n            const target = e.target;\n            if (this.isFocused && !inDropDown(this.hostElement, target, this.popupRef)) {\n                this._zone.run(() => this.blur());\n            }\n        }));\n    }\n    unsubscribeEvents() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        this.changeSubscription.unsubscribe();\n        this.navigationSubscription.unsubscribe();\n        this.closeSubscription.unsubscribe();\n        this.openSubscription.unsubscribe();\n        this.enterSubscription.unsubscribe();\n        this.escSubscription.unsubscribe();\n        this.scrollSubscription.unsubscribe();\n        this.valueChangeSubscription.unsubscribe();\n        this.focusSubscription.unsubscribe();\n        if (this.touchstartDisposeHandler) {\n            this.touchstartDisposeHandler();\n        }\n    }\n    handleItemChange(event) {\n        const index = event.indices.length ? event.indices[0] : undefined;\n        this.selectionService.resetSelection([-1]);\n        if (!isPresent(index)) {\n            return;\n        }\n        let text = getter(this.dataService.itemAt(index), this.valueField);\n        this.change(text);\n    }\n    handleItemFocus(_event) {\n        const focused = this.selectionService.focused;\n        const shouldSuggest = Boolean(this.suggest && this.data && this.data.length && focused >= 0);\n        if (shouldSuggest) {\n            this.suggestedText = getter(this.dataService.itemAt(focused), this.valueField);\n        }\n    }\n    createPopup() {\n        if (this.virtual) {\n            this.virtual.skip = 0;\n        }\n        const horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n        const anchorPosition = { horizontal: horizontalAlign, vertical: \"bottom\" };\n        const popupPosition = { horizontal: horizontalAlign, vertical: \"top\" };\n        this.popupRef = this.popupService.open({\n            anchor: this.wrapper,\n            animate: this.popupSettings.animate,\n            appendTo: this.appendTo,\n            content: this.popupTemplate,\n            popupClass: this.listContainerClasses,\n            positionMode: 'absolute',\n            popupAlign: popupPosition,\n            anchorAlign: anchorPosition\n        });\n        const popupWrapper = this.popupRef.popupElement;\n        const { min, max } = this.width;\n        popupWrapper.addEventListener('mousedown', this.popupMouseDownHandler);\n        popupWrapper.style.minWidth = min;\n        popupWrapper.style.width = max;\n        popupWrapper.style.height = this.height;\n        popupWrapper.setAttribute(\"dir\", this.direction);\n        const listBox = popupWrapper.querySelector('ul.k-list-ul');\n        const ariaLabel = this.searchbar.input.nativeElement.getAttribute('aria-labelledby');\n        if (ariaLabel) {\n            listBox.setAttribute('aria-labelledby', ariaLabel);\n        }\n        this.popupRef.popupOpen.subscribe(() => {\n            this.cdr.detectChanges();\n            this.optionsList.scrollToItem(this.selectionService.focused);\n            this.opened.emit();\n        });\n        this.popupRef.popupClose.subscribe(() => {\n            this.closed.emit();\n        });\n        this.popupRef.popupAnchorViewportLeave.subscribe(() => this.togglePopup(false));\n    }\n    destroyPopup() {\n        if (this.popupRef) {\n            this.popupRef.popupElement\n                .removeEventListener('mousedown', this.popupMouseDownHandler);\n            this.popupRef.close();\n            this.popupRef = null;\n        }\n    }\n    _toggle(open) {\n        this._open = open;\n        this.destroyPopup();\n        if (this._open) {\n            this.createPopup();\n        }\n    }\n    triggerPopupEvents(open) {\n        const eventArgs = new PreventableEvent();\n        if (open) {\n            this.open.emit(eventArgs);\n        }\n        else {\n            this.close.emit(eventArgs);\n        }\n        return eventArgs.isDefaultPrevented();\n    }\n    firstFocusableIndex(index) {\n        const maxIndex = this.data.length - 1;\n        if (this.disabledItemsService.isIndexDisabled(index)) {\n            return (index < maxIndex) ? this.firstFocusableIndex(index + 1) : undefined;\n        }\n        else {\n            return index;\n        }\n    }\n    findIndexPredicate(text) {\n        if (this.dataService.grouped) {\n            return (item) => {\n                let itemText = getter(item.value, this.valueField);\n                itemText = !isPresent(itemText) ? \"\" : itemText.toString().toLowerCase();\n                return itemText.startsWith(text.toLowerCase());\n            };\n        }\n        else {\n            return (item) => {\n                let itemText = getter(item, this.valueField);\n                itemText = !isPresent(itemText) ? \"\" : itemText.toString().toLowerCase();\n                return itemText.startsWith(text.toLowerCase());\n            };\n        }\n    }\n    setComponentClasses() {\n        if (this.size !== 'none') {\n            this.renderer.addClass(this.wrapper, getSizeClass('input', this.size));\n        }\n        if (this.rounded !== 'none') {\n            this.renderer.addClass(this.wrapper, getRoundedClass(this.rounded));\n        }\n        if (this.fillMode !== 'none') {\n            this.renderer.addClass(this.wrapper, getFillModeClass('input', this.fillMode));\n        }\n    }\n}\nAutoCompleteComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: AutoCompleteComponent, deps: [{ token: i1.LocalizationService }, { token: DataService }, { token: i2.PopupService }, { token: SelectionService }, { token: NavigationService }, { token: DisabledItemsService }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: TOUCH_ENABLED, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nAutoCompleteComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: AutoCompleteComponent, selector: \"kendo-autocomplete\", inputs: { highlightFirst: \"highlightFirst\", focusableId: \"focusableId\", data: \"data\", value: \"value\", valueField: \"valueField\", placeholder: \"placeholder\", popupSettings: \"popupSettings\", listHeight: \"listHeight\", loading: \"loading\", clearButton: \"clearButton\", suggest: \"suggest\", disabled: \"disabled\", itemDisabled: \"itemDisabled\", readonly: \"readonly\", tabindex: \"tabindex\", tabIndex: \"tabIndex\", filterable: \"filterable\", virtual: \"virtual\", size: \"size\", rounded: \"rounded\", fillMode: \"fillMode\" }, outputs: { valueChange: \"valueChange\", filterChange: \"filterChange\", open: \"open\", opened: \"opened\", close: \"close\", closed: \"closed\", onFocus: \"focus\", onBlur: \"blur\" }, host: { properties: { \"class.k-autocomplete\": \"this.widgetClasses\", \"class.k-input\": \"this.widgetClasses\", \"class.k-disabled\": \"this.isDisabled\", \"class.k-loading\": \"this.isLoading\", \"attr.dir\": \"this.dir\" } }, providers: [\n        AUTOCOMPLETE_VALUE_ACCESSOR,\n        DataService,\n        SelectionService,\n        NavigationService,\n        DisabledItemsService,\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.autocomplete'\n        },\n        {\n            provide: FilterableComponent,\n            useExisting: forwardRef(() => AutoCompleteComponent)\n        },\n        {\n            provide: KendoInput,\n            useExisting: forwardRef(() => AutoCompleteComponent)\n        }\n    ], queries: [{ propertyName: \"template\", first: true, predicate: ItemTemplateDirective, descendants: true }, { propertyName: \"headerTemplate\", first: true, predicate: HeaderTemplateDirective, descendants: true }, { propertyName: \"footerTemplate\", first: true, predicate: FooterTemplateDirective, descendants: true }, { propertyName: \"noDataTemplate\", first: true, predicate: NoDataTemplateDirective, descendants: true }, { propertyName: \"groupTemplate\", first: true, predicate: GroupTemplateDirective, descendants: true }, { propertyName: \"fixedGroupTemplate\", first: true, predicate: FixedGroupTemplateDirective, descendants: true }], viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true, read: ViewContainerRef, static: true }, { propertyName: \"popupTemplate\", first: true, predicate: [\"popupTemplate\"], descendants: true, static: true }, { propertyName: \"searchbar\", first: true, predicate: SearchBarComponent, descendants: true, static: true }, { propertyName: \"optionsList\", first: true, predicate: [\"optionsList\"], descendants: true }], exportAs: [\"kendoAutoComplete\"], usesOnChanges: true, ngImport: i0, template: `\n        <ng-container kendoAutoCompleteLocalizedMessages\n            i18n-noDataText=\"kendo.autocomplete.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.autocomplete.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n        >\n        </ng-container>\n        <kendo-searchbar #searchbar\n            [role]=\"'combobox'\"\n            [isSuggestable]=\"suggest\"\n            [isFilterable]=\"filterable\"\n            [isLoading]=\"isLoading\"\n            [id]=\"focusableId\"\n            [listId]=\"listBoxId\"\n            [activeDescendant]=\"activeDescendant\"\n            [userInput]=\"text\"\n            [suggestedText]=\"suggestion\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [tabIndex]=\"tabIndex\"\n            [popupOpen]=\"isOpen\"\n            [placeholder]=\"placeholder\"\n            (onNavigate)=\"handleNavigate($event)\"\n            (valueChange)=\"searchBarChange($event)\"\n            (onBlur)=\"handleBlur()\"\n            (onFocus)=\"handleFocus()\"\n        ></kendo-searchbar>\n        <span\n            *ngIf=\"!loading && !readonly && (clearButton && text?.length)\"\n            class=\"k-clear-value\"\n            [style.visibility]=\"clearButtonVisiblity\"\n            [attr.title]=\"messageFor('clearTitle')\"\n            role=\"button\"\n            tabindex=\"-1\"\n            (click)=\"clearValue($event)\"\n            (mousedown)=\"$event.preventDefault()\"\n        >\n            <span class=\"k-icon k-i-x\"></span>\n        </span>\n        <span *ngIf=\"loading\" class=\"k-icon k-i-loading k-input-loading-icon\"></span>\n        <ng-template #popupTemplate>\n            <!--header template-->\n            <ng-template *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate.templateRef\n                }\">\n            </ng-template>\n            <!--list-->\n            <kendo-list\n                #optionsList\n                [size]=\"size\"\n                [rounded]=\"rounded\"\n                [id]=\"listBoxId\"\n                [optionPrefix]=\"optionPrefix\"\n                [data]=\"data\"\n                [textField]=\"valueField\"\n                [valueField]=\"valueField\"\n                [template]=\"template\"\n                [groupTemplate]=\"groupTemplate\"\n                [fixedGroupTemplate]=\"fixedGroupTemplate\"\n                [height]=\"listHeight\"\n                [show]=\"isOpen\"\n                [virtual]=\"virtual\"\n                (pageChange)=\"pageChange($event)\"\n            >\n            </kendo-list>\n            <!--no-data template-->\n            <div class=\"k-no-data\" *ngIf=\"data.length === 0\">\n                <ng-template [ngIf]=\"noDataTemplate\"\n                    [templateContext]=\"{\n                        templateRef: noDataTemplate?.templateRef\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!noDataTemplate\">\n                    <div>{{ messageFor('noDataText') }}</div>\n                </ng-template>\n            </div>\n            <!--footer template-->\n            <ng-template *ngIf=\"footerTemplate\"\n                [templateContext]=\"{\n                    templateRef: footerTemplate.templateRef\n                }\">\n            </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"isOpen\">\n            <kendo-resize-sensor (resize)=\"onResize()\"></kendo-resize-sensor>\n        </ng-template>\n        <ng-container #container></ng-container>\n  `, isInline: true, components: [{ type: SearchBarComponent, selector: \"kendo-searchbar\", inputs: [\"id\", \"listId\", \"tagListId\", \"activeDescendant\", \"disabled\", \"readonly\", \"tabIndex\", \"popupOpen\", \"role\", \"isLoading\", \"isSuggestable\", \"isFilterable\", \"userInput\", \"suggestedText\", \"placeholder\"], outputs: [\"valueChange\", \"onBlur\", \"onFocus\", \"onClick\", \"onNavigate\"] }, { type: ListComponent, selector: \"kendo-list\", inputs: [\"selected\", \"focused\", \"textField\", \"valueField\", \"height\", \"template\", \"groupTemplate\", \"fixedGroupTemplate\", \"show\", \"id\", \"optionPrefix\", \"multipleSelection\", \"virtual\", \"type\", \"checkboxes\", \"ariaLive\", \"isMultiselect\", \"data\", \"size\", \"rounded\"], outputs: [\"onClick\", \"pageChange\", \"listResize\"] }, { type: i9.ResizeSensorComponent, selector: \"kendo-resize-sensor\", inputs: [\"rateLimit\"], outputs: [\"resize\"] }], directives: [{ type: LocalizedMessagesDirective, selector: \"\\n    [kendoDropDownListLocalizedMessages],\\n    [kendoDropDownTreeLocalizedMessages],\\n    [kendoComboBoxLocalizedMessages],\\n    [kendoMultiColumnComboBoxLocalizedMessages],\\n    [kendoAutoCompleteLocalizedMessages],\\n    [kendoMultiSelectLocalizedMessages],\\n    [kendoMultiSelectTreeLocalizedMessages]\\n  \" }, { type: i11.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TemplateContextDirective, selector: \"[templateContext]\", inputs: [\"templateContext\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: AutoCompleteComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoAutoComplete',\n                    providers: [\n                        AUTOCOMPLETE_VALUE_ACCESSOR,\n                        DataService,\n                        SelectionService,\n                        NavigationService,\n                        DisabledItemsService,\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.autocomplete'\n                        },\n                        {\n                            provide: FilterableComponent,\n                            useExisting: forwardRef(() => AutoCompleteComponent)\n                        },\n                        {\n                            provide: KendoInput,\n                            useExisting: forwardRef(() => AutoCompleteComponent)\n                        }\n                    ],\n                    selector: 'kendo-autocomplete',\n                    template: `\n        <ng-container kendoAutoCompleteLocalizedMessages\n            i18n-noDataText=\"kendo.autocomplete.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.autocomplete.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n        >\n        </ng-container>\n        <kendo-searchbar #searchbar\n            [role]=\"'combobox'\"\n            [isSuggestable]=\"suggest\"\n            [isFilterable]=\"filterable\"\n            [isLoading]=\"isLoading\"\n            [id]=\"focusableId\"\n            [listId]=\"listBoxId\"\n            [activeDescendant]=\"activeDescendant\"\n            [userInput]=\"text\"\n            [suggestedText]=\"suggestion\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [tabIndex]=\"tabIndex\"\n            [popupOpen]=\"isOpen\"\n            [placeholder]=\"placeholder\"\n            (onNavigate)=\"handleNavigate($event)\"\n            (valueChange)=\"searchBarChange($event)\"\n            (onBlur)=\"handleBlur()\"\n            (onFocus)=\"handleFocus()\"\n        ></kendo-searchbar>\n        <span\n            *ngIf=\"!loading && !readonly && (clearButton && text?.length)\"\n            class=\"k-clear-value\"\n            [style.visibility]=\"clearButtonVisiblity\"\n            [attr.title]=\"messageFor('clearTitle')\"\n            role=\"button\"\n            tabindex=\"-1\"\n            (click)=\"clearValue($event)\"\n            (mousedown)=\"$event.preventDefault()\"\n        >\n            <span class=\"k-icon k-i-x\"></span>\n        </span>\n        <span *ngIf=\"loading\" class=\"k-icon k-i-loading k-input-loading-icon\"></span>\n        <ng-template #popupTemplate>\n            <!--header template-->\n            <ng-template *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate.templateRef\n                }\">\n            </ng-template>\n            <!--list-->\n            <kendo-list\n                #optionsList\n                [size]=\"size\"\n                [rounded]=\"rounded\"\n                [id]=\"listBoxId\"\n                [optionPrefix]=\"optionPrefix\"\n                [data]=\"data\"\n                [textField]=\"valueField\"\n                [valueField]=\"valueField\"\n                [template]=\"template\"\n                [groupTemplate]=\"groupTemplate\"\n                [fixedGroupTemplate]=\"fixedGroupTemplate\"\n                [height]=\"listHeight\"\n                [show]=\"isOpen\"\n                [virtual]=\"virtual\"\n                (pageChange)=\"pageChange($event)\"\n            >\n            </kendo-list>\n            <!--no-data template-->\n            <div class=\"k-no-data\" *ngIf=\"data.length === 0\">\n                <ng-template [ngIf]=\"noDataTemplate\"\n                    [templateContext]=\"{\n                        templateRef: noDataTemplate?.templateRef\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!noDataTemplate\">\n                    <div>{{ messageFor('noDataText') }}</div>\n                </ng-template>\n            </div>\n            <!--footer template-->\n            <ng-template *ngIf=\"footerTemplate\"\n                [templateContext]=\"{\n                    templateRef: footerTemplate.templateRef\n                }\">\n            </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"isOpen\">\n            <kendo-resize-sensor (resize)=\"onResize()\"></kendo-resize-sensor>\n        </ng-template>\n        <ng-container #container></ng-container>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: DataService }, { type: i2.PopupService }, { type: SelectionService }, { type: NavigationService }, { type: DisabledItemsService }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TOUCH_ENABLED]\n                }] }]; }, propDecorators: { highlightFirst: [{\n                type: Input\n            }], focusableId: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], valueField: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], popupSettings: [{\n                type: Input\n            }], listHeight: [{\n                type: Input\n            }], loading: [{\n                type: Input\n            }], clearButton: [{\n                type: Input\n            }], suggest: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], itemDisabled: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input,\n                args: [\"tabIndex\"]\n            }], filterable: [{\n                type: Input\n            }], virtual: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], rounded: [{\n                type: Input\n            }], fillMode: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], filterChange: [{\n                type: Output\n            }], open: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }], closed: [{\n                type: Output\n            }], onFocus: [{\n                type: Output,\n                args: ['focus']\n            }], onBlur: [{\n                type: Output,\n                args: ['blur']\n            }], template: [{\n                type: ContentChild,\n                args: [ItemTemplateDirective, { static: false }]\n            }], headerTemplate: [{\n                type: ContentChild,\n                args: [HeaderTemplateDirective, { static: false }]\n            }], footerTemplate: [{\n                type: ContentChild,\n                args: [FooterTemplateDirective, { static: false }]\n            }], noDataTemplate: [{\n                type: ContentChild,\n                args: [NoDataTemplateDirective, { static: false }]\n            }], groupTemplate: [{\n                type: ContentChild,\n                args: [GroupTemplateDirective, { static: false }]\n            }], fixedGroupTemplate: [{\n                type: ContentChild,\n                args: [FixedGroupTemplateDirective, { static: false }]\n            }], container: [{\n                type: ViewChild,\n                args: ['container', { read: ViewContainerRef, static: true }]\n            }], popupTemplate: [{\n                type: ViewChild,\n                args: ['popupTemplate', { static: true }]\n            }], searchbar: [{\n                type: ViewChild,\n                args: [SearchBarComponent, { static: true }]\n            }], optionsList: [{\n                type: ViewChild,\n                args: ['optionsList', { static: false }]\n            }], widgetClasses: [{\n                type: HostBinding,\n                args: ['class.k-autocomplete']\n            }, {\n                type: HostBinding,\n                args: ['class.k-input']\n            }], isDisabled: [{\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }], isLoading: [{\n                type: HostBinding,\n                args: ['class.k-loading']\n            }], dir: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }] } });\n\n/**\n * @hidden\n */\nconst MultiselectMessages = {\n    'array': 'Expected values of array type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselect/#value-selection',\n    'object': 'Expected values of Object type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselect/#value-selection',\n    'primitive': 'Expected values of primitive type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselect/#value-selection',\n    'textAndValue': 'Expected textField and valueField options to be set. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselect/#toc-bind-to-arrays-of-complex-data'\n};\n/**\n * @hidden\n */\nconst MultiSelectTreeMessages = {\n    'array': 'Expected values of array type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselecttree/#value-selection',\n    'primitive': 'Expected values of primitive type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselecttree/value-binding/#toc-primitive-values',\n    'object': 'Expected values of type Object. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselecttree/value-binding/#toc-object-values',\n    'dataItems': 'Expected dataItems of type Object[] to be set. See https://www.telerik.com/kendo-angular-ui/components/dropdowns/api/MultiSelectTreeComponent/#toc-dataitems',\n    'dataItemsLength': 'Expected dataItems length to match the number of provided values. See https://www.telerik.com/kendo-angular-ui/components/dropdowns/api/MultiSelectTreeComponent/#toc-dataitems',\n    'textAndValue': 'Expected textField and valueField options to be set. See https://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselecttree/value-binding',\n    'valueDepth': 'Expected valueDepth of type number[] to be set. See https://www.telerik.com/kendo-angular-ui-develop/components/dropdowns/api/MultiSelectTreeComponent/#toc-valuedepth',\n    'valueDepthLength': 'Expected valueDepth length to match the number of provided values. See https://www.telerik.com/kendo-angular-ui-develop/components/dropdowns/api/MultiSelectTreeComponent/#toc-valuedepth'\n};\n/**\n * @hidden\n */\nconst ComboBoxMessages = {\n    'object': 'Expected value of type Object. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/combobox/#toc-value-selection',\n    'primitive': 'Expected value of primitive type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/combobox/#toc-value-selection',\n    'textAndValue': 'Expected textField and valueField options to be set. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/combobox/#toc-bind-to-arrays-of-complex-data',\n    'noItemHeight': 'Expected virtual.itemHeight of type number.'\n};\n/**\n * @hidden\n */\nconst MultiColumnComboBoxMessages = {\n    'data': 'Provided data must consist only of objects. See https://www.telerik.com/kendo-angular-ui/components/dropdowns/multicolumncombobox/data-binding/',\n    'textAndValue': 'Expected textField and valueField options to be set. See https://www.telerik.com/kendo-angular-ui/components/dropdowns/multicolumncombobox/data-binding/#toc-fields-configuration'\n};\n/**\n * @hidden\n */\nconst DropDownListMessages = {\n    'defaultItem': 'defaultItem and data items must be of same type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/api/DropDownListComponent/#toc-defaultitem',\n    'object': 'Expected value of type Object. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/dropdownlist/#toc-value-selection',\n    'primitive': 'Expected value of primitive type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/dropdownlist/#toc-value-selection',\n    'textAndValue': 'Expected textField and valueField options to be set. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/dropdownlist/#toc-bind-to-arrays-of-complex-data'\n};\n/**\n * @hidden\n */\nconst DropDownTreeMessages = {\n    'primitive': 'Expected value of primitive type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/dropdowntree/value-binding/#toc-primitive-values',\n    'object': 'Expected value of type Object. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/dropdowntree/value-binding/#toc-object-values',\n    'dataItem': 'Expected dataItem of type Object to be set. See https://www.telerik.com/kendo-angular-ui/components/dropdowns/api/DropDownTreeComponent/#toc-dataitem',\n    'textAndValue': 'Expected textField and valueField options to be set. See https://www.telerik.com/kendo-angular-ui/components/dropdowns/dropdowntree/value-binding',\n    'valueDepth': 'Expected valueDepth to be set. See https://www.telerik.com/kendo-angular-ui-develop/components/dropdowns/api/DropDownTreeComponent/#toc-valuedepth'\n};\n\n/**\n * @hidden\n */\nconst COMBOBOX_VALUE_ACCESSOR = {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ComboBoxComponent)\n};\nconst DEFAULT_SIZE$4 = 'medium';\nconst DEFAULT_ROUNDED$4 = 'medium';\nconst DEFAULT_FILL_MODE$4 = 'solid';\n/**\n * Represents the [Kendo UI ComboBox component for Angular]({% slug overview_combobox %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nclass ComboBoxComponent {\n    constructor(wrapper, localization, popupService, selectionService, navigationService, disabledItemsService, dataService, zone, cdr, renderer, touchEnabled) {\n        this.wrapper = wrapper;\n        this.localization = localization;\n        this.popupService = popupService;\n        this.selectionService = selectionService;\n        this.navigationService = navigationService;\n        this.disabledItemsService = disabledItemsService;\n        this.dataService = dataService;\n        this.zone = zone;\n        this.cdr = cdr;\n        this.renderer = renderer;\n        this.touchEnabled = touchEnabled;\n        this.selected = [];\n        /**\n         * @hidden\n         */\n        this.focusableId = `k-${guid()}`;\n        /**\n         * Specifies whether the ComboBox allows user-defined values that are not present in the dataset\n         * ([more information and examples]({% slug custom_values_combobox %})).\n         * Defaults to `false`.\n         */\n        this.allowCustom = false;\n        /**\n         * A user-defined callback which returns normalized custom values.\n         * Typically used when the data items are different from type `string`.\n         * @param { Any } value - The custom value defined by the user.\n         * @returns { Any }\n         *\n         * @example\n         * ```ts\n         * import { map } from 'rxjs/operators';\n         *\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *   <kendo-combobox\n         *       [allowCustom]=\"true\"\n         *       [data]=\"listItems\"\n         *       textField=\"text\"\n         *       valueField=\"value\"\n         *       [valueNormalizer]=\"valueNormalizer\"\n         *       (valueChange)=\"onValueChange($event)\"\n         *   >\n         *   </kendo-combobox>\n         * `\n         * })\n         *\n         * class AppComponent {\n         *   public listItems: Array<{ text: string, value: number }> = [\n         *       { text: \"Small\", value: 1 },\n         *       { text: \"Medium\", value: 2 },\n         *       { text: \"Large\", value: 3 }\n         *   ];\n         *\n         *   public onValueChange(value) {\n         *       console.log(\"valueChange : \", value);\n         *   }\n         *\n         *   public valueNormalizer = (text$: Observable<string>) => text$.pipe(map((text: string) => {\n         *      return { ProductID: null, ProductName: text };\n         *   }));\n         *\n         * }\n         * ```\n         */\n        this.valueNormalizer = (text) => text.pipe(map((userInput) => userInput));\n        /**\n         * The hint that is displayed when the component is empty.\n         *\n         */\n        this.placeholder = \"\";\n        /**\n         * Sets the height of the suggestions list. By default, `listHeight` is 200px.\n         *\n         * > The `listHeight` property affects only the list of suggestions and not the whole popup container.\n         * > To set the height of the popup container, use `popupSettings.height`.\n         */\n        this.listHeight = 200;\n        /**\n         * Enables the auto-completion of the text based on the first data item.\n         */\n        this.suggest = false;\n        /**\n         * If set to `true`, renders a button on hovering over the component.\n         * Clicking this button resets the value of the component to `undefined` and triggers the `change` event.\n         */\n        this.clearButton = true;\n        /**\n         * Sets the disabled state of the component.\n         */\n        this.disabled = false;\n        /**\n         * Sets the read-only state of the component.\n         */\n        this.readonly = false;\n        /**\n         * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n         */\n        this.tabindex = 0;\n        /**\n         * Enables the [filtering]({% slug filtering_combobox %}) functionality.\n         * If set to `true`, the component emits the `filterChange` event.\n         */\n        this.filterable = false;\n        /**\n         * Fires each time the value is changed&mdash;\n         * when the component is blurred or the value is cleared through the **Clear** button\n         * ([see example]({% slug overview_combobox %}#toc-events)).\n         * When the value of the component is programmatically changed to `ngModel` or `formControl`\n         * through its API or form binding, the `valueChange` event is not triggered because it\n         * might cause a mix-up with the built-in `valueChange` mechanisms of the `ngModel` or `formControl` bindings.\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires each time an item selection is changed\n         * ([see example]({% slug overview_combobox %}#toc-events)).\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Fires each time the user types in the input field.\n         * You can filter the source based on the passed filtration value\n         * ([see example]({% slug overview_combobox %}#toc-events)).\n         */\n        this.filterChange = new EventEmitter();\n        /**\n         * Fires each time the popup is about to open.\n         * This event is preventable. If you cancel it, the popup will remain closed.\n         */\n        this.open = new EventEmitter();\n        /**\n         * Fires after the popup has been opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Fires each time the popup is about to close.\n         * This event is preventable. If you cancel it, the popup will remain open.\n         */\n        this.close = new EventEmitter();\n        /**\n         * Fires after the popup has been closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Fires each time the user focuses the ComboBox.\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * Fires each time the ComboBox gets blurred.\n         */\n        this.onBlur = new EventEmitter();\n        this.widgetClasses = true;\n        this._isFocused = false;\n        this.listBoxId = guid();\n        this.optionPrefix = guid();\n        this.onChangeCallback = (_) => { };\n        this.onTouchedCallback = (_) => { };\n        /**\n         * Used for the default virtualization settings config.\n         */\n        this.defaultVirtualItemHeight = 28;\n        /**\n         * Used for the default virtualization settings config.\n         */\n        this.defaultVirtualPageSize = 50;\n        this._filtering = false;\n        this._text = '';\n        this.filterText = '';\n        this._open = false;\n        this._popupSettings = { animate: true };\n        this.popupMouseDownHandler = (event) => event.preventDefault();\n        this.customValueSubject = new Subject();\n        this.valueSubject = new Subject();\n        this.clearValueSubject = new Subject();\n        this.subs = new Subscription();\n        this._size = 'medium';\n        this._rounded = 'medium';\n        this._fillMode = 'solid';\n        validatePackage(packageMetadata);\n        this.direction = localization.rtl ? 'rtl' : 'ltr';\n        this.data = [];\n    }\n    set text(text) {\n        this._text = isPresent(text) ? text.toString() : \"\";\n    }\n    get text() {\n        return this._text;\n    }\n    /**\n     * @hidden\n     */\n    togglePopup(open) {\n        const isDisabled = this.disabled || this.readonly;\n        const sameState = this.isOpen === open;\n        if (isDisabled || sameState) {\n            return;\n        }\n        const isDefaultPrevented = this.triggerPopupEvents(open);\n        if (!isDefaultPrevented) {\n            this._toggle(open);\n        }\n    }\n    get activeDescendant() {\n        if (!this.isOpen || !isPresent(this.selectionService.focused) || this.selectionService.focused === -1) {\n            return null;\n        }\n        const dataItem = this.dataService.itemAt(this.selectionService.focused);\n        return this.optionPrefix + \"-\" + (dataItem ? getter(dataItem, this.valueField) : \"\");\n    }\n    get appendTo() {\n        const { appendTo } = this.popupSettings;\n        if (!appendTo || appendTo === 'root') {\n            return undefined;\n        }\n        return appendTo === 'component' ? this.container : appendTo;\n    }\n    /**\n     * Sets the data of the ComboBox.\n     *\n     * > The data has to be provided in an array-like list.\n     */\n    set data(data) {\n        this.dataService.data = data || [];\n        if (this.virtual) {\n            this.virtual.skip = 0;\n        }\n        this.setState();\n        if (this._filtering) {\n            const queryAndDataPresent = this.text.length > 0 && this.dataService.itemsCount > 0;\n            const index = queryAndDataPresent ? this.firstFocusableIndex(0) : -1;\n            this.selectionService.focused = index;\n        }\n        if (this.suggest && this.dataService.itemsCount && this.text) {\n            this.suggestedText = getter(this.dataService.itemAt(0), this.textField);\n        }\n    }\n    get data() {\n        const virtual = this.virtual;\n        if (virtual) {\n            const start = virtual.skip || 0;\n            const end = start + virtual.pageSize;\n            // Use length instead of itemsCount because of the grouping.\n            virtual.total = this.dataService.data.length;\n            return this.dataService.data.slice(start, end);\n        }\n        return this.dataService.data;\n    }\n    /**\n     * Sets the value of the ComboBox.\n     * It can either be of the primitive (string, numbers) or of the complex (objects) type.\n     * To define the type, use the `valuePrimitive` option.\n     *\n     * > All selected values which are not present in the dataset are considered custom values.\n     * > When the `Enter` key is pressed or the component loses focus, custom values get dismissed unless `allowCustom` is set to `true`.\n     */\n    set value(newValue) {\n        this._value = newValue;\n        this.setState();\n        this.cdr.markForCheck();\n    }\n    get value() {\n        return this._value;\n    }\n    /**\n     * Specifies the type of the selected value.\n     * If set to `true`, the selected value has to be of the primitive type\n     * ([more information and example]({% slug valuebinding_combobox %}#toc-primitive-values-from-object-fields)).\n     */\n    set valuePrimitive(isPrimitive) {\n        this._valuePrimitive = isPrimitive;\n    }\n    get valuePrimitive() {\n        if (!isPresent(this._valuePrimitive)) {\n            return !isPresent(this.valueField);\n        }\n        return this._valuePrimitive;\n    }\n    /**\n     * Configures the popup of the ComboBox.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `width: Number | String`&mdash;Sets the width of the popup container. By default, the width of the host element is used. If set to `auto`, the component automatically adjusts the width of the popup and no item labels are wrapped. The `auto` mode is not supported when virtual scrolling is enabled.\n     * - `height: Number`&mdash;Sets the height of the popup container.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n     */\n    set popupSettings(settings) {\n        this._popupSettings = Object.assign({ animate: true }, settings);\n    }\n    get popupSettings() {\n        return this._popupSettings;\n    }\n    /**\n     * Defines a Boolean function that is executed for each data item in the component\n     * ([see examples]({% slug disableditems_combobox %})). Determines whether the item will be disabled.\n     */\n    set itemDisabled(fn) {\n        if (typeof fn !== 'function') {\n            throw new Error(`itemDisabled must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this.disabledItemsService.itemDisabled = fn;\n    }\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n        this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n        return this.tabindex;\n    }\n    /**\n     * Enables the [virtualization]({% slug virtualization_combobox %}) functionality.\n     */\n    set virtual(settings) {\n        this._virtualSettings = normalizeVirtualizationSettings(settings, {\n            itemHeight: this.defaultVirtualItemHeight,\n            pageSize: this.defaultVirtualPageSize\n        });\n    }\n    get virtual() {\n        return this._virtualSettings;\n    }\n    /**\n     * Sets the size of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     *\n     */\n    set size(size) {\n        const newSize = size ? size : DEFAULT_SIZE$4;\n        this.renderer.removeClass(this.wrapper.nativeElement, getSizeClass('input', this.size));\n        if (size !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('input', newSize));\n        }\n        this._size = newSize;\n    }\n    get size() {\n        return this._size;\n    }\n    /**\n     * Sets the border radius of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `full`\n     * * `none`\n     *\n     */\n    set rounded(rounded) {\n        const newRounded = rounded ? rounded : DEFAULT_ROUNDED$4;\n        this.renderer.removeClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n        if (rounded !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(newRounded));\n        }\n        this._rounded = newRounded;\n    }\n    get rounded() {\n        return this._rounded;\n    }\n    /**\n     * Sets the fillMode of the component.\n     *\n     * The possible values are:\n     * * `flat`\n     * * `solid` (default)\n     * * `outline`\n     * * `none`\n     *\n     */\n    set fillMode(fillMode) {\n        const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$4;\n        this.renderer.removeClass(this.wrapper.nativeElement, getFillModeClass('input', this.fillMode));\n        if (fillMode !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('input', newFillMode));\n        }\n        this._fillMode = newFillMode;\n    }\n    get fillMode() {\n        return this._fillMode;\n    }\n    get isDisabled() {\n        return this.disabled;\n    }\n    get isLoading() {\n        return this.loading;\n    }\n    get dir() {\n        return this.direction;\n    }\n    get isFocused() {\n        return this._isFocused;\n    }\n    set isFocused(value) {\n        this.renderer[value ? 'addClass' : 'removeClass'](this.wrapper.nativeElement, \"k-focus\");\n        this._isFocused = value;\n    }\n    get clearButtonVisiblity() {\n        if (this.touchEnabled) {\n            return 'visible';\n        }\n    }\n    get popupWidth() {\n        let wrapperOffsetWidth = 0;\n        if (isDocumentAvailable()) {\n            wrapperOffsetWidth = this.wrapper.nativeElement.offsetWidth;\n        }\n        const width = this.popupSettings.width || wrapperOffsetWidth;\n        const minWidth = isNaN(wrapperOffsetWidth) ? wrapperOffsetWidth : `${wrapperOffsetWidth}px`;\n        const maxWidth = isNaN(width) ? width : `${width}px`;\n        return { min: minWidth, max: maxWidth };\n    }\n    get popupHeight() {\n        const popupHeight = this.popupSettings.height;\n        return isPresent(popupHeight) ? `${popupHeight}px` : 'auto';\n    }\n    ngOnInit() {\n        this.renderer.removeAttribute(this.wrapper.nativeElement, 'tabindex');\n        this.attachStreams();\n        this.createValueStream();\n        this.subscribeTouchEvents();\n        this.attachSelectClickHandler();\n        this.setComponentClasses();\n    }\n    createValueStream() {\n        const valueStream = this.valueSubject.pipe(filter((candidate) => {\n            const current = getter(this.value, this.valueField);\n            const newValue = getter(candidate, this.valueField);\n            let newText = getter(candidate, this.textField);\n            if (!isPresent(this.value) && !isPresent(newValue)) {\n                return false;\n            }\n            if (isPresent(newText)) {\n                newText = newText.toString();\n            }\n            if (current === newValue && this.text === newText) {\n                this.clearFilter();\n                return false;\n            }\n            else {\n                return true;\n            }\n        }), map((candidate) => {\n            const newValue = getter(candidate, this.valueField);\n            const newText = getter(candidate, this.textField);\n            return {\n                dataItem: candidate,\n                text: newText,\n                value: this.valuePrimitive ? newValue : candidate\n            };\n        }));\n        const customValueStreams = partition(() => this.allowCustom)(this.customValueSubject.pipe(throttleTime(300)));\n        const allowCustomValueStream = customValueStreams[0].pipe(tap(() => {\n            this.loading = true;\n            this.disabled = true;\n            this.cdr.detectChanges();\n        }), filter(() => {\n            const hasChange = this.text !== getter(this.value, this.valueField);\n            this.loading = hasChange;\n            this.disabled = hasChange;\n            if (!hasChange) {\n                this.clearFilter();\n            }\n            return hasChange;\n        }), this.valueNormalizer, map((normalizedValue) => {\n            return {\n                custom: true,\n                dataItem: normalizedValue,\n                text: this.text,\n                value: normalizedValue\n            };\n        }));\n        const disableCustomValueStream = customValueStreams[1].pipe(map(() => {\n            return {\n                custom: true,\n                dataItem: undefined,\n                text: undefined,\n                value: undefined\n            };\n        }));\n        const clearValueStream = this.clearValueSubject.pipe(map(() => ({\n            dataItem: undefined,\n            text: undefined,\n            value: undefined\n        })));\n        if (this.valueSubscription) {\n            this.valueSubscription.unsubscribe();\n        }\n        const merged = merge(valueStream, allowCustomValueStream, disableCustomValueStream, clearValueStream);\n        this.valueSubscription = merged.pipe(catchError(() => {\n            const selectionChanged = getter(this.dataItem, this.valueField) !== undefined;\n            this.dataItem = undefined;\n            this.value = undefined;\n            this.text = undefined;\n            this.loading = false;\n            this.disabled = false;\n            if (selectionChanged) {\n                this.selectionChange.emit(undefined);\n            }\n            this.emitValueChange();\n            this.createValueStream();\n            return of(null);\n        }))\n            .subscribe((state) => {\n            const selectionChanged = getter(this.dataItem, this.valueField) !== getter(state.dataItem, this.valueField);\n            this.dataItem = state.dataItem;\n            this.value = state.value;\n            this.text = state.text;\n            this.loading = false;\n            this.disabled = false;\n            this.clearFilter();\n            if (state.custom) {\n                this.selectionService.focused = -1;\n            }\n            if (selectionChanged) {\n                const selectionArgs = state.custom ? undefined : this.dataItem;\n                this.selectionChange.emit(selectionArgs);\n            }\n            this.emitValueChange();\n        });\n    }\n    attachStreams() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        this.subs.add(this.localization\n            .changes.subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n            this.cdr.detectChanges();\n        }));\n        this.subs.add(merge(this.navigationService.up, this.navigationService.down, this.navigationService.home, this.navigationService.end)\n            .pipe(filter((event) => isPresent(event.index)))\n            .subscribe((event) => this.navigate(event.index)));\n        this.subs.add(this.navigationService.open.subscribe(this.handleNavigationOpen.bind(this)));\n        this.subs.add(this.navigationService.close.subscribe(() => this.togglePopup(false)));\n        this.subs.add(merge(this.navigationService.pagedown, this.navigationService.pageup).subscribe((event) => {\n            if (this.isOpen) {\n                event.originalEvent.preventDefault();\n                this.optionsList.scrollWithOnePage(NavigationAction[event.originalEvent.code]);\n            }\n        }));\n        this.subs.add(this.navigationService.esc.subscribe(this.handleEscape.bind(this)));\n        this.subs.add(this.navigationService.enter.pipe(tap((event) => {\n            if (this.isOpen) {\n                event.originalEvent.preventDefault();\n            }\n        }))\n            .subscribe(this.handleEnter.bind(this)));\n        this.subs.add(merge(this.selectionService.onChange, this.selectionService.onSelect.pipe(filter(_ => !this.isOpen)))\n            .pipe(tap(_ => {\n            this._filtering = false;\n            this.togglePopup(false);\n        }), map((event) => this.dataService.itemAt(event.indices[0])))\n            .subscribe(dataItem => {\n            this.change(dataItem);\n        }));\n        this.subs.add(this.selectionService.onSelect.pipe(filter(_ => this.isOpen), tap(_ => this._filtering = false), map((event) => this.dataService.itemAt(event.indices[0])))\n            .subscribe(dataItem => {\n            const selectionChanged = getter(dataItem, this.valueField) !== getter(this.dataItem, this.valueField);\n            this.updateState({ dataItem });\n            if (selectionChanged) {\n                this.selectionChange.emit(dataItem);\n            }\n        }));\n    }\n    ngOnDestroy() {\n        this.destroyPopup();\n        this.subs.unsubscribe();\n        if (isPresent(this.valueSubscription)) {\n            this.valueSubscription.unsubscribe();\n        }\n        if (this.touchstartDisposeHandler) {\n            this.touchstartDisposeHandler();\n        }\n        if (this.selectClickDisposeHandler) {\n            this.selectClickDisposeHandler();\n        }\n    }\n    ngOnChanges(changes) {\n        const virtual = this.virtual;\n        const requestInitialData = virtual && changes.data && changes.data.isFirstChange();\n        if (requestInitialData) {\n            this.pageChange({ skip: 0, take: virtual.pageSize });\n        }\n        if (isChanged('valueNormalizer', changes)) {\n            this.createValueStream();\n        }\n        if (anyChanged(['textField', 'valueField', 'valuePrimitive'], changes, false)) {\n            this.setState();\n        }\n    }\n    ngAfterContentChecked() {\n        this.verifySettings();\n    }\n    /**\n     * Focuses a specific item of the ComboBox based on a provided index.\n     * If null or invalid index is provided the focus will be removed.\n     */\n    focusItemAt(index) {\n        const isInRange = index >= 0 && index < this.data.length;\n        if (isPresent(index) && isInRange && !this.disabledItemsService.isIndexDisabled(index)) {\n            this.selectionService.focus(index);\n        }\n        else {\n            this.selectionService.focus(-1);\n        }\n    }\n    /**\n     * Focuses the ComboBox.\n     */\n    focus() {\n        if (!this.disabled) {\n            this.searchbar.focus();\n        }\n    }\n    /**\n     * Blurs the ComboBox.\n     */\n    blur() {\n        if (!this.disabled) {\n            this.searchbar.blur();\n        }\n    }\n    /**\n     * Toggles the visibility of the popup. If you use the `toggle` method to open or close the popup,\n     * the `open` and `close` events will not be fired.\n     *\n     * @param open - The state of the popup.\n     */\n    toggle(open) {\n        Promise.resolve(null).then(() => {\n            const shouldOpen = isPresent(open) ? open : !this._open;\n            this._toggle(shouldOpen);\n            this.cdr.markForCheck();\n        });\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n    get isOpen() {\n        return this._open;\n    }\n    /**\n     * Resets the value of the ComboBox.\n     * If you use the `reset` method to clear the value of the component,\n     * the model will not update automatically and the `selectionChange` and `valueChange` events will not be fired.\n     */\n    reset() {\n        this.value = undefined;\n        this.clearState();\n        this.resetSelection();\n    }\n    /**\n     * @hidden\n     *\n     * Used by the TextBoxContainer to determine if the floating label\n     * should be rendered in the input when the component is not focused.\n     */\n    isEmpty() {\n        const textEmpty = !isPresent(this.text) || isEmptyString(this.text);\n        const valueEmpty = !isPresent(this.value) || isEmptyString(this.value);\n        return textEmpty && valueEmpty;\n    }\n    /**\n     * @hidden\n     */\n    messageFor(key) {\n        return this.localization.get(key);\n    }\n    /**\n     * @hidden\n     */\n    clearValue(event) {\n        event === null || event === void 0 ? void 0 : event.stopImmediatePropagation();\n        if (event) {\n            this.focus();\n        }\n        this._previousDataItem = undefined;\n        this.selectionService.resetSelection([]);\n        this.clearValueSubject.next();\n        this._filtering = false;\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.value = value === null ? undefined : value;\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @hidden\n     */\n    get buttonClasses() {\n        return this.loading ? 'k-i-loading k-input-loading-icon' : this.iconClass || 'k-i-caret-alt-down';\n    }\n    /**\n     * @hidden\n     */\n    get selectButtonClasses() {\n        return `${this.size ? getSizeClass('button', this.size) : ''} ${this.fillMode ? 'k-button-' + this.fillMode : ''} ${this.fillMode ? 'k-button-' + this.fillMode + '-base' : ''}\n        `;\n    }\n    /**\n     * @hidden\n     */\n    onResize() {\n        if (this.isOpen) {\n            const popupWrapper = this.popupRef.popupElement;\n            const { min, max } = this.popupWidth;\n            popupWrapper.style.minWidth = min;\n            popupWrapper.style.width = max;\n        }\n    }\n    verifySettings() {\n        if (!isDevMode()) {\n            return;\n        }\n        if (this.valuePrimitive === true && isPresent(this.value) && typeof this.value === \"object\") {\n            throw new Error(ComboBoxMessages.primitive);\n        }\n        if (this.valuePrimitive === false && isPresent(this.value) && typeof this.value !== \"object\") {\n            throw new Error(ComboBoxMessages.object);\n        }\n        const valueOrText = !isPresent(this.valueField) !== !isPresent(this.textField);\n        if (valueOrText) {\n            throw new Error(ComboBoxMessages.textAndValue);\n        }\n        if (this.virtual && isNaN(this.virtual.itemHeight)) {\n            throw new Error(ComboBoxMessages.noItemHeight);\n        }\n    }\n    setState() {\n        // Filtering in process, do nothing.\n        if (this._filtering) {\n            return;\n        }\n        const value = this.value;\n        const valueField = this.valueField;\n        const resolved = this.findDataItem({ valueField, value });\n        if (isPresent(resolved.index) && resolved.index !== -1) {\n            this.updateState({ dataItem: resolved.dataItem, confirm: true });\n            this.resetSelection(resolved.index);\n        }\n        else if (isPresent(value) && this.allowCustom) {\n            this.updateState({ dataItem: value });\n            this.resetSelection(-1);\n        }\n        else if (this._previousDataItem && this.value) {\n            this.updateState({ dataItem: this._previousDataItem });\n            this.resetSelection();\n        }\n        else {\n            this.clearState();\n            this.resetSelection(-1);\n        }\n    }\n    updateState({ dataItem, confirm = false }) {\n        this.dataItem = dataItem;\n        this.text = getter(dataItem, this.textField);\n        if (confirm) {\n            this._previousDataItem = dataItem;\n        }\n    }\n    clearState() {\n        this.text = undefined;\n        this.dataItem = undefined;\n    }\n    resetSelection(index) {\n        const clear = !isPresent(index) || index < 0;\n        this.selectionService.resetSelection(clear ? [] : [index]);\n        this.selectionService.focused = index;\n    }\n    firstFocusableIndex(index) {\n        const maxIndex = this.data.length - 1;\n        if (this.disabledItemsService.isIndexDisabled(index)) {\n            return (index < maxIndex) ? this.firstFocusableIndex(index + 1) : undefined;\n        }\n        else {\n            return index;\n        }\n    }\n    findIndexPredicate(text) {\n        if (this.dataService.grouped) {\n            return (item) => {\n                let itemText = getter(item.value, this.textField);\n                itemText = !isPresent(itemText) ? \"\" : itemText.toString().toLowerCase();\n                return itemText.startsWith(text.toLowerCase());\n            };\n        }\n        else {\n            return (item) => {\n                let itemText = getter(item, this.textField);\n                itemText = !isPresent(itemText) ? \"\" : itemText.toString().toLowerCase();\n                return itemText.startsWith(text.toLowerCase());\n            };\n        }\n    }\n    findDataItem({ valueField, value }) {\n        const result = {\n            dataItem: null,\n            index: -1\n        };\n        const comparer = (element) => {\n            const dataItem = this.dataService.grouped ? element.value : element;\n            return getter(dataItem, valueField) === getter(value, valueField);\n        };\n        const index = this.dataService.findIndex(comparer);\n        result.dataItem = this.dataService.itemAt(index);\n        result.index = index;\n        return result;\n    }\n    search(text, startFrom = 0) {\n        let index;\n        if (text.length && this.dataService.itemsCount) {\n            index = this.dataService.findIndex(this.findIndexPredicate(text), startFrom);\n        }\n        else {\n            index = -1;\n        }\n        if (this.disabledItemsService.isIndexDisabled(index)) {\n            if (index + 1 < this.dataService.itemsCount) {\n                this.search(text, index + 1);\n            }\n            else {\n                this.selectionService.focus(-1);\n            }\n        }\n        else {\n            this.selectionService.focus(index);\n            if (this.suggest) {\n                this.suggestedText = getter(this.dataService.itemAt(index), this.textField);\n            }\n        }\n    }\n    /**\n     * @hidden\n     */\n    getSuggestion() {\n        const hasSelected = !!this.selectionService.selected.length;\n        const shouldSuggest = this.suggest && !this.backspacePressed && this.suggestedText && this.text;\n        if (!hasSelected && shouldSuggest && this.suggestedText.toLowerCase().startsWith(this.text.toLowerCase())) {\n            return this.suggestedText;\n        }\n        else {\n            this.suggestedText = undefined;\n        }\n    }\n    navigate(index) {\n        if (this.dataService.itemsCount === 0) {\n            return;\n        }\n        this.text = getter(this.dataService.itemAt(index), this.textField);\n        this.selectionService.select(index);\n    }\n    /**\n     * @hidden\n     */\n    handleNavigate(event) {\n        const hasSelected = isPresent(this.selectionService.selected[0]);\n        const focused = isNaN(this.selectionService.focused) ? this.firstFocusableIndex(0) : this.selectionService.focused;\n        let offset = 0;\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        if (event.keyCode === Keys.Home || event.keyCode === Keys.End) {\n            return;\n        }\n        if (!hasSelected) {\n            if (event.keyCode === Keys.ArrowDown) {\n                offset = -1;\n            }\n            else if (event.keyCode === Keys.ArrowUp) {\n                offset = 1;\n            }\n        }\n        const action = this.navigationService.process({\n            current: offset + focused,\n            max: this.dataService.itemsCount - 1,\n            min: 0,\n            originalEvent: event\n        });\n        if (action !== NavigationAction.Undefined &&\n            action !== NavigationAction.Left &&\n            action !== NavigationAction.Right &&\n            action !== NavigationAction.Backspace &&\n            action !== NavigationAction.Delete &&\n            action !== NavigationAction.PageDown &&\n            action !== NavigationAction.PageUp &&\n            ((action === NavigationAction.Enter && this.isOpen) || action !== NavigationAction.Enter)) {\n            event.preventDefault();\n        }\n    }\n    handleEnter() {\n        const text = this.text;\n        const focused = this.selectionService.focused;\n        const hasFocused = isPresent(focused) && focused !== -1;\n        const previousText = getter(this._previousDataItem, this.textField) || \"\";\n        const focusedItemText = getter(this.dataService.itemAt(focused), this.textField);\n        const textHasChanged = text !== previousText;\n        this.togglePopup(false);\n        this._filtering = false;\n        if (this.allowCustom && textHasChanged) {\n            if (text === focusedItemText || this.useSuggestion()) {\n                this.selectionService.change(focused);\n            }\n            else {\n                this.change(text, true);\n            }\n        }\n        if (!this.allowCustom) {\n            if (hasFocused) {\n                this.selectionService.change(focused);\n            }\n            else if (textHasChanged) {\n                this.change(text, true);\n            }\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleBlur() {\n        this._filtering = false;\n        this.searchbar.input.nativeElement.scrollLeft = 0; // Firefox doesn't auto-scroll to the left on blur like other browsers\n        this.isFocused = false;\n        const unresolvedSelection = getter(this.dataItem, this.valueField) !== getter(this.value, this.valueField);\n        const currentText = this.searchbar.value;\n        const textHasChanged = currentText !== (getter(this.dataItem, this.textField) || '');\n        const valueHasChanged = unresolvedSelection || textHasChanged;\n        const runInZone = valueHasChanged || hasObservers(this.onBlur) || hasObservers(this.close) || isUntouched(this.wrapper.nativeElement);\n        if (runInZone) {\n            this.zone.run(() => {\n                if (valueHasChanged) {\n                    const lowerCaseMatch = isPresent(this.focusedItemText) && this.focusedItemText.toLowerCase() === currentText.toLowerCase();\n                    if (lowerCaseMatch || unresolvedSelection) {\n                        this.selectionService.change(this.selectionService.focused);\n                    }\n                    else {\n                        this.change(currentText, true);\n                    }\n                }\n                this.onBlur.emit();\n                this.onTouchedCallback();\n                this.togglePopup(false);\n            });\n        }\n        else {\n            this.togglePopup(false);\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleEscape() {\n        this.isOpen ? this.togglePopup(false) : this.clearValue();\n        // clear the focus only if the focused item is not selected\n        const hasSelected = this.selectionService.selected.length > 0;\n        if (!hasSelected) {\n            this.suggestedText = null;\n            this.selectionService.focused = -1;\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleNavigationOpen() {\n        this.restoreItemFocus();\n        this.togglePopup(true);\n    }\n    /**\n     * @hidden\n     */\n    searchBarChange(text) {\n        const currentTextLength = this.text ? this.text.length : 0;\n        this.backspacePressed = (text.length < currentTextLength) ? true : false;\n        this.text = text;\n        // Reset the selection prior to filter. If a match is present, it will be resolved. If a match is not present, it is not needed.\n        this.selectionService.resetSelection([]);\n        this.togglePopup(true);\n        this._filtering = true;\n        if (this.filterable && this.filterText !== text) {\n            this.filterText = text;\n            this.filterChange.emit(text);\n        }\n        else {\n            this.search(text);\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleFocus() {\n        this.isFocused = true;\n        if (hasObservers(this.onFocus)) {\n            this.zone.run(() => this.onFocus.emit());\n        }\n    }\n    /**\n     * @hidden\n     */\n    pageChange(event) {\n        const virtual = this.virtual;\n        virtual.skip = event.skip;\n    }\n    change(candidate, isCustom = false) {\n        if (isCustom) {\n            this.customValueSubject.next(candidate);\n        }\n        else {\n            this.valueSubject.next(candidate);\n        }\n    }\n    emitValueChange() {\n        this.onChangeCallback(this.value);\n        this.valueChange.emit(this.value);\n        this._previousDataItem = this.dataItem;\n    }\n    /**\n     * @hidden\n     */\n    selectClick() {\n        if (!this.touchEnabled) {\n            this.searchbar.focus();\n        }\n        if (!this.isOpen) {\n            this.restoreItemFocus();\n        }\n        this.togglePopup(!this.isOpen);\n    }\n    get listContainerClasses() {\n        return ['k-list-container', 'k-reset'].concat(this.popupSettings.popupClass || []);\n    }\n    /**\n     * @hidden\n     */\n    preventEventDefault(event) {\n        event.preventDefault();\n    }\n    get focusedItemText() {\n        const focused = this.selectionService.focused;\n        if (!isPresent(focused) || focused === -1) {\n            return null;\n        }\n        const itemText = getter(this.dataService.itemAt(focused), this.textField);\n        return !isPresent(itemText) ? \"\" : itemText.toString();\n    }\n    /**\n     * Focuses the first match when there's text in the input field, but no focused item.\n     */\n    restoreItemFocus() {\n        const hasFocus = isPresent(this.selectionService.focused) && this.selectionService.focused > -1;\n        if (!hasFocus && this.text && this.dataService.itemsCount) {\n            if (this.filterable) {\n                this.selectionService.focused = this.firstFocusableIndex(0);\n            }\n            else {\n                this.search(this.text);\n            }\n        }\n    }\n    useSuggestion() {\n        if (!(this.suggest && isPresent(this.searchbar.value))) {\n            return false;\n        }\n        const focusedDataItem = this.dataService.itemAt(this.selectionService.focused);\n        const focusedItemText = getter(focusedDataItem, this.textField);\n        if (!isPresent(focusedItemText)) {\n            return false;\n        }\n        return this.searchbar.value.toLowerCase() === focusedItemText.toLowerCase();\n    }\n    destroyPopup() {\n        if (this.popupRef) {\n            this.popupRef.popupElement\n                .removeEventListener('mousedown', this.popupMouseDownHandler);\n            this.popupRef.close();\n            this.popupRef = null;\n        }\n    }\n    createPopup() {\n        if (this.virtual) {\n            this.virtual.skip = 0;\n        }\n        const horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n        const anchorPosition = { horizontal: horizontalAlign, vertical: \"bottom\" };\n        const popupPosition = { horizontal: horizontalAlign, vertical: \"top\" };\n        this.popupRef = this.popupService.open({\n            anchor: this.wrapper,\n            animate: this.popupSettings.animate,\n            appendTo: this.appendTo,\n            content: this.popupTemplate,\n            popupClass: this.listContainerClasses,\n            positionMode: 'absolute',\n            anchorAlign: anchorPosition,\n            popupAlign: popupPosition\n        });\n        const popupWrapper = this.popupRef.popupElement;\n        const { min, max } = this.popupWidth;\n        popupWrapper.addEventListener('mousedown', this.popupMouseDownHandler);\n        popupWrapper.style.minWidth = min;\n        popupWrapper.style.width = max;\n        popupWrapper.style.height = this.popupHeight;\n        popupWrapper.setAttribute(\"dir\", this.direction);\n        const listBox = this.popupRef.popupElement.querySelector('ul');\n        const ariaLabel = this.searchbar.input.nativeElement.getAttribute('aria-labelledby');\n        if (ariaLabel) {\n            listBox.setAttribute('aria-labelledby', ariaLabel);\n        }\n        this.popupRef.popupOpen.subscribe(() => {\n            this.cdr.detectChanges();\n            this.optionsList.scrollToItem(this.selectionService.focused);\n            this.opened.emit();\n        });\n        this.popupRef.popupClose.subscribe(() => {\n            this.closed.emit();\n        });\n        this.popupRef.popupAnchorViewportLeave.subscribe(() => this.togglePopup(false));\n    }\n    _toggle(open) {\n        this._open = open;\n        this.destroyPopup();\n        if (this._open) {\n            this.createPopup();\n        }\n    }\n    triggerPopupEvents(open) {\n        const eventArgs = new PreventableEvent();\n        if (open) {\n            this.open.emit(eventArgs);\n        }\n        else {\n            this.close.emit(eventArgs);\n        }\n        return eventArgs.isDefaultPrevented();\n    }\n    clearFilter() {\n        if (!(this.filterable && this.filterText)) {\n            return;\n        }\n        this.filterText = '';\n        this.filterChange.emit(this.filterText);\n    }\n    subscribeTouchEvents() {\n        if (!isDocumentAvailable() || !this.touchEnabled) {\n            return;\n        }\n        this.zone.runOutsideAngular(() => \n        // Roll up ComboBox on iOS when tapped outside\n        this.touchstartDisposeHandler = this.renderer.listen(document, 'touchstart', (e) => {\n            const target = e.target;\n            const isInDropDown = inDropDown(this.wrapper, target, this.popupRef);\n            if (this.isFocused && !isInDropDown) {\n                // Close popup and mobile keyboard if searchbar is focused\n                this.zone.run(() => this.blur());\n            }\n            else if (this.isOpen && !isInDropDown) {\n                // Close popup if the popup is opened via the select click\n                this.zone.run(() => this.togglePopup(false));\n            }\n        }));\n    }\n    attachSelectClickHandler() {\n        const selectElement = this.select.nativeElement;\n        const event = pointers ? 'pointerdown' : 'click';\n        this.selectClickDisposeHandler = this.renderer.listen(selectElement, event, this.selectClick.bind(this));\n    }\n    setComponentClasses() {\n        if (this.size !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('input', this.size));\n        }\n        if (this.rounded !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n        }\n        if (this.fillMode !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('input', this.fillMode));\n        }\n    }\n}\nComboBoxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ComboBoxComponent, deps: [{ token: i0.ElementRef }, { token: i1.LocalizationService }, { token: i2.PopupService }, { token: SelectionService }, { token: NavigationService }, { token: DisabledItemsService }, { token: DataService }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.Renderer2 }, { token: TOUCH_ENABLED, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nComboBoxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ComboBoxComponent, selector: \"kendo-combobox\", inputs: { focusableId: \"focusableId\", allowCustom: \"allowCustom\", data: \"data\", value: \"value\", textField: \"textField\", valueField: \"valueField\", valuePrimitive: \"valuePrimitive\", valueNormalizer: \"valueNormalizer\", placeholder: \"placeholder\", popupSettings: \"popupSettings\", listHeight: \"listHeight\", iconClass: \"iconClass\", loading: \"loading\", suggest: \"suggest\", clearButton: \"clearButton\", disabled: \"disabled\", itemDisabled: \"itemDisabled\", readonly: \"readonly\", tabindex: \"tabindex\", tabIndex: \"tabIndex\", filterable: \"filterable\", virtual: \"virtual\", size: \"size\", rounded: \"rounded\", fillMode: \"fillMode\" }, outputs: { valueChange: \"valueChange\", selectionChange: \"selectionChange\", filterChange: \"filterChange\", open: \"open\", opened: \"opened\", close: \"close\", closed: \"closed\", onFocus: \"focus\", onBlur: \"blur\" }, host: { properties: { \"class.k-combobox\": \"this.widgetClasses\", \"class.k-input\": \"this.widgetClasses\", \"class.k-disabled\": \"this.isDisabled\", \"class.k-loading\": \"this.isLoading\", \"attr.dir\": \"this.dir\" } }, providers: [\n        COMBOBOX_VALUE_ACCESSOR,\n        DataService,\n        SelectionService,\n        NavigationService,\n        DisabledItemsService,\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.combobox'\n        },\n        {\n            provide: FilterableComponent, useExisting: forwardRef(() => ComboBoxComponent)\n        },\n        {\n            provide: KendoInput, useExisting: forwardRef(() => ComboBoxComponent)\n        }\n    ], queries: [{ propertyName: \"template\", first: true, predicate: ItemTemplateDirective, descendants: true }, { propertyName: \"headerTemplate\", first: true, predicate: HeaderTemplateDirective, descendants: true }, { propertyName: \"footerTemplate\", first: true, predicate: FooterTemplateDirective, descendants: true }, { propertyName: \"noDataTemplate\", first: true, predicate: NoDataTemplateDirective, descendants: true }, { propertyName: \"groupTemplate\", first: true, predicate: GroupTemplateDirective, descendants: true }, { propertyName: \"fixedGroupTemplate\", first: true, predicate: FixedGroupTemplateDirective, descendants: true }], viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true, read: ViewContainerRef, static: true }, { propertyName: \"popupTemplate\", first: true, predicate: [\"popupTemplate\"], descendants: true, static: true }, { propertyName: \"searchbar\", first: true, predicate: SearchBarComponent, descendants: true, static: true }, { propertyName: \"optionsList\", first: true, predicate: [\"optionsList\"], descendants: true }, { propertyName: \"select\", first: true, predicate: [\"select\"], descendants: true, static: true }], exportAs: [\"kendoComboBox\"], usesOnChanges: true, ngImport: i0, template: `\n        <ng-container kendoComboBoxLocalizedMessages\n            i18n-noDataText=\"kendo.combobox.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.combobox.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n\n            i18n-selectButtonText=\"kendo.combobox.selectButtonText|The text set as aria-label on the select button\"\n            selectButtonText=\"Select\"\n        >\n        </ng-container>\n        <kendo-searchbar #searchbar\n            [role]=\"'combobox'\"\n            [id]=\"focusableId\"\n            [listId]=\"listBoxId\"\n            [isLoading]=\"loading\"\n            [isSuggestable]=\"suggest\"\n            [isFilterable]=\"filterable\"\n            [activeDescendant]=\"activeDescendant\"\n            [userInput]=\"text\"\n            [suggestedText]=\"getSuggestion()\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [tabIndex]=\"tabIndex\"\n            [popupOpen]=\"isOpen\"\n            [placeholder]=\"placeholder\"\n            (onNavigate)=\"handleNavigate($event)\"\n            (valueChange)=\"searchBarChange($event)\"\n            (onBlur)=\"handleBlur()\"\n            (onFocus)=\"handleFocus()\"\n        ></kendo-searchbar>\n        <span\n            *ngIf=\"clearButton && !loading && !disabled && !readonly && text?.length\"\n            class=\"k-clear-value\"\n            [style.visibility]=\"clearButtonVisiblity\"\n            aria-hidden=\"true\"\n            [attr.title]=\"messageFor('clearTitle')\"\n            (click)=\"clearValue($event)\"\n            [kendoEventsOutsideAngular]=\"{\n                mousedown: preventEventDefault\n            }\"\n        >\n            <span class=\"k-icon k-i-x\"></span>\n        </span>\n        <button\n            #select\n            tabindex=\"-1\"\n            unselectable=\"on\"\n            type=\"button\"\n            class=\"k-input-button k-button k-icon-button\"\n            [ngClass]=\"selectButtonClasses\"\n            [attr.aria-label]=\"messageFor('selectButtonText')\"\n            [kendoEventsOutsideAngular]=\"{\n                mousedown: preventEventDefault\n            }\"\n        >\n            <span class=\"k-button-icon k-icon\" [ngClass]=\"buttonClasses\"></span>\n        </button>\n        <ng-template #popupTemplate>\n            <!--header template-->\n            <ng-template *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate.templateRef\n                }\">\n            </ng-template>\n            <!--list-->\n            <kendo-list\n                #optionsList\n                [size]=\"size\"\n                [rounded]=\"rounded\"\n                [id]=\"listBoxId\"\n                [optionPrefix]=\"optionPrefix\"\n                [data]=\"data\"\n                [textField]=\"textField\"\n                [valueField]=\"valueField\"\n                [template]=\"template\"\n                [groupTemplate]=\"groupTemplate\"\n                [fixedGroupTemplate]=\"fixedGroupTemplate\"\n                [height]=\"listHeight\"\n                [show]=\"isOpen\"\n                [virtual]=\"virtual\"\n                (pageChange)=\"pageChange($event)\"\n            >\n            </kendo-list>\n            <!--no-data template-->\n            <div class=\"k-no-data\" *ngIf=\"data.length === 0\">\n                <ng-template [ngIf]=\"noDataTemplate\"\n                    [templateContext]=\"{\n                        templateRef: noDataTemplate ? noDataTemplate.templateRef : undefined\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!noDataTemplate\">\n                    <div>{{ messageFor('noDataText') }}</div>\n                </ng-template>\n            </div>\n            <!--footer template-->\n            <ng-template *ngIf=\"footerTemplate\"\n                [templateContext]=\"{\n                    templateRef: footerTemplate.templateRef\n                }\">\n            </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"isOpen\">\n            <kendo-resize-sensor (resize)=\"onResize()\"></kendo-resize-sensor>\n        </ng-template>\n        <ng-container #container></ng-container>\n  `, isInline: true, components: [{ type: SearchBarComponent, selector: \"kendo-searchbar\", inputs: [\"id\", \"listId\", \"tagListId\", \"activeDescendant\", \"disabled\", \"readonly\", \"tabIndex\", \"popupOpen\", \"role\", \"isLoading\", \"isSuggestable\", \"isFilterable\", \"userInput\", \"suggestedText\", \"placeholder\"], outputs: [\"valueChange\", \"onBlur\", \"onFocus\", \"onClick\", \"onNavigate\"] }, { type: ListComponent, selector: \"kendo-list\", inputs: [\"selected\", \"focused\", \"textField\", \"valueField\", \"height\", \"template\", \"groupTemplate\", \"fixedGroupTemplate\", \"show\", \"id\", \"optionPrefix\", \"multipleSelection\", \"virtual\", \"type\", \"checkboxes\", \"ariaLive\", \"isMultiselect\", \"data\", \"size\", \"rounded\"], outputs: [\"onClick\", \"pageChange\", \"listResize\"] }, { type: i9.ResizeSensorComponent, selector: \"kendo-resize-sensor\", inputs: [\"rateLimit\"], outputs: [\"resize\"] }], directives: [{ type: LocalizedMessagesDirective, selector: \"\\n    [kendoDropDownListLocalizedMessages],\\n    [kendoDropDownTreeLocalizedMessages],\\n    [kendoComboBoxLocalizedMessages],\\n    [kendoMultiColumnComboBoxLocalizedMessages],\\n    [kendoAutoCompleteLocalizedMessages],\\n    [kendoMultiSelectLocalizedMessages],\\n    [kendoMultiSelectTreeLocalizedMessages]\\n  \" }, { type: i11.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i9.EventsOutsideAngularDirective, selector: \"[kendoEventsOutsideAngular]\", inputs: [\"kendoEventsOutsideAngular\", \"scope\"] }, { type: i11.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: TemplateContextDirective, selector: \"[templateContext]\", inputs: [\"templateContext\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ComboBoxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoComboBox',\n                    providers: [\n                        COMBOBOX_VALUE_ACCESSOR,\n                        DataService,\n                        SelectionService,\n                        NavigationService,\n                        DisabledItemsService,\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.combobox'\n                        },\n                        {\n                            provide: FilterableComponent, useExisting: forwardRef(() => ComboBoxComponent)\n                        },\n                        {\n                            provide: KendoInput, useExisting: forwardRef(() => ComboBoxComponent)\n                        }\n                    ],\n                    selector: 'kendo-combobox',\n                    template: `\n        <ng-container kendoComboBoxLocalizedMessages\n            i18n-noDataText=\"kendo.combobox.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.combobox.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n\n            i18n-selectButtonText=\"kendo.combobox.selectButtonText|The text set as aria-label on the select button\"\n            selectButtonText=\"Select\"\n        >\n        </ng-container>\n        <kendo-searchbar #searchbar\n            [role]=\"'combobox'\"\n            [id]=\"focusableId\"\n            [listId]=\"listBoxId\"\n            [isLoading]=\"loading\"\n            [isSuggestable]=\"suggest\"\n            [isFilterable]=\"filterable\"\n            [activeDescendant]=\"activeDescendant\"\n            [userInput]=\"text\"\n            [suggestedText]=\"getSuggestion()\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [tabIndex]=\"tabIndex\"\n            [popupOpen]=\"isOpen\"\n            [placeholder]=\"placeholder\"\n            (onNavigate)=\"handleNavigate($event)\"\n            (valueChange)=\"searchBarChange($event)\"\n            (onBlur)=\"handleBlur()\"\n            (onFocus)=\"handleFocus()\"\n        ></kendo-searchbar>\n        <span\n            *ngIf=\"clearButton && !loading && !disabled && !readonly && text?.length\"\n            class=\"k-clear-value\"\n            [style.visibility]=\"clearButtonVisiblity\"\n            aria-hidden=\"true\"\n            [attr.title]=\"messageFor('clearTitle')\"\n            (click)=\"clearValue($event)\"\n            [kendoEventsOutsideAngular]=\"{\n                mousedown: preventEventDefault\n            }\"\n        >\n            <span class=\"k-icon k-i-x\"></span>\n        </span>\n        <button\n            #select\n            tabindex=\"-1\"\n            unselectable=\"on\"\n            type=\"button\"\n            class=\"k-input-button k-button k-icon-button\"\n            [ngClass]=\"selectButtonClasses\"\n            [attr.aria-label]=\"messageFor('selectButtonText')\"\n            [kendoEventsOutsideAngular]=\"{\n                mousedown: preventEventDefault\n            }\"\n        >\n            <span class=\"k-button-icon k-icon\" [ngClass]=\"buttonClasses\"></span>\n        </button>\n        <ng-template #popupTemplate>\n            <!--header template-->\n            <ng-template *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate.templateRef\n                }\">\n            </ng-template>\n            <!--list-->\n            <kendo-list\n                #optionsList\n                [size]=\"size\"\n                [rounded]=\"rounded\"\n                [id]=\"listBoxId\"\n                [optionPrefix]=\"optionPrefix\"\n                [data]=\"data\"\n                [textField]=\"textField\"\n                [valueField]=\"valueField\"\n                [template]=\"template\"\n                [groupTemplate]=\"groupTemplate\"\n                [fixedGroupTemplate]=\"fixedGroupTemplate\"\n                [height]=\"listHeight\"\n                [show]=\"isOpen\"\n                [virtual]=\"virtual\"\n                (pageChange)=\"pageChange($event)\"\n            >\n            </kendo-list>\n            <!--no-data template-->\n            <div class=\"k-no-data\" *ngIf=\"data.length === 0\">\n                <ng-template [ngIf]=\"noDataTemplate\"\n                    [templateContext]=\"{\n                        templateRef: noDataTemplate ? noDataTemplate.templateRef : undefined\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!noDataTemplate\">\n                    <div>{{ messageFor('noDataText') }}</div>\n                </ng-template>\n            </div>\n            <!--footer template-->\n            <ng-template *ngIf=\"footerTemplate\"\n                [templateContext]=\"{\n                    templateRef: footerTemplate.templateRef\n                }\">\n            </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"isOpen\">\n            <kendo-resize-sensor (resize)=\"onResize()\"></kendo-resize-sensor>\n        </ng-template>\n        <ng-container #container></ng-container>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.LocalizationService }, { type: i2.PopupService }, { type: SelectionService }, { type: NavigationService }, { type: DisabledItemsService }, { type: DataService }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TOUCH_ENABLED]\n                }] }]; }, propDecorators: { focusableId: [{\n                type: Input\n            }], allowCustom: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], textField: [{\n                type: Input\n            }], valueField: [{\n                type: Input\n            }], valuePrimitive: [{\n                type: Input\n            }], valueNormalizer: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], popupSettings: [{\n                type: Input\n            }], listHeight: [{\n                type: Input\n            }], iconClass: [{\n                type: Input\n            }], loading: [{\n                type: Input\n            }], suggest: [{\n                type: Input\n            }], clearButton: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], itemDisabled: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input,\n                args: [\"tabIndex\"]\n            }], filterable: [{\n                type: Input\n            }], virtual: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], rounded: [{\n                type: Input\n            }], fillMode: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], selectionChange: [{\n                type: Output\n            }], filterChange: [{\n                type: Output\n            }], open: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }], closed: [{\n                type: Output\n            }], onFocus: [{\n                type: Output,\n                args: ['focus']\n            }], onBlur: [{\n                type: Output,\n                args: ['blur']\n            }], template: [{\n                type: ContentChild,\n                args: [ItemTemplateDirective, { static: false }]\n            }], headerTemplate: [{\n                type: ContentChild,\n                args: [HeaderTemplateDirective, { static: false }]\n            }], footerTemplate: [{\n                type: ContentChild,\n                args: [FooterTemplateDirective, { static: false }]\n            }], noDataTemplate: [{\n                type: ContentChild,\n                args: [NoDataTemplateDirective, { static: false }]\n            }], groupTemplate: [{\n                type: ContentChild,\n                args: [GroupTemplateDirective, { static: false }]\n            }], fixedGroupTemplate: [{\n                type: ContentChild,\n                args: [FixedGroupTemplateDirective, { static: false }]\n            }], container: [{\n                type: ViewChild,\n                args: ['container', { read: ViewContainerRef, static: true }]\n            }], popupTemplate: [{\n                type: ViewChild,\n                args: ['popupTemplate', { static: true }]\n            }], searchbar: [{\n                type: ViewChild,\n                args: [SearchBarComponent, { static: true }]\n            }], optionsList: [{\n                type: ViewChild,\n                args: ['optionsList', { static: false }]\n            }], select: [{\n                type: ViewChild,\n                args: ['select', { static: true }]\n            }], widgetClasses: [{\n                type: HostBinding,\n                args: ['class.k-combobox']\n            }, {\n                type: HostBinding,\n                args: ['class.k-input']\n            }], isDisabled: [{\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }], isLoading: [{\n                type: HostBinding,\n                args: ['class.k-loading']\n            }], dir: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }] } });\n\n/**\n * Renders the selected value of the dropdown. To define the header template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>ValueTemplate` directive inside the component tag.\n *\n * The template context is set to the current component.\n * To get a reference to the current data item, use the `let-dataItem` directive.\n *\n * > The `ValueTemplate` directive can only be used with the DropDownList and DropDownTree components.\n *\n * - [Using `ValueTemplate` with the DropDownList]({% slug templates_ddl %}#toc-value-template)\n * - [Using `ValueTemplate` with the DropDownTree]({% slug templates_ddt %}#toc-value-template)\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-dropdownlist [data]=\"listItems\">\n *    <ng-template kendoDropDownListValueTemplate let-dataItem>\n *      <span>{{dataItem}} option</span>\n *    </ng-template>\n *  </kendo-dropdownlist>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nclass ValueTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nValueTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ValueTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nValueTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ValueTemplateDirective, selector: \"[kendoDropDownListValueTemplate],[kendoDropDownTreeValueTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ValueTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDropDownListValueTemplate],[kendoDropDownTreeValueTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @hidden\n */\nclass FilterInputDirective {\n    constructor(element, zone) {\n        this.element = element;\n        this.zone = zone;\n    }\n    ngOnChanges() {\n        if (this.focused) {\n            this.nextTick(() => this.element.nativeElement.focus());\n        }\n    }\n    nextTick(fn) {\n        this.zone.runOutsideAngular(() => setTimeout(fn));\n    }\n}\nFilterInputDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterInputDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nFilterInputDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FilterInputDirective, selector: \"[filterInput]\", inputs: { focused: [\"filterInput\", \"focused\"] }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterInputDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[filterInput]' // eslint-disable-line\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { focused: [{\n                type: Input,\n                args: ['filterInput']\n            }] } });\n\n/**\n * @hidden\n */\nconst DROPDOWNLIST_VALUE_ACCESSOR = {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DropDownListComponent)\n};\nconst DEFAULT_SIZE$3 = 'medium';\nconst DEFAULT_ROUNDED$3 = 'medium';\nconst DEFAULT_FILL_MODE$3 = 'solid';\n/**\n * Represents the [Kendo UI DropDownList component for Angular]({% slug overview_ddl %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-dropdownlist [data]=\"listItems\">\n *  </kendo-dropdownlist>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nclass DropDownListComponent {\n    constructor(wrapper, localization, popupService, selectionService, navigationService, disabledItemsService, dataService, _zone, renderer, cdr, touchEnabled, injector) {\n        this.wrapper = wrapper;\n        this.localization = localization;\n        this.popupService = popupService;\n        this.selectionService = selectionService;\n        this.navigationService = navigationService;\n        this.disabledItemsService = disabledItemsService;\n        this.dataService = dataService;\n        this._zone = _zone;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.touchEnabled = touchEnabled;\n        this.injector = injector;\n        /**\n         * Sets the height of the options list. By default, `listHeight` is 200px.\n         *\n         * > The `listHeight` property affects only the list of options and not the whole popup container.\n         * > To set the height of the popup container, use `popupSettings.height`.\n         */\n        this.listHeight = 200;\n        /**\n         * Sets the read-only state of the component.\n         */\n        this.readonly = false;\n        /**\n         * Enables the [filtering]({% slug filtering_ddl %}) functionality of the DropDownList.\n         */\n        this.filterable = false;\n        /**\n         * Enables a case-insensitive search. When filtration is disabled, use this option.\n         */\n        this.ignoreCase = true;\n        /**\n         * Sets the delay before an item search is performed. When filtration is disabled, use this option.\n         */\n        this.delay = 500;\n        /**\n         * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n         */\n        this.tabindex = 0;\n        /**\n         * Fires each time the value is changed ([see example]({% slug overview_ddl %}#toc-events)).\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires each time the user types in the input field\n         * ([see example]({% slug overview_ddl %}#toc-events)).\n         * You can filter the source based on the passed filtration value.\n         * When the value of the component is programmatically changed to `ngModel` or `formControl`\n         * through its API or form binding, the `valueChange` event is not triggered because it\n         * might cause a mix-up with the built-in `valueChange` mechanisms of the `ngModel` or `formControl` bindings.\n         */\n        this.filterChange = new EventEmitter();\n        /**\n         * Fires each time the item selection is changed\n         * ([see example]({% slug overview_ddl %}#toc-events)).\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Fires each time the popup is about to open\n         * ([see example]({% slug openstate_ddl %}#toc-preventing-opening-and-closing)).\n         * This event is preventable. If you cancel it, the popup will remain closed.\n         */\n        this.open = new EventEmitter();\n        /**\n         * Fires after the popup has been opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Fires each time the popup is about to close\n         * ([see example]({% slug openstate_ddl %}#toc-preventing-opening-and-closing)).\n         * This event is preventable. If you cancel it, the popup will remain open.\n         */\n        this.close = new EventEmitter();\n        /**\n         * Fires after the popup has been closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Fires each time the user focuses the DropDownList.\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * Fires each time the DropDownList gets blurred.\n         */\n        this.onBlur = new EventEmitter();\n        this.hostClasses = true;\n        /**\n         * @hidden\n         */\n        this.focusableId = `k-${guid()}`;\n        this.role = 'combobox';\n        this.haspopup = 'listbox';\n        this.groupIndices = [];\n        this.listBoxId = guid();\n        this.optionPrefix = guid();\n        this.filterText = \"\";\n        this.subs = new Subscription();\n        this._isFocused = false;\n        this.onTouchedCallback = (_) => { };\n        this.onChangeCallback = (_) => { };\n        this.word = \"\";\n        this.last = \"\";\n        this.filterFocused = new EventEmitter();\n        this.filterBlurred = new EventEmitter();\n        this.hostElementFocused = new EventEmitter();\n        this.hostElementBlurred = new EventEmitter();\n        this._open = false;\n        this._popupSettings = { animate: true };\n        this._size = 'medium';\n        this._rounded = 'medium';\n        this._fillMode = 'solid';\n        validatePackage(packageMetadata);\n        this.direction = localization.rtl ? 'rtl' : 'ltr';\n        this.data = [];\n        this.subscribeEvents();\n        this.subscribeTouchEvents();\n        this.subscribeFocusEvents();\n        this.popupMouseDownHandler = this.onMouseDown.bind(this);\n    }\n    get width() {\n        const wrapperWidth = isDocumentAvailable() ? this.wrapper.nativeElement.offsetWidth : 0;\n        const width = this.popupSettings.width || wrapperWidth;\n        const minWidth = isNaN(wrapperWidth) ? wrapperWidth : `${wrapperWidth}px`;\n        const maxWidth = isNaN(width) ? width : `${width}px`;\n        return { min: minWidth, max: maxWidth };\n    }\n    get height() {\n        const popupHeight = this.popupSettings.height;\n        return isPresent(popupHeight) ? `${popupHeight}px` : 'auto';\n    }\n    get widgetTabIndex() {\n        if (this.disabled) {\n            return undefined;\n        }\n        const providedTabIndex = Number(this.tabIndex);\n        const defaultTabIndex = 0;\n        return !isNaN(providedTabIndex) ? providedTabIndex : defaultTabIndex;\n    }\n    get ariaExpanded() {\n        return this.isOpen;\n    }\n    get ariaControls() {\n        if (!this.isOpen) {\n            return;\n        }\n        return this.listBoxId;\n    }\n    get ariaActivedescendant() {\n        if (!isPresent(this.dataItem) || !this.isOpen) {\n            return;\n        }\n        return this.optionPrefix + \"-\" + getter(this.dataItem, this.valueField);\n    }\n    get appendTo() {\n        const { appendTo } = this.popupSettings;\n        if (!appendTo || appendTo === 'root') {\n            return undefined;\n        }\n        return appendTo === 'component' ? this.container : appendTo;\n    }\n    /**\n     * @hidden\n     */\n    get ariaLive() {\n        return this.filterable ? 'polite' : 'off';\n    }\n    /**\n     * Sets the data of the DropDownList.\n     *\n     * > The data has to be provided in an array-like list.\n     */\n    set data(data) {\n        this.dataService.data = data || [];\n        if (this.virtual) {\n            this.virtual.skip = 0;\n        }\n        this.setState();\n    }\n    get data() {\n        const virtual = this.virtual;\n        if (virtual) {\n            const start = virtual.skip || 0;\n            const end = start + virtual.pageSize;\n            // Use length instead of itemsCount because of the grouping.\n            virtual.total = this.dataService.data.length;\n            return this.dataService.data.slice(start, end);\n        }\n        return this.dataService.data;\n    }\n    /**\n     * Sets the value of the DropDownList.\n     * It can either be of the primitive (string, numbers) or of the complex (objects) type.\n     * To define the type, use the `valuePrimitive` option.\n     *\n     * > All selected values which are not present in the source are ignored.\n     */\n    set value(newValue) {\n        if (!isPresent(newValue)) {\n            this._previousDataItem = undefined;\n        }\n        this._value = newValue;\n        this.setState();\n        this.cdr.markForCheck();\n    }\n    get value() {\n        return this._value;\n    }\n    /**\n     * Configures the popup of the DropDownList.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `width: Number | String`&mdash;Sets the width of the popup container. By default, the width of the host element is used. If set to `auto`, the component automatically adjusts the width of the popup and no item labels are wrapped. The `auto` mode is not supported when virtual scrolling is enabled.\n     * - `height: Number`&mdash;Sets the height of the popup container.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n     */\n    set popupSettings(settings) {\n        this._popupSettings = Object.assign({ animate: true }, settings);\n    }\n    get popupSettings() {\n        return this._popupSettings;\n    }\n    /**\n     * Defines a Boolean function that is executed for each data item in the component\n     * ([see examples]({% slug disableditems_ddl %})). Determines whether the item will be disabled.\n     */\n    set itemDisabled(fn) {\n        if (typeof fn !== 'function') {\n            throw new Error(`itemDisabled must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this.disabledItemsService.itemDisabled = fn;\n    }\n    /**\n     * Enables the [virtualization]({% slug virtualization_ddl %}) functionality.\n     */\n    set virtual(settings) {\n        this._virtualSettings = normalizeVirtualizationSettings(settings);\n    }\n    get virtual() {\n        return this._virtualSettings;\n    }\n    /**\n     * Specifies the type of the selected value\n     * ([more information and example]({% slug valuebinding_ddl %}#toc-primitive-values-from-object-fields)).\n     * If set to `true`, the selected value has to be of a primitive value.\n     */\n    set valuePrimitive(isPrimitive) {\n        this._valuePrimitive = isPrimitive;\n    }\n    get valuePrimitive() {\n        if (!isPresent(this._valuePrimitive)) {\n            return !isPresent(this.valueField);\n        }\n        return this._valuePrimitive;\n    }\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n        this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n        return this.tabindex;\n    }\n    /**\n     * Sets the size of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     *\n     */\n    set size(size) {\n        const newSize = size ? size : DEFAULT_SIZE$3;\n        this.renderer.removeClass(this.wrapper.nativeElement, getSizeClass('picker', this.size));\n        if (size !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('picker', newSize));\n        }\n        this._size = newSize;\n    }\n    get size() {\n        return this._size;\n    }\n    /**\n     * Sets the border radius of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `full`\n     * * `none`\n     *\n     */\n    set rounded(rounded) {\n        const newRounded = rounded ? rounded : DEFAULT_ROUNDED$3;\n        this.renderer.removeClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n        if (rounded !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(newRounded));\n        }\n        this._rounded = rounded;\n    }\n    get rounded() {\n        return this._rounded;\n    }\n    /**\n     * Sets the fillMode of the component.\n     *\n     * The possible values are:\n     * * `flat`\n     * * `solid` (default)\n     * * `outline`\n     * * `none`\n     *\n     */\n    set fillMode(fillMode) {\n        const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$3;\n        this.renderer.removeClass(this.wrapper.nativeElement, getFillModeClass('picker', this.fillMode));\n        if (fillMode !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('picker', newFillMode));\n        }\n        this._fillMode = newFillMode;\n    }\n    get fillMode() {\n        return this._fillMode;\n    }\n    /**\n     * @hidden\n     */\n    blurComponent(event) {\n        if (event.target !== this.wrapper.nativeElement) {\n            return;\n        }\n        event.stopImmediatePropagation();\n        this.hostElementBlurred.emit();\n    }\n    /**\n     * @hidden\n     */\n    blurFilterInput() {\n        this.filterBlurred.emit();\n    }\n    /**\n     * @hidden\n     */\n    focusComponent(event) {\n        if (event.target !== this.wrapper.nativeElement) {\n            return;\n        }\n        event.stopImmediatePropagation();\n        this.hostElementFocused.emit();\n        if (!this.isFocused) {\n            this.isFocused = true;\n            if (hasObservers(this.onFocus)) {\n                this._zone.run(() => {\n                    this.onFocus.emit();\n                });\n            }\n        }\n    }\n    /**\n     * @hidden\n     */\n    onResize() {\n        if (this._open) {\n            const popupWrapper = this.popupRef.popupElement;\n            const { min, max } = this.width;\n            popupWrapper.style.minWidth = min;\n            popupWrapper.style.width = max;\n        }\n    }\n    get isDisabledClass() {\n        return this.disabled;\n    }\n    get isDisabledAttribute() {\n        return this.disabled ? '' : null;\n    }\n    get isLoading() {\n        return this.loading;\n    }\n    get dir() {\n        return this.direction;\n    }\n    get hostTabIndex() {\n        return this.widgetTabIndex;\n    }\n    get readonlyClass() {\n        return this.readonly;\n    }\n    get readonlyAttr() {\n        return this.readonly ? '' : null;\n    }\n    get isBusy() {\n        return this.isLoading;\n    }\n    get isAriaExpanded() {\n        return this.ariaExpanded;\n    }\n    get hostAriaControls() {\n        return this.ariaControls;\n    }\n    get hostAriaInvalid() {\n        var _a;\n        return this.formControl ? (_a = this.formControl) === null || _a === void 0 ? void 0 : _a.invalid.toString() : null;\n    }\n    get hostAriaActivedescendant() {\n        return this.ariaActivedescendant;\n    }\n    /**\n     * @hidden\n     */\n    keydown(event) {\n        const firstIndex = isPresent(this.defaultItem) ? -1 : 0;\n        let focused = isNaN(this.selectionService.focused) ? this.firstFocusableIndex(firstIndex) : this.selectionService.focused;\n        let offset = 0;\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        const isHomeEnd = event.keyCode === Keys.Home || event.keyCode === Keys.End;\n        const isFilterFocused = this.filterable && this.isFocused && this.isOpen;\n        if (isFilterFocused && isHomeEnd) {\n            return;\n        }\n        const hasSelected = isPresent(this.selectionService.selected[0]);\n        const focusedItemNotSelected = isPresent(this.selectionService.focused) && !this.selectionService.isSelected(this.selectionService.focused);\n        if (!hasSelected || focusedItemNotSelected) {\n            if (event.keyCode === Keys.ArrowDown || event.keyCode === Keys.ArrowRight) {\n                offset = -1;\n            }\n            else if (event.keyCode === Keys.ArrowUp || event.keyCode === Keys.ArrowLeft) {\n                offset = 1;\n            }\n        }\n        const eventData = event;\n        const action = this.navigationService.process({\n            current: focused + offset,\n            max: this.dataService.itemsCount - 1,\n            min: this.defaultItem ? -1 : 0,\n            originalEvent: eventData\n        });\n        const leftRightKeys = (action === NavigationAction.Left) || (action === NavigationAction.Right);\n        if (action !== NavigationAction.Undefined &&\n            action !== NavigationAction.Tab &&\n            action !== NavigationAction.Backspace &&\n            action !== NavigationAction.Delete &&\n            action !== NavigationAction.PageDown &&\n            action !== NavigationAction.PageUp &&\n            action !== NavigationAction.SelectAll &&\n            !(leftRightKeys && this.filterable) &&\n            action !== NavigationAction.Enter //enter when popup is opened is handled before `handleEnter`\n        ) {\n            eventData.preventDefault();\n        }\n    }\n    /**\n     * @hidden\n     */\n    keypress(event) {\n        if (this.disabled || this.readonly || this.filterable) {\n            return;\n        }\n        this.onKeyPress(event);\n    }\n    /**\n     * @hidden\n     */\n    click(event) {\n        event.preventDefault();\n        this.focus();\n        this.togglePopup(!this.isOpen);\n    }\n    set isFocused(isFocused) {\n        this.renderer[isFocused ? 'addClass' : 'removeClass'](this.wrapper.nativeElement, 'k-focus');\n        this._isFocused = isFocused;\n    }\n    get isFocused() {\n        return this._isFocused;\n    }\n    ngOnInit() {\n        this.renderer.removeAttribute(this.wrapper.nativeElement, \"tabindex\");\n        this.subs.add(this.localization\n            .changes.subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n            this.cdr.detectChanges();\n        }));\n        this.assignAriaDescribedBy();\n        this.setComponentClasses();\n    }\n    /**\n     * @hidden\n     * Used by the TextBoxContainer to determine if the component is empty.\n     */\n    isEmpty() {\n        const value = this.value;\n        return !(value === 0 || value === false || value || this.defaultItem);\n    }\n    /**\n     * @hidden\n     */\n    onFilterFocus() {\n        this.filterFocused.emit();\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        this.destroyPopup();\n        this.subs.unsubscribe();\n        this.unSubscribeFocusEvents();\n        if (this.touchstartDisposeHandler) {\n            this.touchstartDisposeHandler();\n        }\n    }\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes) {\n        const virtual = this.virtual;\n        const requestInitialData = virtual && changes.data && changes.data.isFirstChange();\n        if (requestInitialData) {\n            this.pageChange({ skip: 0, take: virtual.pageSize });\n        }\n        if (isChanged('defaultItem', changes, false)) {\n            this.disabledItemsService.defaultItem = this.defaultItem;\n        }\n        if (anyChanged(['textField', 'valueField', 'valuePrimitive', 'defaultItem', 'itemDisabled'], changes, false)) {\n            this.setState();\n        }\n    }\n    /**\n     * @hidden\n     */\n    ngAfterContentChecked() {\n        this.verifySettings();\n    }\n    /**\n     * @hidden\n     */\n    get formControl() {\n        const ngControl = this.injector.get(NgControl, null);\n        return (ngControl === null || ngControl === void 0 ? void 0 : ngControl.control) || null;\n    }\n    /**\n     * Focuses a specific item of the DropDownList based on a provided index.\n     * If there is a default item it is positioned at index -1.\n     * If null or invalid index is provided the focus will be removed.\n     */\n    focusItemAt(index) {\n        const minIndex = isPresent(this.defaultItem) ? -1 : 0;\n        const isInRange = minIndex <= index && index < this.data.length;\n        if (isPresent(index) && isInRange && !this.disabledItemsService.isIndexDisabled(index)) {\n            this.selectionService.focus(index);\n        }\n        else {\n            this.selectionService.focus(null);\n        }\n    }\n    /**\n     * Focuses the DropDownList.\n     */\n    focus() {\n        if (!this.disabled) {\n            this.wrapper.nativeElement.focus();\n        }\n    }\n    /**\n     * Blurs the DropDownList.\n     */\n    blur() {\n        if (!this.disabled) {\n            this.wrapper.nativeElement.blur();\n            this.cdr.detectChanges();\n        }\n    }\n    /**\n     * Toggles the visibility of the popup\n     * ([see example]({% slug openstate_ddl %}#toc-setting-the-initially-opened-component)).\n     * If you use the `toggle` method to open or close the popup, the `open` and `close` events will not be fired.\n     *\n     * @param open - The state of the popup.\n     */\n    toggle(open) {\n        // The Promise is required to open the popup on load.\n        // Otherwise, the \"Expression has changed...\" type error will be thrown.\n        Promise.resolve(null).then(() => {\n            const shouldOpen = isPresent(open) ? open : !this._open;\n            this._toggle(shouldOpen);\n        });\n    }\n    _toggle(open) {\n        this._open = open;\n        this.destroyPopup();\n        if (this._open) {\n            this.createPopup();\n        }\n    }\n    triggerPopupEvents(open) {\n        const eventArgs = new PreventableEvent();\n        if (open) {\n            this.open.emit(eventArgs);\n        }\n        else {\n            this.close.emit(eventArgs);\n        }\n        return eventArgs.isDefaultPrevented();\n    }\n    /**\n     * @hidden\n     */\n    togglePopup(open) {\n        const isDisabled = this.disabled || this.readonly;\n        const sameState = this.isOpen === open;\n        if (isDisabled || sameState) {\n            return;\n        }\n        const isDefaultPrevented = this.triggerPopupEvents(open);\n        if (!isDefaultPrevented) {\n            if (!open && this.filterable && this.isFocused) {\n                this.focus();\n            }\n            this._toggle(open);\n        }\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n    get isOpen() {\n        return this._open;\n    }\n    /**\n     * Resets the value of the DropDownList.\n     * If you use the `reset` method to clear the value of the component,\n     * the model will not update automatically and the `selectionChange` and `valueChange` events will not be fired.\n     */\n    reset() {\n        this.value = undefined;\n    }\n    /**\n     * @hidden\n     */\n    messageFor(key) {\n        return this.localization.get(key);\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.value = value === null ? undefined : value;\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @hidden\n     */\n    get buttonClasses() {\n        return this.loading ? 'k-i-loading k-input-loading-icon' : this.iconClass || 'k-i-caret-alt-down';\n    }\n    /**\n     * @hidden\n     */\n    get selectButtonClasses() {\n        return `${this.size ? getSizeClass('button', this.size) : ''} ${this.fillMode ? 'k-button-' + this.fillMode : ''} ${this.fillMode ? 'k-button-' + this.fillMode + '-base' : ''}`;\n    }\n    /**\n     * @hidden\n     */\n    get filterInputClasses() {\n        return `${this.size ? getSizeClass('input', this.size) : ''} ${this.fillMode ? 'k-input-' + this.fillMode : ''} ${this.rounded ? getRoundedClass(this.rounded) : ''}`;\n    }\n    /**\n     * @hidden\n     */\n    get optionLabelSizeClass() {\n        return `${this.size ? getSizeClass('list', this.size) : ''}`;\n    }\n    /**\n     * @hidden\n     */\n    get listContainerClasses() {\n        const containerClasses = ['k-list-container', 'k-reset'];\n        if (this.popupSettings.popupClass) {\n            containerClasses.push(this.popupSettings.popupClass);\n        }\n        return containerClasses;\n    }\n    /**\n     * @hidden\n     */\n    get isDisabledDefaultItem() {\n        return this.disabledItemsService.isItemDisabled(this.defaultItem);\n    }\n    /**\n     * @hidden\n     */\n    getText() {\n        return this.text;\n    }\n    /**\n     * @hidden\n     */\n    getDefaultItemText() {\n        return getter(this.defaultItem, this.textField);\n    }\n    createPopup() {\n        if (this.virtual) {\n            this.virtual.skip = 0;\n        }\n        const horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n        const anchorPosition = { horizontal: horizontalAlign, vertical: \"bottom\" };\n        const popupPosition = { horizontal: horizontalAlign, vertical: \"top\" };\n        this.popupRef = this.popupService.open({\n            anchor: this.wrapper,\n            anchorAlign: anchorPosition,\n            animate: this.popupSettings.animate,\n            appendTo: this.appendTo,\n            content: this.popupTemplate,\n            popupAlign: popupPosition,\n            popupClass: this.listContainerClasses,\n            positionMode: 'absolute'\n        });\n        const popupWrapper = this.popupRef.popupElement;\n        const { min, max } = this.width;\n        popupWrapper.addEventListener('mousedown', this.popupMouseDownHandler);\n        popupWrapper.style.minWidth = min;\n        popupWrapper.style.width = max;\n        popupWrapper.style.height = this.height;\n        popupWrapper.setAttribute(\"dir\", this.direction);\n        const listBox = popupWrapper.querySelector('ul.k-list-ul');\n        const ariaLabel = this.wrapper.nativeElement.getAttribute('aria-labelledby');\n        if (ariaLabel) {\n            listBox.setAttribute('aria-labelledby', ariaLabel);\n        }\n        this.subs.add(this.popupRef.popupOpen.subscribe(() => {\n            this.cdr.detectChanges();\n            this.optionsList.scrollToItem(this.selectionService.focused);\n            this.opened.emit();\n        }));\n        this.subs.add(this.popupRef.popupClose.subscribe(() => {\n            this.closed.emit();\n        }));\n        if (!this.filterable) {\n            this.subs.add(this.popupRef.popupAnchorViewportLeave.subscribe(() => this.togglePopup(false)));\n        }\n    }\n    destroyPopup() {\n        if (this.popupRef) {\n            this.popupRef.popupElement\n                .removeEventListener('mousedown', this.popupMouseDownHandler);\n            this.popupRef.close();\n            this.popupRef = null;\n        }\n    }\n    updateState({ dataItem, confirm = false }) {\n        this.dataItem = dataItem;\n        this.text = getter(dataItem, this.textField);\n        if (confirm) {\n            this._previousDataItem = dataItem;\n        }\n    }\n    clearState() {\n        this.text = undefined;\n        this.dataItem = undefined;\n    }\n    resetSelection(index) {\n        const clear = !isPresent(index);\n        this.selectionService.resetSelection(clear ? [] : [index]);\n        this.selectionService.focused = clear ? this.firstFocusableIndex(0) : index;\n    }\n    onSelectionChange({ dataItem }) {\n        this.updateState({ dataItem });\n        this.selectionChange.emit(dataItem);\n        // reassigning the value label ID as aria-deascibedby forces firefox/nvda, forefox/jaws to read\n        // the new value when the popup is closed and the value is changed with the arrow keys (up/down)\n        this.assignAriaDescribedBy();\n    }\n    subscribeEvents() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        // Item selection when the popup is open.\n        this.subs.add(this.selectionService.onSelect.pipe(filter(_ => this.isOpen), map(this.itemFromEvent.bind(this)))\n            .subscribe(this.onSelectionChange.bind(this)));\n        // Item selection when the popup is closed | clicked | enter, and so on.\n        this.subs.add(merge(this.selectionService.onSelect.pipe(filter(_ => !this.isOpen)), this.selectionService.onChange).pipe(map(this.itemFromEvent.bind(this)), tap(_ => this.togglePopup(false)))\n            .subscribe(({ dataItem, value: newValue, newSelection }) => {\n            if (newSelection) {\n                this.onSelectionChange({ dataItem });\n            }\n            const shouldUsePrevious = !isPresent(dataItem) && this._previousDataItem;\n            const shouldUseNewValue = newValue !== getter(this.value, this.valueField);\n            if (shouldUsePrevious) {\n                this.updateState({ dataItem: this._previousDataItem });\n                this.resetSelection();\n            }\n            else if (shouldUseNewValue) {\n                this.value = this.valuePrimitive ? newValue : dataItem;\n                this._previousDataItem = dataItem;\n                this.emitChange(this.value);\n            }\n            this.clearFilter();\n        }));\n        this.subs.add(merge(this.navigationService.up, this.navigationService.down, this.navigationService.left.pipe(skipWhile(() => this.filterable)), this.navigationService.right.pipe(skipWhile(() => this.filterable)), this.navigationService.home, this.navigationService.end)\n            .pipe(filter((event) => !isNaN(event.index)))\n            .subscribe((event) => this.selectionService.select(event.index)));\n        this.subs.add(merge(this.navigationService.pagedown, this.navigationService.pageup).subscribe((event) => {\n            if (this.isOpen) {\n                event.originalEvent.preventDefault();\n                this.optionsList.scrollWithOnePage(NavigationAction[event.originalEvent.code]);\n            }\n        }));\n        this.subs.add(this.navigationService.open.subscribe(() => this.togglePopup(true)));\n        this.subs.add(this.navigationService.close.subscribe(() => {\n            this.togglePopup(false);\n            this.focus();\n        }));\n        this.subs.add(this.navigationService.enter\n            .pipe(tap((event) => event.originalEvent.preventDefault()))\n            .subscribe(this.handleEnter.bind(this)));\n        this.subs.add(this.navigationService.esc\n            .subscribe(this.handleEscape.bind(this)));\n        this.subs.add(this.filterBlurred.pipe(concatMap(() => interval(10).pipe(take(1), takeUntil(this.hostElementFocused))))\n            .subscribe(() => {\n            this.hostElementBlurred.emit();\n        }));\n        this._zone.runOutsideAngular(() => {\n            this.subs.add(merge(this.hostElementBlurred.pipe(concatMap(() => interval(10).pipe(take(1), takeUntil(this.filterFocused)))), this.navigationService.tab).pipe(tap(event => event instanceof NavigationEvent && this.focus()), filter(() => this.isFocused))\n                .subscribe(() => this.componentBlur()));\n        });\n    }\n    subscribeTouchEvents() {\n        if (!isDocumentAvailable() || !this.touchEnabled) {\n            return;\n        }\n        this._zone.runOutsideAngular(() => \n        // Roll up DropDownList on iOS when tapped outside\n        this.touchstartDisposeHandler = this.renderer.listen(document, 'touchstart', (e) => {\n            const target = e.target;\n            if (this.isFocused && !inDropDown(this.wrapper, target, this.popupRef)) {\n                this._zone.run(() => {\n                    if (this.filterFocused) {\n                        // Close popup if filter is focused\n                        this.togglePopup(false);\n                    }\n                    this.blur();\n                });\n            }\n        }));\n    }\n    subscribeFocusEvents() {\n        if (isDocumentAvailable()) {\n            this.focusComponent = this.focusComponent.bind(this);\n            this.blurComponent = this.blurComponent.bind(this);\n            this._zone.runOutsideAngular(() => {\n                const useCapture = true;\n                document.addEventListener('focus', this.focusComponent, useCapture);\n                document.addEventListener('blur', this.blurComponent, useCapture);\n            });\n        }\n    }\n    unSubscribeFocusEvents() {\n        if (isDocumentAvailable()) {\n            const useCapture = true;\n            document.removeEventListener('focus', this.focusComponent, useCapture);\n            document.removeEventListener('blur', this.blurComponent, useCapture);\n        }\n    }\n    itemFromEvent(event) {\n        const index = event.indices[0];\n        let dataItem = this.dataService.itemAt(index);\n        dataItem = isPresent(dataItem) ? dataItem : this.currentOrDefault(index);\n        const value = getter(dataItem, this.valueField);\n        const newSelection = event.newSelection;\n        return {\n            dataItem,\n            index,\n            newSelection,\n            value\n        };\n    }\n    currentOrDefault(selectedIndex) {\n        const defaultItemIndex = -1;\n        if (isPresent(this.dataItem) && selectedIndex !== defaultItemIndex) {\n            return this.dataItem;\n        }\n        else {\n            return this.defaultItem;\n        }\n    }\n    firstFocusableIndex(index) {\n        const maxIndex = this.dataService.itemsCount - 1;\n        if (this.disabledItemsService.isIndexDisabled(index)) {\n            return (index < maxIndex) ? this.firstFocusableIndex(index + 1) : undefined;\n        }\n        else {\n            return index;\n        }\n    }\n    handleEnter() {\n        if (this.isOpen) {\n            this.selectionService.change(this.selectionService.focused);\n            this.focus();\n        }\n        else {\n            this.togglePopup(true);\n        }\n    }\n    handleEscape() {\n        if (isPresent(this.selectionService.selected[0])) {\n            this.selectionService.change(this.selectionService.selected[0]);\n        }\n        else {\n            this.togglePopup(false);\n            this.clearFilter();\n        }\n        this.focus();\n    }\n    clearFilter() {\n        if (!(this.filterable && this.filterText)) {\n            return;\n        }\n        this.filterText = \"\";\n        this.cdr.markForCheck();\n        this.filterChange.emit(this.filterText);\n    }\n    verifySettings() {\n        if (!isDevMode()) {\n            return;\n        }\n        if (this.defaultItem && this.valueField && typeof this.defaultItem !== \"object\") {\n            throw new Error(DropDownListMessages.defaultItem);\n        }\n        if (this.valuePrimitive === true && isPresent(this.value) && typeof this.value === \"object\") {\n            throw new Error(DropDownListMessages.primitive);\n        }\n        if (this.valuePrimitive === false && isPresent(this.value) && typeof this.value !== \"object\") {\n            throw new Error(DropDownListMessages.object);\n        }\n        const valueOrText = !isPresent(this.valueField) !== !isPresent(this.textField);\n        if (valueOrText) {\n            throw new Error(DropDownListMessages.textAndValue);\n        }\n    }\n    componentBlur() {\n        this.isFocused = false;\n        const selectionPresent = isPresent(this.selectionService.selected[0]);\n        const valueHasChanged = selectionPresent && getter(this.value, this.valueField) !== getter(this.dataService.itemAt(this.selectionService.selected[0]), this.valueField);\n        if (valueHasChanged ||\n            hasObservers(this.close) ||\n            hasObservers(this.onBlur) ||\n            hasObservers(this.filterChange) ||\n            isUntouched(this.wrapper.nativeElement)) {\n            this._zone.run(() => {\n                if (valueHasChanged) {\n                    this.selectionService.change(this.selectionService.selected[0]);\n                }\n                this.togglePopup(false);\n                this.clearFilter();\n                this.onBlur.emit();\n                this.onTouchedCallback();\n            });\n        }\n        else {\n            this.togglePopup(false);\n        }\n    }\n    /**\n     * @hidden\n     */\n    onMouseDown(event) {\n        const tagName = event.target.tagName.toLowerCase();\n        if (tagName !== \"input\") {\n            event.preventDefault();\n        }\n    }\n    onKeyPress(event) {\n        if (event.which === 0 || event.keyCode === Keys.Enter) {\n            return;\n        }\n        let character = String.fromCharCode(event.charCode || event.keyCode);\n        if (this.ignoreCase) {\n            character = character.toLowerCase();\n        }\n        if (character === \" \") {\n            event.preventDefault();\n        }\n        this.word += character;\n        this.last = character;\n        this.search();\n    }\n    search() {\n        clearTimeout(this.typingTimeout);\n        if (!this.filterable) {\n            this.typingTimeout = setTimeout(() => {\n                this.word = \"\";\n            }, this.delay);\n            this.selectNext();\n        }\n    }\n    selectNext() {\n        let data = this.dataService\n            .filter((item) => isPresent(item) && !item.header && !this.disabledItemsService.isItemDisabled(item))\n            .map((item) => {\n            if (this.dataService.grouped) {\n                return { item: item.value, itemIndex: item.offsetIndex };\n            }\n            return { item: item, itemIndex: this.dataService.indexOf(item) };\n        });\n        const isInLoop = sameCharsOnly(this.word, this.last);\n        let dataLength = data.length;\n        let hasSelected = !isNaN(this.selectionService.selected[0]);\n        let startIndex = !hasSelected ? 0 : this.selectionService.selected[0];\n        let text, index, defaultItem;\n        if (this.defaultItem && !this.disabledItemsService.isItemDisabled(this.defaultItem)) {\n            defaultItem = { item: this.defaultItem, itemIndex: -1 };\n            dataLength += 1;\n            startIndex += 1;\n        }\n        startIndex += isInLoop && hasSelected ? 1 : 0;\n        data = shuffleData(data, startIndex, defaultItem);\n        index = 0;\n        for (; index < dataLength; index++) {\n            text = getter(data[index].item, this.textField);\n            const loopMatch = Boolean(isInLoop && matchText(text, this.last, this.ignoreCase));\n            const nextMatch = Boolean(matchText(text, this.word, this.ignoreCase));\n            if (loopMatch || nextMatch) {\n                index = data[index].itemIndex;\n                break;\n            }\n        }\n        if (index !== dataLength) {\n            this.navigate(index);\n        }\n    }\n    emitChange(value) {\n        this.onChangeCallback(value);\n        this.valueChange.emit(value);\n    }\n    navigate(index) {\n        this.selectionService.select(index);\n    }\n    findDataItem({ valueField, value }) {\n        const result = {\n            dataItem: null,\n            index: -1\n        };\n        const prop = dataItem => getter(dataItem, valueField);\n        let comparer;\n        if (this.dataService.grouped) {\n            comparer = (element) => {\n                return prop(element.value) === prop(value);\n            };\n        }\n        else {\n            comparer = (element) => {\n                return prop(element) === prop(value);\n            };\n        }\n        const index = this.dataService.findIndex(comparer);\n        result.dataItem = this.dataService.itemAt(index);\n        result.index = index;\n        return result;\n    }\n    setState() {\n        const value = this.value;\n        const valueField = this.valueField;\n        const textField = this.textField;\n        const primitive = this.valuePrimitive;\n        if (this.defaultItem) {\n            const defaultValue = getter(this.defaultItem, valueField);\n            const currentValue = getter(value, valueField);\n            if (!isPresent(value) || (currentValue === defaultValue)) {\n                this.updateState({ dataItem: this.defaultItem, confirm: true });\n                this.resetSelection(-1);\n                if (this.filterable && this.filterText && this.dataService.itemsCount) {\n                    this.selectionService.focused = this.firstFocusableIndex(0);\n                }\n                return;\n            }\n        }\n        const resolved = this.findDataItem({ valueField, value });\n        // The data and value are of same shape,\n        // for example, value: 'foo', data: ['foo', 'bar']\n        // or value: { value: 1, text: 'foo' }, data: [{ value: 1, text: 'foo' }].\n        const ofSameType = !(primitive && textField);\n        if (resolved.dataItem) {\n            this.updateState({ dataItem: resolved.dataItem, confirm: true });\n            this.resetSelection(resolved.index);\n        }\n        else if (isPresent(value) && ofSameType) {\n            this.updateState({ dataItem: value });\n            this.resetSelection();\n        }\n        else if (this._previousDataItem) {\n            this.updateState({ dataItem: this._previousDataItem });\n            this.resetSelection();\n        }\n        else {\n            this.clearState();\n            this.resetSelection();\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleFilter(event) {\n        this.filterChange.emit(event.target.value);\n    }\n    /**\n     * @hidden\n     */\n    pageChange(event) {\n        const virtual = this.virtual;\n        virtual.skip = event.skip;\n    }\n    assignAriaDescribedBy() {\n        const currentValue = this.wrapper.nativeElement.getAttribute('aria-describedby') || '';\n        const trimmed = currentValue.replace(this.valueLabelId, '').trim();\n        // reset the value label ID to force readers to read the new value\n        this.valueLabelId = guid();\n        // add to the current value - don't replace it\n        const newValue = `${this.valueLabelId} ${trimmed}`.trim();\n        this.renderer.setAttribute(this.wrapper.nativeElement, 'aria-describedby', newValue);\n    }\n    setComponentClasses() {\n        if (this.size !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('picker', this.size));\n        }\n        if (this.rounded !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n        }\n        if (this.fillMode !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('picker', this.fillMode));\n        }\n    }\n}\nDropDownListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownListComponent, deps: [{ token: i0.ElementRef }, { token: i1.LocalizationService }, { token: i2.PopupService }, { token: SelectionService }, { token: NavigationService }, { token: DisabledItemsService }, { token: DataService }, { token: i0.NgZone }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: TOUCH_ENABLED, optional: true }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\nDropDownListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DropDownListComponent, selector: \"kendo-dropdownlist\", inputs: { iconClass: \"iconClass\", loading: \"loading\", data: \"data\", value: \"value\", textField: \"textField\", valueField: \"valueField\", popupSettings: \"popupSettings\", listHeight: \"listHeight\", defaultItem: \"defaultItem\", disabled: \"disabled\", itemDisabled: \"itemDisabled\", readonly: \"readonly\", filterable: \"filterable\", virtual: \"virtual\", ignoreCase: \"ignoreCase\", delay: \"delay\", valuePrimitive: \"valuePrimitive\", tabindex: \"tabindex\", tabIndex: \"tabIndex\", size: \"size\", rounded: \"rounded\", fillMode: \"fillMode\", focusableId: [\"id\", \"focusableId\"] }, outputs: { valueChange: \"valueChange\", filterChange: \"filterChange\", selectionChange: \"selectionChange\", open: \"open\", opened: \"opened\", close: \"close\", closed: \"closed\", onFocus: \"focus\", onBlur: \"blur\" }, host: { listeners: { \"keydown\": \"keydown($event)\", \"keypress\": \"keypress($event)\", \"click\": \"click($event)\" }, properties: { \"class.k-dropdownlist\": \"this.hostClasses\", \"class.k-picker\": \"this.hostClasses\", \"class.k-disabled\": \"this.isDisabledClass\", \"attr.disabled\": \"this.isDisabledAttribute\", \"class.k-loading\": \"this.isLoading\", \"attr.id\": \"this.focusableId\", \"attr.dir\": \"this.dir\", \"attr.tabindex\": \"this.hostTabIndex\", \"attr.readonly\": \"this.readonlyAttr\", \"attr.aria-busy\": \"this.isBusy\", \"attr.role\": \"this.role\", \"attr.aria-haspopup\": \"this.haspopup\", \"attr.aria-expanded\": \"this.isAriaExpanded\", \"attr.aria-controls\": \"this.hostAriaControls\", \"attr.aria-invalid\": \"this.hostAriaInvalid\", \"attr.aria-activedescendant\": \"this.hostAriaActivedescendant\" } }, providers: [\n        DROPDOWNLIST_VALUE_ACCESSOR,\n        DataService,\n        SelectionService,\n        NavigationService,\n        DisabledItemsService,\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.dropdownlist'\n        },\n        {\n            provide: FilterableComponent, useExisting: forwardRef(() => DropDownListComponent)\n        },\n        {\n            provide: KendoInput, useExisting: forwardRef(() => DropDownListComponent)\n        }\n    ], queries: [{ propertyName: \"itemTemplate\", first: true, predicate: ItemTemplateDirective, descendants: true }, { propertyName: \"groupTemplate\", first: true, predicate: GroupTemplateDirective, descendants: true }, { propertyName: \"fixedGroupTemplate\", first: true, predicate: FixedGroupTemplateDirective, descendants: true }, { propertyName: \"valueTemplate\", first: true, predicate: ValueTemplateDirective, descendants: true }, { propertyName: \"headerTemplate\", first: true, predicate: HeaderTemplateDirective, descendants: true }, { propertyName: \"footerTemplate\", first: true, predicate: FooterTemplateDirective, descendants: true }, { propertyName: \"noDataTemplate\", first: true, predicate: NoDataTemplateDirective, descendants: true }], viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true, read: ViewContainerRef, static: true }, { propertyName: \"popupTemplate\", first: true, predicate: [\"popupTemplate\"], descendants: true, static: true }, { propertyName: \"optionsList\", first: true, predicate: [\"optionsList\"], descendants: true }], exportAs: [\"kendoDropDownList\"], usesOnChanges: true, ngImport: i0, template: `\n        <ng-container kendoDropDownListLocalizedMessages\n            i18n-noDataText=\"kendo.dropdownlist.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-selectButtonText=\"kendo.dropdownlist.selectButtonText|The text set as aria-label on the select button\"\n            selectButtonText=\"Select\"\n        >\n        </ng-container>\n        <span class=\"k-input-inner\" unselectable=\"on\" [id]=\"valueLabelId\">\n            <span class=\"k-input-value-text\">\n                <ng-template *ngIf=\"valueTemplate\"\n                    [templateContext]=\"{\n                        templateRef: valueTemplate.templateRef,\n                        $implicit: dataItem\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!valueTemplate\">{{ getText() }}</ng-template>\n            </span>\n        </span>\n        <button\n            tabindex=\"-1\"\n            unselectable=\"on\"\n            type=\"button\"\n            class=\"k-input-button k-button k-icon-button\"\n            [ngClass]=\"selectButtonClasses\"\n            [attr.aria-label]=\"messageFor('selectButtonText')\"\n            [kendoEventsOutsideAngular]=\"{\n                mousedown: onMouseDown\n            }\"\n        >\n            <span\n                class=\"k-button-icon k-icon\"\n                unselectable=\"on\"\n                [ngClass]=\"buttonClasses\"\n            ></span>\n        </button>\n        <ng-template #popupTemplate>\n            <!--filterable-->\n\n            <ng-template [ngIf]=\"filterable\">\n                <div class=\"k-list-filter\" (click)=\"$event.stopImmediatePropagation()\">\n                    <span\n                        class=\"k-searchbox k-input\"\n                        [ngClass]=\"filterInputClasses\"\n                    >\n                        <span class=\"k-input-icon k-icon k-i-search\" unselectable=\"on\"></span>\n                        <input\n                            role=\"searchbox\"\n                            aria-autocomplete=\"list\"\n                            aria-haspopup=\"listbox\"\n                            [attr.aria-controls]=\"ariaControls\"\n                            [attr.aria-activedescendant]=\"ariaActivedescendant\"\n                            tabindex=\"-1\"\n                            [filterInput]=\"isFocused && !touchEnabled\"\n                            [dir]=\"direction\"\n                            [(ngModel)]=\"filterText\"\n                            class=\"k-input-inner\"\n                            (keydown)=\"keydown($event)\"\n                            (input)=\"handleFilter($event)\"\n                            (focus)=\"onFilterFocus()\"\n                            (blur)=\"blurFilterInput()\" />\n                    </span>\n                </div>\n            </ng-template>\n            <!--default item-->\n            <ng-template [ngIf]=\"defaultItem && !itemTemplate\">\n                <div\n                    class=\"k-list\"\n                    [ngClass]=\"optionLabelSizeClass\"\n                >\n                    <div class=\"k-list-optionlabel\" [ngClass]=\"{ 'k-disabled': isDisabledDefaultItem }\" kendoDropDownsSelectable [index]=\"-1\">\n                        {{ getDefaultItemText() }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template [ngIf]=\"defaultItem && itemTemplate\">\n                <div\n                    class=\"k-list\"\n                    [ngClass]=\"optionLabelSizeClass\"\n                >\n                    <div class=\"k-list-optionlabel\" [ngClass]=\"{ 'k-disabled': isDisabledDefaultItem }\" kendoDropDownsSelectable [index]=\"-1\">\n                        <ng-template\n                            [templateContext]=\"{\n                                templateRef: itemTemplate.templateRef,\n                                $implicit: defaultItem\n                            }\">\n                        </ng-template>\n                    </div>\n                </div>\n            </ng-template>\n            <!--header template-->\n            <ng-template *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate.templateRef\n                }\">\n            </ng-template>\n            <!--list-->\n            <kendo-list\n                #optionsList\n                [size]=\"size\"\n                [rounded]=\"rounded\"\n                [id]=\"listBoxId\"\n                [optionPrefix]=\"optionPrefix\"\n                [data]=\"data\"\n                [textField]=\"textField\"\n                [valueField]=\"valueField\"\n                [template]=\"itemTemplate\"\n                [groupTemplate]=\"groupTemplate\"\n                [fixedGroupTemplate]=\"fixedGroupTemplate\"\n                [height]=\"listHeight\"\n                [show]=\"isOpen\"\n                [virtual]=\"virtual\"\n                [ariaLive]=\"ariaLive\"\n                (pageChange)=\"pageChange($event)\"\n                >\n            </kendo-list>\n            <!--no-data template-->\n            <div class=\"k-no-data\" *ngIf=\"data.length === 0\">\n                <ng-template [ngIf]=\"noDataTemplate\"\n                    [templateContext]=\"{\n                        templateRef: noDataTemplate ? noDataTemplate.templateRef : undefined\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!noDataTemplate\">\n                    <div>{{ messageFor('noDataText') }}</div>\n                </ng-template>\n            </div>\n            <!--footer template-->\n            <ng-template *ngIf=\"footerTemplate\"\n                [templateContext]=\"{\n                    templateRef: footerTemplate.templateRef\n                }\">\n            </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"isOpen\">\n            <kendo-resize-sensor (resize)=\"onResize()\"></kendo-resize-sensor>\n        </ng-template>\n        <ng-container #container></ng-container>\n  `, isInline: true, components: [{ type: ListComponent, selector: \"kendo-list\", inputs: [\"selected\", \"focused\", \"textField\", \"valueField\", \"height\", \"template\", \"groupTemplate\", \"fixedGroupTemplate\", \"show\", \"id\", \"optionPrefix\", \"multipleSelection\", \"virtual\", \"type\", \"checkboxes\", \"ariaLive\", \"isMultiselect\", \"data\", \"size\", \"rounded\"], outputs: [\"onClick\", \"pageChange\", \"listResize\"] }, { type: i9.ResizeSensorComponent, selector: \"kendo-resize-sensor\", inputs: [\"rateLimit\"], outputs: [\"resize\"] }], directives: [{ type: LocalizedMessagesDirective, selector: \"\\n    [kendoDropDownListLocalizedMessages],\\n    [kendoDropDownTreeLocalizedMessages],\\n    [kendoComboBoxLocalizedMessages],\\n    [kendoMultiColumnComboBoxLocalizedMessages],\\n    [kendoAutoCompleteLocalizedMessages],\\n    [kendoMultiSelectLocalizedMessages],\\n    [kendoMultiSelectTreeLocalizedMessages]\\n  \" }, { type: i11.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TemplateContextDirective, selector: \"[templateContext]\", inputs: [\"templateContext\"] }, { type: i11.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i9.EventsOutsideAngularDirective, selector: \"[kendoEventsOutsideAngular]\", inputs: [\"kendoEventsOutsideAngular\", \"scope\"] }, { type: i12.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: FilterInputDirective, selector: \"[filterInput]\", inputs: [\"filterInput\"] }, { type: i12.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i12.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: SelectableDirective, selector: \"[kendoDropDownsSelectable]\", inputs: [\"index\", \"checkboxes\", \"height\", \"multipleSelection\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownListComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoDropDownList',\n                    providers: [\n                        DROPDOWNLIST_VALUE_ACCESSOR,\n                        DataService,\n                        SelectionService,\n                        NavigationService,\n                        DisabledItemsService,\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.dropdownlist'\n                        },\n                        {\n                            provide: FilterableComponent, useExisting: forwardRef(() => DropDownListComponent)\n                        },\n                        {\n                            provide: KendoInput, useExisting: forwardRef(() => DropDownListComponent)\n                        }\n                    ],\n                    selector: 'kendo-dropdownlist',\n                    template: `\n        <ng-container kendoDropDownListLocalizedMessages\n            i18n-noDataText=\"kendo.dropdownlist.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-selectButtonText=\"kendo.dropdownlist.selectButtonText|The text set as aria-label on the select button\"\n            selectButtonText=\"Select\"\n        >\n        </ng-container>\n        <span class=\"k-input-inner\" unselectable=\"on\" [id]=\"valueLabelId\">\n            <span class=\"k-input-value-text\">\n                <ng-template *ngIf=\"valueTemplate\"\n                    [templateContext]=\"{\n                        templateRef: valueTemplate.templateRef,\n                        $implicit: dataItem\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!valueTemplate\">{{ getText() }}</ng-template>\n            </span>\n        </span>\n        <button\n            tabindex=\"-1\"\n            unselectable=\"on\"\n            type=\"button\"\n            class=\"k-input-button k-button k-icon-button\"\n            [ngClass]=\"selectButtonClasses\"\n            [attr.aria-label]=\"messageFor('selectButtonText')\"\n            [kendoEventsOutsideAngular]=\"{\n                mousedown: onMouseDown\n            }\"\n        >\n            <span\n                class=\"k-button-icon k-icon\"\n                unselectable=\"on\"\n                [ngClass]=\"buttonClasses\"\n            ></span>\n        </button>\n        <ng-template #popupTemplate>\n            <!--filterable-->\n\n            <ng-template [ngIf]=\"filterable\">\n                <div class=\"k-list-filter\" (click)=\"$event.stopImmediatePropagation()\">\n                    <span\n                        class=\"k-searchbox k-input\"\n                        [ngClass]=\"filterInputClasses\"\n                    >\n                        <span class=\"k-input-icon k-icon k-i-search\" unselectable=\"on\"></span>\n                        <input\n                            role=\"searchbox\"\n                            aria-autocomplete=\"list\"\n                            aria-haspopup=\"listbox\"\n                            [attr.aria-controls]=\"ariaControls\"\n                            [attr.aria-activedescendant]=\"ariaActivedescendant\"\n                            tabindex=\"-1\"\n                            [filterInput]=\"isFocused && !touchEnabled\"\n                            [dir]=\"direction\"\n                            [(ngModel)]=\"filterText\"\n                            class=\"k-input-inner\"\n                            (keydown)=\"keydown($event)\"\n                            (input)=\"handleFilter($event)\"\n                            (focus)=\"onFilterFocus()\"\n                            (blur)=\"blurFilterInput()\" />\n                    </span>\n                </div>\n            </ng-template>\n            <!--default item-->\n            <ng-template [ngIf]=\"defaultItem && !itemTemplate\">\n                <div\n                    class=\"k-list\"\n                    [ngClass]=\"optionLabelSizeClass\"\n                >\n                    <div class=\"k-list-optionlabel\" [ngClass]=\"{ 'k-disabled': isDisabledDefaultItem }\" kendoDropDownsSelectable [index]=\"-1\">\n                        {{ getDefaultItemText() }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template [ngIf]=\"defaultItem && itemTemplate\">\n                <div\n                    class=\"k-list\"\n                    [ngClass]=\"optionLabelSizeClass\"\n                >\n                    <div class=\"k-list-optionlabel\" [ngClass]=\"{ 'k-disabled': isDisabledDefaultItem }\" kendoDropDownsSelectable [index]=\"-1\">\n                        <ng-template\n                            [templateContext]=\"{\n                                templateRef: itemTemplate.templateRef,\n                                $implicit: defaultItem\n                            }\">\n                        </ng-template>\n                    </div>\n                </div>\n            </ng-template>\n            <!--header template-->\n            <ng-template *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate.templateRef\n                }\">\n            </ng-template>\n            <!--list-->\n            <kendo-list\n                #optionsList\n                [size]=\"size\"\n                [rounded]=\"rounded\"\n                [id]=\"listBoxId\"\n                [optionPrefix]=\"optionPrefix\"\n                [data]=\"data\"\n                [textField]=\"textField\"\n                [valueField]=\"valueField\"\n                [template]=\"itemTemplate\"\n                [groupTemplate]=\"groupTemplate\"\n                [fixedGroupTemplate]=\"fixedGroupTemplate\"\n                [height]=\"listHeight\"\n                [show]=\"isOpen\"\n                [virtual]=\"virtual\"\n                [ariaLive]=\"ariaLive\"\n                (pageChange)=\"pageChange($event)\"\n                >\n            </kendo-list>\n            <!--no-data template-->\n            <div class=\"k-no-data\" *ngIf=\"data.length === 0\">\n                <ng-template [ngIf]=\"noDataTemplate\"\n                    [templateContext]=\"{\n                        templateRef: noDataTemplate ? noDataTemplate.templateRef : undefined\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!noDataTemplate\">\n                    <div>{{ messageFor('noDataText') }}</div>\n                </ng-template>\n            </div>\n            <!--footer template-->\n            <ng-template *ngIf=\"footerTemplate\"\n                [templateContext]=\"{\n                    templateRef: footerTemplate.templateRef\n                }\">\n            </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"isOpen\">\n            <kendo-resize-sensor (resize)=\"onResize()\"></kendo-resize-sensor>\n        </ng-template>\n        <ng-container #container></ng-container>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.LocalizationService }, { type: i2.PopupService }, { type: SelectionService }, { type: NavigationService }, { type: DisabledItemsService }, { type: DataService }, { type: i0.NgZone }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TOUCH_ENABLED]\n                }] }, { type: i0.Injector }]; }, propDecorators: { iconClass: [{\n                type: Input\n            }], loading: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], textField: [{\n                type: Input\n            }], valueField: [{\n                type: Input\n            }], popupSettings: [{\n                type: Input\n            }], listHeight: [{\n                type: Input\n            }], defaultItem: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], itemDisabled: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], filterable: [{\n                type: Input\n            }], virtual: [{\n                type: Input\n            }], ignoreCase: [{\n                type: Input\n            }], delay: [{\n                type: Input\n            }], valuePrimitive: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input,\n                args: [\"tabIndex\"]\n            }], size: [{\n                type: Input\n            }], rounded: [{\n                type: Input\n            }], fillMode: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], filterChange: [{\n                type: Output\n            }], selectionChange: [{\n                type: Output\n            }], open: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }], closed: [{\n                type: Output\n            }], onFocus: [{\n                type: Output,\n                args: ['focus']\n            }], onBlur: [{\n                type: Output,\n                args: ['blur']\n            }], itemTemplate: [{\n                type: ContentChild,\n                args: [ItemTemplateDirective, { static: false }]\n            }], groupTemplate: [{\n                type: ContentChild,\n                args: [GroupTemplateDirective, { static: false }]\n            }], fixedGroupTemplate: [{\n                type: ContentChild,\n                args: [FixedGroupTemplateDirective, { static: false }]\n            }], valueTemplate: [{\n                type: ContentChild,\n                args: [ValueTemplateDirective, { static: false }]\n            }], headerTemplate: [{\n                type: ContentChild,\n                args: [HeaderTemplateDirective, { static: false }]\n            }], footerTemplate: [{\n                type: ContentChild,\n                args: [FooterTemplateDirective, { static: false }]\n            }], noDataTemplate: [{\n                type: ContentChild,\n                args: [NoDataTemplateDirective, { static: false }]\n            }], container: [{\n                type: ViewChild,\n                args: ['container', { read: ViewContainerRef, static: true }]\n            }], popupTemplate: [{\n                type: ViewChild,\n                args: ['popupTemplate', { static: true }]\n            }], optionsList: [{\n                type: ViewChild,\n                args: ['optionsList', { static: false }]\n            }], hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-dropdownlist']\n            }, {\n                type: HostBinding,\n                args: ['class.k-picker']\n            }], isDisabledClass: [{\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }], isDisabledAttribute: [{\n                type: HostBinding,\n                args: ['attr.disabled']\n            }], isLoading: [{\n                type: HostBinding,\n                args: ['class.k-loading']\n            }], focusableId: [{\n                type: Input,\n                args: ['id']\n            }, {\n                type: HostBinding,\n                args: ['attr.id']\n            }], dir: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], hostTabIndex: [{\n                type: HostBinding,\n                args: ['attr.tabindex']\n            }], readonlyClass: [{\n                type: HostBinding,\n                args: ['attr.readonly']\n            }], readonlyAttr: [{\n                type: HostBinding,\n                args: ['attr.readonly']\n            }], isBusy: [{\n                type: HostBinding,\n                args: ['attr.aria-busy']\n            }], role: [{\n                type: HostBinding,\n                args: ['attr.role']\n            }], haspopup: [{\n                type: HostBinding,\n                args: ['attr.aria-haspopup']\n            }], isAriaExpanded: [{\n                type: HostBinding,\n                args: ['attr.aria-expanded']\n            }], hostAriaControls: [{\n                type: HostBinding,\n                args: ['attr.aria-controls']\n            }], hostAriaInvalid: [{\n                type: HostBinding,\n                args: ['attr.aria-invalid']\n            }], hostAriaActivedescendant: [{\n                type: HostBinding,\n                args: ['attr.aria-activedescendant']\n            }], keydown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }], keypress: [{\n                type: HostListener,\n                args: ['keypress', ['$event']]\n            }], click: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\n\n/**\n * Renders the content of the custom list item in the MultiSelect\n * ([see example]({% slug templates_multiselect %}#toc-customizing-the-item-content)).\n * The template context is set to the current component.\n * To get a reference to the current text that is typed by the\n * user, use the `let-customItem` directive.\n *\n * > The `CustomItemTemplate` directive can only be used with the MultiSelect component.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-multiselect [data]=\"listItems\" [allowCustom]=\"true\">\n *    <ng-template kendoMultiSelectCustomItemTemplate let-customItem>\n *      <span>New Item: {{customItem}}</span>\n *    </ng-template>\n *  </kendo-multiselect>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n *\n */\nclass CustomItemTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCustomItemTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CustomItemTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCustomItemTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: CustomItemTemplateDirective, selector: \"[kendoMultiSelectCustomItemTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CustomItemTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoMultiSelectCustomItemTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * Renders the selected tag value of the MultiSelect\n * ([see example]({% slug templates_multiselect %}#toc-tag-template)).\n * The template context is set to the current component.\n * To get a reference to the current data item, use the `let-dataItem` directive.\n *\n * > The `TagTemplate` directive can only be used with the MultiSelect and MultiSelectTree components.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-multiselect [data]=\"items\">\n *    <ng-template kendoMultiSelectTagTemplate let-dataItem>\n *      <span>{{dataItem}} option</span>\n *    </ng-template>\n *  </kendo-multiselect>\n * `\n * })\n * class AppComponent {\n *   public items: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nclass TagTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nTagTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TagTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nTagTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TagTemplateDirective, selector: \"[kendoMultiSelectTagTemplate],[kendoMultiSelectTreeTagTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TagTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoMultiSelectTagTemplate],[kendoMultiSelectTreeTagTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * Renders the grouped tag values in the MultiSelect\n * ([see example]({% slug summarytagmode_multiselect %})).\n * The template context is set to the current component.\n * To get a reference to the current grouped\n * data items collection, use the `let-dataItems` directive.\n *\n * > The `GroupTagTemplate` directive can only be used with the MultiSelect and MultiSelectTree components.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-multiselect kendoMultiSelectSummaryTag [data]=\"items\">\n *    <ng-template kendoMultiSelectGroupTagTemplate let-dataItems>\n *      <span>{{dataItems.length}} item(s) selected</span>\n *    </ng-template>\n *  </kendo-multiselect>\n * `\n * })\n * class AppComponent {\n *   public items: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nclass GroupTagTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nGroupTagTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupTagTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nGroupTagTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: GroupTagTemplateDirective, selector: \"[kendoMultiSelectGroupTagTemplate],[kendoMultiSelectTreeGroupTagTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: GroupTagTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoMultiSelectGroupTagTemplate],[kendoMultiSelectTreeGroupTagTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * Arguments for the `removeTag` event. The `removeTag` event fires when a tag is about\n * to the removed. If you cancel the event, the removal is prevented.\n */\nclass RemoveTagEvent extends PreventableEvent {\n    /**\n     * Constructs the event arguments for the `remove` event.\n     * @param dataItem - The data item or an array of data items that will be removed.\n     */\n    constructor(dataItem) {\n        super();\n        this.dataItem = dataItem;\n    }\n}\n\n/**\n * @hidden\n */\nconst normalizeCheckboxesSettings = (settings) => {\n    if (isObject(settings)) {\n        const defaultSettings = { enabled: true, checkOnClick: true };\n        return Object.assign({}, defaultSettings, settings);\n    }\n    return { enabled: Boolean(settings), checkOnClick: true };\n};\n\n/**\n * @hidden\n */\nclass TagListComponent {\n    constructor(renderer, hostElement) {\n        this.renderer = renderer;\n        this.hostElement = hostElement;\n        this.rounded = 'medium';\n        this.fillMode = 'solid';\n        /**\n         * A collection with the disabled tags' indices.\n         */\n        this.disabledIndices = new Set();\n        this.removeTag = new EventEmitter();\n        this.hostClasses = true;\n        this._size = 'medium';\n    }\n    set size(size) {\n        this.renderer.removeClass(this.hostElement.nativeElement, getSizeClass('chip-list', this.size));\n        if (size) {\n            this.renderer.addClass(this.hostElement.nativeElement, getSizeClass('chip-list', size));\n        }\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get hostId() {\n        return this.id;\n    }\n    tagProp(tag, prop, index) {\n        const propField = prop && this.getPropField(tag, prop, index);\n        return getter(tag, propField);\n    }\n    isTagDisabled(tag, positionIndex) {\n        if (this.isGroupTag(tag)) {\n            /** The `positionIndex` is used to determine after how many single tags is the group tag displayed =>\n             * => it is used to increment the indices inside the group tag so that we determine the actual position index\n             * of each group tag item as they appear in the `value` (important to check against `disabledIndices`)\n             * e.g. `disabledIndices = [0, 1]` && `tags = ['Small', ['Medium', 'Large']]` => without the incrementation with\n             * `positionIndex`, the group tag would yield [0, 1] as indices, while it should yield [1, 2]\n             */\n            return tag.every((_tag, index) => this.disabledIndices.has(index + positionIndex));\n        }\n        return this.disabledIndices.has(positionIndex);\n    }\n    deleteTag(event, tag, index) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        if (!this.disabled && event.which === 1) {\n            this.removeTag.emit({ tag, index });\n        }\n    }\n    itemId(tag, index) {\n        if (tag) { //because of custom values\n            return this.tagPrefix + \"-\" + this.tagProp(tag, this.valueField, index);\n        }\n    }\n    isGroupTag(tag) {\n        return tag instanceof Array;\n    }\n    tagAriaHidden(index) {\n        return isPresent(this.focused) && this.focused !== index;\n    }\n    getPropField(tag, prop, index) {\n        // Needed for MultiSelectTree value binding (Heterogeneous Data)\n        const fieldsCount = prop.length - 1;\n        if (typeof prop === 'string') {\n            return prop;\n        }\n        else if (this.valueDepth) {\n            const depth = this.valueDepth[index];\n            return fieldsCount < depth ? prop[fieldsCount] : prop[depth];\n        }\n        else {\n            return prop.find(item => item in tag);\n        }\n    }\n}\nTagListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TagListComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nTagListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: TagListComponent, selector: \"kendo-taglist\", inputs: { tags: \"tags\", textField: \"textField\", valueField: \"valueField\", valueDepth: \"valueDepth\", focused: \"focused\", template: \"template\", groupTemplate: \"groupTemplate\", disabled: \"disabled\", tagPrefix: \"tagPrefix\", id: \"id\", size: \"size\", rounded: \"rounded\", fillMode: \"fillMode\", disabledIndices: \"disabledIndices\" }, outputs: { removeTag: \"removeTag\" }, host: { properties: { \"class.k-input-values\": \"this.hostClasses\", \"class.k-chip-list\": \"this.hostClasses\", \"class.k-selection-multiple\": \"this.hostClasses\", \"attr.id\": \"this.hostId\" } }, ngImport: i0, template: `\n        <div\n            *ngFor=\"let tag of tags; let index = index;\"\n            [attr.id]=\"itemId(tag, index)\"\n            [attr.aria-hidden]=\"tagAriaHidden(index)\"\n            class=\"k-chip\"\n            [ngClass]=\"{\n                'k-focus': index === focused,\n                'k-disabled': isTagDisabled(tag, index),\n                'k-chip-sm': size === 'small',\n                'k-chip-md': size === 'medium',\n                'k-chip-lg': size === 'large',\n                'k-rounded-sm': rounded === 'small',\n                'k-rounded-md': rounded === 'medium',\n                'k-rounded-lg': rounded === 'large',\n                'k-rounded-full': rounded === 'full',\n                'k-chip-solid k-chip-solid-base': fillMode === 'solid',\n                'k-chip-flat k-chip-flat-base': fillMode === 'flat',\n                'k-chip-outline k-chip-outline-base': fillMode === 'outline'\n            }\"\n        >\n            <span class=\"k-chip-content\">\n                <ng-template *ngIf=\"isGroupTag(tag); then groupTag else singleTag\"></ng-template>\n                <ng-template #groupTag>\n                    <span class=\"k-chip-label k-text-ellipsis\">\n                        <ng-template *ngIf=\"groupTemplate\"\n                            [templateContext]=\"{\n                            templateRef: groupTemplate.templateRef,\n                            $implicit: tag\n                        }\">\n                        </ng-template>\n                        <ng-template [ngIf]=\"!groupTemplate\">{{ tag.length }} {{ tag.length === 1 ? 'item' : 'items' }} selected</ng-template>\n                    </span>\n                </ng-template>\n                <ng-template #singleTag>\n                    <span class=\"k-chip-label k-text-ellipsis\">\n                        <ng-template *ngIf=\"template\"\n                            [templateContext]=\"{\n                            templateRef: template.templateRef,\n                            $implicit: tag\n                        }\">\n                        </ng-template>\n                        <ng-template [ngIf]=\"!template\">{{ tagProp(tag, textField, index) }}</ng-template>\n                    </span>\n                </ng-template>\n            </span>\n\n            <span class=\"k-chip-actions\">\n                <span aria-label=\"delete\" [attr.aria-hidden]=\"index !== focused\" class=\"k-chip-action k-chip-remove-action\">\n                    <span class=\"k-icon k-i-x-circle\" (mousedown)=\"deleteTag($event, tag, index)\">\n                    </span>\n                </span>\n            </span>\n        </div>\n        <ng-content></ng-content>\n  `, isInline: true, directives: [{ type: i11.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i11.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i11.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TemplateContextDirective, selector: \"[templateContext]\", inputs: [\"templateContext\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: TagListComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-taglist',\n                    template: `\n        <div\n            *ngFor=\"let tag of tags; let index = index;\"\n            [attr.id]=\"itemId(tag, index)\"\n            [attr.aria-hidden]=\"tagAriaHidden(index)\"\n            class=\"k-chip\"\n            [ngClass]=\"{\n                'k-focus': index === focused,\n                'k-disabled': isTagDisabled(tag, index),\n                'k-chip-sm': size === 'small',\n                'k-chip-md': size === 'medium',\n                'k-chip-lg': size === 'large',\n                'k-rounded-sm': rounded === 'small',\n                'k-rounded-md': rounded === 'medium',\n                'k-rounded-lg': rounded === 'large',\n                'k-rounded-full': rounded === 'full',\n                'k-chip-solid k-chip-solid-base': fillMode === 'solid',\n                'k-chip-flat k-chip-flat-base': fillMode === 'flat',\n                'k-chip-outline k-chip-outline-base': fillMode === 'outline'\n            }\"\n        >\n            <span class=\"k-chip-content\">\n                <ng-template *ngIf=\"isGroupTag(tag); then groupTag else singleTag\"></ng-template>\n                <ng-template #groupTag>\n                    <span class=\"k-chip-label k-text-ellipsis\">\n                        <ng-template *ngIf=\"groupTemplate\"\n                            [templateContext]=\"{\n                            templateRef: groupTemplate.templateRef,\n                            $implicit: tag\n                        }\">\n                        </ng-template>\n                        <ng-template [ngIf]=\"!groupTemplate\">{{ tag.length }} {{ tag.length === 1 ? 'item' : 'items' }} selected</ng-template>\n                    </span>\n                </ng-template>\n                <ng-template #singleTag>\n                    <span class=\"k-chip-label k-text-ellipsis\">\n                        <ng-template *ngIf=\"template\"\n                            [templateContext]=\"{\n                            templateRef: template.templateRef,\n                            $implicit: tag\n                        }\">\n                        </ng-template>\n                        <ng-template [ngIf]=\"!template\">{{ tagProp(tag, textField, index) }}</ng-template>\n                    </span>\n                </ng-template>\n            </span>\n\n            <span class=\"k-chip-actions\">\n                <span aria-label=\"delete\" [attr.aria-hidden]=\"index !== focused\" class=\"k-chip-action k-chip-remove-action\">\n                    <span class=\"k-icon k-i-x-circle\" (mousedown)=\"deleteTag($event, tag, index)\">\n                    </span>\n                </span>\n            </span>\n        </div>\n        <ng-content></ng-content>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { tags: [{\n                type: Input\n            }], textField: [{\n                type: Input\n            }], valueField: [{\n                type: Input\n            }], valueDepth: [{\n                type: Input\n            }], focused: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], groupTemplate: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], tagPrefix: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], rounded: [{\n                type: Input\n            }], fillMode: [{\n                type: Input\n            }], disabledIndices: [{\n                type: Input\n            }], removeTag: [{\n                type: Output\n            }], hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-input-values']\n            }, {\n                type: HostBinding,\n                args: ['class.k-chip-list']\n            }, {\n                type: HostBinding,\n                args: ['class.k-selection-multiple']\n            }], hostId: [{\n                type: HostBinding,\n                args: ['attr.id']\n            }] } });\n\nconst MULTISELECT_VALUE_ACCESSOR = {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MultiSelectComponent)\n};\nconst DEFAULT_SIZE$2 = 'medium';\nconst DEFAULT_ROUNDED$2 = 'medium';\nconst DEFAULT_FILL_MODE$2 = 'solid';\n/**\n * Represents the [Kendo UI MultiSelect component for Angular]({% slug overview_multiselect %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-multiselect [data]=\"listItems\">\n *  </kendo-multiselect>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nclass MultiSelectComponent {\n    constructor(wrapper, localization, popupService, dataService, selectionService, navigationService, disabledItemsService, cdr, differs, renderer, _zone, touchEnabled) {\n        this.wrapper = wrapper;\n        this.localization = localization;\n        this.popupService = popupService;\n        this.dataService = dataService;\n        this.selectionService = selectionService;\n        this.navigationService = navigationService;\n        this.disabledItemsService = disabledItemsService;\n        this.cdr = cdr;\n        this.differs = differs;\n        this.renderer = renderer;\n        this._zone = _zone;\n        this.touchEnabled = touchEnabled;\n        this.listBoxId = guid();\n        this.tagListId = guid();\n        this.tagPrefix = \"tag-\" + guid();\n        this.optionPrefix = \"option-\" + guid();\n        this.focusedTagIndex = undefined;\n        /**\n         * @hidden\n         */\n        this.focusableId = `k-${guid()}`;\n        /**\n         * Determines whether to close the options list of the MultiSelect after the item selection is finished\n         * ([see example]({% slug openstate_multiselect %}#toc-keeping-the-options-list-open-while-on-focus)).\n         * @default true\n         */\n        this.autoClose = true;\n        /**\n         * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n         */\n        this.tabindex = 0;\n        /**\n         * Sets the disabled state of the component.\n         */\n        this.disabled = false;\n        /**\n         * Sets the read-only state of the component.\n         */\n        this.readonly = false;\n        /**\n         * Enables the [filtering]({% slug filtering_multiselect %}) functionality of the MultiSelect.\n         */\n        this.filterable = false;\n        /**\n         * Sets the height of the suggestions list. By default, `listHeight` is 200px.\n         *\n         * > The `listHeight` property affects only the list of suggestions and not the whole popup container.\n         * > To set the height of the popup container, use `popupSettings.height`.\n         */\n        this.listHeight = 200;\n        /**\n         * If set to `true`, renders a button on hovering over the component.\n         * Clicking this button resets the value of the component to an empty array and triggers the `change` event.\n         */\n        this.clearButton = true;\n        /**\n         * A user-defined callback function which receives an array of selected data items and maps them to an array of tags\n         * ([see examples]({% slug summarytagmode_multiselect %}#toc-rendering-of-tags)).\n         *\n         * @param { Any[] } dataItems - The selected data items from the list.\n         * @returns { Any[] } - The tags that will be rendered by the component.\n         */\n        this.tagMapper = (tags) => tags || [];\n        /**\n         * Specifies whether the MultiSelect allows user-defined values that are not present in the dataset\n         * ([more information and examples]({% slug custom_values_multiselect %})).\n         * Defaults to `false`.\n         */\n        this.allowCustom = false;\n        /**\n         * A user-defined callback function which returns normalized custom values.\n         * Typically used when the data items are different from type `string`.\n         *\n         * @param { Any } value - The custom value that is defined by the user.\n         * @returns { Any }\n         *\n         * @example\n         * ```ts\n         * import { map } from 'rxjs/operators';\n         *\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *   <kendo-multiselect\n         *       [allowCustom]=\"true\"\n         *       [data]=\"listItems\"\n         *       textField=\"text\"\n         *       valueField=\"value\"\n         *       [valueNormalizer]=\"valueNormalizer\"\n         *       (valueChange)=\"onValueChange($event)\"\n         *   >\n         *   </kendo-multiselect>\n         * `\n         * })\n         *\n         * class AppComponent {\n         *   public listItems: Array<{ text: string, value: number }> = [\n         *       { text: \"Small\", value: 1 },\n         *       { text: \"Medium\", value: 2 },\n         *       { text: \"Large\", value: 3 }\n         *   ];\n         *\n         *   public onValueChange(value) {\n         *       console.log(\"valueChange : \", value);\n         *   }\n         *\n         *   public valueNormalizer = (text$: Observable<string>) => text$.pipe(map((text: string) => {\n         *      return {\n         *         value: Math.floor(Math.random() * (1000 - 100) + 1000), //generate unique valueField\n         *         text: text };\n         *   }));\n         *\n         * }\n         * ```\n         */\n        this.valueNormalizer = (text) => text.pipe(map((userInput) => {\n            const comparer = (item) => typeof item === 'string' && userInput.toLowerCase() === item.toLowerCase();\n            const matchingValue = this.value.find(comparer);\n            if (matchingValue) {\n                return matchingValue;\n            }\n            const matchingItem = this.dataService.find(comparer);\n            return matchingItem ? matchingItem : userInput;\n        }));\n        /**\n         * Fires each time the user types in the input field.\n         * You can filter the source based on the passed filtration value.\n         */\n        this.filterChange = new EventEmitter();\n        /**\n         * Fires each time the value is changed&mdash;\n         * when the component is blurred or the value is cleared through the **Clear** button\n         * ([see example]({% slug overview_multiselect %}#toc-events)).\n         * When the value of the component is programmatically changed to `ngModel` or `formControl`\n         * through its API or form binding, the `valueChange` event is not triggered because it\n         * might cause a mix-up with the built-in `valueChange` mechanisms of the `ngModel` or `formControl` bindings.\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires each time the popup is about to open\n         * ([see example]({% slug openstate_multiselect %}#toc-preventing-opening-and-closing)).\n         * This event is preventable. If you cancel it, the popup will remain closed.\n         */\n        this.open = new EventEmitter();\n        /**\n         * Fires after the popup has been opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Fires each time the popup is about to close\n         * ([see example]({% slug openstate_multiselect %}#toc-preventing-opening-and-closing)).\n         * This event is preventable. If you cancel it, the popup will remain open.\n         */\n        this.close = new EventEmitter();\n        /**\n         * Fires after the popup has been closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Fires each time the user focuses the MultiSelect.\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * Fires each time the MultiSelect gets blurred.\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * Fires each time a tag is about to be removed([see examples]({% slug summarytagmode_multiselecttree %}#toc-notifying-on-removing-group-tags)).\n         * This event is preventable. If you cancel it, the tag will not be removed.\n         */\n        this.removeTag = new EventEmitter();\n        this.hostClasses = true;\n        this.initialized = false;\n        this._size = 'medium';\n        this._rounded = 'medium';\n        this._fillMode = 'solid';\n        this.onChangeCallback = (_) => { };\n        this.onTouchedCallback = (_) => { };\n        this._placeholder = '';\n        this._open = false;\n        this._value = [];\n        this._popupSettings = { animate: true };\n        this._checkboxes = { enabled: false };\n        this._isFocused = false;\n        this.selectedDataItems = [];\n        this.customValueSubject = new Subject();\n        this.observableSubscriptions = new Subscription();\n        validatePackage(packageMetadata);\n        this.popupMouseDownHandler = this.onMouseDown.bind(this);\n        this.data = [];\n        this.direction = this.localization.rtl ? 'rtl' : 'ltr';\n        this.subscribeEvents();\n        this.subscribeTouchEvents();\n    }\n    /**\n     * Focuses a specific item of the MultiSelect based on a provided index.\n     * If there is a custom item it is positioned at index -1.\n     * If null or invalid index is provided the focus will be removed.\n     */\n    focusItemAt(index) {\n        const minIndex = this.allowCustom ? -1 : 0;\n        const isInRange = minIndex <= 0 && index < this.data.length;\n        if (isPresent(index) && isInRange && !this.disabledItemsService.isIndexDisabled(index)) {\n            this.selectionService.focus(index);\n        }\n        else {\n            this.selectionService.focus(null);\n        }\n    }\n    /**\n     * Focuses the MultiSelect.\n     */\n    focus() {\n        if (!this.disabled) {\n            this.searchbar.focus();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onSearchBarFocus() {\n        if (!this.isFocused) {\n            this.isFocused = true;\n            if (hasObservers(this.onFocus)) {\n                this._zone.run(() => {\n                    this.onFocus.emit();\n                });\n            }\n        }\n    }\n    /**\n     * Blurs the MultiSelect.\n     */\n    blur() {\n        if (!this.disabled) {\n            this.searchbar.blur();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onSearchBarBlur() {\n        if (!this.isFocused) {\n            return;\n        }\n        this.isFocused = false;\n        if (hasObservers(this.onBlur) ||\n            hasObservers(this.filterChange) ||\n            hasObservers(this.close) ||\n            isUntouched(this.wrapper.nativeElement)) {\n            this._zone.run(() => {\n                this.closePopup();\n                if (!(this.isOpen && this.allowCustom)) {\n                    this.clearFilter();\n                }\n                this.onBlur.emit();\n                this.onTouchedCallback();\n            });\n        }\n        else {\n            if (!this.allowCustom) {\n                this.clearFilter();\n            }\n            this.closePopup();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onMouseDown(event) {\n        event.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n    onResize() {\n        if (this._open) {\n            const popupWrapper = this.popupRef.popupElement;\n            const { min, max } = this.width;\n            popupWrapper.style.minWidth = min;\n            popupWrapper.style.width = max;\n        }\n    }\n    get appendTo() {\n        const { appendTo } = this.popupSettings;\n        if (!appendTo || appendTo === 'root') {\n            return undefined;\n        }\n        return appendTo === 'component' ? this.container : appendTo;\n    }\n    /**\n     * Sets the data of the MultiSelect.\n     *\n     * > The data has to be provided in an array-like list of items.\n     */\n    set data(data) {\n        this.dataService.data = data || [];\n        if (this.virtual) {\n            this.virtual.skip = 0;\n        }\n        if (this.initialized) {\n            this.setState(this.value);\n        }\n    }\n    get data() {\n        const virtual = this.virtual;\n        if (virtual) {\n            const start = virtual.skip || 0;\n            const end = start + virtual.pageSize;\n            //Use length instead of itemsCount because of grouping\n            virtual.total = this.dataService.data.length;\n            return this.dataService.data.slice(start, end);\n        }\n        return this.dataService.data;\n    }\n    /**\n     * Sets the value of the MultiSelect. It can be either of the primitive (string, numbers) or of the complex (objects) type.\n     * To define the type, use the `valuePrimitive` option.\n     *\n     * > All selected values which are not present in the source are ignored.\n     */\n    set value(values) {\n        this._value = values ? values : [];\n        if (!this.differ && this.value) {\n            this.differ = this.differs.find(this.value).create();\n        }\n        this.valueChangeDetected = true;\n        if (this.initialized) {\n            this.setState(this.value);\n        }\n    }\n    get value() {\n        return this._value;\n    }\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n        this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n        return this.tabindex;\n    }\n    /**\n     * Sets the size of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     *\n     */\n    set size(size) {\n        const newSize = size ? size : DEFAULT_SIZE$2;\n        this.renderer.removeClass(this.wrapper.nativeElement, getSizeClass('input', this.size));\n        if (size !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('input', newSize));\n        }\n        this._size = newSize;\n    }\n    get size() {\n        return this._size;\n    }\n    /**\n     * Sets the border radius of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `full`\n     * * `none`\n     *\n     */\n    set rounded(rounded) {\n        const newRounded = rounded ? rounded : DEFAULT_ROUNDED$2;\n        this.renderer.removeClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n        if (rounded !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(newRounded));\n        }\n        this._rounded = newRounded;\n    }\n    get rounded() {\n        return this._rounded;\n    }\n    /**\n     * Sets the fillMode of the component.\n     *\n     * The possible values are:\n     * * `flat`\n     * * `solid` (default)\n     * * `outline`\n     * * `none`\n     *\n     */\n    set fillMode(fillMode) {\n        const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$2;\n        this.renderer.removeClass(this.wrapper.nativeElement, getFillModeClass('input', this.fillMode));\n        if (fillMode !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('input', newFillMode));\n        }\n        this._fillMode = newFillMode;\n    }\n    get fillMode() {\n        return this._fillMode;\n    }\n    /**\n     * The hint which is displayed when the component is empty.\n     * When the values are selected, it disappears.\n     */\n    set placeholder(text) {\n        this._placeholder = text || '';\n    }\n    get placeholder() {\n        return this.selectedDataItems.length ? '' : this._placeholder;\n    }\n    /**\n     * Defines a Boolean function that is executed for each data item in the component\n     * ([see examples]({% slug disableditems_multiselect %})). Determines whether the item will be disabled.\n     */\n    set itemDisabled(fn) {\n        if (typeof fn !== 'function') {\n            throw new Error(`itemDisabled must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this.disabledItemsService.itemDisabled = fn;\n    }\n    /**\n     * Specifies whether checkboxes will be rendered before each item in the popup list.\n     */\n    set checkboxes(settings) {\n        this._checkboxes = normalizeCheckboxesSettings(settings);\n    }\n    get checkboxes() {\n        return this._checkboxes;\n    }\n    /**\n     * Enables the [virtualization]({% slug virtualization_multiselect %}) functionality.\n     */\n    set virtual(settings) {\n        this._virtualSettings = normalizeVirtualizationSettings(settings);\n    }\n    get virtual() {\n        return this._virtualSettings;\n    }\n    /**\n     * Configures the popup of the MultiSelect.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `width: Number | String`&mdash;Sets the width of the popup container. By default, the width of the host element is used. If set to `auto`, the component automatically adjusts the width of the popup and no item labels are wrapped. The `auto` mode is not supported when virtual scrolling is enabled.\n     * - `height: Number`&mdash;Sets the height of the popup container.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n     */\n    set popupSettings(settings) {\n        this._popupSettings = Object.assign({ animate: true }, settings);\n    }\n    get popupSettings() {\n        return this._popupSettings;\n    }\n    /**\n     * Specifies the type of the selected value.\n     * If set to `true`, the selected value has to be of the primitive type\n     * ([more information and example]({% slug valuebinding_multiselect %}#toc-primitive-values-from-object-fields)).\n     */\n    set valuePrimitive(isPrimitive) {\n        this._valuePrimitive = isPrimitive;\n    }\n    get valuePrimitive() {\n        if (!isPresent(this._valuePrimitive)) {\n            return !isPresent(this.valueField);\n        }\n        return this._valuePrimitive;\n    }\n    get dir() {\n        return this.direction;\n    }\n    get disabledClass() {\n        return this.disabled;\n    }\n    get isLoading() {\n        return this.loading;\n    }\n    /**\n     * @hidden\n     */\n    handleKeyboardEvent(event) {\n        if (this.isFocused && this.isOpen && (event.ctrlKey || event.metaKey) && event.keyCode === Keys.KeyA) {\n            event.preventDefault();\n            this.handleSelectAll();\n        }\n    }\n    /**\n     * @hidden\n     */\n    hostMousedown(event) {\n        const inputElement = this.searchbar.input.nativeElement;\n        if (event.button === 0) {\n            if (this.isFocused && this.isOpen && event.target === inputElement) {\n                return;\n            }\n            if (!this.touchEnabled || (this.touchEnabled && event.target.tagName !== 'SPAN')) {\n                this.searchbar.focus();\n            }\n            this.togglePopup(!this.isOpen);\n            event.preventDefault();\n        }\n    }\n    get listContainerClasses() {\n        const containerClasses = ['k-list-container', 'k-reset'];\n        if (this.popupSettings.popupClass) {\n            containerClasses.push(this.popupSettings.popupClass);\n        }\n        return containerClasses;\n    }\n    /**\n     * @hidden\n     */\n    get customItemSizeClass() {\n        return `${this.size ? getSizeClass('list', this.size) : ''}`;\n    }\n    get width() {\n        let wrapperOffsetWidth = 0;\n        if (isDocumentAvailable()) {\n            wrapperOffsetWidth = this.wrapper.nativeElement.offsetWidth;\n        }\n        const width = this.popupSettings.width || wrapperOffsetWidth;\n        const minWidth = isNaN(wrapperOffsetWidth) ? wrapperOffsetWidth : `${wrapperOffsetWidth}px`;\n        const maxWidth = isNaN(width) ? width : `${width}px`;\n        return { min: minWidth, max: maxWidth };\n    }\n    get height() {\n        const popupHeight = this.popupSettings.height;\n        return isPresent(popupHeight) ? `${popupHeight}px` : 'auto';\n    }\n    get activeDescendant() {\n        const focusedTagIndex = this.focusedTagIndex;\n        const focusedListIndex = this.selectionService.focused;\n        let prefix;\n        let item;\n        if (isPresent(focusedTagIndex) && !this.isOpen) {\n            item = this.tags[focusedTagIndex];\n            prefix = this.tagPrefix;\n        }\n        else if (isPresent(focusedListIndex) && focusedListIndex !== -1 && this.isOpen) {\n            item = this.dataService.itemAt(focusedListIndex);\n            prefix = this.optionPrefix;\n        }\n        else {\n            return null;\n        }\n        return prefix + \"-\" + getter(item, this.valueField);\n    }\n    get clearButtonVisiblity() {\n        if (this.touchEnabled) {\n            return 'visible';\n        }\n    }\n    /**\n     * @hidden\n     */\n    verifySettings() {\n        if (!isDevMode() || this.value.length === 0) {\n            return;\n        }\n        if (!isArray(this.value)) {\n            throw new Error(MultiselectMessages.array);\n        }\n        if (this.valuePrimitive === true && isObjectArray(this.value)) {\n            throw new Error(MultiselectMessages.primitive);\n        }\n        if (this.valuePrimitive === false && !isObjectArray(this.value)) {\n            throw new Error(MultiselectMessages.object);\n        }\n        const valueOrText = !isPresent(this.valueField) !== !isPresent(this.textField);\n        if (valueOrText) {\n            throw new Error(MultiselectMessages.textAndValue);\n        }\n    }\n    /**\n     * @hidden\n     */\n    change(event) {\n        if (event.isMultipleSelection) {\n            // Existing items.\n            if (isPresent(event.added) && event.added.length > 0) {\n                event.added.forEach((itemIndex) => {\n                    const dataItem = this.dataService.itemAt(itemIndex);\n                    const newItem = (this.valuePrimitive && isPresent(dataItem) && isPresent(dataItem[this.valueField])) ? dataItem[this.valueField] : dataItem;\n                    if (newItem) {\n                        this.value = [...this.value, newItem];\n                    }\n                });\n            }\n            if (isPresent(event.removed) && event.removed.length > 0) {\n                event.removed.forEach((itemIndex) => {\n                    const dataItem = this.dataService.itemAt(itemIndex);\n                    const filter = (item) => getter(item, this.valueField) !== getter(dataItem, this.valueField);\n                    this.value = this.value.filter(filter);\n                });\n                this.cdr.detectChanges();\n            }\n        }\n        else {\n            const isCustomItem = (isPresent(event.added) || isPresent(event.removed)) && (event.added === -1 || event.removed === -1);\n            if (isCustomItem) {\n                this.addCustomValue(this.text);\n                return; // The change is emited asynchronosly.\n            }\n            // Existing items.\n            if (isPresent(event.added)) {\n                const dataItem = this.dataService.itemAt(event.added);\n                const newItem = (this.valuePrimitive && isPresent(dataItem) && isPresent(dataItem[this.valueField])) ? dataItem[this.valueField] : dataItem;\n                this.value = [...this.value, newItem];\n            }\n            if (isPresent(event.removed)) {\n                const dataItem = this.dataService.itemAt(event.removed);\n                const filter = (item) => getter(item, this.valueField) !== getter(dataItem, this.valueField);\n                this.value = this.value.filter(filter);\n                this.selectionService.focused = event.removed;\n                this.cdr.detectChanges();\n            }\n        }\n        this.emitValueChange();\n    }\n    /**\n     * @hidden\n     */\n    setState(value) {\n        let data = this.dataService.data;\n        if (this.dataService.grouped) {\n            data = data.filter(item => !item.header).map(item => item.value);\n        }\n        const selection = selectedIndices(this.value, data, this.valueField);\n        this.selectionService.resetSelection(selection);\n        if (this.disabledItemsService.isIndexDisabled(this.selectionService.focused)) {\n            this.selectionService.focused = this.firstFocusableIndex(0);\n        }\n        if (this.isOpen && this.selectionService.focused === undefined) {\n            if (this.dataService.itemsCount > 0) {\n                this.selectionService.focused = this.firstFocusableIndex(0);\n            }\n            else if (this.allowCustom) {\n                this.selectionService.focused = -1;\n            }\n        }\n        if (this.valuePrimitive && !this.valueField) {\n            this.selectedDataItems = value.slice();\n        }\n        if (isObjectArray(value) || this.valuePrimitive && this.valueField) {\n            this.selectedDataItems = resolveAllValues(value, data, this.valueField);\n        }\n        if (this.selectedDataItems.length < value.length) {\n            this.selectedDataItems = value\n                .map(current => {\n                const dataItem = this.selectedDataItems.find(item => getter(item, this.valueField) === getter(current, this.valueField));\n                return isPresent(dataItem) ? dataItem : this.resolveDataItemFromTags(current);\n            })\n                .filter(dataItem => isPresent(dataItem));\n        }\n        this.tags = this.tagMapper(this.selectedDataItems.slice(0));\n        this.disabledIndices = this.disabledItemsMapper();\n        this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    handleFilter(text) {\n        this.text = text;\n        if (text && !this.isOpen) {\n            this.openPopup();\n        }\n        if (this.filterable) {\n            this.filterChange.emit(text);\n        }\n        else {\n            this.searchTextAndFocus(text);\n        }\n        this.searchbar.setInputSize();\n    }\n    /**\n     * @hidden\n     */\n    pageChange(event) {\n        const virtual = this.virtual;\n        virtual.skip = event.skip;\n    }\n    /**\n     * @hidden\n     */\n    clearFilter() {\n        if (this.filterable && this.text) {\n            this.filterChange.emit(\"\");\n        }\n        this.text = \"\";\n        /* Clearing the value from the input as the setInputSize calculation will be incorrect otherwise.\n         Calling cdr.detectChanges to clear the input value as a result of property binding\n         causes JAWS to read outdated tag values in IE upon tag selection for some reason. */\n        this.searchbar.input.nativeElement.value = \"\";\n        this.searchbar.setInputSize();\n    }\n    /**\n     * @hidden\n     */\n    handleNavigate(event) {\n        const navigateInput = this.text && event.keyCode !== Keys.ArrowDown && event.keyCode !== Keys.ArrowUp;\n        const selectValue = this.text && event.keyCode === Keys.Enter || event.keyCode === Keys.Escape;\n        const deleteTag = !this.text && event.keyCode === Keys.Backspace && this.tags.length > 0;\n        if (deleteTag) {\n            this.handleBackspace();\n            return;\n        }\n        if (this.disabled || navigateInput && !selectValue) {\n            return;\n        }\n        const eventData = event;\n        const focused = isNaN(this.selectionService.focused) ? -1 : this.selectionService.focused;\n        const action = this.navigationService.process({\n            current: focused,\n            max: this.dataService.itemsCount - 1,\n            min: this.allowCustom && this.text ? -1 : 0,\n            open: this.isOpen,\n            originalEvent: eventData\n        });\n        if (action !== NavigationAction.Undefined &&\n            ((action === NavigationAction.Enter && this.isOpen) || action !== NavigationAction.Enter)) {\n            event.preventDefault();\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleRemoveTag({ tag }) {\n        const eventArgs = new RemoveTagEvent(tag);\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        this.focus();\n        this.removeTag.emit(eventArgs);\n        if (eventArgs.isDefaultPrevented()) {\n            return;\n        }\n        if (tag instanceof Array) {\n            this.removeGroupTag(tag);\n        }\n        else {\n            this.removeSingleTag(tag);\n        }\n        this.cdr.detectChanges();\n    }\n    /**\n     * @hidden\n     */\n    clearAll(event) {\n        event === null || event === void 0 ? void 0 : event.stopImmediatePropagation();\n        event === null || event === void 0 ? void 0 : event.preventDefault();\n        this.focus();\n        this.clearFilter();\n        this.selectionService.lastClickedIndex = null;\n        const selected = this.selectionService.selected;\n        this.value = this.value.filter((_item, index) => this.disabledItemsService.isIndexDisabled(selected[index]));\n        this.emitValueChange();\n    }\n    /**\n     * @hidden\n     */\n    addCustomValue(text) {\n        this.customValueSubject.next(text);\n    }\n    ngAfterContentChecked() {\n        this.verifySettings();\n    }\n    ngDoCheck() {\n        const valueChanges = this.differ && this.differ.diff(this.value);\n        if (valueChanges && !this.valueChangeDetected) {\n            this.setState(this.value);\n        }\n        this.valueChangeDetected = false;\n    }\n    ngOnInit() {\n        this.renderer.removeAttribute(this.wrapper.nativeElement, \"tabindex\");\n        this.createCustomValueStream();\n        this.localizationChangeSubscription = this.localization\n            .changes.subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n            this.cdr.markForCheck();\n        });\n        this.setState(this.value);\n        this.setComponentClasses();\n        this.initialized = true;\n    }\n    ngOnChanges(changes) {\n        const virtual = this.virtual;\n        const requestInitialData = virtual && changes.data && changes.data.isFirstChange();\n        if (requestInitialData) {\n            this.pageChange({ skip: 0, take: virtual.pageSize });\n        }\n        if (isChanged('valueNormalizer', changes)) {\n            this.createCustomValueStream();\n        }\n        if (anyChanged(['textField', 'valueField', 'valuePrimitive'], changes)) {\n            this.setState(this.value);\n        }\n    }\n    ngAfterViewInit() {\n        this.searchbar.setInputSize();\n    }\n    ngOnDestroy() {\n        this._toggle(false);\n        this.unsubscribeEvents();\n    }\n    /**\n     * Toggles the visibility of the popup\n     * ([see example]({% slug openstate_multiselect %}#toc-setting-the-initially-opened-component)).\n     * If you use the `toggle` method to open or close the popup, the respective `open` and `close` events will not be fired.\n     *\n     * @param open - The state of the popup.\n     */\n    toggle(open) {\n        // The Promise is required for opening the popup on load.\n        // Otherwise, the \"Expression has changed...\" type error will be thrown.\n        Promise.resolve(null).then(() => {\n            const shouldOpen = isPresent(open) ? open : !this._open;\n            this._toggle(shouldOpen);\n            this.cdr.markForCheck();\n        });\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n    get isOpen() {\n        return this._open;\n    }\n    /**\n     * Resets the value of the MultiSelect.\n     * If you use the `reset` method to clear the value of the component,\n     * the model will not update automatically and the `selectionChange` and `valueChange` events will not be fired.\n     */\n    reset() {\n        this.text = \"\";\n        this.value = [];\n    }\n    /**\n     * @hidden\n     */\n    messageFor(key) {\n        return this.localization.get(key);\n    }\n    // NG MODEL BINDINGS\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.value = value || [];\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @hidden\n     */\n    onTagMapperChange() {\n        this.tags = this.tagMapper(this.selectedDataItems.slice(0));\n        this.cdr.markForCheck();\n    }\n    set isFocused(isFocused) {\n        this.renderer[isFocused ? 'addClass' : 'removeClass'](this.wrapper.nativeElement, 'k-focus');\n        this._isFocused = isFocused;\n    }\n    get isFocused() {\n        return this._isFocused;\n    }\n    subscribeEvents() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        const isOpen = () => this.isOpen;\n        const isClosed = () => !this.isOpen;\n        const isTagFocused = () => !this.isOpen && this.focusedTagIndex !== undefined;\n        [\n            this.selectionService.onChange.subscribe(this.handleItemChange.bind(this)),\n            this.navigationService.esc.subscribe(this.closePopup.bind(this)),\n            this.navigationService.enter.pipe(filter(isOpen)).subscribe(this.handleEnter.bind(this)),\n            this.navigationService.open.subscribe(this.openPopup.bind(this)),\n            this.navigationService.close.subscribe(this.handleClose.bind(this)),\n            this.navigationService.up.pipe(filter(isOpen)).subscribe((event) => this.handleUp(event.index)),\n            this.navigationService.home.pipe(filter(() => isClosed)).subscribe(this.handleHome.bind(this)),\n            this.navigationService.end.pipe(filter(() => isClosed)).subscribe(this.handleEnd.bind(this)),\n            this.navigationService.backspace.pipe(filter(isTagFocused)).subscribe(this.handleBackspace.bind(this)),\n            this.navigationService.delete.pipe(filter(isTagFocused)).subscribe(this.handleDelete.bind(this)),\n            this.navigationService.left.subscribe(this.direction === 'rtl' ? this.handleRightKey.bind(this) : this.handleLeftKey.bind(this)),\n            this.navigationService.right.subscribe(this.direction === 'rtl' ? this.handleLeftKey.bind(this) : this.handleRightKey.bind(this)),\n            this.navigationService.down.subscribe((event) => this.handleDownKey(event.index)),\n            this.navigationService.selectprevious.pipe(filter(isOpen)).subscribe((event) => this.handleSelectUpDown(event)),\n            this.navigationService.selectnext.pipe(filter(isOpen)).subscribe((event) => this.handleSelectUpDown(event)),\n            this.navigationService.selectalltobeginning.pipe(filter(isOpen)).subscribe(() => this.handleSelectAllToBeginning()),\n            this.navigationService.selectalltoend.pipe(filter(isOpen)).subscribe(() => this.handleSelectAllToEnd()),\n            merge(this.navigationService.pagedown, this.navigationService.pageup).subscribe((event) => {\n                if (this.isOpen) {\n                    event.originalEvent.preventDefault();\n                    this.optionsList.scrollWithOnePage(NavigationAction[event.originalEvent.code]);\n                }\n            })\n        ].forEach(s => this.observableSubscriptions.add(s));\n    }\n    subscribeTouchEvents() {\n        if (!isDocumentAvailable() || !this.touchEnabled) {\n            return;\n        }\n        this._zone.runOutsideAngular(() => \n        // Roll up MultiSelect on iOS when tapped outside\n        this.touchstartDisposeHandler = this.renderer.listen(document, 'touchstart', (e) => {\n            const target = e.target;\n            if ((this.isFocused || this.isOpen) && !inDropDown(this.wrapper, target, this.popupRef)) {\n                this._zone.run(() => {\n                    this.blur();\n                    if (this.isOpen) {\n                        this.togglePopup(false);\n                    }\n                });\n            }\n        }));\n    }\n    unsubscribeEvents() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        this.observableSubscriptions.unsubscribe();\n        if (this.customValueSubscription) {\n            this.customValueSubscription.unsubscribe();\n        }\n        if (this.localizationChangeSubscription) {\n            this.localizationChangeSubscription.unsubscribe();\n        }\n        if (this.touchstartDisposeHandler) {\n            this.touchstartDisposeHandler();\n        }\n    }\n    removeGroupTag(dataItems) {\n        let data = this.dataService.data;\n        if (this.dataService.grouped) {\n            data = data.filter(item => !item.header).map(item => item.value);\n        }\n        const dataItemValues = new Set(dataItems.map(item => getter(item, this.valueField)));\n        this.value = this.value.filter(value => {\n            const index = selectedIndices([value], data, this.valueField)[0];\n            const isDataItemDisabled = this.disabledItemsService.isIndexDisabled(index);\n            return !dataItemValues.has(getter(value, this.valueField)) || isDataItemDisabled;\n        });\n        this.emitValueChange();\n    }\n    removeSingleTag(dataItem) {\n        let data = this.dataService.data;\n        if (this.dataService.grouped) {\n            data = data.filter(item => !item.header).map(item => item.value);\n        }\n        const index = selectedIndices([dataItem], data, this.valueField)[0];\n        if (this.disabledItemsService.isIndexDisabled(index)) {\n            return;\n        }\n        if (isNumber(index)) {\n            this.selectionService.deselect(index);\n            this.selectionService.focused = index;\n            this.togglePopup(false);\n        }\n        else { // the deleted item is not present in the source\n            const filter = item => getter(item, this.valueField) !== getter(dataItem, this.valueField);\n            this.value = this.value.filter(filter);\n            this.emitValueChange();\n        }\n    }\n    /**\n     * @hidden\n     *\n     * Determines which of the provided tags should be disabled and stores their position indices\n     */\n    disabledItemsMapper() {\n        const { selected } = this.selectionService;\n        return new Set(this.selectedDataItems.reduce((indices, _item, index) => {\n            if (this.disabledItemsService.isIndexDisabled(selected[index])) {\n                indices.push(index);\n            }\n            return indices;\n        }, []));\n    }\n    createCustomValueStream() {\n        if (this.customValueSubscription) {\n            this.customValueSubscription.unsubscribe();\n        }\n        this.customValueSubscription = this.customValueSubject.pipe(tap(() => {\n            this.loading = true;\n            this.disabled = true;\n            this.cdr.detectChanges();\n        }), this.valueNormalizer, catchError(() => {\n            this.loading = false;\n            this.disabled = false;\n            if (this.autoClose) {\n                this.togglePopup(false);\n            }\n            if (this.autoClose || !this.filterable) {\n                this.clearFilter();\n            }\n            this.nextTick(() => {\n                this.searchbar.focus();\n            });\n            this.createCustomValueStream();\n            return of(null);\n        }))\n            .subscribe((normalizedValue) => {\n            this.loading = false;\n            this.disabled = false;\n            if (isPresent(normalizedValue)) { // if valueNormalizer returns `null` or `undefined` custom value is discarded\n                const newValue = this.valuePrimitive ? getter(normalizedValue, this.valueField) : normalizedValue;\n                const itemIndex = this.dataService.indexOf(newValue);\n                const customItem = itemIndex === -1;\n                if (this.value.indexOf(newValue) === -1) {\n                    this.tags = this.tagMapper([...this.selectedDataItems, normalizedValue]);\n                    if (!customItem) {\n                        this.selectionService.add(itemIndex);\n                    }\n                    else {\n                        this.value = [...this.value, newValue];\n                    }\n                }\n                else {\n                    if (!customItem && this.selectionService.isSelected(itemIndex)) {\n                        this.selectionService.deselect(itemIndex);\n                        this.selectionService.focused = itemIndex;\n                    }\n                    else {\n                        this.value = this.value.filter(item => getter(item, this.valueField) !== newValue);\n                    }\n                }\n                this.emitValueChange();\n            }\n            if (this.autoClose) {\n                this.togglePopup(false);\n            }\n            if (this.autoClose || !this.filterable) {\n                this.clearFilter();\n            }\n            this.nextTick(() => {\n                this.searchbar.focus();\n            });\n        });\n    }\n    handleItemChange(event) {\n        this.change(event);\n        if (this.autoClose && !event.preventClosingPopup) {\n            this.togglePopup(false);\n        }\n        if (this.autoClose || !this.filterable) {\n            this.clearFilter();\n        }\n    }\n    handleEnter(event) {\n        const service = this.selectionService;\n        const focusedIndex = this.selectionService.focused;\n        this.selectionService.lastClickedIndex = focusedIndex;\n        if (this.isOpen) {\n            event.originalEvent.preventDefault();\n        }\n        if (focusedIndex === -1) {\n            if (this.allowCustom && this.text) {\n                this.addCustomValue(this.text);\n            }\n            return; // Clear filter & close are done at customValueSubscription due to race conditions.\n        }\n        if (service.isSelected(focusedIndex)) {\n            service.deselect(focusedIndex);\n            service.focused = focusedIndex;\n        }\n        else {\n            service.add(focusedIndex);\n        }\n        if (this.autoClose) {\n            this.togglePopup(false);\n        }\n        if (this.autoClose || !this.filterable) {\n            this.clearFilter();\n        }\n    }\n    handleClose() {\n        this.closePopup();\n        this.searchbar.focus();\n    }\n    handleEnd() {\n        this.focusedTagIndex = this.tags.length - 1;\n    }\n    handleHome() {\n        this.focusedTagIndex = 0;\n    }\n    sortSelectionAscending() {\n        return this.selectionService.selected.sort((a, b) => a - b);\n    }\n    handleSelectAll() {\n        const selectedItemsCount = this.selectionService.selected.length;\n        const dataItemsCount = this.dataService.data.length;\n        const dataItemsWithoutHeadersCount = this.dataService.data.filter(i => !i.header).length;\n        if ((!this.dataService.grouped && selectedItemsCount === dataItemsCount) ||\n            (this.dataService.grouped && selectedItemsCount === dataItemsWithoutHeadersCount)) {\n            this.clearAll();\n        }\n        else {\n            this.selectionService.selectFromTo(0, dataItemsCount - 1);\n            this.selectionService.emitMultipleAddedRemoved();\n        }\n    }\n    handleSelectAllToBeginning() {\n        const selectedItemsCount = this.selectionService.selected.length;\n        const dataItemsCount = this.dataService.data.length;\n        const focusedItem = this.selectionService.focused;\n        const largestIndex = this.sortSelectionAscending()[selectedItemsCount - 1];\n        if (selectedItemsCount !== dataItemsCount) {\n            this.selectionService.unselectFromTo(largestIndex, focusedItem + 1);\n            this.selectionService.selectFromTo(0, focusedItem);\n        }\n        this.nextTick(() => this.selectionService.focus(0));\n        this.selectionService.emitMultipleAddedRemoved();\n    }\n    handleSelectAllToEnd() {\n        const selectedItemsCount = this.selectionService.selected.length;\n        const dataItemsCount = this.dataService.data.length;\n        const focusedItem = this.selectionService.focused;\n        if (selectedItemsCount !== dataItemsCount) {\n            this.selectionService.unselectFromTo(focusedItem - 1, 0);\n            this.selectionService.selectFromTo(focusedItem, dataItemsCount - 1);\n        }\n        if (this.dataService.grouped) {\n            const lastItemIndex = this.dataService.groupIndices[this.dataService.groupIndices.length - 1] - 1;\n            this.nextTick(() => this.selectionService.focus(lastItemIndex));\n        }\n        else {\n            this.nextTick(() => this.selectionService.focus(dataItemsCount - 1));\n        }\n        this.selectionService.emitMultipleAddedRemoved();\n    }\n    handleSelectUpDown(event) {\n        const focusedIndex = this.selectionService.focused;\n        if (!isPresent(focusedIndex)) {\n            return;\n        }\n        let indexToSelect;\n        if (event.originalEvent.key === 'ArrowUp') {\n            indexToSelect = focusedIndex > 0 ? focusedIndex - 1 : focusedIndex;\n        }\n        else {\n            indexToSelect = focusedIndex < this.dataService.data.length - 1 ? focusedIndex + 1 : focusedIndex;\n        }\n        if (!isPresent(this.selectionService.lastClickedIndex)) {\n            this.selectionService.lastClickedIndex = focusedIndex;\n        }\n        this.selectRangeFromTo(indexToSelect);\n    }\n    /**\n     * Selects all items between the focused item and the last clicked item (index). Also removes all other selected items.\n     */\n    selectRangeFromTo(indexToSelect) {\n        const lastClickedIndex = this.selectionService.lastClickedIndex;\n        if (lastClickedIndex > indexToSelect) {\n            this.selectionService.unselectNotNeededIndices(indexToSelect, lastClickedIndex, this.dataService.data.length);\n            this.selectionService.selectFromTo(indexToSelect, this.selectionService.lastClickedIndex);\n            this.selectionService.emitMultipleAddedRemoved();\n        }\n        else {\n            this.selectionService.unselectNotNeededIndices(lastClickedIndex, indexToSelect, this.dataService.data.length);\n            this.selectionService.selectFromTo(lastClickedIndex, indexToSelect);\n            this.selectionService.emitMultipleAddedRemoved();\n        }\n        this.nextTick(() => this.selectionService.focus(indexToSelect));\n    }\n    handleUp(index) {\n        this.selectionService.focused = index;\n    }\n    handleBackspace() {\n        if (this.focusedTagIndex !== undefined) {\n            this.handleDelete();\n        }\n        else {\n            this.handleRemoveTag({ tag: this.tags[this.tags.length - 1] });\n            this.searchbar.focus();\n        }\n    }\n    handleDelete() {\n        this.handleRemoveTag({ tag: this.tags[this.focusedTagIndex] });\n        if (this.focusedTagIndex === this.tags.length) {\n            this.focusedTagIndex = undefined;\n        }\n    }\n    handleLeftKey() {\n        if (this.focusedTagIndex === undefined || this.focusedTagIndex < 0) {\n            this.focusedTagIndex = this.tags.length - 1;\n        }\n        else if (this.focusedTagIndex !== 0) {\n            this.focusedTagIndex--;\n        }\n    }\n    handleDownKey(index) {\n        if (this.isOpen) {\n            this.selectionService.focused = index || this.firstFocusableIndex(0);\n        }\n        else {\n            this.openPopup();\n        }\n    }\n    handleRightKey() {\n        const last = this.tags.length - 1;\n        if (this.focusedTagIndex === last) {\n            this.focusedTagIndex = undefined;\n        }\n        else if (this.focusedTagIndex < last) {\n            this.focusedTagIndex++;\n        }\n    }\n    findIndex(text, startsFrom = 0) {\n        let itemText;\n        text = text.toLowerCase();\n        let index = this.dataService.findIndex(item => {\n            if (this.dataService.grouped) {\n                itemText = getter(item.value, this.textField);\n            }\n            else {\n                itemText = getter(item, this.textField);\n            }\n            itemText = !isPresent(itemText) ? \"\" : itemText.toString().toLowerCase();\n            return text && itemText.startsWith(text);\n        }, startsFrom);\n        if (this.disabledItemsService.isIndexDisabled(index)) {\n            return (index + 1 > this.dataService.itemsCount) ? -1 : this.findIndex(text, index + 1);\n        }\n        else {\n            return index;\n        }\n    }\n    searchTextAndFocus(text) {\n        const index = this.findIndex(text);\n        this.selectionService.focused = index;\n    }\n    closePopup() {\n        this.togglePopup(false);\n        this.focusedTagIndex = undefined;\n    }\n    openPopup() {\n        this.togglePopup(true);\n        this.focusedTagIndex = undefined;\n    }\n    togglePopup(open) {\n        const isDisabled = this.disabled || this.readonly;\n        const sameState = this.isOpen === open;\n        if (isDisabled || sameState) {\n            return;\n        }\n        const isDefaultPrevented = this.triggerPopupEvents(open);\n        if (!isDefaultPrevented) {\n            this._toggle(open);\n        }\n    }\n    triggerPopupEvents(open) {\n        const eventArgs = new PreventableEvent();\n        if (open) {\n            this.open.emit(eventArgs);\n        }\n        else {\n            this.close.emit(eventArgs);\n        }\n        return eventArgs.isDefaultPrevented();\n    }\n    _toggle(open) {\n        this._open = open;\n        this.destroyPopup();\n        if (this._open) {\n            this.createPopup();\n        }\n    }\n    destroyPopup() {\n        if (this.popupRef) {\n            this.popupRef.popupElement\n                .removeEventListener('mousedown', this.popupMouseDownHandler);\n            this.popupRef.close();\n            this.popupRef = null;\n        }\n    }\n    createPopup() {\n        if (this.virtual) {\n            this.virtual.skip = 0;\n        }\n        const horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n        const anchorPosition = { horizontal: horizontalAlign, vertical: \"bottom\" };\n        const popupPosition = { horizontal: horizontalAlign, vertical: \"top\" };\n        this.popupRef = this.popupService.open({\n            anchor: this.wrapper,\n            anchorAlign: anchorPosition,\n            animate: this.popupSettings.animate,\n            appendTo: this.appendTo,\n            content: this.popupTemplate,\n            popupAlign: popupPosition,\n            popupClass: this.listContainerClasses,\n            positionMode: 'absolute'\n        });\n        const popupWrapper = this.popupRef.popupElement;\n        const { min, max } = this.width;\n        popupWrapper.addEventListener('mousedown', this.popupMouseDownHandler);\n        popupWrapper.style.minWidth = min;\n        popupWrapper.style.width = max;\n        popupWrapper.style.height = this.height;\n        popupWrapper.setAttribute(\"dir\", this.direction);\n        const listBox = popupWrapper.querySelector('ul.k-list-ul');\n        const ariaLabel = this.searchbar.input.nativeElement.getAttribute('aria-labelledby');\n        if (ariaLabel) {\n            listBox.setAttribute('aria-labelledby', ariaLabel);\n        }\n        this.popupRef.popupOpen.subscribe(() => {\n            this.cdr.detectChanges();\n            this.optionsList.scrollToItem(this.selectionService.focused);\n            this.opened.emit();\n        });\n        this.popupRef.popupClose.subscribe(() => {\n            this.closed.emit();\n        });\n        this.popupRef.popupAnchorViewportLeave.subscribe(() => {\n            this.togglePopup(false);\n        });\n    }\n    emitValueChange() {\n        this.onChangeCallback(this.value);\n        this.valueChange.emit(this.value);\n    }\n    resolveDataItemFromTags(value) {\n        if (!(this.tags && this.tags.length && isPresent(value))) {\n            return undefined;\n        }\n        // Flattening the tags array in case of a summary tag occurrence.\n        const tags = this.tags.reduce((acc, tag) => {\n            const items = isArray(tag) ? tag : [tag];\n            acc.push(...items);\n            return acc;\n        }, []);\n        return tags.find(tag => getter(tag, this.valueField) === getter(value, this.valueField));\n    }\n    firstFocusableIndex(index) {\n        const maxIndex = this.dataService.itemsCount;\n        if (this.disabledItemsService.isIndexDisabled(index)) {\n            const nextIndex = index + 1;\n            return (nextIndex < maxIndex) ? this.firstFocusableIndex(nextIndex) : undefined;\n        }\n        else {\n            return index;\n        }\n    }\n    nextTick(f) {\n        this._zone.runOutsideAngular(() => {\n            // Use `setTimeout` instead of a resolved promise\n            // because the latter does not wait long enough.\n            setTimeout(() => this._zone.run(f));\n        });\n    }\n    setComponentClasses() {\n        if (this.size !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('input', this.size));\n        }\n        if (this.rounded !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n        }\n        if (this.fillMode !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('input', this.fillMode));\n        }\n    }\n}\nMultiSelectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MultiSelectComponent, deps: [{ token: i0.ElementRef }, { token: i1.LocalizationService }, { token: i2.PopupService }, { token: DataService }, { token: SelectionService }, { token: NavigationService }, { token: DisabledItemsService }, { token: i0.ChangeDetectorRef }, { token: i0.KeyValueDiffers }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: TOUCH_ENABLED, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMultiSelectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: MultiSelectComponent, selector: \"kendo-multiselect\", inputs: { focusableId: \"focusableId\", autoClose: \"autoClose\", loading: \"loading\", data: \"data\", value: \"value\", valueField: \"valueField\", textField: \"textField\", tabindex: \"tabindex\", tabIndex: \"tabIndex\", size: \"size\", rounded: \"rounded\", fillMode: \"fillMode\", placeholder: \"placeholder\", disabled: \"disabled\", itemDisabled: \"itemDisabled\", checkboxes: \"checkboxes\", readonly: \"readonly\", filterable: \"filterable\", virtual: \"virtual\", popupSettings: \"popupSettings\", listHeight: \"listHeight\", valuePrimitive: \"valuePrimitive\", clearButton: \"clearButton\", tagMapper: \"tagMapper\", allowCustom: \"allowCustom\", valueNormalizer: \"valueNormalizer\" }, outputs: { filterChange: \"filterChange\", valueChange: \"valueChange\", open: \"open\", opened: \"opened\", close: \"close\", closed: \"closed\", onFocus: \"focus\", onBlur: \"blur\", removeTag: \"removeTag\" }, host: { listeners: { \"keydown\": \"handleKeyboardEvent($event)\", \"mousedown\": \"hostMousedown($event)\" }, properties: { \"class.k-multiselect\": \"this.hostClasses\", \"class.k-input\": \"this.hostClasses\", \"attr.dir\": \"this.dir\", \"class.k-disabled\": \"this.disabledClass\", \"class.k-loading\": \"this.isLoading\" } }, providers: [\n        MULTISELECT_VALUE_ACCESSOR,\n        DataService,\n        SelectionService,\n        NavigationService,\n        DisabledItemsService,\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.multiselect'\n        },\n        {\n            provide: FilterableComponent, useExisting: forwardRef(() => MultiSelectComponent)\n        },\n        {\n            provide: KendoInput, useExisting: forwardRef(() => MultiSelectComponent)\n        }\n    ], queries: [{ propertyName: \"template\", first: true, predicate: ItemTemplateDirective, descendants: true }, { propertyName: \"customItemTemplate\", first: true, predicate: CustomItemTemplateDirective, descendants: true }, { propertyName: \"groupTemplate\", first: true, predicate: GroupTemplateDirective, descendants: true }, { propertyName: \"fixedGroupTemplate\", first: true, predicate: FixedGroupTemplateDirective, descendants: true }, { propertyName: \"headerTemplate\", first: true, predicate: HeaderTemplateDirective, descendants: true }, { propertyName: \"footerTemplate\", first: true, predicate: FooterTemplateDirective, descendants: true }, { propertyName: \"tagTemplate\", first: true, predicate: TagTemplateDirective, descendants: true }, { propertyName: \"groupTagTemplate\", first: true, predicate: GroupTagTemplateDirective, descendants: true }, { propertyName: \"noDataTemplate\", first: true, predicate: NoDataTemplateDirective, descendants: true }], viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true, read: ViewContainerRef, static: true }, { propertyName: \"searchbar\", first: true, predicate: SearchBarComponent, descendants: true, static: true }, { propertyName: \"popupTemplate\", first: true, predicate: [\"popupTemplate\"], descendants: true, static: true }, { propertyName: \"optionsList\", first: true, predicate: [\"optionsList\"], descendants: true }], exportAs: [\"kendoMultiSelect\"], usesOnChanges: true, ngImport: i0, template: `\n        <ng-container kendoMultiSelectLocalizedMessages\n            i18n-noDataText=\"kendo.multiselect.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.multiselect.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n        >\n        </ng-container>\n        <kendo-taglist\n            [size]=\"size\"\n            [rounded]=\"rounded\"\n            [fillMode]=\"fillMode\"\n            [id]=\"tagListId\"\n            [tags]=\"tags\"\n            [textField]=\"textField\"\n            [valueField]=\"valueField\"\n            [focused]=\"focusedTagIndex\"\n            [disabled]=\"disabled\"\n            [template]=\"tagTemplate\"\n            [groupTemplate]=\"groupTagTemplate\"\n            [tagPrefix]=\"tagPrefix\"\n            [disabledIndices]=\"disabledIndices\"\n            (removeTag)=\"handleRemoveTag($event)\"\n        >\n            <kendo-searchbar\n                #searchbar\n                [id]=\"focusableId\"\n                [role]=\"'combobox'\"\n                [tagListId]=\"tagListId\"\n                [listId]=\"listBoxId\"\n                [isLoading]=\"loading\"\n                [isFilterable]=\"filterable\"\n                [activeDescendant]=\"activeDescendant\"\n                [userInput]=\"text\"\n                [disabled]=\"disabled\"\n                [readonly]=\"readonly\"\n                [tabIndex]=\"tabIndex\"\n                [popupOpen]=\"isOpen\"\n                [placeholder]=\"placeholder\"\n                (onNavigate)=\"handleNavigate($event)\"\n                (valueChange)=\"handleFilter($event)\"\n                (onBlur)=\"onSearchBarBlur()\"\n                (onFocus)=\"onSearchBarFocus()\"\n            >\n            </kendo-searchbar>\n        </kendo-taglist>\n\n        <span\n            *ngIf=\"!loading && !readonly && clearButton && (tags?.length || text?.length)\"\n            class=\"k-clear-value\"\n            [style.visibility]=\"clearButtonVisiblity\"\n            [attr.title]=\"messageFor('clearTitle')\"\n            role=\"button\"\n            tabindex=\"-1\"\n            (mousedown)=\"clearAll($event)\"\n        >\n            <span class=\"k-icon k-i-x\"></span>\n        </span>\n        <span\n            *ngIf=\"loading\"\n            class=\"k-icon k-i-loading k-input-loading-icon\"\n        >\n        </span>\n        <ng-template #popupTemplate>\n            <!--header template-->\n            <ng-template *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate.templateRef\n                }\">\n            </ng-template>\n            <!--custom item template-->\n            <div\n                *ngIf=\"allowCustom && text\"\n                class=\"k-list\"\n                [ngClass]=\"customItemSizeClass\"\n            >\n                <div class=\"k-list-item k-custom-item\" kendoDropDownsSelectable [multipleSelection]=\"true\" [index]=\"-1\">\n                    <ng-template *ngIf=\"customItemTemplate;else default_custom_item_template\"\n                        [templateContext]=\"{\n                            templateRef: customItemTemplate.templateRef,\n                            $implicit: text\n                        }\">\n                    </ng-template>\n                    <ng-template #default_custom_item_template>{{ text }}</ng-template>\n                    <span class=\"k-icon k-i-plus\" style=\"float: right\"></span>\n                </div>\n            </div>\n            <!--list-->\n            <kendo-list\n                #optionsList\n                [size]=\"size\"\n                [rounded]=\"rounded\"\n                [id]=\"listBoxId\"\n                [optionPrefix]=\"optionPrefix\"\n                [data]=\"data\"\n                [textField]=\"textField\"\n                [valueField]=\"valueField\"\n                [height]=\"listHeight\"\n                [template]=\"template\"\n                [groupTemplate]=\"groupTemplate\"\n                [fixedGroupTemplate]=\"fixedGroupTemplate\"\n                [show]=\"isOpen\"\n                [multipleSelection]=\"true\"\n                [virtual]=\"virtual\"\n                (pageChange)=\"pageChange($event)\"\n                [checkboxes]=\"checkboxes\"\n                [isMultiselect]=\"true\"\n                >\n            </kendo-list>\n            <!--no data template-->\n            <div class=\"k-no-data\" *ngIf=\"data.length === 0\">\n                <ng-template [ngIf]=\"noDataTemplate\"\n                    [templateContext]=\"{\n                        templateRef: noDataTemplate ? noDataTemplate.templateRef : undefined\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!noDataTemplate\">\n                    <div>{{ messageFor('noDataText') }}</div>\n                </ng-template>\n            </div>\n            <!--footer template-->\n            <ng-template *ngIf=\"footerTemplate\"\n                [templateContext]=\"{\n                    templateRef: footerTemplate.templateRef\n                }\">\n            </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"isOpen\">\n            <kendo-resize-sensor (resize)=\"onResize()\"></kendo-resize-sensor>\n        </ng-template>\n        <ng-container #container></ng-container>\n  `, isInline: true, components: [{ type: TagListComponent, selector: \"kendo-taglist\", inputs: [\"tags\", \"textField\", \"valueField\", \"valueDepth\", \"focused\", \"template\", \"groupTemplate\", \"disabled\", \"tagPrefix\", \"id\", \"size\", \"rounded\", \"fillMode\", \"disabledIndices\"], outputs: [\"removeTag\"] }, { type: SearchBarComponent, selector: \"kendo-searchbar\", inputs: [\"id\", \"listId\", \"tagListId\", \"activeDescendant\", \"disabled\", \"readonly\", \"tabIndex\", \"popupOpen\", \"role\", \"isLoading\", \"isSuggestable\", \"isFilterable\", \"userInput\", \"suggestedText\", \"placeholder\"], outputs: [\"valueChange\", \"onBlur\", \"onFocus\", \"onClick\", \"onNavigate\"] }, { type: ListComponent, selector: \"kendo-list\", inputs: [\"selected\", \"focused\", \"textField\", \"valueField\", \"height\", \"template\", \"groupTemplate\", \"fixedGroupTemplate\", \"show\", \"id\", \"optionPrefix\", \"multipleSelection\", \"virtual\", \"type\", \"checkboxes\", \"ariaLive\", \"isMultiselect\", \"data\", \"size\", \"rounded\"], outputs: [\"onClick\", \"pageChange\", \"listResize\"] }, { type: i9.ResizeSensorComponent, selector: \"kendo-resize-sensor\", inputs: [\"rateLimit\"], outputs: [\"resize\"] }], directives: [{ type: LocalizedMessagesDirective, selector: \"\\n    [kendoDropDownListLocalizedMessages],\\n    [kendoDropDownTreeLocalizedMessages],\\n    [kendoComboBoxLocalizedMessages],\\n    [kendoMultiColumnComboBoxLocalizedMessages],\\n    [kendoAutoCompleteLocalizedMessages],\\n    [kendoMultiSelectLocalizedMessages],\\n    [kendoMultiSelectTreeLocalizedMessages]\\n  \" }, { type: i11.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TemplateContextDirective, selector: \"[templateContext]\", inputs: [\"templateContext\"] }, { type: i11.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: SelectableDirective, selector: \"[kendoDropDownsSelectable]\", inputs: [\"index\", \"checkboxes\", \"height\", \"multipleSelection\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MultiSelectComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoMultiSelect',\n                    providers: [\n                        MULTISELECT_VALUE_ACCESSOR,\n                        DataService,\n                        SelectionService,\n                        NavigationService,\n                        DisabledItemsService,\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.multiselect'\n                        },\n                        {\n                            provide: FilterableComponent, useExisting: forwardRef(() => MultiSelectComponent)\n                        },\n                        {\n                            provide: KendoInput, useExisting: forwardRef(() => MultiSelectComponent)\n                        }\n                    ],\n                    selector: 'kendo-multiselect',\n                    template: `\n        <ng-container kendoMultiSelectLocalizedMessages\n            i18n-noDataText=\"kendo.multiselect.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.multiselect.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n        >\n        </ng-container>\n        <kendo-taglist\n            [size]=\"size\"\n            [rounded]=\"rounded\"\n            [fillMode]=\"fillMode\"\n            [id]=\"tagListId\"\n            [tags]=\"tags\"\n            [textField]=\"textField\"\n            [valueField]=\"valueField\"\n            [focused]=\"focusedTagIndex\"\n            [disabled]=\"disabled\"\n            [template]=\"tagTemplate\"\n            [groupTemplate]=\"groupTagTemplate\"\n            [tagPrefix]=\"tagPrefix\"\n            [disabledIndices]=\"disabledIndices\"\n            (removeTag)=\"handleRemoveTag($event)\"\n        >\n            <kendo-searchbar\n                #searchbar\n                [id]=\"focusableId\"\n                [role]=\"'combobox'\"\n                [tagListId]=\"tagListId\"\n                [listId]=\"listBoxId\"\n                [isLoading]=\"loading\"\n                [isFilterable]=\"filterable\"\n                [activeDescendant]=\"activeDescendant\"\n                [userInput]=\"text\"\n                [disabled]=\"disabled\"\n                [readonly]=\"readonly\"\n                [tabIndex]=\"tabIndex\"\n                [popupOpen]=\"isOpen\"\n                [placeholder]=\"placeholder\"\n                (onNavigate)=\"handleNavigate($event)\"\n                (valueChange)=\"handleFilter($event)\"\n                (onBlur)=\"onSearchBarBlur()\"\n                (onFocus)=\"onSearchBarFocus()\"\n            >\n            </kendo-searchbar>\n        </kendo-taglist>\n\n        <span\n            *ngIf=\"!loading && !readonly && clearButton && (tags?.length || text?.length)\"\n            class=\"k-clear-value\"\n            [style.visibility]=\"clearButtonVisiblity\"\n            [attr.title]=\"messageFor('clearTitle')\"\n            role=\"button\"\n            tabindex=\"-1\"\n            (mousedown)=\"clearAll($event)\"\n        >\n            <span class=\"k-icon k-i-x\"></span>\n        </span>\n        <span\n            *ngIf=\"loading\"\n            class=\"k-icon k-i-loading k-input-loading-icon\"\n        >\n        </span>\n        <ng-template #popupTemplate>\n            <!--header template-->\n            <ng-template *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate.templateRef\n                }\">\n            </ng-template>\n            <!--custom item template-->\n            <div\n                *ngIf=\"allowCustom && text\"\n                class=\"k-list\"\n                [ngClass]=\"customItemSizeClass\"\n            >\n                <div class=\"k-list-item k-custom-item\" kendoDropDownsSelectable [multipleSelection]=\"true\" [index]=\"-1\">\n                    <ng-template *ngIf=\"customItemTemplate;else default_custom_item_template\"\n                        [templateContext]=\"{\n                            templateRef: customItemTemplate.templateRef,\n                            $implicit: text\n                        }\">\n                    </ng-template>\n                    <ng-template #default_custom_item_template>{{ text }}</ng-template>\n                    <span class=\"k-icon k-i-plus\" style=\"float: right\"></span>\n                </div>\n            </div>\n            <!--list-->\n            <kendo-list\n                #optionsList\n                [size]=\"size\"\n                [rounded]=\"rounded\"\n                [id]=\"listBoxId\"\n                [optionPrefix]=\"optionPrefix\"\n                [data]=\"data\"\n                [textField]=\"textField\"\n                [valueField]=\"valueField\"\n                [height]=\"listHeight\"\n                [template]=\"template\"\n                [groupTemplate]=\"groupTemplate\"\n                [fixedGroupTemplate]=\"fixedGroupTemplate\"\n                [show]=\"isOpen\"\n                [multipleSelection]=\"true\"\n                [virtual]=\"virtual\"\n                (pageChange)=\"pageChange($event)\"\n                [checkboxes]=\"checkboxes\"\n                [isMultiselect]=\"true\"\n                >\n            </kendo-list>\n            <!--no data template-->\n            <div class=\"k-no-data\" *ngIf=\"data.length === 0\">\n                <ng-template [ngIf]=\"noDataTemplate\"\n                    [templateContext]=\"{\n                        templateRef: noDataTemplate ? noDataTemplate.templateRef : undefined\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!noDataTemplate\">\n                    <div>{{ messageFor('noDataText') }}</div>\n                </ng-template>\n            </div>\n            <!--footer template-->\n            <ng-template *ngIf=\"footerTemplate\"\n                [templateContext]=\"{\n                    templateRef: footerTemplate.templateRef\n                }\">\n            </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"isOpen\">\n            <kendo-resize-sensor (resize)=\"onResize()\"></kendo-resize-sensor>\n        </ng-template>\n        <ng-container #container></ng-container>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.LocalizationService }, { type: i2.PopupService }, { type: DataService }, { type: SelectionService }, { type: NavigationService }, { type: DisabledItemsService }, { type: i0.ChangeDetectorRef }, { type: i0.KeyValueDiffers }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TOUCH_ENABLED]\n                }] }]; }, propDecorators: { focusableId: [{\n                type: Input\n            }], autoClose: [{\n                type: Input\n            }], loading: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], valueField: [{\n                type: Input\n            }], textField: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input,\n                args: [\"tabIndex\"]\n            }], size: [{\n                type: Input\n            }], rounded: [{\n                type: Input\n            }], fillMode: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], itemDisabled: [{\n                type: Input\n            }], checkboxes: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], filterable: [{\n                type: Input\n            }], virtual: [{\n                type: Input\n            }], popupSettings: [{\n                type: Input\n            }], listHeight: [{\n                type: Input\n            }], valuePrimitive: [{\n                type: Input\n            }], clearButton: [{\n                type: Input\n            }], tagMapper: [{\n                type: Input\n            }], allowCustom: [{\n                type: Input\n            }], valueNormalizer: [{\n                type: Input\n            }], filterChange: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }], open: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }], closed: [{\n                type: Output\n            }], onFocus: [{\n                type: Output,\n                args: ['focus']\n            }], onBlur: [{\n                type: Output,\n                args: ['blur']\n            }], removeTag: [{\n                type: Output\n            }], container: [{\n                type: ViewChild,\n                args: ['container', { read: ViewContainerRef, static: true }]\n            }], searchbar: [{\n                type: ViewChild,\n                args: [SearchBarComponent, { static: true }]\n            }], popupTemplate: [{\n                type: ViewChild,\n                args: ['popupTemplate', { static: true }]\n            }], optionsList: [{\n                type: ViewChild,\n                args: ['optionsList', { static: false }]\n            }], template: [{\n                type: ContentChild,\n                args: [ItemTemplateDirective, { static: false }]\n            }], customItemTemplate: [{\n                type: ContentChild,\n                args: [CustomItemTemplateDirective, { static: false }]\n            }], groupTemplate: [{\n                type: ContentChild,\n                args: [GroupTemplateDirective, { static: false }]\n            }], fixedGroupTemplate: [{\n                type: ContentChild,\n                args: [FixedGroupTemplateDirective, { static: false }]\n            }], headerTemplate: [{\n                type: ContentChild,\n                args: [HeaderTemplateDirective, { static: false }]\n            }], footerTemplate: [{\n                type: ContentChild,\n                args: [FooterTemplateDirective, { static: false }]\n            }], tagTemplate: [{\n                type: ContentChild,\n                args: [TagTemplateDirective, { static: false }]\n            }], groupTagTemplate: [{\n                type: ContentChild,\n                args: [GroupTagTemplateDirective, { static: false }]\n            }], noDataTemplate: [{\n                type: ContentChild,\n                args: [NoDataTemplateDirective, { static: false }]\n            }], hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-multiselect']\n            }, {\n                type: HostBinding,\n                args: ['class.k-input']\n            }], dir: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], disabledClass: [{\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }], isLoading: [{\n                type: HostBinding,\n                args: ['class.k-loading']\n            }], handleKeyboardEvent: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }], hostMousedown: [{\n                type: HostListener,\n                args: ['mousedown', ['$event']]\n            }] } });\n\n/**\n * Renders the column cell content of the MultiColumnComboBox. To define a column cell template, nest an `<ng-template>` tag\n * with the `kendoMultiColumnComboBoxColumnCellTemplate` directive inside the [`<kendo-combobox-column>`]({% slug api_dropdowns_comboboxcolumncomponent %}) tag\n * ([see example]({% slug templates_multicolumncombobox %})).\n *\n * The current [`column`]({% slug api_dropdowns_comboboxcolumncomponent %}) and data item are available as context variables:\n *\n * - `let-dataItem=\"dataItem\"` (`any`) - The current data item. Also available as implicit context variable.\n * - `let-column=\"column\"` ([`ColumnComponent`]({% slug api_dropdowns_comboboxcolumncomponent %})) - The current column configuration obejct.\n */\nclass ColumnCellTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nColumnCellTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnCellTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nColumnCellTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnCellTemplateDirective, selector: \"[kendoMultiColumnComboBoxColumnCellTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnCellTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoMultiColumnComboBoxColumnCellTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * Renders the column header content of the MultiColumnComboBox. To define a column header template, nest an `<ng-template>` tag\n * with the `kendoMultiColumnComboBoxColumnHeaderTemplate` directive inside the [`<kendo-combobox-column>`]({% slug api_dropdowns_comboboxcolumncomponent %}) tag\n * ([see example]({% slug templates_multicolumncombobox %})).\n *\n * The current [`column`]({% slug api_dropdowns_comboboxcolumncomponent %}) is available as implicit context variable.\n */\nclass ColumnHeaderTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nColumnHeaderTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnHeaderTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nColumnHeaderTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ColumnHeaderTemplateDirective, selector: \"[kendoMultiColumnComboBoxColumnHeaderTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ColumnHeaderTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoMultiColumnComboBoxColumnHeaderTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * Represents the column definition of the [MultiColumnComboBox]({% slug overview_multicolumncombobox %})\n * ([see example]({% slug columns_multicolumncombobox %})).\n */\nclass ComboBoxColumnComponent {\n    constructor() {\n        /**\n         * Sets the visibility of the column.\n         *\n         * @default false\n         */\n        this.hidden = false;\n        /**\n         * @hidden\n         */\n        this.matchesMedia = true;\n    }\n}\nComboBoxColumnComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ComboBoxColumnComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nComboBoxColumnComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: ComboBoxColumnComponent, selector: \"kendo-combobox-column\", inputs: { field: \"field\", title: \"title\", width: \"width\", hidden: \"hidden\", style: \"style\", headerStyle: \"headerStyle\", class: \"class\", headerClass: \"headerClass\", media: \"media\" }, queries: [{ propertyName: \"cellTemplate\", first: true, predicate: ColumnCellTemplateDirective, descendants: true }, { propertyName: \"headerTemplate\", first: true, predicate: ColumnHeaderTemplateDirective, descendants: true }], ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ComboBoxColumnComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-combobox-column',\n                    template: ''\n                }]\n        }], propDecorators: { cellTemplate: [{\n                type: ContentChild,\n                args: [ColumnCellTemplateDirective, { static: false }]\n            }], headerTemplate: [{\n                type: ContentChild,\n                args: [ColumnHeaderTemplateDirective, { static: false }]\n            }], field: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], hidden: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], headerStyle: [{\n                type: Input\n            }], class: [{\n                type: Input\n            }], headerClass: [{\n                type: Input\n            }], media: [{\n                type: Input\n            }] } });\n\n/**\n * Persists the intially resolved scrollbar width value.\n */\nlet SCROLLBAR_WIDTH;\n/**\n * @hidden\n *\n * Gets the default scrollbar width accoring to the current environment.\n */\nconst scrollbarWidth = () => {\n    // calculate scrollbar width only once, then return the memoized value\n    if (isNaN(SCROLLBAR_WIDTH)) {\n        const div = document.createElement('div');\n        div.style.cssText = 'overflow: scroll; overflow-x: hidden; zoom: 1; clear: both; display: block;';\n        div.innerHTML = '&nbsp;';\n        document.body.appendChild(div);\n        SCROLLBAR_WIDTH = div.offsetWidth - div.scrollWidth;\n        document.body.removeChild(div);\n    }\n    return SCROLLBAR_WIDTH;\n};\n/**\n * Checks if all columns have a valid user-defined width.\n */\nconst allColumnsWidthsSet = (columns) => {\n    if (!isPresent(columns) || columns.length === 0) {\n        return false;\n    }\n    return columns.toArray().every(column => !isNaN(column.width) && column.width > 0);\n};\n/**\n * @hidden\n *\n * Calculates the row width according to the passed columns width configuration.\n * Hidden columns and such that don't match the provided media query are ignored.\n * If some of the columns don't have a preset width or have an invalid width value, the function returns `null`.\n */\nconst getRowWidthFromColumnsMeta = (columns) => {\n    if (!allColumnsWidthsSet(columns)) {\n        return null;\n    }\n    const bordersWidth = 2;\n    const initialRowWidht = scrollbarWidth() + bordersWidth;\n    return columns.reduce((totalWidth, column) => {\n        if (!column.hidden && column.matchesMedia) {\n            totalWidth += parseInt(column.width, 10);\n        }\n        return totalWidth;\n    }, initialRowWidht);\n};\n\n/**\n * Represents the [Kendo UI MultiColumnComboBox component for Angular]({% slug overview_multicolumncombobox %}).\n */\nclass MultiColumnComboBoxComponent extends ComboBoxComponent {\n    constructor(localization, popupService, selectionService, navigationService, disabledItemsService, dataService, zone, changeDetector, renderer, wrapper, touchEnabled) {\n        super(wrapper, localization, popupService, selectionService, navigationService, disabledItemsService, dataService, zone, changeDetector, renderer, touchEnabled);\n        /**\n         * @hidden\n         */\n        this.hostClasses = true;\n        this.removeWindowResizeListener = noop;\n        // the row height in @progress/kendo-theme-default\n        this.defaultVirtualItemHeight = 36;\n        // use a smaller virtual page size as columns with multiple cells can cause poor performance\n        this.defaultVirtualPageSize = 30;\n    }\n    /**\n     * @hidden\n     */\n    get isDisabled() {\n        return this.disabled;\n    }\n    /**\n     * @hidden\n     */\n    set header(header) {\n        // updates the header padding on initial render as the resize senzor doesn't kick in as early\n        this.updateHeaderPadding(header && header.nativeElement);\n    }\n    get popupWidth() {\n        const wrapperOffsetWidth = this.wrapper.nativeElement.offsetWidth;\n        const min = `${wrapperOffsetWidth}px`;\n        const width = this.popupSettings.width || getRowWidthFromColumnsMeta(this.columns) || wrapperOffsetWidth;\n        const max = isNaN(width) ? width : `${width}px`;\n        return { min, max };\n    }\n    /**\n     * @hidden\n     */\n    get tableSizeClass() {\n        return `${this.size ? getSizeClass('table', this.size) : ''}`;\n    }\n    /**\n     * @hidden\n     */\n    get listContainerClasses() {\n        return [\n            'k-popup',\n            'k-dropdowngrid-popup'\n        ].concat(this.popupSettings.popupClass || []);\n    }\n    ngAfterViewInit() {\n        this.updateColumnsMediaState();\n        this.addWindowResizeListener();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.removeWindowResizeListener();\n    }\n    /**\n     * @hidden\n     */\n    textFrom(dataItem, field) {\n        return getter(dataItem, field);\n    }\n    /**\n     * @hidden\n     *\n     * Adds or removes a padding value at the end of the header container equal to the size of the scrollbar.\n     * As when the items container has a scrollbar, the column headers and the cells are misaligned.\n     * When the container has a scrollbar, the padding style is added, and when there is none - it is removed.\n     */\n    updateHeaderPadding(header) {\n        if (!isPresent(header)) {\n            return;\n        }\n        // the scrollbar is rendered on the left in rtl\n        const headerPaddingPosition = this.localization.rtl ? 'padding-left' : 'padding-right';\n        if (this.optionsList.hasScrollbar() && scrollbarWidth() > 0) {\n            this.renderer.setStyle(header, headerPaddingPosition, `${scrollbarWidth()}px`);\n        }\n        else {\n            this.renderer.removeStyle(header, headerPaddingPosition);\n        }\n    }\n    verifySettings() {\n        if (!isDevMode()) {\n            return;\n        }\n        if (isPresent(this.data) && this.data.length > 0 && this.data.some(item => !isObject(item))) {\n            throw new Error(MultiColumnComboBoxMessages.data);\n        }\n        if (!isPresent(this.valueField) || !isPresent(this.textField)) {\n            throw new Error(MultiColumnComboBoxMessages.textAndValue);\n        }\n        super.verifySettings();\n    }\n    addWindowResizeListener() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        this.zone.runOutsideAngular(() => this.removeWindowResizeListener = this.renderer.listen(window, 'resize', this.updateColumnsMediaState.bind(this)));\n    }\n    updateColumnsMediaState() {\n        if (!(isPresent(this.columns) && isDocumentAvailable())) {\n            return;\n        }\n        this.columns.forEach(column => {\n            const matchesMedia = !column.media || window.matchMedia(column.media).matches;\n            if (column.matchesMedia !== matchesMedia) {\n                column.matchesMedia = matchesMedia;\n                if (this.isOpen) {\n                    // enter the zone only if the popup is actually open\n                    // update its width in case it's dependent on the columns' width\n                    this.zone.run(() => this.popupRef.popupElement.style.width = this.popupWidth.max);\n                }\n            }\n        });\n    }\n}\nMultiColumnComboBoxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MultiColumnComboBoxComponent, deps: [{ token: i1.LocalizationService }, { token: i2.PopupService }, { token: SelectionService }, { token: NavigationService }, { token: DisabledItemsService }, { token: DataService }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: TOUCH_ENABLED }], target: i0.ɵɵFactoryTarget.Component });\nMultiColumnComboBoxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: MultiColumnComboBoxComponent, selector: \"kendo-multicolumncombobox\", host: { properties: { \"class.k-dropdowngrid\": \"this.hostClasses\", \"class.k-disabled\": \"this.isDisabled\" } }, providers: [\n        SelectionService,\n        DataService,\n        NavigationService,\n        DisabledItemsService,\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.multicolumncombobox'\n        },\n        {\n            multi: true,\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => MultiColumnComboBoxComponent)\n        },\n        {\n            provide: KendoInput,\n            useExisting: forwardRef(() => MultiColumnComboBoxComponent)\n        },\n        {\n            provide: FilterableComponent,\n            useExisting: forwardRef(() => MultiColumnComboBoxComponent)\n        }\n    ], queries: [{ propertyName: \"columns\", predicate: ComboBoxColumnComponent }], viewQueries: [{ propertyName: \"header\", first: true, predicate: [\"header\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n        <ng-container\n            kendoMultiColumnComboBoxLocalizedMessages\n\n            i18n-noDataText=\"kendo.multicolumncombobox.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.multicolumncombobox.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n\n            i18n-selectButtonText=\"kendo.multicolumncombobox.selectButtonText|The title of the select button\"\n            selectButtonText=\"Select\"\n        >\n        </ng-container>\n        <kendo-searchbar\n            #searchbar\n            [role]=\"'combobox'\"\n            [id]=\"focusableId\"\n            [listId]=\"listBoxId\"\n            [isLoading]=\"loading\"\n            [isSuggestable]=\"suggest\"\n            [isFilterable]=\"filterable\"\n            [activeDescendant]=\"activeDescendant\"\n            [userInput]=\"text\"\n            [suggestedText]=\"getSuggestion()\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [tabIndex]=\"tabIndex\"\n            [popupOpen]=\"isOpen\"\n            [placeholder]=\"placeholder\"\n            (onNavigate)=\"handleNavigate($event)\"\n            (valueChange)=\"searchBarChange($event)\"\n            (onBlur)=\"handleBlur()\"\n            (onFocus)=\"handleFocus()\"\n        >\n        </kendo-searchbar>\n\n        <span\n            *ngIf=\"clearButton && !loading && !disabled && !readonly && text?.length\"\n            class=\"k-clear-value\"\n            [style.visibility]=\"clearButtonVisiblity\"\n            aria-hidden=\"true\"\n            [attr.title]=\"messageFor('clearTitle')\"\n            (click)=\"clearValue($event)\"\n            [kendoEventsOutsideAngular]=\"{\n                mousedown: preventEventDefault\n            }\"\n        >\n            <span class=\"k-icon k-i-x\"></span>\n        </span>\n\n        <button\n            #select\n            tabindex=\"-1\"\n            aria-hidden=\"true\"\n            unselectable=\"on\"\n            type=\"button\"\n            class=\"k-input-button k-button k-icon-button\"\n            [ngClass]=\"selectButtonClasses\"\n            [attr.aria-label]=\"messageFor('selectButtonText')\"\n            [kendoEventsOutsideAngular]=\"{\n                mousedown: preventEventDefault\n            }\"\n        >\n            <span class=\"k-button-icon k-icon\" [ngClass]=\"buttonClasses\"></span>\n        </button>\n\n        <ng-template #popupTemplate>\n            <!--user-defined header template -->\n            <ng-template\n                *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate?.templateRef\n                }\"\n            >\n            </ng-template>\n\n            <!--data table-->\n            <div class=\"k-data-table\" [ngClass]=\"tableSizeClass\">\n\n                <!--grid header-->\n                <div\n                    #header\n                    class=\"k-table-header\"\n                >\n                    <div class=\"k-table-header-wrap\">\n                        <table class=\"k-table\" role=\"presentation\">\n                            <colgroup>\n                                <ng-container *ngFor=\"let column of columns\">\n                                    <col\n                                        *ngIf=\"!column.hidden && column.matchesMedia\"\n                                        [style.width.px]=\"column.width\"\n                                    />\n                                </ng-container>\n                            </colgroup>\n                            <thead class=\"k-table-thead\">\n                                <tr class=\"k-table-row\">\n                                    <ng-container *ngFor=\"let column of columns\">\n                                        <th\n                                            *ngIf=\"!column.hidden && column.matchesMedia\"\n                                            class=\"k-table-th\"\n                                            [ngStyle]=\"column.headerStyle\"\n                                            [ngClass]=\"column.headerClass\"\n                                        >\n                                            <ng-container *ngIf=\"!column.headerTemplate\">\n                                                {{ column.title || column.field }}\n                                            </ng-container>\n                                            <ng-template\n                                                *ngIf=\"column.headerTemplate\"\n                                                [templateContext]=\"{\n                                                    templateRef: column.headerTemplate?.templateRef,\n                                                    $implicit: column,\n                                                    column: column\n                                                }\"\n                                            >\n                                            </ng-template>\n                                        </th>\n                                    </ng-container>\n                                </tr>\n                            </thead>\n                        </table>\n                    </div>\n                </div>\n\n                <!-- item template -->\n                <ng-template #rowTemplate let-dataItem>\n                    <ng-container *ngFor=\"let column of columns\">\n                        <span\n                            *ngIf=\"!column.hidden && column.matchesMedia\"\n                            class=\"k-table-td\"\n                            [ngClass]=\"column.class\"\n                            [style.width.px]=\"column.width\"\n                            [ngStyle]=\"column.style\"\n                        >\n                            <ng-container *ngIf=\"!column.cellTemplate\">\n                                {{ textFrom(dataItem, column.field) }}\n                            </ng-container>\n                            <ng-template\n                                *ngIf=\"column.cellTemplate\"\n                                [templateContext]=\"{\n                                    templateRef: column.cellTemplate?.templateRef,\n                                    $implicit: dataItem,\n                                    dataItem: dataItem,\n                                    column: column\n                                }\"\n                            >\n                            </ng-template>\n                        </span>\n                    </ng-container>\n                </ng-template>\n\n                <!--list-->\n                <kendo-list\n                    #optionsList\n                    [id]=\"listBoxId\"\n                    [optionPrefix]=\"optionPrefix\"\n                    [data]=\"data\"\n                    [textField]=\"textField\"\n                    [valueField]=\"valueField\"\n                    [template]=\"{ templateRef: rowTemplate }\"\n                    [groupTemplate]=\"groupTemplate\"\n                    [fixedGroupTemplate]=\"fixedGroupTemplate\"\n                    [height]=\"listHeight\"\n                    [show]=\"isOpen\"\n                    [virtual]=\"virtual\"\n                    [type]=\"'dropdowngrid'\"\n                    (pageChange)=\"pageChange($event)\"\n                    (listResize)=\"updateHeaderPadding(header)\"\n                >\n                </kendo-list>\n\n                <!--no-data template-->\n                <div\n                    class=\"k-no-data\"\n                    *ngIf=\"data.length === 0\"\n                >\n                    <ng-template\n                        [ngIf]=\"noDataTemplate\"\n                        [templateContext]=\"{\n                            templateRef: noDataTemplate?.templateRef\n                        }\"\n                    >\n                    </ng-template>\n                    <ng-template [ngIf]=\"!noDataTemplate\">\n                        <div>{{ messageFor('noDataText') }}</div>\n                    </ng-template>\n                </div>\n\n                <!--user-defined footer template-->\n                <ng-container *ngIf=\"footerTemplate\">\n                    <div class=\"k-table-footer\">\n                        <table class=\"k-table\">\n                            <tfoot class=\"k-table-tfoot\">\n                                <tr class=\"k-table-row\">\n                                    <td class=\"k-table-td\">\n                                        <ng-template\n                                            [templateContext]=\"{\n                                                templateRef: footerTemplate.templateRef\n                                            }\"\n                                        >\n                                        </ng-template>\n                                    </td>\n                                </tr>\n                            </tfoot>\n                        </table>\n                    </div>\n                </ng-container>\n\n            </div>\n\n        </ng-template>\n\n        <kendo-resize-sensor\n            *ngIf=\"isOpen\"\n            (resize)=\"onResize()\"\n        >\n        </kendo-resize-sensor>\n\n        <!-- when the popupSettings.appendTo value is set to 'component', this container is used -->\n        <ng-container #container></ng-container>\n    `, isInline: true, components: [{ type: SearchBarComponent, selector: \"kendo-searchbar\", inputs: [\"id\", \"listId\", \"tagListId\", \"activeDescendant\", \"disabled\", \"readonly\", \"tabIndex\", \"popupOpen\", \"role\", \"isLoading\", \"isSuggestable\", \"isFilterable\", \"userInput\", \"suggestedText\", \"placeholder\"], outputs: [\"valueChange\", \"onBlur\", \"onFocus\", \"onClick\", \"onNavigate\"] }, { type: ListComponent, selector: \"kendo-list\", inputs: [\"selected\", \"focused\", \"textField\", \"valueField\", \"height\", \"template\", \"groupTemplate\", \"fixedGroupTemplate\", \"show\", \"id\", \"optionPrefix\", \"multipleSelection\", \"virtual\", \"type\", \"checkboxes\", \"ariaLive\", \"isMultiselect\", \"data\", \"size\", \"rounded\"], outputs: [\"onClick\", \"pageChange\", \"listResize\"] }, { type: i9.ResizeSensorComponent, selector: \"kendo-resize-sensor\", inputs: [\"rateLimit\"], outputs: [\"resize\"] }], directives: [{ type: LocalizedMessagesDirective, selector: \"\\n    [kendoDropDownListLocalizedMessages],\\n    [kendoDropDownTreeLocalizedMessages],\\n    [kendoComboBoxLocalizedMessages],\\n    [kendoMultiColumnComboBoxLocalizedMessages],\\n    [kendoAutoCompleteLocalizedMessages],\\n    [kendoMultiSelectLocalizedMessages],\\n    [kendoMultiSelectTreeLocalizedMessages]\\n  \" }, { type: i11.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i9.EventsOutsideAngularDirective, selector: \"[kendoEventsOutsideAngular]\", inputs: [\"kendoEventsOutsideAngular\", \"scope\"] }, { type: i11.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: TemplateContextDirective, selector: \"[templateContext]\", inputs: [\"templateContext\"] }, { type: i11.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i11.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MultiColumnComboBoxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        SelectionService,\n                        DataService,\n                        NavigationService,\n                        DisabledItemsService,\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.multicolumncombobox'\n                        },\n                        {\n                            multi: true,\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => MultiColumnComboBoxComponent)\n                        },\n                        {\n                            provide: KendoInput,\n                            useExisting: forwardRef(() => MultiColumnComboBoxComponent)\n                        },\n                        {\n                            provide: FilterableComponent,\n                            useExisting: forwardRef(() => MultiColumnComboBoxComponent)\n                        }\n                    ],\n                    selector: 'kendo-multicolumncombobox',\n                    template: `\n        <ng-container\n            kendoMultiColumnComboBoxLocalizedMessages\n\n            i18n-noDataText=\"kendo.multicolumncombobox.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.multicolumncombobox.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n\n            i18n-selectButtonText=\"kendo.multicolumncombobox.selectButtonText|The title of the select button\"\n            selectButtonText=\"Select\"\n        >\n        </ng-container>\n        <kendo-searchbar\n            #searchbar\n            [role]=\"'combobox'\"\n            [id]=\"focusableId\"\n            [listId]=\"listBoxId\"\n            [isLoading]=\"loading\"\n            [isSuggestable]=\"suggest\"\n            [isFilterable]=\"filterable\"\n            [activeDescendant]=\"activeDescendant\"\n            [userInput]=\"text\"\n            [suggestedText]=\"getSuggestion()\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [tabIndex]=\"tabIndex\"\n            [popupOpen]=\"isOpen\"\n            [placeholder]=\"placeholder\"\n            (onNavigate)=\"handleNavigate($event)\"\n            (valueChange)=\"searchBarChange($event)\"\n            (onBlur)=\"handleBlur()\"\n            (onFocus)=\"handleFocus()\"\n        >\n        </kendo-searchbar>\n\n        <span\n            *ngIf=\"clearButton && !loading && !disabled && !readonly && text?.length\"\n            class=\"k-clear-value\"\n            [style.visibility]=\"clearButtonVisiblity\"\n            aria-hidden=\"true\"\n            [attr.title]=\"messageFor('clearTitle')\"\n            (click)=\"clearValue($event)\"\n            [kendoEventsOutsideAngular]=\"{\n                mousedown: preventEventDefault\n            }\"\n        >\n            <span class=\"k-icon k-i-x\"></span>\n        </span>\n\n        <button\n            #select\n            tabindex=\"-1\"\n            aria-hidden=\"true\"\n            unselectable=\"on\"\n            type=\"button\"\n            class=\"k-input-button k-button k-icon-button\"\n            [ngClass]=\"selectButtonClasses\"\n            [attr.aria-label]=\"messageFor('selectButtonText')\"\n            [kendoEventsOutsideAngular]=\"{\n                mousedown: preventEventDefault\n            }\"\n        >\n            <span class=\"k-button-icon k-icon\" [ngClass]=\"buttonClasses\"></span>\n        </button>\n\n        <ng-template #popupTemplate>\n            <!--user-defined header template -->\n            <ng-template\n                *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate?.templateRef\n                }\"\n            >\n            </ng-template>\n\n            <!--data table-->\n            <div class=\"k-data-table\" [ngClass]=\"tableSizeClass\">\n\n                <!--grid header-->\n                <div\n                    #header\n                    class=\"k-table-header\"\n                >\n                    <div class=\"k-table-header-wrap\">\n                        <table class=\"k-table\" role=\"presentation\">\n                            <colgroup>\n                                <ng-container *ngFor=\"let column of columns\">\n                                    <col\n                                        *ngIf=\"!column.hidden && column.matchesMedia\"\n                                        [style.width.px]=\"column.width\"\n                                    />\n                                </ng-container>\n                            </colgroup>\n                            <thead class=\"k-table-thead\">\n                                <tr class=\"k-table-row\">\n                                    <ng-container *ngFor=\"let column of columns\">\n                                        <th\n                                            *ngIf=\"!column.hidden && column.matchesMedia\"\n                                            class=\"k-table-th\"\n                                            [ngStyle]=\"column.headerStyle\"\n                                            [ngClass]=\"column.headerClass\"\n                                        >\n                                            <ng-container *ngIf=\"!column.headerTemplate\">\n                                                {{ column.title || column.field }}\n                                            </ng-container>\n                                            <ng-template\n                                                *ngIf=\"column.headerTemplate\"\n                                                [templateContext]=\"{\n                                                    templateRef: column.headerTemplate?.templateRef,\n                                                    $implicit: column,\n                                                    column: column\n                                                }\"\n                                            >\n                                            </ng-template>\n                                        </th>\n                                    </ng-container>\n                                </tr>\n                            </thead>\n                        </table>\n                    </div>\n                </div>\n\n                <!-- item template -->\n                <ng-template #rowTemplate let-dataItem>\n                    <ng-container *ngFor=\"let column of columns\">\n                        <span\n                            *ngIf=\"!column.hidden && column.matchesMedia\"\n                            class=\"k-table-td\"\n                            [ngClass]=\"column.class\"\n                            [style.width.px]=\"column.width\"\n                            [ngStyle]=\"column.style\"\n                        >\n                            <ng-container *ngIf=\"!column.cellTemplate\">\n                                {{ textFrom(dataItem, column.field) }}\n                            </ng-container>\n                            <ng-template\n                                *ngIf=\"column.cellTemplate\"\n                                [templateContext]=\"{\n                                    templateRef: column.cellTemplate?.templateRef,\n                                    $implicit: dataItem,\n                                    dataItem: dataItem,\n                                    column: column\n                                }\"\n                            >\n                            </ng-template>\n                        </span>\n                    </ng-container>\n                </ng-template>\n\n                <!--list-->\n                <kendo-list\n                    #optionsList\n                    [id]=\"listBoxId\"\n                    [optionPrefix]=\"optionPrefix\"\n                    [data]=\"data\"\n                    [textField]=\"textField\"\n                    [valueField]=\"valueField\"\n                    [template]=\"{ templateRef: rowTemplate }\"\n                    [groupTemplate]=\"groupTemplate\"\n                    [fixedGroupTemplate]=\"fixedGroupTemplate\"\n                    [height]=\"listHeight\"\n                    [show]=\"isOpen\"\n                    [virtual]=\"virtual\"\n                    [type]=\"'dropdowngrid'\"\n                    (pageChange)=\"pageChange($event)\"\n                    (listResize)=\"updateHeaderPadding(header)\"\n                >\n                </kendo-list>\n\n                <!--no-data template-->\n                <div\n                    class=\"k-no-data\"\n                    *ngIf=\"data.length === 0\"\n                >\n                    <ng-template\n                        [ngIf]=\"noDataTemplate\"\n                        [templateContext]=\"{\n                            templateRef: noDataTemplate?.templateRef\n                        }\"\n                    >\n                    </ng-template>\n                    <ng-template [ngIf]=\"!noDataTemplate\">\n                        <div>{{ messageFor('noDataText') }}</div>\n                    </ng-template>\n                </div>\n\n                <!--user-defined footer template-->\n                <ng-container *ngIf=\"footerTemplate\">\n                    <div class=\"k-table-footer\">\n                        <table class=\"k-table\">\n                            <tfoot class=\"k-table-tfoot\">\n                                <tr class=\"k-table-row\">\n                                    <td class=\"k-table-td\">\n                                        <ng-template\n                                            [templateContext]=\"{\n                                                templateRef: footerTemplate.templateRef\n                                            }\"\n                                        >\n                                        </ng-template>\n                                    </td>\n                                </tr>\n                            </tfoot>\n                        </table>\n                    </div>\n                </ng-container>\n\n            </div>\n\n        </ng-template>\n\n        <kendo-resize-sensor\n            *ngIf=\"isOpen\"\n            (resize)=\"onResize()\"\n        >\n        </kendo-resize-sensor>\n\n        <!-- when the popupSettings.appendTo value is set to 'component', this container is used -->\n        <ng-container #container></ng-container>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: i2.PopupService }, { type: SelectionService }, { type: NavigationService }, { type: DisabledItemsService }, { type: DataService }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TOUCH_ENABLED]\n                }] }]; }, propDecorators: { hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-dropdowngrid']\n            }], isDisabled: [{\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }], columns: [{\n                type: ContentChildren,\n                args: [ComboBoxColumnComponent]\n            }], header: [{\n                type: ViewChild,\n                args: ['header', { static: false }]\n            }] } });\n\n/**\n * Renders the content of each node in the DropDownTree. To define a node template, nest an `<ng-template>` tag\n * with the `kendoDropDownTreeNodeTemplate` directive inside the `<kendo-dropdowntree>` tag.\n *\n * The current data item and hierarchical index are available as context variables:\n *\n * - `let-dataItem` (`any`) - The current data item. Available as implicit context variable.\n * - `let-index=\"index\"` (`string`) - The current item hierarchical index.\n */\nclass NodeTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNodeTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NodeTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nNodeTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: NodeTemplateDirective, selector: \"[kendoDropDownTreeNodeTemplate], [kendoMultiSelectTreeNodeTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NodeTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDropDownTreeNodeTemplate], [kendoMultiSelectTreeNodeTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\nconst DEFAULT_POPUP_SETTINGS$1 = { animate: true };\nconst hasChildren$1 = () => false;\nconst fetchChildren$1 = () => of([]);\nconst itemDisabled$1 = () => false;\nconst isNodeVisible$1 = () => true;\nconst DEFAULT_SIZE$1 = 'medium';\nconst DEFAULT_ROUNDED$1 = 'medium';\nconst DEFAULT_FILL_MODE$1 = 'solid';\n/**\n * Represents the [Kendo UI DropDownTree component for Angular]({% slug overview_ddt %}).\n */\nclass DropDownTreeComponent {\n    constructor(injector, wrapper, popupService, navigationService, renderer, _zone, cdr, localization, touchEnabled) {\n        this.injector = injector;\n        this.wrapper = wrapper;\n        this.popupService = popupService;\n        this.navigationService = navigationService;\n        this.renderer = renderer;\n        this._zone = _zone;\n        this.cdr = cdr;\n        this.localization = localization;\n        this.touchEnabled = touchEnabled;\n        this.hostClasses = true;\n        this.role = 'combobox';\n        this.ariaHasPopup = 'tree';\n        /**\n         * Fires each time the popup is about to open\n         * ([see example]({% slug openstate_ddt %})).\n         * This event is preventable. If you cancel it, the popup will remain closed.\n         */\n        this.open = new EventEmitter();\n        /**\n         * Fires after the popup has been opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Fires each time the popup is about to close\n         * ([see example]({% slug openstate_ddt %})).\n         * This event is preventable. If you cancel it, the popup will remain open.\n         */\n        this.close = new EventEmitter();\n        /**\n         * Fires after the popup has been closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Fires when the user expands a node in the popup TreeView.\n         */\n        this.nodeExpand = new EventEmitter();\n        /**\n         * Fires when the user collapses a node in the popup TreeView.\n         */\n        this.nodeCollapse = new EventEmitter();\n        /**\n         * Fires each time the user focuses the DropDownTree.\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * Fires each time the DropDownTree gets blurred.\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * Fires each time the value is changed\n         * ([see example]({% slug overview_ddt %}#toc-events)).\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires when the value of the built-in filter input element changes.\n         */\n        this.filterChange = new EventEmitter();\n        /**\n         * If set to `true`, renders a button on hovering over the component.\n         * Clicking this button resets the value of the component to `undefined` and triggers the `change` event.\n         */\n        this.clearButton = true;\n        /**\n         * A function which determines if a specific node has child nodes.\n         */\n        this.hasChildren = hasChildren$1;\n        /**\n         * A function which provides the child nodes for a given parent node.\n         */\n        this.fetchChildren = fetchChildren$1;\n        /**\n         * The hint which is displayed when the component is empty.\n         */\n        this.placeholder = \"\";\n        /**\n         * Sets the height of the options list. By default, `listHeight` is 200px.\n         *\n         * > The `listHeight` property affects only the list of options and not the whole popup container.\n         * > To set the height of the popup container, use `popupSettings.height`.\n         */\n        this.listHeight = 200;\n        /**\n         * Sets the disabled state of the component.\n         */\n        this.disabled = false;\n        /**\n         * Sets the read-only state of the component.\n         */\n        this.readonly = false;\n        /**\n         * Specifies the type of the selected value\n         * ([more information and example]({% slug valuebinding_ddt %}#toc-primitive-values)).\n         * If set to `true`, the selected value has to be of a primitive value.\n         */\n        this.valuePrimitive = false;\n        /**\n         * A function that is executed for each data item and determines if a specific item is disabled.\n         */\n        this.itemDisabled = itemDisabled$1;\n        /**\n         * A callback which determines whether a tree node should be rendered as hidden. The utility .k-display-none class is used to hide the nodes.\n         * Useful for custom filtering implementations.\n         */\n        this.isNodeVisible = isNodeVisible$1;\n        /**\n         * Indicates whether the child nodes will be fetched on node expand or will be initially prefetched.\n         * @default true\n         */\n        this.loadOnDemand = true;\n        /**\n         * Renders the built-in input element for filtering the DropDownTree.\n         * If set to `true`, the component emits the `filterChange` event, which can be used to [filter the DropDownTree manually]({% slug filtering_ddt %}#toc-manual-filtering).\n         * A built-in filtering implementation is available to use with the [`kendoDropDownTreeHierarchyBinding`]({% slug api_dropdowns_dropdowntreehierarchybindingdirective %}) and [`kendoDropDownTreeFlatBinding`]({% slug api_dropdowns_dropdowntreeflatbindingdirective %}) directives.\n         */\n        this.filterable = false;\n        /**\n         * @hidden\n         */\n        this.filter = '';\n        /**\n         * @hidden\n         *\n         * Used by the kendo-label and kendo-floatinglabel to access and associate the focusable element with the provided label via aria-labelledby.\n         */\n        this.focusableId = `k-${guid$1()}`;\n        /**\n         * @hidden\n         */\n        this.selectedKeys = [];\n        /**\n         * @hidden\n         */\n        this.filterStateChange = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.allNodesHidden = false;\n        /**\n         * @hidden\n         *\n         * Used to associate the value label with the wrapper via aria-describedby.\n         */\n        this.valueLabelId = `k-${guid$1()}`;\n        this._popupSettings = DEFAULT_POPUP_SETTINGS$1;\n        this._tabindex = 0;\n        this._isFocused = false;\n        this._popupId = guid$1();\n        this._size = 'medium';\n        this._rounded = 'medium';\n        this._fillMode = 'solid';\n        this.subscriptions = [];\n        this.onTouchedCallback = noop;\n        this.onChangeCallback = noop;\n        this.direction = localization.rtl ? 'rtl' : 'ltr';\n        this.subscribeEvents();\n        this.subscribeTouchEvents();\n        this.subscribeFocusEvents();\n    }\n    get hostAriaInvalid() {\n        return this.formControl ? this.formControl.invalid.toString() : null;\n    }\n    get isDisabled() {\n        return this.disabled;\n    }\n    get isDisabledAttribute() {\n        return this.disabled ? '' : null;\n    }\n    get isLoading() {\n        return this.loading;\n    }\n    get isBusy() {\n        return this.loading ? 'true' : null;\n    }\n    get hostAriaControls() {\n        return this.isOpen ? this._popupId : null;\n    }\n    get id() {\n        return this.focusableId;\n    }\n    get hostTabIndex() {\n        return this.tabindex;\n    }\n    get isAriaExpanded() {\n        return this.isOpen;\n    }\n    get hostAriaAutocomplete() {\n        return this.filterable ? 'list' : null;\n    }\n    get isReadonly() {\n        return this.readonly ? '' : null;\n    }\n    /**\n     * @hidden\n     */\n    handleClick() {\n        this.togglePopup(!this.isOpen);\n    }\n    /**\n     * @hidden\n     */\n    handleKeydown(event) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        const eventData = event;\n        this.navigationService.process({\n            originalEvent: eventData\n        });\n    }\n    set treeview(treeview) {\n        if (treeview) {\n            if (this.isFocused && !this.filterable || this.touchEnabled) {\n                treeview.focus();\n            }\n            // the treeview animations are initially disabled (we don't want expand animations during popup opening)\n            // re-enables the animations for user interaction\n            treeview.animate = true;\n            this._treeview = treeview;\n        }\n    }\n    get treeview() {\n        return this._treeview;\n    }\n    /**\n     * Sets the data of the DropDownTree.\n     *\n     * > The data has to be provided in an array-like list with objects.\n     */\n    set data(data) {\n        this._nodes = data;\n        this.setState();\n    }\n    get data() {\n        return this._nodes;\n    }\n    /**\n     * Sets the value of the DropDownTree.\n     * It can either be of the primitive (string, numbers) or of the complex (objects) type.\n     * To define the type, use the `valuePrimitive` option.\n     *\n     */\n    set value(newValue) {\n        this._value = newValue;\n        this.setState();\n    }\n    get value() {\n        return this._value;\n    }\n    /**\n     * Configures the popup of the DropDownTree.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `width: Number | String`&mdash;Sets the width of the popup container. By default, the width of the host element is used. If set to `auto`, the component automatically adjusts the width of the popup and no item labels are wrapped.\n     * - `height: Number`&mdash;Sets the height of the popup container.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n     */\n    set popupSettings(settings) {\n        this._popupSettings = Object.assign({}, DEFAULT_POPUP_SETTINGS$1, settings);\n    }\n    get popupSettings() {\n        return this._popupSettings;\n    }\n    /**\n     * Keeps the current `dataItem` object in order to resolve selection.\n     * Needs to be provided when `value` is bound in and `valuePrimitive` is set to true.\n     */\n    set dataItem(item) {\n        this._dataItem = item;\n        this.setState();\n    }\n    get dataItem() {\n        return this._dataItem ? this._dataItem : this.value;\n    }\n    /**\n     * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n    set tabindex(value) {\n        const providedTabIndex = Number(value);\n        const defaultTabIndex = 0;\n        this._tabindex = !isNaN(providedTabIndex) ? providedTabIndex : defaultTabIndex;\n    }\n    get tabindex() {\n        return this.disabled ? -1 : this._tabindex;\n    }\n    /**\n     * Sets the size of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     *\n     */\n    set size(size) {\n        const newSize = size ? size : DEFAULT_SIZE$1;\n        this.renderer.removeClass(this.wrapper.nativeElement, getSizeClass('picker', this.size));\n        if (size !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('picker', newSize));\n        }\n        this._size = newSize;\n    }\n    get size() {\n        return this._size;\n    }\n    /**\n     * Sets the border radius of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `full`\n     * * `none`\n     *\n     */\n    set rounded(rounded) {\n        const newRounded = rounded ? rounded : DEFAULT_ROUNDED$1;\n        this.renderer.removeClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n        if (rounded !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(newRounded));\n        }\n        this._rounded = newRounded;\n    }\n    get rounded() {\n        return this._rounded;\n    }\n    /**\n     * Sets the fillMode of the component.\n     *\n     * The possible values are:\n     * * `flat`\n     * * `solid` (default)\n     * * `outline`\n     * * `none`\n     *\n     */\n    set fillMode(fillMode) {\n        const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE$1;\n        this.renderer.removeClass(this.wrapper.nativeElement, getFillModeClass('picker', this.fillMode));\n        if (fillMode !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('picker', newFillMode));\n        }\n        this._fillMode = newFillMode;\n    }\n    get fillMode() {\n        return this._fillMode;\n    }\n    set isFocused(isFocused) {\n        this.renderer[isFocused ? 'addClass' : 'removeClass'](this.wrapper.nativeElement, 'k-focus');\n        this._isFocused = isFocused;\n    }\n    get isFocused() {\n        return this._isFocused;\n    }\n    get width() {\n        const wrapperWidth = this.wrapper.nativeElement.offsetWidth;\n        const width = this.popupSettings.width || wrapperWidth;\n        const minWidth = isNaN(wrapperWidth) ? wrapperWidth : `${wrapperWidth}px`;\n        const maxWidth = isNaN(width) ? width : `${width}px`;\n        return { min: minWidth, max: maxWidth };\n    }\n    get height() {\n        const popupHeight = this.popupSettings.height;\n        return isPresent(popupHeight) ? `${popupHeight}px` : 'auto';\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n    get isOpen() {\n        return isPresent(this.popupRef);\n    }\n    get clearButtonVisiblity() {\n        if (this.touchEnabled) {\n            return 'visible';\n        }\n    }\n    /**\n     * @hidden\n     *\n     * Alias for `isNodeExpanded`. Used for compatibility with the `ExpandableComponent` interface.\n     * Required for the expand-directive.\n     */\n    set isExpanded(callback) {\n        this.isNodeExpanded = callback;\n    }\n    get isExpanded() {\n        return this.isNodeExpanded;\n    }\n    /**\n     * @hidden\n     *\n     * Alias for `nodeExpand`. Used for compatibility with the `ExpandableComponent` interface.\n     * Required for the expand-directive.\n     */\n    get expand() {\n        return this.nodeExpand;\n    }\n    /**\n     * @hidden\n     *\n     * Alias for `nodeCollapse`. Used for compatibility with the `ExpandableComponent` interface.\n     * Required for the expand-directive.\n     */\n    get collapse() {\n        return this.nodeCollapse;\n    }\n    /**\n     * @hidden\n     *\n     * Alias for `data`. Used for compatibility with the `DataBoundComponent` interface.\n     * Required for the data-binding directives.\n     */\n    set nodes(nodes) {\n        this.data = nodes;\n    }\n    get nodes() {\n        return this.data;\n    }\n    /**\n     * @hidden\n     *\n     * Alias for `fetchChildren`. Used for compatibility with the `DataBoundComponent` interface.\n     * Required for the data-binding directives\n     */\n    set children(callback) {\n        this.fetchChildren = callback;\n    }\n    get children() {\n        return this.fetchChildren;\n    }\n    /**\n     * @hidden\n     *\n     * Alias for `isNodeVisible`. Used for compatibility with the `DataBoundComponent` interface.\n     * The `DataBoundComponent` interface is used in the data-binding directives.\n     */\n    set isVisible(callback) {\n        this.isNodeVisible = callback;\n    }\n    get isVisible() {\n        return this.isNodeVisible;\n    }\n    /**\n     * @hidden\n     */\n    get formControl() {\n        const ngControl = this.injector.get(NgControl, null);\n        return (ngControl === null || ngControl === void 0 ? void 0 : ngControl.control) || null;\n    }\n    ngOnInit() {\n        this.renderer.removeAttribute(this.wrapper.nativeElement, 'tabindex');\n        this.assignAriaDescribedBy();\n        this.subscriptions.push(this.localization\n            .changes.subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n            this.cdr.markForCheck();\n        }));\n        this.setComponentClasses();\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        this.destroyPopup();\n        this.unsubscribeEvents();\n    }\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes) {\n        if (anyChanged(['textField', 'valueField', 'valuePrimitive'], changes, false)) {\n            this.setState();\n        }\n    }\n    /**\n     * @hidden\n     */\n    ngAfterContentChecked() {\n        this.verifySettings();\n    }\n    /**\n     * @hidden\n     *\n     * Used by the kendo-floatinglabel component to determine if the floating label\n     * should be rendered inside the input when the component is not focused.\n     */\n    isEmpty() {\n        return !this.text && !this.placeholder;\n    }\n    /**\n     * @hidden\n     */\n    togglePopup(open) {\n        const isDisabled = this.disabled || this.readonly;\n        const sameState = this.isOpen === open;\n        if (isDisabled || sameState) {\n            return;\n        }\n        const togglePrevented = this.triggerPopupEvents(open);\n        if (!togglePrevented) {\n            if (open) {\n                this.createPopup();\n            }\n            else {\n                this.destroyPopup();\n            }\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleFocus(event) {\n        if (event.target !== this.wrapper.nativeElement) {\n            return;\n        }\n        event.stopImmediatePropagation();\n        if (!this.isFocused) {\n            this.isFocused = true;\n            if (hasObservers(this.onFocus)) {\n                this._zone.run(() => {\n                    this.onFocus.emit();\n                });\n            }\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleBlur(e) {\n        const relatedTarget = e && e.relatedTarget;\n        if (this.wrapper.nativeElement.contains(relatedTarget) ||\n            (this.isOpen && this.popupRef.popupElement.contains(relatedTarget))) {\n            return;\n        }\n        this.isFocused = false;\n        if (hasObservers(this.onBlur) ||\n            isUntouched(this.wrapper.nativeElement)) {\n            this._zone.run(() => {\n                this.togglePopup(false);\n                this.onBlur.emit();\n                this.onTouchedCallback();\n            });\n        }\n        else {\n            this.togglePopup(false);\n        }\n    }\n    /**\n     * Focuses a specific item of the DropDownTree based on a provided index in the format of `1_1`.\n     * The targeted item should be expanded in order for it to be focused.\n     * If null or invalid index is provided the focus will be set on the first item.\n     */\n    focusItemAt(index) {\n        if (this.treeview) {\n            const lookup = this.treeview.itemLookup(index);\n            let isItemDisabled = !isPresent(lookup) || this.treeview.isDisabled(lookup.item.dataItem, lookup.item.index);\n            if (!isItemDisabled) {\n                this.treeview.focus(index);\n            }\n        }\n    }\n    /**\n     * Focuses the DropDownTree.\n     */\n    focus() {\n        if (!this.disabled) {\n            this.wrapper.nativeElement.focus();\n        }\n    }\n    /**\n     * Blurs the DropDownTree.\n     */\n    blur() {\n        if (!this.disabled) {\n            this.wrapper.nativeElement.blur();\n        }\n    }\n    /**\n     * Resets the value of the DropDownTree.\n     * If you use the `reset` method to clear the value of the component,\n     * the model will not update automatically and the `valueChange` event will not be fired.\n     */\n    reset() {\n        this.value = undefined;\n        this.dataItem = undefined;\n    }\n    /**\n     * Toggles the visibility of the popup\n     * ([see example]({% slug openstate_ddt %})).\n     * If you use the `toggle` method to open or close the popup, the `open` and `close` events will not be fired.\n     *\n     * @param open - The state of the popup.\n     */\n    toggle(open) {\n        // The Promise is required to open the popup on load.\n        // Otherwise, the \"ViewContainerRef not found...\" error will be thrown.\n        Promise.resolve(null).then(() => {\n            const shouldOpen = isPresent(open) ? open : !isPresent(this.popupRef);\n            this.destroyPopup();\n            if (shouldOpen) {\n                this.createPopup();\n            }\n        });\n    }\n    /**\n     * @hidden\n     */\n    get popupContainerClasses() {\n        const containerClasses = ['k-popup-dropdowntree'];\n        if (this.popupSettings.popupClass) {\n            containerClasses.push(this.popupSettings.popupClass);\n        }\n        return containerClasses;\n    }\n    /**\n     * @hidden\n     */\n    onSelectionChange({ dataItem, index }) {\n        this.valueDepth = index.split('_').length - 1;\n        const valueField = this.getField(this.valueField, dataItem);\n        const newValue = this.valuePrimitive ?\n            getter$1(valueField)(dataItem) :\n            dataItem;\n        const shouldUpdateValue = newValue !== this.value;\n        if (shouldUpdateValue) {\n            this.value = newValue;\n            this.dataItem = dataItem;\n            this.emitValueChange(this.value);\n        }\n        this.togglePopup(false);\n        this.focus();\n    }\n    /**\n     * @hidden\n     */\n    messageFor(key) {\n        return this.localization.get(key);\n    }\n    /**\n     * @hidden\n     */\n    clearValue(event) {\n        event.stopImmediatePropagation();\n        this.focus();\n        this.value = undefined;\n        this.dataItem = undefined;\n        this.clearState();\n        this.valueChange.emit(undefined);\n        this.emitValueChange();\n    }\n    get appendTo() {\n        const { appendTo } = this.popupSettings;\n        if (!appendTo || appendTo === 'root') {\n            return undefined;\n        }\n        return appendTo === 'component' ? this.container : appendTo;\n    }\n    /**\n     * @hidden\n     */\n    preventEventDefault(event) {\n        event.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        // If the user resets the value by providing null/undefined we need to reset the `dataItem`\n        // Because upon initialization of the component the `writeValue` is being called twice -\n        // first time with `null` value regardless of sync/async value - an extra check is added to\n        // distinguish between client reset and initial phanotm 'null' value\n        if (!isPresent(value) && isPresent(this.value)) {\n            this.dataItem = null;\n        }\n        this.value = value === null ? undefined : value;\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    handleFilterInputChange(input) {\n        this.filterChange.next(input.value);\n        this.allNodesHidden = this.nodes.every((node, index) => !this.isVisible(node, String(index)));\n    }\n    /**\n     * @hidden\n     */\n    get buttonClasses() {\n        return this.loading ? 'k-i-loading k-input-loading-icon' : 'k-i-caret-alt-down';\n    }\n    /**\n     * @hidden\n     */\n    get selectButtonClasses() {\n        return `${this.size ? getSizeClass('button', this.size) : ''} ${this.fillMode ? 'k-button-' + this.fillMode : ''} ${this.fillMode ? 'k-button-' + this.fillMode + '-base' : ''}`;\n    }\n    /**\n     * @hidden\n     */\n    get filterInputClasses() {\n        return `${this.size ? getSizeClass('input', this.size) : ''} ${this.fillMode ? 'k-input-' + this.fillMode : ''} ${this.rounded ? getRoundedClass(this.rounded) : ''}`;\n    }\n    verifySettings() {\n        if (!isDevMode()) {\n            return;\n        }\n        if (this.valuePrimitive === true && isPresent(this.value) && typeof this.value === \"object\") {\n            throw new Error(DropDownTreeMessages.primitive);\n        }\n        if (this.valuePrimitive === true && isPresent(this.value) && typeof this.dataItem !== \"object\") {\n            throw new Error(DropDownTreeMessages.dataItem);\n        }\n        if (this.valuePrimitive === false && isPresent(this.value) && typeof this.value !== \"object\") {\n            throw new Error(DropDownTreeMessages.object);\n        }\n        if (!isPresent(this.valueField) || !isPresent(this.textField)) {\n            throw new Error(DropDownTreeMessages.textAndValue);\n        }\n        if ((isArray(this.valueField) || isArray(this.textField)) && isPresent(this.value) && !isPresent(this.valueDepth)) {\n            throw new Error(DropDownTreeMessages.valueDepth);\n        }\n    }\n    emitValueChange(value) {\n        this.onChangeCallback(value);\n        this.valueChange.emit(value);\n    }\n    getText(textField, dataItem) {\n        if (isPresent(dataItem) && isPresent(textField)) {\n            const field = this.getField(textField, dataItem);\n            return getter$1(field)(dataItem);\n        }\n        return null;\n    }\n    /**\n     * @hidden\n     *\n     * Determines the `valueField` and `textField` for a specific level in the data set\n     *  @param field - the field value (string | string[])\n     *  @param value - current value\n     */\n    getField(field, value) {\n        const fieldsCount = field.length - 1;\n        if (typeof field === 'string') {\n            // If the `valueField` | `textField` is the same for all levels\n            return field;\n        }\n        else if (isPresent(this.valueDepth)) {\n            // When `valueDepth` can be defined from the index on selectionChange or provided by the user\n            return fieldsCount < this.valueDepth ? field[fieldsCount] : field[this.valueDepth];\n        }\n        else {\n            // Fallback: Look to find a match of each field in the current data item\n            // Side effect may occur if all of the listed fields are present in the data item\n            return field.find(item => item in value);\n        }\n    }\n    triggerPopupEvents(open) {\n        const eventArgs = new PreventableEvent();\n        if (open) {\n            this.open.emit(eventArgs);\n        }\n        else {\n            this.close.emit(eventArgs);\n        }\n        return eventArgs.isDefaultPrevented();\n    }\n    createPopup() {\n        const horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n        const anchorPosition = { horizontal: horizontalAlign, vertical: 'bottom' };\n        const popupPosition = { horizontal: horizontalAlign, vertical: 'top' };\n        this.popupRef = this.popupService.open({\n            anchor: this.wrapper,\n            appendTo: this.appendTo,\n            anchorAlign: anchorPosition,\n            content: this.popupTemplate,\n            popupAlign: popupPosition,\n            positionMode: 'absolute',\n            popupClass: this.popupContainerClasses\n        });\n        const popupWrapper = this.popupRef.popupElement;\n        const { min, max } = this.width;\n        this.renderer.setStyle(popupWrapper, 'minWidth', min);\n        this.renderer.setStyle(popupWrapper, 'width', max);\n        this.renderer.setStyle(popupWrapper, 'height', this.height);\n        this.renderer.setAttribute(popupWrapper, 'dir', this.direction);\n        this.renderer.setAttribute(popupWrapper, 'id', this._popupId);\n        this.popupRef.popupOpen.subscribe(() => {\n            this.cdr.detectChanges();\n            this.opened.emit();\n        });\n        this.popupRef.popupClose.subscribe(() => {\n            this.closed.emit();\n        });\n    }\n    destroyPopup() {\n        if (this.popupRef) {\n            this.popupRef.close();\n            this.popupRef = null;\n            if (this.filter !== \"\") {\n                this.filter = \"\";\n                this.allNodesHidden = false;\n                if (hasObservers(this.filterChange)) {\n                    this._zone.run(() => {\n                        this.filterChange.emit(\"\");\n                    });\n                }\n            }\n        }\n    }\n    handleEscape() {\n        this.togglePopup(false);\n        this.focus();\n    }\n    setState() {\n        if (isPresent(this.value) && isPresent(this.dataItem) && isPresent(this.valueField)) {\n            this.text = this.getText(this.textField, this.dataItem);\n            const valueField = this.getField(this.valueField, this.dataItem);\n            this.selectBy = valueField;\n            this.selectedKeys = [getter$1(valueField)(this.dataItem)];\n        }\n        else {\n            this.clearState();\n        }\n        this.cdr.markForCheck();\n    }\n    clearState() {\n        this.text = undefined;\n        this.selectedKeys = [];\n    }\n    subscribeEvents() {\n        this.subscriptions.push(this.navigationService.open.subscribe((event) => {\n            event.originalEvent.preventDefault();\n            this.togglePopup(true);\n        }), this.navigationService.close.subscribe((event) => {\n            event.originalEvent.preventDefault();\n            this.togglePopup(false);\n            this.focus();\n        }), this.navigationService.enter\n            .pipe(tap((event) => event.originalEvent.preventDefault()))\n            .subscribe(() => this.togglePopup(true)), this.navigationService.esc\n            .subscribe(() => this.handleEscape()), this.navigationService.tab.subscribe(() => this.focus()), this.navigationService.down.subscribe((event) => {\n            if (!this.treeview) {\n                return;\n            }\n            event.originalEvent.preventDefault();\n            if (!this.treeview.isActive) {\n                this.treeview.focus();\n            }\n        }), this.navigationService.up.subscribe((event) => {\n            if (!this.treeview) {\n                return;\n            }\n            event.originalEvent.preventDefault();\n            if (this.filterable && this.treeview['navigationService']['activeIndex'] === '0') {\n                this.filterInput.nativeElement.focus();\n            }\n        }));\n    }\n    subscribeTouchEvents() {\n        if (!isDocumentAvailable() || !this.touchEnabled) {\n            return;\n        }\n        this._zone.runOutsideAngular(() => \n        // Roll up DropDownTree on iOS when tapped outside\n        this.touchstartDisposeHandler = this.renderer.listen(document, 'touchstart', (e) => {\n            const target = e.target;\n            if (this.isFocused && !inDropDown(this.wrapper, target, this.popupRef)) {\n                this._zone.run(() => {\n                    if (this.isOpen) {\n                        this.treeview.blur();\n                    }\n                    this.blur();\n                });\n            }\n        }));\n    }\n    subscribeFocusEvents() {\n        if (isDocumentAvailable()) {\n            this.handleFocus = this.handleFocus.bind(this);\n            this.handleDocumentBlur = this.handleDocumentBlur.bind(this);\n            this._zone.runOutsideAngular(() => {\n                const useCapture = true;\n                document.addEventListener('focus', this.handleFocus, useCapture);\n                document.addEventListener('blur', this.handleDocumentBlur, useCapture);\n            });\n        }\n    }\n    unSubscribeFocusEvents() {\n        if (isDocumentAvailable()) {\n            const useCapture = true;\n            document.removeEventListener('focus', this.handleFocus, useCapture);\n            document.removeEventListener('blur', this.handleDocumentBlur, useCapture);\n        }\n    }\n    unsubscribeEvents() {\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n        this.unSubscribeFocusEvents();\n        if (this.touchstartDisposeHandler) {\n            this.touchstartDisposeHandler();\n        }\n    }\n    handleDocumentBlur(event) {\n        if (event.target !== this.wrapper.nativeElement) {\n            return;\n        }\n        event.stopImmediatePropagation();\n        this.handleBlur(event);\n    }\n    assignAriaDescribedBy() {\n        const currentValue = this.wrapper.nativeElement.getAttribute('aria-describedby') || '';\n        // add to the current value - don't replace it (the aria-describedby is used by the FormField component as well)\n        const newValue = `${this.valueLabelId} ${currentValue.trim()}`.trim();\n        this.renderer.setAttribute(this.wrapper.nativeElement, 'aria-describedby', newValue);\n    }\n    setComponentClasses() {\n        if (this.size !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('picker', this.size));\n        }\n        if (this.rounded !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n        }\n        if (this.fillMode !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('picker', this.fillMode));\n        }\n    }\n}\nDropDownTreeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownTreeComponent, deps: [{ token: i0.Injector }, { token: i0.ElementRef }, { token: i2.PopupService }, { token: NavigationService }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1.LocalizationService }, { token: TOUCH_ENABLED, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nDropDownTreeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DropDownTreeComponent, selector: \"kendo-dropdowntree\", inputs: { loading: \"loading\", clearButton: \"clearButton\", data: \"data\", value: \"value\", textField: \"textField\", valueField: \"valueField\", valueDepth: \"valueDepth\", hasChildren: \"hasChildren\", fetchChildren: \"fetchChildren\", placeholder: \"placeholder\", popupSettings: \"popupSettings\", dataItem: \"dataItem\", listHeight: \"listHeight\", disabled: \"disabled\", readonly: \"readonly\", valuePrimitive: \"valuePrimitive\", tabindex: \"tabindex\", size: \"size\", rounded: \"rounded\", fillMode: \"fillMode\", itemDisabled: \"itemDisabled\", isNodeExpanded: \"isNodeExpanded\", isNodeVisible: \"isNodeVisible\", loadOnDemand: \"loadOnDemand\", filterable: \"filterable\", filter: \"filter\", focusableId: \"focusableId\" }, outputs: { open: \"open\", opened: \"opened\", close: \"close\", closed: \"closed\", nodeExpand: \"nodeExpand\", nodeCollapse: \"nodeCollapse\", onFocus: \"focus\", onBlur: \"blur\", valueChange: \"valueChange\", filterChange: \"filterChange\" }, host: { listeners: { \"click\": \"handleClick()\", \"keydown\": \"handleKeydown($event)\" }, properties: { \"class.k-dropdowntree\": \"this.hostClasses\", \"class.k-picker\": \"this.hostClasses\", \"attr.aria-invalid\": \"this.hostAriaInvalid\", \"class.k-disabled\": \"this.isDisabled\", \"attr.disabled\": \"this.isDisabledAttribute\", \"class.k-loading\": \"this.isLoading\", \"attr.aria-busy\": \"this.isBusy\", \"attr.aria-controls\": \"this.hostAriaControls\", \"attr.id\": \"this.id\", \"attr.dir\": \"this.direction\", \"attr.tabindex\": \"this.hostTabIndex\", \"attr.role\": \"this.role\", \"attr.aria-haspopup\": \"this.ariaHasPopup\", \"attr.aria-expanded\": \"this.isAriaExpanded\", \"attr.aria-autocomplete\": \"this.hostAriaAutocomplete\", \"attr.readonly\": \"this.isReadonly\" } }, providers: [\n        DataService,\n        SelectionService,\n        NavigationService,\n        DisabledItemsService,\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.dropdowntree'\n        },\n        {\n            multi: true,\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DropDownTreeComponent)\n        },\n        {\n            provide: KendoInput,\n            useExisting: forwardRef(() => DropDownTreeComponent)\n        },\n        {\n            provide: DataBoundComponent,\n            useExisting: forwardRef(() => DropDownTreeComponent)\n        },\n        {\n            provide: ExpandableComponent,\n            useExisting: forwardRef(() => DropDownTreeComponent)\n        }\n    ], queries: [{ propertyName: \"noDataTemplate\", first: true, predicate: NoDataTemplateDirective, descendants: true }, { propertyName: \"headerTemplate\", first: true, predicate: HeaderTemplateDirective, descendants: true }, { propertyName: \"footerTemplate\", first: true, predicate: FooterTemplateDirective, descendants: true }, { propertyName: \"nodeTemplate\", first: true, predicate: NodeTemplateDirective, descendants: true }, { propertyName: \"valueTemplate\", first: true, predicate: ValueTemplateDirective, descendants: true }], viewQueries: [{ propertyName: \"popupTemplate\", first: true, predicate: [\"popupTemplate\"], descendants: true, static: true }, { propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true, read: ViewContainerRef, static: true }, { propertyName: \"treeview\", first: true, predicate: [\"treeview\"], descendants: true }, { propertyName: \"filterInput\", first: true, predicate: [\"filterInput\"], descendants: true }], exportAs: [\"kendoDropDownTree\"], usesOnChanges: true, ngImport: i0, template: `\n        <ng-container kendoDropDownTreeLocalizedMessages\n            i18n-noDataText=\"kendo.dropdowntree.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.dropdowntree.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n\n            i18n-selectButtonText=\"kendo.dropdowntree.selectButtonText|The text set as aria-label on the select button\"\n            selectButtonText=\"Select\"\n        >\n        </ng-container>\n        <span\n            [attr.id]=\"valueLabelId\"\n            class=\"k-input-inner\"\n        >\n            <span class=\"k-input-value-text\">\n                <ng-template *ngIf=\"valueTemplate\"\n                    [templateContext]=\"{\n                        templateRef: valueTemplate.templateRef,\n                        $implicit: dataItem\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!valueTemplate\"> {{ text || placeholder }} </ng-template>\n            </span>\n        </span>\n        <span\n            *ngIf=\"!loading && !readonly && clearButton && text?.length && !disabled\"\n            class=\"k-clear-value\"\n            [style.visibility]=\"clearButtonVisiblity\"\n            aria-hidden=\"true\"\n            [attr.title]=\"messageFor('clearTitle')\"\n            (click)=\"clearValue($event)\"\n        >\n            <span class=\"k-icon k-i-x\"></span>\n        </span>\n        <button\n            tabindex=\"-1\"\n            type=\"button\"\n            aria-hidden=\"true\"\n            class=\"k-input-button k-button k-icon-button\"\n            [ngClass]=\"selectButtonClasses\"\n            [attr.aria-label]=\"messageFor('selectButtonText')\"\n        >\n            <span\n                class=\"k-button-icon k-icon\"\n                [ngClass]=\"buttonClasses\"\n            ></span>\n        </button>\n        <ng-template #popupTemplate>\n            <span\n                *ngIf=\"filterable\"\n                class=\"k-list-filter\"\n            >\n                <span\n                    class=\"k-textbox k-input\"\n                    [ngClass]=\"filterInputClasses\"\n                >\n                    <span class=\"k-input-prefix\">\n                        <span class=\"k-input-icon k-icon k-i-search\"></span>\n                    </span>\n                    <input\n                        #filterInput\n                        (input)=\"handleFilterInputChange($event.target)\"\n                        [filterInput]=\"filterable && !touchEnabled\"\n                        (keydown.arrowdown)=\"handleKeydown($event)\"\n                        (keydown.alt.arrowup)=\"handleKeydown($event)\"\n                        [(ngModel)]=\"filter\"\n                        class=\"k-input-inner\"\n                        role=\"textbox\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                        tabindex=\"0\"\n                        aria-disabled=\"false\"\n                        aria-readonly=\"false\"\n                        [kendoEventsOutsideAngular]=\"{\n                            blur: handleBlur\n                        }\"\n                        [scope]=\"this\"\n                    >\n                </span>\n            </span>\n            <!--header template-->\n            <ng-template\n                *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate?.templateRef\n                }\">\n            </ng-template>\n            <kendo-treeview\n                #treeview\n                *ngIf=\"data.length !== 0 && !allNodesHidden\"\n                [size]=\"size\"\n                [nodes]=\"data\"\n                [style.maxHeight.px]=\"listHeight\"\n                [animate]=\"false\"\n                [(selectedKeys)]=\"selectedKeys\"\n                [selectBy]=\"selectBy\"\n                [textField]=\"textField\"\n                kendoTreeViewSelectable\n                [children]=\"children\"\n                [hasChildren]=\"hasChildren\"\n                [loadOnDemand]=\"loadOnDemand\"\n                [isExpanded]=\"isNodeExpanded\"\n                [isDisabled]=\"itemDisabled\"\n                [nodeTemplate]=\"nodeTemplate\"\n                [filter]=\"filter\"\n                [isVisible]=\"isNodeVisible\"\n                (focusout)=\"handleBlur($event)\"\n                (keydown)=\"handleKeydown($event)\"\n                (selectionChange)=\"onSelectionChange($event)\"\n                (expand)=\"nodeExpand.emit($event)\"\n                (collapse)=\"nodeCollapse.emit($event)\"\n            >\n            </kendo-treeview>\n            <!--footer template-->\n            <ng-template\n                *ngIf=\"footerTemplate\"\n                [templateContext]=\"{\n                    templateRef: footerTemplate?.templateRef\n                }\">\n            </ng-template>\n            <!--no-data template-->\n            <div class=\"k-no-data\" *ngIf=\"data.length === 0 || allNodesHidden\">\n                <ng-template [ngIf]=\"noDataTemplate\"\n                    [templateContext]=\"{\n                        templateRef: noDataTemplate?.templateRef\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!noDataTemplate\">\n                    <div>{{ messageFor('noDataText') }}</div>\n                </ng-template>\n            </div>\n        </ng-template>\n        <ng-container #container></ng-container>\n    `, isInline: true, components: [{ type: i1$1.TreeViewComponent, selector: \"kendo-treeview\", inputs: [\"filterInputPlaceholder\", \"expandDisabledNodes\", \"animate\", \"nodeTemplate\", \"loadMoreButtonTemplate\", \"trackBy\", \"nodes\", \"textField\", \"hasChildren\", \"isChecked\", \"isDisabled\", \"isExpanded\", \"isSelected\", \"isVisible\", \"navigable\", \"children\", \"loadOnDemand\", \"filterable\", \"filter\", \"size\", \"disableParentNodesOnly\"], outputs: [\"childrenLoaded\", \"blur\", \"focus\", \"expand\", \"collapse\", \"nodeDragStart\", \"nodeDrag\", \"filterStateChange\", \"nodeDrop\", \"nodeDragEnd\", \"addItem\", \"removeItem\", \"checkedChange\", \"selectionChange\", \"filterChange\", \"nodeClick\", \"nodeDblClick\"], exportAs: [\"kendoTreeView\"] }], directives: [{ type: LocalizedMessagesDirective, selector: \"\\n    [kendoDropDownListLocalizedMessages],\\n    [kendoDropDownTreeLocalizedMessages],\\n    [kendoComboBoxLocalizedMessages],\\n    [kendoMultiColumnComboBoxLocalizedMessages],\\n    [kendoAutoCompleteLocalizedMessages],\\n    [kendoMultiSelectLocalizedMessages],\\n    [kendoMultiSelectTreeLocalizedMessages]\\n  \" }, { type: i11.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TemplateContextDirective, selector: \"[templateContext]\", inputs: [\"templateContext\"] }, { type: i11.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i12.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: FilterInputDirective, selector: \"[filterInput]\", inputs: [\"filterInput\"] }, { type: i12.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i12.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i9.EventsOutsideAngularDirective, selector: \"[kendoEventsOutsideAngular]\", inputs: [\"kendoEventsOutsideAngular\", \"scope\"] }, { type: i1$1.SelectDirective, selector: \"[kendoTreeViewSelectable]\", inputs: [\"isSelected\", \"selectBy\", \"kendoTreeViewSelectable\", \"selectedKeys\"], outputs: [\"selectedKeysChange\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownTreeComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoDropDownTree',\n                    providers: [\n                        DataService,\n                        SelectionService,\n                        NavigationService,\n                        DisabledItemsService,\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.dropdowntree'\n                        },\n                        {\n                            multi: true,\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => DropDownTreeComponent)\n                        },\n                        {\n                            provide: KendoInput,\n                            useExisting: forwardRef(() => DropDownTreeComponent)\n                        },\n                        {\n                            provide: DataBoundComponent,\n                            useExisting: forwardRef(() => DropDownTreeComponent)\n                        },\n                        {\n                            provide: ExpandableComponent,\n                            useExisting: forwardRef(() => DropDownTreeComponent)\n                        }\n                    ],\n                    selector: 'kendo-dropdowntree',\n                    template: `\n        <ng-container kendoDropDownTreeLocalizedMessages\n            i18n-noDataText=\"kendo.dropdowntree.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.dropdowntree.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n\n            i18n-selectButtonText=\"kendo.dropdowntree.selectButtonText|The text set as aria-label on the select button\"\n            selectButtonText=\"Select\"\n        >\n        </ng-container>\n        <span\n            [attr.id]=\"valueLabelId\"\n            class=\"k-input-inner\"\n        >\n            <span class=\"k-input-value-text\">\n                <ng-template *ngIf=\"valueTemplate\"\n                    [templateContext]=\"{\n                        templateRef: valueTemplate.templateRef,\n                        $implicit: dataItem\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!valueTemplate\"> {{ text || placeholder }} </ng-template>\n            </span>\n        </span>\n        <span\n            *ngIf=\"!loading && !readonly && clearButton && text?.length && !disabled\"\n            class=\"k-clear-value\"\n            [style.visibility]=\"clearButtonVisiblity\"\n            aria-hidden=\"true\"\n            [attr.title]=\"messageFor('clearTitle')\"\n            (click)=\"clearValue($event)\"\n        >\n            <span class=\"k-icon k-i-x\"></span>\n        </span>\n        <button\n            tabindex=\"-1\"\n            type=\"button\"\n            aria-hidden=\"true\"\n            class=\"k-input-button k-button k-icon-button\"\n            [ngClass]=\"selectButtonClasses\"\n            [attr.aria-label]=\"messageFor('selectButtonText')\"\n        >\n            <span\n                class=\"k-button-icon k-icon\"\n                [ngClass]=\"buttonClasses\"\n            ></span>\n        </button>\n        <ng-template #popupTemplate>\n            <span\n                *ngIf=\"filterable\"\n                class=\"k-list-filter\"\n            >\n                <span\n                    class=\"k-textbox k-input\"\n                    [ngClass]=\"filterInputClasses\"\n                >\n                    <span class=\"k-input-prefix\">\n                        <span class=\"k-input-icon k-icon k-i-search\"></span>\n                    </span>\n                    <input\n                        #filterInput\n                        (input)=\"handleFilterInputChange($event.target)\"\n                        [filterInput]=\"filterable && !touchEnabled\"\n                        (keydown.arrowdown)=\"handleKeydown($event)\"\n                        (keydown.alt.arrowup)=\"handleKeydown($event)\"\n                        [(ngModel)]=\"filter\"\n                        class=\"k-input-inner\"\n                        role=\"textbox\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                        tabindex=\"0\"\n                        aria-disabled=\"false\"\n                        aria-readonly=\"false\"\n                        [kendoEventsOutsideAngular]=\"{\n                            blur: handleBlur\n                        }\"\n                        [scope]=\"this\"\n                    >\n                </span>\n            </span>\n            <!--header template-->\n            <ng-template\n                *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate?.templateRef\n                }\">\n            </ng-template>\n            <kendo-treeview\n                #treeview\n                *ngIf=\"data.length !== 0 && !allNodesHidden\"\n                [size]=\"size\"\n                [nodes]=\"data\"\n                [style.maxHeight.px]=\"listHeight\"\n                [animate]=\"false\"\n                [(selectedKeys)]=\"selectedKeys\"\n                [selectBy]=\"selectBy\"\n                [textField]=\"textField\"\n                kendoTreeViewSelectable\n                [children]=\"children\"\n                [hasChildren]=\"hasChildren\"\n                [loadOnDemand]=\"loadOnDemand\"\n                [isExpanded]=\"isNodeExpanded\"\n                [isDisabled]=\"itemDisabled\"\n                [nodeTemplate]=\"nodeTemplate\"\n                [filter]=\"filter\"\n                [isVisible]=\"isNodeVisible\"\n                (focusout)=\"handleBlur($event)\"\n                (keydown)=\"handleKeydown($event)\"\n                (selectionChange)=\"onSelectionChange($event)\"\n                (expand)=\"nodeExpand.emit($event)\"\n                (collapse)=\"nodeCollapse.emit($event)\"\n            >\n            </kendo-treeview>\n            <!--footer template-->\n            <ng-template\n                *ngIf=\"footerTemplate\"\n                [templateContext]=\"{\n                    templateRef: footerTemplate?.templateRef\n                }\">\n            </ng-template>\n            <!--no-data template-->\n            <div class=\"k-no-data\" *ngIf=\"data.length === 0 || allNodesHidden\">\n                <ng-template [ngIf]=\"noDataTemplate\"\n                    [templateContext]=\"{\n                        templateRef: noDataTemplate?.templateRef\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!noDataTemplate\">\n                    <div>{{ messageFor('noDataText') }}</div>\n                </ng-template>\n            </div>\n        </ng-template>\n        <ng-container #container></ng-container>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i0.ElementRef }, { type: i2.PopupService }, { type: NavigationService }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1.LocalizationService }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TOUCH_ENABLED]\n                }] }]; }, propDecorators: { hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-dropdowntree']\n            }, {\n                type: HostBinding,\n                args: ['class.k-picker']\n            }], hostAriaInvalid: [{\n                type: HostBinding,\n                args: ['attr.aria-invalid']\n            }], isDisabled: [{\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }], isDisabledAttribute: [{\n                type: HostBinding,\n                args: ['attr.disabled']\n            }], isLoading: [{\n                type: HostBinding,\n                args: ['class.k-loading']\n            }], isBusy: [{\n                type: HostBinding,\n                args: ['attr.aria-busy']\n            }], hostAriaControls: [{\n                type: HostBinding,\n                args: ['attr.aria-controls']\n            }], id: [{\n                type: HostBinding,\n                args: ['attr.id']\n            }], direction: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], hostTabIndex: [{\n                type: HostBinding,\n                args: ['attr.tabindex']\n            }], role: [{\n                type: HostBinding,\n                args: ['attr.role']\n            }], ariaHasPopup: [{\n                type: HostBinding,\n                args: ['attr.aria-haspopup']\n            }], isAriaExpanded: [{\n                type: HostBinding,\n                args: ['attr.aria-expanded']\n            }], hostAriaAutocomplete: [{\n                type: HostBinding,\n                args: ['attr.aria-autocomplete']\n            }], isReadonly: [{\n                type: HostBinding,\n                args: ['attr.readonly']\n            }], handleClick: [{\n                type: HostListener,\n                args: ['click']\n            }], handleKeydown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }], noDataTemplate: [{\n                type: ContentChild,\n                args: [NoDataTemplateDirective, { static: false }]\n            }], headerTemplate: [{\n                type: ContentChild,\n                args: [HeaderTemplateDirective, { static: false }]\n            }], footerTemplate: [{\n                type: ContentChild,\n                args: [FooterTemplateDirective, { static: false }]\n            }], nodeTemplate: [{\n                type: ContentChild,\n                args: [NodeTemplateDirective, { static: false }]\n            }], valueTemplate: [{\n                type: ContentChild,\n                args: [ValueTemplateDirective, { static: false }]\n            }], popupTemplate: [{\n                type: ViewChild,\n                args: ['popupTemplate', { static: true }]\n            }], container: [{\n                type: ViewChild,\n                args: ['container', { read: ViewContainerRef, static: true }]\n            }], treeview: [{\n                type: ViewChild,\n                args: ['treeview', { static: false }]\n            }], filterInput: [{\n                type: ViewChild,\n                args: ['filterInput', { static: false }]\n            }], open: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }], closed: [{\n                type: Output\n            }], nodeExpand: [{\n                type: Output\n            }], nodeCollapse: [{\n                type: Output\n            }], onFocus: [{\n                type: Output,\n                args: ['focus']\n            }], onBlur: [{\n                type: Output,\n                args: ['blur']\n            }], valueChange: [{\n                type: Output\n            }], filterChange: [{\n                type: Output\n            }], loading: [{\n                type: Input\n            }], clearButton: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], textField: [{\n                type: Input\n            }], valueField: [{\n                type: Input\n            }], valueDepth: [{\n                type: Input\n            }], hasChildren: [{\n                type: Input\n            }], fetchChildren: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], popupSettings: [{\n                type: Input\n            }], dataItem: [{\n                type: Input\n            }], listHeight: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], valuePrimitive: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], rounded: [{\n                type: Input\n            }], fillMode: [{\n                type: Input\n            }], itemDisabled: [{\n                type: Input\n            }], isNodeExpanded: [{\n                type: Input\n            }], isNodeVisible: [{\n                type: Input\n            }], loadOnDemand: [{\n                type: Input\n            }], filterable: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], focusableId: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nconst nodeIndex$1 = (item) => (item || {}).key;\n/**\n * @hidden\n */\nconst buildTreeIndex = (parentIndex, itemIndex) => {\n    return [parentIndex, itemIndex].filter(part => isPresent(part)).join('_');\n};\n/**\n * @hidden\n */\nconst buildTreeItem = (dataItem, valueField, currentLevelIndex) => {\n    if (!isPresent(dataItem)) {\n        return null;\n    }\n    return {\n        dataItem,\n        key: valueFrom({ dataItem, level: currentLevelIndex }, valueField) + '_' + currentLevelIndex\n    };\n};\n/**\n * @hidden\n */\nclass MultiSelectTreeLookupService {\n    constructor() {\n        this.map = new Map();\n    }\n    reset() {\n        this.map.clear();\n    }\n    registerChildren(index, children) {\n        const item = this.item(index);\n        if (!item) {\n            return;\n        }\n        item.children = children;\n    }\n    item(index) {\n        return this.map.get(index) || null;\n    }\n    registerItem(item, parent) {\n        const currentLookup = {\n            children: [],\n            item,\n            parent: this.item(nodeIndex$1(parent))\n        };\n        this.map.set(item.key, currentLookup);\n    }\n    itemLookup(index) {\n        const item = this.item(index);\n        if (!item) {\n            return null;\n        }\n        return {\n            children: this.mapChildren(item.children),\n            item: item.item,\n            parent: item.parent\n        };\n    }\n    mapChildren(children = []) {\n        return children.map(c => {\n            const { item, parent, children } = this.item(c.key);\n            return {\n                children: this.mapChildren(children),\n                item,\n                parent\n            };\n        });\n    }\n}\nMultiSelectTreeLookupService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MultiSelectTreeLookupService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMultiSelectTreeLookupService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MultiSelectTreeLookupService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MultiSelectTreeLookupService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @hidden\n *\n * A directive which manages the in-memory checked state of the MultiSelectTree nodes.\n */\nclass BaseCheckDirective {\n    addItem(item) {\n        if (this.isItemChecked(item)) {\n            return;\n        }\n        const level = getHierarchicalItemLevel(item.index);\n        const key = this.getKey(item, level);\n        const candidate = Object.assign(Object.assign({}, item), { level, key });\n        this.checkedItems.push(candidate);\n        this.checkedKeys.add(key);\n    }\n    removeItem(item) {\n        if (!this.isItemChecked(item)) {\n            return;\n        }\n        const level = getHierarchicalItemLevel(item.index);\n        const key = this.getKey(item, level);\n        const candidate = Object.assign(Object.assign({}, item), { level, key });\n        this.checkedItems = this.checkedItems\n            .filter(item => valueFrom(item, this.valueField) !== valueFrom(candidate, this.valueField));\n        this.checkedKeys.delete(key);\n    }\n    isItemChecked(item) {\n        const level = item.index.split('_').length - 1;\n        item.level = level;\n        const key = this.getKey(item, level);\n        return this.checkedKeys.has(key);\n    }\n    updateItems() {\n        this.checkedItems = this.checkedItems || [];\n        this.checkedKeys = new Set(this.checkedItems.map(item => item.key));\n    }\n    /**\n     * Adds the item's depth to the item's value to allow duplicate values on different levels.\n     *\n     * @param item - The checked key.\n     * @returns { string } - A string key consisting of the item's `valueField` value and its depth (depth is 0 if data is homogeneous).\n     */\n    getKey(item, level) {\n        return valueFrom(item, this.valueField) + '_' + (this.isHeterogeneous ? level : 0);\n    }\n}\nBaseCheckDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BaseCheckDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nBaseCheckDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: BaseCheckDirective, inputs: { valueField: \"valueField\", checkedItems: \"checkedItems\", isHeterogeneous: \"isHeterogeneous\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: BaseCheckDirective, decorators: [{\n            type: Directive\n        }], propDecorators: { valueField: [{\n                type: Input\n            }], checkedItems: [{\n                type: Input\n            }], isHeterogeneous: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n *\n * A directive which manages the in-memory checked state of the MultiSelectTree nodes.\n */\nclass CheckAllDirective extends BaseCheckDirective {\n    constructor(element, zone, cdr, renderer) {\n        super();\n        this.element = element;\n        this.zone = zone;\n        this.cdr = cdr;\n        this.renderer = renderer;\n        /**\n         * Fires when the `checkedItems` collection was updated.\n         */\n        this.checkedItemsChange = new EventEmitter();\n        /**\n         * Holds a Set with just the checked item keys.\n         *\n         * Should be updated each time the `checkedItems` value or content is changed.\n         * Can be used for efficient look-up of whether an item is checked or not (O(1) access time).\n         */\n        this.checkedKeys = new Set();\n    }\n    handleChange(event) {\n        // Need to store the current checkbox state at the moment of click\n        this.currentCheckedState = event.checked;\n        this.currentIndeterminateState = this.isIndeterminate;\n        this.treeview.nodes.map((_value, index) => {\n            const itemIndex = String(index);\n            const itemLookup = this.treeview.itemLookup(itemIndex);\n            this.checkNode(itemLookup);\n        });\n        this.checkedItemsChange.emit(this.checkedItems.slice());\n    }\n    get isIndeterminate() {\n        const isIndeterminate = this.treeview.nodes.some((_node, index) => {\n            const itemIndex = String(index);\n            const itemLookup = this.treeview.itemLookup(itemIndex);\n            return this.someChecked(itemLookup);\n        });\n        return this.isChecked ? false : isIndeterminate;\n    }\n    get isChecked() {\n        const isChecked = this.treeview.nodes.every((_node, index) => {\n            const itemIndex = String(index);\n            const itemLookup = this.treeview.itemLookup(itemIndex);\n            return this.allChecked(itemLookup);\n        });\n        return isChecked;\n    }\n    ngOnChanges(changes) {\n        if (isPresent(changes.checkedItems)) {\n            this.updateItems();\n            this.renderer.setProperty(this.element.nativeElement, 'checked', this.isChecked);\n            this.renderer.setProperty(this.element.nativeElement, 'indeterminate', this.isIndeterminate);\n        }\n    }\n    ngOnInit() {\n        if (this.focused) {\n            this.nextTick(() => this.element.nativeElement.focus());\n        }\n    }\n    nextTick(fn) {\n        this.zone.runOutsideAngular(() => setTimeout(fn));\n    }\n    checkNode(itemLookup) {\n        if (this.treeview.isDisabled(itemLookup.item.dataItem, itemLookup.item.index)) {\n            return;\n        }\n        const pendingCheck = [];\n        const filter = (item) => this.treeview.isVisible(item.dataItem, item.index) &&\n            !this.treeview.isDisabled(item.dataItem, item.index);\n        pendingCheck.push(itemLookup.item);\n        fetchDescendentNodes(itemLookup, filter)\n            .forEach(lookup => pendingCheck.push(lookup.item));\n        pendingCheck.forEach(item => {\n            if (this.currentIndeterminateState) {\n                if (this.lastAction === 'check') {\n                    this.addItem(item);\n                }\n                else {\n                    this.removeItem(item);\n                }\n                return;\n            }\n            if (this.currentCheckedState) {\n                this.addItem(item);\n            }\n            else {\n                this.removeItem(item);\n            }\n        });\n    }\n    allChecked(lookup) {\n        const children = lookup && lookup.children;\n        if (!Array.isArray(children)) {\n            return;\n        }\n        const childrenChecked = children.every(child => {\n            if (child.children.length) {\n                return this.isItemChecked(child.item) && this.allChecked(child);\n            }\n            return this.isItemChecked(child.item);\n        });\n        return childrenChecked && this.isItemChecked(lookup.item);\n    }\n    someChecked(lookup) {\n        const children = lookup && lookup.children;\n        if (!Array.isArray(children)) {\n            return;\n        }\n        const childrenChecked = children.some(child => {\n            if (child.children.length) {\n                return this.isItemChecked(child.item) || this.someChecked(child);\n            }\n            return this.isItemChecked(child.item);\n        });\n        return childrenChecked || this.isItemChecked(lookup.item);\n    }\n}\nCheckAllDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CheckAllDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nCheckAllDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: CheckAllDirective, selector: \"[checkAll]\", inputs: { lastAction: \"lastAction\", treeview: \"treeview\", checkedItems: \"checkedItems\", valueField: \"valueField\", focused: [\"checkAll\", \"focused\"] }, outputs: { checkedItemsChange: \"checkedItemsChange\" }, host: { listeners: { \"change\": \"handleChange($event.target)\" } }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CheckAllDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line\n                    selector: '[checkAll]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }]; }, propDecorators: { lastAction: [{\n                type: Input\n            }], treeview: [{\n                type: Input\n            }], checkedItems: [{\n                type: Input\n            }], valueField: [{\n                type: Input\n            }], focused: [{\n                type: Input,\n                args: ['checkAll']\n            }], checkedItemsChange: [{\n                type: Output\n            }], handleChange: [{\n                type: HostListener,\n                args: ['change', ['$event.target']]\n            }] } });\n\n/**\n * @hidden\n *\n * A directive which manages the in-memory checked state of the MultiSelectTree nodes.\n */\nclass CheckDirective extends BaseCheckDirective {\n    constructor(treeView) {\n        super();\n        this.treeView = treeView;\n        /**\n         * Fires when the `checkedItems` collection was updated.\n         */\n        this.checkedItemsChange = new EventEmitter();\n        /**\n         * Holds a Set with just the checked item keys.\n         *\n         * Should be updated each time the `checkedItems` value or content is changed.\n         * Can be used for efficient look-up of whether an item is checked or not (O(1) access time).\n         */\n        this.checkedKeys = new Set();\n        this.subscriptions = new Subscription();\n        this.subscriptions.add(this.treeView.checkedChange\n            .subscribe(this.handleCheckedChange.bind(this)));\n        this.treeView.isChecked = this.getCheckedState.bind(this);\n    }\n    ngOnChanges(changes) {\n        if (isPresent(changes.checkable)) {\n            this.toggleCheckOnClick();\n        }\n        if (isPresent(changes.checkedItems)) {\n            this.updateItems();\n        }\n    }\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n        this.unsubscribeClick();\n    }\n    getCheckedState(dataItem, index) {\n        if (this.isItemChecked({ dataItem, index })) {\n            return 'checked';\n        }\n        else if (this.checkable.checkChildren && this.isItemIndeterminate(this.treeView.itemLookup(index))) {\n            return 'indeterminate';\n        }\n        else {\n            return 'none';\n        }\n    }\n    handleCheckedChange(node) {\n        this.checkNode(node);\n        // parents should be checked if `checkChildren` is set to `true` (single config option for both)\n        const checkParents = this.checkable.checkChildren;\n        if (checkParents) {\n            this.checkParents(node.parent);\n        }\n        this.checkedItemsChange.emit(this.checkedItems.slice());\n    }\n    toggleCheckOnClick() {\n        this.unsubscribeClick();\n        if (this.checkable.checkOnClick) {\n            this.clickSubscription = this.treeView.nodeClick\n                .pipe(filter(event => event.type === 'click'))\n                .subscribe(event => {\n                const lookup = this.treeView.itemLookup(event.item.index);\n                this.handleCheckedChange(lookup);\n            });\n        }\n    }\n    unsubscribeClick() {\n        if (this.clickSubscription) {\n            this.clickSubscription.unsubscribe();\n            this.clickSubscription = null;\n        }\n    }\n    checkNode(lookup) {\n        if (this.treeView.isDisabled(lookup.item.dataItem, lookup.item.index)) {\n            return;\n        }\n        const target = lookup.item;\n        const pendingCheck = [target];\n        // TODO: extract in a separate `checkChildren` method?\n        if (this.checkable.checkChildren) {\n            const filter = (item) => this.treeView.isVisible(item.dataItem, item.index) &&\n                !this.treeView.isDisabled(item.dataItem, item.index);\n            fetchDescendentNodes(lookup, filter)\n                .forEach(lookup => pendingCheck.push(lookup.item));\n        }\n        const shouldCheck = !this.isItemChecked(target);\n        pendingCheck.forEach(item => {\n            if (shouldCheck) {\n                this.addItem(item);\n            }\n            else {\n                this.removeItem(item);\n            }\n        });\n    }\n    checkParents(parent) {\n        let currentParent = parent;\n        while (currentParent) {\n            const allChildrenSelected = currentParent.children.every(item => this.isItemChecked(item));\n            if (allChildrenSelected) {\n                this.addItem(currentParent.item);\n            }\n            else {\n                this.removeItem(currentParent.item);\n            }\n            currentParent = currentParent.parent;\n        }\n    }\n    isItemIndeterminate(lookup) {\n        const children = lookup.children;\n        if (!Array.isArray(children) || children.length === 0) {\n            return false;\n        }\n        let index = 0;\n        let child = children[index];\n        while (isPresent(child)) {\n            if (this.isItemChecked(child.item) || this.isItemIndeterminate(child)) {\n                return true;\n            }\n            index += 1;\n            child = children[index];\n        }\n        return false;\n    }\n}\nCheckDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CheckDirective, deps: [{ token: i1$1.TreeViewComponent }], target: i0.ɵɵFactoryTarget.Directive });\nCheckDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: CheckDirective, selector: \"[kendoMultiSelectTreeCheckable]\", inputs: { checkable: \"checkable\", valueField: \"valueField\", checkedItems: \"checkedItems\" }, outputs: { checkedItemsChange: \"checkedItemsChange\" }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CheckDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoMultiSelectTreeCheckable]'\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.TreeViewComponent }]; }, propDecorators: { checkable: [{\n                type: Input\n            }], valueField: [{\n                type: Input\n            }], checkedItems: [{\n                type: Input\n            }], checkedItemsChange: [{\n                type: Output\n            }] } });\n\nconst DEFAULT_POPUP_SETTINGS = { animate: true };\nconst DEFAULT_CHECKABLE_SETTINGS = { checkChildren: true, checkOnClick: true };\nconst hasChildren = () => false;\nconst fetchChildren = () => of([]);\nconst itemDisabled = () => false;\nconst isNodeVisible = () => true;\nconst DEFAULT_SIZE = 'medium';\nconst DEFAULT_ROUNDED = 'medium';\nconst DEFAULT_FILL_MODE = 'solid';\n/**\n * Represents the [Kendo UI MultiSelectTree component for Angular]({% slug overview_multiselecttree %}).\n */\nclass MultiSelectTreeComponent {\n    constructor(injector, wrapper, popupService, renderer, navigationService, _zone, localization, cdr, lookup, touchEnabled) {\n        this.injector = injector;\n        this.wrapper = wrapper;\n        this.popupService = popupService;\n        this.renderer = renderer;\n        this.navigationService = navigationService;\n        this._zone = _zone;\n        this.localization = localization;\n        this.cdr = cdr;\n        this.lookup = lookup;\n        this.touchEnabled = touchEnabled;\n        this.hostClasses = true;\n        this.role = 'combobox';\n        this.ariaHasPopup = 'tree';\n        /**\n         * Sets the levels in the data set where the values can be found when `valueField` is an Array.\n         * The field serves to correctly allocate a data item used when the MultiSelectTree is initialized with a value.\n         */\n        this.valueDepth = [];\n        /**\n         * The hint which is displayed when the component is empty.\n         */\n        this.placeholder = \"\";\n        /**\n         * Sets the height of the options list. By default, `listHeight` is 200px.\n         *\n         * > The `listHeight` property affects only the list of options and not the whole popup container.\n         * > To set the height of the popup container, use `popupSettings.height`.\n         */\n        this.listHeight = 200;\n        /**\n         * Sets the disabled state of the component.\n         */\n        this.disabled = false;\n        /**\n         * Sets the read-only state of the component.\n         */\n        this.readonly = false;\n        /**\n         * Specifies the type of the selected value\n         * ([more information and example]({% slug valuebinding_multiselecttree %}#toc-primitive-values)).\n         * If set to `true`, the selected value has to be a primitive one.\n         */\n        this.valuePrimitive = false;\n        /**\n         * Indicates whether the child nodes will be fetched on node expand or will be initially prefetched.\n         * @default false\n         */\n        this.loadOnDemand = false;\n        /**\n         * @hidden\n         *\n         * Used by the kendo-label and kendo-floatinglabel to access and associate the focusable element with the provided label via aria-labelledby.\n         */\n        this.focusableId = `k-${guid$1()}`;\n        /**\n         * If set to `true`, renders a button on hovering over the component.\n         * Clicking this button resets the value of the component to `undefined` and triggers the `change` event.\n         * @default true\n         */\n        this.clearButton = true;\n        /**\n         * Renders the built-in input element for filtering the MultiSelectTree.\n         * If set to `true`, the component emits the `filterChange` event, which can be used to [filter the MultiSelectTree manually]({% slug filtering_multiselecttree %}#toc-manual-filtering).\n         * A built-in filtering implementation is available to use with the [`kendoMultiSelectTreeHierarchyBinding`]({% slug api_dropdowns_multiselecttreehierarchybindingdirective %}) and [`kendoMultiSelectTreeFlatBinding`]({% slug api_dropdowns_multiselecttreeflatbindingdirective %}) directives.\n         * @default false\n         */\n        this.filterable = false;\n        /**\n         * If `checkАll` is set to `true` and the checkboxes are enabled, a tri-state checkbox appears above the embedded treeview.\n         * Clicking the checkbox checks or unchecks all enabled items of the treeview that are loaded.\n         * @default false\n         */\n        this.checkAll = false;\n        /**\n         * A function which determines if a specific node has child nodes.\n         */\n        this.hasChildren = hasChildren;\n        /**\n         * A function which provides the child nodes for a given parent node.\n         */\n        this.fetchChildren = fetchChildren;\n        /**\n         * A callback which determines whether a tree node should be rendered as hidden. The utility .k-display-none class is used to hide the nodes.\n         * Useful for custom filtering implementations.\n         */\n        this.isNodeVisible = isNodeVisible;\n        /**\n         * A function that is executed for each data item and determines if a specific item is disabled.\n         */\n        this.itemDisabled = itemDisabled;\n        /**\n         * A user-defined callback function which receives an array of selected data items and maps them to an array of tags.\n         *\n         * @param { Any[] } dataItems - The selected data items from the list.\n         * @returns { Any[] } - The tags that will be rendered by the component.\n         */\n        this.tagMapper = (tags) => tags || [];\n        /**\n         * Fires each time the user focuses the MultiSelectTree.\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * Fires each time the MultiSelectTree gets blurred.\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * Fires each time the popup is about to open\n         * ([see example]({% slug openstate_multiselecttree %})).\n         * This event is preventable. If you cancel it, the popup will remain closed.\n         */\n        this.open = new EventEmitter();\n        /**\n         * Fires after the popup has been opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Fires each time the popup is about to close\n         * ([see example]({% slug openstate_multiselecttree %})).\n         * This event is preventable. If you cancel it, the popup will remain open.\n         */\n        this.close = new EventEmitter();\n        /**\n         * Fires after the popup has been closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Fires when the user expands a node in the popup TreeView.\n         */\n        this.nodeExpand = new EventEmitter();\n        /**\n         * Fires when the user collapses a node in the popup TreeView.\n         */\n        this.nodeCollapse = new EventEmitter();\n        /**\n         * Fires each time the value is changed\n         * ([see example]({% slug overview_multiselecttree %}#toc-events)).\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires each time a tag is about to be removed([see examples]({% slug summarytagmode_multiselect %}#toc-notifying-on-removing-group-tags)).\n         * This event is preventable. If you cancel it, the tag will not be removed.\n         */\n        this.removeTag = new EventEmitter();\n        /**\n         * Fires when the value of the built-in filter input element changes.\n         */\n        this.filterChange = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.filterStateChange = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.checkedItems = [];\n        /**\n         * @hidden\n         */\n        this.showAfter = 0;\n        /**\n         * @hidden\n         */\n        this.allNodesHidden = false;\n        this.tagListId = guid$1();\n        this.tagPrefix = \"tag-\" + guid$1();\n        this.focusedTagIndex = undefined;\n        this._value = [];\n        this._tabindex = 0;\n        this._popupSettings = DEFAULT_POPUP_SETTINGS;\n        this._checkableSettings = DEFAULT_CHECKABLE_SETTINGS;\n        this._isFocused = false;\n        this._popupId = guid$1();\n        this._size = 'medium';\n        this._rounded = 'medium';\n        this._fillMode = 'solid';\n        this.subscriptions = [];\n        this.lastAction = 'check';\n        this.onTouchedCallback = noop;\n        this.onChangeCallback = noop;\n        this.direction = localization.rtl ? 'rtl' : 'ltr';\n        this.subscribeEvents();\n        this.subscribeFocusEvents();\n    }\n    get isDisabled() {\n        return this.disabled;\n    }\n    get hostAriaControls() {\n        return this.isOpen ? this._popupId : null;\n    }\n    get hostAriaAutocomplete() {\n        return this.filterable ? 'list' : null;\n    }\n    get isLoading() {\n        return this.loading;\n    }\n    get hostAriaInvalid() {\n        return this.formControl ? this.formControl.invalid.toString() : null;\n    }\n    get isBusy() {\n        return this.loading ? 'true' : null;\n    }\n    get id() {\n        return this.focusableId;\n    }\n    get hostTabIndex() {\n        return this.tabindex;\n    }\n    get isAriaExpanded() {\n        return this.isOpen;\n    }\n    get isReadonly() {\n        return this.readonly ? '' : null;\n    }\n    get ariaDescribedBy() {\n        return this.tagListId;\n    }\n    get ariaActiveDescendant() {\n        return this.focusedTagId;\n    }\n    /**\n     * @hidden\n     */\n    get formControl() {\n        const ngControl = this.injector.get(NgControl, null);\n        return (ngControl === null || ngControl === void 0 ? void 0 : ngControl.control) || null;\n    }\n    /**\n     * @hidden\n     */\n    handleClick() {\n        this.togglePopup(!this.isOpen);\n    }\n    /**\n     * @hidden\n     */\n    handleKeydown(event) {\n        const deleteTag = this.isWrapperActive && event.keyCode === Keys.Backspace && this.tags.length > 0;\n        if (deleteTag) {\n            this.handleBackspace();\n            return;\n        }\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        const eventData = event;\n        const action = this.navigationService.process({\n            originalEvent: eventData\n        });\n        if (action === NavigationAction.Open) {\n            eventData.preventDefault();\n        }\n    }\n    set treeview(treeview) {\n        this._treeview = treeview;\n        if (treeview) {\n            // If filtering is enabled, focus the TreeView on mobile devices instead of the filter input\n            if (this.isFocused && !this.filterable && !this.checkAll || this.touchEnabled) {\n                treeview.focus();\n            }\n            /**\n             * the treeview animations are initially disabled (we don't want expand animations during popup opening)\n             * re-enables the animations for user interaction\n             * The Promise is required to properly change the `animate` property when\n             * the popup is appended to a container and opened upon initialization.\n             * Otherwise, the \"Expression has changed...\" type error will be thrown.\n             */\n            Promise.resolve(null).then(() => this.treeview.animate = true);\n        }\n    }\n    get treeview() {\n        return this._treeview;\n    }\n    /**\n     * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n    set tabindex(value) {\n        const providedTabIndex = parseNumber(value);\n        const defaultTabIndex = 0;\n        this._tabindex = !isNaN(providedTabIndex) ? providedTabIndex : defaultTabIndex;\n    }\n    get tabindex() {\n        return this.disabled ? -1 : this._tabindex;\n    }\n    /**\n     * Sets the size of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `none`\n     *\n     */\n    set size(size) {\n        const newSize = size ? size : DEFAULT_SIZE;\n        this.renderer.removeClass(this.wrapper.nativeElement, getSizeClass('input', this.size));\n        if (size !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('input', newSize));\n        }\n        this._size = newSize;\n    }\n    get size() {\n        return this._size;\n    }\n    /**\n     * Sets the border radius of the component.\n     *\n     * The possible values are:\n     * * `small`\n     * * `medium` (default)\n     * * `large`\n     * * `full`\n     * * `none`\n     *\n     */\n    set rounded(rounded) {\n        const newRounded = rounded ? rounded : DEFAULT_ROUNDED;\n        this.renderer.removeClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n        if (rounded !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(newRounded));\n        }\n        this._rounded = newRounded;\n    }\n    get rounded() {\n        return this._rounded;\n    }\n    /**\n     * Sets the fillMode of the component.\n     *\n     * The possible values are:\n     * * `flat`\n     * * `solid` (default)\n     * * `outline`\n     * * `none`\n     *\n     */\n    set fillMode(fillMode) {\n        const newFillMode = fillMode ? fillMode : DEFAULT_FILL_MODE;\n        this.renderer.removeClass(this.wrapper.nativeElement, getFillModeClass('input', this.fillMode));\n        if (fillMode !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('input', newFillMode));\n        }\n        this._fillMode = newFillMode;\n    }\n    get fillMode() {\n        return this._fillMode;\n    }\n    /**\n     * Configures the popup of the MultiSelectTree.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `width: Number | String`&mdash;Sets the width of the popup container. By default, the width of the host element is used. If set to `auto`, the component automatically adjusts the width of the popup and no item labels are wrapped.\n     * - `height: Number`&mdash;Sets the height of the popup container.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n     */\n    set popupSettings(settings) {\n        this._popupSettings = Object.assign({}, DEFAULT_POPUP_SETTINGS, settings);\n        // `detectChanges` needed, otherwise upon value initialization and `appendTo` property\n        // an error is thrown => ExpressionChangedAfterItHasBeenCheckedError\n        this.cdr.detectChanges();\n    }\n    get popupSettings() {\n        return this._popupSettings;\n    }\n    /**\n     * Defines the checkable settings of the MultiSelecTree nodes.\n     * If no value is provided, the default [`CheckableSettings`]({% slug api_dropdowns_multiselecttreecheckablesettings %}) are applied.\n     */\n    set checkableSettings(settings) {\n        this._checkableSettings = Object.assign({}, DEFAULT_CHECKABLE_SETTINGS, settings);\n    }\n    get checkableSettings() {\n        return this._checkableSettings;\n    }\n    /**\n     * Sets the data of the MultiSelectTree.\n     *\n     * > The data has to be provided in an array-like list with objects.\n     */\n    set data(data) {\n        this._nodes = data;\n        this.setState();\n        if (this.isContentInit) {\n            // Needed for when the data is loaded later/asynchronously because it would not exist on ngContentInit\n            this.registerLookupItems(data);\n        }\n    }\n    get data() {\n        return this._nodes;\n    }\n    /**\n     * Sets the value of the MultiSelectTree.\n     * It can either be of the primitive (string, numbers) or of the complex (objects) type.\n     * To define the type, use the `valuePrimitive` option.\n     *\n     */\n    set value(value) {\n        this._value = value ? value : [];\n        this.setState();\n    }\n    get value() {\n        return this._value;\n    }\n    /**\n     * Keeps the current `dataItems` object in order to resolve selection.\n     * Needs to be provided when when programmatically setting a `value` and `valuePrimitive` is set to `true`.\n     */\n    set dataItems(items) {\n        this._dataItems = (items || []).map((dataItem, index) => {\n            if (hasProps(dataItem, ['dataItem', 'index', 'level'])) {\n                return dataItem;\n            }\n            const level = this.valueDepth[index] || 0;\n            const key = valueFrom({ dataItem, level }, this.valueField) + '_' + (this.isHeterogeneous ? this.valueDepth[index] : 0);\n            return {\n                dataItem,\n                index: null,\n                level,\n                key\n            };\n        });\n        this.setState();\n    }\n    get dataItems() {\n        return this._dataItems || this.value.map((value, index) => {\n            const level = this.valueDepth[index] || 0;\n            const key = valueFrom({ dataItem: value, level }, this.valueField) + '_' + (this.isHeterogeneous ? this.valueDepth[index] : 0);\n            return {\n                dataItem: value,\n                index: null,\n                level,\n                key\n            };\n        });\n    }\n    /**\n     * @hidden\n     */\n    get focusedTagId() {\n        if (!isPresent(this.focusedTagIndex) || this.isOpen) {\n            return null;\n        }\n        const dataItem = this.tags[this.focusedTagIndex];\n        return `${this.tagPrefix}-${valueFrom({ dataItem }, this.valueField)}`;\n    }\n    set isFocused(isFocused) {\n        this.renderer[isFocused ? 'addClass' : 'removeClass'](this.wrapper.nativeElement, 'k-focus');\n        this._isFocused = isFocused;\n    }\n    get isFocused() {\n        return this._isFocused;\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n    get isOpen() {\n        return isPresent(this.popupRef);\n    }\n    get width() {\n        const wrapperWidth = this.wrapper.nativeElement.offsetWidth;\n        const width = this.popupSettings.width || wrapperWidth;\n        const minWidth = isNaN(wrapperWidth) ? wrapperWidth : `${wrapperWidth}px`;\n        const maxWidth = isNaN(width) ? width : `${width}px`;\n        return { min: minWidth, max: maxWidth };\n    }\n    get height() {\n        const popupHeight = this.popupSettings.height;\n        return isPresent(popupHeight) ? `${popupHeight}px` : 'auto';\n    }\n    get appendTo() {\n        const { appendTo } = this.popupSettings;\n        if (!appendTo || appendTo === 'root') {\n            return undefined;\n        }\n        return appendTo === 'component' ? this.container : appendTo;\n    }\n    /**\n     * @hidden\n     */\n    get popupContainerClasses() {\n        const containerClasses = ['k-popup-dropdowntree'];\n        if (this.popupSettings.popupClass) {\n            containerClasses.push(this.popupSettings.popupClass);\n        }\n        return containerClasses;\n    }\n    /**\n     * @hidden\n     *\n     * Alias for `data`. Used for compatibility with the `DataBoundComponent` interface.\n     * Required for the data-binding directives.\n     */\n    set nodes(nodes) {\n        this.data = nodes;\n    }\n    get nodes() {\n        return this.data;\n    }\n    /**\n     * @hidden\n     *\n     * Alias for `fetchChildren`. Used for compatibility with the `DataBoundComponent` interface.\n     * Required for the data-binding directives\n     */\n    set children(callback) {\n        this.fetchChildren = callback;\n    }\n    get children() {\n        return this.fetchChildren;\n    }\n    /**\n     * @hidden\n     *\n     * Alias for `nodeExpand`. Used for compatibility with the `ExpandableComponent` interface.\n     * Required for the expand-directive.\n     */\n    get expand() {\n        return this.nodeExpand;\n    }\n    /**\n     * @hidden\n     *\n     * Alias for `nodeCollapse`. Used for compatibility with the `ExpandableComponent` interface.\n     * Required for the expand-directive.\n     */\n    get collapse() {\n        return this.nodeCollapse;\n    }\n    /**\n     * @hidden\n     *\n     * Alias for `isNodeExpanded`. Used for compatibility with the `ExpandableComponent` interface.\n     * Required for the expand-directive.\n     */\n    set isExpanded(callback) {\n        this.isNodeExpanded = callback;\n    }\n    get isExpanded() {\n        return this.isNodeExpanded;\n    }\n    /**\n     * @hidden\n     *\n     * Alias for `isNodeVisible`. Used for compatibility with the `DataBoundComponent` interface.\n     * The `DataBoundComponent` interface is used in the data-binding directives.\n     */\n    set isVisible(callback) {\n        this.isNodeVisible = callback;\n    }\n    get isVisible() {\n        return this.isNodeVisible;\n    }\n    get isTagFocused() {\n        return !this.isOpen && this.focusedTagIndex !== undefined;\n    }\n    get isTreeViewActive() {\n        return this.treeview && this.treeview.isActive;\n    }\n    get isWrapperActive() {\n        return document.activeElement === this.wrapper.nativeElement;\n    }\n    get isFilterActive() {\n        return this.filterInput && document.activeElement === this.filterInput.nativeElement;\n    }\n    get isCheckAllActive() {\n        return this.checkAllInput && document.activeElement === this.checkAllInput.nativeElement;\n    }\n    ngOnInit() {\n        this.renderer.removeAttribute(this.wrapper.nativeElement, 'tabindex');\n        this.renderer.setAttribute(this.wrapper.nativeElement, 'aria-expanded', String(this.isOpen));\n        this.subscriptions.push(this.localization\n            .changes.subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n            this.cdr.markForCheck();\n        }));\n        this.setComponentClasses();\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        this.destroyPopup();\n        this.unsubscribeEvents();\n    }\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes) {\n        if (anyChanged(['textField', 'valueField', 'valuePrimitive'], changes, false)) {\n            this.isHeterogeneous = this.valueField && isArray(this.valueField);\n            this.setState();\n        }\n        if (anyChanged(['valueDepth', 'value', 'dataItems'], changes, false)) {\n            if (changes.value && !changes.dataItems && !this.valuePrimitive) {\n                // Update the dataItems if the value is updated programmatically (non-primitive values only)\n                // In the primitive case, the client should update the dataItems as well\n                this.dataItems = this.value;\n            }\n            else {\n                // Re-map the dataItems because `valueDepth` is not yet available when the check directive parses the items\n                this.dataItems = this.dataItems.map((item, index) => (Object.assign(Object.assign({}, item), { key: valueFrom({ dataItem: item.dataItem, index: null, level: this.valueDepth[index] || 0 }, this.valueField) + '_' + (this.isHeterogeneous ? this.valueDepth[index] : 0), level: this.valueDepth[index] || 0 })));\n            }\n        }\n        if (anyChanged(['data', 'children', 'hasChildren', 'loadOnDemand', 'valueField'], changes, true) && !this.loadOnDemand) {\n            this.lookup.reset();\n            this.registerLookupItems(this.data);\n        }\n    }\n    /**\n     * @hidden\n     */\n    ngAfterContentChecked() {\n        this.verifySettings();\n    }\n    ngAfterContentInit() {\n        this.isContentInit = true;\n        // Still need to keep the call of 'registerLookupItems()' from ngAfterContentInit in the cases when the data is passed initially\n        // The call is execute here because we have to make sure it happens after all input properties are loaded (not the case in the data setter initially)\n        this.registerLookupItems(this.data);\n    }\n    /**\n     * @hidden\n     *\n     * Used by the kendo-floatinglabel component to determine if the floating label\n     * should be rendered inside the input when the component is not focused.\n     */\n    isEmpty() {\n        return !Boolean(this.placeholder) && (!isPresent(this.value) || this.value.length === 0);\n    }\n    /**\n     * Focuses the MultiSelectTree.\n     */\n    focus() {\n        if (!this.disabled) {\n            this.wrapper.nativeElement.focus();\n        }\n    }\n    /**\n     * Blurs the MultiSelectTree.\n     */\n    blur() {\n        if (!this.disabled) {\n            this.wrapper.nativeElement.blur();\n        }\n    }\n    /**\n     * Focuses a specific item of the MultiSelectTree based on a provided index in the format of `1_1`.\n     * The targeted item should be expanded in order for it to be focused.\n     * If null or invalid index is provided the focus will be set on the first item.\n     */\n    focusItemAt(index) {\n        if (this.treeview) {\n            const lookup = this.treeview.itemLookup(index);\n            const isItemDisabled = !isPresent(lookup) || this.treeview.isDisabled(lookup.item.dataItem, lookup.item.index);\n            if (!isItemDisabled) {\n                this.treeview.focus(index);\n            }\n        }\n    }\n    /**\n     * Resets the value of the MultiSelectTree.\n     * If you use the `reset` method to clear the value of the component,\n     * the model will not update automatically and the `valueChange` event will not be fired.\n     */\n    reset() {\n        this.value = [];\n        this.dataItems = [];\n        this.valueDepth = [];\n    }\n    /**\n     * Toggles the visibility of the popup\n     * ([see example]({% slug openstate_multiselecttree %})).\n     * If you use the `toggle` method to open or close the popup, the `open` and `close` events will not be fired.\n     *\n     * @param open - The state of the popup.\n     */\n    toggle(open) {\n        // The Promise is required to open the popup on load.\n        // Otherwise, the \"ViewContainerRef not found...\" error will be thrown.\n        Promise.resolve(null).then(() => {\n            const shouldOpen = isPresent(open) ? open : !isPresent(this.popupRef);\n            this.destroyPopup();\n            if (shouldOpen) {\n                this.createPopup();\n            }\n        });\n    }\n    /**\n     * @hidden\n     */\n    handleFocus(event) {\n        if (event.target !== this.wrapper.nativeElement) {\n            return;\n        }\n        event.stopImmediatePropagation();\n        if (!this.isFocused) {\n            this.isFocused = true;\n            if (hasObservers(this.onFocus)) {\n                this._zone.run(() => {\n                    this.onFocus.emit();\n                });\n            }\n            // Re-focus the treeview if `close` is prevented\n            if (this.isOpen && this.treeview) {\n                if (this.lastNodeOnFocus) {\n                    this.lastNodeOnFocus.setAttribute('tabindex', '0');\n                }\n                this.treeview.focus();\n            }\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleBlur(e) {\n        const relatedTarget = e && e.relatedTarget;\n        if (this.wrapper.nativeElement.contains(relatedTarget) ||\n            (this.isOpen && this.popupRef.popupElement.contains(relatedTarget))) {\n            return;\n        }\n        this.isFocused = false;\n        this.togglePopup(false);\n        if (hasObservers(this.onBlur) ||\n            isUntouched(this.wrapper.nativeElement)) {\n            this._zone.run(() => {\n                this.onBlur.emit();\n                this.onTouchedCallback();\n            });\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleNodeClick(node) {\n        if (!this.isFocused) {\n            // Re-focus the MultiSelectTree when popup close is prevented and a node is clicked\n            // On click the focus should be on the clicked element which is why we need to update the lastNodeOnFocus\n            const parent = node.originalEvent.target.parentElement.parentElement;\n            this.lastNodeOnFocus = parent;\n            this.focus();\n        }\n    }\n    /**\n     * @hidden\n     */\n    togglePopup(open) {\n        const isDisabled = this.disabled || this.readonly;\n        const sameState = this.isOpen === open;\n        this._zone.run(() => {\n            this.focusedTagIndex = undefined;\n        });\n        if (isDisabled || sameState) {\n            return;\n        }\n        const togglePrevented = this.triggerPopupEvents(open);\n        if (!togglePrevented) {\n            if (open) {\n                this.createPopup();\n            }\n            else {\n                this.destroyPopup();\n            }\n        }\n        else {\n            this.removeTreeViewFromTabOrder();\n        }\n    }\n    /**\n     * @hidden\n     */\n    messageFor(key) {\n        return this.localization.get(key);\n    }\n    /**\n     * @hidden\n     */\n    handleCheckedItemsChange(items) {\n        this.valueDepth = items.map(item => item.level);\n        this.lastAction = items.length > this.dataItems.length ? 'check' : 'uncheck';\n        this.dataItems = items.slice();\n        this.updateValue(this.dataItems);\n    }\n    /**\n     * @hidden\n     */\n    handleRemoveTag({ tag, index }) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        const eventArgs = new RemoveTagEvent(tag);\n        this.removeTag.emit(eventArgs);\n        if (eventArgs.isDefaultPrevented()) {\n            return;\n        }\n        // Remove tags based on their position index\n        if (tag instanceof Array) {\n            // Remove group tag\n            this.dataItems = this.dataItems.filter((_item, i) => i < this.showAfter || this.disabledIndices.has(i));\n            this.valueDepth = this.valueDepth.filter((_item, i) => i < this.showAfter || this.disabledIndices.has(i));\n        }\n        else {\n            // Remove single tag\n            const dataItem = this.dataItems[index];\n            const itemKey = dataItem.key;\n            const lookup = this.lookup.itemLookup(itemKey);\n            const pendingCheck = [lookup.item];\n            if (this.checkableSettings.checkChildren) {\n                fetchDescendentNodes(lookup)\n                    .forEach(lookup => pendingCheck.push(lookup.item));\n                pendingCheck.push(...this.removeParents(lookup.parent));\n            }\n            const keysToRemove = pendingCheck.map(item => item.key);\n            const valueDepthIndices = [];\n            this.dataItems = this.dataItems.filter((_item, i) => {\n                // We need to know the index position of the data item to be able to update the valueDepth array accordignly\n                // as each data item's position is corresponding to the same position in valueDepth\n                valueDepthIndices.push(i);\n                return !keysToRemove.includes(_item.key) || this.disabledIndices.has(i);\n            });\n            this.valueDepth = this.valueDepth.filter((_item, i) => valueDepthIndices.includes(i) || this.disabledIndices.has(i));\n        }\n        this.updateValue(this.dataItems);\n        if (!this.isFocused) {\n            this.focus();\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleTagMapperChange(showAfter) {\n        this.showAfter = parseNumber(showAfter);\n        this.setTags();\n    }\n    /**\n     * @hidden\n     */\n    clearAll(event) {\n        event.stopImmediatePropagation();\n        event.preventDefault();\n        this.focus();\n        this.value = this.value.filter((_item, index) => this.disabledIndices.has(index));\n        this.dataItems = this.dataItems.filter((_item, index) => this.disabledIndices.has(index));\n        this.valueDepth = this.valueDepth.filter((_depth, index) => this.disabledIndices.has(index));\n        this.emitValueChange(this.value);\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.value = value || [];\n        // Update the dataItems if the value is updated programmatically (non-primitive values only)\n        // In the primitive case, the client should update the dataItems as well\n        if (!this.valuePrimitive) {\n            this.dataItems = this.value;\n        }\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    handleFilterInputChange(input) {\n        this.filterChange.next(input.value);\n        this.allNodesHidden = this.nodes.every((node, index) => !this.isVisible(node, String(index)));\n    }\n    /**\n     * @hidden\n     */\n    get filterInputClasses() {\n        return `${this.size ? getSizeClass('input', this.size) : ''} ${this.fillMode ? 'k-input-' + this.fillMode : ''} ${this.rounded ? getRoundedClass(this.rounded) : ''}`;\n    }\n    /**\n     * @hidden\n     */\n    get checkAllCheckboxClasses() {\n        return `${this.size ? getSizeClass('checkbox', this.size) : ''}`;\n    }\n    /**\n     * @hidden\n     */\n    toggleCheckAll() {\n        this.checkAllInput.nativeElement.focus();\n        this.checkAllInput.nativeElement.click();\n    }\n    verifySettings() {\n        if (!isDevMode()) {\n            return;\n        }\n        if (!isPresent(this.valueField) || !isPresent(this.textField)) {\n            throw new Error(MultiSelectTreeMessages.textAndValue);\n        }\n        if (!isArray(this.value)) {\n            throw new Error(MultiSelectTreeMessages.array);\n        }\n        if (this.value.length > 0) {\n            if (this.valuePrimitive && this.value.some(item => isObject(item))) {\n                throw new Error(MultiSelectTreeMessages.primitive);\n            }\n            const isEveryDataItemObject = this.dataItems.every(item => isObject(item.dataItem));\n            if (this.valuePrimitive && !isArray(this.dataItems)) {\n                throw new Error(MultiSelectTreeMessages.dataItems);\n            }\n            if (this.valuePrimitive && !isEveryDataItemObject) {\n                throw new Error(MultiSelectTreeMessages.dataItems);\n            }\n            if (this.valuePrimitive && this.dataItems.length !== this.value.length) {\n                throw new Error(MultiSelectTreeMessages.dataItemsLength);\n            }\n            if (!this.valuePrimitive && !isObjectArray(this.value)) {\n                throw new Error(MultiSelectTreeMessages.object);\n            }\n            if ((isArray(this.valueField) || isArray(this.textField)) && !isArray(this.valueDepth)) {\n                throw new Error(MultiSelectTreeMessages.valueDepth);\n            }\n            if ((isArray(this.valueField) || isArray(this.textField)) && this.valueDepth.length === 0) {\n                throw new Error(MultiSelectTreeMessages.valueDepth);\n            }\n            if ((isArray(this.valueField) || isArray(this.textField)) && this.valueDepth.length !== this.value.length) {\n                throw new Error(MultiSelectTreeMessages.valueDepthLength);\n            }\n        }\n    }\n    emitValueChange(value) {\n        this.onChangeCallback(value);\n        this.valueChange.emit(value);\n    }\n    triggerPopupEvents(open) {\n        const eventArgs = new PreventableEvent();\n        if (open) {\n            this.open.emit(eventArgs);\n        }\n        else {\n            this.close.emit(eventArgs);\n        }\n        return eventArgs.isDefaultPrevented();\n    }\n    createPopup() {\n        const horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n        const anchorPosition = { horizontal: horizontalAlign, vertical: 'bottom' };\n        const popupPosition = { horizontal: horizontalAlign, vertical: 'top' };\n        this.popupRef = this.popupService.open({\n            anchor: this.wrapper,\n            appendTo: this.appendTo,\n            anchorAlign: anchorPosition,\n            content: this.popupTemplate,\n            popupAlign: popupPosition,\n            positionMode: 'absolute',\n            popupClass: this.popupContainerClasses\n        });\n        const popupWrapper = this.popupRef.popupElement;\n        const { min, max } = this.width;\n        popupWrapper.style.minWidth = min;\n        popupWrapper.style.width = max;\n        popupWrapper.style.height = this.height;\n        this.renderer.setAttribute(popupWrapper, 'dir', this.direction);\n        this.renderer.setAttribute(this.wrapper.nativeElement, 'aria-expanded', 'true');\n        this.popupRef.popupOpen.subscribe(() => {\n            this.cdr.detectChanges();\n            this.opened.emit();\n        });\n        this.popupRef.popupClose.subscribe(() => {\n            this.closed.emit();\n        });\n    }\n    destroyPopup() {\n        if (this.popupRef) {\n            this.popupRef.close();\n            this.popupRef = null;\n            this.renderer.setAttribute(this.wrapper.nativeElement, 'aria-expanded', 'false');\n            if (this.filter !== \"\") {\n                this.filter = \"\";\n                this.allNodesHidden = false;\n                if (hasObservers(this.filterChange)) {\n                    this._zone.run(() => {\n                        this.filterChange.emit(\"\");\n                    });\n                }\n            }\n        }\n    }\n    subscribeEvents() {\n        this.subscriptions.push(this.navigationService.open.subscribe((event) => {\n            event.originalEvent.preventDefault();\n            this.togglePopup(true);\n        }), this.navigationService.enter\n            .pipe(tap((event) => event.originalEvent.preventDefault()))\n            .subscribe(() => this.togglePopup(true)), merge(this.navigationService.close, this.navigationService.esc).subscribe((event) => {\n            event.originalEvent.preventDefault();\n            this.focus();\n            this.togglePopup(false);\n        }), this.navigationService.tab.subscribe(this.handleTabKey.bind(this)), this.navigationService.up.subscribe(this.handleUpKey.bind(this)), this.navigationService.down.subscribe(this.handleDownKey.bind(this)), this.navigationService.left\n            .pipe(filter(() => !this.isTreeViewActive))\n            .subscribe(this.direction === 'rtl' ? this.handleRightKey.bind(this) : this.handleLeftKey.bind(this)), this.navigationService.right\n            .pipe(filter(() => !this.isTreeViewActive))\n            .subscribe(this.direction === 'rtl' ? this.handleLeftKey.bind(this) : this.handleRightKey.bind(this)), this.navigationService.home.pipe(filter(() => !this.isOpen)).subscribe(this.handleHome.bind(this)), this.navigationService.end.pipe(filter(() => !this.isOpen)).subscribe(this.handleEnd.bind(this)), this.navigationService.backspace.pipe(filter(() => this.isTagFocused)).subscribe(this.handleBackspace.bind(this)), this.navigationService.delete.pipe(filter(() => this.isTagFocused)).subscribe(this.handleDelete.bind(this)));\n    }\n    subscribeFocusEvents() {\n        if (isDocumentAvailable()) {\n            this.handleFocus = this.handleFocus.bind(this);\n            this.handleDocumentBlur = this.handleDocumentBlur.bind(this);\n            this._zone.runOutsideAngular(() => {\n                const useCapture = true;\n                document.addEventListener('focus', this.handleFocus, useCapture);\n                document.addEventListener('blur', this.handleDocumentBlur, useCapture);\n            });\n        }\n    }\n    unSubscribeFocusEvents() {\n        if (isDocumentAvailable()) {\n            const useCapture = true;\n            document.removeEventListener('focus', this.handleFocus, useCapture);\n            document.removeEventListener('blur', this.handleDocumentBlur, useCapture);\n        }\n    }\n    handleDocumentBlur(event) {\n        if (event.target !== this.wrapper.nativeElement) {\n            return;\n        }\n        event.stopImmediatePropagation();\n        this.handleBlur(event);\n    }\n    handleTabKey() {\n        this.focus();\n        if (this.isOpen) {\n            this.treeview.blur();\n            this.removeTreeViewFromTabOrder();\n        }\n    }\n    handleUpKey(event) {\n        if (!this.treeview) {\n            return;\n        }\n        event.originalEvent.preventDefault();\n        // Prevent toggling the focus between the filterInput and the wrapper elements with `up` key\n        if (this.isWrapperActive) {\n            return;\n        }\n        const isFirstNodeActive = this.treeview['navigationService']['activeIndex'] === '0';\n        // Current focus is on the filter input => should focus the wrapper\n        if (this.filterable && this.isFilterActive) {\n            this.focus();\n            // Current focus is on the treeview first node => should focus the check all checkbox if enabled\n        }\n        else if (this.checkAll && !this.isCheckAllActive && isFirstNodeActive) {\n            this.checkAllInput.nativeElement.focus();\n            // Current focus is either on the check all checkbox or the treeview's first node\n            // => should focus either the filter input (if enabled) or the wrapper\n        }\n        else if (this.isCheckAllActive || isFirstNodeActive) {\n            if (this.filterable) {\n                this.filterInput.nativeElement.focus();\n            }\n            else {\n                this.focus();\n            }\n        }\n    }\n    handleDownKey(event) {\n        if (!this.treeview) {\n            return;\n        }\n        event.originalEvent.preventDefault();\n        // Current focus is on the wrapper => should focus the filter input\n        if (this.filterable && this.isWrapperActive) {\n            this.filterInput.nativeElement.focus();\n            // Current focus is on the wrapper/filter input => should focus check all checkbox if enabled\n        }\n        else if (this.checkAll && (this.isWrapperActive || this.isFilterActive)) {\n            this.checkAllInput.nativeElement.focus();\n            // Should focus the treeview if filterable and check all are disabled\n        }\n        else if (!this.treeview.isActive) {\n            this.treeview.focus();\n        }\n        this.focusedTagIndex = undefined;\n    }\n    handleRightKey(event) {\n        event.originalEvent.preventDefault();\n        const last = this.tags.length - 1;\n        if (this.focusedTagIndex === last) {\n            this.focusedTagIndex = undefined;\n        }\n        else if (this.focusedTagIndex < last) {\n            this.focusedTagIndex++;\n        }\n        else if (!this.focusedTagIndex) {\n            this.focusedTagIndex = 0;\n        }\n    }\n    handleLeftKey(event) {\n        event.originalEvent.preventDefault();\n        if (this.focusedTagIndex === undefined || this.focusedTagIndex < 0) {\n            this.focusedTagIndex = this.tags.length - 1;\n        }\n        else if (this.focusedTagIndex !== 0) {\n            this.focusedTagIndex--;\n        }\n    }\n    handleEnd(event) {\n        event.originalEvent.preventDefault();\n        this.focusedTagIndex = this.tags.length - 1;\n    }\n    handleHome(event) {\n        event.originalEvent.preventDefault();\n        this.focusedTagIndex = 0;\n    }\n    handleBackspace() {\n        if (this.focusedTagIndex !== undefined) {\n            this.handleDelete();\n        }\n        else {\n            const tag = this.tags[this.tags.length - 1];\n            const index = this.tags.length - 1;\n            this.handleRemoveTag({ tag, index });\n        }\n    }\n    handleDelete() {\n        const tag = this.tags[this.focusedTagIndex];\n        const index = this.focusedTagIndex;\n        this.handleRemoveTag({ tag, index });\n        if (this.focusedTagIndex === this.tags.length) {\n            this.focusedTagIndex = undefined;\n        }\n    }\n    unsubscribeEvents() {\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n        this.unSubscribeFocusEvents();\n    }\n    /**\n     * Remove the `TreeView` from the tab order, otherwise a focus loop between the page elements will occur\n     * and the user will not be able to tab to the rest of the browser elements\n     */\n    removeTreeViewFromTabOrder() {\n        const nodes = this.treeview.element.nativeElement.querySelectorAll('li');\n        nodes.forEach(item => {\n            if (item.getAttribute('tabindex') === '0') {\n                this.lastNodeOnFocus = item;\n                this.lastNodeOnFocus.setAttribute('tabindex', '-1');\n            }\n        });\n    }\n    setState() {\n        if (isPresent(this.dataItems) && isPresent(this.valueField)) {\n            this.setTags();\n            this.checkedItems = this.dataItems.slice();\n        }\n        this.cdr.markForCheck();\n    }\n    setTags() {\n        const source = this.dataItems.map(item => item.dataItem);\n        this.tags = this.tagMapper(source);\n        this.disabledIndices = this.disabledItemsMapper();\n    }\n    updateValue(value) {\n        const newValue = this.valuePrimitive ?\n            value.map(item => valueFrom(item, this.valueField)) :\n            value.map(item => item.dataItem);\n        this.value = newValue;\n        this.emitValueChange(this.value);\n    }\n    /**\n     * @hidden\n     *\n     * Determines which of the provided tags should be disabled and stores their position indices\n     */\n    disabledItemsMapper() {\n        return new Set(this.dataItems.reduce((indices, item, index) => {\n            if (this.itemDisabled(item.dataItem, item.index)) {\n                indices.push(index);\n            }\n            return indices;\n        }, []));\n    }\n    setComponentClasses() {\n        if (this.size !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getSizeClass('input', this.size));\n        }\n        if (this.rounded !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getRoundedClass(this.rounded));\n        }\n        if (this.fillMode !== 'none') {\n            this.renderer.addClass(this.wrapper.nativeElement, getFillModeClass('input', this.fillMode));\n        }\n    }\n    removeParents(parent) {\n        let currentParent = parent;\n        const nodes = [];\n        while (currentParent) {\n            nodes.push(currentParent.item);\n            currentParent = currentParent.parent;\n        }\n        return nodes;\n    }\n    /**\n     * Creates an internal map of the available tree items to be used as a reference\n     * to retrieve the item's children/parent and determine the checked sate\n     */\n    registerLookupItems(data, parentItem = null, levelIndex = 0) {\n        if (!isPresent(data) || data.length === 0) {\n            return;\n        }\n        const parentIndex = nodeIndex$1(parentItem);\n        const treeItems = data.map((node) => buildTreeItem(node, this.valueField, levelIndex));\n        if (isPresent(parentItem)) {\n            this.lookup.registerChildren(parentIndex, treeItems);\n        }\n        treeItems.forEach(item => {\n            this.lookup.registerItem(item, parentItem);\n            if (!this.loadOnDemand) {\n                this.registerChildLookupItems(item, levelIndex);\n            }\n        });\n    }\n    registerChildLookupItems(item, levelIndex) {\n        if (this.hasChildren(item.dataItem)) {\n            this.children(item.dataItem)\n                .subscribe(children => {\n                const index = this.isHeterogeneous ? levelIndex + 1 : 0;\n                this.registerLookupItems(children, item, index);\n            });\n        }\n    }\n}\nMultiSelectTreeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MultiSelectTreeComponent, deps: [{ token: i0.Injector }, { token: i0.ElementRef }, { token: i2.PopupService }, { token: i0.Renderer2 }, { token: NavigationService }, { token: i0.NgZone }, { token: i1.LocalizationService }, { token: i0.ChangeDetectorRef }, { token: MultiSelectTreeLookupService }, { token: TOUCH_ENABLED, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMultiSelectTreeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: MultiSelectTreeComponent, selector: \"kendo-multiselecttree\", inputs: { tabindex: \"tabindex\", size: \"size\", rounded: \"rounded\", fillMode: \"fillMode\", popupSettings: \"popupSettings\", checkableSettings: \"checkableSettings\", data: \"data\", value: \"value\", dataItems: \"dataItems\", textField: \"textField\", valueField: \"valueField\", valueDepth: \"valueDepth\", loading: \"loading\", placeholder: \"placeholder\", listHeight: \"listHeight\", disabled: \"disabled\", readonly: \"readonly\", valuePrimitive: \"valuePrimitive\", loadOnDemand: \"loadOnDemand\", focusableId: \"focusableId\", clearButton: \"clearButton\", filterable: \"filterable\", checkAll: \"checkAll\", hasChildren: \"hasChildren\", fetchChildren: \"fetchChildren\", isNodeExpanded: \"isNodeExpanded\", isNodeVisible: \"isNodeVisible\", itemDisabled: \"itemDisabled\", tagMapper: \"tagMapper\" }, outputs: { onFocus: \"focus\", onBlur: \"blur\", open: \"open\", opened: \"opened\", close: \"close\", closed: \"closed\", nodeExpand: \"nodeExpand\", nodeCollapse: \"nodeCollapse\", valueChange: \"valueChange\", removeTag: \"removeTag\", filterChange: \"filterChange\" }, host: { listeners: { \"click\": \"handleClick()\", \"keydown\": \"handleKeydown($event)\" }, properties: { \"class.k-multiselect-tree\": \"this.hostClasses\", \"class.k-input\": \"this.hostClasses\", \"class.k-disabled\": \"this.isDisabled\", \"attr.aria-disabled\": \"this.isDisabled\", \"attr.aria-controls\": \"this.hostAriaControls\", \"attr.aria-autocomplete\": \"this.hostAriaAutocomplete\", \"class.k-loading\": \"this.isLoading\", \"attr.aria-invalid\": \"this.hostAriaInvalid\", \"attr.aria-busy\": \"this.isBusy\", \"attr.id\": \"this.id\", \"attr.dir\": \"this.direction\", \"attr.tabindex\": \"this.hostTabIndex\", \"attr.role\": \"this.role\", \"attr.aria-expanded\": \"this.isAriaExpanded\", \"attr.aria-haspopup\": \"this.ariaHasPopup\", \"attr.readonly\": \"this.isReadonly\", \"attr.aria-describedby\": \"this.ariaDescribedBy\", \"attr.aria-activedescendant\": \"this.ariaActiveDescendant\" } }, providers: [\n        LocalizationService,\n        NavigationService,\n        DataService,\n        DisabledItemsService,\n        SelectionService,\n        MultiSelectTreeLookupService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.multiselecttree'\n        },\n        {\n            multi: true,\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => MultiSelectTreeComponent)\n        },\n        {\n            provide: DataBoundComponent,\n            useExisting: forwardRef(() => MultiSelectTreeComponent)\n        },\n        {\n            provide: ExpandableComponent,\n            useExisting: forwardRef(() => MultiSelectTreeComponent)\n        },\n        {\n            provide: KendoInput,\n            useExisting: forwardRef(() => MultiSelectTreeComponent)\n        }\n    ], queries: [{ propertyName: \"headerTemplate\", first: true, predicate: HeaderTemplateDirective, descendants: true }, { propertyName: \"footerTemplate\", first: true, predicate: FooterTemplateDirective, descendants: true }, { propertyName: \"nodeTemplate\", first: true, predicate: NodeTemplateDirective, descendants: true }, { propertyName: \"noDataTemplate\", first: true, predicate: NoDataTemplateDirective, descendants: true }, { propertyName: \"tagTemplate\", first: true, predicate: TagTemplateDirective, descendants: true }, { propertyName: \"groupTagTemplate\", first: true, predicate: GroupTagTemplateDirective, descendants: true }], viewQueries: [{ propertyName: \"popupTemplate\", first: true, predicate: [\"popupTemplate\"], descendants: true, static: true }, { propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true, read: ViewContainerRef, static: true }, { propertyName: \"treeview\", first: true, predicate: [\"treeview\"], descendants: true }, { propertyName: \"filterInput\", first: true, predicate: [\"filterInput\"], descendants: true }, { propertyName: \"checkAllInput\", first: true, predicate: [\"checkAllInput\"], descendants: true }], exportAs: [\"kendoMultiSelectTree\"], usesOnChanges: true, ngImport: i0, template: `\n        <ng-container kendoMultiSelectTreeLocalizedMessages\n            i18n-noDataText=\"kendo.multiselecttree.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.multiselecttree.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n\n            i18n-checkAllText=\"kendo.multiselecttree.checkAllText|The text displayed for the check-all checkbox\"\n            checkAllText=\"Check all\"\n        >\n        </ng-container>\n        <kendo-taglist\n            [size]=\"size\"\n            [rounded]=\"rounded\"\n            [fillMode]=\"fillMode\"\n            [id]=\"tagListId\"\n            [tags]=\"tags\"\n            [focused]=\"focusedTagIndex\"\n            [textField]=\"textField\"\n            [valueField]=\"valueField\"\n            [valueDepth]=\"valueDepth\"\n            [disabled]=\"disabled\"\n            [tagPrefix]=\"tagPrefix\"\n            [template]=\"tagTemplate\"\n            [groupTemplate]=\"groupTagTemplate\"\n            [disabledIndices]=\"disabledIndices\"\n            (removeTag)=\"handleRemoveTag($event)\"\n        >\n            <span *ngIf=\"!tags || !tags.length\"\n                class=\"k-input-inner k-readonly\"\n            >\n                <span class=\"k-input-value-text\">{{ placeholder }}</span>\n            </span>\n        </kendo-taglist>\n        <span\n            *ngIf=\"!disabled && !loading && !readonly && clearButton && tags?.length\"\n            class=\"k-clear-value\"\n            [attr.title]=\"messageFor('clearTitle')\"\n            role=\"button\"\n            tabindex=\"-1\"\n            (click)=\"clearAll($event)\"\n        >\n            <span class=\"k-icon k-i-x\"></span>\n        </span>\n        <span\n            *ngIf=\"loading\"\n            class=\"k-icon k-i-loading k-input-loading-icon\"\n        >\n        </span>\n        <ng-template #popupTemplate>\n            <span\n                *ngIf=\"filterable\"\n                class=\"k-list-filter\"\n            >\n                <span\n                    class=\"k-textbox k-input\"\n                    [ngClass]=\"filterInputClasses\"\n                >\n                    <span class=\"k-input-prefix\">\n                        <span class=\"k-input-icon k-icon k-i-search\"></span>\n                    </span>\n                    <input\n                        #filterInput\n                        (input)=\"handleFilterInputChange($event.target)\"\n                        [filterInput]=\"filterable && !touchEnabled\"\n                        (keydown)=\"handleKeydown($event)\"\n                        [(ngModel)]=\"filter\"\n                        class=\"k-input-inner\"\n                        role=\"textbox\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                        tabindex=\"0\"\n                        aria-disabled=\"false\"\n                        aria-readonly=\"false\"\n                        [kendoEventsOutsideAngular]=\"{\n                            blur: handleBlur\n                        }\"\n                        [scope]=\"this\"\n                    >\n                </span>\n            </span>\n            <!--header template-->\n            <ng-template\n                *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate?.templateRef\n                }\">\n            </ng-template>\n            <div *ngIf=\"checkAll\" class=\"k-check-all\">\n                <input\n                    #checkAllInput\n                    [checkAll]=\"!filterable && !touchEnabled\"\n                    type=\"checkbox\"\n                    class=\"k-checkbox\"\n                    [ngClass]=\"checkAllCheckboxClasses\"\n                    role=\"checkbox\"\n                    tabindex=\"0\"\n                    aria-disabled=\"false\"\n                    aria-readonly=\"false\"\n                    [treeview]=\"treeview\"\n                    [checkedItems]=\"checkedItems\"\n                    [valueField]=\"valueField\"\n                    [lastAction]=\"lastAction\"\n                    (checkedItemsChange)=\"handleCheckedItemsChange($event)\"\n                    (keydown)=\"handleKeydown($event)\"\n                    [kendoEventsOutsideAngular]=\"{\n                        blur: handleBlur\n                    }\"\n                    [scope]=\"this\"\n                >\n                <span\n                    class=\"k-checkbox-label\"\n                    (click)=\"toggleCheckAll()\"\n                    (mousedown)=\"$event.preventDefault()\"\n                >\n                    {{ messageFor('checkAllText') }}\n                </span>\n            </div>\n            <kendo-treeview\n                #treeview\n                [size]=\"size\"\n                [nodes]=\"data\"\n                [style.maxHeight.px]=\"listHeight\"\n                [animate]=\"false\"\n                kendoMultiSelectTreeCheckable\n                [isHeterogeneous]=\"isHeterogeneous\"\n                [checkable]=\"checkableSettings\"\n                [checkedItems]=\"checkedItems\"\n                [valueField]=\"valueField\"\n                [textField]=\"textField\"\n                [children]=\"children\"\n                [hasChildren]=\"hasChildren\"\n                [isExpanded]=\"isNodeExpanded\"\n                [isDisabled]=\"itemDisabled\"\n                [nodeTemplate]=\"nodeTemplate\"\n                [loadOnDemand]=\"loadOnDemand\"\n                [filter]=\"filter\"\n                [isVisible]=\"isNodeVisible\"\n                (keydown)=\"handleKeydown($event)\"\n                (nodeClick)=\"handleNodeClick($event)\"\n                (expand)=\"nodeExpand.emit($event)\"\n                (collapse)=\"nodeCollapse.emit($event)\"\n                (checkedItemsChange)=\"handleCheckedItemsChange($event)\"\n                [kendoEventsOutsideAngular]=\"{\n                    focusout: handleBlur\n                }\"\n                [scope]=\"this\"\n            >\n            </kendo-treeview>\n            <!--footer template-->\n            <ng-template\n                *ngIf=\"footerTemplate\"\n                [templateContext]=\"{\n                    templateRef: footerTemplate?.templateRef\n                }\">\n            </ng-template>\n            <!--no-data template-->\n            <div class=\"k-no-data\" *ngIf=\"!data || data?.length === 0 || allNodesHidden\">\n                <ng-template [ngIf]=\"noDataTemplate\"\n                    [templateContext]=\"{\n                        templateRef: noDataTemplate?.templateRef\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!noDataTemplate\">\n                    <div>{{ messageFor('noDataText') }}</div>\n                </ng-template>\n            </div>\n        </ng-template>\n        <ng-container #container></ng-container>\n    `, isInline: true, components: [{ type: TagListComponent, selector: \"kendo-taglist\", inputs: [\"tags\", \"textField\", \"valueField\", \"valueDepth\", \"focused\", \"template\", \"groupTemplate\", \"disabled\", \"tagPrefix\", \"id\", \"size\", \"rounded\", \"fillMode\", \"disabledIndices\"], outputs: [\"removeTag\"] }, { type: i1$1.TreeViewComponent, selector: \"kendo-treeview\", inputs: [\"filterInputPlaceholder\", \"expandDisabledNodes\", \"animate\", \"nodeTemplate\", \"loadMoreButtonTemplate\", \"trackBy\", \"nodes\", \"textField\", \"hasChildren\", \"isChecked\", \"isDisabled\", \"isExpanded\", \"isSelected\", \"isVisible\", \"navigable\", \"children\", \"loadOnDemand\", \"filterable\", \"filter\", \"size\", \"disableParentNodesOnly\"], outputs: [\"childrenLoaded\", \"blur\", \"focus\", \"expand\", \"collapse\", \"nodeDragStart\", \"nodeDrag\", \"filterStateChange\", \"nodeDrop\", \"nodeDragEnd\", \"addItem\", \"removeItem\", \"checkedChange\", \"selectionChange\", \"filterChange\", \"nodeClick\", \"nodeDblClick\"], exportAs: [\"kendoTreeView\"] }], directives: [{ type: LocalizedMessagesDirective, selector: \"\\n    [kendoDropDownListLocalizedMessages],\\n    [kendoDropDownTreeLocalizedMessages],\\n    [kendoComboBoxLocalizedMessages],\\n    [kendoMultiColumnComboBoxLocalizedMessages],\\n    [kendoAutoCompleteLocalizedMessages],\\n    [kendoMultiSelectLocalizedMessages],\\n    [kendoMultiSelectTreeLocalizedMessages]\\n  \" }, { type: i11.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i11.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i12.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: FilterInputDirective, selector: \"[filterInput]\", inputs: [\"filterInput\"] }, { type: i12.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i12.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i9.EventsOutsideAngularDirective, selector: \"[kendoEventsOutsideAngular]\", inputs: [\"kendoEventsOutsideAngular\", \"scope\"] }, { type: TemplateContextDirective, selector: \"[templateContext]\", inputs: [\"templateContext\"] }, { type: CheckAllDirective, selector: \"[checkAll]\", inputs: [\"lastAction\", \"treeview\", \"checkedItems\", \"valueField\", \"checkAll\"], outputs: [\"checkedItemsChange\"] }, { type: CheckDirective, selector: \"[kendoMultiSelectTreeCheckable]\", inputs: [\"checkable\", \"valueField\", \"checkedItems\"], outputs: [\"checkedItemsChange\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MultiSelectTreeComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoMultiSelectTree',\n                    providers: [\n                        LocalizationService,\n                        NavigationService,\n                        DataService,\n                        DisabledItemsService,\n                        SelectionService,\n                        MultiSelectTreeLookupService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.multiselecttree'\n                        },\n                        {\n                            multi: true,\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => MultiSelectTreeComponent)\n                        },\n                        {\n                            provide: DataBoundComponent,\n                            useExisting: forwardRef(() => MultiSelectTreeComponent)\n                        },\n                        {\n                            provide: ExpandableComponent,\n                            useExisting: forwardRef(() => MultiSelectTreeComponent)\n                        },\n                        {\n                            provide: KendoInput,\n                            useExisting: forwardRef(() => MultiSelectTreeComponent)\n                        }\n                    ],\n                    selector: 'kendo-multiselecttree',\n                    template: `\n        <ng-container kendoMultiSelectTreeLocalizedMessages\n            i18n-noDataText=\"kendo.multiselecttree.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.multiselecttree.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n\n            i18n-checkAllText=\"kendo.multiselecttree.checkAllText|The text displayed for the check-all checkbox\"\n            checkAllText=\"Check all\"\n        >\n        </ng-container>\n        <kendo-taglist\n            [size]=\"size\"\n            [rounded]=\"rounded\"\n            [fillMode]=\"fillMode\"\n            [id]=\"tagListId\"\n            [tags]=\"tags\"\n            [focused]=\"focusedTagIndex\"\n            [textField]=\"textField\"\n            [valueField]=\"valueField\"\n            [valueDepth]=\"valueDepth\"\n            [disabled]=\"disabled\"\n            [tagPrefix]=\"tagPrefix\"\n            [template]=\"tagTemplate\"\n            [groupTemplate]=\"groupTagTemplate\"\n            [disabledIndices]=\"disabledIndices\"\n            (removeTag)=\"handleRemoveTag($event)\"\n        >\n            <span *ngIf=\"!tags || !tags.length\"\n                class=\"k-input-inner k-readonly\"\n            >\n                <span class=\"k-input-value-text\">{{ placeholder }}</span>\n            </span>\n        </kendo-taglist>\n        <span\n            *ngIf=\"!disabled && !loading && !readonly && clearButton && tags?.length\"\n            class=\"k-clear-value\"\n            [attr.title]=\"messageFor('clearTitle')\"\n            role=\"button\"\n            tabindex=\"-1\"\n            (click)=\"clearAll($event)\"\n        >\n            <span class=\"k-icon k-i-x\"></span>\n        </span>\n        <span\n            *ngIf=\"loading\"\n            class=\"k-icon k-i-loading k-input-loading-icon\"\n        >\n        </span>\n        <ng-template #popupTemplate>\n            <span\n                *ngIf=\"filterable\"\n                class=\"k-list-filter\"\n            >\n                <span\n                    class=\"k-textbox k-input\"\n                    [ngClass]=\"filterInputClasses\"\n                >\n                    <span class=\"k-input-prefix\">\n                        <span class=\"k-input-icon k-icon k-i-search\"></span>\n                    </span>\n                    <input\n                        #filterInput\n                        (input)=\"handleFilterInputChange($event.target)\"\n                        [filterInput]=\"filterable && !touchEnabled\"\n                        (keydown)=\"handleKeydown($event)\"\n                        [(ngModel)]=\"filter\"\n                        class=\"k-input-inner\"\n                        role=\"textbox\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                        tabindex=\"0\"\n                        aria-disabled=\"false\"\n                        aria-readonly=\"false\"\n                        [kendoEventsOutsideAngular]=\"{\n                            blur: handleBlur\n                        }\"\n                        [scope]=\"this\"\n                    >\n                </span>\n            </span>\n            <!--header template-->\n            <ng-template\n                *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate?.templateRef\n                }\">\n            </ng-template>\n            <div *ngIf=\"checkAll\" class=\"k-check-all\">\n                <input\n                    #checkAllInput\n                    [checkAll]=\"!filterable && !touchEnabled\"\n                    type=\"checkbox\"\n                    class=\"k-checkbox\"\n                    [ngClass]=\"checkAllCheckboxClasses\"\n                    role=\"checkbox\"\n                    tabindex=\"0\"\n                    aria-disabled=\"false\"\n                    aria-readonly=\"false\"\n                    [treeview]=\"treeview\"\n                    [checkedItems]=\"checkedItems\"\n                    [valueField]=\"valueField\"\n                    [lastAction]=\"lastAction\"\n                    (checkedItemsChange)=\"handleCheckedItemsChange($event)\"\n                    (keydown)=\"handleKeydown($event)\"\n                    [kendoEventsOutsideAngular]=\"{\n                        blur: handleBlur\n                    }\"\n                    [scope]=\"this\"\n                >\n                <span\n                    class=\"k-checkbox-label\"\n                    (click)=\"toggleCheckAll()\"\n                    (mousedown)=\"$event.preventDefault()\"\n                >\n                    {{ messageFor('checkAllText') }}\n                </span>\n            </div>\n            <kendo-treeview\n                #treeview\n                [size]=\"size\"\n                [nodes]=\"data\"\n                [style.maxHeight.px]=\"listHeight\"\n                [animate]=\"false\"\n                kendoMultiSelectTreeCheckable\n                [isHeterogeneous]=\"isHeterogeneous\"\n                [checkable]=\"checkableSettings\"\n                [checkedItems]=\"checkedItems\"\n                [valueField]=\"valueField\"\n                [textField]=\"textField\"\n                [children]=\"children\"\n                [hasChildren]=\"hasChildren\"\n                [isExpanded]=\"isNodeExpanded\"\n                [isDisabled]=\"itemDisabled\"\n                [nodeTemplate]=\"nodeTemplate\"\n                [loadOnDemand]=\"loadOnDemand\"\n                [filter]=\"filter\"\n                [isVisible]=\"isNodeVisible\"\n                (keydown)=\"handleKeydown($event)\"\n                (nodeClick)=\"handleNodeClick($event)\"\n                (expand)=\"nodeExpand.emit($event)\"\n                (collapse)=\"nodeCollapse.emit($event)\"\n                (checkedItemsChange)=\"handleCheckedItemsChange($event)\"\n                [kendoEventsOutsideAngular]=\"{\n                    focusout: handleBlur\n                }\"\n                [scope]=\"this\"\n            >\n            </kendo-treeview>\n            <!--footer template-->\n            <ng-template\n                *ngIf=\"footerTemplate\"\n                [templateContext]=\"{\n                    templateRef: footerTemplate?.templateRef\n                }\">\n            </ng-template>\n            <!--no-data template-->\n            <div class=\"k-no-data\" *ngIf=\"!data || data?.length === 0 || allNodesHidden\">\n                <ng-template [ngIf]=\"noDataTemplate\"\n                    [templateContext]=\"{\n                        templateRef: noDataTemplate?.templateRef\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!noDataTemplate\">\n                    <div>{{ messageFor('noDataText') }}</div>\n                </ng-template>\n            </div>\n        </ng-template>\n        <ng-container #container></ng-container>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i0.ElementRef }, { type: i2.PopupService }, { type: i0.Renderer2 }, { type: NavigationService }, { type: i0.NgZone }, { type: i1.LocalizationService }, { type: i0.ChangeDetectorRef }, { type: MultiSelectTreeLookupService }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TOUCH_ENABLED]\n                }] }]; }, propDecorators: { hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-multiselect-tree']\n            }, {\n                type: HostBinding,\n                args: ['class.k-input']\n            }], isDisabled: [{\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }, {\n                type: HostBinding,\n                args: ['attr.aria-disabled']\n            }], hostAriaControls: [{\n                type: HostBinding,\n                args: ['attr.aria-controls']\n            }], hostAriaAutocomplete: [{\n                type: HostBinding,\n                args: ['attr.aria-autocomplete']\n            }], isLoading: [{\n                type: HostBinding,\n                args: ['class.k-loading']\n            }], hostAriaInvalid: [{\n                type: HostBinding,\n                args: ['attr.aria-invalid']\n            }], isBusy: [{\n                type: HostBinding,\n                args: ['attr.aria-busy']\n            }], id: [{\n                type: HostBinding,\n                args: ['attr.id']\n            }], direction: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], hostTabIndex: [{\n                type: HostBinding,\n                args: ['attr.tabindex']\n            }], role: [{\n                type: HostBinding,\n                args: ['attr.role']\n            }], isAriaExpanded: [{\n                type: HostBinding,\n                args: ['attr.aria-expanded']\n            }], ariaHasPopup: [{\n                type: HostBinding,\n                args: ['attr.aria-haspopup']\n            }], isReadonly: [{\n                type: HostBinding,\n                args: ['attr.readonly']\n            }], ariaDescribedBy: [{\n                type: HostBinding,\n                args: ['attr.aria-describedby']\n            }], ariaActiveDescendant: [{\n                type: HostBinding,\n                args: ['attr.aria-activedescendant']\n            }], handleClick: [{\n                type: HostListener,\n                args: ['click']\n            }], handleKeydown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }], headerTemplate: [{\n                type: ContentChild,\n                args: [HeaderTemplateDirective, { static: false }]\n            }], footerTemplate: [{\n                type: ContentChild,\n                args: [FooterTemplateDirective, { static: false }]\n            }], nodeTemplate: [{\n                type: ContentChild,\n                args: [NodeTemplateDirective, { static: false }]\n            }], noDataTemplate: [{\n                type: ContentChild,\n                args: [NoDataTemplateDirective, { static: false }]\n            }], tagTemplate: [{\n                type: ContentChild,\n                args: [TagTemplateDirective, { static: false }]\n            }], groupTagTemplate: [{\n                type: ContentChild,\n                args: [GroupTagTemplateDirective, { static: false }]\n            }], popupTemplate: [{\n                type: ViewChild,\n                args: ['popupTemplate', { static: true }]\n            }], container: [{\n                type: ViewChild,\n                args: ['container', { read: ViewContainerRef, static: true }]\n            }], treeview: [{\n                type: ViewChild,\n                args: ['treeview', { static: false }]\n            }], filterInput: [{\n                type: ViewChild,\n                args: ['filterInput', { static: false }]\n            }], checkAllInput: [{\n                type: ViewChild,\n                args: ['checkAllInput', { static: false }]\n            }], tabindex: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], rounded: [{\n                type: Input\n            }], fillMode: [{\n                type: Input\n            }], popupSettings: [{\n                type: Input\n            }], checkableSettings: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], dataItems: [{\n                type: Input\n            }], textField: [{\n                type: Input\n            }], valueField: [{\n                type: Input\n            }], valueDepth: [{\n                type: Input\n            }], loading: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], listHeight: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], valuePrimitive: [{\n                type: Input\n            }], loadOnDemand: [{\n                type: Input\n            }], focusableId: [{\n                type: Input\n            }], clearButton: [{\n                type: Input\n            }], filterable: [{\n                type: Input\n            }], checkAll: [{\n                type: Input\n            }], hasChildren: [{\n                type: Input\n            }], fetchChildren: [{\n                type: Input\n            }], isNodeExpanded: [{\n                type: Input\n            }], isNodeVisible: [{\n                type: Input\n            }], itemDisabled: [{\n                type: Input\n            }], tagMapper: [{\n                type: Input\n            }], onFocus: [{\n                type: Output,\n                args: ['focus']\n            }], onBlur: [{\n                type: Output,\n                args: ['blur']\n            }], open: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }], closed: [{\n                type: Output\n            }], nodeExpand: [{\n                type: Output\n            }], nodeCollapse: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }], removeTag: [{\n                type: Output\n            }], filterChange: [{\n                type: Output\n            }] } });\n\n/**\n * A directive which encapsulates the retrieval of the child nodes when flat data is provided.\n */\nclass DropDownTreeFlatBindingDirective extends FlatDataBindingDirective {\n    constructor(dropDownTree) {\n        super(dropDownTree);\n        this.dropDownTree = dropDownTree;\n    }\n    /**\n     * @hidden\n     */\n    set filter(term) {\n        super.filter = term;\n    }\n    ngOnChanges(changes) {\n        if (isChanged('nodes', changes, false)) {\n            this.dropDownTree.nodes = changes.nodes.currentValue;\n            super.nodes = changes.nodes.currentValue;\n        }\n        super.ngOnChanges(changes);\n    }\n}\nDropDownTreeFlatBindingDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownTreeFlatBindingDirective, deps: [{ token: i1$1.DataBoundComponent }], target: i0.ɵɵFactoryTarget.Directive });\nDropDownTreeFlatBindingDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DropDownTreeFlatBindingDirective, selector: \"[kendoDropDownTreeFlatBinding]\", inputs: { nodes: [\"kendoDropDownTreeFlatBinding\", \"nodes\"], idField: [\"valueField\", \"idField\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownTreeFlatBindingDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDropDownTreeFlatBinding]'\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.DataBoundComponent }]; }, propDecorators: { nodes: [{\n                type: Input,\n                args: ['kendoDropDownTreeFlatBinding']\n            }], idField: [{\n                type: Input,\n                args: ['valueField']\n            }] } });\n\nconst INDEX_SEPARATOR = '_';\nconst nodeIndex = (index = '', parentIndex = '') => {\n    return `${parentIndex}${parentIndex ? INDEX_SEPARATOR : ''}${index}`;\n};\nconst isArrayWithAtLeastOneItem = v => v && Array.isArray(v) && v.length !== 0;\nconst mapToWrappers = (currentLevelNodes, childrenField, parent = null, parentIndex = '') => {\n    if (!isArrayWithAtLeastOneItem(currentLevelNodes)) {\n        return [];\n    }\n    return currentLevelNodes.map((node, idx) => {\n        const index = nodeIndex(idx.toString(), parentIndex);\n        const wrapper = {\n            dataItem: node,\n            index,\n            parent,\n            visible: true\n        };\n        wrapper.children = mapToWrappers(getter$1(childrenField)(node), childrenField, wrapper, index);\n        return wrapper;\n    });\n};\n/**\n * A directive which encapsulates the retrieval of the child nodes when hierarchical data is provided.\n */\nclass DropDownTreeHierarchyBindingDirective extends HierarchyBindingDirective {\n    constructor(dropDownTree) {\n        super(dropDownTree);\n        this.dropDownTree = dropDownTree;\n    }\n    /**\n     * @hidden\n     */\n    set filter(term) {\n        super.filter = term;\n    }\n    ngOnChanges(changes) {\n        if (isChanged('nodes', changes, false)) {\n            this.dropDownTree.nodes = changes.nodes.currentValue;\n            super.nodes = changes.nodes.currentValue;\n        }\n        super.ngOnChanges(changes);\n    }\n}\nDropDownTreeHierarchyBindingDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownTreeHierarchyBindingDirective, deps: [{ token: i1$1.DataBoundComponent }], target: i0.ɵɵFactoryTarget.Directive });\nDropDownTreeHierarchyBindingDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DropDownTreeHierarchyBindingDirective, selector: \"[kendoDropDownTreeHierarchyBinding]\", inputs: { nodes: [\"kendoDropDownTreeHierarchyBinding\", \"nodes\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownTreeHierarchyBindingDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDropDownTreeHierarchyBinding]'\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.DataBoundComponent }]; }, propDecorators: { nodes: [{\n                type: Input,\n                args: ['kendoDropDownTreeHierarchyBinding']\n            }] } });\n\n/**\n * A directive which encapsulates the retrieval of the child nodes when flat data is provided.\n */\nclass MultiSelectTreeFlatBindingDirective extends FlatDataBindingDirective {\n    constructor(multiSelectTree) {\n        super(multiSelectTree);\n        this.multiSelectTree = multiSelectTree;\n    }\n    /**\n     * @hidden\n     */\n    set filter(term) {\n        super.filter = term;\n    }\n    ngOnChanges(changes) {\n        if (isChanged('nodes', changes, false)) {\n            this.multiSelectTree.nodes = changes.nodes.currentValue;\n            super.nodes = changes.nodes.currentValue;\n        }\n        super.ngOnChanges(changes);\n    }\n}\nMultiSelectTreeFlatBindingDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MultiSelectTreeFlatBindingDirective, deps: [{ token: i1$1.DataBoundComponent }], target: i0.ɵɵFactoryTarget.Directive });\nMultiSelectTreeFlatBindingDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: MultiSelectTreeFlatBindingDirective, selector: \"[kendoMultiSelectTreeFlatBinding]\", inputs: { nodes: [\"kendoMultiSelectTreeFlatBinding\", \"nodes\"], idField: [\"valueField\", \"idField\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MultiSelectTreeFlatBindingDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoMultiSelectTreeFlatBinding]'\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.DataBoundComponent }]; }, propDecorators: { nodes: [{\n                type: Input,\n                args: ['kendoMultiSelectTreeFlatBinding']\n            }], idField: [{\n                type: Input,\n                args: ['valueField']\n            }] } });\n\n/**\n * A directive which encapsulates the retrieval of the child nodes when hierarchical data is provided.\n */\nclass MultiSelectTreeHierarchyBindingDirective extends HierarchyBindingDirective {\n    constructor(multiSelectTree) {\n        super(multiSelectTree);\n        this.multiSelectTree = multiSelectTree;\n    }\n    /**\n     * @hidden\n     */\n    set filter(term) {\n        super.filter = term;\n    }\n    ngOnChanges(changes) {\n        if (isChanged('nodes', changes, false)) {\n            this.multiSelectTree.nodes = changes.nodes.currentValue;\n            super.nodes = changes.nodes.currentValue;\n        }\n        super.ngOnChanges(changes);\n    }\n}\nMultiSelectTreeHierarchyBindingDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MultiSelectTreeHierarchyBindingDirective, deps: [{ token: i1$1.DataBoundComponent }], target: i0.ɵɵFactoryTarget.Directive });\nMultiSelectTreeHierarchyBindingDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: MultiSelectTreeHierarchyBindingDirective, selector: \"[kendoMultiSelectTreeHierarchyBinding]\", inputs: { nodes: [\"kendoMultiSelectTreeHierarchyBinding\", \"nodes\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MultiSelectTreeHierarchyBindingDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoMultiSelectTreeHierarchyBinding]'\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.DataBoundComponent }]; }, propDecorators: { nodes: [{\n                type: Input,\n                args: ['kendoMultiSelectTreeHierarchyBinding']\n            }] } });\n\n/**\n * A directive which manages the expanded state of the popup TreeView.\n */\nclass DropDownTreesExpandDirective extends ExpandDirective {\n    constructor(dropDownTree) {\n        super(dropDownTree);\n        this.dropDownTree = dropDownTree;\n    }\n    /**\n     * @hidden\n     *\n     * Ensures a user-defined `isNodeExpanded` callback will not be overriden by the default directive setup.\n     * Implemented as a value setter in the base directive, this just overrides the input name.\n     */\n    set isExpanded(value) {\n        this.dropDownTree.isExpanded = value;\n    }\n    ;\n}\nDropDownTreesExpandDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownTreesExpandDirective, deps: [{ token: i1$1.ExpandableComponent }], target: i0.ɵɵFactoryTarget.Directive });\nDropDownTreesExpandDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: DropDownTreesExpandDirective, selector: \"[kendoDropDownTreeExpandable], [kendoMultiSelectTreeExpandable]\", inputs: { isExpanded: [\"isNodeExpanded\", \"isExpanded\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownTreesExpandDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDropDownTreeExpandable], [kendoMultiSelectTreeExpandable]'\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.ExpandableComponent }]; }, propDecorators: { isExpanded: [{\n                type: Input,\n                args: ['isNodeExpanded']\n            }] } });\n\n/**\n * Custom component messages override default component messages\n * ([see example]({% slug rtl_dropdowns %}#toc-messages)).\n */\nclass CustomMessagesComponent extends Messages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nCustomMessagesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CustomMessagesComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nCustomMessagesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: CustomMessagesComponent, selector: \"kendo-dropdownlist-messages,kendo-combobox-messages,kendo-multicolumncombobox-messages,kendo-autocomplete-messages,kendo-multiselect-messages,kendo-dropdowntree-messages,kendo-multiselecttree-messages\", providers: [\n        {\n            provide: Messages,\n            useExisting: forwardRef(() => CustomMessagesComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: CustomMessagesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: Messages,\n                            useExisting: forwardRef(() => CustomMessagesComponent)\n                        }\n                    ],\n                    selector: 'kendo-dropdownlist-messages,kendo-combobox-messages,kendo-multicolumncombobox-messages,kendo-autocomplete-messages,kendo-multiselect-messages,kendo-dropdowntree-messages,kendo-multiselecttree-messages',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\nconst DEFAULT_FILTER_SETTINGS = {\n    caseSensitive: false,\n    operator: 'startsWith'\n};\n/**\n * Implements an event handler for the `filterChange` event of a DropDowns component\n * which performs simple data filtering.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-autocomplete\n *      [data]=\"data\"\n *      kendoDropDownFilter\n *      placeholder=\"e.g. Andorra\"\n *  >\n *  </kendo-autocomplete>\n * `\n * })\n * class AppComponent {\n *     public data: Array<string> = [\"Albania\", \"Andorra\", \"Armenia\", \"Austria\", \"Azerbaijan\"];\n * }\n * ```\n * > Currently, the built-in filtering does not work with [grouped data]({% slug api_kendo-data-query_groupby %}).\n */\nclass FilterDirective {\n    constructor(component) {\n        this.component = component;\n        /**\n         * @hidden\n         *\n         * Sets whether the filtering functionality is enabled on component init.\n         */\n        this.filterable = true;\n        this._data = [];\n    }\n    /**\n     * The initial data that will be used as a source array for the filtering operations.\n     */\n    set data(data) {\n        this._data = data || [];\n    }\n    get data() {\n        return this._data;\n    }\n    ngOnInit() {\n        this.component.filterable = this.filterable;\n        this.filterChangeSubscription = this.component.filterChange\n            .subscribe(this.handleFilterChange.bind(this));\n    }\n    ngOnDestroy() {\n        if (isPresent(this.filterChangeSubscription)) {\n            this.filterChangeSubscription.unsubscribe();\n        }\n    }\n    handleFilterChange(query) {\n        this.component.data = this.data.filter(item => this.matchesAnyField(item, query));\n    }\n    matchesAnyField(item, query) {\n        const normalizedQuery = this.normalizeValue(query);\n        const { fields } = this.filterSettings;\n        // if no filter fields are present, we are dealing with primitive data\n        if (fields.length === 0) {\n            return this.checkItem(item, normalizedQuery);\n        }\n        return fields.some(field => this.checkItem(getter(item, field), normalizedQuery));\n    }\n    checkItem(target, query) {\n        target = this.normalizeValue(target);\n        if (this.filterSettings.operator === 'contains') {\n            return target.indexOf(query) !== -1;\n        }\n        else {\n            return target.indexOf(query) === 0;\n        }\n    }\n    normalizeValue(value) {\n        const normalizedValue = isPresent(value) ? value.toString() : '';\n        return this.filterSettings.caseSensitive ? normalizedValue : normalizedValue.toLowerCase();\n    }\n    getFilterFields(providedFields) {\n        // ignore provided fields if the component deals with primitive data\n        if (!this.component.textField && !this.component.valueField) {\n            return [];\n        }\n        if (isArray(providedFields) && providedFields.length > 0) {\n            return providedFields;\n        }\n        else {\n            // the autocomplete uses `valueField` for text extraction\n            const textField = this.component.textField || this.component.valueField;\n            return [textField];\n        }\n    }\n    get filterSettings() {\n        const settings = this.rawSettings;\n        const providedFields = isPresent(settings) && typeof settings === 'object' ? settings.fields : [];\n        return Object.assign({}, DEFAULT_FILTER_SETTINGS, settings, { fields: this.getFilterFields(providedFields) });\n    }\n}\nFilterDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterDirective, deps: [{ token: FilterableComponent }], target: i0.ɵɵFactoryTarget.Directive });\nFilterDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: FilterDirective, selector: \"[kendoDropDownFilter]\", inputs: { data: \"data\", rawSettings: [\"kendoDropDownFilter\", \"rawSettings\"], filterable: \"filterable\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: FilterDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDropDownFilter]'\n                }]\n        }], ctorParameters: function () { return [{ type: FilterableComponent }]; }, propDecorators: { data: [{\n                type: Input\n            }], rawSettings: [{\n                type: Input,\n                args: ['kendoDropDownFilter']\n            }], filterable: [{\n                type: Input\n            }] } });\n\nconst SHARED_DIRECTIVES = [\n    HeaderTemplateDirective,\n    FooterTemplateDirective,\n    ItemTemplateDirective,\n    GroupTemplateDirective,\n    FixedGroupTemplateDirective,\n    NoDataTemplateDirective,\n    ValueTemplateDirective,\n    TagTemplateDirective,\n    GroupTagTemplateDirective,\n    LocalizedMessagesDirective,\n    CustomMessagesComponent,\n    FilterDirective,\n    FilterInputDirective\n];\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `ItemTemplateDirective`&mdash;The item template directive.\n * - `ValueTemplateDirective`&mdash;The value template directive.\n * - `HeaderTemplateDirective`&mdash;The header template directive.\n * - `FooterTemplateDirective`&mdash;The footer template directive.\n * - `NoDataTemplateDirective`&mdash;The noData template directive.\n * - `TagTemplateDirective`&mdash;The tag template directive.\n * - `SummaryTagTemplateDirective`&mdash;The summary tag template directive.\n */\nclass SharedDirectivesModule {\n}\nSharedDirectivesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedDirectivesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSharedDirectivesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedDirectivesModule, declarations: [HeaderTemplateDirective,\n        FooterTemplateDirective,\n        ItemTemplateDirective,\n        GroupTemplateDirective,\n        FixedGroupTemplateDirective,\n        NoDataTemplateDirective,\n        ValueTemplateDirective,\n        TagTemplateDirective,\n        GroupTagTemplateDirective,\n        LocalizedMessagesDirective,\n        CustomMessagesComponent,\n        FilterDirective,\n        FilterInputDirective], exports: [HeaderTemplateDirective,\n        FooterTemplateDirective,\n        ItemTemplateDirective,\n        GroupTemplateDirective,\n        FixedGroupTemplateDirective,\n        NoDataTemplateDirective,\n        ValueTemplateDirective,\n        TagTemplateDirective,\n        GroupTagTemplateDirective,\n        LocalizedMessagesDirective,\n        CustomMessagesComponent,\n        FilterDirective,\n        FilterInputDirective] });\nSharedDirectivesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedDirectivesModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedDirectivesModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [SHARED_DIRECTIVES],\n                    exports: [SHARED_DIRECTIVES]\n                }]\n        }] });\n\nconst INTERNAL_DIRECTIVES = [\n    ListComponent,\n    ListItemDirective,\n    SelectableDirective,\n    SearchBarComponent,\n    TemplateContextDirective,\n    TagListComponent,\n    CheckDirective,\n    CheckAllDirective\n];\n/**\n * @hidden\n */\nclass SharedModule {\n}\nSharedModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSharedModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedModule, declarations: [ListComponent,\n        ListItemDirective,\n        SelectableDirective,\n        SearchBarComponent,\n        TemplateContextDirective,\n        TagListComponent,\n        CheckDirective,\n        CheckAllDirective], imports: [CommonModule, FormsModule, ReactiveFormsModule, PopupModule, ResizeSensorModule, SharedDirectivesModule, EventsModule], exports: [ListComponent,\n        ListItemDirective,\n        SelectableDirective,\n        SearchBarComponent,\n        TemplateContextDirective,\n        TagListComponent,\n        CheckDirective,\n        CheckAllDirective, CommonModule, FormsModule, ReactiveFormsModule, PopupModule, ResizeSensorModule, SharedDirectivesModule, EventsModule] });\nSharedModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedModule, imports: [[CommonModule, FormsModule, ReactiveFormsModule, PopupModule, ResizeSensorModule, SharedDirectivesModule, EventsModule], CommonModule, FormsModule, ReactiveFormsModule, PopupModule, ResizeSensorModule, SharedDirectivesModule, EventsModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SharedModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [INTERNAL_DIRECTIVES],\n                    exports: [INTERNAL_DIRECTIVES, CommonModule, FormsModule, ReactiveFormsModule, PopupModule, ResizeSensorModule, SharedDirectivesModule, EventsModule],\n                    imports: [CommonModule, FormsModule, ReactiveFormsModule, PopupModule, ResizeSensorModule, SharedDirectivesModule, EventsModule]\n                }]\n        }] });\n\n/**\n * A directive which configures the MultiSelectTree to show one single summary tag for all selected data items.\n * When a number is provided, the summary tag is displayed after the given amount of data items are selected\n * ([more information and examples]({% slug api_dropdowns_multiselecttreesummarytagdirective %})).\n *\n * @example\n * ```ts-no-run\n * <kendo-multiselecttree kendoMultiSelectTreeSummaryTag [data]=\"data\"></kendo-multiselecttree>\n * ```\n *\n * @example\n * ```ts-no-run\n * <kendo-multiselecttree [kendoMultiSelectTreeSummaryTag]=\"2\" [data]=\"data\"></kendo-multiselecttree>\n * ```\n */\nclass MultiSelectTreeSummaryTagDirective {\n    constructor(multiSelectTreeComponent) {\n        this.multiSelectTreeComponent = multiSelectTreeComponent;\n        /**\n         * A numeric value that indicates the number of selected data items after which the summary tag will appear.\n         */\n        this.showAfter = 0;\n        this.createTagMapper();\n    }\n    ngOnChanges(changes) {\n        if (isPresent(changes.showAfter)) {\n            this.createTagMapper();\n            this.multiSelectTreeComponent.handleTagMapperChange(this.showAfter);\n        }\n    }\n    createTagMapper() {\n        const showAfter = parseNumber(this.showAfter);\n        this.multiSelectTreeComponent.tagMapper = (tags) => {\n            if (tags.length > showAfter) {\n                // tags provided in an array are rendered as a single group tag\n                return [...tags.slice(0, showAfter), tags.slice(showAfter)];\n            }\n            else {\n                return tags;\n            }\n        };\n    }\n}\nMultiSelectTreeSummaryTagDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MultiSelectTreeSummaryTagDirective, deps: [{ token: MultiSelectTreeComponent }], target: i0.ɵɵFactoryTarget.Directive });\nMultiSelectTreeSummaryTagDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: MultiSelectTreeSummaryTagDirective, selector: \"[kendoMultiSelectTreeSummaryTag]\", inputs: { showAfter: [\"kendoMultiSelectTreeSummaryTag\", \"showAfter\"] }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MultiSelectTreeSummaryTagDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoMultiSelectTreeSummaryTag]'\n                }]\n        }], ctorParameters: function () { return [{ type: MultiSelectTreeComponent }]; }, propDecorators: { showAfter: [{\n                type: Input,\n                args: ['kendoMultiSelectTreeSummaryTag']\n            }] } });\n\nconst DROPDOWNTREE_DIRECTIVES = [\n    DropDownTreeComponent,\n    MultiSelectTreeComponent,\n    DropDownTreeFlatBindingDirective,\n    DropDownTreeHierarchyBindingDirective,\n    MultiSelectTreeFlatBindingDirective,\n    MultiSelectTreeHierarchyBindingDirective,\n    DropDownTreesExpandDirective,\n    NodeTemplateDirective,\n    MultiSelectTreeSummaryTagDirective\n];\n/**\n * @hidden\n */\nclass DropDownTreesModule {\n}\nDropDownTreesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownTreesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDropDownTreesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownTreesModule, declarations: [DropDownTreeComponent,\n        MultiSelectTreeComponent,\n        DropDownTreeFlatBindingDirective,\n        DropDownTreeHierarchyBindingDirective,\n        MultiSelectTreeFlatBindingDirective,\n        MultiSelectTreeHierarchyBindingDirective,\n        DropDownTreesExpandDirective,\n        NodeTemplateDirective,\n        MultiSelectTreeSummaryTagDirective], imports: [SharedModule, TreeViewModule], exports: [DropDownTreeComponent,\n        MultiSelectTreeComponent,\n        DropDownTreeFlatBindingDirective,\n        DropDownTreeHierarchyBindingDirective,\n        MultiSelectTreeFlatBindingDirective,\n        MultiSelectTreeHierarchyBindingDirective,\n        DropDownTreesExpandDirective,\n        NodeTemplateDirective,\n        MultiSelectTreeSummaryTagDirective, SharedDirectivesModule] });\nDropDownTreesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownTreesModule, imports: [[SharedModule, TreeViewModule], SharedDirectivesModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownTreesModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [DROPDOWNTREE_DIRECTIVES],\n                    exports: [DROPDOWNTREE_DIRECTIVES, SharedDirectivesModule],\n                    imports: [SharedModule, TreeViewModule]\n                }]\n        }] });\n\n/**\n * A directive which configures the MultiSelect to show one single summary tag for all selected data items.\n * When a number is provided, the summary tag is displayed after the given amount of data items are selected\n * ([more information and examples]({% slug summarytagmode_multiselect %})).\n *\n * @example\n * ```ts-no-run\n * <kendo-multiselect kendoMultiSelectSummaryTag [data]=\"data\"></kendo-multiselect>\n * ```\n *\n * @example\n * ```ts-no-run\n * <kendo-multiselect [kendoMultiSelectSummaryTag]=\"2\" [data]=\"data\"></kendo-multiselect>\n * ```\n */\nclass SummaryTagDirective {\n    constructor(multiSelectComponent) {\n        this.multiSelectComponent = multiSelectComponent;\n        /**\n         * A numeric value that indicates the number of selected data items after which the summary tag will appear.\n         */\n        this.showAfter = 0;\n        this.createTagMapper();\n    }\n    ngOnChanges(changes) {\n        if (isPresent(changes.showAfter)) {\n            this.createTagMapper();\n            this.multiSelectComponent.onTagMapperChange();\n        }\n    }\n    createTagMapper() {\n        const showAfter = parseNumber(this.showAfter);\n        this.multiSelectComponent.tagMapper = (tags) => {\n            if (tags.length > showAfter) {\n                let result;\n                result = tags.slice(0, showAfter);\n                result.push(tags.slice(showAfter, tags.length));\n                return result;\n            }\n            else {\n                return tags;\n            }\n        };\n    }\n}\nSummaryTagDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SummaryTagDirective, deps: [{ token: MultiSelectComponent }], target: i0.ɵɵFactoryTarget.Directive });\nSummaryTagDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.16\", type: SummaryTagDirective, selector: \"[kendoMultiSelectSummaryTag]\", inputs: { showAfter: [\"kendoMultiSelectSummaryTag\", \"showAfter\"] }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SummaryTagDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoMultiSelectSummaryTag]'\n                }]\n        }], ctorParameters: function () { return [{ type: MultiSelectComponent }]; }, propDecorators: { showAfter: [{\n                type: Input,\n                args: ['kendoMultiSelectSummaryTag']\n            }] } });\n\nconst AUTOCOMPLETE_DIRECTIVES = [\n    AutoCompleteComponent\n];\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `AutoCompleteComponent`&mdash;The AutoComplete component class.\n * - `ItemTemplateDirective`&mdash;The item template directive.\n * - `HeaderTemplateDirective`&mdash;The header template directive.\n * - `FooterTemplateDirective`&mdash;The footer template directive.\n */\nclass AutoCompleteModule {\n}\nAutoCompleteModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: AutoCompleteModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAutoCompleteModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: AutoCompleteModule, declarations: [AutoCompleteComponent], imports: [SharedModule], exports: [AutoCompleteComponent, SharedDirectivesModule] });\nAutoCompleteModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: AutoCompleteModule, imports: [[SharedModule], SharedDirectivesModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: AutoCompleteModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [AUTOCOMPLETE_DIRECTIVES],\n                    exports: [AUTOCOMPLETE_DIRECTIVES, SharedDirectivesModule],\n                    imports: [SharedModule]\n                }]\n        }] });\n\nconst COMBOBOX_DIRECTIVES = [\n    ComboBoxComponent,\n    MultiColumnComboBoxComponent,\n    ComboBoxColumnComponent,\n    ColumnHeaderTemplateDirective,\n    ColumnCellTemplateDirective\n];\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `ComboBoxComponent`&mdash;The ComboBox component class.\n * - `MultiColumnComboBoxComponent`&mdash;The MultiColumnComboBox component class.\n * - `ItemTemplateDirective`&mdash;The item template directive.\n * - `HeaderTemplateDirective`&mdash;The header template directive.\n * - `FooterTemplateDirective`&mdash;The footer template directive.\n * - `ColumnHeaderTemplateDirective`&mdash;The column header template directive.\n * - `ColumnCellTemplateDirective`&mdash;The column cell template directive.\n */\nclass ComboBoxModule {\n}\nComboBoxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ComboBoxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nComboBoxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ComboBoxModule, declarations: [ComboBoxComponent,\n        MultiColumnComboBoxComponent,\n        ComboBoxColumnComponent,\n        ColumnHeaderTemplateDirective,\n        ColumnCellTemplateDirective], imports: [SharedModule], exports: [ComboBoxComponent,\n        MultiColumnComboBoxComponent,\n        ComboBoxColumnComponent,\n        ColumnHeaderTemplateDirective,\n        ColumnCellTemplateDirective, SharedDirectivesModule] });\nComboBoxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ComboBoxModule, providers: [{ provide: TOUCH_ENABLED, useValue: touchEnabled }], imports: [[SharedModule], SharedDirectivesModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: ComboBoxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [COMBOBOX_DIRECTIVES],\n                    exports: [COMBOBOX_DIRECTIVES, SharedDirectivesModule],\n                    imports: [SharedModule],\n                    providers: [{ provide: TOUCH_ENABLED, useValue: touchEnabled }]\n                }]\n        }] });\n\nconst DROPDOWNLIST_DIRECTIVES = [\n    DropDownListComponent\n];\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `DropDownListComponent`&mdash;The DropDownList component class.\n * - `ItemTemplateDirective`&mdash;The item template directive.\n * - `ValueTemplateDirective`&mdash;The value template directive.\n * - `HeaderTemplateDirective`&mdash;The header template directive.\n * - `FooterTemplateDirective`&mdash;The footer template directive.\n */\nclass DropDownListModule {\n}\nDropDownListModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDropDownListModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownListModule, declarations: [DropDownListComponent], imports: [SharedModule], exports: [DropDownListComponent, SharedDirectivesModule] });\nDropDownListModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownListModule, imports: [[SharedModule], SharedDirectivesModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownListModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [DROPDOWNLIST_DIRECTIVES],\n                    exports: [DROPDOWNLIST_DIRECTIVES, SharedDirectivesModule],\n                    imports: [SharedModule]\n                }]\n        }] });\n\nconst MULTISELECT_DIRECTIVES = [\n    MultiSelectComponent,\n    SummaryTagDirective,\n    CustomItemTemplateDirective\n];\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `MultiSelectComponent`&mdash;The MultiSelect component class.\n * - `SummaryTagDirective`&mdash;The MultiSelect summary tag directive.\n * - `ItemTemplateDirective`&mdash;The item template directive.\n * - `CustomItemTemplateDirective`&mdash;The custom item template directive.\n * - `TagTemplateDirective`&mdash;The tag template directive.\n * - `SummaryTagTemplateDirective`&mdash;The summary tag template directive.\n * - `HeaderTemplateDirective`&mdash;The header template directive.\n * - `FooterTemplateDirective`&mdash;The footer template directive.\n * - `NoDataTemplateDirective`&mdash;The no-data template directive.\n */\nclass MultiSelectModule {\n}\nMultiSelectModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MultiSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMultiSelectModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MultiSelectModule, declarations: [MultiSelectComponent,\n        SummaryTagDirective,\n        CustomItemTemplateDirective], imports: [SharedModule], exports: [MultiSelectComponent,\n        SummaryTagDirective,\n        CustomItemTemplateDirective, SharedDirectivesModule] });\nMultiSelectModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MultiSelectModule, providers: [{ provide: TOUCH_ENABLED, useValue: touchEnabled }], imports: [[SharedModule], SharedDirectivesModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: MultiSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [MULTISELECT_DIRECTIVES],\n                    exports: [MULTISELECT_DIRECTIVES, SharedDirectivesModule],\n                    imports: [SharedModule],\n                    providers: [{ provide: TOUCH_ENABLED, useValue: touchEnabled }]\n                }]\n        }] });\n\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Dropdowns components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Dropdowns module\n * import { DropDownsModule } from '@progress/kendo-angular-dropdowns';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare the app component\n *     imports:      [BrowserModule, DropDownsModule], // import the Dropdowns module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass DropDownsModule {\n}\nDropDownsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDropDownsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownsModule, exports: [AutoCompleteModule, ComboBoxModule, DropDownListModule, MultiSelectModule, DropDownTreesModule] });\nDropDownsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownsModule, imports: [AutoCompleteModule, ComboBoxModule, DropDownListModule, MultiSelectModule, DropDownTreesModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: DropDownsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [AutoCompleteModule, ComboBoxModule, DropDownListModule, MultiSelectModule, DropDownTreesModule]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutoCompleteComponent, AutoCompleteModule, CheckAllDirective, CheckDirective, ColumnCellTemplateDirective, ColumnHeaderTemplateDirective, ComboBoxColumnComponent, ComboBoxComponent, ComboBoxModule, CustomItemTemplateDirective, CustomMessagesComponent, DropDownListComponent, DropDownListModule, DropDownTreeComponent, DropDownTreeFlatBindingDirective, DropDownTreeHierarchyBindingDirective, DropDownTreesExpandDirective, DropDownTreesModule, DropDownsModule, FilterDirective, FilterInputDirective, FilterableComponent, FixedGroupTemplateDirective, FooterTemplateDirective, GroupTagTemplateDirective, GroupTemplateDirective, HeaderTemplateDirective, ItemTemplateDirective, ListComponent, ListItemDirective, LocalizedMessagesDirective, MultiColumnComboBoxComponent, MultiSelectComponent, MultiSelectModule, MultiSelectTreeComponent, MultiSelectTreeFlatBindingDirective, MultiSelectTreeHierarchyBindingDirective, MultiSelectTreeSummaryTagDirective, NoDataTemplateDirective, NodeTemplateDirective, PreventableEvent, RemoveTagEvent, SearchBarComponent, SelectableDirective, SharedDirectivesModule, SharedModule, SummaryTagDirective, TagListComponent, TagTemplateDirective, TemplateContextDirective, ValueTemplateDirective };\n\n"]},"metadata":{},"sourceType":"module"}